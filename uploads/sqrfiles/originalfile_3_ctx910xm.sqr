!***********************************************************************
!  CTX910XM: CANADA Magnetic Media Reporting - T4/T4A XML              *
!                                                                      *
!  Important: This is the new program for dnlding T4/T4A in XML format *
!             NOTE: "#IFDEF TAXTEST" in main SELECT is used for        *
!                   testing this report against DEMO database          *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/02/20:21:00:27                                 *
!       $Release:  HR9                                                 *
!    $Resolution:  694792                                              *
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !printer and page-size init
#Include 'ctxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure


!**********************************************************************!
begin-report
   do Initialize

   do Process-Main

#ifdef PRCSSCHD
   do StdAPI-Term
#endif

end-report

begin-heading 3
  #Include 'stdhdg01.sqc'
   print $CalYear           (3,,)      center
end-heading


!----------------------------------------------------------------------!
! Procedure: Initialize                                                !
! Descr:     Performs the application initializations.  Formats        !
!            variables, titles and parameters for use.  Calls the      !
!            procedures to get input parms.                            !
! Called by: Begin-Report                                              !
!----------------------------------------------------------------------!

begin-procedure Initialize
   do Init-DateTime
   do Init-Number
   do Get-Current-DateTime
   do Get-Calendar-Year-Id

 #ifdef PRCSSCHD
   do StdAPI-Init
 #endif

   do Get-Current-DateTime
   move '1' to $MMLZero
   move '1' to $Year4
   do Format-DateTime($AsOfToday, $910Date, {DEFYMD},'','')

   move $910Date to $AsOfYear xxxx   !extract the current year
   move $AsOfYear  to #AsOfYear
   move #AsOfYear  to #saveAsOfYear
   subtract 1    from #AsOfYear

   do Get-Can-Tax-Processing-Params

   move 'CTX910XM'              to $ReportID
   move &TX.Balance_Year        to $RptYear 9999
   move $RptYear                to $CalendarYr
   move $RptYear                to $RptYear ~~xx
   move $PeriodEndDate          to $AsOfDate

   move &TX.Balance_Year to $CalYear 9999
   let $AsOfDate = $CalYear || '1231'
   do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')

   if &TX.Balance_Year <> #AsOfYear and $Prcs_Process_Instance = ''
      display ''
      display 'Current Year is not one greater than Tax Reporting Year.'
      display 'Current Year is    ' noline
      display  #saveAsOfYear  9999
      display 'Tax Reporting Year ' noline
      display &TX.Balance_Year
      input $Answer maxlen=1 'Current Year is not one greater than Tax Reporting Year. Do you want to continue? (Y/N)'
      uppercase $Answer
      if $Answer <> 'Y'
         stop
      end-if
   end-if

   do Get-Report-Language         ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.
   move $Ctx910xm_Report_Title  to $ReportTitle

   move 200 to #RecordLength
   add 2 to #RecordLength

   let $xml_cntrl_begin = '<'
   let $xml_cntrl_end   = '>'
   let $xml_text_delim  = '"'
   let $xml_tag_end     = '/'
   let $xml_tag         = ''
   let $xml_content     = ''
   let $xml_output_line = ''

   let #outputfile      = 10
   let $FirstRecord     = 'N'
   let $WriteSummary    = 'N'

   let $FirstRecord_T4A = 'Y'
   do Array-Create

   do Initialize-OtherInfo-Array

   do Initialize-T4A-Footnote-Array

   if $PRCS_Process_Instance = ''
      do Prompts
   else
#ifdef PRCSSCHD
      do Select-Canadian-YrEnd-Parameters
      do Convert-Parameters
#endif
   end-if

   do Open-File

   do Initialize-Detail-T4
   do Initialize-Detail-T4A
   do Initialize-Summary-T4
   do Initialize-Summary-T4A

   display ''

   evaluate $Slip_type
      when = 'X'
         evaluate $Rpt_type
            when = 'O'
               display $Ctx910xm_Output_title1
               break
            when = 'A'
               display $Ctx910xm_Output_title2
               break
            when = 'N'
               display $Ctx910xm_Output_title3
               break
         end-evaluate
      break
      when = 'T'
         evaluate $Rpt_type
            when = 'O'
               display $Ctx910xm_Output_title4
               break
            when = 'A'
               display $Ctx910xm_Output_title5
               break
            when = 'N'
               display $Ctx910xm_Output_title6
               break
         end-evaluate
      break
      when = 'A'
         evaluate $Rpt_type
            when = 'O'
               display $Ctx910xm_Output_title7
               break
            when = 'A'
               display $Ctx910xm_Output_title8
               break
            when = 'N'
               display $Ctx910xm_Output_title9
               break
         end-evaluate
      break
   end-evaluate

end-procedure


!----------------------------------------------------------------------!
! Procedure: Report-Translation                                        !
! Descr:     This procedure is used to read language-dependent text    !
!            from the database.  Read from CTX910XM program id         !
! Called by: Get-Report-Language                                       !
!----------------------------------------------------------------------!

begin-procedure Report-Translation

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('CTX910XM', 'REPORT_TITLE'       , $Ctx910xm_Report_Title       , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'SUBMISSION_REF_ID'  , $Ctx910xm_Submission_Ref_ID  , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'BUS_NBR'            , $Ctx910xm_Bus_Nbr            , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'PRINT_DATA_MSG1'    , $Ctx910xm_Print_data_msg1    , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'PRINT_DATA_MSG2'    , $Ctx910xm_Print_data_msg2    , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'RPT_TYPE'           , $Ctx910xm_Rpt_Type           , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4_#SLIPS'          , $Ctx910xm_T4_#slips          , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4A_#SLIPS'         , $Ctx910xm_T4a_#slips         , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4_TOT_PEN_ADJ'     , $Ctx910xm_T4_tot_pen_adj     , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4_TOT_EE_CPP'      , $Ctx910xm_T4_tot_ee_cpp      , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4_TOT_EE_EI'       , $Ctx910xm_T4_tot_ee_ei       , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4_TOT_ER_CPP'      , $Ctx910xm_T4_tot_er_cpp      , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4_TOT_ER_EI'       , $Ctx910xm_T4_tot_er_ei       , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4_TOT_INC'         , $Ctx910xm_T4_tot_inc         , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4_TOT_INC_TAX'     , $Ctx910xm_T4_tot_inc_tax     , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4_TOT_RPP'         , $Ctx910xm_T4_tot_rpp         , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4A_TOT_PEN'        , $Ctx910xm_T4A_tot_pen        , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4A_TOT_LS'         , $Ctx910xm_T4A_tot_ls         , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4A_TOT_COM'        , $Ctx910xm_T4A_tot_com        , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4A_TOT_PTRNG'      , $Ctx910xm_T4A_tot_ptrng      , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4A_TOT_RPP'        , $Ctx910xm_T4A_tot_rpp        , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4A_TOT_ANN'        , $Ctx910xm_T4A_tot_ann        , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4A_TOT_OTH_INC'    , $Ctx910xm_T4A_tot_oth_inc    , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4A_TOT_ELG_RA'     , $Ctx910xm_T4A_tot_elg_ra     , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4A_TOT_NELG_RA'    , $Ctx910xm_T4A_tot_nelg_ra    , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4A_TOT_INC_TAX'    , $Ctx910xm_T4A_tot_inc_tax    , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4A_TOT_PEN_ADJ'    , $Ctx910xm_T4A_tot_pen_adj    , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4A_TOT_RESP_ACC'   , $Ctx910xm_T4A_tot_resp_acc   , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'T4A_TOT_RESP_EDU'   , $Ctx910xm_T4A_tot_resp_edu   , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'NEGATIVE_AMT_ERR1'  , $Ctx910xm_Negative_amt_err1  , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'NEGATIVE_AMT_ERR2'  , $Ctx910xm_Negative_amt_err2  , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'NEGATIVE_AMT_ERR3'  , $Ctx910xm_Negative_amt_err3  , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'SUMMARY_COUNT_ERR1' , $Ctx910xm_Summary_count_err1 , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'SUMMARY_COUNT_ERR2' , $Ctx910xm_Summary_count_err2 , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'SUMMARY_COUNT_ERR3' , $Ctx910xm_Summary_count_err3 , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'SUMMARY_COUNT_ERR4' , $Ctx910xm_Summary_count_err4 , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'NO_SLIPS_PROCESSED' , $Ctx910xm_No_slips_processed , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'SUMMARY_COUNT'      , $Ctx910xm_Summary_count      , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'OUTPUT_TITLE1'      , $Ctx910xm_Output_title1      , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'OUTPUT_TITLE2'      , $Ctx910xm_Output_title2      , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'OUTPUT_TITLE3'      , $Ctx910xm_Output_title3      , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'OUTPUT_TITLE4'      , $Ctx910xm_Output_title4      , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'OUTPUT_TITLE5'      , $Ctx910xm_Output_title5      , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'OUTPUT_TITLE6'      , $Ctx910xm_Output_title6      , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'OUTPUT_TITLE7'      , $Ctx910xm_Output_title7      , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'OUTPUT_TITLE8'      , $Ctx910xm_Output_title8      , #dummy_width)
   do Get_Field_Information ('CTX910XM', 'OUTPUT_TITLE9'      , $Ctx910xm_Output_title9      , #dummy_width)

end-procedure


!----------------------------------------------------------------------!
! Procedure: Open-Files                                                !
! Descr:     Open file and check status                                !
! Called by: Initialize                                                !
!----------------------------------------------------------------------!

begin-procedure Open-File

#ifdef MPE
   let $feq='FILE CTXXM.XML; REC=-200,,F,ASCII'
   call system using $feq #status
   open 'CTXXM.XML' as 10 for-writing record=200:vary
#else
   open '{IMPORTPREFIX}CTXXM{IMPORTSUFFIX}' as 10 for-writing record=200:vary
#endif

end-procedure

!----------------------------------------------------------------------!
! Procedure: Array-Create                                              !
! Descr:     Builds the working arrays for the tax forms               !                                                                      !
! Called by: Initialize                                                !
!----------------------------------------------------------------------!

begin-procedure Array-Create

   create-array name=OtherInfo size=40   -
      field=OtherInfo_Box_Num:char       -
      field=OtherInfo_Box_Amt:number


   create-array name=T4A_Footnote size=50 -
      field=T4A_Footnote_Bx:char          -
      field=T4A_Footnote_Cnt:number
end-procedure


begin-procedure Initialize-T4A-Footnote-Array

  move 0   to #i
  move ' ' to $FootNoteBx
  move 0   to #FootNoteCnt
  move 50  to #max_FootNote

  while #i < #max_FootNote

    put $FootNoteBx #FootNoteCnt into T4A_Footnote(#i)
        T4A_Footnote_Bx T4A_Footnote_Cnt

    add 1 to #i

  end-while

end-procedure


!----------------------------------------------------------------------!
! Procedure: Initialize-OtherInfo-Array                                !
! Descr:     Initializes the arrays for the tax forms                  !                                                                      !
! Called by: Initialize                                                !
!----------------------------------------------------------------------!

begin-procedure Initialize-OtherInfo-Array

   move 0 to #load
   move 0 to #loadamt
   move ' ' to $loadspace
   while #load < 40

      put $loadspace #loadamt into OtherInfo(#load)
          OtherInfo_Box_Num OtherInfo_Box_Amt

      add 1 to #load

   end-while

end-procedure


!----------------------------------------------------------------------!
! Procedure: Process-Main                                              !
! Descr:     Drive paragraph for this program.  Writes the transmitter !
!            record.  Depending on the Slip Type chosen, reads the     !
!            appropriate tax records.  Closes the output file.         !
!            Increments the Submission Reference ID.                   !
! Called by: Begin-Report                                              !
!----------------------------------------------------------------------!

begin-procedure Process-Main

   do Write-Transmitter-Record

   if #SummaryCounter > 0

      evaluate $Slip_type
         when = 'X'
            if #SummaryCounter_T4 > 0
               let $Slip_type = 'T'

               do Read-Tax-Records
            end-if

            if #SummaryCounter_T4A > 0
               let $Slip_type = 'A'

               do Read-Tax-Records
            end-if

            break

         when = 'T'
            let $Slip_type = 'T'

            do Read-Tax-Records

            break
         when = 'A'
            let $Slip_type = 'A'

            do Read-Tax-Records

            break

      end-evaluate

   else

      let $xml_tag = 'Return'
      do Process-XML-Tag-Beg

      let $xml_tag = 'Return'
      do Process-XML-Tag-End

      display $Ctx910xm_No_slips_processed
      display ''

   end-if

   let $xml_tag = 'Submission'
   do Process-XML-Tag-End

   close 10

   do Error-Report-Summary-Count

   do Upd-Submission-Ref-ID

end-procedure


!----------------------------------------------------------------------!
! Procedure: Read-Tax-Records                                          !
! Descr:     Reads the records from PS_CAN_YE_EMPL and PS_CAN_YE_SLIP. !
!            Calls procedure to process the selected records.          !
! Called by: Process-Main                                              !
!----------------------------------------------------------------------!
begin-procedure Read-Tax-Records

begin-SELECT
S.COMPANY
S.REPORTING_ID
S.WAGE_LOSS_PLAN
S.PROVINCE
S.SEQUENCE_NUMBER
S.TAXFORM_ID
S.UI_EXEMPT
S.EMPLOYMENT_CODE
S.YE_SLIP_PROCESS
E.EMPLID
E.SIN
E.SLIP_SURNAME
E.SLIP_FIRST_NAME
E.SLIP_INITIAL
E.ADDRESS1
E.ADDRESS2
E.CITY
E.PROVINCE
E.COUNTRY
E.POSTAL
E.DECEASED

  if &S.YE_SLIP_PROCESS = 'N'
     let $Ye_slip_process_sel = 'O'
  else
     let $Ye_slip_process_sel = &S.YE_SLIP_PROCESS
  end-if

  if $Slip_type = 'T'

      if $Proc_Amend_Cancel = 'Y'
         do Check-Status-T4
      end-if

      do Process-T4-Records

   else

      if $Proc_Amend_Cancel = 'Y'
         do Check-Status-T4A
      end-if

      do Process-T4A-Records

   end-if

FROM PS_CAN_YE_EMPL  E,
     PS_CAN_YE_SLIP  S
WHERE E.CALENDAR_YEAR = &TX.Balance_Year
  AND S.CALENDAR_YEAR = &TX.Balance_Year
  AND S.TAXFORM_ID = $Slip_type
  AND S.COMPANY = E.COMPANY
  AND E.EMPLID = S.EMPLID
  AND E.SEQUENCE_NUMBER = S.SEQUENCE_NUMBER
  AND S.SEQUENCE_NUMBER = (SELECT MAX(S1.SEQUENCE_NUMBER)
               FROM PS_CAN_YE_SLIP S1
               WHERE S1.COMPANY = S.COMPANY
                 AND S1.EMPLID  = S.EMPLID
                 AND S1.CALENDAR_YEAR = S.CALENDAR_YEAR
                 AND S1.TAXFORM_ID    = S.TAXFORM_ID
#ifdef MVS
 \$seq_number\
#else
 [$seq_number]
#endif
#ifdef MVS
 \$ye_slip_process\
#else
 [$ye_slip_process]
#endif
ORDER BY S.REPORTING_ID ASC, E.SLIP_SURNAME ASC,
                        E.SLIP_FIRST_NAME ASC, E.EMPLID ASC
end-SELECT

   if rtrim(&S.Taxform_ID, ' ') = 'A'
     if $FoundNegative = 'N'
       do Get-Box38
       do Write-T4A-Record
       do Save-Summary-Record
     else
       do Error-Report
       do Initialize-Detail-T4A
     end-if
   end-if
   do Write-Summary-Record

end-procedure


!----------------------------------------------------------------------!
! Procedure: Process-T4-Records                                        !
! Descr:     Further processing for T4 records.   Saves employee       !
!            details.  Checks for negative amount and UI Earnings.     !
!            Writes valid records to the file.                         !
! Called by: Process-Main                                              !
!----------------------------------------------------------------------!
begin-procedure Process-T4-Records

   if $StatusOpen = 'Y'

      do Save-Employee-Data

      if $FirstRecord = 'Y' and $WriteSummary = 'Y'
          do Write-Summary-Record
      end-if

      let #SaveBox14 = 0
      let $UIEarnFound = 'N'

      do Check-For-Negative-Amt

      if $FoundNegative = 'N'
         do Get-Detail-Data
         do Accumulate-ER-UI-Prem

         if $UIEarnFound = 'N' and
            $UIExempt <> '1'
             do Check-UI-Earnings
         end-if

         if $OtherInfoBxFnd = 'N'
             do Write-T4-Record
         else
            if $MoreThan6Bx = 'N'
                do Write-T4-Record
            else
                do Write-T4-Record
                do Process-Additional-T4
            end-if
         end-if
      else
         do Error-Report
         do Initialize-Detail-T4
      end-if

      do Save-Summary-Record

   end-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: Check-UI-Earnings                                         !
! Descr:     Determines UI Earnings based on CAN_TAX_BALANCE record.   !
! Called by: Process-T4-Records                                        !
!----------------------------------------------------------------------!
begin-procedure Check-UI-Earnings

   let #RoundUIEarnings = 0
   let #RoundSaveBox14  = 0
   let #BoxAmt          = 0

begin-SELECT
C.TXGRS_YTD

   if &C.TXGRS_YTD <> 0

      do PS_SQR_Round(&C.TXGRS_YTD, 2 , #RoundUIEarnings)
      do PS_SQR_Round(#SaveBox14, 2, #RoundSaveBox14)

      if #RoundUIEarnings = #RoundSaveBox14
         move #SaveBox14 to #BoxAmt
         move #BoxAmt to   #UIEarnings
      end-if
   end-if

FROM PS_CAN_TAX_BALANCE C
WHERE C.COMPANY = &S.Company
  AND C.EMPLID = &E.Emplid
  AND C.WAGE_LOSS_PLAN = &S.Wage_Loss_Plan
  AND C.BALANCE_ID = $Calendar_Year_Id
  AND C.BALANCE_YEAR = &TX.Balance_Year
  AND C.PROVINCE = &S.PROVINCE
  AND C.TAX_CLASS_CAN = 'EIE'
  AND C.BALANCE_PERIOD         =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_CAN_TAX_BALANCE
       WHERE  EMPLID        = C.EMPLID
         AND  COMPANY       = C.COMPANY
         AND  BALANCE_ID    = C.BALANCE_ID
         AND  BALANCE_YEAR  = C.BALANCE_YEAR
         AND  PROVINCE      = C.PROVINCE
         AND  WAGE_LOSS_PLAN = C.WAGE_LOSS_PLAN
         AND  TAX_CLASS_CAN = C.TAX_CLASS_CAN)

end-SELECT

end-procedure


!----------------------------------------------------------------------!
! Procedure: Save-Employee-Data                                        !
! Descr:     Formats and stores the basic employee information for     !
!            further processing                                        !
! Called by: Process-T4-Records                                        !
!            Process-T4A-Records                                       !
!----------------------------------------------------------------------!
begin-procedure Save-Employee-Data

   if &S.Company <> $PriorCompany
      move &S.Company to $Company
      do Get-Company-Data
      move &CT.Descr to $CompanyName
   end-if
   move &S.Company to $PriorCompany

   move &S.Reporting_ID to $ReportingID

   move &S.Taxform_ID to $TaxformID

   move &S.Wage_Loss_Plan to $WageLossPlan

   if &S.UI_Exempt = 'Y'
      move '1' to $UIExempt
   end-if

   if ($ReportingID <> $ReportingID_Prior)    or
      ($TaxformID <> $TaxformID_Prior)
      move &S.Reporting_ID to $ReportingID_Prior
      move &S.TAXFORM_ID   to $TaxformID_Prior
      move 'Y' to $FirstRecord
   else
      move 'N' to $FirstRecord
   end-if

   move &E.SLIP_Surname to $E_Surname
   let $string_in = substr($E_Surname, 1, 20)
   do convert-special-chars
   let $E_Surname = $string_out

   move &E.SLIP_First_Name to $E_FirstName
   let $string_in = substr($E_Firstname, 1, 12)
   do convert-special-chars
   let $E_Firstname = $string_out

   move &E.SLIP_Initial to $E_Initial

   move &E.SIN to $SIN
   if  rtrim($SIN, ' ') = '' OR
       rtrim($SIN, ' ') = '999999999'
      move '000000000' to $SIN
   end-if

   move &E.EmplID to $EmplID

   move &E.Address1 to $E_Street
   let $string_in = substr($E_Street, 1, 30)
   do convert-special-chars
   let $E_Street = $string_out

   move &E.Address2 to $E_Street2
   let $string_in = substr($E_Street2, 1, 30)
   do convert-special-chars
   let $E_Street2 = $string_out

   move &E.City to $E_City
   let $string_in = substr($E_City, 1, 28)
   do convert-special-chars
   let $E_City = $string_out

   let $E_Province = rtrim(&E.Province, ' ')
   let $E_Country = substr(&E.Country, 1, 3)
   let $WorkProvince = rtrim(&S.Province, ' ')

   if $E_Country = 'CAN'
      move &E.POSTAL to $PostalCd
      do Check-Postal-Code
      move $PostalCd to $E_PostalCode
   else
      move &E.Postal to $E_PostalCode
   end-if

   if rtrim(&S.Employment_Code, ' ') <> ''
      move &S.Employment_Code to $E_EmploymentCode
   end-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: Check-For-Negative-Amt                                    !
! Descr:     Ensures that amount fields contain a positive value.      !
!            If not, it sets $FoundNegative to Y.                      !
!            further processing                                        !
! Called by: Process-T4-Records                                        !
!            Process-T4A-Records                                       !
!----------------------------------------------------------------------!

begin-procedure Check-For-Negative-Amt

   let $FoundNegative = 'N'

begin-SELECT
NA.BOX
NA.CAN_YE_BOX_AMT

   if &NA.CAN_YE_BOX_AMT < 0
      move 'Y' to $FoundNegative
   end-if

FROM PS_CAN_YE_DETAIL  NA
WHERE NA.COMPANY = &S.Company
  AND NA.EMPLID  = &E.EmplID
  AND NA.CALENDAR_YEAR = &TX.Balance_Year
  AND NA.SEQUENCE_NUMBER = &S.Sequence_Number
  AND NA.TAXFORM_ID = &S.TAXFORM_ID
  AND NA.WAGE_LOSS_PLAN = &S.Wage_Loss_Plan
  AND NA.PROVINCE = &S.Province

end-SELECT

end-procedure


!----------------------------------------------------------------------!
! Procedure: Get-Detail-Data                                           !
! Descr:     Retrieves data from CAN_YE_DETAIL for further processing  !
! Called by: Process-T4-Records                                        !
!            Process-T4A-Records                                       !
!----------------------------------------------------------------------!

begin-procedure Get-Detail-Data

   let #NumOfOtherInfo    = 0
   let #OtherInfoBoxCount = 0
   let #OtherInfo_i       = 0
   let $MoreThan6Bx       = 'N'
   let $OtherInfoBxFnd    = 'N'

begin-SELECT
D.BOX
D.CAN_YE_BOX_TEXT
D.CAN_YE_BOX_AMT

   if $Slip_type = 'T'
      do Save-T4-Detail-Data
      do Process-Other-Info-Box
   else
      do Save-T4A-Detail-Data
   end-if

FROM PS_CAN_YE_DETAIL  D
WHERE D.COMPANY = &S.Company
  AND D.EMPLID  = &E.EmplID
  AND D.CALENDAR_YEAR = &TX.Balance_Year
  AND D.SEQUENCE_NUMBER = &S.Sequence_Number
  AND D.TAXFORM_ID = $Slip_type
  AND D.WAGE_LOSS_PLAN = &S.Wage_Loss_Plan
  AND D.PROVINCE = &S.Province
ORDER BY D.BOX ASC

end-SELECT

end-procedure

!----------------------------------------------------------------------!
! Procedure: Save-T4-Detail-Data                                       !
! Descr:     Formats and stores the T4 data for further processing.    !
!            Accumulate summary totals if Original/Amended/Cancelled   !
!            slips.                                                    !
! Called by: Get-Detail-Data                                           !
!----------------------------------------------------------------------!

begin-procedure Save-T4-Detail-Data

   let $Box = RTRIM(&D.Box, ' ')

   if $Box = '28c' or $Box = '28C' or
      $Box = '28q' or $Box = '28Q'
      move '1' to $CPPExempt
   end-if

   if $Box = '28P' or $Box = '28p'
     move '1' to $PPIPExempt
   end-if

   if $Box = '50'
      let $PensionPlanID = RTRIM(&D.CAN_YE_Box_Text, ' ')
   end-if


   let #BoxAmt =  &D.CAN_YE_Box_Amt

   if #BoxAmt > 0 and $FoundNegative = 'N'

      evaluate $Box

         when = '14'
            let #TotIncome = #BoxAmt
            let #SaveBox14 = #BoxAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
                add #BoxAmt to #SumTotIncome
            end-if

         when = '16'
            let #CPPContrib = #BoxAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumCPPContrib
               add #BoxAmt to #SumErCPPContrib
            end-if

         when = '17'
            let #QPPContrib = #BoxAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumQPPContrib
            end-if

         when = '18'
            let #UIPrem = #BoxAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumUIPrem
            end-if

         when = '20'
            let #RPPContrib = #BoxAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumRPPContrib
            end-if

         when = '22'
            let #IncomeTax = #BoxAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumIncomeTax
            end-if

         when = '24'
            let #UIEarnings = #BoxAmt

            move 'Y' to $UIEarnFound

         when = '26'
            let #CPPEarnings = #BoxAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumCPPEarnings
            end-if

         when = '44'
            let #UnionDues = #BoxAmt

         when = '46'
            let #Charity = #BoxAmt

         when = '52'
            let #BoxAmt = trunc(#BoxAmt, 0)
            let #PensionAdj = #BoxAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumPensionAdj
            end-if

         when = '55'
            let #PPIPPrem     = #BoxAmt

         when = '56'
            let #PPIPInsEarns = #BoxAmt

      end-evaluate
   end-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: Process-Other-Info-Box                                    !
! Descr:     Checks if Other Info Amount fields in the T4 slip are     !
!            populated.  If they are, pass the data to the             !
!            Process-Other-Info-Amt procedure.                         !
! Called by: Get-Detail-Data                                           !
!----------------------------------------------------------------------!

begin-procedure Process-Other-Info-Box

   let $Box = RTRIM(&D.Box, ' ')

   let #BoxAmt = &D.CAN_YE_Box_Amt

   if #BoxAmt > 0 and $FoundNegative = 'N'
      evaluate $Box

         when = '30'
         when = '31'
         when = '32'
         when = '33'
         when = '34'
         when = '35'
         when = '36'
         when = '37'
         when = '38'
         when = '39'
         when = '40'
         when = '41'
         when = '42'
         when = '43'
         when = '53'
         when = '70'
         when = '71'
         when = '72'
         when = '73'
         when = '74'
         when = '75'
         when = '76'
         when = '77'
         when = '78'
         when = '79'
         when = '80'
         when = '97'
         when = '98'
         when = '99'

            do Process-Other-Info-Amt

         when-other
            break
      end-evaluate
   end-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: Process-Other-Info-Amt                                    !
! Descr:     Checks the content of each Other Info data for the first  !
!            six (6) fields and calls Determine-Other-Info procedure.  !
!            For data over the 6th field, it calls Save-T4-OtherInfoBx !
! Called by: Process-Other-Info-Box                                    !
!----------------------------------------------------------------------!

begin-procedure Process-Other-Info-Amt

   let $OtherInfoBxFnd    = 'Y'

   if #OtherInfoBoxCount  = 6
      let $MoreThan6Bx = 'Y'
   end-if

   evaluate #OtherInfoBoxCount
      when = 0
         do Determine-Other-Info
      when = 1
         do Determine-Other-Info
      when = 2
         do Determine-Other-Info
      when = 3
         do Determine-Other-Info
      when = 4
         do Determine-Other-Info
      when = 5
         do Determine-Other-Info
      when-other
         do Save-T4-OtherInfoBx
   end-evaluate

   add 1 to #OtherInfoBoxCount

end-procedure

!----------------------------------------------------------------------!
! Procedure: Determine-Other-Info                                      !
! Descr:     Classifies the Other Info Box and formats the appropriate !
!            variable.                                                 !
! Called by: Process-Other-Info-Amt                                    !
!            Process-Additional-T4                                     !
!----------------------------------------------------------------------!
begin-procedure Determine-Other-Info

   evaluate $Box

      when = '30'
         let #HmBrdLodgAmt = #BoxAmt

      when = '31'
         let #SpclWrkSiteAmt = #BoxAmt

      when = '32'
         let #PrscbZnTrvlAmt = #BoxAmt

      when = '33'
         let #MedTrvlAmt = #BoxAmt

      when = '34'
         let #PrsnlVhclAmt = #BoxAmt

      when = '35'
         let #RsnPerKmAmt = #BoxAmt

      when = '36'
         let #LowIntLoanAmt = #BoxAmt

      when = '37'
         let #EmpeHmLoanAmt = #BoxAmt

      when = '97'
         let #StokOptBenAmt = #BoxAmt

      when = '38'
         let #StokOptAmt = #BoxAmt

      when = '98'
         let #ShrOptDBenAmt = #BoxAmt

      when = '39'
         let #ShrOptDAmt = #BoxAmt

      when = '40'
         let #OthTxBenAmt = #BoxAmt

      when = '99'
         let #ShrOptD1BenAmt = #BoxAmt

      when = '41'
         let #ShrOptD1Amt = #BoxAmt

      when = '42'
         let #EmptCmsnAmt = #BoxAmt

      when = '43'
         let #CfppaAmt = #BoxAmt

      when = '53'
         let #DfrStokOptAmt = #BoxAmt

      when = '70'
         let #MunOfcrExamt = #BoxAmt

      when = '71'
         let #IndnEmpeAmt = #BoxAmt

      when = '72'
         let #OcIncamt = #BoxAmt

      when = '73'
         let #OcDyCnt = #BoxAmt

      when = '74'
         let #Pr90CntrbrAmt = #BoxAmt

      when = '75'
         let #Pr90NcntrbrAmt = #BoxAmt

      when = '77'
         let #CmpnRpayEmprAmt = #BoxAmt

      when = '78'
         let #FishGroErnAmt = #BoxAmt

      when = '79'
         let #FishNetPtnrAmt = #BoxAmt

      when = '80'
         let #FishShrPrsnAmt = #BoxAmt


   end-evaluate

end-procedure

!----------------------------------------------------------------------!
! Procedure: Save-T4-OtherInfoBx                                       !
! Descr:     Copies Box and Amt information into the OtherInfo array   !
! Called by: Process-Other-Info-Amt                                    !
!----------------------------------------------------------------------!
begin-procedure Save-T4-OtherInfoBx

   put $Box #BoxAmt into OtherInfo(#OtherInfo_i)
       OtherInfo_Box_Num OtherInfo_Box_Amt

   add 1 to #OtherInfo_i

end-procedure

!----------------------------------------------------------------------!
! Procedure: Process-Additional-T4                                     !
! Descr:     Formats the T4 slip record if the Other Info Data spans   !
!            more than one slip.                                       !
! Called by: Process-T4-Records                                        !
!----------------------------------------------------------------------!
begin-procedure Process-Additional-T4

   let #j = 0

   let #OtherInfoCount = 0

   while #j < #OtherInfo_i
      get $OtherInfo_Box_Num #OtherInfo_Box_Amt from OtherInfo(#j)
        OtherInfo_Box_Num OtherInfo_Box_Amt

      evaluate #j
         when = 0
         when = 6
         when = 12
         when = 18
         when = 24
         when = 30
         when = 36
            move 0  to #NumOfOtherInfo
            move  $OtherInfo_Box_Num to  $Box
            move   #OtherInfo_Box_Amt to #BoxAmt
            do Determine-Other-Info
         when = 1
         when = 7
         when = 13
         when = 19
         when = 25
         when = 31
         when = 37
            move 1  to #NumOfOtherInfo
            move  $OtherInfo_Box_Num to  $Box
            move   #OtherInfo_Box_Amt to #BoxAmt
            do Determine-Other-Info
         when = 2
         when = 8
         when = 14
         when = 20
         when = 26
         when = 32
         when = 38
            move 2  to #NumOfOtherInfo
            move  $OtherInfo_Box_Num to  $Box
            move   #OtherInfo_Box_Amt to #BoxAmt
            do Determine-Other-Info
         when = 3
         when = 9
         when = 15
         when = 21
         when = 27
         when = 33
         when = 39
            move 3  to #NumOfOtherInfo
            move  $OtherInfo_Box_Num to  $Box
            move   #OtherInfo_Box_Amt to #BoxAmt
            do Determine-Other-Info
         when = 4
         when = 10
         when = 16
         when = 22
         when = 28
         when = 34
            move 4  to #NumOfOtherInfo
            move  $OtherInfo_Box_Num to  $Box
            move   #OtherInfo_Box_Amt to #BoxAmt
            do Determine-Other-Info
         when = 5
         when = 11
         when = 17
         when = 23
         when = 29
         when = 35
            move 5  to #NumOfOtherInfo
            move  $OtherInfo_Box_Num to  $Box
            move   #OtherInfo_Box_Amt to #BoxAmt
            do Determine-Other-Info
         when-other
            break

      end-evaluate

      add 1 to #OtherInfoCount

      if #NumOfOtherInfo = 5
         do Set-Employee-Info
         do Write-T4-Record
      end-if

      add 1 to #j

   end-while

   let #Count = mod(#OtherInfoCount,6)

   if #Count <> 0

      do Set-Employee-Info

      do Write-T4-Record

   end-if

   do Initialize-OtherInfo-Array

end-procedure

!----------------------------------------------------------------------!
! Procedure: Set-Employee-Info                                         !
! Descr:     Stores the basic employee information for further         !
!            processing                                                !
! Called by: Process-T4-Records                                        !
!----------------------------------------------------------------------!

begin-procedure Set-Employee-Info

   move $Save_E_Surname        to $E_Surname
   move $Save_E_FirstName      to $E_FirstName
   move $Save_E_Initial        to $E_Initial
   move $Save_E_Street         to $E_Street
   move $Save_E_Street2        to $E_Street2
   move $Save_E_City           to $E_City
   move $Save_E_Province       to $E_Province
   move $Save_E_Country        to $E_Country
   move $Save_E_PostalCode     to $E_PostalCode
   move $Save_WorkProvince     to $WorkProvince
   move $Save_EmplID           to $EmplID
   move $Save_SIN              to $SIN
   move $Save_E_EmploymentCode to $E_EmploymentCode

end-procedure


!----------------------------------------------------------------------!
! Procedure: Accumulate-ER-UI-Prem                                     !
! Descr:     Add Employer UI Premium to summary field, include only    !
!            Original and Amend slips.                                 !
! Called by: Process-T4-Records                                        !
!----------------------------------------------------------------------!

begin-procedure Accumulate-ER-UI-Prem

begin-SELECT
ER.TAX_YTD

   if $Ye_slip_process_sel = 'O' or
      $Ye_slip_process_sel = 'A' or
      $Ye_slip_process_sel = 'C'
      add &ER.Tax_Ytd to #SumErUIPrem
   end-if

FROM  PS_CAN_TAX_BALANCE ER
WHERE ER.EMPLID         = &E.EmplID
  AND ER.COMPANY        = &S.Company
  AND ER.BALANCE_ID     = $Calendar_Year_Id
  AND ER.BALANCE_YEAR   = &TX.Balance_Year
  AND ER.WAGE_LOSS_PLAN = &S.Wage_Loss_Plan
  AND ER.PROVINCE       = &S.Province
  AND ER.TAX_CLASS_CAN  = 'EIR'
  AND ER.BALANCE_PERIOD         =
      (SELECT MAX(ER1.BALANCE_PERIOD)
       FROM   PS_CAN_TAX_BALANCE ER1
       WHERE  ER1.EMPLID         = ER.EMPLID
         AND  ER1.COMPANY        = ER.COMPANY
         AND  ER1.BALANCE_ID     = ER.BALANCE_ID
         AND  ER1.BALANCE_YEAR   = ER.BALANCE_YEAR
         AND  ER1.WAGE_LOSS_PLAN = ER.WAGE_LOSS_PLAN
         AND  ER1.PROVINCE       = ER.PROVINCE
         AND  ER1.TAX_CLASS_CAN  = ER.TAX_CLASS_CAN)
end-SELECT

end-procedure


!----------------------------------------------------------------------!
! Procedure: Process-T4A-Records                                       !
! Descr:     Further processing for T4A records.   Saves employee      !
!            details.  Checks for negative amount and footnote data.   !
!            Writes valid records to the file.                         !
! Called by: Process-Main                                              !
!----------------------------------------------------------------------!

begin-procedure Process-T4A-Records

   if $StatusOpen = 'Y'

      do Check-For-Negative-Amt

      if (&E.EmplID <> $EmplID and
        $FirstRecord_T4A <> 'Y') or
       (&S.Reporting_ID <> $ReportingID and
        $FirstRecord_T4A <> 'Y')

        if $FoundNegative = 'N'
           do Get-Box38
         do Write-T4A-Record
      else
         do Error-Report
         do Initialize-Detail-T4A
      end-if
      end-if

      do Save-Summary-Record

      if (&S.Reporting_ID  <> $ReportingID or &S.Taxform_ID <> $TaxformID)
        and $WriteSummary = 'Y'
         do Write-Summary-Record
      end-if

      let $FirstRecord_T4A = 'N'
      do Save-Employee-Data
      do Get-Detail-Data
   end-if

end-procedure


begin-procedure Process-Footnote-Count

  let #one = 1

  move 0 to #i

  while #i < #max_FootNote

    get $FootNoteBx #T4A_Footnote_Cnt from T4A_Footnote(#i)
        T4A_Footnote_Bx T4A_Footnote_Cnt

    if rtrim($FootNoteBx, ' ') = ''                             !if array entry is empty
      put $Box #one into T4A_Footnote(#i)
          T4A_Footnote_Bx T4A_Footnote_Cnt
          add 1 to #FNCount
      break
    else
      if rtrim($FootNoteBx, ' ') = rtrim($Box, ' ')             !if array entry match
        break
      end-if
    end-if

    add 1 to #i
  end-while

end-procedure


!----------------------------------------------------------------------!
! Procedure: Get-Box38                                                 !
! Descr:     Set Box38 Code and Description depending on number of     !
!            footnotes on the T4A slip.                                !
! Called by: Process-T4A-Records                                       !
!----------------------------------------------------------------------!
begin-procedure Get-Box38

   if #FNCount > 1
      move '13' to $Box38Code
      move 'MULTIPLE FOOTNOTES' to $FNDescr
   else
      if #FNCount = 0
         move '00' to $Box38Code
      else
         do Find-Box-Descr
      end-if
   end-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: Find-Box-Descr                                            !
! Descr:     Retrieve Box Note Code and Text from PS_TAXFORM_NOTES     !
! Called by: Get-Box38                                                 !
!----------------------------------------------------------------------!
begin-procedure Find-Box-Descr

begin-SELECT
FN.BOX_NOTE_CD
FN.BOX_NOTE_TEXT

   move &FN.Box_Note_Cd to $Box38Code
   move &FN.Box_Note_Text to $FNDescr

FROM PS_TAXFORM_NOTES  FN
WHERE BOX = $SaveBox
  AND TAXFORM_ID = 'A'
  AND  EFFDT = (SELECT MAX(EFFDT)
                FROM PS_TAXFORM_BOX
                WHERE TAXFORM_ID = 'A'
                  AND BOX = $SaveBox
                  AND EFFDT <= $AsOfDate)
end-SELECT

end-procedure


!----------------------------------------------------------------------!
! Procedure: Save-T4A-Detail-Data                                      !
! Descr:     Formats and stores the T4A data for further processing.   !
!            Accumulate summary totals if Original/Amended/cancelled   !
!            slips.                                                    !
! Called by: Get-Detail-Data                                           !
!----------------------------------------------------------------------!

 begin-procedure Save-T4A-Detail-Data

   let $Box = RTRIM(&D.Box, ' ')

   if $Box = '36'
      let $PensionPlanID = RTRIM(&D.CAN_YE_Box_Text, ' ')
      do Save-Pension-Plan-ID
   end-if


   let #BoxAmt = &D.CAN_YE_Box_Amt

   if #BoxAmt > 0 and $FoundNegative = 'N'
      evaluate $Box

         when = '16'
            add #BoxAmt to #PensSpranAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumPension
            end-if

         when = '16A'
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '16B'
            add #BoxAmt to #NrgstPplnAmt
            if $PensSpranCd = '00' or
               $PensSpranCd = '09'
               move '09' to $PensSpranCd
            else
               move '13' to $PensSpranCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '16C'
            add #BoxAmt to #Box16CAmt
            if $PensSpranCd = '00' or
               $PensSpranCd = '11'
               move '11' to $PensSpranCd
            else
               move '13' to $PensSpranCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '16D'
            add #BoxAmt to #IndnXmptPensAmt
            if $PensSpranCd = '00' or
               $PensSpranCd = '14'
               move '14' to $PensSpranCd
            else
               move '13' to $PensSpranCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '18'
            add #BoxAmt to #LspAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumLumpSum
            end-if

         when = '18A'
            add #BoxAmt to #NrLspTrnsfAmt
            if $LspCd = '00' or
               $LspCd = '02'
               move '02' to $LspCd
            else
               move '13' to $LspCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '18B'
            add #BoxAmt to #LspRppNelgAmt
            if $LspCd = '00' or
               $LspCd = '08'
               move '08' to $LspCd
            else
               move '13' to $LspCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '18C'
            add #BoxAmt to #LspDpspNelgAmt
            if $LspCd = '00' or
               $LspCd = '08'
               move '08' to $LspCd
            else
               move '13' to $LspCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '18D'
            add #BoxAmt to #LspNrgstPensAmt
            if $LspCd = '00' or
               $LspCd = '09'
               move '09' to $LspCd
            else
               move '13' to $LspCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '18E'
            add #BoxAmt to #Pr71AcrLspAmt
            if $LspCd = '00' or
               $LspCd = '10'
               move '10' to $LspCd
            else
               move '13' to $LspCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '18F'
            add #BoxAmt to #LspNelgTrnsfAmt
            if $LspCd = '00' or
               $LspCd = '08'
               move '08' to $LspCd
            else
               move '13' to $LspCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '18G'
            add #BoxAmt to #IndnXmptLspAmt
            if $LspCd = '00' or
               $LspCd = '14'
               move '14' to $LspCd
            else
               move '13' to $LspCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '20'
            add #BoxAmt to #SelfEmplCmsnAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumCommissions
            end-if

         when = '22'
            add #BoxAmt to #ItxDdctAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumIncomeTax
            end-if

         when = '24'
            add #BoxAmt to #AnntyAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumAnnuities
            end-if

         when = '24A'
            add #BoxAmt to #IncAvgAnntyAmt
            if $AnntyCd = '00' or
               $AnntyCd = '10'
               move '10' to $AnntyCd
            else
               move '13' to $AnntyCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '24B'
            add #BoxAmt to #Box24BAmt
            if $AnntyCd = '00' or
               $AnntyCd = '15'
               move '15' to $AnntyCd
            else
               move '13' to $AnntyCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '26'
            add #BoxAmt to #ElgRtirAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumRetiringAllow
            end-if

         when = '26A'
            add #BoxAmt to #IndnElgRtirAmt
            if $ElgRtirCd = '00' or
               $ElgRtirCd = '14'
               move '14' to $ElgRtirCd
            else
               move '13' to $ElgRtirCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '27'
            add #BoxAmt to #NelgRtirAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumNonRetiringAllow
            end-if

         when = '27A'
            add #BoxAmt to #IndnNelgRtirAmt
            if $NelgRtirCd = '00' or
               $NelgRtirCd = '14'
              move '14' to $NelgRtirCd
            else
              move '13' to $NelgRtirCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28'
            add #BoxAmt to #OthIncamt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumOther
            end-if

         when = '28A'
            if $OthIncCd = '00' or
               $OthIncCd = '02'
               move '02' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28B'
            if $OthIncCd = '00' or
               $OthIncCd = '03'
               move '03' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28C'
            add #BoxAmt to #RschGrntAmt
            if $OthIncCd = '00' or
               $OthIncCd = '04'
               move '04' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28D'
            add #BoxAmt to #BrsyAmt
            if $OthIncCd = '00' or
               $OthIncCd = '05'
               move '05' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28E'
            add #BoxAmt to #DthBenAmt
            if $OthIncCd = '00' or
               $OthIncCd = '06'
               move '06' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28F'
            add #BoxAmt to #WagLsIncamt
            if $OthIncCd = '00' or
               $OthIncCd = '07'
               move '07' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28G'
            if $OthIncCd = '00' or
               $OthIncCd = '08'
               move '08' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28H'
            if $OthIncCd = '00' or
               $OthIncCd = '09'
               move '09' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28I'
            if $OthIncCd = '00' or
               $OthIncCd = '11'
               move '11' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28J'
            add #BoxAmt to #IndnOthIncamt
            if $OthIncCd = '00' or
               $OthIncCd = '14'
               move '14' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28R'
            add #BoxAmt to #InsRvkDpspAmt
            if $OthIncCd = '00' or
               $OthIncCd = '23'
               move '23' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28M'
            add #BoxAmt to #MedTrvlAmt
            if $OthIncCd = '00' or
               $OthIncCd = '16'
               move '16' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28N'
            add #BoxAmt to #LoanBenAmt
            if $OthIncCd = '00' or
               $OthIncCd = '17'
               move '17' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28O'
            add #BoxAmt to #MedPremBenAmt
            if $OthIncCd = '00' or
               $OthIncCd = '18'
               move '18' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28S'
            add #BoxAmt to #BrdWrkSiteAmt
            if $OthIncCd = '00' or
               $OthIncCd = '24'
               move '24' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28T'
            add #BoxAmt to #DsbltBenAmt
            if $OthIncCd = '00' or
               $OthIncCd = '25'
               move '25' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '28U'
            add #BoxAmt to #GrpTrmLifeAmt
            if $OthIncCd = '00' or
               $OthIncCd = '19'
               move '19' to $OthIncCd
            else
               move '13' to $OthIncCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '30'
            add #BoxAmt to #PtrngAlocAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumPatronage
            end-if

         when = '32'
            add #BoxAmt to #RppPastSrvcAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumPPContribPast
            end-if

         when = '32A'
            add #BoxAmt to #Pr90RppAmt
            if $RppPastSrvcCd = '00' or
               $RppPastSrvcCd = '26'
               move '26' to $RppPastSrvcCd
            else
               move '13' to $RppPastSrvcCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '34'
            add #BoxAmt to #PadjAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumPensionAdj
            end-if

         when = '40'
            add #BoxAmt to #RespAipAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumRESPIncomePay
            end-if

         when = '40A'
            if $RespAipCd = '00' or
               $RespAipCd = '22'
               move '22' to $RespAipCd
            else
               move '13' to $RespAipCd
            end-if
            move $Box to $SaveBox
            do Process-Footnote-Count

         when = '42'
            add #BoxAmt to #RespEductAstAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumRESPAssistPay
            end-if

         when = '46'
            add #BoxAmt to #ChrtyDonsAmt
            if $Ye_slip_process_sel = 'O' or
               $Ye_slip_process_sel = 'A' or
               $Ye_slip_process_sel = 'C'
               add #BoxAmt to #SumCharity
            end-if

      end-evaluate
   end-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: Write-Transmitter-Record                                  !
! Descr:     Formats and prints the transmittal record based on the    !
!            XML schema.                                               !
! Called by: Process-Main                                              !
!----------------------------------------------------------------------!

begin-Procedure Write-Transmitter-Record

   move &TX.Company       to $Company  !TX.Company is the Transmitter
   if RTRIM($Company,' ') = ''
      display '*** Company field blank on Tax Run Control Record ***'
      display '***************** Processing stopped ****************'
      stop
   end-if

   do Get-Company-Data                 !Transmitter identifying data
   move &TX.Transmitter_ID to $TransmitterID

   let #submission_ref_id = &TX.Submission_Ref_ID + 1
   let $submission_ref_id = to_char(#submission_ref_id)

   move &TX.Comm_Language     to $Language
   move &TX.Tech_Contact_Name to $ContactName

   move &TX.Tech_Contact_Name to $ContactName
   uppercase $ContactName
   let $string_in = substr($ContactName, 1, 22)
   do convert-special-chars
   let $ContactName =  $string_out

   if &TX.Tech_Contact_Acode <> 0
      let $TechContactAc = &TX.Tech_Contact_Acode
   end-if

   if &TX.Tech_Contact_Phone <> 0
      let $TechContactPhone = &TX.Tech_Contact_Phone
   end-if

   let $string_in = substr(&TX.Email_Addr, 1, 60)
   do convert-special-chars
   let $Email_Addr = $string_out

   if $CO_FOUND = 'Y'

      uppercase $CompanyName
      let $string_in =  substr($CompanyName, 1, 30)
      do convert-special-chars
      let $TransmitterName = $string_out

      uppercase $CompnyAdd1
      let $string_in = substr($CompnyAdd1, 1, 30)
      do convert-special-chars
      let $TransmitterStreet = $string_out

      uppercase $CompnyAdd2
      let $string_in = substr($CompnyAdd2, 1, 30)
      do convert-special-chars
      let $TransmitterStreet2 = $string_out

      uppercase $CompnyCity
      let $string_in = substr($CompnyCity, 1, 28)
      do convert-special-chars
      let $TransmitterCity = $string_out

      let $TransmitterProvince = rtrim(&CT.State, ' ')
      let $TransmitterCountry = substr(&CT.Country , 1, 3)

      if &CT.Country = 'CAN'
         move &CT.Postal to $PostalCd
         do Check-Postal-Code
         move $PostalCd to $TransmitterPostalCode
      else
         move &CT.Postal to $TransmitterPostalCode
      end-if
   else
      move &TX.Descr to $TransmitterName
      uppercase $TransmitterName
      let $string_in = substr($TransmitterName, 1, 30)
      do convert-special-chars
      let $TransmitterName = $string_out

      move &TX.Address1 to $TransmitterStreet
      uppercase $TransmitterStreet
      let $string_in = substr($TransmitterStreet, 1, 30)
      do convert-special-chars
      let $TransmitterStreet = $string_out

      move &TX.Address2 to $TransmitterStreet2
      uppercase $TransmitterStreet2
      let $string_in = substr($TransmitterStreet2, 1, 30)
      do convert-special-chars
      let $TransmitterStreet2 = $string_out

      move &TX.City to $TransmitterCity
      uppercase $TransmitterCity
      let $TransmitterCity = substr($TransmitterCity, 1, 28)

      let $TransmitterProvince = rtrim(&TX.Province, ' ')
      let $TransmitterCountry = substr(&TX.Country , 1, 3)
      move &TX.Postal to $TransmitterPostalCode
   end-if

   evaluate $Rpt_type
      when = 'O'
         evaluate $Slip_type
            when = 'X'
               move 'T' to $Slip_type
               do Get-Summary-Count-Original
               move #SummaryCounter  to #SummaryCounter_T4

               move 'A' to $Slip_type
               do Get-Summary-Count-Original
               move #SummaryCounter  to #SummaryCounter_T4A

               let #SummaryCounter =   #SummaryCounter_T4 + #SummaryCounter_T4A

               move 'X' to $Slip_type
               break
            when = 'T'
            when = 'A'
               do Get-Summary-Count-Original
               break
         end-evaluate
         break
      when = 'A'
      when = 'N'
         evaluate $Slip_type
            when = 'X'
               move 'T' to $Slip_type
               do Get-Summary-Count-Amend-T4
               move #SummaryCounter  to #SummaryCounter_T4

               move 'A' to $Slip_type
               do Get-Summary-Count-Amend-T4A
               move #SummaryCounter  to #SummaryCounter_T4A

               let #SummaryCounter =   #SummaryCounter_T4 + #SummaryCounter_T4A

               move 'X' to $Slip_type
               break
            when = 'T'
               do Get-Summary-Count-Amend-T4
               break
            when = 'A'
               do Get-Summary-Count-Amend-T4A
               break
         end-evaluate
         break
   end-evaluate

   do format-number(#SummaryCounter, $SummaryCounter, '099999')
   display ' '
   display $Ctx910xm_Summary_count noline
   display $SummaryCounter
   display ' '

   write #outputfile from '<?xml version="1.0" encoding="Windows-1252"?>'
   write #outputfile from '<Submission xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="layout.xsd">'

   let $xml_tag = 'T619'
   do Process-XML-Tag-Beg

   let $xml_tag = 'sbmt_ref_id'
   let $xml_content = $submission_ref_id
   do  Process-XML-Tag-Content

   let $xml_tag = 'rpt_tcd'
   let $xml_content = rtrim($Rpt_type_file,' ')
   do  Process-XML-Tag-Content

   let $xml_tag = 'trnmtr_nbr'
   let $xml_content = rtrim(&TX.Transmitter_ID,' ')
   do  Process-XML-Tag-Content

   let $xml_tag = 'trnmtr_tcd'
   let $xml_content = rtrim(&TX.Transm_Type,' ')
   do  Process-XML-Tag-Content

   let $xml_tag = 'summ_cnt'
   do format-number(#SummaryCounter, $SummaryCounter, '99999')
   let $xml_content = ltrim ($SummaryCounter,' ')
   do  Process-XML-Tag-Content

   let $xml_tag = 'lang_cd'
   let $xml_content = rtrim(&TX.Comm_Language,' ')
   do  Process-XML-Tag-Content

   let $xml_tag = 'TRNMTR_NM'
   do Process-XML-Tag-Beg

   let $xml_tag = 'l1_nm'
   let $xml_content = rtrim($TransmitterName,' ')
   do  Process-XML-Tag-Content

   let $xml_tag = 'TRNMTR_NM'
   do Process-XML-Tag-End

   let $xml_tag = 'TRNMTR_ADDR'
   do Process-XML-Tag-Beg

   if rtrim($TransmitterStreet,' ') <> ''
      let $xml_tag = 'addr_l1_txt'
      let $xml_content = rtrim($TransmitterStreet,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim($TransmitterStreet2,' ') <> ''
      let $xml_tag = 'addr_l2_txt'
      let $xml_content = rtrim($TransmitterStreet2,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim($TransmitterCity,' ') <> ''
      let $xml_tag = 'cty_nm'
      let $xml_content = rtrim($TransmitterCity,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim($TransmitterProvince,' ') <> ''
      let $xml_tag = 'prov_cd'
      let $xml_content = rtrim($TransmitterProvince,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim($TransmitterCountry,' ') <> ''
      let $xml_tag = 'cntry_cd'
      let $xml_content = rtrim($TransmitterCountry,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim($TransmitterPostalCode,' ') <> ''
      let $xml_tag = 'pstl_cd'
      let $xml_content = rtrim($TransmitterPostalCode,' ')
      do  Process-XML-Tag-Content
   end-if

   let $xml_tag = 'TRNMTR_ADDR'
   do Process-XML-Tag-End

   let $xml_tag = 'CNTC'
   do Process-XML-Tag-Beg

   let $xml_tag = 'cntc_nm'
   let $xml_content = rtrim($ContactName,' ')
   do  Process-XML-Tag-Content

   let $xml_tag = 'cntc_area_cd'
   do Format-Number(&TX.Tech_Contact_Acode, $TechContactAc, '999')
   let $xml_content = rtrim ($TechContactAc,'')
   do  Process-XML-Tag-Content

   let $xml_tag = 'cntc_phn_nbr'
   do Format-Number(&TX.Tech_Contact_Phone, $TechContactPhone, '9999999')
   let $xml_content = edit($TechContactPhone,'xxx-xxxx')
   do  Process-XML-Tag-Content

   if &TX.Tech_Contact_Ext <> 0
      let $xml_tag = 'cntc_extn_nbr'
      do Format-Number(&TX.Tech_Contact_Ext, $TechContactExt, '9999')
      let $xml_content = rtrim($TechContactExt,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim ($Email_Addr, ' ') <> ''
      let $xml_tag = 'cntc_email_area'
      let $xml_content = rtrim ($Email_Addr, ' ')
      do  Process-XML-Tag-Content
   end-if

   let $xml_tag = 'CNTC'
   do Process-XML-Tag-End

   let $xml_tag = 'T619'
   do Process-XML-Tag-End

end-procedure


!----------------------------------------------------------------------!
! Procedure: Write-T4-Record                                           !
! Descr:     Formats and prints the T4 slip record based on the XML    !
!            schema.                                                   !
! Called by: Process-T4-Records                                        !
!            Process-Additional-T4                                     !
!----------------------------------------------------------------------!

begin-procedure Write-T4-Record

   if $FirstRecord = 'Y'

      let $xml_tag = 'Return'
      do Process-XML-Tag-Beg

      let $xml_tag = 'T4'
      do Process-XML-Tag-Beg

      let $FirstRecord = 'N'
   end-if

   let $xml_tag = 'T4Slip'
   do Process-XML-Tag-Beg

   let $xml_tag = 'EMPE_NM'
   do Process-XML-Tag-Beg

   let $xml_tag = 'snm'
   let $xml_content = rtrim($E_Surname,' ')
   do  Process-XML-Tag-Content

   if rtrim($E_FirstName,' ') <> ''
      let $xml_tag = 'gvn_nm'
      let $xml_content = rtrim($E_FirstName,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim($E_Initial,' ')  <> ''
      let $xml_tag = 'init'
      let $xml_content = rtrim($E_Initial,' ')
      do  Process-XML-Tag-Content
   end-if

   let $xml_tag = 'EMPE_NM'
   do Process-XML-Tag-End


   let $xml_tag = 'EMPE_ADDR'
   do Process-XML-Tag-Beg

   if rtrim($E_Street, ' ') <> ''
      let $xml_tag = 'addr_l1_txt'
      let $xml_content = rtrim($E_Street,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim($E_Street2,' ')  <> ''
      let $xml_tag = 'addr_l2_txt'
      let $xml_content = rtrim($E_Street2,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim($E_City,' ') <> ''
      let $xml_tag = 'cty_nm'
      let $xml_content = rtrim($E_City,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim($E_Province,' ') <> ''
      let $xml_tag = 'prov_cd'
      let $xml_content = rtrim($E_Province,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim($E_Country, ' ') <> ''
      let $xml_tag = 'cntry_cd'
      let $xml_content = rtrim($E_Country, ' ')
      do Process-XML-Tag-Content
   end-if

   if rtrim($E_PostalCode,' ') <> ''
      let $xml_tag = 'pstl_cd'
      let $xml_content = rtrim($E_PostalCode,' ')
      do  Process-XML-Tag-Content
   end-if

   let $xml_tag = 'EMPE_ADDR'
   do Process-XML-Tag-End

   let $xml_tag = 'sin'
   let $xml_content = rtrim($SIN,' ')
   do  Process-XML-Tag-Content

   if rtrim($EmplID,' ')  <> ''
      let $xml_tag = 'empe_nbr'
      let $xml_content = rtrim($EmplID,' ')
      do  Process-XML-Tag-Content
   end-if

   let $xml_tag = 'bn'
   let $xml_content = rtrim($ReportingID,' ')
   do  Process-XML-Tag-Content

   if rtrim($PensionPlanID,' ')  <> ''
      let $xml_tag = 'rpp_dpsp_rgst_nbr'
      let $xml_content = rtrim($PensionPlanID,' ')
      do  Process-XML-Tag-Content
   end-if

   let $xml_tag = 'cpp_qpp_xmpt_cd'
   let $xml_content = rtrim($CPPExempt,' ')
   do  Process-XML-Tag-Content

   let $xml_tag = 'ei_xmpt_cd'
   let $xml_content = rtrim($UIExempt,' ')
   do  Process-XML-Tag-Content

   let $xml_tag = 'prov_pip_xmpt_cd'
   let $xml_content = rtrim($PPIPExempt,' ')
   do  Process-XML-Tag-Content

   if rtrim($E_EmploymentCode,' ')  <> ''
      let $xml_tag = 'empt_cd'
      let $xml_content = rtrim($E_EmploymentCode,' ')
      do  Process-XML-Tag-Content
   end-if

   let $xml_tag = 'rpt_tcd'
   let $xml_content = rtrim($Ye_slip_process_sel,' ')
   do  Process-XML-Tag-Content


   let $xml_tag = 'empt_prov_cd'
   let $xml_content = rtrim($WorkProvince,' ')
   do Process-XML-Tag-Content

   if #TotIncome       > 0 or
      #CPPContrib      > 0 or
      #QPPContrib      > 0 or
      #UIPrem          > 0 or
      #RPPContrib      > 0 or
      #IncomeTax       > 0 or
      #UIEarnings      > 0 or
      #CPPEarnings     > 0 or
      #UnionDues       > 0 or
      #Charity         > 0 or
      #PensionAdj      > 0 or
      #PPIPPrem        > 0 or
      #PPIPInsEarns    > 0



      let $xml_tag = 'T4_AMT'
      do Process-XML-Tag-Beg

      if #TotIncome > 0
         let $xml_tag = 'empt_incamt'
         do format-number(#TotIncome, $TotIncome, '99999999.99')
         let $xml_content = ltrim ($TotIncome, ' ')
         do  Process-XML-Tag-Content
      end-if

      if #CPPContrib > 0
         let $xml_tag = 'cpp_cntrb_amt'
         do format-number(#CPPContrib, $CPPContrib, '9999.99')
         let $xml_content = ltrim ($CPPContrib, ' ')
         do  Process-XML-Tag-Content
      end-if

      if #QPPContrib > 0
         let $xml_tag = 'qpp_cntrb_amt'
         do format-number(#QPPContrib, $QPPContrib, '9999.99')
         let $xml_content = ltrim ($QPPContrib, ' ')
         do  Process-XML-Tag-Content
      end-if

      if #UIPrem > 0
         let $xml_tag = 'empe_eip_amt'
         do format-number(#UIPrem, $UIPrem, '9999.99')
         let $xml_content = ltrim($UIPrem,' ')
         do  Process-XML-Tag-Content
      end-if

      if #RPPContrib > 0
         let $xml_tag = 'rpp_cntrb_amt'
         do format-number(#RPPContrib, $RPPContrib, '99999.99')
         let $xml_content = ltrim($RPPContrib,' ')
         do  Process-XML-Tag-Content
      end-if

      if #IncomeTax > 0
         let $xml_tag = 'itx_ddct_amt'
         do format-number(#IncomeTax, $IncomeTax, '99999999.99')
         let $xml_content = ltrim($IncomeTax,' ')
         do  Process-XML-Tag-Content
      end-if

      if #UIEarnings > 0
         let $xml_tag = 'ei_insu_ern_amt'
         do format-number(#UIEarnings, $UIEarnings, '99999.99')
         let $xml_content = ltrim($UIEarnings,' ')
         do  Process-XML-Tag-Content
      end-if

      if #CPPEarnings > 0
         let $xml_tag = 'cpp_qpp_ern_amt'
         do format-number(#CPPEarnings, $CPPEarnings, '9999999.99')
         let $xml_content = ltrim($CPPEarnings,' ')
         do  Process-XML-Tag-Content
      end-if

      if #UnionDues > 0
         let $xml_tag = 'unn_dues_amt'
         do format-number(#UnionDues, $UnionDues, '9999999.99')
         let $xml_content = ltrim($UnionDues,' ')
         do  Process-XML-Tag-Content
      end-if

      if #Charity > 0
         let $xml_tag = 'chrty_dons_amt'
         do format-number(#Charity, $Charity, '9999999.99')
         let $xml_content = ltrim($Charity,' ')
         do  Process-XML-Tag-Content
      end-if

      if #PensionAdj > 0
         let $xml_tag = 'padj_amt'
         do format-number(#PensionAdj, $PensionAdj, '99999.99')
         let $xml_content = ltrim ($PensionAdj, ' ')
         do  Process-XML-Tag-Content
      end-if

      if #PPIPPrem > 0
         let $xml_tag = 'prov_pip_amt'
         do format-number(#PPIPPrem, $PPIPPrem, '9999.99')
         let $xml_content = ltrim ($PPIPPrem, ' ')
         do  Process-XML-Tag-Content
      end-if

      if #PPIPInsEarns > 0
         let $xml_tag = 'prov_insu_ern_amt'
         do format-number(#PPIPInsEarns, $PPIPInsEarns, '99999.99')
         let $xml_content = ltrim ($PPIPInsEarns, ' ')
         do  Process-XML-Tag-Content
      end-if


      let $xml_tag = 'T4_AMT'
      do Process-XML-Tag-End
   end-if

   if  #HmBrdLodgAmt    > 0 or
       #SpclWrkSiteAmt  > 0 or
       #PrscbZnTrvlAmt  > 0 or
       #MedTrvlAmt      > 0 or
       #PrsnlVhclAmt    > 0 or
       #RsnPerKmAmt     > 0 or
       #LowIntLoanAmt   > 0 or
       #EmpeHmLoanAmt   > 0 or
       #StokOptBenAmt   > 0 or
       #StokOptAmt      > 0 or
       #ShrOptDBenAmt   > 0 or
       #ShrOptDAmt      > 0 or
       #OthTxBenAmt     > 0 or
       #ShrOptD1BenAmt  > 0 or
       #ShrOptD1Amt     > 0 or
       #EmptCmsnAmt     > 0 or
       #CfppaAmt        > 0 or
       #DfrStokOptAmt   > 0 or
       #MunOfcrExamt    > 0 or
       #IndnEmpeAmt     > 0 or
       #OcIncamt        > 0 or
       #OcDyCnt         > 0 or
       #Pr90CntrbrAmt   > 0 or
       #Pr90NcntrbrAmt  > 0 or
       #CmpnRpayEmprAmt > 0 or
       #FishGroErnAmt   > 0 or
       #FishNetPtnrAmt  > 0 or
       #FishShrPrsnAmt  > 0

      let $xml_tag = 'OTH_INFO'
      do Process-XML-Tag-Beg

      if #HmBrdLodgAmt > 0
         let $xml_tag = 'hm_brd_lodg_amt'
         do format-number(#HmBrdLodgAmt, $HmBrdLodgAmt, '9999999.99')
         let $xml_content = ltrim($HmBrdLodgAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #SpclWrkSiteAmt > 0
         let $xml_tag = 'spcl_wrk_site_amt'
         do format-number(#SpclWrkSiteAmt, $SpclWrkSiteAmt, '9999999.99')
         let $xml_content = ltrim($SpclWrkSiteAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #PrscbZnTrvlAmt > 0
         let $xml_tag = 'prscb_zn_trvl_amt'
         do format-number(#PrscbZnTrvlAmt, $PrscbZnTrvlAmt, '9999999.99')
         let $xml_content = ltrim($PrscbZnTrvlAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #MedTrvlAmt > 0
         let $xml_tag = 'med_trvl_amt'
         do format-number(#MedTrvlAmt, $MedTrvlAmt, '9999999.99')
         let $xml_content = ltrim($MedTrvlAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #PrsnlVhclAmt > 0
         let $xml_tag = 'prsnl_vhcl_amt'
         do format-number(#PrsnlVhclAmt, $PrsnlVhclAmt, '9999999.99')
         let $xml_content = ltrim($PrsnlVhclAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #RsnPerKmAmt > 0
         let $xml_tag = 'rsn_per_km_amt'
         do format-number(#RsnPerKmAmt, $RsnPerKmAmt, '9999999.99')
         let $xml_content = ltrim($RsnPerKmAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #LowIntLoanAmt > 0
         let $xml_tag = 'low_int_loan_amt'
         do format-number(#LowIntLoanAmt, $LowIntLoanAmt, '9999999.99')
         let $xml_content = ltrim($LowIntLoanAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #EmpeHmLoanAmt > 0
         let $xml_tag = 'empe_hm_loan_amt'
         do format-number(#EmpeHmLoanAmt, $EmpeHmLoanAmt, '9999999.99')
         let $xml_content = ltrim($EmpeHmLoanAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #StokOptBenAmt > 0
         let $xml_tag = 'stok_opt_ben_amt'
         do format-number(#StokOptBenAmt, $StokOptBenAmt, '9999999.99')
         let $xml_content = ltrim($StokOptBenAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #StokOptAmt > 0
         let $xml_tag = 'sob_a00_feb_amt'
         do format-number(#StokOptAmt, $StokOptAmt, '9999999.99')
         let $xml_content = ltrim($StokOptAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #ShrOptDBenAmt > 0
         let $xml_tag = 'shr_opt_d_ben_amt'
         do format-number(#ShrOptDBenAmt, $ShrOptDBenAmt, '9999999.99')
         let $xml_content = ltrim($ShrOptDBenAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #ShrOptDAmt > 0
         let $xml_tag = 'sod_d_a00_feb_amt'
         do format-number(#ShrOptDAmt, $ShrOptDAmt, '9999999.99')
         let $xml_content = ltrim($ShrOptDAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #OthTxBenAmt > 0
         let $xml_tag = 'oth_tx_ben_amt'
         do format-number(#OthTxBenAmt, $OthTxBenAmt, '9999999.99')
         let $xml_content = ltrim($OthTxBenAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #ShrOptD1BenAmt > 0
         let $xml_tag = 'shr_opt_d1_ben_amt'
         do format-number(#ShrOptD1BenAmt, $ShrOptD1BenAmt, '9999999.99')
         let $xml_content = ltrim($ShrOptD1BenAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #ShrOptD1Amt > 0
         let $xml_tag = 'sod_d1_a00_feb_amt'
         do format-number(#ShrOptD1Amt, $ShrOptD1Amt, '9999999.99')
         let $xml_content = ltrim($ShrOptD1Amt,' ')
         do Process-XML-Tag-Content
      end-if

      if #EmptCmsnAmt > 0
         let $xml_tag = 'empt_cmsn_amt'
         do format-number(#EmptCmsnAmt, $EmptCmsnAmt, '9999999.99')
         let $xml_content = ltrim($EmptCmsnAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #CfppaAmt > 0
         let $xml_tag = 'cfppa_amt'
         do format-number(#CfppaAmt, $CfppaAmt, '9999999.99')
         let $xml_content = ltrim($CfppaAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #DfrStokOptAmt > 0
         let $xml_tag = 'dfr_sob_amt'
         do format-number(#DfrStokOptAmt, $DfrStokOptAmt, '9999999.99')
         let $xml_content = ltrim($DfrStokOptAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #MunOfcrExamt > 0
         let $xml_tag = 'mun_ofcr_examt'
         do format-number(#MunOfcrExamt, $MunOfcrExamt, '9999999.99')
         let $xml_content = ltrim($MunOfcrExamt,' ')
         do Process-XML-Tag-Content
      end-if

      if #IndnEmpeAmt > 0
         let $xml_tag = 'indn_empe_amt'
         do format-number(#IndnEmpeAmt, $IndnEmpeAmt, '9999999.99')
         let $xml_content = ltrim($IndnEmpeAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #OcIncamt > 0
         let $xml_tag = 'oc_incamt'
         do format-number(#OcIncamt, $OcIncamt, '9999999.99')
         let $xml_content = ltrim($OcIncamt,' ')
         do Process-XML-Tag-Content
      end-if

      if #OcDyCnt > 0
         let $xml_tag = 'oc_dy_cnt'
         do format-number(#OcDyCnt, $OcDyCnt, '9999999.99')
         let $xml_content = ltrim($OcDyCnt,' ')
         do Process-XML-Tag-Content
      end-if

      if #Pr90CntrbrAmt > 0
         let $xml_tag = 'pr_90_cntrbr_amt'
         do format-number(#Pr90CntrbrAmt, $Pr90CntrbrAmt, '9999999.99')
         let $xml_content = ltrim($Pr90CntrbrAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #Pr90NcntrbrAmt > 0
         let $xml_tag = 'pr_90_ncntrbr_amt'
         do format-number(#Pr90NcntrbrAmt, $Pr90NcntrbrAmt, '9999999.99')
         let $xml_content = ltrim($Pr90NcntrbrAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #CmpnRpayEmprAmt > 0
         let $xml_tag = 'cmpn_rpay_empr_amt'
         do format-number(#CmpnRpayEmprAmt, $CmpnRpayEmprAmt, '9999999.99')
         let $xml_content = ltrim($CmpnRpayEmprAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #FishGroErnAmt > 0
         let $xml_tag = 'fish_gro_ern_amt'
         do format-number(#FishGroErnAmt, $FishGroErnAmt, '9999999.99')
         let $xml_content = ltrim($FishGroErnAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #FishNetPtnrAmt > 0
         let $xml_tag = 'fish_net_ptnr_amt'
         do format-number(#FishNetPtnrAmt, $FishNetPtnrAmt, '9999999.99')
         let $xml_content = ltrim($FishNetPtnrAmt,' ')
         do Process-XML-Tag-Content
      end-if

      if #FishShrPrsnAmt > 0
         let $xml_tag = 'fish_shr_prsn_amt'
         do format-number(#FishShrPrsnAmt, $FishShrPrsnAmt, '9999999.99')
         let $xml_content = ltrim($FishShrPrsnAmt,' ')
         do Process-XML-Tag-Content
      end-if

      let $xml_tag = 'OTH_INFO'
      do Process-XML-Tag-End
   end-if

   let $xml_tag = 'T4Slip'
   do Process-XML-Tag-End

   add 1 to #T4Count

   let $WriteSummary = 'Y'

   do Save-EE-Detail

   do Initialize-Detail-T4

end-procedure


!----------------------------------------------------------------------!
! Procedure: Write-T4A-Record                                          !
! Descr:     Formats and prints the T4A slip record based on the XML   !
!            schema.                                                   !
! Called by: Process-T4A-Records                                       !
!----------------------------------------------------------------------!

begin-procedure Write-T4A-Record

   if $FirstRecord = 'Y'

      let $xml_tag = 'Return'
      do Process-XML-Tag-Beg

      let $xml_tag = 'T4A'
      do Process-XML-Tag-Beg

      let $FirstRecord = 'N'
   end-if

   let $xml_tag = 'T4ASlip'
   do Process-XML-Tag-Beg

   let $xml_tag = 'RCPNT_NM'
   do Process-XML-Tag-Beg

   let $xml_tag = 'snm'
   let $xml_content = rtrim($E_Surname,' ')
   do  Process-XML-Tag-Content

   if rtrim($E_FirstName,' ') <> ''
      let $xml_tag = 'gvn_nm'
      let $xml_content = rtrim($E_FirstName,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim($E_Initial,' ')  <> ''
      let $xml_tag = 'init'
      let $xml_content = rtrim($E_Initial,' ')
      do  Process-XML-Tag-Content
   end-if

   let $xml_tag = 'RCPNT_NM'
   do Process-XML-Tag-End

   let $xml_tag = 'sin'
   let $xml_content = rtrim($SIN,' ')
   do  Process-XML-Tag-Content

   let $xml_tag = 'rcpnt_bn'
   let $xml_content = rtrim($E_BusNum,' ')
   do  Process-XML-Tag-Content

   if rtrim($E_Corp1, ' ') <> ''

      let $xml_tag = 'RCPNT_CORP_NM'
      do Process-XML-Tag-Beg

      let $xml_tag = 'l1_nm'
      let $xml_content = rtrim($E_Corp1,' ')
      do  Process-XML-Tag-Content

      if rtrim($E_Corp2, ' ') <> ''
         let $xml_tag = 'l2_nm'
         let $xml_content = rtrim($E_Corp2,' ')
         do  Process-XML-Tag-Content
      end-if

      let $xml_tag = 'RCPNT_CORP_NM'
      do Process-XML-Tag-End
   end-if

   let $xml_tag = 'RCPNT_ADDR'
   do Process-XML-Tag-Beg

   if rtrim($E_Street, ' ') <> ''
      let $xml_tag = 'addr_l1_txt'
      let $xml_content = rtrim($E_Street,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim($E_Street2,' ')  <> ''
      let $xml_tag = 'addr_l2_txt'
      let $xml_content = rtrim($E_Street2,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim($E_City,' ') <> ''
      let $xml_tag = 'cty_nm'
      let $xml_content = rtrim($E_City,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim($E_Province,' ') <> ''
      let $xml_tag = 'prov_cd'
      let $xml_content = rtrim($E_Province,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim($E_Country,' ')  <> ''
      let $xml_tag = 'cntry_cd'
      let $xml_content = rtrim($E_Country,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim($E_PostalCode,' ') <> ''
      let $xml_tag = 'pstl_cd'
      let $xml_content = rtrim($E_PostalCode,' ')
      do  Process-XML-Tag-Content
   end-if

   let $xml_tag = 'RCPNT_ADDR'
   do Process-XML-Tag-End

   if rtrim($EmplID,' ')  <> ''
      let $xml_tag = 'rcpnt_nbr'
      let $xml_content = rtrim($EmplID,' ')
      do  Process-XML-Tag-Content
   end-if

   let $xml_tag = 'bn'
   let $xml_content = rtrim($ReportingID,' ')
   do  Process-XML-Tag-Content

   if rtrim($PensionPlanID,' ')  <> ''
      let $xml_tag = 'ppln_dpsp_rgst_nbr'
      let $xml_content = rtrim( $PensionPlanID,' ')
      do  Process-XML-Tag-Content
   end-if

   if rtrim ($Box38Code, ' ') <> ''
      let $xml_tag = 'FTNT'
      do Process-XML-Tag-Beg

      let $xml_tag = 'ftnt_cd'
      let $xml_content = rtrim($Box38Code,' ')
      do  Process-XML-Tag-Content

      if rtrim($FNDescr,' ') <> ''
         let $xml_tag = 'ftnt_txt'
         let $xml_content = rtrim($FNDescr,' ')
         do  Process-XML-Tag-Content
      end-if

      let $xml_tag = 'FTNT'
      do Process-XML-Tag-End
   end-if

   let $xml_tag = 'rpt_tcd'
   let $xml_content = rtrim($Ye_slip_process_sel,' ')
   do  Process-XML-Tag-Content


   if #PadjAmt          > 0  or
      #PensSpranAmt     > 0  or
      #NrgstPplnAmt     > 0  or
      #IndnXmptPensAmt  > 0  or
      #LspAmt           > 0  or
      #Pr71AcrLspAmt    > 0  or
      #IndnXmptLspAmt   > 0  or
      #LspRppNelgAmt    > 0  or
      #LspDpspNelgAmt   > 0  or
      #NrLspTrnsfAmt    > 0  or
      #LspNrgstPensAmt  > 0  or
      #LspNelgTrnsfAmt  > 0  or
      #SelfEmplCmsnAmt  > 0  or
      #ItxDdctAmt       > 0  or
      #AnntyAmt         > 0  or
      #Box24BAmt        > 0  or
      #IncAvgAnntyAmt   > 0  or
      #ElgRtirAmt       > 0  or
      #IndnElgRtirAmt   > 0  or
      #NelgRtirAmt      > 0  or
      #IndnNelgRtirAmt  > 0  or
      #OthIncamt        > 0  or
      #IndnOthIncamt    > 0  or
      #InsRvkDpspAmt    > 0  or
      #BrdWrkSiteAmt    > 0  or
      #MedTrvlAmt       > 0  or
      #LoanBenAmt       > 0  or
      #MedPremBenAmt    > 0  or
      #RschGrntAmt      > 0  or
      #BrsyAmt          > 0  or
      #WagLsIncamt      > 0  or
      #DthBenAmt        > 0  or
      #DsbltBenAmt      > 0  or
      #GrpTrmLifeAmt    > 0  or
      #PtrngAlocAmt     > 0  or
      #RppPastSrvcAmt   > 0  or
      #Pr90RppAmt       > 0  or
      #RespAipAmt       > 0  or
      #RespEductAstAmt  > 0  or
      #ChrtyDonsAmt     > 0

      let $xml_tag = 'T4A_AMT'
      do Process-XML-Tag-Beg

      if #PadjAmt > 0
         let $xml_tag = 'padj_amt'
         do format-number(#PadjAmt, $PadjAmt, '99999.99')
         let $xml_content = ltrim($PadjAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #PensSpranAmt > 0
         let $xml_tag = 'pens_spran_amt'
         do format-number(#PensSpranAmt, $PensSpranAmt, '9999999.99')
         let $xml_content = ltrim ($PensSpranAmt, ' ')
         do  Process-XML-Tag-Content
      end-if

      if #NrgstPplnAmt > 0
         let $xml_tag = 'nrgst_ppln_amt'
         do format-number(#NrgstPplnAmt, $NrgstPplnAmt, '9999999.99')
         let $xml_content = ltrim ($NrgstPplnAmt, ' ')
         do  Process-XML-Tag-Content
      end-if

      if #IndnXmptPensAmt > 0
         let $xml_tag = 'indn_xmpt_pens_amt'
         do format-number(#IndnXmptPensAmt, $IndnXmptPensAmt, '9999999.99')
         let $xml_content = ltrim($IndnXmptPensAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #LspAmt > 0
         let $xml_tag = 'lsp_amt'
         do format-number(#LspAmt, $LspAmt, '9999999.99')
         let $xml_content = ltrim($LspAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #Pr71AcrLspAmt > 0
         let $xml_tag = 'pr_71_acr_lsp_amt'
         do format-number(#Pr71AcrLspAmt, $Pr71AcrLspAmt, '9999999.99')
         let $xml_content = ltrim($Pr71AcrLspAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #IndnXmptLspAmt > 0
         let $xml_tag = 'indn_xmpt_lsp_amt'
         do format-number(#IndnXmptLspAmt, $IndnXmptLspAmt, '9999999.99')
         let $xml_content = ltrim($IndnXmptLspAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #LspRppNelgAmt > 0
         let $xml_tag = 'lsp_rpp_nelg_amt'
         do format-number(#LspRppNelgAmt, $LspRppNelgAmt, '9999999.99')
         let $xml_content = ltrim($LspRppNelgAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #LspDpspNelgAmt > 0
         let $xml_tag = 'lsp_dpsp_nelg_amt'
         do format-number(#LspDpspNelgAmt, $LspDpspNelgAmt, '9999999.99')
         let $xml_content = ltrim($LspDpspNelgAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #NrLspTrnsfAmt > 0
         let $xml_tag = 'nr_lsp_trnsf_amt'
         do format-number(#NrLspTrnsfAmt, $NrLspTrnsfAmt, '9999999.99')
         let $xml_content = ltrim($NrLspTrnsfAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #LspNrgstPensAmt > 0
         let $xml_tag = 'lsp_nrgst_pens_amt'
         do format-number(#LspNrgstPensAmt, $LspNrgstPensAmt, '9999999.99')
         let $xml_content = ltrim($LspNrgstPensAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #LspNelgTrnsfAmt > 0
         let $xml_tag = 'lsp_nelg_trnsf_amt'
         do format-number(#LspNelgTrnsfAmt, $LspNelgTrnsfAmt, '9999999.99')
         let $xml_content = ltrim($LspNelgTrnsfAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #SelfEmplCmsnAmt > 0
         let $xml_tag = 'self_empl_cmsn_amt'
         do format-number(#SelfEmplCmsnAmt, $SelfEmplCmsnAmt, '9999999.99')
         let $xml_content = ltrim($SelfEmplCmsnAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #ItxDdctAmt > 0
         let $xml_tag = 'itx_ddct_amt'
         do format-number(#ItxDdctAmt, $ItxDdctAmt, '9999999.99')
         let $xml_content = ltrim($ItxDdctAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #AnntyAmt > 0
         let $xml_tag = 'annty_amt'
         do format-number(#AnntyAmt, $AnntyAmt, '9999999.99')
         let $xml_content = ltrim($AnntyAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #Box24BAmt > 0
         let $xml_tag = 'dpsp_ins_pay_amt'
         do format-number(#Box24BAmt, $Box24BAmt, '9999999.99')
         let $xml_content = ltrim($Box24BAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #IncAvgAnntyAmt > 0
         let $xml_tag = 'inc_avg_annty_amt'
         do format-number(#IncAvgAnntyAmt, $IncAvgAnntyAmt, '9999999.99')
         let $xml_content = ltrim($IncAvgAnntyAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #ElgRtirAmt > 0
         let $xml_tag = 'elg_rtir_amt'
         do format-number(#ElgRtirAmt, $ElgRtirAmt , '9999999.99')
         let $xml_content = ltrim($ElgRtirAmt ,' ')
         do  Process-XML-Tag-Content
      end-if

      if #IndnElgRtirAmt > 0
         let $xml_tag = 'indn_elg_rtir_amt'
         do format-number(#IndnElgRtirAmt, $IndnElgRtirAmt, '9999999.99')
         let $xml_content = ltrim($IndnElgRtirAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #NelgRtirAmt > 0
         let $xml_tag = 'nelg_rtir_amt'
         do format-number(#NelgRtirAmt, $NelgRtirAmt, '9999999.99')
         let $xml_content = ltrim($NelgRtirAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #IndnNelgRtirAmt > 0
         let $xml_tag = 'indn_nelg_rtir_amt'
         do format-number(#IndnNelgRtirAmt, $IndnNelgRtirAmt, '9999999.99')
         let $xml_content = ltrim($IndnNelgRtirAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #OthIncamt > 0
         let $xml_tag = 'oth_incamt'
         do format-number(#OthIncamt, $OthIncamt, '9999999.99')
         let $xml_content = ltrim($OthIncamt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #IndnOthIncamt > 0
         let $xml_tag = 'indn_oth_incamt'
         do format-number(#IndnOthIncamt, $IndnOthIncamt, '9999999.99')
         let $xml_content = ltrim($IndnOthIncamt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #InsRvkDpspAmt > 0
         let $xml_tag = 'ins_rvk_dpsp_amt'
         do format-number(#InsRvkDpspAmt, $InsRvkDpspAmt, '9999999.99')
         let $xml_content = ltrim($InsRvkDpspAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #BrdWrkSiteAmt > 0
         let $xml_tag = 'brd_wrk_site_amt'
         do format-number(#BrdWrkSiteAmt, $BrdWrkSiteAmt, '9999999.99')
         let $xml_content = ltrim($BrdWrkSiteAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #MedTrvlAmt > 0
         let $xml_tag = 'med_trvl_amt'
         do format-number(#MedTrvlAmt, $MedTrvlAmt, '9999999.99')
         let $xml_content = ltrim($MedTrvlAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #LoanBenAmt > 0
         let $xml_tag = 'loan_ben_amt'
         do format-number(#LoanBenAmt, $LoanBenAmt, '9999999.99')
         let $xml_content = ltrim($LoanBenAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #MedPremBenAmt > 0
         let $xml_tag = 'med_prem_ben_amt'
         do format-number(#MedPremBenAmt, $MedPremBenAmt, '9999999.99')
         let $xml_content = ltrim($MedPremBenAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #RschGrntAmt > 0
         let $xml_tag = 'rsch_grnt_amt'
         do format-number(#RschGrntAmt, $RschGrntAmt, '9999999.99')
         let $xml_content = ltrim($RschGrntAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #BrsyAmt > 0
         let $xml_tag = 'brsy_amt'
         do format-number(#BrsyAmt, $BrsyAmt, '9999999.99')
         let $xml_content = ltrim($BrsyAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #WagLsIncamt > 0
         let $xml_tag = 'wag_ls_incamt'
         do format-number(#WagLsIncamt, $WagLsIncamt, '9999999.99')
         let $xml_content = ltrim($WagLsIncamt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #DthBenAmt > 0
         let $xml_tag = 'dth_ben_amt'
         do format-number(#DthBenAmt, $DthBenAmt, '9999999.99')
         let $xml_content = ltrim($DthBenAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #DsbltBenAmt > 0
         let $xml_tag = 'dsblt_ben_amt'
         do format-number(#DsbltBenAmt, $DsbltBenAmt, '9999999.99')
         let $xml_content = ltrim($DsbltBenAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #GrpTrmLifeAmt > 0
         let $xml_tag = 'grp_trm_life_amt'
         do format-number(#GrpTrmLifeAmt, $GrpTrmLifeAmt, '9999999.99')
         let $xml_content = ltrim($GrpTrmLifeAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #PtrngAlocAmt > 0
         let $xml_tag = 'ptrng_aloc_amt'
         do format-number(#PtrngAlocAmt, $PtrngAlocAmt, '9999999.99')
         let $xml_content = ltrim($PtrngAlocAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #RppPastSrvcAmt > 0
         let $xml_tag = 'rpp_past_srvc_amt'
         do format-number(#RppPastSrvcAmt, $RppPastSrvcAmt, '9999999.99')
         let $xml_content = ltrim($RppPastSrvcAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #Pr90RppAmt > 0
         let $xml_tag = 'pr_90_rpp_amt'
         do format-number(#Pr90RppAmt, $Pr90RppAmt, '9999999.99')
         let $xml_content = ltrim($Pr90RppAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #RespAipAmt > 0
         let $xml_tag = 'resp_aip_amt'
         do format-number(#RespAipAmt, $RespAipAmt, '9999999.99')
         let $xml_content = ltrim($RespAipAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #RespEductAstAmt > 0
         let $xml_tag = 'resp_educt_ast_amt'
         do format-number(#RespEductAstAmt, $RespEductAstAmt, '9999999.99')
         let $xml_content = ltrim($RespEductAstAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      if #ChrtyDonsAmt > 0
         let $xml_tag = 'chrty_dons_amt'
         do format-number(#ChrtyDonsAmt, $ChrtyDonsAmt, '9999999.99')
         let $xml_content = ltrim($ChrtyDonsAmt,' ')
         do  Process-XML-Tag-Content
      end-if

      let $xml_tag = 'T4A_AMT'
      do Process-XML-Tag-End

      if rtrim($PensSpranCd, ' ') <> '00'
         let $xml_tag = 'pens_spran_cd'
         let $xml_content = rtrim($PensSpranCd,' ')
         do  Process-XML-Tag-Content
      end-if

      if rtrim($LspCd, ' ') <> '00'
         let $xml_tag = 'lsp_cd'
         let $xml_content = rtrim($LspCd,' ')
         do  Process-XML-Tag-Content
      end-if

      if rtrim($AnntyCd, ' ') <> '00'
         let $xml_tag = 'annty_cd'
         let $xml_content = rtrim($AnntyCd,' ')
         do  Process-XML-Tag-Content
      end-if

      if rtrim($ElgRtirCd, ' ') <> '00'
         let $xml_tag = 'elg_rtir_cd'
         let $xml_content = rtrim($ElgRtirCd,' ')
         do  Process-XML-Tag-Content
      end-if

      if rtrim($NelgRtirCd, ' ') <> '00'
         let $xml_tag = 'nelg_rtir_cd'
         let $xml_content = rtrim($NelgRtirCd,' ')
         do  Process-XML-Tag-Content
      end-if

      if rtrim($OthIncCd, ' ') <> '00'
         let $xml_tag = 'oth_inc_cd'
         let $xml_content = rtrim($OthIncCd,' ')
         do  Process-XML-Tag-Content
      end-if

      if rtrim($RppPastSrvcCd, ' ') <> '00'
         let $xml_tag = 'rpp_past_srvc_cd'
         let $xml_content = rtrim($RppPastSrvcCd,' ')
         do  Process-XML-Tag-Content
      end-if

      if rtrim($RespAipCd, ' ') <> '00'
         let $xml_tag = 'resp_aip_cd'
         let $xml_content = rtrim($RespAipCd,' ')
         do  Process-XML-Tag-Content
      end-if

      let $xml_tag = 'T4ASlip'
      do Process-XML-Tag-End

   end-if
   add 1 to #T4ACount

   let $WriteSummary = 'Y'

   do Initialize-Detail-T4A

end-procedure


!----------------------------------------------------------------------!
! Procedure: Save-EE-Detail                                            !
! Descr:     Save employee T4 data for further processing              !
! Called by: Write-T4-Record                                           !
!----------------------------------------------------------------------!

begin-procedure Save-EE-Detail

   move $E_Surname    to $Save_E_Surname
   move $E_FirstName  to $Save_E_FirstName
   move $E_Initial    to $Save_E_Initial
   move $E_Street     to $Save_E_Street
   move $E_Street2    to $Save_E_Street2
   move $E_City       to $Save_E_City
   move $E_Province   to $Save_E_Province
   move $E_Country    to $Save_E_Country
   move $E_PostalCode to $Save_E_PostalCode
   move $WorkProvince to $Save_WorkProvince
   move $EmplID       to $Save_EmplID
   move $SIN          to $Save_SIN
   move $E_EmploymentCode to $Save_E_EmploymentCode

end-procedure


!----------------------------------------------------------------------!
! Procedure: Initialize-Detail-T4                                      !
! Descr:     Clear temporary fields                                    !
! Called by: Initialize                                                !
!            Process-T4-Records                                        !
!            Write-T4-Record                                           !
!----------------------------------------------------------------------!
begin-procedure Initialize-Detail-T4

   move 0 to #TotIncome
   move 0 to #CPPContrib
   move 0 to #QPPContrib
   move 0 to #UIPrem
   move 0 to #RPPContrib
   move 0 to #IncomeTax
   move 0 to #UIEarnings
   move 0 to #CPPEarnings
   move 0 to #UnionDues
   move 0 to #Charity
   move 0 to #PensionAdj
   move 0 to #PPIPPrem
   move 0 to #PPIPInsEarns

   move '000000000' to $SIN
   move '0' to $CPPExempt
   move '0' to $UIExempt
   move '0' to $PPIPExempt
   move ' ' to $PensionPlanID

   move 0 to #HmBrdLodgAmt
   move 0 to #SpclWrkSiteAmt
   move 0 to #PrscbZnTrvlAmt
   move 0 to #MedTrvlAmt
   move 0 to #PrsnlVhclAmt
   move 0 to #RsnPerKmAmt
   move 0 to #LowIntLoanAmt
   move 0 to #EmpeHmLoanAmt
   move 0 to #StokOptBenAmt
   move 0 to #StokOptAmt
   move 0 to #ShrOptDBenAmt
   move 0 to #ShrOptDAmt
   move 0 to #OthTxBenAmt
   move 0 to #ShrOptD1BenAmt
   move 0 to #ShrOptD1Amt
   move 0 to #EmptCmsnAmt
   move 0 to #CfppaAmt
   move 0 to #DfrStokOptAmt
   move 0 to #MunOfcrExamt
   move 0 to #IndnEmpeAmt
   move 0 to #OcIncamt
   move 0 to #OcDyCnt
   move 0 to #Pr90CntrbrAmt
   move 0 to #Pr90NcntrbrAmt
   move 0 to #CmpnRpayEmprAmt
   move 0 to #FishGroErnAmt
   move 0 to #FishNetPtnrAmt
   move 0 to #FishShrPrsnAmt

   move ' ' to $E_Surname
   move ' ' to $E_FirstName
   move ' ' to $E_Initial
   move ' ' to $E_Street
   move ' ' to $E_Street2
   move ' ' to $E_City
   move ' ' to $E_Province
   move ' ' to $E_Country
   move ' ' to $E_PostalCode
   move ' ' to $E_EmploymentCode
   move ' ' to $WorkProvince
   move ' ' to $EmplID

end-procedure


!----------------------------------------------------------------------!
! Procedure: Initialize-Detail-T4A                                     !
! Descr:     Clear temporary fields                                    !
! Called by: Initialize                                                !
!            Process-T4A-Records                                       !
!            Write-T4A-Record                                          !
!----------------------------------------------------------------------!

begin-procedure Initialize-Detail-T4A

   move 0 to #PensSpranAmt
   move 0 to #NrgstPplnAmt
   move 0 to #Box16CAmt
   move 0 to #IndnXmptPensAmt
   move 0 to #LspAmt
   move 0 to #NrLspTrnsfAmt
   move 0 to #LspRppNelgAmt
   move 0 to #LspDpspNelgAmt
   move 0 to #LspNrgstPensAmt
   move 0 to #IndnXmptLspAmt
   move 0 to #Pr71AcrLspAmt
   move 0 to #LspNelgTrnsfAmt
   move 0 to #SelfEmplCmsnAmt
   move 0 to #ItxDdctAmt
   move 0 to #AnntyAmt
   move 0 to #IncAvgAnntyAmt
   move 0 to #Box24BAmt
   move 0 to #ElgRtirAmt
   move 0 to #IndnElgRtirAmt
   move 0 to #NelgRtirAmt
   move 0 to #IndnNelgRtirAmt
   move 0 to #OthIncamt
   move 0 to #RschGrntAmt
   move 0 to #BrsyAmt
   move 0 to #DthBenAmt
   move 0 to #WagLsIncamt
   move 0 to #IndnOthIncamt
   move 0 to #MedTrvlAmt
   move 0 to #LoanBenAmt
   move 0 to #MedPremBenAmt
   move 0 to #InsRvkDpspAmt
   move 0 to #BrdWrkSiteAmt
   move 0 to #DsbltBenAmt
   move 0 to #GrpTrmLifeAmt
   move 0 to #PtrngAlocAmt
   move 0 to #RppPastSrvcAmt
   move 0 to #Pr90RppAmt
   move 0 to #PadjAmt
   move 0 to #RespAipAmt
   move 0 to #RespEductAstAmt
   move 0 to #ChrtyDonsAmt
   move 0 to #FNCount

   move '000000000' to $Pension
   move '000000000' to $UnregPension
   move '000000000' to $PensionIndian
   move '000000000' to $LumpSum
   move '000000000' to $LumpSumTo71
   move '000000000' to $LumpSumIndian
   move '000000000' to $LumpSumRPPNotElg
   move '000000000' to $LumpSumDPSPNotElg
   move '000000000' to $LumpSumPara60
   move '000000000' to $LumpSumUnregPen
   move '000000000' to $LumpSumNoTrnsfr
   move '000000000' to $Commissions
   move '000000000' to $IncomeTax
   move '000000000' to $Annuities
   move '000000000' to $IAACAnnuity
   move '000000000' to $DPSPAnnuity
   move '000000000' to $RetireAllow
   move '000000000' to $NonEligRetireAllow
   move '000000000' to $RetireAllowIndian
   move '000000000' to $StatIndNonEligRetAll
   move '000000000' to $Other
   move '000000000' to $OtherIndian
   move '000000000' to $InstallDPSP
   move '000000000' to $BoardLodge
   move '000000000' to $MedicalTravel
   move '000000000' to $Loan
   move '000000000' to $MedicalPrem
   move '000000000' to $ResearchGrts
   move '000000000' to $Scholarships
   move '000000000' to $IncomeWLRP
   move '000000000' to $DeathBen
   move '000000000' to $DisabilityBen
   move '000000000' to $GrpLifeIns
   move '000000000' to $Patronage
   move '000000000' to $PensionPast
   move '000000000' to $PensionPre1990
   move '0000000'   to $PensionAdj
   move '000000000' to $RESPIncomePay
   move '000000000' to $RESPAssistPay
   move '000000000' to $Charity

   move '000000000' to $SIN
   move '000000000RP0000' to $E_BusNum
   move ' ' to $E_Corp1
   move ' ' to $E_Corp2

   move '00' to $PensSpranCd
   move '00' to $LspCd
   move '00' to $AnntyCd
   move '00' to $ElgRtirCd
   move '00' to $NelgRtirCd
   move '00' to $OthIncCd
   move '00' to $RppPastSrvcCd
   move '00' to $Box38Code
   move '00' to $RespAipCd
   move ' ' to $FNDescr
   move ' ' to $PensionPlanID

   move ' ' to $E_Surname
   move ' ' to $E_FirstName
   move ' ' to $E_Initial
   move ' ' to $E_Street
   move ' ' to $E_Street2
   move ' ' to $E_City
   move ' ' to $E_Province
   move ' ' to $E_Country
   move ' ' to $E_PostalCode
   move ' ' to $EmplID
   move ' ' to $E_Corp1
   move ' ' to $E_Corp2

   move ' ' to $E_FoundNegative

   do Initialize-T4A-Footnote-Array
end-procedure


!----------------------------------------------------------------------!
! Procedure: Save-Summary-Record                                       !
! Descr:     Formats and stores the basic employee information and     !
!            and summary fields further processing                     !
! Called by: Process-T4-Records                                        !
!            Process-T4A-Records                                       !
!----------------------------------------------------------------------!

begin-procedure Save-Summary-Record

   move &CT.Descr to $CompanyName
   uppercase $CompanyName
   let $string_in = substr($CompanyName, 1, 30)
   do convert-special-chars
   let $CompanyName = $string_out

   uppercase $CompnyAdd1
   let $string_in = substr($CompnyAdd1, 1, 30)
   do convert-special-chars
   let $C_Street = $string_out

   uppercase $CompnyAdd2
   let $string_in = substr($CompnyAdd2, 1, 30)
   do convert-special-chars
   let $C_Street2 = $string_out

   uppercase $CompnyCity
   let $C_City   = substr($CompnyCity, 1, 28)
   let $C_Province = rtrim(&CT.State, ' ')
   let $C_Country  = substr(&CT.Country, 1, 3)
   move &CT.Postal to $PostalCd
   do Check-Postal-Code
   move $PostalCd to $C_PostalCode

   move &TX.Acct_Contact_Name to $AcctContactName
   uppercase $AcctContactName
   let $string_in = substr($AcctContactName, 1, 22)
   do convert-special-chars
   let $AcctContactName = $string_out

   if &TX.Acct_Contact_Acode <> 0
      let $AcctContactAc = &TX.Acct_Contact_Acode
   end-if

   if &TX.Acct_Contact_Phone <> 0
      let $AcctContactPhone = &TX.Acct_Contact_Phone
   end-if

   if &TX.Acct_Contact_Ext <> 0
      let $AcctContactExt = &TX.Acct_Contact_Ext
   end-if

   move $ReportingID           to $ReportingID_Save
   move $CompanyName           to $CompanyName_Save
   move $CoNameLineTwo         to $CoNameLineTwo_Save
   move $CoNameLineThree       to $CoNameLineThree_Save
   move $C_Street              to $C_Street_Save
   move $C_Street2             to $C_Street2_Save
   move $C_City                to $C_City_Save
   move $C_Province            to $C_Province_Save
   move $C_Country             to $C_Country_Save
   move $C_PostalCode          to $C_PostalCode_Save
   move $AcctContactName       to $AcctContactName_Save
   move &TX.Acct_Contact_Acode to $AcctContactAc_Save
   move &TX.Acct_Contact_Phone to $AcctContactPhone_Save
   move &TX.Acct_Contact_Ext   to $AcctContactExt_Save
   move $CalYear               to $CalYear_Save
   move #T4Count               to #T4Count_Save
   move $Rpt_type_file         to $Rpt_type_Save
   move #SumTotIncome          to #SumTotIncome_Save
   move #SumCPPContrib         to #SumCPPContrib_Save
   move #SumUIPrem             to #SumUIPrem_Save
   move #SumRPPContrib         to #SumRPPContrib_Save
   move #SumIncomeTax          to #SumIncomeTax_Save
   move #SumPensionAdj         to #SumPensionAdj_Save
   move #SumErCPPContrib       to #SumErCPPContrib_Save
   move #SumErUIPrem           to #SumErUIPrem_Save

   move #T4ACount              to #T4ACount_Save
   move $PlanA                 to $PlanA_Save
   move $PlanB                 to $PlanB_Save
   move $PlanC                 to $PlanC_Save
   move #SumPension            to #SumPension_Save
   move #SumLumpSum            to #SumLumpSum_Save
   move #SumCommissions        to #SumCommissions_Save
   move #SumPatronage          to #SumPatronage_Save
   move #SumPPContribPast      to #SumPPContribPast_Save
   move #SumAnnuities          to #SumAnnuities_Save
   move #SumOther              to #SumOther_Save
   move #SumRetiringAllow      to #SumRetiringAllow_Save
   move #SumNonRetiringAllow   to #SumNonRetiringAllow_Save
   move #SumPensionAdj         to #SumPensionAdj_Save
   move #SumRESPIncomePay      to #SumRESPIncomePay_Save
   move #SumRESPAssistPay      to #SumRESPAssistPay_Save

end-procedure


!----------------------------------------------------------------------!
! Procedure: Write-Summary-Record                                      !
! Descr:     Formats and prints the T4 and T4A summary record based    !
!            on the XML schema.                                        !
! Called by: Read-Tax-Records                                          !
!            Process-T4-Records                                        !
!            Process-T4A-Records                                       !
!----------------------------------------------------------------------!

begin-procedure Write-Summary-Record

   if $Slip_type = 'T'

      let $xml_tag = 'T4Summary'
      do Process-XML-Tag-Beg

      let $xml_tag = 'bn'
      let $xml_content = rtrim($ReportingID_Save,' ')
      do  Process-XML-Tag-Content

      let $xml_tag = 'EMPR_NM'
      do Process-XML-Tag-Beg

      let $xml_tag = 'l1_nm'
      let $xml_content = rtrim($CompanyName_Save,' ')
      do  Process-XML-Tag-Content

      if rtrim($CoNameLineTwo_Save,' ') <> ''
         let $xml_tag = 'l2_nm'
         let $xml_content = rtrim($CoNameLineTwo_Save,' ')
         do  Process-XML-Tag-Content
      end-if

      if rtrim($CoNameLineThree_Save,' ') <> ''
         let $xml_tag = 'l3_nm'
         let $xml_content = rtrim($CoNameLineThree_Save,' ')
         do  Process-XML-Tag-Content
      end-if

      let $xml_tag = 'EMPR_NM'
      do Process-XML-Tag-End

      if rtrim($C_Street_Save,' ')     <> '' or
         rtrim($C_Street2_Save,' ')    <> '' or
         rtrim($C_City_Save,' ')       <> ''  or
         rtrim($C_Province_Save,' ')   <> '' or
         rtrim($C_Country_Save,' ')    <> '' or
         rtrim($C_PostalCode_Save,' ') <> ''

         let $xml_tag = 'EMPR_ADDR'
         do Process-XML-Tag-Beg

         if rtrim($C_Street_Save,' ') <> ''
            let $xml_tag = 'addr_l1_txt'
            let $xml_content = rtrim($C_Street_Save,' ')
            do  Process-XML-Tag-Content
         end-if

         if rtrim($C_Street2_Save,' ') <> ''
            let $xml_tag = 'addr_l2_txt'
            let $xml_content = rtrim($C_Street2_Save,' ')
            do  Process-XML-Tag-Content
         end-if

         if rtrim($C_City_Save,' ') <> ''
            let $xml_tag = 'cty_nm'
            let $xml_content = rtrim($C_City_Save,' ')
            do  Process-XML-Tag-Content
         end-if

         if rtrim($C_Province_Save,' ') <> ''
            let $xml_tag =  'prov_cd'
            let $xml_content = rtrim($C_Province_Save,' ')
            do  Process-XML-Tag-Content
         end-if

         if rtrim($C_Country_Save,' ') <> ''
            let $xml_tag = 'cntry_cd'
            let $xml_content = rtrim($C_Country_Save,' ')
            do  Process-XML-Tag-Content
         end-if

         if rtrim($C_PostalCode_Save,' ') <> ''
            let $xml_tag = 'pstl_cd'
            let $xml_content = rtrim($C_PostalCode_Save,' ')
            do  Process-XML-Tag-Content
         end-if

         let $xml_tag = 'EMPR_ADDR'
         do Process-XML-Tag-End

      end-if

      let $xml_tag = 'CNTC'
      do Process-XML-Tag-Beg

      let $xml_tag = 'cntc_nm'
      let $xml_content = rtrim($AcctContactName_Save,' ')
      do  Process-XML-Tag-Content

      let $xml_tag = 'cntc_area_cd'
      let $xml_content = rtrim($AcctContactAc_Save,' ')
      do  Process-XML-Tag-Content

      let $xml_tag = 'cntc_phn_nbr'
      let $xml_content = edit($AcctContactPhone_Save,'xxx-xxxx')
      do  Process-XML-Tag-Content

      if $AcctContactExt_Save <> ' '
         let $xml_tag = 'cntc_extn_nbr'
         do Format-Number (&TX.Acct_Contact_Ext, $AcctContactExt, '9999')
         let $xml_content = rtrim($AcctContactExt_Save,' ')
         do  Process-XML-Tag-Content
      end-if

      let $xml_tag = 'CNTC'
      do Process-XML-Tag-End

      let $xml_tag = 'tx_yr'
      let $xml_content = rtrim($CalYear_Save,' ')
      do  Process-XML-Tag-Content

      let $xml_tag = 'slp_cnt'
      do format-number(#T4Count_Save, $T4Count_Save, '99999')
      let $xml_content = ltrim($T4Count_Save,' ')
      do  Process-XML-Tag-Content

      let $xml_tag = 'rpt_tcd'
      let $xml_content = rtrim($Rpt_type_Save,' ')
      do  Process-XML-Tag-Content


      if #SumTotIncome_Save    > 0  or
         #SumCPPContrib_Save   > 0  or
         #SumUIPrem_Save       > 0  or
         #SumRPPContrib_Save   > 0  or
         #SumIncomeTax_Save    > 0  or
         #SumPensionAdj_Save   > 0  or
         #SumErCPPContrib_Save > 0  or
         #SumErUIPrem_Save     > 0

            let $xml_tag = 'T4_TAMT'
            do Process-XML-Tag-Beg

            if #SumTotIncome_Save > 0
               let $xml_tag = 'tot_empt_incamt'
               do format-number(#SumTotIncome_Save, $SumTotIncome_Save, '99999999999.99')
               let $xml_content = ltrim($SumTotIncome_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumCPPContrib_Save > 0
               let $xml_tag = 'tot_empe_cpp_amt'
               do format-number(#SumCPPContrib_Save, $SumCPPContrib_Save, '99999999999.99')
               let $xml_content = ltrim($SumCPPContrib_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumUIPrem_Save > 0
               let $xml_tag = 'tot_empe_eip_amt'
               do format-number(#SumUIPrem_Save, $SumUIPrem_Save, '99999999999.99')
               let $xml_content = ltrim($SumUIPrem_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumRPPContrib_Save > 0
               let $xml_tag = 'tot_rpp_cntrb_amt'
               do format-number(#SumRPPContrib_Save, $SumRPPContrib_Save, '99999999999.99')
               let $xml_content = ltrim($SumRPPContrib_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumIncomeTax_Save > 0
               let $xml_tag = 'tot_itx_ddct_amt'
               do format-number(#SumIncomeTax_Save, $SumIncomeTax_Save, '99999999999.99')
               let $xml_content = ltrim($SumIncomeTax_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumPensionAdj_Save > 0
               let $xml_tag = 'tot_padj_amt'
               do format-number(#SumPensionAdj_Save, $SumPensionAdj_Save, '99999999999.99')
               let $xml_content = ltrim($SumPensionAdj_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumErCPPContrib_Save > 0
               let $xml_tag = 'tot_empr_cpp_amt'
               do format-number(#SumErCPPContrib_Save, $SumErCPPContrib_Save, '99999999999.99')
               let $xml_content = ltrim($SumErCPPContrib_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumErUIPrem_Save > 0
               let $xml_tag = 'tot_empr_eip_amt'
               do format-number(#SumErUIPrem_Save, $SumErUIPrem_Save, '99999999999.99')
               let $xml_content = ltrim($SumErUIPrem_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            let $xml_tag = 'T4_TAMT'
            do Process-XML-Tag-End
      end-if

      let $xml_tag = 'T4Summary'
      do Process-XML-Tag-End

      let $xml_tag = 'T4'
      do Process-XML-Tag-End

      let $xml_tag = 'Return'
      do Process-XML-Tag-End

      add #T4Count_Save to #TotalT4Count
      do Print-Summary-Data
      do Initialize-Summary-T4
      let $Error-Report = 'N'

   else

      let $xml_tag = 'T4ASummary'
      do Process-XML-Tag-Beg

      let $xml_tag = 'bn'
      let $xml_content = rtrim($ReportingID_Save,' ')
      do  Process-XML-Tag-Content

      let $xml_tag = 'PAYR_NM'
      do Process-XML-Tag-Beg

      let $xml_tag = 'l1_nm'
      let $xml_content = rtrim($CompanyName_Save,' ')
      do  Process-XML-Tag-Content

      if rtrim($CoNameLineTwo_Save,' ') <> ''
         let $xml_tag = 'l2_nm'
         let $xml_content = rtrim($CoNameLineTwo_Save,' ')
         do  Process-XML-Tag-Content
      end-if

      if rtrim($CoNameLineThree_Save,' ') <> ''
         let $xml_tag = 'l3_nm'
         let $xml_content = rtrim($CoNameLineThree_Save,' ')
         do  Process-XML-Tag-Content
      end-if

      let $xml_tag = 'PAYR_NM'
      do Process-XML-Tag-End

      if rtrim($C_Street_Save,' ')     <> '' or
         rtrim($C_Street2_Save,' ')    <> '' or
         rtrim($C_City_Save,' ')       <> '' or
         rtrim($C_Country_Save,' ')    <> '' or
         rtrim($C_Province_Save,' ')   <> '' or
         rtrim($C_PostalCode_Save,' ') <> ''

         let $xml_tag = 'PAYR_ADDR'
         do Process-XML-Tag-Beg

         if rtrim($C_Street_Save,' ') <> ''
            let $xml_tag = 'addr_l1_txt'
            let $xml_content = rtrim($C_Street_Save,' ')
            do  Process-XML-Tag-Content
         end-if

         if rtrim($C_Street2_Save,' ') <> ''
            let $xml_tag = 'addr_l2_txt'
            let $xml_content = rtrim($C_Street2_Save,' ')
            do  Process-XML-Tag-Content
         end-if

         if rtrim($C_City_Save,' ') <> ''
            let $xml_tag = 'cty_nm'
            let $xml_content = rtrim($C_City_Save,' ')
            do  Process-XML-Tag-Content
         end-if

         if rtrim($C_Country_Save,' ') <> ''
            let $xml_tag = 'cntry_cd'
            let $xml_content = rtrim($C_Country_Save,' ')
            do  Process-XML-Tag-Content
         end-if

         if rtrim($C_Province_Save,' ') <> ''
            let $xml_tag =  'prov_cd'
            let $xml_content = rtrim($C_Province_Save,' ')
            do  Process-XML-Tag-Content
         end-if

         if rtrim($C_PostalCode_Save,' ') <> ''
            let $xml_tag = 'pstl_cd'
            let $xml_content = rtrim($C_PostalCode_Save,' ')
            do  Process-XML-Tag-Content
         end-if

         let $xml_tag = 'PAYR_ADDR'
         do Process-XML-Tag-End

      end-if

      let $xml_tag = 'CNTC'
      do Process-XML-Tag-Beg

      let $xml_tag = 'cntc_nm'
      let $xml_content = rtrim($AcctContactName_Save,' ')
      do  Process-XML-Tag-Content

      let $xml_tag = 'cntc_area_cd'
      let $xml_content = rtrim($AcctContactAc_Save,' ')
      do  Process-XML-Tag-Content

      let $xml_tag = 'cntc_phn_nbr'
      let $xml_content = edit($AcctContactPhone_Save,'xxx-xxxx')
      do  Process-XML-Tag-Content

      if $AcctContactExt_Save <> ' '
         let $xml_tag = 'cntc_extn_nbr'
         do Format-Number (&TX.Acct_Contact_Ext, $AcctContactExt, '9999')
         let $xml_content = rtrim($AcctContactExt_Save,' ')
         do  Process-XML-Tag-Content
      end-if

      let $xml_tag = 'CNTC'
      do Process-XML-Tag-End

      let $xml_tag = 'tx_yr'
      let $xml_content = rtrim($CalYear_Save,' ')
      do  Process-XML-Tag-Content

      let $xml_tag = 'slp_cnt'
      do format-number(#T4ACount_Save, $T4ACount_Save, '99999')
      let $xml_content = ltrim($T4ACount_Save,' ')
      do  Process-XML-Tag-Content

      if rtrim ($PlanA_Save, ' ') <> ''
         let $xml_tag = 'RPP_NBR'
         do Process-XML-Tag-Beg

         if rtrim ($PlanA_Save, ' ') <> ''
            let $xml_tag = 'rpp_rgst_1_nbr'
            let $xml_content = rtrim($PlanA_Save,' ')
            do  Process-XML-Tag-Content
         end-if

         if rtrim ($PlanB_Save, ' ') <> ''
            let $xml_tag = 'rpp_rgst_2_nbr'
            let $xml_content = rtrim($PlanB_Save,' ')
            do  Process-XML-Tag-Content
         end-if

         if rtrim ($PlanC_Save, ' ') <> ''
            let $xml_tag = 'rpp_rgst_3_nbr'
            let $xml_content = rtrim($PlanC_Save,' ')
            do  Process-XML-Tag-Content
         end-if

         let $xml_tag = 'RPP_NBR'
         do Process-XML-Tag-End
      end-if

      let $xml_tag = 'rpt_tcd'
      let $xml_content = rtrim($Rpt_type_Save,' ')
      do  Process-XML-Tag-Content

      if #SumPension_Save          > 0  or
         #SumLumpSum_Save          > 0  or
         #SumCommissions_Save      > 0  or
         #SumPatronage_Save        > 0  or
         #SumPPContribPast_Save    > 0  or
         #SumAnnuities_Save        > 0  or
         #SumOther_Save            > 0  or
         #SumRetiringAllow_Save    > 0  or
         #SumNonRetiringAllow_Save > 0  or
         #SumIncomeTax_Save        > 0  or
         #SumPensionAdj_Save       > 0  or
         #SumRESPIncomePay_Save    > 0  or
         #SumRESPAssistPay_Save    > 0


            let $xml_tag = 'T4A_TAMT'
            do Process-XML-Tag-Beg

            if #SumPension_Save > 0
               let $xml_tag = 'tot_pens_spran_amt'
               do format-number(#SumPension_Save, $SumPension_Save, '99999999999.99')
               let $xml_content = ltrim($SumPension_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumLumpSum_Save > 0
               let $xml_tag = 'tot_lsp_amt'
               do format-number(#SumLumpSum_Save, $SumLumpSum_Save, '99999999999.99')
               let $xml_content = ltrim($SumLumpSum_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumCommissions_Save > 0
               let $xml_tag = 'tot_self_cmsn_amt'
               do format-number(#SumCommissions_Save, $SumCommissions_Save, '99999999999.99')
               let $xml_content = ltrim($SumCommissions_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumPatronage_Save > 0
               let $xml_tag = 'tot_ptrng_aloc_amt'
               do format-number(#SumPatronage_Save, $SumPatronage_Save, '99999999999.99')
               let $xml_content = ltrim($SumPatronage_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumPPContribPast_Save > 0
               let $xml_tag = 'tot_past_srvc_amt'
               do format-number(#SumPPContribPast_Save, $SumPPContribPast_Save, '99999999999.99')
               let $xml_content = ltrim($SumPPContribPast_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumAnnuities_Save > 0
               let $xml_tag = 'tot_annty_incamt'
               do format-number(#SumAnnuities_Save, $SumAnnuities_Save, '99999999999.99')
               let $xml_content = ltrim($SumAnnuities_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumOther_Save > 0
               let $xml_tag = 'totr_incamt'
               do format-number(#SumOther_Save, $SumOther_Save, '99999999999.99')
               let $xml_content = ltrim($SumOther_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumRetiringAllow_Save > 0
               let $xml_tag = 'tot_elg_rtir_amt'
               do format-number(#SumRetiringAllow_Save, $SumRetiringAllow_Save, '99999999999.99')
               let $xml_content = ltrim($SumRetiringAllow_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumNonRetiringAllow_Save > 0
               let $xml_tag = 'tot_nelg_rtir_amt'
               do format-number(#SumNonRetiringAllow_Save, $SumNonRetiringAllow_Save, '99999999999.99')
               let $xml_content = ltrim($SumNonRetiringAllow_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumIncomeTax_Save > 0
               let $xml_tag = 'tot_itx_dedn_amt'
               do format-number(#SumIncomeTax_Save, $SumIncomeTax_Save, '99999999999.99')
               let $xml_content = ltrim($SumIncomeTax_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumPensionAdj_Save > 0
               let $xml_tag = 'tot_padj_amt'
               do format-number(#SumPensionAdj_Save, $SumPensionAdj_Save, '99999999999.99')
               let $xml_content = ltrim($SumPensionAdj_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumRESPIncomePay_Save > 0
               let $xml_tag = 'tot_resp_aip_amt'
               do format-number(#SumRESPIncomePay_Save, $SumRESPIncomePay_Save, '99999999999.99')
               let $xml_content = ltrim($SumRESPIncomePay_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            if #SumRESPAssistPay_Save > 0
               let $xml_tag = 'tot_resp_amt'
               do format-number(#SumRESPAssistPay_Save, $SumRESPAssistPay_Save, '99999999999.99')
               let $xml_content = ltrim($SumRESPAssistPay_Save,' ')
               do  Process-XML-Tag-Content
            end-if

            let $xml_tag = 'T4A_TAMT'
            do Process-XML-Tag-End
      end-if

      let $xml_tag = 'T4ASummary'
      do Process-XML-Tag-End

      let $xml_tag = 'T4A'
      do Process-XML-Tag-End

      let $xml_tag = 'Return'
      do Process-XML-Tag-End

      add #T4ACount_Save to #TotalT4ACount
      do Print-Summary-Data
      do Initialize-Summary-T4A
      let $Error-Report = 'N'

   end-if

   let $WriteSummary = 'N'

end-procedure


!----------------------------------------------------------------------!
! Procedure:  Process-XML-Tag-Content                                  !
! Descr:      Main processing routine for calculating initial values   !
!             required for cell output                                 !
! Called by:  Write-Transmitter-Record                                 !
!             Write-T4-Record                                          !
!             Write-T4A-Record                                         !
!             Write-Summary-Record                                     !
!----------------------------------------------------------------------!

begin-procedure Process-XML-Tag-Content

   let $xml_output_line = ''
   let $xml_output_line = $xml_cntrl_begin || $xml_tag || $xml_cntrl_end  || $xml_content
                || $xml_cntrl_begin || $xml_tag_end || $xml_tag || $xml_cntrl_end
   write #outputfile from $xml_output_line

end-procedure


!----------------------------------------------------------------------!
! Procedure:  Format-XML-Tag-Beg                                       !
! Descr:      Main processing routine for calculating initial values   !
!             required for cell output                                 !
! Called by:  Write-Transmitter-Record                                 !
!             Write-T4-Record                                          !
!             Write-T4A-Record                                         !
!             Write-Summary-Record                                     !
!----------------------------------------------------------------------!

begin-procedure Process-XML-Tag-Beg

   let $xml_output_line = ''
   let $xml_output_line = $xml_cntrl_begin || $xml_tag|| $xml_cntrl_end
   write #outputfile from $xml_output_line

end-procedure


!----------------------------------------------------------------------!
! Procedure:  Process-XML-Tag-End                                      !
! Descr:      Main processing routine for calculating initial values   !
!             required for cell output                                 !
! Called by:  Write-Transmitter-Record                                 !
!             Write-T4-Record                                          !
!             Write-T4A-Record                                         !
!             Write-Summary-Record                                     !
!----------------------------------------------------------------------!

begin-procedure Process-XML-Tag-End

   let $xml_output_line = ''
   let $xml_output_line = $xml_cntrl_begin || $xml_tag_end || $xml_tag|| $xml_cntrl_end
   write #outputfile from $xml_output_line

end-procedure


!----------------------------------------------------------------------!
! Procedure: Check-Status-T4                                           !
! Descr:     Ensures that the open amend, cancel, or reissue record    !
!            exists in PS_CAN_AMEND_T4.                                !
! Called by: Read-Tax-Records                                          !
!----------------------------------------------------------------------!
begin-procedure Check-Status-T4

   move 'N' to $StatusOpen
begin-SELECT
CST.EMPLID

   move 'Y' to $StatusOpen

FROM PS_CAN_AMEND_T4_S CST
WHERE CST.COMPANY         = &S.COMPANY
  AND CST.EMPLID          = &E.EMPLID
  AND CST.CALENDAR_YEAR   = &TX.Balance_Year
  AND CST.SEQUENCE_NUMBER = &S.SEQUENCE_NUMBER
  AND CST.WAGE_LOSS_PLAN  = &S.WAGE_LOSS_PLAN
  AND CST.PROVINCE        = &S.PROVINCE
  AND CST.AMEND_STATUS    = 'O'

end-SELECT

end-procedure


!----------------------------------------------------------------------!
! Procedure: Check-Status-T4A                                          !
! Descr:     Ensures that the open amend, cancel, or reissue record    !
!            exists in PS_CAN_AMEND_T4A.                                !
! Called by: Write-Summary-Record                                      !
!----------------------------------------------------------------------!
begin-procedure Check-Status-T4A

   move 'N' to $StatusOpen
begin-SELECT
CSA.EMPLID

   move 'Y' to $StatusOpen

FROM PS_CAN_AMEND_T4A_S CSA
WHERE CSA.COMPANY         = &S.COMPANY
  AND CSA.EMPLID          = &E.EMPLID
  AND CSA.CALENDAR_YEAR   = &TX.Balance_Year
  AND CSA.SEQUENCE_NUMBER = &S.SEQUENCE_NUMBER
  AND CSA.WAGE_LOSS_PLAN  = &S.WAGE_LOSS_PLAN
  AND CSA.PROVINCE        = &S.PROVINCE
  AND CSA.AMEND_STATUS    = 'O'

end-SELECT

end-procedure


!----------------------------------------------------------------------!
! Procedure: Initialize-Summary-T4                                     !
! Descr:     Clear temporary fields                                    !
! Called by: Initialize                                                !
!            Write-Summary-Record                                      !
!----------------------------------------------------------------------!
begin-procedure Initialize-Summary-T4

   move 0 to #SumTotIncome
   move 0 to #SumCPPContrib
   move 0 to #SumErCPPContrib
   move 0 to #SumQPPContrib
   move 0 to #SumUIPrem
   move 0 to #SumErUIPrem
   move 0 to #SumRPPContrib
   move 0 to #SumIncomeTax
   move 0 to #SumCPPEarnings
   move 0 to #SumPensionAdj
   move 0 to #T4Count

   move ' ' to $CompanyName
   move ' ' to $CoNameLineTwo
   move ' ' to $CoNameLineThree
   move ' ' to $C_Street
   move ' ' to $C_Street2
   move ' ' to $C_City
   move ' ' to $C_Province
   move ' ' to $C_Country
   move ' ' to $C_PostalCode

end-procedure


!----------------------------------------------------------------------!
! Procedure: Initialize-Summary-T4A                                    !
! Descr:     Clear temporary fields                                    !
! Called by: Initialize                                                !
!            Write-Summary-Record                                      !
!----------------------------------------------------------------------!
begin-procedure Initialize-Summary-T4A

   move 0 to #SumPension
   move 0 to #SumLumpSum
   move 0 to #SumCommissions
   move 0 to #SumPatronage
   move 0 to #SumPPContribPast
   move 0 to #SumAnnuities
   move 0 to #SumOther
   move 0 to #SumRetiringAllow
   move 0 to #SumNonRetiringAllow
   move 0 to #SumIncomeTax
   move 0 to #SumPensionAdj
   move 0 to #SumRESPIncomePay
   move 0 to #SumRESPAssistPay

   move 0 to #T4ACount

   move ' ' to $PlanA
   move ' ' to $PlanB
   move ' ' to $PlanC
   move ' ' to $CompanyName
   move ' ' to $CoNameLineTwo
   move ' ' to $CoNameLineThree
   move ' ' to $C_Street
   move ' ' to $C_Street2
   move ' ' to $C_City
   move ' ' to $C_Province
   move ' ' to $C_Country
   move ' ' to $C_PostalCode

end-procedure


!----------------------------------------------------------------------!
! Procedure: Get-Summary-Count-Original                                !
! Descr:     Determines the number of Reporting IDs that are present   !
!            in a submission by counting the unique Reporting IDs from !
!            PS_CAN_YE_SLIP                                            !
! Called by: Write-Transmitter-Record                                  !
!----------------------------------------------------------------------!
begin-procedure Get-Summary-Count-Original

  move 0     to #SummaryCounter
  move 'xxx' to $PriorID

begin-SELECT

SL.REPORTING_ID

   if &SL.Reporting_ID <> $PriorID
      add 1 to #SummaryCounter
      move &SL.Reporting_ID to $PriorID
   end-if

FROM PS_CAN_YE_SLIP SL
WHERE SL.CALENDAR_YEAR = &TX.Balance_Year
AND   SL.TAXFORM_ID = $Slip_type
AND   SL.SEQUENCE_NUMBER = (SELECT MAX(SL1.SEQUENCE_NUMBER)
                            FROM PS_CAN_YE_SLIP SL1
                            WHERE SL1.COMPANY       = SL.COMPANY
                              AND SL1.EMPLID        = SL.EMPLID
                              AND SL1.CALENDAR_YEAR = SL.CALENDAR_YEAR
                              AND SL1.YE_SLIP_PROCESS = SL.YE_SLIP_PROCESS)
AND SL.YE_SLIP_PROCESS = 'O'
ORDER BY REPORTING_ID ASC

end-SELECT

end-procedure


!----------------------------------------------------------------------!
! Procedure: Get-Summary-Count-Amend-T4                                !
! Descr:     Determines the number of Reporting IDs that are present   !
!            in a submission by counting the unique Reporting IDs from !
!            PS_CAN_AMEND_T4_S                                         !
! Called by: Write-Transmitter-Record                                  !
!----------------------------------------------------------------------!

begin-procedure Get-Summary-Count-Amend-T4

  move 0     to #SummaryCounter
  move 'xxx' to $PriorID

begin-SELECT
CAT.REPORTING_ID

   if &CAT.Reporting_ID <> $PriorID
      add 1 to #SummaryCounter
      move &CAT.Reporting_ID to $PriorID
   end-if

FROM PS_CAN_AMEND_T4_S CAT
WHERE CAT.CALENDAR_YEAR = &TX.Balance_Year
AND   CAT.TAXFORM_ID = $Slip_type
AND   CAT.SEQUENCE_NUMBER = (SELECT MAX(CAT1.SEQUENCE_NUMBER)
                             FROM PS_CAN_AMEND_T4_S CAT1
                             WHERE CAT1.COMPANY       = CAT.COMPANY
                               AND CAT1.EMPLID        = CAT.EMPLID
                               AND CAT1.CALENDAR_YEAR = CAT.CALENDAR_YEAR)
#ifdef MVS
  \$ye_slip_process2\
#else
  [$ye_slip_process2]
#endif
AND CAT.AMEND_STATUS = 'O'
ORDER BY CAT.REPORTING_ID ASC

end-SELECT

end-procedure


!----------------------------------------------------------------------!
! Procedure: Get-Summary-Count-Amend-T4A                               !
! Descr:     Determines the number of Reporting IDs that are present   !
!            in a submission by counting the unique Reporting IDs from !
!            PS_CAN_AMEND_T4A_S                                        !
! Called by: Write-Transmitter-Record                                  !
!----------------------------------------------------------------------!
begin-procedure Get-Summary-Count-Amend-T4A

  move 0     to #SummaryCounter
  move 'xxx' to $PriorID

begin-SELECT
CAA.REPORTING_ID

   if &CAA.Reporting_ID <> $PriorID
      add 1 to #SummaryCounter
      move &CAA.Reporting_ID to $PriorID
   end-if

FROM PS_CAN_AMEND_T4A_S CAA
WHERE CAA.CALENDAR_YEAR = &TX.Balance_Year
AND   CAA.TAXFORM_ID = $Slip_type
AND   CAA.SEQUENCE_NUMBER = (SELECT MAX(CAA1.SEQUENCE_NUMBER)
                             FROM PS_CAN_AMEND_T4A_S CAA1
                             WHERE CAA1.COMPANY       = CAA.COMPANY
                               AND CAA1.EMPLID        = CAA.EMPLID
                               AND CAA1.CALENDAR_YEAR = CAA.CALENDAR_YEAR)
#ifdef MVS
  \$ye_slip_process3\
#else
  [$ye_slip_process3]
#endif
AND CAA.AMEND_STATUS = 'O'
ORDER BY CAA.REPORTING_ID ASC

end-SELECT

end-procedure


!----------------------------------------------------------------------!
! Procedure: Convert-Parameters                                        !
! Descr:     Format various variables for further processing.          !
! Called by: Initialize                                                !
!----------------------------------------------------------------------!
begin-procedure Convert-Parameters

   move $RC_CAN_YE.Slip_Type to $Slip_type

   move $RC_CAN_YE.PY_Rpt_type  to $Rpt_type
   let $Rpt_type_file = $Rpt_type

   evaluate $Rpt_type
      when = 'A'
         let $ye_slip_process  = ' AND S.YE_SLIP_PROCESS IN (''A'', ''C'') '
         let $ye_slip_process2 = ' AND CAT.YE_PROC_TYPE IN (''A'', ''C'') '
         let $ye_slip_process3 = ' AND CAA.YE_PROC_TYPE IN (''A'', ''C'') '
         let $seq_number       = ')'
         break
      when = 'N'
         let $ye_slip_process  = ' AND S.YE_SLIP_PROCESS = ''N'' '
         let $ye_slip_process2 = ' AND CAT.YE_PROC_TYPE  = ''N'' '
         let $ye_slip_process3 = ' AND CAA.YE_PROC_TYPE  = ''N'' '
         let $seq_number       = ')'
         let $Rpt_type_file    = 'O'
         break
      when = 'O'
         let $ye_slip_process = ' AND S.YE_SLIP_PROCESS = ''O'' '
         let $seq_number      = ' AND S1.YE_SLIP_PROCESS = S.YE_SLIP_PROCESS) '
         break
   end-evaluate

   if $Rpt_type = 'A' or $Rpt_type = 'N'
      let $Proc_Amend_Cancel = 'Y'
   else
      let $StatusOpen = 'Y'
   end-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: Prompts                                                   !
! Descr:     Prompt for run control values if running report through   !
!            Command Prompt.                                           !
! Called by: Initialize                                                !
!----------------------------------------------------------------------!
begin-procedure Prompts

   while $Slip_type = ''
      input $Slip_type 'T4 and T4A, T4 Only, or T4A Only? (X, T, A or Q to quit)'
      uppercase $Slip_type
      if INSTR('XTAQ',$Slip_type,1) = 0
         display ' '
         display '***** Enter X, T, A or Q *****'
         display ' '
         move '' to $Slip_type
      end-if
   end-while

   while $Rpt_type = ''
      input $Rpt_type 'Original, Amend or Reissued? (O, A, N or Q to quit)'
      uppercase $Rpt_type
      if INSTR('OAQ',$Rpt_type,1) = 0
         display ' '
         display '***** Enter O, A, N or Q *****'
         display ' '
         move '' to $Rpt_type
      end-if
   end-while

end-procedure


!----------------------------------------------------------------------!
! Procedure: Print-Summary-Data                                        !
! Descr:     Format and print the summary record for audit purposes.   !
! Called by: Write-Summary-Record                                      !
!----------------------------------------------------------------------!

begin-procedure Print-Summary-Data

  if $Error-Report = 'Y'
    new-page
  end-if

  if $Slip_type = 'T'

     print    $Ctx910xm_Print_data_msg1     (+3,1)
     print    $Ctx910xm_Bus_Nbr             (+2,1)
     print    $ReportingID_Save             (0,60)
     print    $Ctx910xm_Rpt_Type            (+1,1)
     print    $Rpt_type_file                (0,60)
     print    $Ctx910xm_T4_#slips           (+1,1)
     print    #T4Count                      (0,60)   edit 9999990
     print    $Ctx910xm_T4_tot_inc          (+1,1)
     print    #SumTotIncome                 (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4_tot_ee_cpp       (+1,1)
     print    #SumCPPContrib                (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4_tot_ee_ei        (+1,1)
     print    #SumUIPrem                    (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4_tot_rpp          (+1,1)
     print    #SumRPPContrib                (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4_tot_inc_tax      (+1,1)
     print    #SumIncomeTax                 (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4_tot_pen_adj      (+1,1)
     print    #SumPensionAdj                (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4_tot_er_cpp       (+1,1)
     print    #SumErCPPContrib              (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4_tot_er_ei        (+1,1)
     print    #SumErUIPrem                  (0,60)   edit 99999999990.99

     new-page

     add 1 to #SummarycountT4printed
  else
     print    $Ctx910xm_Print_data_msg2     (+3,1)
     print    $Ctx910xm_Bus_Nbr             (+2,1)
     print    $ReportingID_Save             (0,60)
     print    $Ctx910xm_Rpt_Type            (+1,1)
     print    $Rpt_type_file                (0,60)
     print    $Ctx910xm_T4A_#slips          (+1,1)
     print    #T4ACount                     (0,60)   edit 9999990
     print    $Ctx910xm_T4A_tot_pen         (+1,1)
     print    #SumPension                   (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4A_tot_ls          (+1,1)
     print    #SumLumpSum                   (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4A_tot_com         (+1,1)
     print    #SumCommissions               (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4A_tot_ptrng       (+1,1)
     print    #SumPatronage                 (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4A_tot_rpp         (+1,1)
     print    #SumPPContribPast             (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4A_tot_ann         (+1,1)
     print    #SumAnnuities                 (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4A_tot_oth_inc     (+1,1)
     print    #SumOther                     (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4A_tot_elg_ra      (+1,1)
     print    #SumRetiringAllow             (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4A_tot_nelg_ra     (+1,1)
     print    #SumNonRetiringAllow          (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4A_tot_inc_tax     (+1,1)
     print    #SumIncomeTax                 (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4A_tot_pen_adj     (+1,1)
     print    #SumPensionAdj                (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4A_tot_resp_acc    (+1,1)
     print    #SumRESPIncomePay             (0,60)   edit 99999999990.99
     print    $Ctx910xm_T4A_tot_resp_edu    (+1,1)
     print    #SumRESPAssistPay             (0,60)   edit 99999999990.99

     new-page

     add 1 to #SummarycountT4Aprinted
  end-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: Check-Postal-Code                                         !
! Descr:     Formats the Canadian Postal Code resulting in A9A9A9.     !
! Called by: Save-Employee-Data                                        !
!            Write-Transmitter-Record                                  !
!            Save-Summary-Record                                       !
!----------------------------------------------------------------------!
begin-procedure Check-Postal-Code

   find ' ' in $PostalCd 0 #space_loc
   if #space_loc > 0 and #space_loc < 5
      let $Postal1 = substr($PostalCd, 1, #space_loc)
      let #start = #space_loc + 2
      let $Postal2 = substr($PostalCd, #start, 3)
      let $PostalCd = $Postal1 || $Postal2
   end-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: Save-Pension-Plan-ID                                      !
! Descr:     Stores the 3 Pension Plan IDs of the T4A slips.           !
! Called by: Save-T4A-Detail-Data                                      !
!----------------------------------------------------------------------!
begin-Procedure Save-Pension-Plan-ID

  if rtrim($PlanA, ' ') = ''
     move $PensionPlanID to $PlanA
  else
     if $PensionPlanID <> $PlanA
        if rtrim($PlanB, ' ') = ''
           move $PensionPlanID to $PlanB
        else
          if $PensionPlanID <> $PlanB
             if rtrim($PlanC, ' ')  = ''
                move $PensionPlanID to $PlanC
             end-if
          end-if
        end-if
     end-if
  end-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: Convert-Special-Chars                                     !
! Descr:     Convert special characters into character strings         !
!            prior to writing the data in the XML file.                !
! Called by: Save-Employee-Data                                        !
!            Write-Transmitter-Record                                  !
!            Save-Summary-Record                                       !
!----------------------------------------------------------------------!
begin-procedure Convert-Special-Chars

  let $string_in   = replace($string_in, '&', '&amp;')
  let $string_in   = replace($string_in, '"', '&quot;')
  let $string_in   = replace($string_in, '<', '&lt;')
  let $string_in   = replace($string_in, '>', '&gt;')
  let $string_in   = replace($string_in, '''', '&apos;')

  let $string_out  = $string_in

end-procedure


!----------------------------------------------------------------------!
! Procedure: Upd-Submission-Ref-ID                                     !
! Descr:     Increments the Submission Reference ID by 1.              !
! Called by: Process-Main                                              !
!----------------------------------------------------------------------!
begin-procedure Upd-Submission-Ref-ID

let $SQL-STATEMENT = 'CTX910XM.SQR, UPDATE, PS_CTXPRC_PARAMS'
begin-sql on-error=SQL-Error
UPDATE PS_CTXPRC_PARAMS
  SET SUBMISSION_REF_ID = SUBMISSION_REF_ID + 1

end-sql

end-procedure


!----------------------------------------------------------------------!
! Procedure: Error-Report                                              !
! Descr:     Flags Emplid with negative amount fields.                 !
! Called by: Process-T4-Records                                        !
!            Process-T4A-Records                                       !
!            Write-Summary-Record                                      !
!----------------------------------------------------------------------!

begin-procedure Error-Report

   let $EmployeeId = rtrim(&E.Emplid, ' ')
   print $Ctx910xm_Negative_amt_err1            (+2,2)
   print $EmployeeId                            (0,+2)
   if $Slip_type = 'T'
      print $Ctx910xm_Negative_amt_err2         (0,+1)
   else
      print $Ctx910xm_Negative_amt_err3         (0,+1)
   end-if

   let $Error-Report = 'Y'
end-procedure


!----------------------------------------------------------------------!
! Procedure: Error-Report-Summary-Count                                !
! Descr:     Flags summary count inconsistency.  If summary counter    !
!            on tranmission record is not equal to the number of       !
!            summaries written in the file.                            !
! Called by: Process-Main                                              !
!----------------------------------------------------------------------!

begin-procedure Error-Report-Summary-Count

   if #SummaryCounter <> (#SummarycountT4printed + #SummarycountT4Aprinted)

      print $Ctx910xm_Summary_Count_err1         (+2,2)
      print $Ctx910xm_Summary_Count_err2         (+2,6)
      print #SummaryCounter                      (0,+2)
      print $Ctx910xm_Summary_Count_err3         (+2,6)
      print #SummarycountT4printed               (0,+2)
      print $Ctx910xm_Summary_Count_err4         (+2,6)
      print #SummarycountT4Aprinted              (0,+2)

   end-if

end-procedure




!**********************************************************************!
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getfrmat.sqc'  !Get-Diskette-Format procedure
#Include 'rotname1.sqc'  !Rotate-Name procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#ifdef PRCSSCHD
#Include 'ctxrctl1.sqc'  !Get-Canadian-Year-End Parameters
#Include 'stdapi.sqc'    !Update Process API
#Include 'txrnctl1.sqc'  !Process Scheduler Run Controls
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the Report language
#include 'rellang.sqc'   !Read language-dependent text from the database.

#endif
