!***********************************************************************
!  TAX002VT:  Qtrly State Employee Wage List - VERMONT                 *
!                                                                      *
!             NOTE: "#IFDEF TAXTEST" in main SELECT is used for        *
!                   testing this report against DEMO database          *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:06:07:42                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'  !Set environment
#Include 'usarpt.sqc'  !Get USA variables

begin-setup

#include 'prt002a.sqc'  !Printer and page-size initialization

end-setup

begin-report
  do Init-Report

  do Process-Main

  if #Employees_On_Page > 0 and #Employees_On_Page < 25
    do Page-Complete
  end-if

  do Stdapi-Term

end-report

begin-procedure Init-Report
  display 'Quarterly Employee Wage List - Vermont'

  do Init-DateTime
  do Init-Number

  do Get-Tax-Reporting-Run-Controls

  move $PeriodEndDate to $AsOfDate  !for included procedures
  do Get-Calendar-Year-Id
  do Stdapi-Init

end-procedure

begin-heading 7
  print 'EMPLOYER NO.'            (3,4)
  print &Employer_ID_SUT          (5,4)
  print 'QUARTER ENDING DATE'     (3,20)
  move '/' to $DDelimiter
  do Format-DateTime($PeriodEndDate, $out, {DEFMDY}, '', '')
  print $out                      (5,25)
  print 'SSN'                     (8,4)
  print 'EMPLOYEE NAME'           (8,16)
  print 'GROSS WAGES'             (8,48)
  print 'H/S'                     (8,61)
  print 'RATE'                    (8,66)
  print 'M-F'                     (8,72)
  do Format-Number(#PAGE_NUM, $out, 'b99')
  print 'Page'                    (60,4)
  print $out                      (60,10)
  do Format-Number(#TotalPages, $out, 'b99')
  print 'of'                      (60,15)
  print $out                      (60,18)
  do Format-Number(#PageTotal, $out, 'b9999999.99')
  print 'Page Total'              (60,55)
  print $out                      (60,66)
  if #PAGE_NUM = #TotalPages
    do Format-Number(#CompanyTotal, $out, 'b9999999.99')
    print 'Employer Total'        (62,51)
    print $out                    (62,66)
  end-if

end-heading

begin-procedure Process-Main

  Show 'Calendar Year: ' $Calendar_Year_Id
  Show 'Balance  Year: ' &TX.Balance_Year
  Show 'Balance  Qtr:  ' &TX.Balance_Qtr
  Show 'Asofdate:      ' $Asofdate

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

begin-SELECT
C.COMPANY () on-break print=never before=Company-Change
C.STATE
C.EMPLID
C.TAX_CLASS
C.LOCALITY
C.TXGRS_QTD
C.NLGRS_QTD

D1.NATIONAL_ID
D.LAST_NAME
D.FIRST_NAME
D.MIDDLE_NAME
D.SEX

  do Process-Tax-Balance

FROM  PS_TAX_BALANCE C, PS_PERSONAL_DT_FST D,
      PS_PERS_NID D1, PS_COMPANY_TBL A
WHERE D.EMPLID            = C.EMPLID
  AND D.EMPLID            = D1.EMPLID
  AND D1.COUNTRY          = {NID_COUNTRY}
  AND D1.NATIONAL_ID_TYPE = $PAYROLL_NID_TYPE
#ifdef TAXTEST
  AND C.STATE             = 'CA'
#else
  AND C.STATE             = 'VT'
#endif
  AND C.LOCALITY          = ' '
  AND C.TAX_CLASS         = 'U'                ! Unemployment
  AND C.BALANCE_ID        = $Calendar_Year_Id
  AND C.BALANCE_YEAR      = &TX.Balance_Year
  AND C.BALANCE_QTR       = &TX.Balance_Qtr
  AND C.BALANCE_PERIOD    =
      (SELECT MAX(C1.BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE C1
       WHERE  C1.EMPLID        = C.EMPLID
         AND  C1.COMPANY       = C.COMPANY
         AND C1.BALANCE_ID     = C.BALANCE_ID
         AND C1.BALANCE_YEAR   = C.BALANCE_YEAR
         AND C1.BALANCE_QTR    = C.BALANCE_QTR
         AND  C1.STATE         = C.STATE
         AND  C1.LOCALITY      = C.LOCALITY
         AND  C1.TAX_CLASS     = C.TAX_CLASS)
  AND C.NLGRS_QTD     > 0
  AND A.COMPANY = C.COMPANY
  AND A.EFF_STATUS = 'A'
  AND A.TAX_REPORT_TYPE = '2'
  AND A.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
       WHERE  COMPANY = A.COMPANY
         AND  EFFDT  <= $AsOfDate)
ORDER BY C.COMPANY, D1.NATIONAL_ID, C.STATE, C.LOCALITY, C.TAX_CLASS
end-SELECT
end-procedure

begin-procedure Process-Tax-Balance
  move &D1.NATIONAL_ID to $S123 xxx       !isolate first 3 digits

  if $S123 = &Temp_SSN_Mask or RTRIM(&D1.NATIONAL_ID, ' ') = ''
    print 'Applied For'           (+2,4)
  else
    print &D1.NATIONAL_ID         (+2,4)  edit xxxbxxbxxxx
  end-if

  move ' ' to $EmplType
  move 0   to #Hourly_Rt

begin-select
J.EMPL_TYPE
J.HOURLY_RT

  if (&J.EMPL_TYPE = 'E') or (&J.EMPL_TYPE = 'H')
    move 'H' to $EmplType
  else
    move 'S' to $EmplType
  end-if

  move &J.HOURLY_RT to #Hourly_Rt

 FROM PS_JOB J
WHERE J.EMPLID   = &C.EmplID
  AND J.COMPANY  = &C.Company
  AND J.EMPL_RCD    =
      (SELECT MAX(EMPL_RCD)
         FROM PS_JOB
        WHERE EMPLID    = J.EMPLID
          AND COMPANY   = J.COMPANY
          AND EFFDT    <= $AsOfDate)
  AND J.EFFDT    =
      (SELECT MAX(EFFDT)
         FROM PS_JOB
        WHERE EMPLID    = J.EMPLID
          AND EMPL_RCD  = J.EMPL_RCD
          AND COMPANY   = J.COMPANY
          AND EFFDT    <= $AsOfDate)
  AND J.EFFSEQ   =
      (SELECT MAX(EFFSEQ)
         FROM PS_JOB
        WHERE EMPLID    = J.EMPLID
          AND EMPL_RCD  = J.EMPL_RCD
          AND COMPANY   = J.COMPANY
          AND EFFDT     = J.EFFDT)
end-select

  let $Sex = RTRIM(&D.SEX,' ')
  if ($Sex <> 'F') and ($Sex <> 'M')
    move ' ' to $Sex
  end-if

  let $MidInitial = {ps-substr}(&D.MIDDLE_NAME,1,1)
  let $Name = rtrim(&D.LAST_NAME,' ') || ', ' || rtrim(&D.FIRST_NAME,' ') || ' ' || $MidInitial

  print $Name                     (0,16,30)

  move &C.NLGrs_QTD to #NLGrs_QTD
  do Format-Number(#NLGrs_QTD, $out, '99999999.99')
  print $out                      (0,48)

  print $EmplType                 (0,62)

  if $EmplType = 'H'
    do Format-Number(#Hourly_Rt, $out, '9999.99')
    print $out                    (0,63)
  end-if

  print $Sex                      (0,73)

  add #NLGrs_QTD to #PageTotal
  add #NLGrs_QTD to #CompanyTotal
  add 1 to #Employees_On_Page

  if #Employees_On_Page = 25
    do Page-Complete
  end-if
end-procedure

begin-procedure Get-Total
begin-SELECT

COUNT(*)          &EmplCount

FROM  PS_TAX_BALANCE TB, PS_COMPANY_TBL A2
WHERE TB.COMPANY       = &C.Company
#ifdef TAXTEST
  AND TB.STATE         = 'CA'
#else
  AND TB.STATE         = 'VT'
#endif
  AND TB.LOCALITY      = ' '
  AND TB.TAX_CLASS     = 'U'                 ! Unemployment
  AND TB.BALANCE_ID    = $Calendar_Year_Id
  AND TB.BALANCE_YEAR  = &TX.Balance_Year
  AND TB.BALANCE_QTR   = &TX.Balance_Qtr
  AND TB.NLGRS_QTD     > 0
  AND TB.BALANCE_PERIOD       =
      (SELECT MAX(C2.BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE C2
       WHERE  C2.EMPLID        = TB.EMPLID
         AND  C2.COMPANY       = TB.COMPANY
         AND C2.BALANCE_ID    = TB.BALANCE_ID
         AND C2.BALANCE_YEAR  = TB.BALANCE_YEAR
         AND C2.BALANCE_QTR   = TB.BALANCE_QTR
         AND  C2.STATE         = TB.STATE
         AND  C2.LOCALITY      = TB.LOCALITY
         AND  C2.TAX_CLASS     = TB.TAX_CLASS)
  AND A2.COMPANY = TB.COMPANY
  AND A2.EFF_STATUS = 'A'
  AND A2.TAX_REPORT_TYPE = '2'
  AND A2.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
       WHERE  COMPANY = A2.COMPANY
         AND  EFFDT  <= $AsOfDate)
GROUP BY TB.COMPANY, TB.STATE
end-SELECT
  let #TotalPages = CEIL(&EmplCount/25)
end-procedure

begin-procedure Page-Complete
  add 1 to #PAGE_NUM
  new-page
  move 0 to #PageTotal
  move 0 to #Employees_On_Page
  move 0 to #LINE_NUM
end-procedure

begin-procedure Company-Change
  if #Employees_On_Page < 25 and #Employees_On_Page > 0
    do Page-Complete
  end-if
  move 0 to #PAGE_NUM
  move 0 to #CompanyTotal
  move &C.Company to $Company
  do Get-Company-Data
#ifdef TAXTEST
  move 'CA' to $State
#else
  move 'VT' to $State
#endif
  do Get-State-Tax-Data             !Employer ID
  do Get-Total
end-procedure

#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getstdta.sqc'  !Get-State-Tax-Data procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers

#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'stdapi.sqc'    !Update Process API
