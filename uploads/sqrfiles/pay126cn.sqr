!*************************************************
!  PAY126CN:  ROE Print Exceptions               *
!*************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:04:44:59                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   ! Printer and page-size initialization
#Include 'canrpt.sqc'    !Get CAN variables

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  do Stdapi-Init
  move 'PAY126CN' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  move $Pay126cn_Report_Title  to $ReportTitle
  display $ReportTitle
  display ' '

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime

  do Select-Parameters
  move $RC_PAY.FromDate to $FromDate
  move $RC_PAY.ThruDate to $ThruDate
  move $RC_PAY.ThruDate to $AsOfDate

end-procedure


!*************************************************************************
!      REPORT-TRANSLATION   Read language-dependent text from the database
!*************************************************************************
begin-procedure Report-Translation

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('PAY126CN', 'BOX_15C'           , $Pay126cn_Box_15C         , #dummy_width)
   do Get_Field_Information ('PAY126CN', 'BOX_17A'           , $Pay126cn_Box_17A         , #dummy_width)
   do Get_Field_Information ('PAY126CN', 'BOX_17B'           , $Pay126cn_Box_17B         , #dummy_width)
   do Get_Field_Information ('PAY126CN', 'BOX_17C'           , $Pay126cn_Box_17C         , #dummy_width)
   do Get_Field_Information ('PAY126CN', 'COMPANY'           , $Pay126cn_Company         , #dummy_width)
   do Get_Field_Information ('PAY126CN', 'DATE'              , $Pay126cn_Date            , #dummy_width)
   do Get_Field_Information ('PAY126CN', 'EI_PAYABLE'        , $Pay126cn_EI_Payable      , #dummy_width)
   do Get_Field_Information ('PAY126CN', 'EMPLID'            , $Pay126cn_Emplid          , #dummy_width)
   do Get_Field_Information ('PAY126CN', 'EMPL_NAME'         , $Pay126cn_Empl_Name       , #dummy_width)
   do Get_Field_Information ('PAY126CN', 'REASON'            , $Pay126cn_Reason          , #dummy_width)
   do Get_Field_Information ('PAY126CN', 'REPORT_TITLE'      , $Pay126cn_Report_Title    , #dummy_width)
   do Get_Field_Information ('PAY126CN', 'ROE_SEQ'           , $Pay126cn_ROE_Seq         , #dummy_width)
   do Get_Field_Information ('PAY126CN', 'WAGE_LOSS_PLAN1'   , $Pay126cn_WLS_Plan1       , #dummy_width)
   do Get_Field_Information ('PAY126CN', 'WAGE_LOSS_PLAN2'   , $Pay126cn_WLS_Plan2       , #dummy_width)

end-procedure



begin-heading 7
#include 'stdhdgtr.sqc'

  print $Pay126cn_WLS_Plan1             (+1,53)
  print $Pay126cn_Date                  (0,67)

  print $Pay126cn_Company               (+1,1)
  print $Pay126cn_Emplid                (0,10)
  print $Pay126cn_Empl_Name             (0,23)
  print $Pay126cn_WLS_Plan2             (0,56)
  print $Pay126cn_EI_Payable            (0,65)
  print $Pay126cn_ROE_Seq               (0,77)
  print $Pay126cn_Reason                (0,84)


end-heading


begin-procedure Process-Main

  let $Prev_Company = ' '
  let $Prev_Emplid = ' '
  let $Prev_WLS_Plan = ' '
  let $Prev_UI_Payable_Dt = ''
  let #Prev_ROE_Seq = 0

begin-SELECT
E.COMPANY
E.EMPLID
E.WAGE_LOSS_PLAN
E.UI_PAYABLE_DT
E.ROE_SEQ
E.REASON
P.NAME

  let $Prt_Company = ' '
  let $Prt_Emplid = ' '
  let $Prt_Name = ' '
  let $Prt_WLS_Plan = ' '
  let $Prt_UI_Payable_Dt = ''

  if $Prev_Company <> &E.COMPANY
    let $Prt_Company = &E.COMPANY
  end-if

  if $Prev_Emplid <> &E.EMPLID
    let $Prt_Emplid = &E.EMPLID
    let $Prt_Name = &P.NAME
    let $Prt_WLS_Plan = &E.WAGE_LOSS_PLAN
    let $Prt_UI_Payable_Dt = &E.UI_PAYABLE_DT
  else
    if $Prev_WLS_Plan <> &E.WAGE_LOSS_PLAN
      let $Prt_WLS_Plan = &E.WAGE_LOSS_PLAN
      let $Prt_UI_Payable_Dt = &E.UI_PAYABLE_DT
    else
      if $Prev_UI_Payable_Dt <> &E.UI_PAYABLE_DT
        let $Prt_UI_Payable_Dt = &E.UI_PAYABLE_DT
      end-if
    end-if
  end-if

  print $Prt_Company                    (+1,1)
  print $Prt_Emplid                     (0,10)
  print $Prt_NAME                       (0,23)
  print $Prt_WLS_Plan                   (0,56)

  do Format-DateTime($Prt_UI_Payable_Dt, $out, {DEFDATE}, '', '')
  print $out                            (0,65)

  if $Prev_Company <> &E.COMPANY or
     $Prev_Emplid <> &E.EMPLID or
     $Prev_WLS_Plan <> &E.WAGE_LOSS_PLAN or
     $Prev_UI_Payable_DT <> &E.UI_Payable_DT

    print &E.ROE_SEQ                    (0,79)
  end-if

  if rtrim(&E.REASON, ' ') = '15C'
    let $Exception_Reason = $Pay126cn_Box_15C
  end-if

  if rtrim(&E.REASON, ' ') = '17A'
    let $Exception_Reason = $Pay126cn_Box_17A
  end-if

  if rtrim(&E.REASON, ' ') = '17B'
      let $Exception_Reason = $Pay126cn_Box_17B
  end-if

  if rtrim(&E.REASON, ' ') = '17C'
         let $Exception_Reason = $Pay126cn_Box_17C
  end-if

  print $Exception_Reason               (0,84)  wrap 40 5 STRIP=<13> ON=<10>

  let $Prev_Company = &E.COMPANY
  let $Prev_Emplid = &E.EMPLID
  let $Prev_WLS_PLAN = &E.WAGE_LOSS_PLAN
  let $Prev_UI_Payable_Dt = &E.UI_PAYABLE_DT
  let #Prev_ROE_Seq = &E.ROE_SEQ


FROM   PS_R_PAY101CN    E,
       PS_PERSON_NAME   P
WHERE  E.OPRID          = $Prcs_OprID
  AND  E.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
  AND  E.EMPLID = P.EMPLID
ORDER BY E.COMPANY, E.EMPLID
end-SELECT

end-procedure


#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date conversions
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrctl2.sqc'  !Get-Run-Control procedure
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
