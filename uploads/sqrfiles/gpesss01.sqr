!***********************************************************************
!  GPESSS01.SQR: TC1 Print                                              *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2006/09/13:01:57:35                                 !
!       $Release:  HR9                                                 !
!      $Revision:  103                                                 !
!                                                                      *
!***********************************************************************
#include 'setenv.sqc' !Set environment
#include 'gpesset1.sqc'


!************************************************************************
! Report Section
!************************************************************************
begin-report
#debug do Fin-Debug-Msg('begin-report')

  do Init-Report
  do Process-Main
  do Stdapi-Term

end-report


!************************************************************************
! Procedure Init-Report
!************************************************************************
begin-procedure Init-Report
#debug do Fin-Debug-Msg('init-report')

  move 'GPESSS01' to $ReportID
  move 'TC1 Report' to $ReportTitle

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  let $test = 'Y'
 
  if $prcs_process_instance = ''
    !No Prompt
  else
    do Select-SS-Parameters
  end-if

end-procedure


!************************************************************************
! Procedure Get-SS-Values
!************************************************************************
begin-procedure Get-SS-Values
#debug do Fin-Debug-Msg('Get-SS-Values')

  let $Company = &RCSS.Company
  !let $Pay_End_Dt = &RCSS.Pay_End_Dt
  let $Test = &RCSS.Test
  !if $Pay_End_Dt = ' '
  !   let $AsOfDate = $AsOfToday
  !else
  !   let $AsOfDate = $Pay_End_Dt
  !end-if
  
end-procedure




!************************************************************************
! Procedure Process-Main
!************************************************************************
begin-procedure Process-Main
#debug do Fin-Debug-Msg('Process-Main')

 if $Test = 'Y'
   do Print-Template
 else
   do Get-CCC
 end-if
end-procedure


!************************************************************************
! Procedure Get-CCC
!************************************************************************

begin-procedure Get-CCC
#debug do Fin-Debug-Msg('Get-CCC')

let $sql-statement = 'GPESSS01.SQR,Select,PS_GPES_RC_SS1'
begin-SELECT on-error=SQL-Error
GPESRC.SSN_EMPLOYER,
GPESRC.GPES_SSTC_PAYMNT,
GPESRC.GPES_MONTHCD,
GPESRC.YEARCD,
GPESRC.GPES_SSTC_MESSG1,
GPESRC.GPES_SSTC_MESSG2,
GPESRC.GPES_SSTC_MESSG3,
GPESRC.GPES_SSTC_MESSG4,
GPESRC.GPES_SSTC_RPT_DT


  let $SSN_Employer = &GPESRC.SSN_EMPLOYER
  let $Paymnt = &GPESRC.GPES_SSTC_PAYMNT
  let $Month = &GPESRC.GPES_MONTHCD            
  let #Year = &GPESRC.YEARCD
  let $Year = &GPESRC.YEARCD
  let $Message1 = &GPESRC.GPES_SSTC_MESSG1
  let $Message2 = &GPESRC.GPES_SSTC_MESSG2
  let $Message3 = &GPESRC.GPES_SSTC_MESSG3
  let $Message4 = &GPESRC.GPES_SSTC_MESSG4
  let $ReportDate = &GPESRC.GPES_SSTC_RPT_DT     
  do Format-DateTime($ReportDate, $ReportDate, {DEFDATE}, '', '')

  do Print-TC1   
  do Check-TC1
  ! new-page
  
FROM PS_GPES_RC_SS1 GPESRC
 WHERE GPESRC.OPRID = $prcs_oprid
   AND GPESRC.RUN_CNTL_ID = $prcs_run_cntl_id
AND GPES_SSTC_TC1RUN = 'Y'

end-select

end-procedure


!************************************************************************
! Procedure Check-TC1
!************************************************************************

begin-procedure Check-TC1
#debug do Fin-Debug-Msg('Check-TC1')

let $sql-statement = 'GPESSS01.SQR,Update,PS_GPES_SSTC_TC1'
begin-SQL on-error=SQL-Error
UPDATE PS_GPES_SSTC_TC1 
SET GPES_SSTC_TC1GEN = 'Y'
 WHERE COMPANY = $Company
   AND SSN_EMPLOYER = $SSN_Employer
   AND GPES_SSTC_PAYMNT = $Paymnt
   AND GPES_MONTHCD = $Month
   AND GPES_YEAR = #Year
end-sql 

end-procedure


!************************************************************************
! Procedure Print-TC1
!************************************************************************

begin-procedure Print-TC1
#debug do Fin-Debug-Msg('Print-TC1')

#debugd show 'Company:      ' $Company
#debugd show 'SSN Employer: ' $SSN_Employer
#debugd show 'Payment:      ' $Paymnt
#debugd show 'Month:        ' $Month
#debugd show 'Year:         ' #Year


let $sql-statement = 'GPESSS01.SQR,Select,PS_GPES_SSTC_TC1'
begin-SELECT on-error=SQL-Error
TC1.COMPANY 
       move &TC1.COMPANY to $Company
          Do Get-Company-Data
       print $Cmpny-Descr ({NLin_Company},{NCol_Header})

TC1.INSUR_COMP_CD_ESP
       move &TC1.INSUR_COMP_CD_ESP to $Insur-Cmpny
       do Get-Insur-Data
       print $Insur-Descr ({NLin_Insurance},{NCol_Insurance})
       print $Insur-Cmpny ({NLin_Insurance},{NCol_InsurKey})

TC1.FISCAL_ID_CD 
TC1.SSN_EMPLOYER 
TC1.SOCS_ER_CODE_ESP
       print &TC1.SOCS_ER_CODE_ESP ({NLin_Nif}, {NCol_NifKey})
       print &TC1.FISCAL_ID_CD ({NLin_Nif},{NCol_Nif})
       print &TC1.SSN_EMPLOYER ({NLin_Nif},{NCol_CCC})

       let $CCC = &ESTABS.ESTABID
       #DEBUG SHOW 'ESTABLISHMENT: ' &ESTABS.ESTABID
       do Get-CCC-Data
       print $CCC-Addr ({NLin_Address},{NCol_Header})
       print $CCC-City ({NLin_City},{NCol_Header})
       print $CCC-Postal ({NLin_City},{NCol_Postal})
          let $Country = 'ESP'
          let $State = $CCC-Prov
       do Get-State-Descr
       print $State-Desc ({NLin_City},{NCol_Province})

TC1.GPES_TC_TOT_EE 
       do Format-Number(&TC1.GPES_TC_TOT_EE, $out, {Mask_TC1_EE})
       print $out ({NLin_Nif},{NCol_Workers})
TC1.GPES_YEAR 
       do Format-Number(&TC1.GPES_YEAR, $Year, {Mask_TC1_Year})
       let $Year2 = substr($Year, 3, 2)
TC1.GPES_MONTHCD 
       move &TC1.GPES_MONTHCD to #Month_To
       move #Month_to to $out 09
       let $out = $out || substr($Year, 1, 4)
       print $out ({NLin_Nif},{NCol_To})
TC1.GPES_MONTHCD_FROM 
       move &TC1.GPES_MONTHCD_FROM to #Month_From
       move #Month_From to $out 09
       let $out = $out || substr($Year, 1, 4)
       if #Month_From != #Month_to 
       print $out ({NLin_Nif},{NCol_From})
       end-if
TC1.GPES_TC_BS_CC 
       do Format-Number(&TC1.GPES_TC_BS_CC, $out, {Mask_TC1_Bs})
       print $out ({NLin_CC},{NCol_Bs})
TC1.GPES_TC_PCT_CC
       do Format-Number(&TC1.GPES_TC_PCT_CC, $out, {Mask_TC1_Pct})
       print $out ({NLin_CC},{NCol_Pct})
TC1.GPES_TC_CT_CC
      do Format-Number(&TC1.GPES_TC_CT_CC, $out, {Mask_TC1_Ct})
       print $out ({NLin_CC},{NCol_Ct})
TC1.GPES_TC_BS_HE
       do Format-Number(&TC1.GPES_TC_BS_HE, $out, {Mask_TC1_Bs})
       print $out ({NLin_HE},{NCol_Bs})
TC1.GPES_TC_PCT_HE
      do Format-Number(&TC1.GPES_TC_PCT_HE, $out, {Mask_TC1_Pct})
       print $out ({NLin_HE},{NCol_Pct})
TC1.GPES_TC_CT_HE
       do Format-Number(&TC1.GPES_TC_CT_HE, $out, {Mask_TC1_Ct})
       print $out ({NLin_HE},{NCol_Ct})
TC1.GPES_TC_BS_HN 
       do Format-Number(&TC1.GPES_TC_BS_HN, $out, {Mask_TC1_Bs})
       print $out ({NLin_HN},{NCol_Bs})
TC1.GPES_TC_PCT_HN
       do Format-Number(&TC1.GPES_TC_PCT_HN, $out, {Mask_TC1_Pct})
       print $out ({NLin_HN},{NCol_Pct})
TC1.GPES_TC_CT_HN
       do Format-Number(&TC1.GPES_TC_CT_HN, $out, {Mask_TC1_Ct})
       print $out ({NLin_HN},{NCol_Ct})
TC1.GPES_S_INS_PCT_AT
       do Format-Number(&TC1.GPES_S_INS_PCT_AT, $out, {Mask_TC1_Pct})
       print $out ({NLin_SSC},{NCol_Pct})
TC1.GPES_TC_CT_ER_SSC
       do Format-Number(&TC1.GPES_TC_CT_ER_SSC, $out, {Mask_TC1_Ct})
       print $out ({NLin_SSC},{NCol_Ct})
TC1.GPES_TC_BS_CCER
       do Format-Number(&TC1.GPES_TC_BS_CCER, $out, {Mask_TC1_Bs})
       print $out ({NLin_MatCC},{NCol_Bs})
TC1.GPES_TC_PCT_CCER
       do Format-Number(&TC1.GPES_TC_PCT_CCER, $out, {Mask_TC1_Pct})
       print $out ({NLin_MatCC},{NCol_Pct})
TC1.GPES_TC_CT_CCER
       do Format-Number(&TC1.GPES_TC_CT_CCER, $out, {Mask_TC1_Ct})
       print $out ({NLin_MatCC},{NCol_Ct})
TC1.GPES_TC_KEY_OC
       print &TC1.GPES_TC_KEY_OC ({NLin_OC},{NCol_Key_OC})
TC1.GPES_TC_BS_OC 
       do Format-Number(&TC1.GPES_TC_BS_OC, $out, {Mask_TC1_Bs})
       print $out ({NLin_OC},{NCol_Bs})
TC1.GPES_TC_PCT_OC
       do Format-Number(&TC1.GPES_TC_PCT_OC, $out, {Mask_TC1_Pct})
       print $out ({NLin_OC},{NCol_Pct})
TC1.GPES_TC_CT_OC
       do Format-Number(&TC1.GPES_TC_CT_OC, $out, {Mask_TC1_Ct})
       print $out ({NLin_OC},{NCol_Ct})
TC1.GPES_TC_BS_S_INS 
       do Format-Number(&TC1.GPES_TC_BS_S_INS, $out, {Mask_TC1_Bs})
       print $out ({NLin_SLF_INS},{NCol_Bs})
TC1.GPES_S_INS_PCT_NAT
       do Format-Number(&TC1.GPES_S_INS_PCT_NAT, $out, {Mask_TC1_Pct3})
       print $out ({NLin_SLF_INS},{NCol_Pct})
TC1.GPES_TC_RED_S_INS
       do Format-Number(&TC1.GPES_TC_RED_S_INS, $out, {Mask_TC1_Ct})
       print $out ({NLin_SLF_INS},{NCol_Ct})
TC1.GPES_TC_COMP_IT
       do Format-Number(&TC1.GPES_TC_COMP_IT, $out, {Mask_TC1_Ct})
       print $out ({NLin_Red},{NCol_Comp})
TC1.GPES_TC_RED_TYPE
       print &TC1.GPES_TC_RED_TYPE ({NLin_Red},{NCol_RedType})
TC1.GPES_TC_COMP_RED
       do Format-Number(&TC1.GPES_TC_COMP_RED, $out, {Mask_TC1_Ct})
       print $out ({NLin_Red},{NCol_Red})
TC1.GPES_TC_COMP_ITRED
       do Format-Number(&TC1.GPES_TC_COMP_ITRED, $out, {Mask_TC1_Ct})
       print $out ({NLin_Red},{NCol_Ct})
TC1.GPES_TC_TOT_CC
       do Format-Number(&TC1.GPES_TC_TOT_CC, $out, {Mask_TC1_Ct})
       print $out ({NLin_TotCC},{NCol_Ct})
TC1.GPES_TC_BS_CP  
       let #Base_CP_Tot = &TC1.GPES_TC_BS_CP + &TC1.GPES_TC_BS_CPER
       do Format-Number(#Base_CP_Tot, $out, {Mask_TC1_Bs})
       print $out ({NLin_CP},{NCol_BsCP})
TC1.GPES_TC_CT_IT
       do Format-Number(&TC1.GPES_TC_CT_IT, $out, {Mask_TC1_Ct})
       print $out ({NLin_CP},{NCol_CtIT})
TC1.GPES_TC_CT_IMS
       do Format-Number(&TC1.GPES_TC_CT_IMS, $out, {Mask_TC1_Ct})
       print $out ({NLin_CP},{NCol_CtIMS})
       print $out ({NLin_SSC},{NCol_Bs})
TC1.GPES_TC_CT_IT_IMS
       do Format-Number(&TC1.GPES_TC_CT_IT_IMS, $out, {Mask_TC1_Ct})
       print $out ({NLin_CP},{NCol_Ct})
TC1.GPES_TC_COMP_ATEP
       do Format-Number(&TC1.GPES_TC_COMP_ATEP, $out, {Mask_TC1_Ct})
       print $out ({NLin_ATEP},{NCol_Ct})
TC1.GPES_TC_TOT_CP
       do Format-Number(&TC1.GPES_TC_TOT_CP, $out, {Mask_TC1_Ct})
       print $out ({NLin_TotCp},{NCol_Ct})
TC1.GPES_TC_PCT_CP
       do Format-Number(&TC1.GPES_TC_BS_CP, $out, {Mask_TC1_Bs})
       print $out ({NLin_DFP},{NCol_BsDFP})
       do Format-Number(&TC1.GPES_TC_PCT_CP, $out, {Mask_TC1_Pct})
       print $out ({NLin_DFP},{NCol_Pct})
TC1.GPES_TC_CT_CP
       do Format-Number(&TC1.GPES_TC_CT_CP, $out, {Mask_TC1_Ct})
       print $out ({NLin_DFP},{NCol_Ct})        
TC1.GPES_TC_BS_CPER
       do Format-Number(&TC1.GPES_TC_BS_CPER, $out, {Mask_TC1_Bs})
       print $out ({NLin_MatCP},{NCol_BsDFP})
TC1.GPES_TC_CT_CPER
       do Format-Number(&TC1.GPES_TC_CT_CPER, $out, {Mask_TC1_Ct})
       print $out ({NLin_MatCP},{NCol_Ct})     
TC1.GPES_TC_COMP_BONIF
       do Format-Number(&TC1.GPES_TC_COMP_BONIF, $out, {Mask_TC1_Bs})
       print $out ({NLin_Bonif},{NCol_BsDFP})    
       do Format-Number(&TC1.GPES_TC_COMP_BONIF, $out, {Mask_TC1_Ct})
       print $out ({NLin_Bonif},{NCol_Ct})
TC1.GPES_TC_TOT_OTR
       do Format-Number(&TC1.GPES_TC_TOT_OTR, $out, {Mask_TC1_Ct})
       print $out ({NLin_TotOtr},{NCol_Ct})
TC1.GPES_TC_BS_PENALTY
       do Format-Number(&TC1.GPES_TC_BS_PENALTY, $out, {Mask_TC1_Ct})
       print $out ({NLin_Penalty},{NCol_Penalty})
TC1.GPES_TC_PCT_PENLTY
       do Format-Number(&TC1.GPES_TC_PCT_PENLTY, $out, {Mask_TC1_Pct2})
       print $out ({NLin_Penalty},{NCol_PctMora})
TC1.GPES_TC_PENALTY
       do Format-Number(&TC1.GPES_TC_PENALTY, $out, {Mask_TC1_Ct})
       print $out ({NLin_Penalty},{NCol_Ct})
TC1.GPES_TC_TOT_TC1NEG
       do Format-Number(&TC1.GPES_TC_TOT_TC1NEG, $out, {Mask_TC1_Ct})
       print $out ({NLin_Total},{NCol_Bs})
TC1.GPES_TC_TOT_TC1POS
       do Format-Number(&TC1.GPES_TC_TOT_TC1POS, $out, {Mask_TC1_Ct})
       print $out ({NLin_Total},{NCol_Ct})
       print ' ' ({NLin_LastLine},1)
TC1.GPES_SSTC_PAYMNT     
       let $CL = '0'
       let $CC1 = '0'
       let $CC2 = '0'
       if &TC1.GPES_SSTC_PAYMNT = 'L02' or &TC1.GPES_SSTC_PAYMNT = 'L03'
          let $CL = '4'
       end-if   
       if &TC1.GPES_SSTC_PAYMNT = 'L13'
          let $CC1 = '1'
          let $CC2 = '5'
       end-if
       print $CL ({NLin_Key},{NCol_Key})    
       print $CC1 ({NLin_Key},{NCol_Key2})      
       print $CC2 ({NLin_Key},{NCol_Key3})
       print $Message1  ({NLin_CP},{NCol_Key})
       print $Message2  ({NLin_ATEP},{NCol_Key})
       print $Message3  ({NLin_TotCP},{NCol_Key})
       print $Message4  ({NLin_DFP},{NCol_Key})   
       print $ReportDate  ({NLin_MatCP},{NCol_Key})

       new-page
             
FROM PS_GPES_SSTC_TC1 TC1
WHERE TC1.COMPANY = $Company
!AND TC1.CAL_PRD_ID = $Cal_Prd_Id
AND TC1.SSN_EMPLOYER = $SSN_Employer
AND TC1.GPES_SSTC_PAYMNT = $Paymnt
AND TC1.GPES_MONTHCD = $Month
AND TC1.GPES_YEAR = #Year

end-SELECT

end-procedure


!************************************************************************
! Procedure Print-Template
!************************************************************************

begin-procedure Print-Template
#debug do Fin-Debug-Msg('Print-Template')

       print 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' ({NLin_Company},{NCol_Header})
       print 'XXXXXXXXXXXXXXXXXXXXXXXXX' ({NLin_Insurance},{NCol_Insurance})
       print '999' ({NLin_Insurance},{NCol_Postal})
       print 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' ({NLin_Address},{NCol_Header})
       print 'XXXXXXXXXXXXXXXXXXXXXXXXX' ({NLin_City},{NCol_Header})
       print '99999' ({NLin_City},{NCol_Postal})
       print 'XXXXXXXXXXXXXXXXXXX' ({NLin_City},{NCol_Province})
       print 'XXXXXXXX-X' ({NLin_Nif},{NCol_Nif})
       print 'XXXXXXXXXXX' ({NLin_Nif},{NCol_CCC})
       print {Mask_TC1_EE} ({NLin_Nif},{NCol_Pct})
       print 'MMAAAA' ({NLin_Nif},{NCol_From})
       print 'MMAAAA' ({NLin_Nif},{NCol_To})
       print {Mask_TC1_Bs} ({NLin_CC},{NCol_Bs})
       print {Mask_TC1_Pct} ({NLin_CC},{NCol_Pct})
       print {Mask_TC1_Ct} ({NLin_CC},{NCol_Ct})
       print {Mask_TC1_Bs} ({NLin_HE},{NCol_Bs})
       print {Mask_TC1_Pct} ({NLin_HE},{NCol_Pct})
       print {Mask_TC1_Ct} ({NLin_HE},{NCol_Ct})
       print {Mask_TC1_Bs} ({NLin_HN},{NCol_Bs})
       print {Mask_TC1_Pct} ({NLin_HN},{NCol_Pct})
       print {Mask_TC1_Ct} ({NLin_HN},{NCol_Ct})
       print {Mask_TC1_Bs} ({NLin_SSC},{NCol_Bs})
       print {Mask_TC1_Pct} ({NLin_SSC},{NCol_Pct})
       print {Mask_TC1_Ct} ({NLin_SSC},{NCol_Ct})      
       print {Mask_TC1_Bs} ({NLin_MatCC},{NCol_Bs})
       print {Mask_TC1_Pct} ({NLin_MatCC},{NCol_Pct})
       print {Mask_TC1_Ct} ({NLin_MatCC},{NCol_Ct})
       print 'X' ({NLin_OC},{NCol_Key_OC})
       print {Mask_TC1_Bs} ({NLin_OC},{NCol_Bs})
       print {Mask_TC1_Pct} ({NLin_OC},{NCol_Pct})
       print {Mask_TC1_Ct} ({NLin_OC},{NCol_Ct})
       print {Mask_TC1_Bs} ({NLin_SLF_INS},{NCol_Bs})
       print {Mask_TC1_Pct3} ({NLin_SLF_INS},{NCol_Pct})
       print {Mask_TC1_Ct} ({NLin_SLF_INS},{NCol_Ct})
       print {Mask_TC1_Ct} ({NLin_Red},{NCol_Comp})
       print {Mask_TC1_Ct} ({NLin_Red},{NCol_Red})
       print {Mask_TC1_Ct} ({NLin_Red},{NCol_Ct})
       print {Mask_TC1_Ct} ({NLin_TotCC},{NCol_Ct})
       print {Mask_TC1_Bs} ({NLin_CP},{NCol_BsCP})
       print {Mask_TC1_Ct} ({NLin_CP},{NCol_CtIT})
       print {Mask_TC1_Ct} ({NLin_CP},{NCol_CtIMS})       
       print {Mask_TC1_Ct} ({NLin_CP},{NCol_Ct})
       print {Mask_TC1_Ct} ({NLin_ATEP},{NCol_Ct})
       print {Mask_TC1_Ct} ({NLin_TotCp},{NCol_Ct})
       print {Mask_TC1_Bs} ({NLin_DFP},{NCol_Bs})
       print {Mask_TC1_Pct} ({NLin_DFP},{NCol_Pct})
       print {Mask_TC1_Ct} ({NLin_DFP},{NCol_Ct})
       print {Mask_TC1_Bs} ({NLin_MatCP},{NCol_Bs})
       print {Mask_TC1_Pct} ({NLin_MatCP},{NCol_Pct})
       print {Mask_TC1_Ct} ({NLin_MatCP},{NCol_Ct})
       print {Mask_TC1_Ct} ({NLin_Bonif},{NCol_Comp})
       print {Mask_TC1_Ct} ({NLin_Bonif},{NCol_Ct})
       print {Mask_TC1_Ct} ({NLin_TotOtr},{NCol_Ct})
       print {Mask_TC1_Ct} ({NLin_Penalty},{NCol_Penalty})
       print {Mask_TC1_Pct2} ({NLin_Penalty},{NCol_PctMora})
       print {Mask_TC1_Ct} ({NLin_Penalty},{NCol_Ct})
       print {Mask_TC1_Ct} ({NLin_Total},{NCol_Bs})
       print {Mask_TC1_Ct} ({NLin_Total},{NCol_Ct})
       print 'DD-MM-AAAA' ({NLin_CP},{NCol_Date})
       print ' ' ({NLin_LastLine},1)


end-procedure
       
       
       
                 


!--------------------------------------------------------------------------------------------------------------------------------------

#Include 'sqlerr.sqc'
#include 'prcsdef.sqc'   !Update Process Request variable declare
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'gpesdata.sqc'    !Routines to Get GP Spain Data
#Include 'stdapi.sqc'    !Update Process API
