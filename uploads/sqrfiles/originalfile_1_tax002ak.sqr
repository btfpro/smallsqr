!***********************************************************************
!  TAX002AK:  Qtrly State Employee Wage List - ALASKA                  *
!                                                                      *
!             NOTE: "#IFDEF TAXTEST" in main SELECT is used for        *
!                   testing this report against DEMO database          *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                $Date:  2006/04/21:12:58:39                           !
!             $Release:  HR9                                           !
!            $Revision:  103                                           !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'  !Set environment
#include 'usarpt.sqc'  !Get USA variables

begin-setup

#include 'prt002.sqc'  !Printer and page-size initialization

end-setup


begin-report

  do Init-Report

  do Process-Main

  if #Employees_On_Page > 0 and #Employees_On_Page < 22
    do Page-Complete
  end-if

  do Stdapi-Term
end-report

begin-procedure Init-Report
  display 'Quarterly Employee Wage List - Alaska'

  do Init-DateTime
  do Init-Number

  do Get-Tax-Reporting-Run-Controls

  move $PeriodEndDate to $AsOfDate  !for included procedures
  do Update-As-Of-Date

  do Initialize

  do Stdapi-Init
  do Get-Calendar-Year-Id

end-procedure

begin-procedure Initialize
#ifdef TAXTEST
  move 'CA' to $State
#else
  move 'AK' to $State
#endif
end-procedure

begin-heading 8
  print 'EMPLOYER''S NAME, ADDRESS AND ACCOUNT NUMBER' (+2,18)
  uppercase $CompanyName
  print $CompanyName              (+1,30)
  print 'QTR ENDED'               (0,66)
  move $Compnyadd1 to $Coaddress1
  uppercase $Coaddress1
  print $Coaddress1                (+1,30)
  do Format-DateTime($PeriodEndDate, $out, {DEFMDY}, '', '')
  print $out                      (0,66)
  let $field = RTRIM($Compnycity, ' ')
  uppercase $field
  print $field                    (+1,30)
  print &CT.State                 ()      edit ,bxx
  move  &CT.Postal  to $Zip
  move  $Zip        to $ZipExtsn ~~~~~~xxxx

  if instr($Zip,'-',6) = 0
    and $ZipExtsn <> '    '
       let $Zip = substr($Zip,1,5) || '-' || substr($Zip,6,4)
  end-if
  print $Zip                      (0,+2)
  print 'SHEET NO.'               (0,66)
  do Format-Number(#PAGE_NUM, $out, '999')
  print $out                      (0,76)
  if RTRIM(&Employer_ID_SUT, ' ') <> ''
    print &Employer_ID_SUT        (+1,30)
  else
    print &Employer_ID_SWT        (+1,30)
  end-if
  print 'OF'                      (0,68)
  do Format-Number(#TotalPages, $out, '999')
  print $out                      (0,+1)
  print 'SSN'                     (+2,4)
  print 'NAME'                    (0,17)
  print 'TOTAL WAGES'             (0,44)
  print 'TITLE'                   (0,58)
  print 'AREA CD'                 (0,72)
  print 'SHEET TOTAL:'            (55,30)
  do Format-Number(#PageTotal, $out, '99999999.99')
  print $out                      (0,+2)
end-heading

begin-procedure Process-Main

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

  Show 'Calendar Year: ' $Calendar_Year_Id
  Show 'Balance  Year: ' &TX.Balance_Year
  Show 'Balance  Qtr:  ' &TX.Balance_Qtr
  Show 'Asofdate:      ' $Asofdate

begin-SELECT
C.COMPANY () on-break print=never level=1 before=Company-Change
C.STATE
C.EMPLID          () on-break print=never level=2 after=EmplID-Change
C.TAX_CLASS
C.LOCALITY
C.TXGRS_QTD
C.NLGRS_QTD

D1.NATIONAL_ID    () on-break print=never level=2 save=$SSN
PN.NAME            () on-break print=never level=2 save=$Name
  move &C.Company to $Company
  do Get-Job-Data
  do Process-Tax-Balance

FROM  PS_TAX_BALANCE C, PS_NAMES PN, PS_PERS_NID D1, PS_COMPANY_TBL A1
WHERE D1.EMPLID           = C.EMPLID
  AND D1.COUNTRY          = {NID_COUNTRY}
  AND D1.NATIONAL_ID_TYPE = $PAYROLL_NID_TYPE
  AND PN.EMPLID           = C.EMPLID
#ifdef TAXTEST
  AND C.STATE             = 'CA'
#else
  AND C.STATE             = 'AK'
#endif
  AND C.LOCALITY          = ' '
  AND C.TAX_CLASS         = 'U'
  AND C.BALANCE_ID        = $Calendar_Year_Id
  AND C.BALANCE_YEAR      = &TX.Balance_Year
  AND C.BALANCE_QTR       = &TX.Balance_Qtr
  AND C.BALANCE_PERIOD    =
      (SELECT MAX(C1.BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE C1
       WHERE  C1.EMPLID        = C.EMPLID
         AND  C1.COMPANY       = C.COMPANY
         AND  C1.BALANCE_ID    = C.BALANCE_ID
         AND  C1.BALANCE_YEAR  = C.BALANCE_YEAR
         AND  C1.BALANCE_QTR   = C.BALANCE_QTR
         AND  C1.STATE         = C.STATE
         AND  C1.LOCALITY      = C.LOCALITY
         AND  C1.TAX_CLASS     = C.TAX_CLASS)
  AND C.NLGRS_QTD > 0
  AND A1.COMPANY = C.COMPANY
  AND A1.EFF_STATUS = 'A'
  AND A1.TAX_REPORT_TYPE = '2'
  AND A1.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
       WHERE  COMPANY = A1.COMPANY
       AND  EFFDT  <= $AsOfDate)
  AND PN.NAME_TYPE = 'PRI'
  AND PN.EFFDT =
      (SELECT MAX(PX.EFFDT)
       FROM   PS_NAMES PX
       WHERE  PX.EMPLID    = PN.EMPLID
         AND  PX.NAME_TYPE = PN.NAME_TYPE
         AND  PX.EFFDT    <= $AsOfDate)
ORDER BY C.COMPANY, D1.NATIONAL_ID, C.STATE, C.LOCALITY, C.TAX_CLASS
end-SELECT
end-procedure

begin-procedure Get-Job-Data
  move '' to $US_SOC_CD                 ! Standard Occupational Code
begin-SELECT
P.JOBCODE
P.TAX_LOCATION_CD
P.SETID_JOBCODE

  move &P.JobCode to $JobCode
  move &P.SETID_JOBCODE to $SETID_JobCode
  do Get-US_SOC_CD
  if rtrim(&P.Tax_Location_Cd, ' ') <> $priorTaxLocation
    do Get-Area-Code
  end-if
  let $priorTaxLocation = rtrim(&P.Tax_Location_Cd, ' ')

FROM  PS_JOB P
     WHERE  P.EMPLID  = &C.EmplID
       AND  P.COMPANY = $Company
       AND  P.JOB_INDICATOR = 'P'
       AND  P.EFFDT  = (SELECT MAX(EFFDT)
            FROM PS_JOB P1
            WHERE  P1.EMPLID = P.EMPLID
              AND  P1.COMPANY   = P.COMPANY
              AND  P1.JOB_INDICATOR = P.JOB_INDICATOR
              AND  P1.EFFDT  <= $AsOfDate)
       AND  P.EFFSEQ  = (SELECT MAX(EFFSEQ)
            FROM PS_JOB P2
            WHERE P2.EMPLID    = P.EMPLID
              AND P2.COMPANY   = P.COMPANY
              AND P2.JOB_INDICATOR = P.JOB_INDICATOR
              AND P2.EFFDT     = P.EFFDT)
end-SELECT
end-procedure

begin-procedure Get-US_SOC_CD
begin-SELECT
J.US_SOC_CD

  move &J.US_SOC_CD to $US_SOC_CD

FROM  PS_JOBCODE_TBL J
WHERE J.SETID = $SETID_JobCode
  AND J.JOBCODE = $JobCode
  AND J.EFFDT = (SELECT MAX(EFFDT)
     FROM PS_JOBCODE_TBL
     WHERE  SETID = J.SETID
       AND  JOBCODE = J.JOBCODE
       AND  EFFDT  <= $AsOfDate)
end-SELECT
end-procedure

begin-procedure Get-Area-Code
  move '' to $AreaCd
begin-SELECT
L.AK_AREA_CD

  move &L.AK_Area_Cd to $AreaCd

FROM  PS_TAX_LOCATION1 L
WHERE L.TAX_LOCATION_CD = &P.Tax_Location_Cd
end-SELECT
end-procedure

begin-procedure Process-Tax-Balance
  move &C.NLGrs_QTD to #NLGrs_QTD
  do Format-Number(#NLGrs_QTD, $NLGrs_QTD, '99999999.99')
  add #NLGrs_QTD to #PageTotal
  move &C.EmplID to $EmplID
end-procedure

begin-procedure EmplID-Change
  move $SSN to $S123 xxx       !isolate first 3 digits

  if $S123 = &Temp_SSN_Mask or RTRIM($SSN, ' ') = ''
    print 'Applied For' (+2,4)
  else
    print $SSN          (+2,4)  edit xxxbxxbxxxx
  end-if

  uppercase $Name
  print $Name           (0,17,20)

  print $NLGrs_QTD      (0,44)

  move '' to $NLGrs_QTD

  print $US_SOC_CD      (0,58)
  print $AreaCd         (0,74)
  add 1 to #Employees_On_Page

  if #Employees_On_Page = 22
    do Page-Complete
  end-if
end-procedure

begin-procedure Get-Total
begin-SELECT

COUNT(*)          &EmplCount,

FROM  PS_TAX_BALANCE TB, PS_COMPANY_TBL A2
WHERE TB.COMPANY       = &C.Company
#ifdef TAXTEST
  AND TB.STATE         = 'CA'
#else
  AND TB.STATE         = 'AK'
#endif
  AND TB.LOCALITY      = ' '
  AND TB.TAX_CLASS     = 'U'                 ! Unemployment
  AND TB.BALANCE_ID    = $Calendar_Year_Id
  AND TB.BALANCE_YEAR  = &TX.Balance_Year
  AND TB.BALANCE_QTR   = &TX.Balance_Qtr
  AND TB.NLGRS_QTD     > 0
  AND TB.BALANCE_PERIOD       =
      (SELECT MAX(C2.BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE C2
       WHERE  C2.EMPLID        = TB.EMPLID
         AND  C2.COMPANY       = TB.COMPANY
         AND  C2.BALANCE_ID    = TB.BALANCE_ID
         AND  C2.BALANCE_YEAR  = TB.BALANCE_YEAR
         AND  C2.BALANCE_QTR   = TB.BALANCE_QTR
         AND  C2.STATE         = TB.STATE
         AND  C2.LOCALITY      = TB.LOCALITY
         AND  C2.TAX_CLASS     = TB.TAX_CLASS)
  AND A2.COMPANY = TB.COMPANY
  AND A2.EFF_STATUS = 'A'
  AND A2.TAX_REPORT_TYPE = '2'
  AND A2.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
       WHERE  COMPANY = A2.COMPANY
         AND  EFFDT  <= $AsOfDate)
GROUP BY TB.COMPANY, TB.STATE
end-SELECT
  let #TotalPages = CEIL(&EmplCount/22)
end-procedure

begin-procedure Page-Complete
  add 1 to #PAGE_NUM
  new-page
  move 0 to #PageTotal
  move 0 to #Employees_On_Page
end-procedure

begin-procedure Company-Change
  if #Employees_On_Page < 22 and #Employees_On_Page > 0
    do Page-Complete
  end-if
  move 0 to #PAGE_NUM
  move &C.Company to $Company
  do Get-Company-Data
  do Get-State-Tax-Data             !Employer ID
  do Get-Total

end-procedure

begin-procedure Update-As-Of-Date
begin-SQL
UPDATE PSASOFDATE SET ASOFDATE=$ASOFDATE
end-SQL

end-procedure

begin-procedure Ignore
end-procedure

#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getstdta.sqc'  !Get-State-Tax-Data procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers

#Include 'stdapi.sqc'    !Update Process API
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id

