!***********************************************************************
! PER068JP : Prints out IDO Transfers list                             *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:55:54                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!                                                                      *
!***********************************************************************
! This SQR retrieves data from IDO_FUT_UPDT_JPN and prints out a report*
! on any erros encountered while inserting JOB records.                *
! This program also generates a list of all employees updated by       *
! the system                                                           *
!***********************************************************************
Begin-setup

#define  REPORTID  'PER068JP'
#include 'setenv.sqc'      !Set environment
#include 'ptset02.sqc'     !Init printer and page sizeLandscape

#DEFINE JapaneseDates
end-setup

begin-Report
    do Initialize
    do Main
  do Reset
  do Stdapi-Term
end-Report

begin-procedure Initialize
    do Init-DateTime
    do Init-Number
    do Define-Prcs-Vars
    do Get-Run-Control-Parms
    do Get-PrcsRqst-Info
    do Get-Run-Cntl-Parms2
    do Get-Current-DateTime
    do Get-strings
end-procedure


!*************************************************************************!
! Get-Run-Cntl-Parms2 : grab report title and all employee comments
!*************************************************************************!
begin-procedure Get-Run-Cntl-Parms2


begin-SELECT

RN.ORG_PLAN_JPN 

  let $org_plan      = rtrim(&RN.ORG_PLAN_JPN,' ')

FROM
PS_RC_IDO_JPN RN

WHERE
RN.OPRID       = $prcs_oprid  AND
RN.RUN_CNTL_ID = $prcs_run_cntl_id

end-SELECT

end-procedure Get-Run-Cntl-Parms2
!*************************************************************************!
! Get-strings     : Strings Table retrievals
!*************************************************************************!
begin-procedure Get-strings
  move {REPORTID} to $ReportID
  do Init_Report_Translation ('PER068JP', $curr_language_cd)
  do Append_Report_Translation ('PER068JP')
  do Get_Field_Information ('PER068JP' ,'REPORT_NAME',$Report_name,          #DW)
  do Get_Field_Information ('PER068JP' ,'EMPLID_LBL',$Empl_id_lbl,           #DW)
  do Get_Field_Information ('PER068JP' ,'EMPL_RCD_LBL',$Empl_rcd_lbl,        #DW)
  do Get_Field_Information ('PER068JP' ,'EMPLNAME_LBL',$Empl_Name_lbl,       #DW) 
  do Get_Field_Information ('PER068JP' ,'EFFDT_LBL', $Effdt_lbl,             #DW)
  do Get_Field_Information ('PER068JP' ,'ACTION_LBL', $Action_lbl,           #DW)
  do Get_Field_Information ('PER068JP' ,'ACTION_RSN_LBL',$Action_rsn_lbl,    #DW)
  do Get_Field_Information ('PER068JP' ,'MESSAGE_LBL' ,$Message_lbl,         #DW)
  do Get_Field_Information ('PER068JP' ,'REPORT_TITLE',$Report_title_per068jpn,#DW)
  do Get_Field_Information ('PER068JP' ,'ORGANIZATION_LBL',$Organization_lbl,#DW)
  do Get_Field_Information ('PER068JP' ,'HEADER_ERROR', $Header_Error,       #DW)
  do Get_Field_Information ('PER068JP' ,'HEADER_UPDATED', $Header_updated,   #DW)
  do Get_Field_Information ('PER068JP' ,'ERROR_MSG', $Error_msg,             #DW)
  do Get_Field_Information ('PER068JP' ,'WARNING_MSG', $Warning_msg,         #DW)
  do Get_Field_Information ('PER068JP' ,'END_REPORT', $End_report,           #DW)
  do Get_Field_Information ('PER068JP' ,'PAGE', $Page,                       #DW)
  let $ReportTitle  = $Report_title_per068jpn 
  let $ReportDate            = $AsOfToday          ! Printed in header
  let $ReportTime            = $AsOfNow            ! Printed in header

end-procedure Get-strings

!***************
begin-heading 6
!***************
         #include 'stdhdgtr.sqc'
          move {REPORTID} to $ReportID

         print $Organization_lbl  (+1,80) 
         Print $org_plan          (0,100)

         print $Empl_id_lbl       (+2,8) 
         print $Empl_rcd_lbl      (0,19)
         print $Empl_Name_lbl     (0,33)   
         print $Effdt_lbl         (0,65)
         print $Action_lbl        (0,85)
         print $Action_rsn_lbl    (0,95)
         If  $Error-Warn-rpt = 'Y' 
             print $Message_lbl   (0,110)
         End-if
         
         print '-------'          (+1,8)         
         print '--------'         (0,19)
         print '---------------------' (0,33)   
         print '-------------'   (0,65)
         print '------'           (0,85)
         print '-------------'    (0,95)
         If  $Error-Warn-rpt = 'Y' 
             print '--------'     (0,110)
         End-if
   
     
 
end-heading
!*************************************************************************!
! Report           : Main report processing
!*************************************************************************!
begin-procedure Main
    let #y = 1
    do Print-Errors-Warnings
    let #y = 1
    do Print-Updated
    
end-procedure Main


!***********************************************************************
!                                                                      *
! Print-Errors-Warnings                                                *
!                                                                      *
! Called By: Report                                                    *
!                                                                      *
! Description:  Read data and print report                             *
!                                                                      *
!***********************************************************************

begin-procedure Print-Errors-Warnings

    let $Error-Warn-rpt = 'Y'
    print $Header_Error   (+3,8)


begin-SELECT

FUT.EMPLID, 
FUT.EMPL_RCD, 
FUT.EFFDT, 
FUT.ACTION, 
FUT.ACTION_REASON, 
FUT.PROC_STAT_JPN
NM.NAME_DISPLAY

   let $Empl_id      = rtrim(&FUT.EMPLID,' ')
   let $Empl_rcd     = to_char(&FUT.EMPL_RCD)
   let $Effdt        = rtrim(&FUT.EFFDT,' ')
   let $Action       = rtrim(&FUT.ACTION,' ')
   let $Action_reason= rtrim(&FUT.ACTION_REASON,' ')
   let $Proc_stat    = rtrim(&FUT.PROC_STAT_JPN,' ')
   let $empl_name_wk = rtrim(&NM.NAME_DISPLAY,' ')
   let $Empl_Name    = Substr($empl_name_wk,1,20)

  
   If $Proc_stat = 'E'
     let $Msg_display = $Error_msg     ! Error encountered, Employee not processed
   Else   
     let $Msg_display = $Warning_msg   ! Row processed, but input should be reviewed.  Future row was detected.
   End-if

   Do Report
   
FROM PS_IDO_FUT_UPD_JPN FUT, 
     PS_PERSON_NAME NM

WHERE FUT.ORG_PLAN_JPN = $org_plan
 And FUT.PROC_STAT_JPN in ('E','W')
 And FUT.EMPLID = NM.EMPLID
 Order by FUT.PROC_STAT_JPN, FUT.EMPLID, FUT.EMPL_RCD
  

end-SELECT

end-procedure Print-Errors-Warnings


!***********************************************************************
!                                                                      *
! Print-Updated                                                        *
!                                                                      *
! Called By: Report                                                    *
!                                                                      *
! Description:  Read data and print Updated report                     *
!                                                                      *
!***********************************************************************

begin-procedure Print-Updated

   let $Error-Warn-rpt = 'N' 
   print $Header_updated (+2,8)

begin-SELECT

FUT2.EMPLID, 
FUT2.EMPL_RCD, 
FUT2.EFFDT, 
FUT2.ACTION, 
FUT2.ACTION_REASON, 
NM2.NAME_DISPLAY

   let $Empl_id      = rtrim(&FUT2.EMPLID,' ')
   let $Empl_rcd     = to_char(&FUT2.EMPL_RCD)
   let $Effdt        = &FUT2.EFFDT
   let $Action       = rtrim(&FUT2.ACTION,' ')
   let $Action_reason= rtrim(&FUT2.ACTION_REASON,' ')
   let $empl_name_wk = rtrim(&NM2.NAME_DISPLAY,' ')
   let $Empl_Name    = Substr($empl_name_wk,1,20)

   Do Report
   
FROM PS_IDO_FUT_UPD_JPN FUT2, 
     PS_PERSON_NAME NM2

WHERE FUT2.ORG_PLAN_JPN = $org_plan
 And FUT2.PROC_STAT_JPN in ('Y','W')
 And FUT2.EMPLID = NM2.EMPLID
 Order by FUT2.EMPLID, FUT2.EMPL_RCD
  

end-SELECT

end-procedure Print-Updated


!*************************************************************************!
! Report         
!*************************************************************************!
begin-procedure Report



     print $Empl_id          (+1, 8)
     print $Empl_rcd         (0,19)
     print $Empl_Name        (0,33)

     do Convert-To-DTU-Date ($Effdt, $Effdt_out)

     print $Effdt_out            (0,65,10)
     print $Action           (0,85)
     print $Action_reason    (0,95)
     If  $Error-Warn-rpt = 'Y' 
        print $Msg_display   (0,110)
     End-if
  
    
end-procedure Report

!*************************************************************************!
! SQC Files for called procedures
!*************************************************************************!
#include 'prcsdef.sqc'       !Update Process Request variable declare
#include 'prcsapi.sqc'       !Update Process Request API
#include 'readxlat.sqc'      !Read Translate Table
#include 'reset.sqc'         !End of Program
#include 'curdttim.sqc'      !Get-Current-DateTime procedure
#include 'datetime.sqc'      !Routines for date and time formatting
#include 'datemath.sqc'      !Date conversion procedures
#include 'number.sqc'        !Routines to format numbers
#include 'sqrtrans.sqc'      !Translate SQR strings to given language
#include 'stdapi.sqc'    !Routines to Update Run Status

