!***********************************************************************
!  CPDFDYNM: CPDF Dynamics Submission File Program                     *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2007 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2007/01/25:00:01:07                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689716                                              !
!                                                                      *
!***********************************************************************
!                                                                      *
!  Assumptions:                                                        *
!                                                                      *
!    1)  That prior to implementation the implementing agency will     *
!        process their status and dynamics submissions.                *
!    2)  That a conversion(data conversion not NOA of Conversion)      *
!        record will be created containing this implementation data.   *
!    3)  That execution of status and dynamics submissions will not    *
!        include the action date of the conversion record.             *
!                                                                      *
!***********************************************************************
!  Modifications                                                       *
!                                                                      *
!***********************************************************************


#define DYNAMIC_PROC
#include 'setenv.sqc'    !Set environment
#include 'fgdfncpd.sqc'  !Set CPDF variables

begin-setup
#include 'setup01a.sqc'
#include 'fgpaypln.sqc'  !Load-Lookup Table with Plan Plans

 declare-variable
    date $AsOfDate
    date $FromDate
    date $ThruDate
    date $Service_Date
    date $Birthdate_Date
    date $Job_Effdt
    date $BeginDt
    date $EndDt
    date $review-as-of-date
    date $PARM-EFFDT
    date $RECURSE-EFFDT
    date $PREV_EFFDT
    date $SCD_Retire
    date $SCD_Rif
 !*******BEGIN RESOLUTION 615378************** 
     
    date $StrToDate
        
 !*******END RESOLUTION  615378***************


 end-declare

end-setup


!***********************************************************************
begin-report
!***********************************************************************

  Do Init-DateTime
  Do Init-Number
  move 'FGHR019A' to $ReportID
  move 'CPDF Dynamic Table Generation' to $ReportTitle
  Do Get-Current-DateTime
  Do Init-Report
  Do Report
  Do Print-Summary-Report
  Do Reset
  Do Stdapi-Term
 
end-report


!***********************************************************************
begin-heading 8
!***********************************************************************

#Include 'stdhdg01.sqc'
  print 'CPDF Employee Dynamics Table Generation from ' (0,30)
  print $fromdate                                 (0,75)        edit MM/DD/YYYY
  print ' to '                                    (0,85)
  print $thrudate                                 (0,89)        edit MM/DD/YYYY
  print 'For Agency '                             (+1,58)
  print $agency                                   (0,69)

end-heading


!***********************************************************************
begin-procedure Init-Report
!***********************************************************************
  Do Stdapi-Init
!*******BEGIN RESOLUTION 615378**************
  !declare-variable 
  !date   $StrToDate
  !end-declare
!*******END RESOLUTION  615378***************

  if IsBlank($prcs_process_instance)
    Do Ask-From-Thru-Date
  else
    DISPLAY $ReportTitle
    Do select-parameters
    Do Get-Values
  end-if

!   This process selects all transactions with an effective date 2 years prior
!   to and 6 months after the run control As Of Date entered.
  let #dtu_years = -2
  let #dtu_months = 6

  Do Convert-To-DTU-Date($AsOfDate,$dtu_AsOfToday)
  Do DTU-Add-Years($dtu_AsOfToday,#dtu_years,$dtu_effdtfrom)
  Do DTU-Add-Months($dtu_AsOfToday,#dtu_months,$dtu_effdtthru)
  Do Convert-From-DTU-Date($dtu_effdtfrom,$effdtfrom)
  Do Convert-From-DTU-Date($dtu_effdtthru,$effdtthru)

  !Begin Resolution 1362340002
  !#ifdef DB2UNIX 
  !   Let $StrToDate = $effdtfrom 
  !   Let $effdtfrom = datetostr($StrToDate, {Native-DateMask})   

  !   Let $StrToDate = $effdtthru 
  !   Let $effdtthru = datetostr($StrToDate, {Native-DateMask})   
  !#endif
  !End Resolution 1362340002

  #ifdef DB2 
     Let $StrToDate = $effdtfrom 
     Let $effdtfrom = datetostr($StrToDate, {Native-DateMask})   

     Let $StrToDate = $effdtthru 
     Let $effdtthru = datetostr($StrToDate, {Native-DateMask})   
     Let $StrToDate = $KEFFDT
     Let $KEFFDT = datetostr($StrToDate, {Native-DateMask})   
  #endif

  do Setup-CPDF-Field-Formats

end-procedure


!***********************************************************************
begin-procedure Get-Values
!***********************************************************************
  let $online_flag = rtrim(&RUN_CNTL_FG.GVT_CPDF_VAL_ONLNE,' ')
 
If $online_flag = 'N'
  let $AsOfDate = &RUN_CNTL_FG.ASOFDATE
  !Begin Resolution 1362340002
  Let $Str_AsOfDate = datetostr($AsOfDate, {Native-DateMask})
  !End Resolution 1362340002
  let $agency = rtrim(&RUN_CNTL_FG.COMPANY,' ')
  let $FromDate = &RUN_CNTL_FG.FROMDATE
  let $ThruDate = &RUN_CNTL_FG.THRUDATE
ELSE
 ! Added for online validation. Select online flag and par rows keys
  let $KEMPLID = &RUN_CNTL_FG.EMPLID
  let $KEFFDT= &RUN_CNTL_FG.EFFDT
  let #KEFFSEQ = &RUN_CNTL_FG.EFFSEQ
  let #KEMPL_RCD = &RUN_CNTL_FG.EMPL_RCD
END-IF
end-procedure


!***********************************************************************
begin-procedure Print-Summary-Report
!***********************************************************************
  move '999,999' to $mask

  print 'Total Records Read      : '                (+1,1)
  print #total_read_count                          (0,25)  edit :$mask
  print 'Total Records Written   : '                (+1,1)
  print #total_written_count                        (0,25)  edit :$mask

end-procedure


!***********************************************************************
begin-procedure Report
!***********************************************************************
 If $online_flag = 'N' 
 Let $WhereClause  = ''
 Let $WhereClause = ' JOB1.COMPANY        = ''' || $AGENCY || ''''
 Let  $WhereClause =  $WhereClause || ' AND   JOB1.GVT_STATUS_TYPE IN (' || '''COM''' ||',' || '''COR''' || ',' || '''CAN''' || ')'
 Let  $WhereClause =  $WhereClause || ' AND   EMPL.EMPLID          = JOB1.EMPLID'
 Let  $WhereClause =  $WhereClause || ' AND   EMPL.EMPL_RCD       = JOB1.EMPL_RCD'
 Let  $WhereClause =  $WhereClause || ' AND   EMPL.EFFDT           = JOB1.EFFDT'
 Let  $WhereClause =  $WhereClause || ' AND   EMPL.EFFSEQ          = JOB1.EFFSEQ'
 Let  $WhereClause =  $WhereClause || ' AND   PERS.EMPLID          = JOB1.EMPLID'
 Let  $WhereClause =  $WhereClause || ' AND   PERS.EMPL_RCD       = JOB1.EMPL_RCD'
 Let  $WhereClause =  $WhereClause || ' AND   PERS.EFFDT           = JOB1.EFFDT'
 Let  $WhereClause =  $WhereClause || ' AND   PERS.EFFSEQ          = JOB1.EFFSEQ'
 Let  $WhereClause =  $WhereClause || ' AND   PERS_NID.EMPLID      = JOB1.EMPLID'
 Let  $WhereClause =  $WhereClause || ' AND   PERS_NID.EMPL_RCD   = JOB1.EMPL_RCD'
 Let  $WhereClause =  $WhereClause || ' AND   PERS_NID.EFFDT       = JOB1.EFFDT'
 Let  $WhereClause =  $WhereClause || ' AND   PERS_NID.EFFSEQ      = JOB1.EFFSEQ'
 Let  $WhereClause =  $WhereClause || ' AND   SUB.COMPANY          = JOB1.COMPANY'
 Let  $WhereClause =  $WhereClause || ' AND   SUB.GVT_SUB_AGENCY   = JOB1.GVT_SUB_AGENCY'
 Let  $WhereClause =  $WhereClause || ' AND   SUB.EFF_STATUS       = ' || '''A'''
 Let  $WhereClause =  $WhereClause || ' AND   SUB.EFFDT            = (SELECT MAX(S1.EFFDT)'
 Let  $WhereClause =  $WhereClause || '                              FROM PS_GVT_SUBAGCY_TBL S1'
 Let  $WhereClause =  $WhereClause || '                              WHERE S1.COMPANY        = SUB.COMPANY'
 Let  $WhereClause =  $WhereClause || '                              AND   S1.GVT_SUB_AGENCY = SUB.GVT_SUB_AGENCY'
 Let  $WhereClause =  $WhereClause || '                              AND   S1.EFF_STATUS     = ' || '''A'''
 Let  $WhereClause =  $WhereClause || '                              AND   S1.EFFDT         <= JOB1.EFFDT)'
 Let  $WhereClause =  $WhereClause || ' AND   POS.POSITION_NBR     = JOB1.POSITION_NBR'
 Let  $WhereClause =  $WhereClause || ' AND   POS.EFF_STATUS       = ' || '''A'''
 Let  $WhereClause =  $WhereClause || ' AND   POS.EFFDT            = (SELECT MAX(P1.EFFDT)'
 Let  $WhereClause =  $WhereClause || '                              FROM PS_POSITION_DATA P1'
 Let  $WhereClause =  $WhereClause || '                              WHERE P1.POSITION_NBR = POS.POSITION_NBR'
 Let  $WhereClause =  $WhereClause || '                              AND   P1.EFF_STATUS   = ' || '''A'''
 Let  $WhereClause =  $WhereClause || '                              AND   P1.EFFDT       <= JOB1.EFFDT)'
 Let  $WhereClause =  $WhereClause || ' AND   TRK.EMPLID           = JOB1.EMPLID'
 Let  $WhereClause =  $WhereClause || ' AND   TRK.EMPL_RCD        = JOB1.EMPL_RCD'
 Let  $WhereClause =  $WhereClause || ' AND   TRK.EFFDT            = JOB1.EFFDT'
 Let  $WhereClause =  $WhereClause || ' AND   TRK.EFFSEQ           = JOB1.EFFSEQ'
 Let  $WhereClause =  $WhereClause || ' AND   TRK.GVT_WIP_STATUS   = JOB1.GVT_WIP_STATUS'
 Let  $WhereClause =  $WhereClause || ' AND   TRK.GVT_EE_TRK_DT   BETWEEN ' || '''' || &RUN_CNTL_FG.FROMDATE || '''' || ' AND ' || '''' || &RUN_CNTL_FG.THRUDATE || ''''
 Let  $WhereClause =  $WhereClause || ' AND   JOB1.EFFDT BETWEEN ' || '''' || $effdtfrom  || ''''  || ' AND ' || '''' || $effdtthru || ''''
 Let  $WhereClause =  $WhereClause || ' AND   JOB1.GVT_NOA_CODE NOT LIKE (' || '''' || '9%' || '''' || ')'
 Let  $WhereClause =  $WhereClause || ' AND   SUB.GVT_REPORT_CPDF = ' || '''' || 'Y' || ''''
 Let  $WhereClause =  $WhereClause || ' ORDER BY JOB1.EMPLID,JOB1.EMPL_RCD,JOB1.EFFDT DESC, JOB1.EFFSEQ DESC'
#debugd show $WhereClause
begin-sql
DELETE FROM PS_GVT_CPDF_DYN
end-sql

else

Let $WhereClause =  ' JOB1.EMPLID        ='''  || $KEMPLID || ''''
Let $WhereClause =  $WhereClause || ' AND JOB1.EFFDT        = ''' || $KEFFDT || ''''
Let $WhereClause =  $WhereClause || ' AND JOB1.EFFSEQ        =  ' || TO_CHAR(#KEFFSEQ)
Let $WhereClause =  $WhereClause || ' AND JOB1.EMPL_RCD        = ' || TO_CHAR(#KEMPL_RCD)
Let $WhereClause =  $WhereClause || ' AND   EMPL.EMPLID          = JOB1.EMPLID AND   EMPL.EMPL_RCD       = JOB1.EMPL_RCD'
Let $WhereClause =  $WhereClause || ' AND   EMPL.EFFDT           = JOB1.EFFDT'
Let $WhereClause =  $WhereClause || ' AND   EMPL.EFFSEQ          = JOB1.EFFSEQ'
Let $WhereClause =  $WhereClause || ' AND   PERS.EMPLID          = JOB1.EMPLID'
Let $WhereClause =  $WhereClause || ' AND   PERS.EMPL_RCD       = JOB1.EMPL_RCD'
Let $WhereClause =  $WhereClause || ' AND   PERS.EFFDT           = JOB1.EFFDT'
Let $WhereClause =  $WhereClause || ' AND   PERS.EFFSEQ          = JOB1.EFFSEQ'
Let $WhereClause =  $WhereClause || ' AND   PERS_NID.EMPLID      = JOB1.EMPLID'
Let $WhereClause =  $WhereClause || ' AND   PERS_NID.EMPL_RCD   = JOB1.EMPL_RCD'
Let $WhereClause =  $WhereClause || ' AND   PERS_NID.EFFDT       = JOB1.EFFDT'
Let $WhereClause =  $WhereClause || ' AND   PERS_NID.EFFSEQ      = JOB1.EFFSEQ'
Let $WhereClause =  $WhereClause || ' AND   SUB.COMPANY          = JOB1.COMPANY'
Let $WhereClause =  $WhereClause || ' AND   SUB.GVT_SUB_AGENCY   = JOB1.GVT_SUB_AGENCY'
Let $WhereClause =  $WhereClause || ' AND   SUB.EFF_STATUS       = ' || '''A'''
Let $WhereClause =  $WhereClause || ' AND   SUB.EFFDT            = (SELECT MAX(S1.EFFDT)'
Let $WhereClause =  $WhereClause || '                              FROM PS_GVT_SUBAGCY_TBL S1'
Let $WhereClause =  $WhereClause || '                              WHERE S1.COMPANY        = SUB.COMPANY'
Let $WhereClause =  $WhereClause || '                            AND   S1.GVT_SUB_AGENCY = SUB.GVT_SUB_AGENCY'
Let $WhereClause =  $WhereClause || '                             AND   S1.EFF_STATUS     = ' || '''A'''
Let $WhereClause =  $WhereClause || '                             AND   S1.EFFDT         <= JOB1.EFFDT)'
Let $WhereClause =  $WhereClause || ' AND   POS.POSITION_NBR     = JOB1.POSITION_NBR'
Let $WhereClause =  $WhereClause || ' AND   POS.EFF_STATUS       = ' || '''A'''
Let $WhereClause =  $WhereClause || ' AND   POS.EFFDT            = (SELECT MAX(P1.EFFDT)'
Let $WhereClause =  $WhereClause || '                              FROM PS_POSITION_DATA P1'
Let $WhereClause =  $WhereClause || '                              WHERE P1.POSITION_NBR = POS.POSITION_NBR'
Let $WhereClause =  $WhereClause || '                              AND   P1.EFF_STATUS   = ' || '''A'''
Let $WhereClause =  $WhereClause || '                              AND   P1.EFFDT       <= JOB1.EFFDT)'
Let $WhereClause =  $WhereClause || ' AND   TRK.EMPLID           = JOB1.EMPLID'
Let $WhereClause =  $WhereClause || ' AND   TRK.EMPL_RCD        = JOB1.EMPL_RCD'
Let $WhereClause =  $WhereClause || ' AND   TRK.EFFDT            = JOB1.EFFDT'
Let $WhereClause =  $WhereClause || ' AND   TRK.EFFSEQ           = JOB1.EFFSEQ'
Let $WhereClause =  $WhereClause || ' AND   TRK.GVT_WIP_STATUS   = JOB1.GVT_WIP_STATUS'
Let $WhereClause =  $WhereClause || ' AND TRK.GVT_TRK_SEQUENCE = (SELECT MAX(T1.GVT_TRK_SEQUENCE) FROM PS_GVT_EE_DATA_TRK T1 '
Let $WhereClause =  $WhereClause || ' WHERE T1.EMPLID = TRK.EMPLID  AND T1.EMPL_RCD = TRK.EMPL_RCD AND T1.EFFDT = TRK.EFFDT '
Let $WhereClause =  $WhereClause || ' AND T1.EFFSEQ = TRK.EFFSEQ AND T1.GVT_WIP_STATUS = TRK.GVT_WIP_STATUS)'
Let $WhereClause =  $WhereClause || ' AND JOB1.GVT_NOA_CODE NOT LIKE (' || '''9%''' || ')'

begin-sql
 DELETE FROM PS_GVT_CPDF_ONLINE 
 WHERE OPRID = $Prcs_OprID AND EMPLID = $KEMPLID AND EMPL_RCD = #KEMPL_RCD AND EFFDT = $KEFFDT AND EFFSEQ = #KEFFSEQ AND GVT_EDIT_ID = '2'
end-sql

end-if

  do Process-Jobs

end-procedure


!***********************************************************************
begin-procedure Process-Jobs
!***********************************************************************

begin-select
JOB1.EMPLID
JOB1.EMPL_RCD
JOB1.EFFDT
JOB1.EFFSEQ
JOB1.GVT_EFFDT          &JOBF.GVT_EFFDT
JOB1.DEPTID
JOB1.POSITION_NBR
JOB1.GVT_NOA_CODE       &JOBF.GVT_NOA_CODE
JOB1.GVT_LEG_AUTH_1     &JOBF.GVT_LEG_AUTH_1
JOB1.GVT_LEG_AUTH_2     &JOBF.GVT_LEG_AUTH_2
JOB1.LOCATION
JOB1.GVT_WORK_SCHED     &JOBF.GVT_WORK_SCHED
JOB1.COMPANY
JOB1.GVT_SUB_AGENCY     &JOBF.GVT_SUB_AGENCY
JOB1.GVT_PAY_RATE_DETER &JOBF.GVT_PAY_RATE_DETER
JOB1.GVT_PAY_PLAN       &JOBF.GVT_PAY_PLAN
JOB1.GRADE              &JOBF.GRADE
JOB1.GVT_STEP           &JOBF.GVT_STEP
JOB1.GVT_RTND_PAY_PLAN  &JOBF.GVT_RTND_PAY_PLAN
JOB1.GVT_RTND_GRADE     &JOBF.GVT_RTND_GRADE
JOB1.GVT_RTND_GVT_STEP  &JOBF.GVT_RTND_GVT_STEP
JOB1.GVT_RTND_STEP      &JOBF.GVT_RTND_STEP
JOB1.GVT_PAY_BASIS      &JOBF.GVT_PAY_BASIS
JOB1.GVT_POSN_OCCUPIED  &JOBF.GVT_POSN_OCCUPIED
JOB1.GVT_LOCALITY_ADJ   &JOBF.GVT_LOCALITY_ADJ
JOB1.GVT_COMPRATE       &JOBF.GVT_COMPRATE
JOB1.COMPRATE
JOB1.GVT_RETIRE_PLAN    &JOBF.GVT_RETIRE_PLAN
JOB1.GVT_FERS_COVERAGE  &JOBF.GVT_FERS_COVERAGE
JOB1.GVT_CSRS_FROZN_SVC &JOBF.GVT_CSRS_FROZN_SVC
JOB1.GVT_PREV_RET_COVRG &JOBF.GVT_PREV_RET_COVRG
JOB1.GVT_POI            &JOBF.GVT_POI
JOB1.GVT_WIP_STATUS     &JOBF.GVT_WIP_STATUS
JOB1.GVT_STATUS_TYPE    &JOBF.GVT_STATUS_TYPE
JOB1.PAYGROUP
JOB1.REG_TEMP
JOB1.SETID_DEPT
JOB1.SETID_LOCATION
EMPL.SERVICE_DT
EMPL.GVT_TENURE         &JOBF.GVT_TENURE
EMPL.GVT_CURR_APT_AUTH1 &JOBF.GVT_CURR_APT_AUTH1
EMPL.GVT_CURR_APT_AUTH2 &JOBF.GVT_CURR_APT_AUTH2
PERS.GVT_VET_PREF_APPT  &PERSF.GVT_VET_PREF_APPT
PERS.GVT_CRED_MIL_SVCE  &PERSF.GVT_CRED_MIL_SVCE
PERS.NAME
PERS.BIRTHDATE
PERS.SEX
PERS.ETHNIC_GROUP       &PERSF.ETHNIC_GROUP
PERS.MILITARY_STATUS    &PERSU.MILITARY_STATUS
PERS.GVT_DISABILITY_CD  &PERSF.GVT_DISABILITY_CD
POS.GVT_OCC_SERIES
POS.MANAGER_LEVEL
SUB.GVT_REPORT_CPDF
PERS_NID.NATIONAL_ID
 !*************** Incident 1100365005 ********
PERS.LAST_NAME          &PERSF.LAST_NAME
PERS.FIRST_NAME         &PERSF.FIRST_NAME
PERS.MIDDLE_NAME        &PERSF.MIDDLE_NAME
PERS.NAME_SUFFIX        &PERSF.NAME_SUFFIX
POS.DESCR               &POSF.DESCR
EMPL.GVT_SCD_RETIRE     &EMPLF.GVT_SCD_RETIRE
EMPL.CMPNY_SENIORITY_DT &EMPLF.CMPNY_SENIORITY_DT
 !*************** Incident 1100365005 ********


   ! Initialize all fields to blank
   do Initialize-CPDF-Fields
   let $SCD_Retire = &EMPLF.GVT_SCD_RETIRE
   let $SCD_Rif    = &EMPLF.CMPNY_SENIORITY_DT
   add 1 to #total_read_count             ! Count all records read

    if &jobf.gvt_status_type = 'CAN'

       ! For cancelled actions, only report 001 - Cancel NOA, NOA of action cancelled, Agency, SSN, Leg. Auth, and EFFDT
       ! Effective Date and Agency are already included in the INSERT statement in the Insert-CPDF-Record procedure.
       do Format-CPDF-Field('001','GVT_NOA_CODE',$gvt_noa_code)      ! noa of row that was canceled
       do Format-CPDF-Field(&jobf.gvt_noa_code,'GVT_NOA_CODE_2',$gvt_noa_code_2)
       do Format-CPDF-Field(&pers_nid.national_id,'SSN',$ssn)
       do Format-CPDF-Field(&JOBF.GVT_LEG_AUTH_1,'GVT_LEG_AUTH_1',$gvt_leg_auth_1)

!  ICE 1168595000 - Added the following 3 lines to populate Agency SubElement.

       do Format-CPDF-Field(&JOBF.GVT_SUB_AGENCY,'GVT_SUB_AGENCY',$gvt_sub_agency)
       let $agency_subelement = rtrim(&JOB1.COMPANY,' ') || rtrim(&JOBF.GVT_SUB_AGENCY,' ')
       do Format-CPDF-Field($agency_subelement,'AGENCY_SUBELEMENT',$agency_subelement)
       !****************************** Incident 1100365005 ********
       do Format-CPDF-Field(&PERSF.LAST_NAME,'GVT_CPDF_LAST_NAME',$gvt_cpdf_last_name)
       do Format-CPDF-Field(&PERSF.FIRST_NAME,'GVT_CPDF_FIRST_NAM',$gvt_cpdf_first_name)
       do Format-CPDF-Field(&PERSF.MIDDLE_NAME,'GVT_CPDF_MID_NAME',$gvt_cpdf_middle_name)
       do Format-CPDF-Field(&PERSF.NAME_SUFFIX,'GVT_CPDF_SUFFIX',$gvt_cpdf_name_suffix)
       do Format-CPDF-Field(&POSF.DESCR,'GVT_CPDF_POS_TITLE',$gvt_cpdf_descr)
       do Format-CPDF-Field($SCD_Retire,'GVT_CPDF_SCD_RETIR',$gvt_cpdf_gvt_scd_retire)
       do Format-CPDF-Field($SCD_Rif,'GVT_CPDF_SCD_RIF',$gvt_cpdf_cmpny_seniority_dt)
       !******************************Incident 1100365005 ********

     If $online_flag = 'N'
       do Insert-CPDF-Record
     else
       do Insert-CPDF-Record-Online
     end-if
    else

       let $emplid                 = &JOB1.EMPLID
       let #empl_rcd               = &JOB1.EMPL_RCD
       let $gvt_curr_effdt         = &JOBF.GVT_EFFDT
       let #effseq                 = &JOB1.EFFSEQ
       let #gvt_curr_effseq        = &JOB1.EFFSEQ

       let $lv_msg = 'Processing Agency/sub-agency/emplid/empl_rcd#/effdt/effseq: '
                     || &JOB1.COMPANY        || '/'
                     || &JOBF.GVT_SUB_AGENCY || '/'
                     || &JOB1.EMPLID         || '/'
                     || to_char(#empl_rcd)   || '/'
                     || $gvt_curr_effdt      || '/'
                     || to_char(#effseq)
        display '********************************************************************'
        display '    N E X T      R O W     F R O M  PROCESS-JOBS         ******'
        display '********************************************************************'
        display $lv_msg

      ! format fields that are common to all CPDF rows 

      do Format-CPDF-Field(&JOBF.GVT_SUB_AGENCY,'GVT_SUB_AGENCY',$gvt_sub_agency)
      let $agency_subelement = rtrim(&JOB1.COMPANY,' ') || rtrim(&JOBF.GVT_SUB_AGENCY,' ')
      do Format-CPDF-Field($agency_subelement,'AGENCY_SUBELEMENT',$agency_subelement)
      do Format-CPDF-Field(&JOB1.DEPTID,'GVT_DEPTID_CPDF',$gvt_deptid_cpdf)
      do Format-CPDF-Field(&JOB1.LOCATION,'GVT_CPDF_LOCATION',$gvt_cpdf_location)
      do Format-CPDF-Field(&pers_nid.NATIONAL_ID,'SSN',$ssn)
          
      Let $Service_Date = &EMPL.SERVICE_DT
      Let $Birthdate_Date = &PERS.BIRTHDATE
      Let $Job_Effdt = &JOBF.GVT_EFFDT

      Do Convert-To-DTU-Date($Service_Date,$dtu_serv_dt)
      Do Convert-To-DTU-Date($Birthdate_Date,$dtu_birth_dt)
      Do Convert-To-DTU-Date($Job_Effdt,$dtu_effdt_dt)
           
      !Begin Resolution 1362340002
      Let $Str_Job_Effdt = datetostr($Job_Effdt, {Native-DateMask})
      !Do format-datetime($Job_Effdt,$out,{defcmp},'','')
      !End Resolution 1362340002
      
      let $review-as-of-date = &JOBF.GVT_EFFDT ! As of the PAR's effdt.  Dynamic is a report of PAR transactions and the review info is associated with a PAR.
      Do Get-Employee-Review
            
      do Format-CPDF-Field(&JOBF.GVT_LEG_AUTH_1,'GVT_LEG_AUTH_1',$gvt_leg_auth_1)
      do Format-CPDF-Field(&JOBF.GVT_LEG_AUTH_2,'GVT_LEG_AUTH_2',$gvt_leg_auth_2)
            
      !******************************Incident 1100365005 ********
      do Format-CPDF-Field(&PERSF.LAST_NAME,'GVT_CPDF_LAST_NAME',$gvt_cpdf_last_name)
      do Format-CPDF-Field(&PERSF.FIRST_NAME,'GVT_CPDF_FIRST_NAM',$gvt_cpdf_first_name)
      do Format-CPDF-Field(&PERSF.MIDDLE_NAME,'GVT_CPDF_MID_NAME',$gvt_cpdf_middle_name)
      do Format-CPDF-Field(&PERSF.NAME_SUFFIX,'GVT_CPDF_SUFFIX',$gvt_cpdf_name_suffix)
      do Format-CPDF-Field(&POSF.DESCR,'GVT_CPDF_POS_TITLE',$gvt_cpdf_descr)
      do Format-CPDF-Field($SCD_Retire,'GVT_CPDF_SCD_RETIR',$gvt_cpdf_gvt_scd_retire)
      do Format-CPDF-Field($SCD_Rif,'GVT_CPDF_SCD_RIF',$gvt_cpdf_cmpny_seniority_dt)
      !******************************Incident 1100365005 ********

       if &jobf.gvt_status_type = 'COR'

          DO Get-corrected-Info

          if $ret-mod-noa-code <> &jobf.gvt_noa_code             ! has the noa code changed?
             do Format-CPDF-Field($ret-mod-noa-code,'GVT_CPDF_CORR_NOA',$gvt_cpdf_corr_noa)
          end-if

#debugd       Show 'CORRECTED SSN: ' $ret-mod-ssn '/' &pers_nid.national_id
          if rtrim($ret-mod-ssn,' ')      <> rtrim(&PERS_NID.NATIONAL_ID,' ')          ! has the ssn changed?
             do Format-CPDF-Field($ret-mod-ssn,'GVT_CPDF_CORR_SSN',$gvt_cpdf_corr_ssn)
          end-if

          ! PeopleSoft does not support correction of the NOA Effective Date
          do Format-CPDF-Field('','GVT_CPDF_COR_NOADT',$gvt_cpdf_cor_noadt)

          do Format-CPDF-Field('002','GVT_NOA_CODE',$gvt_noa_code)
          do Format-CPDF-Field(&JOBF.GVT_NOA_CODE,'GVT_NOA_CODE_2',$gvt_noa_code_2)

       else
          do Format-CPDF-Field(&JOBF.GVT_NOA_CODE,'GVT_NOA_CODE',$gvt_noa_code)
          do Format-CPDF-Field('','GVT_NOA_CODE_2',$gvt_noa_code_2)

          do Format-CPDF-Field('','GVT_CPDF_CORR_NOA',$gvt_cpdf_corr_noa)
          do Format-CPDF-Field('','GVT_CPDF_COR_NOADT',$gvt_cpdf_cor_noadt)
          do Format-CPDF-Field('','GVT_CPDF_CORR_SSN',$gvt_cpdf_corr_ssn)
       end-if

       do Format-CPDF-Field(&JOBF.GVT_PAY_BASIS,'GVT_PAY_BASIS',$gvt_pay_basis)

       do Format-Position-Occupied

       do Format-CPDF-Field(&JOBF.GVT_RETIRE_PLAN,'GVT_RETIRE_PLAN',$gvt_retire_plan)
       do Format-CPDF-Field(&JOBF.GVT_PREV_RET_COVRG,'GVT_PREV_RET_COVRG',$gvt_prev_ret_covrg)
       do Format-CPDF-Field(&PERSF.GVT_VET_PREF_APPT,'GVT_VET_PREF_APPT',$gvt_vet_pref_appt)
       do Format-CPDF-Field(&JOBF.GVT_TENURE,'GVT_TENURE',$gvt_tenure)

       do Format-CPDF-Field(&JOBF.GVT_CSRS_FROZN_SVC,'GVT_CSRS_FROZN_SVC',$gvt_csrs_frozn_svc)
       do Format-CPDF-Field(&PERSF.GVT_CRED_MIL_SVCE,'GVT_CRED_MIL_SVCE',$gvt_cred_mil_svce)
       do Format-CPDF-Field(&JOBF.GVT_POI,'GVT_POI',$gvt_poi)
       do Format-CPDF-Field(&PERS.NAME,'GVT_CPDF_NAME',$gvt_cpdf_name)
       do Format-CPDF-Field(&PERS.SEX,'SEX',$sex)

       do Format-CPDF-Field(&PERSF.ETHNIC_GROUP,'ETHNIC_GROUP',$ethnic_group)
       do Format-CPDF-Field(&PERSF.GVT_DISABILITY_CD,'GVT_DISABILITY_CD',$gvt_disability_cd)
       do Format-CPDF-Field(&POS.GVT_OCC_SERIES,'GVT_OCC_SERIES',$gvt_occ_series)
       do Format-CPDF-Field(&POS.MANAGER_LEVEL,'GVT_CPDF_SUPV_STAT',$gvt_cpdf_supv_stat)
       do Format-CPDF-Field(&JOBF.GVT_PAY_RATE_DETER,'GVT_PAY_RATE_DETER',$gvt_pay_rate_deter)


       do Format-CPDF-Field(&JOBF.GVT_PAY_PLAN,'GVT_CPDF_ERN_PROG',$gvt_cpdf_ern_prog)
       
       let $adj_grade = &JOBF.GRADE
             
       if rtrim($gvt_cpdf_ern_prog, ' ') = 'EX'
      
          let $parm-grade-in = &JOBF.GRADE
      
          do Format-EX-Grade
               
       end-if
       
       do Format-CPDF-Field($adj_grade,'GVT_CPDF_GRADE',$gvt_cpdf_grade)

       do Format-CPDF-Field(&JOBF.GVT_STEP,'GVT_STEP',$gvt_step)

       do Format-CPDF-Field(&JOBF.GVT_WORK_SCHED,'GVT_WORK_SCHED',$gvt_work_sched)
       
       let $parm-effdt          = &job1.effdt
       let $parm-pay-basis      = &jobf.gvt_pay_basis
       let $parm-pay-rate-deter = &jobf.gvt_pay_rate_deter
       let $parm-pay-plan       = &JOBf.GVT_PAY_PLAN
       let #parm-locality-adj   = &JOBf.GVT_LOCALITY_ADJ
       let $parm-setid          = &JOB1.SETID_DEPT
       let $parm-loc-setid      = &JOB1.SETID_LOCATION
       let $parm-location       = &job1.location

       do Format-Locality-Pay
       do Format-CPDF-Field($locality_adj,'GVT_CPDF_LCLTY_PAY',$gvt_cpdf_lclty_pay)
       
     evaluate &JOBF.GVT_PAY_BASIS
       when = 'PA'  !Annual
       when = 'SY'  !School Year
       when = 'PM' ! Per Month
       when = 'BW'  ! Bi-Weekly
         if isnull(&jobf.gvt_comprate)
            let $basic_pay = '' ! forces fill character instead of zeros when value is null
         else
            let #basic_pay = trunc(&JOBF.GVT_COMPRATE,0)
            let $basic_pay = to_char(#basic_pay)
         end-if

         do Format-CPDF-Field($basic_pay,'GVT_CPDF_BASIC_PAY-A',$gvt_cpdf_basic_pay)
         break

       when = 'WC'
         do Format-CPDF-Field('0','GVT_CPDF_BASIC_PAY-A',$gvt_cpdf_basic_pay)
         break

       when-other         ! PH = hourly, PD = per diem, FB = fee basis, PW = peace work, SM = semi-monthly
         if isnull(&jobf.gvt_comprate)
            let $basic_pay = '' ! forces fill character instead of zeros when value is null
         else
            let #basic_pay = trunc((&JOBF.GVT_COMPRATE + .005),2)
            let $basic_pay = to_char(#basic_pay)
         end-if

         do Format-CPDF-Field($basic_pay,'GVT_CPDF_BASIC_PAY-H',$gvt_cpdf_basic_pay)
     end-evaluate

    Do Process-Bonus-Awd

    let $recurse-effdt = &job1.effdt
    !Begin Resolution 1362340002
      Let $Str_recurse_effdt  = datetostr($recurse-effdt, {Native-DateMask})
    !End Resolution 1362340002
    let #recurse-effseq = &job1.effseq
    do Get-Previous-Occurrence

    Do Edit-Employee-Jobs

    Do Prepare-Dynamics-Submission-Record

   end-if



FROM PS_GVT_JOB JOB1,
     PS_GVT_EMPLOYMENT EMPL,
     PS_GVT_PERS_DATA PERS,
     PS_POSITION_DATA POS,
     PS_GVT_SUBAGCY_TBL SUB,
     PS_GVT_PERS_NID PERS_NID,
     PS_GVT_EE_DATA_TRK TRK


WHERE  [$WhereClause]

end-select

end-procedure



Begin-Procedure Get-Previous-Occurrence

Begin-Select

COUNT(*) &DAY_COUNT

FROM PS_GVT_JOB DC
WHERE DC.EMPLID       = &JOB1.EMPLID
AND   DC.EMPL_RCD    = &JOB1.EMPL_RCD
!Begin Resolution 1362340002
!AND   DC.EFFDT        = $RECURSE-EFFDT
AND   DC.EFFDT        = $Str_recurse_effdt
!End Resolution 1362340002
AND   DC.EFFSEQ       = (SELECT MAX(DC1.EFFSEQ)
                         FROM   PS_GVT_JOB DC1
                         WHERE  DC1.EMPLID       = DC.EMPLID
                         AND    DC1.EMPL_RCD    = DC.EMPL_RCD
                         AND    DC1.EFFDT        = DC.EFFDT
                         AND    DC1.EFFSEQ       < #RECURSE-EFFSEQ)
AND  (DC.GVT_STATUS_TYPE = 'COM' OR DC.GVT_STATUS_TYPE = 'COR')
End-Select

if &DAY_COUNT = 0

   do Get-Previous-Diff-Day

else

   do Get-Previous-Same-Day

end-if

move 'N' to $found_previous_occurrence

if not IsBlank($PREV_EFFDT)

Begin-Select

JOB2.EMPLID
JOB2.EMPL_RCD
JOB2.EFFDT
JOB2.EFFSEQ
JOB2.GVT_NOA_CODE
JOB2.LOCATION
JOB2.GVT_WORK_SCHED
JOB2.GVT_PAY_RATE_DETER
JOB2.GVT_PAY_PLAN
JOB2.GRADE
JOB2.GVT_STEP
JOB2.GVT_PAY_BASIS
JOB2.GVT_COMPRATE
JOB2.GVT_LOCALITY_ADJ
POS2.GVT_OCC_SERIES
EMPL2.SETID

 move 'Y' to $found_previous_occurrence

FROM   PS_GVT_JOB     JOB2,
       PS_POSITION_DATA POS2,
       PS_GVT_EMPLOYMENT EMPL2

WHERE  JOB2.POSITION_NBR = POS2.POSITION_NBR
AND    JOB2.EMPLID       = &JOB1.EMPLID
AND    JOB2.EMPL_RCD    = &JOB1.EMPL_RCD
!Begin Resolution 1362340002
!AND    JOB2.EFFDT        = $PREV_EFFDT
AND    JOB2.EFFDT        = $Str_Prev_Effdt
!End Resolution 1362340002
AND    JOB2.EFFSEQ       = #PREV_EFFSEQ
AND    POS2.EFFDT        = (SELECT MAX(P2.EFFDT)
                         FROM   PS_POSITION_DATA P2
                         WHERE  P2.POSITION_NBR  =  POS2.POSITION_NBR
                         AND    P2.EFFDT   <=  JOB2.EFFDT
                         AND    P2.POSN_STATUS = 'A'
                         AND    P2.EFF_STATUS  = 'A')

AND    EMPL2.EMPLID      = JOB2.EMPLID
AND    EMPL2.EMPL_RCD   = JOB2.EMPL_RCD
AND    EMPL2.EFFDT       = JOB2.EFFDT
AND    EMPL2.EFFSEQ      = JOB2.EFFSEQ
End-Select

end-if

if $found_previous_occurrence = 'N'

    display '***** No Previous Action found *****'

else

#debugd  Show 'PREVIOUS OCCUR>>>>>>>'
#debugd  Show 'JOB2.EMPLID         : '  &JOB2.EMPLID
#debugd  Show 'JOB2.EMPL_RCD      : '  &JOB2.EMPL_RCD
#debugd  Show 'JOB2.EFFDT          : '  &JOB2.EFFDT
#debugd  Show 'JOB2.EFFSEQ         : '  &JOB2.EFFSEQ
#debugd  Show 'JOB2.GVT_NOA_CODE   : '  &JOB2.GVT_NOA_CODE

  if &jobf.gvt_status_type = 'COR' and $recurse-flag <> 'Y'
     let $recurse-flag = 'Y'   ! only want to do this one time to skip the record immediately after the COR action

     let $recurse-effdt  = &JOB2.effdt
     !Begin Resolution 1362340002
     Let $Str_recurse_effdt = datetostr($recurse-effdt, {Native-DateMask})
     !End Resolution 1362340002
     let #recurse-effseq = &JOB2.effseq
     
     do Get-Previous-Occurrence
  else

     let $parm-effdt          = &job2.effdt
     let $parm-pay-basis      = &job2.gvt_pay_basis
     let $parm-pay-plan       = &JOB2.GVT_PAY_PLAN
     let $parm-pay-rate-deter = &job2.gvt_pay_rate_deter
     let #parm-locality-adj   = &JOB2.GVT_LOCALITY_ADJ
     let $parm-setid          = &EMPL2.SETID
     let $parm-location       = &job2.location

     do Format-Locality-Pay
     do Format-CPDF-Field($locality_adj,'GVT_CPDF_PR_LCLADJ',$gvt_cpdf_pr_lcladj)


     evaluate &JOB2.GVT_PAY_BASIS
       when = 'PA'  !Annual
       when = 'SY'  !School Year
       when = 'PM' ! Per Month
       when = 'BW'  ! Bi-Weekly
         if isnull(&jobf.gvt_comprate)
            let $basic_pay = '' ! forces fill character instead of zeros when value is null
         else
            let #basic_pay = trunc(&JOB2.GVT_COMPRATE,0)
            let $basic_pay = to_char(#basic_pay)
         end-if

         do Format-CPDF-Field($basic_pay,'GVT_CPDF_PR_PAY-A',$gvt_cpdf_pr_pay)
         break

       when = 'WC'
         do Format-CPDF-Field('0','GVT_CPDF_PR_PAY-A',$gvt_cpdf_pr_pay)
         break

       when-other         ! PH = hourly, PD = per diem, FB = fee basis, PW = peace work, SM = semi-monthly
         if isnull(&jobf.gvt_comprate)
            let $basic_pay = '' ! forces fill character instead of zeros when value is null
         else
            let #basic_pay = trunc((&JOB2.GVT_COMPRATE + .005),2)
            let $basic_pay = to_char(#basic_pay)
         end-if

         do Format-CPDF-Field($basic_pay,'GVT_CPDF_PR_PAY-H',$gvt_cpdf_pr_pay)
         break
     end-evaluate

    do Format-CPDF-Field(&POS2.GVT_OCC_SERIES,'GVT_CPDF_OCC_SER1',$gvt_cpdf_occ_ser1)
    do Format-CPDF-Field(&JOB2.GVT_PAY_RATE_DETER,'GVT_CPDF_PAYRTDET1',$gvt_cpdf_payrtdet1)
    do Format-CPDF-Field(&JOB2.GVT_PAY_PLAN,'GVT_CPDF_ERN_PROG1',$gvt_cpdf_ern_prog1)
    
    let $adj_grade = &JOB2.GRADE
          
    if rtrim($gvt_cpdf_ern_prog1, ' ') = 'EX'
    
      let $parm-grade-in = &JOB2.GRADE
    
      do Format-EX-Grade
             
    end-if
    
    do Format-CPDF-Field($adj_grade,'GVT_CPDF_GRADE1',$gvt_cpdf_grade1)
    do Format-CPDF-Field(&JOB2.GVT_STEP,'GVT_CPDF_PREV_STEP',$gvt_cpdf_prev_step)
    do Format-CPDF-Field(&JOB2.GVT_WORK_SCHED,'GVT_CPDF_WORK_SCH1',$gvt_cpdf_work_sch1)
    do Format-CPDF-Field(&JOB2.GVT_PAY_BASIS,'GVT_CPDF_PAY_BAS1',$gvt_cpdf_pay_bas1)
    do Format-CPDF-Field(&JOB2.LOCATION,'GVT_CPDF_PR_DTY_ST',$gvt_cpdf_pr_dty_st)

  end-if
end-if

End-Procedure



!***********************************************************************
!                                                                      *
!  Function:     Get-Previous-Diff-Day                                 *
!                                                                      *
!  Description:  Retrieves Keys for Previous Row from Different Days   *
!                                                                      *
!***********************************************************************

begin-procedure Get-Previous-Diff-Day

Begin-Select

DCD.EMPLID
DCD.EMPL_RCD
DCD.EFFDT
DCD.EFFSEQ
  
FROM PS_GVT_JOB DCD
WHERE DCD.EMPLID       = &JOB1.EMPLID
AND   DCD.EMPL_RCD    = &JOB1.EMPL_RCD
AND   DCD.EFFDT        =
       (SELECT MAX(DCD1.EFFDT)
        FROM  PS_GVT_JOB DCD1
        WHERE DCD1.EMPLID          =  DCD.EMPLID
        AND   DCD1.EMPL_RCD       =  DCD.EMPL_RCD
        AND   (DCD1.GVT_STATUS_TYPE = 'COM' OR DCD1.GVT_STATUS_TYPE = 'COR')
!Begin Resolution 1362340002
        !AND   DCD1.EFFDT           <  $RECURSE-EFFDT
        AND   DCD1.EFFDT           <  $Str_Recurse_Effdt
!End Resolution 1362340002
        AND   DCD1.EFFSEQ          =
              (SELECT MAX(DCD2.EFFSEQ)
               FROM   PS_GVT_JOB DCD2
               WHERE  DCD2.EMPLID    = DCD.EMPLID
               AND    DCD2.EMPL_RCD = DCD.EMPL_RCD
               AND    DCD2.EFFDT     = DCD.EFFDT)
AND   DCD.EFFSEQ        =
      (SELECT MAX(DCD3.EFFSEQ)
       FROM   PS_GVT_JOB DCD3
       WHERE  DCD3.EMPLID    = DCD.EMPLID
       AND    DCD3.EMPL_RCD = DCD.EMPL_RCD
       AND    DCD3.EFFDT     = DCD.EFFDT))

End-Select

  let $prev_effdt     = &DCD.EFFDT
  !Begin Resolution 1362340002
        Let $Str_prev_effdt = datetostr($prev_effdt, {Native-DateMask})
!End Resolution 1362340002
  let #prev_effseq    = &DCD.EFFSEQ

End-Procedure

!***********************************************************************
!                                                                      *
!  Function:     Get-Previous-Same-Day                                 *
!                                                                      *
!  Description:  Retrieves Keys for Previous Row on Same Day           *
!                                                                      *
!***********************************************************************

begin-procedure Get-Previous-Same-Day

Begin-Select

DCS.EMPLID
DCS.EMPL_RCD
DCS.EFFDT
DCS.EFFSEQ

FROM PS_GVT_JOB DCS
WHERE DCS.EMPLID       = &JOB1.EMPLID
AND   DCS.EMPL_RCD    = &JOB1.EMPL_RCD
AND   DCS.EFFDT        =
       (SELECT MAX(DCS1.EFFDT)
        FROM  PS_GVT_JOB DCS1
        WHERE DCS1.EMPLID           =  DCS.EMPLID
        AND   DCS1.EMPL_RCD        =  DCS.EMPL_RCD
        AND   (DCS1.GVT_STATUS_TYPE = 'COM' OR DCS1.GVT_STATUS_TYPE = 'COR')
        !Begin Resolution 1362340002
        !AND   DCS1.EFFDT            =  $RECURSE-EFFDT
        AND   DCS1.EFFDT            =  $Str_Recurse_Effdt
        !End Resolution 1362340002
        AND   DCS1.EFFSEQ           =
              (SELECT MAX(DCS2.EFFSEQ)
               FROM   PS_GVT_JOB DCS2
               WHERE  DCS2.EMPLID    = DCS.EMPLID
               AND    DCS2.EMPL_RCD = DCS.EMPL_RCD
               AND    DCS2.EFFDT     = DCS.EFFDT
               AND    DCS2.EFFSEQ    < #RECURSE-EFFSEQ)
AND   DCS.EFFSEQ        =
      (SELECT MAX(DCS3.EFFSEQ)
       FROM   PS_GVT_JOB DCS3
       WHERE  DCS3.EMPLID    = DCS.EMPLID
       AND    DCS3.EMPL_RCD = DCS.EMPL_RCD
       AND    DCS3.EFFDT     = DCS.EFFDT
       AND    DCS3.EFFSEQ    < #RECURSE-EFFSEQ))

End-Select


  let $prev_effdt     = &DCS.EFFDT
  !Begin Resolution 1362340002
        Let $Str_prev_effdt = datetostr($prev_effdt, {Native-DateMask})
  !End Resolution 1362340002
  let #prev_effseq    = &DCS.EFFSEQ

End-Procedure


!***********************************************************************
begin-procedure Process-Bonus-Awd
!***********************************************************************

move 'N' to $award_bonus_found
let $found-award-amount = 'N'

begin-select
AWD.EMPLID
AWD.EMPL_RCD
AWD.EFFDT
AWD.EFFSEQ
AWD.GOAL_AMT
AWD.OTH_HRS           
AWD.GVT_AWARD_GROUP
AWD.GVT_TANG_BEN_AMT
 !*********** Incident 1100365005 ********
AWD.PERCENT_OF_AWARD
 !*********** Incident 1100365005 ********

  move 'Y' to $award_bonus_found

  ! OPM Update 35 in effect as of 10/01/2000
  if $dtu_effdt_dt < '2000-10-01'
     ! OPM 240.02.2 - will default to asterisks (see CPDF Fields Setup Table for format) if GVT_AWARD_GROUP is blank.
     do Format-CPDF-Field(&AWD.GVT_AWARD_GROUP,'GVT_AWARD_GROUP',$gvt_award_group)
  end-if
  !*********** Incident 1100365005 ********
  let $AWD_GOAL_AMT = &AWD.GOAL_AMT * 100
  let $AWD_OTH_HRS = &AWD.OTH_HRS * 100
  let $AWD_PERCENT_OF_AWARD = &AWD.PERCENT_OF_AWARD * 100
  
  do Format-CPDF-Field($AWD_GOAL_AMT, 'GVT_CPDF_GOAL_AMT', $gvt_cpdf_goal_amt)
  do Format-CPDF-Field($AWD_OTH_HRS, 'GVT_CPDF_OTH_HRS', $gvt_cpdf_oth_hrs)
  do Format-CPDF-Field($AWD_PERCENT_OF_AWARD, 'GVT_CPDF_AWD_PRCNT', $gvt_cpdf_percent_of_award)
  !*********** Incident 1100365005 ********

  evaluate &JOBF.GVT_NOA_CODE

    when = '815'        !Recruitment Bonus
    when = '816'        !Relocation Bonus
    when = '817'        !Student loan
    when = '818'        !AUO
    when = '819'        !Availability Pay
    when = '825'        !Separation Incentive
    when = '826'        !Redesignation Bonus  
    when = '827'        !Time Off Award
    when = '840'        !Individual Cash
    when = '841'        !Group Cash
    when = '842'        !Indiv. Suggestion/Invention
    when = '843'        !Group Suggestion/Invention
    when = '844'        !Foreign Language Awards
    when = '845'        !Travel Savings Incentive
    when = '846'        !Individual Time Off
    when = '847'        !Group Time-Off Award 
    when = '848'        !Group Time Off
    when = '849'        !Indiv. Cash NRB
    when = '872'        !Time Off Incentive Award
    when = '873'        !Foreign Lang. Award
    when = '874'        !Gainsharing Award
    when = '875'        !Suggestion Award
    when = '876'        !Invention Award
    when = '877'        !Special Act or Svc Award
    when = '878'        !SES Rank Award
    when = '879'        !SES Performance Award
    when = '885'        !Performance Award RB-ILPA
    when = '886'        !Performance Award RB-NILPA  
    when = '887'        !Performance Award NRB  
    when = '889'        !Group Award-Other

       if &jobf.gvt_noa_code = '872' or  &jobf.gvt_noa_code = '846' or  &jobf.gvt_noa_code = '847' ! Time off award
          if isnull(&awd.oth_hrs)
             let $gvt_goal_amt = '' ! forces fill character instead of zeros when value is null
          else
             let $gvt_goal_amt = to_char(&AWD.OTH_HRS)
          end-if
       else
          if isnull(&awd.goal_amt)
             let $gvt_goal_amt = '' ! forces fill character instead of zeros when value is null
          else
             let $gvt_goal_amt = to_char(&AWD.GOAL_AMT)
             if &jobf.gvt_noa_code = '818' or &jobf.gvt_noa_code = '819'       ! set flag so that value is not overwritten if not A%% or AVL
                let $found-award-amount = 'Y'                                  ! earn code is found in Format-Differentials
             end-if
          end-if
       end-if

       do Format-CPDF-Field($gvt_goal_amt,'GVT_CPDF_AWARD_AMT',$gvt_cpdf_award_amt)

       ! OPM Update 35 in effect as of 10/01/2000
       if $dtu_effdt_dt < '2000-10-01'
         let $gvt_tang_ben_amt = to_char(&AWD.GVT_TANG_BEN_AMT)

         do Format-CPDF-Field($gvt_tang_ben_amt,'GVT_CPDF_BEN_AMT',$gvt_cpdf_ben_amt)
       end-if
       break

    when-other  ! OPM Edit 050.04.2
       do Format-CPDF-Field('','GVT_CPDF_AWARD_AMT',$gvt_cpdf_award_amt)
       do Format-CPDF-Field('','GVT_AWARD_GROUP',$gvt_award_group)
       do Format-CPDF-Field('','GVT_CPDF_BEN_AMT',$gvt_cpdf_ben_amt)

       break

  end-evaluate

FROM PS_GVT_AWD_DATA AWD
WHERE AWD.EMPLID    = &JOB1.EMPLID
AND   AWD.EMPL_RCD = &JOB1.EMPL_RCD
!Begin Resolution 1362340002
!AND   AWD.EFFDT     = $Job_Effdt
AND   AWD.EFFDT     = $Str_Job_Effdt
!End Resolution 1362340002
AND   AWD.EFFSEQ    = &JOB1.EFFSEQ
end-select


end-procedure


begin-procedure Get-Corrected-Info
!********************************************************************
! this procedure should only be called if the active row from process-jobs is has a WIP_STATUS
! or 'COR' or Corrected.  We need to go back to the row that has the information that
! was corrected and get the NOA information for the false column.
!
begin-select
JOBCC.GVT_NOA_CODE
JOBCC.EFFDT
JOBCC.EFFSEQ
NIDCC.NATIONAL_ID

   let $ret-mod-noa-code = &jobcc.gvt_noa_code
   let $ret-mod-noa-dt   = &jobcc.effdt
   let $ret-mod-ssn      = &nidcc.national_id

#debugd    Show 'CORRECTED/CANCELLED NOA EFFDT/EFFSEQ: ' &JOBCC.EFFDT '/' &JOBCC.EFFSEQ

FROM PS_GVT_JOB JOBCC,
     PS_GVT_PERS_NID NIDCC
WHERE JOBCC.EMPLID = NIDCC.EMPLID
AND   NIDCC.EMPL_RCD   = JOBCC.EMPL_RCD
AND   NIDCC.EFFDT       = JOBCC.EFFDT
AND   NIDCC.EFFSEQ      = JOBCC.EFFSEQ
AND   JOBCC.EMPLID = &JOB1.EMPLID
!Begin Resolution 1362340002
!AND   JOBCC.EFFDT = $Job_Effdt
AND   JOBCC.EFFDT = $Str_Job_Effdt
!End Resolution 1362340002
AND   JOBCC.GVT_STATUS_TYPE IN ('COM','COR')
AND   JOBCC.EFFSEQ = (SELECT MAX(JOBCC1.EFFSEQ) FROM PS_GVT_JOB JOBCC1
!Begin Resolution 1362340002
               ! WHERE JOBCC1.EFFDT    = $Job_Effdt
               WHERE JOBCC1.EFFDT    = $Str_Job_Effdt
!End Resolution 1362340002
                AND   JOBCC1.EFFSEQ   < &JOB1.EFFSEQ
                AND   JOBCC1.GVT_STATUS_TYPE IN ('COM','COR'))

end-select

end-procedure


!***********************************************************************
begin-procedure Edit-Employee-Jobs
!***********************************************************************

Do Format-Birth-Date

Do Format-Service-Comp-Date

Do Format-Military-Status

Do Format-Differentials

let $parm-effdt = $Job_Effdt        ! Must set this parameter before calling Format-Education.
Do Format-Education                  ! Look up current education as of the action effdt.

Do Format-Current-Appt-Authority

! do Format-Pay-Basis

end-procedure


!***********************************************************************
begin-procedure Format-Birth-Date
!***********************************************************************
Do DTU-Diff-Years($dtu_birth_dt,$dtu_effdt_dt,#years)

let $duty_station = substr(&LOC5.GVT_GEOLOC_CD,1,2)
let $ds_char1 = substr(&LOC5.GVT_GEOLOC_CD,1,1)
let $ds_char2 = substr(&LOC5.GVT_GEOLOC_CD,2,1)

if instr('0123456789', $ds_char1, 1) and instr('0123456789', $ds_char2, 1)
   let #duty_station_is_numeric = 1
else
   let #duty_station_is_numeric = 0
end-if

if (#years < 13) or (&jobf.gvt_noa_code = '300' and #years < 50)

   do Format-CPDF-Field('','GVT_CPDF_BIRTH_DT',$gvt_cpdf_birth_dt)

else
  if ((IsBlank($duty_station) or $ds_char2 = 'Q' or #duty_station_is_numeric)
      and #years < 15)

     do Format-CPDF-Field('','GVT_CPDF_BIRTH_DT',$gvt_cpdf_birth_dt)

  else

     do Format-CPDF-Field($Birthdate_Date,'GVT_CPDF_BIRTH_DT',$gvt_cpdf_birth_dt)

  end-if
end-if

end-procedure


!***********************************************************************
begin-procedure Prepare-Dynamics-Submission-Record
!***********************************************************************

!***********************************************************************
!   :  1XX should blank out 170 - 189.                            *
!***********************************************************************

let $noa_category = substr(&jobf.gvt_noa_code,1,1)
!***********Incident 1100365005 ********
let $substr1 = substr(&jobf.gvt_noa_code,1,2)
!***********Incident 1100365005 ********
EVALUATE $noa_category
!***********************************************************************
!   :  3XX & 4XX should blank out 51-54; 59; 85-104; 224-243      *
!***********************************************************************
  WHEN = '3'
  WHEN = '4'
    do Format-CPDF-Field('','GVT_CRED_MIL_SVCE',$gvt_cred_mil_svce)
    do Format-CPDF-Field('','GVT_PREV_RET_COVRG',$gvt_prev_ret_covrg)
    do Format-CPDF-Field('','GVT_CPDF_ERN_PROG',$gvt_cpdf_ern_prog)
    do Format-CPDF-Field('','GVT_OCC_SERIES',$gvt_occ_series)
    do Format-CPDF-Field('','GVT_CPDF_GRADE',$gvt_cpdf_grade)
    do Format-CPDF-Field('','GVT_STEP',$gvt_step)
    do Format-CPDF-Field('','GVT_WORK_SCHED',$gvt_work_sched)
    do Format-CPDF-Field('','GVT_PAY_BASIS',$gvt_pay_basis)

    do Format-CPDF-Field('','GVT_PAY_RATE_DETER',$gvt_pay_rate_deter)
    do Format-CPDF-Field('','GVT_CPDF_LCLTY_PAY',$gvt_cpdf_lclty_pay)

    do Format-CPDF-Field('','GVT_CPDF_STFF_DIFF',$gvt_cpdf_stff_diff)
    do Format-CPDF-Field('','GVT_CPDF_SUPV_DIFF',$gvt_cpdf_supv_diff)
    do Format-CPDF-Field('','GVT_CPDF_RET_ALLW',$gvt_cpdf_ret_allw)
    !***********Incident 1100365005 ********
    do Format-CPDF-Field('','GVT_CPDF_POS_TITLE',$gvt_cpdf_descr)
    !***********Incident 1100365005 ********
!***********************************************************************
!   :  2XX, 3XX, 4XX, 7XX, 8XX should blank out $Cred_mil_svce    *
!  except for (803 and retire-plan in (K,L,M,N)                        *
!***********************************************************************
  WHEN = '2'
  WHEN = '3'
  WHEN = '4'
  WHEN = '7'
  WHEN = '8'
    if not ((&jobf.gvt_noa_code = '803') AND
       (&jobf.gvt_retire_plan    = 'K' OR
        &jobf.gvt_retire_plan    = 'L' OR
        &jobf.gvt_retire_plan    = 'M' OR
        &jobf.gvt_retire_plan    = 'N'))

       do Format-CPDF-Field('','GVT_CRED_MIL_SVCE',$gvt_cred_mil_svce)

    END-IF
!***********************************************************************
!   :  1XX, 2XX,5XX should blank out 55-58 if retire_plan is      *
!           anything other than CEKLMN                                 *
!  3XX,4XX,7XX & 8XX should blank ouf 55-58 except for 803 and         *
!           retire_plan is KLMN                                        *
!***********************************************************************
  WHEN = '1'
  WHEN = '2'
  WHEN = '5'
    IF not (&jobf.gvt_retire_plan    = 'C' OR
        &jobf.gvt_retire_plan    = 'E' OR
        &jobf.gvt_retire_plan    = 'K' OR
        &jobf.gvt_retire_plan    = 'L' OR
        &jobf.gvt_retire_plan    = 'M' OR
        &jobf.gvt_retire_plan    = 'N')

       do Format-CPDF-Field('','GVT_CSRS_FROZN_SVC',$gvt_csrs_frozn_svc)

    END-IF

  WHEN = '3'
  WHEN = '4'
  WHEN = '7'
  WHEN = '8'
    IF not ((rtrim($noa,'') = '803') AND
       (&jobf.gvt_retire_plan    = 'K' OR
        &jobf.gvt_retire_plan    = 'L' OR
        &jobf.gvt_retire_plan    = 'M' OR
        &jobf.gvt_retire_plan    = 'N'))

       do Format-CPDF-Field('','GVT_CSRS_FROZN_SVC',$gvt_csrs_frozn_svc)

    END-IF

!***********************************************************************
!   :  3XX & 8XX should blank out field 59                        *
!***********************************************************************
  WHEN = '3'
  WHEN = '8'
  
    do Format-CPDF-Field('','GVT_PREV_RET_COVRG',$gvt_prev_ret_covrg)
    !****************** Incident 1100365005 ********
  WHEN = '1'
  WHEN = '2'
  WHEN = '3'
  WHEN = '4'
  WHEN = '5'
  WHEN = '6'
  WHEN = '7'
  WHEN = '8'
    IF not (&jobf.gvt_noa_code = '815' OR
       &jobf.gvt_noa_code = '816' OR
       &jobf.gvt_noa_code = '817' OR
       &jobf.gvt_noa_code = '818' OR
       &jobf.gvt_noa_code = '819' OR
       &jobf.gvt_noa_code = '825' OR
       &jobf.gvt_noa_code = '826' OR
       &jobf.gvt_noa_code = '827' OR
       &jobf.gvt_noa_code = '878' OR
       &jobf.gvt_noa_code = '879' OR
       &jobf.gvt_noa_code = '885' OR
       &jobf.gvt_noa_code = '886' OR
       &jobf.gvt_noa_code = '887' OR
       &jobf.gvt_noa_code = '889' OR
       $substr1 = '84')
              ! As of Update 52 (11/27/2006), there is no value for 849.  Review code if NOA 849 is created.
       do Format-CPDF-Field('','GVT_CPDF_GOAL_AMT',$gvt_cpdf_goal_amt)
       do Format-CPDF-Field('','GVT_CPDF_OTH_HRS',$gvt_cpdf_oth_hrs)
       do Format-CPDF-Field('','GVT_CPDF_AWD_PRCNT',$gvt_cpdf_percent_of_award)
    END-IF
  
  WHEN = '8'
    IF (&jobf.gvt_noa_code = '817')
       do Format-CPDF-Field('','GVT_CPDF_LAST_NAME',$gvt_cpdf_last_name)
       do Format-CPDF-Field('','GVT_CPDF_FIRST_NAM',$gvt_cpdf_first_name)
       do Format-CPDF-Field('','GVT_CPDF_MID_NAME',$gvt_cpdf_middle_name)
       do Format-CPDF-Field('','GVT_CPDF_SUFFIX',$gvt_cpdf_name_suffix)
       do Format-CPDF-Field('','GVT_CPDF_SCD_RETIR',$gvt_cpdf_gvt_scd_retire)
       do Format-CPDF-Field('','GVT_CPDF_SCD_RIF',$gvt_cpdf_cmpny_seniority_dt)
    END-IF
  
  WHEN = '0'
    IF (&jobf.gvt_noa_code = '001')
         do Format-CPDF-Field('','GVT_CPDF_LAST_NAME',$gvt_cpdf_last_name)
         do Format-CPDF-Field('','GVT_CPDF_FIRST_NAM',$gvt_cpdf_first_name)
         do Format-CPDF-Field('','GVT_CPDF_MID_NAME',$gvt_cpdf_middle_name)
         do Format-CPDF-Field('','GVT_CPDF_SUFFIX',$gvt_cpdf_name_suffix)
         do Format-CPDF-Field('','GVT_CPDF_POS_TITLE',$gvt_cpdf_descr)
         do Format-CPDF-Field('','GVT_CPDF_GOAL_AMT',$gvt_cpdf_goal_amt)
         do Format-CPDF-Field('','GVT_CPDF_OTH_HRS',$gvt_cpdf_oth_hrs)
         do Format-CPDF-Field('','GVT_CPDF_AWD_PRCNT',$gvt_cpdf_percent_of_award)
         do Format-CPDF-Field('','GVT_CPDF_SCD_RETIR',$gvt_cpdf_gvt_scd_retire)
         do Format-CPDF-Field('','GVT_CPDF_SCD_RIF',$gvt_cpdf_cmpny_seniority_dt)
    END-IF 
    !****************** Incident 1100365005 ********

END-EVALUATE

If $online_flag = 'N' 
do Insert-CPDF-Record
else
do Insert-CPDF-Record-Online
end-if
end-procedure


!****************************************************************************************************
begin-procedure Look-Up-Previous-ERNCD($gvt_cpdf_erncd_value_sought, :$previous_erncd)
!*******************************************************************************************************
! This procedure will look up the row before the one that is active in process
! job to find out the previous GVT_CPDF_ERNCD.  This should only be called
! when we encounter a row that has a NOAC = 810.
!  A NOAC of 810 symbolized a beginning or an end to either a Retention Allowance, Supervisory Differential,
! or Staff Differential.
! If we encounter an 810 that has a blank value for either Ret.  Allow, Supv Diff, or Staff Diff.
!  This is a function in which you pass in an CPDF_ERNCD that you are looking for and it will
! use that as a bind variable.  The values passed in should be either R (retention allowance),
!  S (supervisory differential), or T (Staffing Differential)
!
! Lets say we encounter an 810 NOAC that has the staffing differential field blank.
! we have to see if this was the termination of a staffing differtial.  The only way to do this
! is to look back at earlier EFFDT and see if there was a row that has an 810 NOAC
! in which the Staffing Differential is not empty.  This would mean that the previous 810 with a blank
! Staffing Differential was signifying the end of the Staff. Diff.  We have to perform this same
! test for both Retention Allowance and Supervisory Differential.
!
!

let $previous_erncd = ' '

if not IsBlank($_&JOB2.EFFDT)

BEGIN-SELECT

ERN.GVT_CPDF_ERNCD
! ICE 579731000
JOBERN.EFFDT
JOBERN.EFFSEQ

  let $previous_erncd = &ERN.GVT_CPDF_ERNCD

  exit-select

FROM PS_GVT_JOBERNS JOBERN,
     PS_EARNINGS_TBL ERN
WHERE ERN.ERNCD          = JOBERN.ERNCD
AND   ERN.EFF_STATUS     = 'A'
AND   ERN.GVT_CPDF_ERNCD <> 'N'
AND   ERN.EFFDT          = (SELECT MAX(ERN2.EFFDT)
                            FROM PS_EARNINGS_TBL ERN2
                            WHERE ERN2.ERNCD    = ERN.ERNCD
                            AND ERN2.EFF_STATUS = ERN.EFF_STATUS
                            !Begin Resolution 1362340002
                            !AND ERN2.EFFDT     <= $_&JOB2.EFFDT)
                 AND ERN2.EFFDT     <= &_JOB2.EFFDT)
                !End Resolution 1362340002
AND   JOBERN.EMPLID    = &_JOB1.EMPLID
AND   JOBERN.EMPL_RCD = &_JOB1.EMPL_RCD
!Begin Resolution 1362340002
!AND   JOBERN.EFFDT     = $_JOB2.EFFDT
AND   JOBERN.EFFDT     = &_JOB2.EFFDT
!AND   JOBERN.EFFSEQ    = $_JOB2.EFFSEQ
AND   JOBERN.EFFSEQ    = &_JOB2.EFFSEQ
!End Resolution 1362340002
AND   ERN.GVT_CPDF_ERNCD = $GVT_CPDF_ERNCD_VALUE_SOUGHT
ORDER BY JOBERN.EFFDT DESC, JOBERN.EFFSEQ DESC
end-select
end-if
end-procedure


!***********************************************************************
begin-procedure Print-Time($pvi_function)
!**********************************************************************
  DO Get-Current-DateTime

  LET $lv_msg = '    '
        ||$_SysDateTime||':'
        ||$pvi_function
  display $lv_msg
END-PROCEDURE



begin-procedure Insert-CPDF-Record

print $asofdate (+1,1,)
print $dtu_birth_dt (,+5,)
print &PERS.BIRTHDATE (,+5,)




! Begin Resolution 1362340002 Changed $AsOfDate to $Str_AsOfDate

begin-sql
INSERT INTO PS_GVT_CPDF_DYN
(
COMPANY,
GVT_CPDF_RUN_DT,
EMPLID,
EMPL_RCD,
EFFDT,
EFFSEQ,
AGENCY_SUBELEMENT,
SSN,
GVT_NOA_EFFDT,
SEQUENCE_NBR,
GVT_DEPTID_CPDF,
GVT_POI,
GVT_CPDF_BIRTH_DT,
GVT_VET_PREF_APPT,
GVT_TENURE,
GVT_CPDF_SCD_DT,
GVT_RETIRE_PLAN,
GVT_CRED_MIL_SVCE,
GVT_CSRS_FROZN_SVC,
GVT_PREV_RET_COVRG,
MILITARY_STATUS,
SEX,
ETHNIC_GROUP,
GVT_DISABILITY_CD,
GVT_NOA_CODE,
GVT_NOA_CODE_2,
GVT_LEG_AUTH_1,
GVT_LEG_AUTH_2,
GVT_CPDF_ERN_PROG,
GVT_OCC_SERIES,
GVT_CPDF_GRADE,
GVT_STEP,
GVT_CPDF_BASIC_PAY,
GVT_PAY_BASIS,
GVT_WORK_SCHED,
GVT_PAY_RATE_DETER,
GVT_POSN_OCCUPIED,
GVT_CPDF_SUPV_STAT,
GVT_CPDF_LOCATION,
GVT_CURR_APT_AUTH1,
GVT_CURR_APT_AUTH2,
REVIEW_RATING,
GVT_CPDF_REVW_PTRN,
GVT_CPDF_REV_PRD,
GVT_AWARD_GROUP,
GVT_CPDF_AWARD_AMT,
GVT_CPDF_BEN_AMT,
GVT_CPDF_NAME,
GVT_CPDF_ERN_PROG1,
GVT_CPDF_OCC_SER1,
GVT_CPDF_GRADE1,
GVT_CPDF_PREV_STEP,
GVT_CPDF_PR_PAY,
GVT_CPDF_PAY_BAS1,
GVT_CPDF_WORK_SCH1,
GVT_CPDF_PAYRTDET1,
GVT_CPDF_CORR_NOA,
GVT_CPDF_COR_NOADT,
GVT_CPDF_CORR_SSN,
GVT_CPDF_PR_LCLADJ,
GVT_CPDF_PR_DTY_ST,
GVT_CPDF_LCLTY_PAY,
GVT_CPDF_STFF_DIFF,
GVT_CPDF_SUPV_DIFF,
GVT_CPDF_RET_ALLW,
GVT_CPDF_HI_ED_LVL,
GVT_CPDF_INST_PROG,
GVT_CPDF_YR_OF_DEG,
 !*********** Incident 1100365005 ********
GVT_CPDF_LAST_NAME,      
GVT_CPDF_FIRST_NAM,
GVT_CPDF_MID_NAME,
GVT_CPDF_SUFFIX,
GVT_CPDF_POS_TITLE,
GVT_CPDF_GOAL_AMT,
GVT_CPDF_OTH_HRS,
GVT_CPDF_AWD_PRCNT,
GVT_CPDF_SCD_RETIR,
GVT_CPDF_SCD_RIF
 !*********** Incident 1100365005 ********
)
VALUES
(
&job1.company,
$Str_AsOfDate,
&job1.emplid,
&job1.empl_rcd,
&job1.effdt,
&job1.effseq,
$agency_subelement,
$ssn,
&job1.effdt,
#effseq,
$gvt_deptid_cpdf,
$gvt_poi,
$gvt_cpdf_birth_dt,
$gvt_vet_pref_appt,
$gvt_tenure,
$gvt_cpdf_scd_dt,
$gvt_retire_plan,
$gvt_cred_mil_svce,
$gvt_csrs_frozn_svc,
$gvt_prev_ret_covrg,
$military_status,
$sex,
$ethnic_group,
$gvt_disability_cd,
$gvt_noa_code,
$gvt_noa_code_2,
$gvt_leg_auth_1,
$gvt_leg_auth_2,
$gvt_cpdf_ern_prog,
$gvt_occ_series,
$gvt_cpdf_grade,
$gvt_step,
$gvt_cpdf_basic_pay,
$gvt_pay_basis,
$gvt_work_sched,
$gvt_pay_rate_deter,
$gvt_posn_occupied,
$gvt_cpdf_supv_stat,
$gvt_cpdf_location,
$gvt_curr_apt_auth1,
$gvt_curr_apt_auth2,
$review_rating,
$gvt_cpdf_revw_ptrn,
$gvt_cpdf_rev_prd,
$gvt_award_group,
$gvt_cpdf_award_amt,
$gvt_cpdf_ben_amt,
$gvt_cpdf_name,
$gvt_cpdf_ern_prog1,
$gvt_cpdf_occ_ser1,
$gvt_cpdf_grade1,
$gvt_cpdf_prev_step,
$gvt_cpdf_pr_pay,
$gvt_cpdf_pay_bas1,
$gvt_cpdf_work_sch1,
$gvt_cpdf_payrtdet1,
$gvt_cpdf_corr_noa,
$gvt_cpdf_cor_noadt,
$gvt_cpdf_corr_ssn,
$gvt_cpdf_pr_lcladj,
$gvt_cpdf_pr_dty_st,
$gvt_cpdf_lclty_pay,
$gvt_cpdf_stff_diff,
$gvt_cpdf_supv_diff,
$gvt_cpdf_ret_allw,
$gvt_cpdf_hi_ed_lvl,
$gvt_cpdf_inst_prog,
$gvt_cpdf_yr_of_deg,
 !*********** Incident 1100365005 ********
$gvt_cpdf_last_name,
$gvt_cpdf_first_name,
$gvt_cpdf_middle_name,
$gvt_cpdf_name_suffix,
$gvt_cpdf_descr,
$gvt_cpdf_goal_amt,
$gvt_cpdf_oth_hrs,
$gvt_cpdf_percent_of_award,
$gvt_cpdf_gvt_scd_retire,
$gvt_cpdf_cmpny_seniority_dt
 !*********** Incident 1100365005 ********
)
end-sql

add 1 to #total_written_count             ! Count all records written


end-procedure

begin-procedure Insert-CPDF-Record-Online

Let $Gvt_edit_id = '2'
#debugd Show 'WIP                       : '                  &jobf.GVT_STATUS_TYPE
#debugd Show 'SETID_DEPT                : '                  &JOB1.SETID_DEPT
#debugd Show 'COMPANY                   : '                  &job1.company
#debugd Show 'GVT_CPDF_RUN_DT           : '          $AsofDate
#debugd Show 'EMPLID                    : '                   &job1.emplid
#debugd Show 'EMPL_RCD                 : '                &job1.empl_rcd
#debugd Show 'EFFDT                     : '                    $Job_Effdt
#debugd Show 'EFFSEQ                    : '                   &job1.effseq
#debugd Show 'AGENCY_SUBELEMENT         : '        $agency_subelement
#debugd Show 'SSN                       : '                      &pers_nid.NATIONAL_ID
#debugd Show 'GVT_NOA_EFFDT             : '            $Job_Effdt
#debugd Show 'GVT_DEPTID_CPDF           : '          $gvt_deptid_cpdf
#debugd Show 'GVT_POI                   : '                  $gvt_poi
#debugd Show 'GVT_CPDF_BIRTH_DT         : '        $gvt_cpdf_birth_dt
#debugd Show 'GVT_VET_PREF_APPT         : '        $gvt_vet_pref_appt
#debugd Show 'GVT_TENURE                : '               $gvt_tenure
#debugd Show 'GVT_CPDF_SCD_DT           : '          $gvt_cpdf_scd_dt
#debugd Show 'GVT_RETIRE_PLAN           : '          $gvt_retire_plan
#debugd Show 'GVT_CRED_MIL_SVCE         : '        $gvt_cred_mil_svce
#debugd Show 'GVT_CSRS_FROZN_SVC        : '       $gvt_csrs_frozn_svc
#debugd Show 'GVT_PREV_RET_COVRG        : '       $gvt_prev_ret_covrg
#debugd Show 'MILITARY_STATUS           : '          $military_status
#debugd Show 'SEX                       : '                      $sex
#debugd Show 'ETHNIC_GROUP              : '             $ethnic_group
#debugd Show 'GVT_DISABILITY_CD         : '        $gvt_disability_cd
#debugd Show 'GVT_NOA_CODE              : '             $gvt_noa_code
#debugd Show 'GVT_NOA_CODE_2            : '           $gvt_noa_code_2
#debugd Show 'GVT_LEG_AUTH_1            : '           $gvt_leg_auth_1
#debugd Show 'GVT_LEG_AUTH_2            : '           $gvt_leg_auth_2
#debugd Show 'GVT_CPDF_ERN_PROG         : '        $gvt_cpdf_ern_prog
#debugd Show 'GVT_OCC_SERIES            : '           $gvt_occ_series
#debugd Show 'GVT_CPDF_GRADE            : '           $gvt_cpdf_grade
#debugd Show 'GVT_STEP                  : '                 $gvt_step
#debugd Show 'GVT_CPDF_BASIC_PAY        : '       $gvt_cpdf_basic_pay
#debugd Show 'GVT_PAY_BASIS             : '            $gvt_pay_basis
#debugd Show 'GVT_WORK_SCHED            : '           $gvt_work_sched
#debugd Show 'GVT_PAY_RATE_DETER        : '       $gvt_pay_rate_deter
#debugd Show 'GVT_POSN_OCCUPIED         : '        $gvt_posn_occupied
#debugd Show 'GVT_CPDF_SUPV_STAT        : '       $gvt_cpdf_supv_stat
#debugd Show 'GVT_CPDF_LOCATION         : '        $gvt_cpdf_location
#debugd Show 'GVT_CURR_APT_AUTH1        : '       $gvt_curr_apt_auth1
#debugd Show 'GVT_CURR_APT_AUTH2        : '       $gvt_curr_apt_auth2
#debugd Show 'REVIEW_RATING             : '            $review_rating
#debugd Show 'GVT_CPDF_REVW_PTRN        : '       $gvt_cpdf_revw_ptrn
#debugd Show 'GVT_CPDF_REV_PRD          : '         $gvt_cpdf_rev_prd
#debugd Show 'GVT_AWARD_GROUP           : '          $gvt_award_group
#debugd Show 'GVT_CPDF_AWARD_AMT        : '       $gvt_cpdf_award_amt
#debugd Show 'GVT_CPDF_BEN_AMT          : '         $gvt_cpdf_ben_amt
#debugd Show 'GVT_CPDF_NAME             : '            $gvt_cpdf_name
#debugd Show 'GVT_CPDF_ERN_PROG1        : '       $gvt_cpdf_ern_prog1
#debugd Show 'GVT_CPDF_OCC_SER1         : '        $gvt_cpdf_occ_ser1
#debugd Show 'GVT_CPDF_GRADE1           : '          $gvt_cpdf_grade1
#debugd Show 'GVT_CPDF_PREV_STEP        : '       $gvt_cpdf_prev_step
#debugd Show 'GVT_CPDF_PR_PAY           : '          $gvt_cpdf_pr_pay
#debugd Show 'GVT_CPDF_PAY_BAS1         : '        $gvt_cpdf_pay_bas1
#debugd Show 'GVT_CPDF_WORK_SCH1        : '       $gvt_cpdf_work_sch1
#debugd Show 'GVT_CPDF_PAYRTDET1        : '       $gvt_cpdf_payrtdet1
#debugd Show 'GVT_CPDF_CORR_NOA         : '        $gvt_cpdf_corr_noa
#debugd Show 'GVT_CPDF_COR_NOADT        : '       $gvt_cpdf_cor_noadt
#debugd Show 'GVT_CPDF_CORR_SSN         : '        $gvt_cpdf_corr_ssn
#debugd Show 'GVT_CPDF_PR_LCLADJ        : '       $gvt_cpdf_pr_lcladj
#debugd Show 'GVT_CPDF_PR_DTY_ST        : '       $gvt_cpdf_pr_dty_st
#debugd Show 'GVT_CPDF_LCLTY_PAY        : '       $gvt_cpdf_lclty_pay
#debugd Show 'GVT_CPDF_STFF_DIFF        : '       $gvt_cpdf_stff_diff
#debugd Show 'GVT_CPDF_SUPV_DIFF        : '       $gvt_cpdf_supv_diff
#debugd Show 'GVT_CPDF_RET_ALLW         : '        $gvt_cpdf_ret_allw
#debugd Show 'GVT_CPDF_HI_ED_LVL        : '       $gvt_cpdf_hi_ed_lvl
#debugd Show 'GVT_CPDF_INST_PROG        : '       $gvt_cpdf_inst_prog
#debugd Show 'GVT_CPDF_YR_OF_DEG        : '       $gvt_cpdf_yr_of_deg

begin-sql
INSERT INTO PS_GVT_CPDF_ONLINE
(
OPRID,
EMPLID,
EMPL_RCD,
EFFDT,
EFFSEQ,
GVT_EDIT_ID,
COMPANY,
GVT_CPDF_RUN_DT,
AGENCY_SUBELEMENT,
SSN,
GVT_NOA_EFFDT,
SEQUENCE_NBR,
GVT_DEPTID_CPDF,
GVT_POI,
GVT_CPDF_BIRTH_DT,
GVT_VET_PREF_APPT,
GVT_TENURE,
GVT_CPDF_SCD_DT,
GVT_RETIRE_PLAN,
GVT_CRED_MIL_SVCE,
GVT_CSRS_FROZN_SVC,
GVT_PREV_RET_COVRG,
MILITARY_STATUS,
SEX,
ETHNIC_GROUP,
GVT_DISABILITY_CD,
GVT_NOA_CODE,
GVT_NOA_CODE_2,
GVT_LEG_AUTH_1,
GVT_LEG_AUTH_2,
GVT_CPDF_ERN_PROG,
GVT_OCC_SERIES,
GVT_CPDF_GRADE,
GVT_STEP,
GVT_CPDF_BASIC_PAY,
GVT_PAY_BASIS,
GVT_WORK_SCHED,
GVT_PAY_RATE_DETER,
GVT_POSN_OCCUPIED,
GVT_CPDF_SUPV_STAT,
GVT_CPDF_LOCATION,
GVT_CURR_APT_AUTH1,
GVT_CURR_APT_AUTH2,
REVIEW_RATING,
GVT_CPDF_REVW_PTRN,
GVT_CPDF_REV_PRD,
GVT_AWARD_GROUP,
GVT_CPDF_AWARD_AMT,
GVT_CPDF_BEN_AMT,
GVT_CPDF_NAME,
GVT_CPDF_ERN_PROG1,
GVT_CPDF_OCC_SER1,
GVT_CPDF_GRADE1,
GVT_CPDF_PREV_STEP,
GVT_CPDF_PR_PAY,
GVT_CPDF_PAY_BAS1,
GVT_CPDF_WORK_SCH1,
GVT_CPDF_PAYRTDET1,
GVT_CPDF_CORR_NOA,
GVT_CPDF_COR_NOADT,
GVT_CPDF_CORR_SSN,
GVT_CPDF_PR_LCLADJ,
GVT_CPDF_PR_DTY_ST,
GVT_CPDF_LCLTY_PAY,
GVT_CPDF_STFF_DIFF,
GVT_CPDF_SUPV_DIFF,
GVT_CPDF_RET_ALLW,
GVT_CPDF_HI_ED_LVL,
GVT_CPDF_INST_PROG,
GVT_CPDF_YR_OF_DEG,
CITIZENSHIP_STATUS,
GVT_CPDF_RTNERNPRG,
GVT_CPDF_RTND_STEP,
SAL_ADMIN_PLAN,
GVT_CPDF_PAY_STAT,
GVT_FERS_COVERAGE,
GVT_FEGLI,
GVT_FUNC_CLASS,
FLSA_STATUS,
BARG_UNIT,
HEALTH_PLAN,
GVT_ANN_IND,
GVT_CPDF_RTND_GRD,
GVT_CPDF_LAST_NAME,      
GVT_CPDF_FIRST_NAM,
GVT_CPDF_MID_NAME,
GVT_CPDF_SUFFIX,
GVT_CPDF_POS_TITLE,
GVT_CPDF_GOAL_AMT,
GVT_CPDF_OTH_HRS,
GVT_CPDF_AWD_PRCNT,
GVT_CPDF_SCD_RETIR,
GVT_CPDF_SCD_RIF
)
VALUES
(
$Prcs_OprID,
&job1.emplid,
&job1.empl_rcd,
&job1.effdt,
&job1.effseq,
$Gvt_edit_id,
&job1.company,
$AsOfToday,
$agency_subelement,
$ssn,
&job1.effdt,
#effseq,
$gvt_deptid_cpdf,
$gvt_poi,
$gvt_cpdf_birth_dt,
$gvt_vet_pref_appt,
$gvt_tenure,
$gvt_cpdf_scd_dt,
$gvt_retire_plan,
$gvt_cred_mil_svce,
$gvt_csrs_frozn_svc,
$gvt_prev_ret_covrg,
$military_status,
$sex,
$ethnic_group,
$gvt_disability_cd,
$gvt_noa_code,
$gvt_noa_code_2,
$gvt_leg_auth_1,
$gvt_leg_auth_2,
$gvt_cpdf_ern_prog,
$gvt_occ_series,
$gvt_cpdf_grade,
$gvt_step,
$gvt_cpdf_basic_pay,
$gvt_pay_basis,
$gvt_work_sched,
$gvt_pay_rate_deter,
$gvt_posn_occupied,
$gvt_cpdf_supv_stat,
$gvt_cpdf_location,
$gvt_curr_apt_auth1,
$gvt_curr_apt_auth2,
$review_rating,
$gvt_cpdf_revw_ptrn,
$gvt_cpdf_rev_prd,
$gvt_award_group,
$gvt_cpdf_award_amt,
$gvt_cpdf_ben_amt,
$gvt_cpdf_name,
$gvt_cpdf_ern_prog1,
$gvt_cpdf_occ_ser1,
$gvt_cpdf_grade1,
$gvt_cpdf_prev_step,
$gvt_cpdf_pr_pay,
$gvt_cpdf_pay_bas1,
$gvt_cpdf_work_sch1,
$gvt_cpdf_payrtdet1,
$gvt_cpdf_corr_noa,
$gvt_cpdf_cor_noadt,
$gvt_cpdf_corr_ssn,
$gvt_cpdf_pr_lcladj,
$gvt_cpdf_pr_dty_st,
$gvt_cpdf_lclty_pay,
$gvt_cpdf_stff_diff,
$gvt_cpdf_supv_diff,
$gvt_cpdf_ret_allw,
$gvt_cpdf_hi_ed_lvl,
$gvt_cpdf_inst_prog,
$gvt_cpdf_yr_of_deg,
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
$gvt_cpdf_last_name,
$gvt_cpdf_first_name,
$gvt_cpdf_middle_name,
$gvt_cpdf_name_suffix,
$gvt_cpdf_descr,
$gvt_cpdf_goal_amt,
$gvt_cpdf_oth_hrs,
$gvt_cpdf_percent_of_award,
$gvt_cpdf_gvt_scd_retire,
$gvt_cpdf_cmpny_seniority_dt
)
end-sql

end-procedure


#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'curdttim.sqc'  !Routines to get current date/time
#Include 'datemath.sqc'  !Routines to perform math on dates
#include 'stdapi.sqc'    !Routine to update Run status
#Include 'fgrunctl.sqc'  !Get run control parameter values
#Include 'fggetval.sqc'  !Get values mask routines
#Include 'reset.sqc'     !Reset printer
#Include 'askftd.sqc'    !Input logic for User entered From and Thru Dates
#Include 'fghr019x.sqc'  !CPDF field format setup and lookup procedures
#include 'fghr019s.sqc'  !Procedures shared/common between Dynamic and Status processes
