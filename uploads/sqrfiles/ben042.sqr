!******************************************************
! Report Name: BEN042.SQR - Accounts Receivable Report
!******************************************************
!***********************************************************************
!                                                                      *
! Confidentiality Information:                                         *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/08/31:21:40:56                                 
!       $Release:  HR9                                                 
!      $Revision:  103                                                 
!                                                                      *
!***********************************************************************


#Include 'setenv.sqc'   !Set environment

Begin-Setup
  #Include 'ptpsl177.sqc'
End-Setup

#define col_plan_type          1
#define col_plan_type_dta      4
#define col_type_desc         12
#define col_ben_plan          34
#define col_plan_desc         48
#define col_cov_code          78
#define col_cov_code_dta      81
#define col_emplid            88
#define col_name             101
#define col_amt              134
#define col_post_date        147
#define col_detail_type      160


!************
Begin-Program
!************

  do Init-Report

  display 'Report Begin at ' noline
  do Display-time

  do Main-Report

  display 'Report Ended at ' noline
  do Display-time

  do Reset
  do StdAPI-Term

End-Program


!***************************
Begin-Procedure Init-Report
!***************************

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime

  do StdAPI-Init

  if ($PRCS_Process_Instance = '')
    do Ask-Values
  else
    do Get-Values
  end-if

  let #PlanTotal = 0
  let #Total_Amt = 0
  let #Excess_Total = 0

  let $ReportID    = 'BEN042'
  do Get-Report-Language
  let $ReportTitle  = $BEN042-REPORTTITLE
  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ' '

End-Procedure


!**************************
Begin-Procedure Ask-Values
!**************************

  do Ask-From-Thru-Date

End-Procedure


!**************************
Begin-Procedure Get-Values
!**************************

  do Select-Parameters
  do Get-From-Thru-Date

End-Procedure

!**********************************
! This procedure is used to read language-dependent text from the database.
!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from BEN042 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation('BEN1')

  do Get_Field_Information ('BEN042', 'REPORT_TITLE', $BEN042-REPORTTITLE,  #CW)
  do Get_Field_Information ('BEN042', 'TRANSACTION',  $BEN042-TRANSACTION,  #CW)
  do Get_Field_Information ('BEN042', 'PAID',         $BEN042-PAID,         #CW)
  do Get_Field_Information ('BEN042', 'POSTED',       $BEN042-POSTED,       #CW)
  do Get_Field_Information ('BEN042', 'TOT_L01',      $BEN042-TOT-L01,      #CW)
  do Get_Field_Information ('BEN042', 'TOT_L02',      $BEN042-TOT-L02,      #CW)
  do Get_Field_Information ('BEN042', 'TOT_L03',      $BEN042-TOT-L03,      #CW)
  do Get_Field_Information ('BEN042', 'TOT_L04',      $BEN042-TOT-L04,      #CW)
  do Get_Field_Information ('BEN042', 'TOT_L05',      $BEN042-TOT-L05,      #CW)


  do Get_Field_Information ('BEN1',   'EMPLOYEE',     $BEN1-EMPLOYEE,      #CW)
  do Get_Field_Information ('BEN1',   'ID',           $BEN1-ID,            #CW)
  do Get_Field_Information ('BEN1',   'PLAN',         $BEN1-PLAN,          #CW)
  do Get_Field_Information ('BEN1',   'COVERAGE',     $BEN1-COVERAGE,      #CW)
  do Get_Field_Information ('BEN1',   'BENEFIT',      $BEN1-BENEFIT,       #CW)
  do Get_Field_Information ('BEN1',   'DATE',         $BEN1-DATE,          #CW)
  do Get_Field_Information ('BEN1',   'TYPE',         $BEN1-TYPE,          #CW)
  do Get_Field_Information ('BEN1',   'CODE',         $BEN1-CODE,          #CW)
  do Get_Field_Information ('BEN1',   'AMT',          $BEN1-AMT,           #CW)
  do Get_Field_Information ('BEN1',   'NAME',         $BEN1-NAME,          #CW)
  do Get_Field_Information ('BEN1',   'DESCR',        $BEN1-DESCR,         #CW)
  do Get_Field_Information ('BEN1',   'PAYMENT',      $BEN1-PAYMENT,       #CW)
  do Get_Field_Information ('BEN1',   'CHARGE',       $BEN1-CHARGE,        #CW)
  do Get_Field_Information ('BEN1',   'PAYADJ',       $BEN1-PAYADJ,        #CW)
  do Get_Field_Information ('BEN1',   'CHGADJ',       $BEN1-CHGADJ,        #CW)
End-Procedure

!***************
Begin-Heading 6
!***************

#Include 'stdhtr08.sqc'

  print $BEN1-PLAN                (+3,{col_type_desc})
  print $BEN1-PLAN                (0,{col_plan_type})
  print $BEN1-BENEFIT             (0,{col_ben_plan})
  print $BEN1-COVERAGE            (0,{col_cov_code})
  print $BEN1-EMPLOYEE            (0,{col_emplid})
  print $BEN1-EMPLOYEE            (0,{col_name})
  print $BEN1-AMT                 (0,{col_amt})
  print $BEN1-DATE                (0,{col_post_date})
  print $BEN042-TRANSACTION       (0,{col_detail_type})

  print $BEN1-DESCR               (+1,{col_type_desc})
  print $BEN1-TYPE                (0,{col_plan_type})
  print $BEN1-PLAN                (0,{col_ben_plan})
  print $BEN1-DESCR               (0,{col_plan_desc})
  print $BEN1-CODE                (0,{col_cov_code})
  print $BEN1-ID                  (0,{col_emplid})
  print $BEN1-NAME                (0,{col_name})
  print $BEN042-PAID              (0,{col_amt})
  print $BEN042-POSTED            (0,{col_post_date})
  print $BEN1-TYPE                (0,{col_detail_type})

  print '='                       (+1,{col_plan_type},10) Fill
  print '='                       (0,{col_type_desc},19) Fill
  print '='                       (0,{col_ben_plan},11) Fill
  print '='                       (0,{col_plan_desc},24) Fill
  print '='                       (0,{col_cov_code},9) Fill
  print '='                       (0,{col_emplid},11) Fill
  print '='                       (0,{col_name},30) Fill
  print '='                       (0,{col_amt},12) Fill
  print '='                       (0,{col_post_date},12) Fill
  print '='                       (0,{col_detail_type},11) Fill    



End-Heading


!***************************
Begin-Procedure Main-Report
!***************************

Begin-Select
A.PLAN_TYPE () On-Break Print=Never
               Level=1
               Before=New-Plan-Type
               After=Print-Plan-Total
               Save=$Old_Plan_Type


A.BENEFIT_PLAN () On-Break Print=Never
               Level=2
               Before=New-Benefit
               After=Print-Benefit-Total
               Save=$Old_Benefit_Plan
A.COVRG_CD
A.DED_SLSTX_CLASS
A.EMPLID
B.PAY_AMT
B.PMT_ADJUST
B.POSTED_DATE
B.DETAIL_TYPE
B.EXCESS_CASH
C.NAME
Z.PERIOD_END_DT

    Add &B.Excess_Cash to #Total_Excess

    do Print-Details

FROM  PS_BEN_BI_CHG_VW    A,
      PS_BEN_BI_DETAIL    B,
      PS_PERSON_NAME      C,
      PS_BEN_BI_CALENDAR  Z


Where A.EMPLID = B.EMPLID
And   A.BILL_CHARGE_ID = B.BILL_CHARGE_ID
And   B.POSTED_DATE BETWEEN $FromDate and $ThruDate
And   B.BILL_PAY_ID <> 0
And   A.EMPLID = C.EMPLID
And   A.BILL_PER_CD = Z.BILL_PER_CD
Order By A.PLAN_TYPE,
         A.BENEFIT_PLAN
End-Select

Begin-Select
D.EXCESS_CASH

    Add &D.Excess_Cash to #Total_Excess

From  PS_BEN_BI_DETAIL D
Where D.DETAIL_TYPE = 'EXCS'
And   D.POSTED_DATE BETWEEN $FromDate and $ThruDate
End-Select

!--'Total Applied to Charges       '
  print $BEN042-TOT-L01       (+3,54,60)
  print #Total_Amt                        (0,{col_amt})  edit $$$$$$$9.99

!--'Open Credit Applied/Credited   '
  print $BEN042-TOT-L02       (+2,54,60)
  print #Total_Excess                     (0,{col_amt})  edit $$$$$$$9.99

  let #Cash_Recv = #Total_Amt + #Total_Excess
!--'Total Cash Received            '
  print $BEN042-TOT-L03       (+2,54,60)
  print #Cash_Recv                        (0,{col_amt})  edit $$$$$$$9.99

End-Procedure


!*****************************
Begin-Procedure New-Plan-Type
!*****************************

  move 'PLAN_TYPE' to $Fieldname
  move &A.Plan_Type to $Fieldvalue
  move &Z.Period_End_Dt to $AsOfDate
  do Read-Translate-Table
  move $XlatLongName to $Plan_Type_Desc

  print &A.Plan_Type                   (+3,{col_plan_type_dta})
  print $Plan_Type_Desc                (0,{col_type_desc},20)

End-Procedure


!********************************
Begin-Procedure Print-Plan-Total
!********************************

!--'Total Payment for Plan Type    '
  print $BEN042-TOT-L04                   (+2,{col_plan_type_dta},31)
  print $Old_Plan_Type                    (0,+2)
  print #plan_tot_amt                     (0,{col_amt})  edit $$$$$$$9.99
  move 0 to #plan_tot_amt

End-Procedure


!***************************
Begin-Procedure New-Benefit
!***************************

  if &A.Benefit_Plan <> ' '
    move &A.Benefit_Plan to $Benefit_Plan
    move &A.Plan_Type to $Plan_Type
    move &Z.Period_End_Dt to $AsOfDate
    do Get-Benefit-Name
    move $BenefitName to $Plan_Descr
  else
    move ' ' to $Plan_Descr
  end-if

  print &A.Benefit_Plan                  (+1,{col_ben_plan},12)
  print $Plan_Descr                       (0,{col_plan_desc},25)

End-Procedure


!***********************************
Begin-Procedure Print-Benefit-Total
!***********************************

!-- 'Total Payment for Benefit Plan '
  print $BEN042-TOT-L05                   (+2,{col_ben_plan},34)
  print $Old_Benefit_Plan                 (0,+2)
  print #benefit_tot_amt                  (0,{col_amt})  edit $$$$$$$9.99
  move 0 to #benefit_tot_amt
  print ' '                               (+1,1)

End-Procedure


!*****************************
Begin-Procedure Print-Details
!*****************************


! Initialize the Coverage Code Field being used for
! Coverage Code and Deduction Sales Tax Class display.
!
  move ' ' to $Covrg_Cd_fld


! Get Deduction Sales Tax Description if value exist.
!
  if &A.Ded_Slstx_Class <> ' ' and &A.Ded_Slstx_Class <> 'B'
      move 'DED_SLSTX_CLASS' to $Fieldname
      move &A.Ded_Slstx_Class to $Fieldvalue
      move &Z.Period_End_Dt to $AsOfDate
      do Read-Translate-Table
      move $XlatShortName to $Covrg_Cd_fld
  end-if


! Override the Deduction Sales Tax Description with the
! Coverage Code Value if Coverage Code exist.
!
  if &A.Covrg_Cd <> ' '
    move  &A.Covrg_Cd to $Covrg_Cd_fld
  end-if

  print $Covrg_Cd_fld                  (+1,{col_cov_code_dta},2)
  print &A.Emplid                      (0,{col_emplid},12)
  print &C.Name                        (0,{col_name},31)

  let #Payment = &B.Pay_Amt + &B.Pmt_Adjust
  print #Payment                       (0,{col_amt})   edit $$$$$$$9.99

  do Format-Datetime(&B.Posted_Date, $Out, {DEFDATE}, '', '')
  print '  '                           (0,{col_post_date})
  print $Out                           (0,0)

  let $TestVal = &B.Detail_Type
  evaluate $TestVal
    when = 'PMNT'
      let $Detail_Descr = $BEN1-PAYMENT
      break
    when = 'PADJ'
      let $Detail_Descr = $BEN1-PAYADJ
      break
    when = 'CADJ'
      let $Detail_Descr = $BEN1-CHGADJ
      break
  end-evaluate

  print $Detail_Descr                  (0,{col_detail_type},11)

  add #Payment to #plan_tot_amt
  add #Payment to #benefit_tot_amt
  add #Payment to #Total_Amt

End-Procedure


!****************************
Begin-Procedure Display-Time
!****************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure


!*****************************************************************************
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datemath.sqc'  !Date math routines
#Include 'datetime.sqc'  !Format-DateTime procedures
#Include 'benftd.sqc'    !Ask-From-Thru-Date procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'number.sqc'    !Format-Number procedure
#Include 'reset.sqc'     !Reset printer procedure
#include 'getbennm.sqc'  !Get-Benefit-Name procedure

#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
!******************************* End of Report *******************************
