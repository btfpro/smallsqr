!***********************************************************************
!  ABS004UK:      Bradford Score Report                                *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!
!          $Date:  2006/07/19:11:00:04                                 
!       $Release:  HR9                                                 
!      $Revision:  102                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment

Begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup


begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


begin-heading 7
  #Include 'stdhdg08.sqc'

  if $PrtDetReg = 'N'
    print 'Regulatory Region :'        (+1,55,19)
    print $RegRegion                   (0,+1,5)
  end-if

  print 'Department'                 (+2,1,13)
  print 'Employee Name'              (0,15,24)
  print 'ID'                         (0,40,9)
  print 'Empl'                       (0,50,4)
  print 'Job Title'                  (0,55,14)
  print 'Total Number'               (0,70,14)
  print 'Total Number'               (0,85,14)
  print 'Bradford Score'             (0,100,14)
  if $PrtDetReg = 'Y'
    print 'Regulatory'               (0,118,10)
  end-if

  print 'Type'                       (+1,50,19)
  print 'of Absences '               (0,70,14)
  print 'of (Days)'                  (0,85)
  if $PrtDetReg = 'Y'
    print 'Region'                   (0,118,6)
  end-if

end-heading

begin-procedure Init-Report
  move 'ABS004' to $ReportID
  move 'Bradford Score' to $ReportTitle
  display $ReportTitle

  do Stdapi-Init

  if $prcs_process_instance = ''
    do Ask-From-Thru-Date
    do Ask-Reg-Region
  else
    do Select-Parameters
  end-if

  do Format-$Where

end-procedure

begin-procedure Get-Values

   do Get-From-Thru-Date
   let $RegRegion = RTRIM(&RUN_CNTL_HR.REG_REGION, ' ')

end-procedure

!-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
begin-procedure Process-Main
Begin-SELECT
B.DEPTNAME_ABBRV      (+1,1,13)  on-break level=1  skiplines=1
B.NAME                (0,15,24)  on-break level=2  skiplines=1
B.EMPLID              (0,40,9)   on-break level=2
B.EMPL_TYPE           (0,50,4)   on-break level=2
B.JOBTITLE_ABBRV      (0,55,14)  on-break level=2
COUNT(*)        &Absence  (0,70,14)
                add &Absence to #AbsenceCnt
SUM(A.DURATION_DAYS)        &DurationDays (0,85,14)
                            add &DurationDays  to #DurationCnt
                            do Get-BradfordCount
C.REG_REGION
                          if $PrtDetReg = 'Y'
                            print &C.REG_REGION (0,118,5)
                          end-if

FROM
        PS_EMPLOYEES B, PS_ABSENCE_HIST A,
        PS_JOB C,       PS_ABS_TYPE_TBL D
WHERE   A.BEGIN_DT >= $FromDate
        AND A.BEGIN_DT <= $Thrudate
        AND A.EMPLID    = B.EMPLID
        AND C.EMPLID = A.EMPLID
        AND C.EMPL_RCD = A.EMPL_RCD
!****************Begin Incident 1301589001************* 
    AND B.EMPL_RCD = C.EMPL_RCD
!****************End Incident 1301589001*************        
        AND C.EFFDT = (SELECT MAX(E.EFFDT)
                       FROM PS_JOB E
                       WHERE A.EMPLID = E.EMPLID AND A.EMPL_RCD = E.EMPL_RCD
                       AND E.EFFDT <= A.BEGIN_DT)
        AND D.ABSENCE_TYPE=A.ABSENCE_TYPE
        AND  D.SETID = (SELECT SETID
              FROM PS_SET_CNTRL_REC
              WHERE SETCNTRLVALUE = C.REG_REGION
              AND  RECNAME = 'ABS_TYPE_TBL')
        AND B.COUNTRY = 'GBR'
        [$Where-RegRegion]


GROUP BY B.DEPTNAME_ABBRV,B.NAME,B.EMPLID,B.EMPL_TYPE,B.JOBTITLE_ABBRV,C.REG_REGION
ORDER BY B.DEPTNAME_ABBRV,B.NAME,B.EMPLID

End-SELECT

end-procedure Process-Main
!-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-


begin-procedure Get-BradfordCount
 let #Bradford= #AbsenceCnt * #AbsenceCnt * #DurationCnt
 let $Bradford= to_char(#Bradford)
 print $Bradford (0,100)

 move 0 to #AbsenceCnt
 move 0 to #DurationCnt
 move 0 to  #Bradford
end-procedure Get-BradfordCount

begin-procedure Ask-Reg-Region
  let $blankStr = ' '
  display ' '
  display 'Please enter a Regulatory Region'
  display ' '
  input $ReRegion maxlen=5 type=char 'Please enter a Regulatory Region'
  uppercase $ReRegion
  display ' '
end-procedure Ask-Reg-Region


!---------- Format the main Where Clause -------------!
begin-procedure Format-$Where

let $Where-RegRegion = ''

if $RegRegion <> ''
   let $Where-RegRegion = ' and B.REG_REGION = ''' || $RegRegion || ''''
   let $PrtDetReg = 'N'
else
   let $PrtDetReg = 'Y'
end-if

end-procedure Format-$Where



!*******************************************************************

#include 'stdapi.sqc'    !Routine to update run status
#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askftd.sqc'    !From Thru Date input

#Include 'readxlat.sqc'  !Read Translate Table procedure
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
