!***********************************************************************
!  TRN030:  Training Plan Report                                       *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:44:53                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!
!                                                                      *
!***********************************************************************
!                                                                      *
! This SQR allow to print the Training Plan for a given Budget Period  *
! and Business Unit.                                                   *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#include 'setup31.sqc'   !Printer and page-size initialization

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
!--ADDED FOR FIX 302027 STARTS
  do Find-Date-Format
!--ADDED FOR FIX 302027 ENDS
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-Heading 7

do Get_Field_Information ('TRN030',     'REPORT_TITLE',       $REPORTTITLE,     #DW)
do Get_Field_Information ('TRN030',     'BUDGET_PERIOD',      $BUDGETPERIODTXT,     #DW)
do Get_Field_Information ('TRN030',     'BASE_CURRENCY',      $BASECURRENCYTXT,     #DW)
do Get_Field_Information ('TRN030',     'APPROVED',           $APPROVEDTXT,     #DW)
do Get_Field_Information ('TRN030',     'COST',               $COSTTXT,     #DW)
do Get_Field_Information ('TRN030',     'COURSE',             $COURSETXT,     #DW)
do Get_Field_Information ('TRN030',     'DURATION',           $DURATIONTXT,     #DW)
do Get_Field_Information ('TRN030',     'BUSINESS_UNIT',      $BUSUNITTXT,     #DW)
!--COMMENTED FOR FIX 302027 STARTS
!  #Include 'stdhdgtr.sqc'
!--COMMENTED FOR FIX 302027 ENDS
!--ADDED FOR FIX 302027 STARTS
  do Append_Report_Translation ('STDHDGTR')
  if $Program_Read = 'Y'
    do Get_Field_Information ('STDHDGTR', 'STDHDG_CO_NM',   $stdhdg_co_nm,   #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_REP_ID',  $stdhdg_rep_id,  #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_PAGE_NO', $stdhdg_page_no, #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_RUN_DT',  $stdhdg_run_dt,  #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_RUN_TM',  $stdhdg_run_tm,  #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_END_REP', $stdhdg_end_rep, #dummy_width)
  end-if

  print '            '    (1,1)
  print $stdhdg_co_nm     ()          center
  print $stdhdg_rep_id    (+1,1)
  print $ReportID         (0,+2)
!***********************************************************************
! T-MBOWDEN-5: not to uppercase due to languages other than English    *
!***********************************************************************
! uppercase $ReportTitle                                               *
  print $ReportTitle      ()          center
  let #RptCol = {ColR} - 2
  print $stdhdg_page_no   (0,#RptCol)
  print #page-count       (0,+2)      edit 88888888
  print $stdhdg_run_dt    (+1,#RptCol)
  let $RepDate = StrToDate($ReportDate,{PTRPTDATE})
    evaluate $DT_FMT
     when = 'M'
          do Format-DateTime($RepDate,$Rep_dt,{DEFMDY},'','')
          break
     when = 'D'
          do Format-DateTime($RepDate,$Rep_dt,{DEFDMY},'','')
          break
     when-Other
          do Format-DateTime($RepDate,$Rep_dt,{DEFYMD},'','')
          break
     end-evaluate
  print $Rep_dt           (0,+1) 
  print $stdhdg_run_tm    (+1,#RptCol)
  print $ReportTime       (0,+1)
!--ADDED FOR FIX 302027 ENDS
  let $BudgetBusUnit = upper($BudgetBusUnit)
  let $REPORTTITLE = upper($REPORTTITLE)
  let $BUSUNITTXT = rtrim($BUSUNITTXT,' ') || ':'
  let $BUDGETPERIODTXT = rtrim($BUDGETPERIODTXT,' ') || ':'
  let $BASECURRENCYTXT = rtrim($BASECURRENCYTXT,' ') || ':'
  print $BUDGETPERIODTXT (+1, 2)
  print $BudgetPeriod    (, +2)
  print $BUSUNITTXT      (, +4)
  print $BudgetBusUnit   (, +2)
  print $BASECURRENCYTXT (, +4)
  print $ReportCurr      (, +2)

  print $COURSETXT       (+2, 2)
  print $COSTTXT         (, 57)
  print $APPROVEDTXT     (, 62)
  print $DURATIONTXT     (, 72)
  print '-'              (+1, 1, 108) fill
end-Heading


begin-procedure Init-Report
  move 'TRN030' to $ReportID
  move 'W' to $ReportMsgType  !Warning
  move 'Y' to $ReadyForPlan
  print ' ' (1,40)

! Process Scheduler setup
  do Stdapi-Init
  if $prcs_process_instance = ''
    !No Prompt
  else
     do Select-Parameters
  end-if

  do Init_Printer
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')

end-procedure

!--ADDED FOR FIX 302027 STARTS
begin-procedure Find-Date-Format

let $REC_FOUND = 'N'
begin-SELECT
A.USER_OPTION_VALUE
  let $REC_FOUND = 'Y'
FROM PSUSERPRSNLOPTN A

WHERE A.OPRID = $prcs_oprid
  AND A.USEROPTN = 'DFRMT'
end-SELECT

IF $REC_FOUND = 'N'
  let $DT_FMT = 'M'
ELSE
  LET $DT_FMT = &A.USER_OPTION_VALUE
  LET $DT_FMT = RTRIM($DT_FMT,' ')
END-If
 
end-procedure !Find-Date-Format
!--ADDED FOR FIX 302027 ENDS

begin-procedure Get-Values
  let $language_cd = $prcs_language_cd
  do Get-As-Of-Date
  do Get-TRN010-Param
end-procedure


begin-procedure Process-Main

  do Print-Training-Plan

end-procedure


!***********************************************************************
! Print-Training-Plan                                                  *
!***********************************************************************

begin-procedure Print-Training-Plan
DISPLAY 'PRINT-TRAINING-PLAN'
let $sql-statement = 'TRN030.SQR,Print-Training-Plan,Delete,PS_TRN_SIMULATION'

! Base Currency
begin-SELECT
BASE_CURRENCY  &BaseCurr
  move &BaseCurr to $BaseCurrency
CUR_RT_TYPE    &BaseRtType
  move &BaseRtType to $ReportRtType
FROM PS_TRN_BASE_CUR
end-SELECT

! Business Unit Currency
begin-SELECT
BASE_CURRENCY  &ReportCurr
  move &ReportCurr to $ReportCurr
FROM PS_BUDGET_BUS_UNIT
WHERE BUDGET_PERIOD = $BudgetPeriod
AND BUSINESS_UNIT = $BudgetBusUnit
end-SELECT

begin-SELECT
EFFDT &BaseEffDt
FROM PS_BUDGET_PERIOD
WHERE BUDGET_PERIOD = $BudgetPeriod
end-SELECT
let $BaseEffDt = &BaseEffDt

let #course-cost = 0
let #course-duration = 0
let #course-approved = 0
let $previous-course = ''
begin-SELECT
A.BUDGET_PERIOD
A.BUSINESS_UNIT
A.COURSE
A.DEMAND_ID
A.DEPTID
A.DEMAND_APPROVED
  move &A.DEMAND_APPROVED to #DemandApproved
  do Compute-Course-Info
FROM PS_TRN_APR_CRSE_VW A
WHERE A.BUDGET_PERIOD = $BudgetPeriod
AND A.BUSINESS_UNIT = $BudgetBusUnit
ORDER BY COURSE
end-SELECT
  do Print-course-info
end-procedure

!***********************************************************************
! Compute-Course-Info                                                  *
!***********************************************************************

begin-procedure Compute-Course-Info
DISPLAY 'COMPUTE-COURSE-INFO'

begin-SELECT
B.VARIABLE_COST
B.FIXED_COST
  let #Cost = &B.VARIABLE_COST * #DemandApproved + &B.FIXED_COST
  if $ReportCurr <> $BaseCurrency
    do ConvertCurrency(#Cost,$BaseCurrency,$ReportCurr,$ReportRtType,$BaseEffDt,#Cost,$MsgType)
  end-if
FROM PS_TRN_SML_SUM_VW B
WHERE B.BUDGET_PERIOD = &A.BUDGET_PERIOD
AND B.BUSINESS_UNIT = &A.BUSINESS_UNIT
AND B.DEMAND_ID = &A.DEMAND_ID
end-SELECT

begin-SELECT
C.DESCR
C.DURATION_CONVERTED
 move &C.DURATION_CONVERTED to #DurationConverted
FROM PS_COURSE_TBL C
WHERE C.COURSE = &A.COURSE
end-SELECT

if $previous-course = &A.COURSE
   let #course-cost = #course-cost + #Cost
   let #course-duration = #course-duration + (#DurationConverted * #DemandApproved)
   let #course-approved = #course-approved + #DemandApproved
else
   if $previous-course <> ''
     do Print-course-info
   end-if
   let #course-cost = #Cost
   let #course-duration = (#DurationConverted * #DemandApproved)
   let #course-approved = #DemandApproved
end-if
let $previous-course = &A.COURSE
let $previous-descr = &C.DESCR

end-procedure


!***********************************************************************
! Print-Course-Info                                                    *
!***********************************************************************

begin-procedure Print-Course-Info
DISPLAY 'PRINT-COURSE-INFO'
   print $previous-course (+1, 2)
   print $previous-descr  (, 10)
   print #course-cost (, 42) edit 999999999999999.999
   print #course-approved (, 64) edit 999999
   !----------  Fix for 158088 Starts
   print #course-duration (, 72) edit 999999.9
   !----------  Fix for 158088 Ends
end-procedure


#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines

#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'

