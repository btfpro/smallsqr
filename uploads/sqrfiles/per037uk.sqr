!***********************************************************************
!  PER037UK: Detailed breakdown of manpower by department and jobcode. *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2006/07/19:14:39:56                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
!                                                                      *
! Detailed breakdown of manpower by department and jobcode.            *
! Tables Referenced:                                                   *
!    PS_PERSONAL_DT_FST                                                *
!    PS_JOB                                                            *
!    PS_DEPT_TBL                                                       *
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup
#define COLJ 16
#define COL1 25
#define COL2 37
#define COL3 49
#define COL4 60
#define COL5 72
#define COL6 84
#define COL7 95

begin-report
   do Init-DateTime
   do Init-Number
   do Get-Current-DateTime
   do Init-Report
   do Process-Main
   do Reset
   do Stdapi-Term
end-report

begin-procedure Init-Report
   move 'PER037UK' to $ReportID
   move 'Joint Staffing Report' to $ReportTitle
   display $ReportTitle

   do Stdapi-Init

   if $prcs_process_instance = ''
      do Ask-As-Of-date
   else
      do Select-Parameters
   end-if

   do Init_Printer

end-procedure

begin-procedure Get-Values
  do Get-As-Of-Date
end-procedure


begin-heading 9
#include 'stdhtr03.sqc'
   print '---------- Full Time ----------' (+2,{COL1},34)
   print '---------- Part Time ----------' (0, {COL4},34)
   print '- Total -'                       (0, {COL7})
   print 'Male'                            (+1,{COL1},11)! + 1)
   print 'Female'                          (0, {COL2},11)! + 1)
   print 'Total'                           (0, {COL3},10)! + 1)
   print 'Male'                            (0, {COL4},11)! + 1)
   print 'Female'                          (0, {COL5},10)! + 1)
   print 'Total'                           (0, {COL6})! + 1)
end-heading


!***********************************************************************
! Function:    Process-Main                                            *
! Description:  The main control subroutine.                           *
!***********************************************************************
begin-procedure Process-Main

   do ResetGrandTotals
   do InitialiseVars
   do GetJobData
   do OutputGrandTotals

end-procedure


!***********************************************************************
! Function:    ResetGrandTotals                                        *
! Description:  Clear Grand totals                                     *
!***********************************************************************
begin-procedure ResetGrandTotals

   let #grand_m_full = 0
   let #grand_f_full = 0
   let #grand_m_part = 0
   let #grand_f_part = 0

end-procedure


!***********************************************************************
! Function:    InitialiseVars                                          *
! Description:  Clear variables used for sum, re-initialise counter    *
!***********************************************************************
begin-procedure InitialiseVars

    let #sub_m_full = 0
    let #sub_f_full = 0
    let #sub_m_part = 0
    let #sub_f_part = 0
    let #sub_t_full = 0
    let #sub_t_part = 0
    let #malesfull  = 0
    let #malespart  = 0
    let #femsfull   = 0
    let #femspart   = 0
    let #count      = 0

end-procedure


!***********************************************************************
! Function:    GetJobData                                              *
! Description:  Retrieve columns from tables based on effective date.  *
!***********************************************************************
begin-procedure GetJobData

begin-SELECT
   let #count = #count + 1
A.EMPLID
A.JOBCODE
A.EFFDT
A.FULL_PART_TIME
A.DEPTID
C.DESCR
B.SEX
   do DetectChange
FROM PS_JOB A, PS_PERSONAL_DT_FST B, PS_DEPT_TBL C
WHERE A.EMPLID = B.EMPLID
  AND A.DEPTID = C.DEPTID
  AND A.EFFDT  = ( SELECT MAX(EFFDT)
                   FROM PS_JOB B
                   WHERE B.EMPLID = A.EMPLID
                     AND B.EFFDT <= $AsOfDate )
ORDER BY A.DEPTID, A.JOBCODE, A.FULL_PART_TIME, B.SEX

end-SELECT

   do OutputJobTotals
   do CalculateSubtotals
   do OutputDeptTotals
   do CalculateGrandTotals

end-procedure


!***********************************************************************
! Function:     DetectChange                                           *
! Description:  This function detects if there is a change in the      *
!              department or jobcode and calculates and outputs        *
!              information accordingly                                 *
!***********************************************************************
begin-procedure DetectChange

   if #count = 1                       ! if first time script run then
      let $currdept = &a.deptid
           let $currjob  = &a.jobcode
           print &c.descr (+2,1)
           do CalculateJobcodeTotals
   else
      if $currdept = &a.deptid         ! if department the same
         if $currjob = &a.jobcode      ! if job the same then
            do CalculateJobcodeTotals  ! add counts
         else
            do CalculateSubtotals
            do OutputJobTotals         ! output one line (job data)
            do ClearJobcodeTotals      ! reinitialise the male/fem counts
            do CalculateJobcodeTotals
         end-if
      else                             ! if department not same
         do OutputJobTotals            ! output one line (job data)
         do CalculateSubtotals
         do OutputDeptTotals           ! output subtotals
         do CalculateGrandTotals
         do InitialiseVars             ! initialise all variables

         let $currdept = &a.deptid
         let $currjob  = &a.jobcode
         print &c.descr (+2,1)
         do CalculateJobcodeTotals
         let #count = 1
      end-if
   end-if

end-procedure


!***********************************************************************
! Function:     CalculateJobcodeTotals                                 *
! Description:  Update counts depending on numbers of F/T, P/T, Male   *
!              and Female numbers in the columns                       *
!***********************************************************************
begin-procedure CalculateJobcodeTotals

   if &a.full_part_time = 'F'
           if &b.sex = 'M'
         let #malesfull = #malesfull + 1
      else
         let #femsfull = #femsfull + 1
      end-if
   else
           if &b.sex = 'M'
         let #malespart = #malespart + 1
      else
         let #femspart = #femspart + 1
      end-if
   end-if

end-procedure


!***********************************************************************
! Function:     OutputJobTotals                                        *
! Description:  Outputs jobcode breakdown                              *
!***********************************************************************
begin-procedure OutputJobTotals

   print $currjob   (+1,{COLJ},8)
   print #malesfull (0,{COL1},11) edit 999,999
   print #femsfull  (0,{COL2},11) edit 999,999

   let #fulltot = #malesfull + #femsfull
   print #fulltot   (0,{COL3},10) edit 999,999

   print #malespart (0,{COL4},11) edit 999,999
   print #femspart  (0,{COL5},11) edit 999,999

   let #parttot = #malespart + #femspart
   print #parttot   (0,{COL6},10) edit 999,999

   let #total = #fulltot + #parttot
   print #total     (0,{COL7}) edit 999,999

end-procedure


!***********************************************************************
! Function:     OutputDeptTotals                                       *
! Description:  Output department Subtotals                            *
!***********************************************************************
begin-procedure OutputDeptTotals

   print '--------'    (+1,{COL1},11)
   print '--------'    (0,{COL2},11)
   print '--------'    (0,{COL3},10)
   print '--------'    (0,{COL4},11)
   print '--------'    (0,{COL5},11)
   print '--------'    (0,{COL6},10)
   print '--------'    (0,{COL7})

   print 'Sub Total'   (+1,9,16)
   print #sub_m_full   (0,{COL1},11) edit 999,999
   print #sub_f_full   (0,{COL2},11) edit 999,999

   let #sub_t_full = #sub_m_full + #sub_f_full
   print #sub_t_full   (0,{COL3},10) edit 999,999

   print #sub_m_part   (0,{COL4},11) edit 999,999
   print #sub_f_part   (0,{COL5},11) edit 999,999

   let #sub_t_part = #sub_m_part + #sub_f_part
   print #sub_t_part   (0,{COL6},10) edit 999,999

   let #total = #sub_t_full + #sub_t_part
   print #total        (0,{COL7}) edit 999,999

end-procedure


!***********************************************************************
! Function:     ClearJobcodeTotals                                     *
! Description:  Clears the count variables used for the Jobcode        *
!***********************************************************************
begin-procedure ClearJobcodeTotals

   let #malesfull = 0
   let #malespart = 0
   let #femsfull  = 0
   let #femspart  = 0
   let $currjob   = &a.jobcode

end-procedure


!***********************************************************************
! Function:     CalculateSubtotals                                     *
! Description:  Calculate Subtotals for Department                     *
!***********************************************************************
begin-procedure CalculateSubtotals

   let #sub_m_full = #sub_m_full + #malesfull
   let #sub_f_full = #sub_f_full + #femsfull
   let #sub_m_part = #sub_m_part + #malespart
   let #sub_f_part = #sub_f_part + #femspart

end-procedure


!***********************************************************************
! Function:     CalculateGrandTotals                                   *
! Description:  Calculate Grandtotal                                   *
!***********************************************************************
begin-procedure CalculateGrandTotals

   let #grand_m_full = #grand_m_full + #sub_m_full
   let #grand_f_full = #grand_f_full + #sub_f_full
   let #grand_m_part = #grand_m_part + #sub_m_part
   let #grand_f_part = #grand_f_part + #sub_f_part

end-procedure


!***********************************************************************
! Function:     OutputGrandTotals                                      *
! Description:  Output Grand totals                                    *
!***********************************************************************
begin-procedure OutputGrandTotals

   print '========'     (+2,{COL1},11)
   print '========'     (0, {COL2},11)
   print '========'     (0, {COL3},10)
   print '========'     (0, {COL4},11)
   print '========'     (0, {COL5},11)
   print '========'     (0, {COL6},10)
   print '========'     (0, {COL7})

   print 'Grand Total'  (+1,9)
   print #grand_m_full  (0,{COL1},11) edit 999,999
   print #grand_f_full  (0,{COL2},11) edit 999,999

   let #grand_t_full = #grand_m_full + #grand_f_full
   print #grand_t_full  (0,{COL3},10) edit 999,999

   print #grand_m_part  (0,{COL4},11) edit 999,999
   print #grand_f_part  (0,{COL5},11) edit 999,999

   let #grand_t_part = #grand_m_part + #grand_f_part
   print #grand_t_part  (0,{COL6},10) edit 999,999

   let #grandtotal = #grand_t_full + #grand_t_part
   print #grandtotal    (0,{COL7}) edit 999,999

end-procedure OutputGrandTotals

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askaod.sqc'    !Ask As Of Date input

#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'

