!***********************************************************************
!  TAX922US:  Create W-2c MMREF-2 Files - U.S.                         *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/10/23:13:27:07                                 !
!       $Release:  HR9                                                 !
!      $Revision:  103                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment

begin-setup
#include 'setupdb.sqc'
end-setup

begin-report

  do Init-Report
  do Stdapi-Term
end-report


begin-procedure Init-Report

  move 'TAX922US' to $ReportID
  move 'W' to $Taxform_ID
  move 'Y' to $FileNotOpen
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Initialization
  do Assign-Year-End-Variables

  Let $NotMMREF1 = 'Box ' || $YE_Sick_Pay || ' Sick Pay'
  Let $NotMMREF2 = 'Box ' || $YE_Excise_Tax  || ' Excise Tax'
  Let $NotMMREF3 = 'Box ' || $YE_Business_Exp  || ' Business Exp'
  Let $NotMMREF4 = 'Box ' || $YE_Excl_Moving_Exp  || ' Excl Moving Exp'

  display ''
  display 'Writing W-2c in MMREF-2 format'
  date-time () hh:mi:ss &t1
  display &t1
  display ' '
  display 'Please note that the following boxes '
  display 'are not MMREF reportable: '
  display $NotMMREF1
  display $NotMMREF2
  display $NotMMREF3
  display $NotMMREF4
  display ' '

  do Get-MMREF-Data

  do Read-Employee-Data

  if $FileNotOpen = 'N'
    do Write-RCF-Record
  end-if

  if $FileNotOpen = 'Y'
    display ' '
    display ' No MMREF-2 file created.  No Federal data to report'
    display ' '
  else
    display ' '
    if $EmployeeFound = 'N'
      display ' '
      display '****** No Employee Records Selected ******'
      display ' '
    else
      display ''
      display 'TAX922US contains the W-2c data in MMREF-2 format.'
      display ''
      display '** NOTE: If you wish to save these files, rename them before'
      display '**       running this process again.'
      display ''
    end-if
  end-if

  if $EmployeeFound = 'Y'
    do Update-W2C-Parameters
  end-if

  do Close-File

  date-time () hh:mi:ss &t2
  display &t2
end-procedure


begin-procedure Initialization

  do Get-Tax-Reporting-Run-Controls
  move &TX.BALANCE_YEAR  to $CalYear 9999
  move &TX.BALANCE_YEAR  to #BALANCE_YEAR
  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

end-procedure


begin-procedure Read-Employee-Data

  move 'N' to $EmployeeFound

begin-SELECT
E.COMPANY          () ON-BREAK LEVEL=1 PRINT=NEVER BEFORE=BEFORE-COMPANY
                                                   AFTER=After-Company
E.W2C_ADD_EMPLID   () ON-BREAK LEVEL=2 PRINT=NEVER BEFORE=BEFORE-EMPLID
E.W2C_BATCH_NBR
E.W2C_SSN
E.W2C_FNAME
E.W2C_MIDDLE_NAME
E.W2C_LNAME
E.W2C_SUFFIX
E.ADDRESS1
E.ADDRESS2
E.CITY
E.STATE
E.POSTAL
E.COUNTRY
E.STATUTORY_EE
E.PENSION_PLAN
E.THIRDPARTY_SICKPAY
E.PRV_SSN
E.PRV_YE_FNAME
E.PRV_YE_MIDDLE_NAME
E.PRV_YE_LNAME
E.PRV_YE_SUFFIX
E.PRV_ADDRESS1
E.PRV_ADDRESS2
E.PRV_CITY
E.PRV_STATE
E.PRV_POSTAL
E.PRV_COUNTRY
E.PRV_STATUTORY_EE
E.PRV_PENSION_PLAN
E.PRV_THIRDPARTYSICK
E.CALENDAR_YEAR

  move 'Y' to $EmployeeFound

  if $FileNotOpen = 'N'
     do Load-Amounts

     do Populate-Required
     do Populate-Previous

     do Employee-Address
  end-if

  if $W-Flag = 'Y' or $O-Flag = 'Y'
    do Write-RCW-Record
  end-if
  if $O-Flag = 'Y'
    do Write-RCO-Record
  end-if

FROM  PS_YE_W2C_DATA E
  WHERE E.W2C_STATUS       = 'C'
  AND E.W2C_TAXFORM_ID     = 'W'
  AND E.MMREF_WRITTEN      = 'N'
  AND E.CALENDAR_YEAR      = &TX.BALANCE_YEAR
ORDER BY E.COMPANY, E.W2C_SSN, E.W2C_BATCH_NBR
end-SELECT
end-procedure


begin-procedure Before-Company

begin-SELECT
A.COMPANY
A.W2_REPORTING_CO
A.DESCR
A.FEDERAL_EIN
A.ADDRESS1
A.ADDRESS2
A.CITY
A.STATE
A.POSTAL
A.COUNTRY
A.TAXFORM_ID

  move &A.Federal_EIN     to $Federal_EIN 099999999
  let  $A.Company         =  RTRIM(&A.Company,' ')
  move &A.Descr           to $A.Descr
  move &A.Address1        to $A.Address1
  move &A.Address2        to $A.Address2
  move &A.Country         to $A.Country
  let  $A.City            =  RTRIM(&A.City,' ')
  let  $A.State           =  RTRIM(&A.State,' ')
  move &A.POSTAL          to $A.Postal

  UPPERCASE $A.Descr
  UPPERCASE $A.Address1
  UPPERCASE $A.Address2
  UPPERCASE $A.Country
  UPPERCASE $A.City

  let  $StateCd = rtrim(&A.State, ' ')
  move &A.Postal       to $Zip
  move &A.Country      to $Country
  do Foreign-Address-Test('Format 3',25)

  If $ForeignAddrInd = 'X'
     Let $A.US_Zip      = ' '
     Let $A.US_ZipXtnsn = ' '
     Let $A.US_State    = ' '
     Let $A.Frgn_Zip    = $Zip
     Let $A.Frgn_State  = $StateName
  Else
     Let $A.US_Zip      = $Zip
     Let $A.US_ZipXtnsn = $ZipExtsn
     Let $A.US_State    = $StateCd
     Let $A.Frgn_Zip    = ' '
     Let $A.Frgn_State  = ' '
     Let $A.Country-2Char   = ' '
  End-if

  if $T-Flag = 'Y'
    do Write-RCT-Record
  end-if
  if $U-Flag = 'Y'
    do Write-RCU-Record
  end-if

  do Check-For-Reportable-Data

  if $FileNotOpen = 'Y'
     if $Process-RCE-Record = 'Y'
       do Open-File
       do Write-Transmitter-Record
     end-if
  end-if

  if $Process-RCE-Record = 'Y'
      do Write-RCE-Record
      let $Process-RCE-Record = 'N'
  end-if

FROM  PS_W2_COMPANY A
WHERE A.COMPANY  = &E.COMPANY
  AND A.W2_REPORTING_CO <> ' '
  AND A.TAXFORM_ID       = 'W'
  AND A.CALENDAR_YEAR = (SELECT MAX(CALENDAR_YEAR)
                         FROM PS_W2_COMPANY
                         WHERE A.COMPANY = COMPANY
                           AND A.TAXFORM_ID = TAXFORM_ID
                           AND CALENDAR_YEAR <= &E.CALENDAR_YEAR)
end-SELECT
end-procedure

begin-procedure After-Company

if $T-Flag = 'Y'
    do Write-RCT-Record
    let $T-Flag = 'N'
  end-if
  if $U-Flag = 'Y'
    do Write-RCU-Record
    let $U-Flag = 'N'
  end-if

end-procedure

begin-procedure Check-For-Reportable-Data

  let $Process-RCE-Record = 'N'

begin-SELECT

'X'

  let $Process-RCE-Record = 'Y'

FROM PS_INSTALLATION
WHERE  EXISTS (SELECT 'Y' FROM PS_YE_W2C_DATA Y, PS_YE_W2C_AMOUNTS Y1
                 WHERE  Y.COMPANY         = $A.Company
                   AND  Y.W2C_STATUS      = 'C'
                   AND  Y.W2C_TAXFORM_ID  = 'W'
                   AND  Y.MMREF_WRITTEN   = 'N'
                   AND  Y.CALENDAR_YEAR   = &TX.BALANCE_YEAR
                   AND  Y.W2C_BATCH_NBR   = Y1.W2C_BATCH_NBR
                   AND  Y.COMPANY         = Y1.COMPANY
                   AND  Y.CALENDAR_YEAR   = Y1.CALENDAR_YEAR
                   AND  Y.W2C_ADD_EMPLID  = Y1.W2C_ADD_EMPLID
                   AND  Y1.BOX NOT IN ('16', '17', '18', '18A', '18B', '19'))

end-SELECT

if  $Process-RCE-Record = 'N'

begin-SELECT

'B'

  let $Process-RCE-Record = 'Y'

FROM PS_INSTALLATION
WHERE  EXISTS (SELECT 'N' FROM PS_YE_W2C_DATA N
                 WHERE  N.COMPANY         = $A.Company
                   AND  N.W2C_STATUS      = 'C'
                   AND  N.W2C_TAXFORM_ID  = 'W'
                   AND  N.MMREF_WRITTEN   = 'N'
                   AND  N.CALENDAR_YEAR   = &TX.BALANCE_YEAR
                   AND  (N.PRV_SSN <> N.W2C_SSN
                      OR N.PRV_YE_FNAME <> N.W2C_FNAME
                      OR N.PRV_YE_MIDDLE_NAME <> N.W2C_MIDDLE_NAME
                      OR N.PRV_YE_LNAME <> N.W2C_LNAME
                      OR N.PRV_YE_SUFFIX <> N.W2C_SUFFIX
                      OR N.PRV_ADDRESS1 <> N.ADDRESS1
                      OR N.PRV_ADDRESS2 <> N.ADDRESS2
                      OR N.PRV_CITY     <> N.CITY
                      OR N.PRV_STATE    <> N.STATE
                      OR N.PRV_COUNTRY  <> N.COUNTRY
                      OR N.PRV_POSTAL   <> N.POSTAL
                      OR N.PRV_STATUTORY_EE <> N.STATUTORY_EE
                      OR N.PRV_PENSION_PLAN <> N.PENSION_PLAN
                      OR N.PRV_THIRDPARTYSICK <> N.THIRDPARTY_SICKPAY
                      )
                   AND EXISTS (SELECT 'Z' FROM PS_YE_W2C_DATA Z, PS_YE_W2C_AMOUNTS Z1
                         WHERE N.COMPANY = Z.COMPANY
                         AND  N.W2C_STATUS      = Z.W2C_STATUS
                         AND  N.W2C_TAXFORM_ID  = Z.W2C_TAXFORM_ID
                         AND  N.MMREF_WRITTEN   = Z.MMREF_WRITTEN
                         AND  N.CALENDAR_YEAR   = Z.CALENDAR_YEAR
                         AND  Z.W2C_BATCH_NBR   = Z1.W2C_BATCH_NBR
                         AND  Z.COMPANY         = Z1.COMPANY
                         AND  Z.CALENDAR_YEAR   = Z1.CALENDAR_YEAR
                         AND  Z.W2C_ADD_EMPLID  = Z1.W2C_ADD_EMPLID
                         AND  Z1.BOX IN ('16', '17', '18', '18A', '18B', '19')))
end-SELECT
end-if

if  $Process-RCE-Record = 'N'

begin-SELECT

'C'

  let $Process-RCE-Record = 'Y'

FROM PS_INSTALLATION
WHERE  EXISTS (SELECT 'P' FROM PS_YE_W2C_DATA P
                 WHERE  P.COMPANY         = $A.Company
                   AND  P.W2C_STATUS      = 'C'
                   AND  P.W2C_TAXFORM_ID  = 'W'
                   AND  P.MMREF_WRITTEN   = 'N'
                   AND  P.CALENDAR_YEAR   = &TX.BALANCE_YEAR
                   AND  (P.PRV_SSN <> P.W2C_SSN
                      OR P.PRV_YE_FNAME <> P.W2C_FNAME
                      OR P.PRV_YE_MIDDLE_NAME <> P.W2C_MIDDLE_NAME
                      OR P.PRV_YE_LNAME <> P.W2C_LNAME
                      OR P.PRV_YE_SUFFIX <> P.W2C_SUFFIX
                      OR P.PRV_ADDRESS1 <> P.ADDRESS1
                      OR P.PRV_ADDRESS2 <> P.ADDRESS2
                      OR P.PRV_CITY     <> P.CITY
                      OR P.PRV_STATE    <> P.STATE
                      OR P.PRV_COUNTRY  <> P.COUNTRY
                      OR P.PRV_POSTAL   <> P.POSTAL
                      OR P.PRV_STATUTORY_EE <> P.STATUTORY_EE
                      OR P.PRV_PENSION_PLAN <> P.PENSION_PLAN
                      OR P.PRV_THIRDPARTYSICK <> P.THIRDPARTY_SICKPAY))

end-SELECT
end-if

end-procedure

begin-procedure Before-EmplID

  move &E.W2C_ADD_EMPLID   to $E.EmplID

  move &E.W2C_SSN to $S123 xxx
  if $S123 = &Temp_SSN_Mask or RTRIM(&E.W2C_SSN, ' ') = ''
    move 'Applied For' to $E.SSN
  else
    move &E.W2C_SSN to $E.SSN xxx-xx-xxxx
  end-if

  move &E.PRV_SSN to $S123 xxx
  if $S123 = &Temp_SSN_Mask or RTRIM(&E.PRV_SSN, ' ') = ''
    move 'Applied For' to $E.Prv_SSN
  else
    move &E.PRV_SSN to $E.Prv_SSN xxx-xx-xxxx
  end-if
end-procedure

begin-procedure Employee-Address

  move &E.Address1        to $E.Address1
  move &E.Address2        to $E.Address2
  let  $E.City            =  RTRIM(&E.City,' ')

  uppercase $E.Address1
  uppercase $E.Address2
  uppercase $E.City

  let  $StateCd = rtrim(&E.State, ' ')
  move &E.Postal       to $Zip
  move &E.Country      to $Country
  do Foreign-Address-Test('Format 3',25)

  If $ForeignAddrInd = 'X'
     Let $US_Zip      = ' '
     Let $US_ZipXtnsn = ' '
     Let $US_State    = ' '
     Let $Frgn_Zip    = $Zip
     Let $Frgn_State  = $StateName
  Else
     Let $US_Zip      = $Zip
     Let $US_ZipXtnsn = $ZipExtsn
     Let $US_State    = $StateCd
     Let $Frgn_Zip    = ' '
     Let $Frgn_State  = ' '
     Let $Country-2Char   = ' '
  End-if

end-procedure


begin-procedure Load-Amounts

begin-SELECT
D.BOX
D.CURRENT_AMOUNT
D.PRV_AMOUNT

  move &D.CURRENT_AMOUNT to #Amount
  move &D.PRV_AMOUNT to #Prv_Amount
  let #Amount-M = #Amount * 100
  let #Prv_Amount-M = #Prv_Amount * 100
  if #Amount <> #Prv_Amount

   let $D.Box = RTRIM(&D.BOX,' ')
   evaluate $D.Box
     when = $YE_Fed_Wages                         !Federal wages
       move #Prv_Amount-M          to $Fed_Wages-O  09999999999
       move #Amount-M              to $Fed_Wages-C  09999999999
       add  #Prv_Amount-M          to #Fed_Wages-OT
       add  #Amount-M              to #Fed_Wages-CT
       move 'Y' to $W-Flag
       break
     when = $YE_Fed_Tax                           !Federal tax
       move #Prv_Amount-M          to $Fed_Tax-O  09999999999
       move #Amount-M              to $Fed_Tax-C  09999999999
       add  #Prv_Amount-M          to #Fed_Tax-OT
       add  #Amount-M              to #Fed_Tax-CT
       move 'Y' to $W-Flag
       break
     when = $YE_SS_Wages                          !SS wages
       move #Prv_Amount-M          to $SS_Wages-O  09999999999
       move #Amount-M              to $SS_Wages-C  09999999999
       add  #Prv_Amount-M          to #SS_Wages-OT
       add  #Amount-M              to #SS_Wages-CT
       move 'Y' to $W-Flag
       break
     when = $YE_SS_Tax                            !SS Tax
       move #Prv_Amount-M          to $SS_Tax-O  09999999999
       move #Amount-M              to $SS_Tax-C  09999999999
       add  #Prv_Amount-M          to #SS_Tax-OT
       add  #Amount-M              to #SS_Tax-CT
       move 'Y' to $W-Flag
       break
    when = $YE_Med_Wages                          !Medicare wages
       move #Prv_Amount-M          to $Med_Wages-O  09999999999
       move #Amount-M              to $Med_Wages-C  09999999999
       add  #Prv_Amount-M          to #Med_Wages-OT
       add  #Amount-M              to #Med_Wages-CT
       move 'Y' to $W-Flag
       break
     when = $YE_Med_Tax                           !Medicare tax
       move #Prv_Amount-M          to $Med_Tax-O  09999999999
       move #Amount-M              to $Med_Tax-C  09999999999
       add  #Prv_Amount-M          to #Med_Tax-OT
       add  #Amount-M              to #Med_Tax-CT
       move 'Y' to $W-Flag
       break
     when = $YE_SS_Tips                           !SS tips
       move #Prv_Amount-M          to $SS_Tips-O  09999999999
       move #Amount-M              to $SS_Tips-C  09999999999
       add  #Prv_Amount-M          to #SS_Tips-OT
       add  #Amount-M              to #SS_Tips-CT
       move 'Y' to $W-Flag
       break
     when = $YE_Alloc_Tips                        !Allocated tips
       move #Prv_Amount-M          to $Alloc_Tips-O  09999999999
       move #Amount-M              to $Alloc_Tips-C  09999999999
       add  #Prv_Amount-M          to #Alloc_Tips-OU
       add  #Amount-M              to #Alloc_Tips-CU
       move 'Y' to $O-Flag
       break
     when = $YE_Adv_EIC                           !EIC
       move #Prv_Amount-M          to $Adv_EIC-O  09999999999
       move #Amount-M              to $Adv_EIC-C  09999999999
       add  #Prv_Amount-M          to #Adv_EIC-OT
       add  #Amount-M              to #Adv_EIC-CT
       move 'Y' to $W-Flag
       break
     when = $YE_Dep_Care                          !Dependent care
       move #Prv_Amount-M          to $Dep_Care-O  09999999999
       move #Amount-M              to $Dep_Care-C  09999999999
       add  #Prv_Amount-M          to #Dep_Care-OT
       add  #Amount-M              to #Dep_Care-CT
       move 'Y' to $W-Flag
       break
     when = $YE_Non_Qual_457_Y                    !non-qualified 457
       move #Prv_Amount-M          to $Non_Qual_457_Y-O  09999999999
       move #Amount-M              to $Non_Qual_457_Y-C  09999999999
       add  #Prv_Amount-M          to #Non_Qual_457_Y-OT
       add  #Amount-M              to #Non_Qual_457_Y-CT
       move 'Y' to $W-Flag
       break
     when = $YE_Non_Qual_457_N                    !non-qualified non-457
       move #Prv_Amount-M          to $Non_Qual_457_N-O  09999999999
       move #Amount-M              to $Non_Qual_457_N-C  09999999999
       add  #Prv_Amount-M          to #Non_Qual_457_N-OT
       add  #Amount-M              to #Non_Qual_457_N-CT
       move 'Y' to $W-Flag
       break
     when = $YE_Uncoll_SS_Tax_On_Tips             !Uncoll SS tax on tips
     when = $YE_Uncoll_Med_Tax_On_Tips            !Uncoll Med tax on tips
       add  #Prv_Amount-M          to #Uncoll_Tax_On_Tips-O
       add  #Amount-M              to #Uncoll_Tax_On_Tips-C
       add  #Prv_Amount-M          to #Uncoll_Tax_On_Tips-OU
       add  #Amount-M              to #Uncoll_Tax_On_Tips-CU
       move 'Y' to $O-Flag
       break
     when = $YE_Group_Term_Life                   !GTL
       move #Prv_Amount-M          to $Group_Term_ER_Cost-O  09999999999
       move #Amount-M              to $Group_Term_ER_Cost-C  09999999999
       add  #Prv_Amount-M          to #Group_Term_ER_Cost-OT
       add  #Amount-M              to #Group_Term_ER_Cost-CT
       move 'Y' to $W-Flag
       break
     when = $YE_401K                              !401(k)
       move #Prv_Amount-M          to $401K-O  09999999999
       move #Amount-M              to $401K-C  09999999999
       add  #Prv_Amount-M          to #401K-OT
       add  #Amount-M              to #401K-CT
       move 'Y' to $W-Flag
       break
     when = $YE_403B                              !403(b)
       move #Prv_Amount-M          to $403B-O  09999999999
       move #Amount-M              to $403B-C  09999999999
       add  #Prv_Amount-M          to #403B-OT
       add  #Amount-M              to #403B-CT
       move 'Y' to $W-Flag
       break
     when = $YE_408K6                             !408(k)(6)
       move #Prv_Amount-M          to $408K6-O  09999999999
       move #Amount-M              to $408K6-C  09999999999
       add  #Prv_Amount-M          to #408K6-OT
       add  #Amount-M              to #408K6-CT
       move 'Y' to $W-Flag
       break
     when = $YE_457B                              !457(b)
       move #Prv_Amount-M          to $457B-O  09999999999
       move #Amount-M              to $457B-C  09999999999
       add  #Prv_Amount-M          to #457B-OT
       add  #Amount-M              to #457B-CT
       move 'Y' to $W-Flag
       break
     when = $YE_501C18D                           !501(c)(18)(D)
       move #Prv_Amount-M          to $501C18D-O  09999999999
       move #Amount-M              to $501C18D-C  09999999999
       add  #Prv_Amount-M          to #501C18D-OT
       add  #Amount-M              to #501C18D-CT
       move 'Y' to $W-Flag
       break
     when = $YE_Uncoll_SS_Tax_GTL                 !Uncoll SS tax - GTL
       move #Prv_Amount-M          to $Uncoll_SS_Tax_GTL-O  09999999999
       move #Amount-M              to $Uncoll_SS_Tax_GTL-C  09999999999
       add  #Prv_Amount-M          to #Uncoll_SS_Tax_GTL-OU
       add  #Amount-M              to #Uncoll_SS_Tax_GTL-CU
       move 'Y' to $O-Flag
       break
     when = $YE_Uncoll_Med_Tax_GTL                !Uncoll Medi tax - GTL
       move #Prv_Amount-M          to $Uncoll_Med_Tax_GTL-O  09999999999
       move #Amount-M              to $Uncoll_Med_Tax_GTL-C  09999999999
       add  #Prv_Amount-M          to #Uncoll_Med_Tax_GTL-OU
       add  #Amount-M              to #Uncoll_Med_Tax_GTL-CU
       move 'Y' to $O-Flag
       break
     when = $YE_Med_Svgs_Acct                     !Medical spending acct
       move #Prv_Amount-M          to $Med_Svgs_Acct-O  09999999999
       move #Amount-M              to $Med_Svgs_Acct-C  09999999999
       add  #Prv_Amount-M          to #Med_Svgs_Acct-OU
       add  #Amount-M              to #Med_Svgs_Acct-CU
       move 'Y' to $O-Flag
       break
     when = $YE_408P_Simple_Retirement            !Section 418(p) simple retirement
       move #Prv_Amount-M          to $408P_Simple_Retirement-O  09999999999
       move #Amount-M              to $408P_Simple_Retirement-C  09999999999
       add  #Prv_Amount-M          to #408P_Simple_Retirement-OU
       add  #Amount-M              to #408P_Simple_Retirement-CU
       move 'Y' to $O-Flag
       break
     when = $YE_Adoption_Exp                      !Adoption expense
       move #Prv_Amount-M          to $Adoption_Exp-O  09999999999
       move #Amount-M              to $Adoption_Exp-C  09999999999
       add  #Prv_Amount-M          to #Adoption_Exp-OU
       add  #Amount-M              to #Adoption_Exp-CU
       move 'Y' to $O-Flag
       break
     when = $YE_NonStatutory_Stock_Opt            !Non-statutory stock option
       move #Prv_Amount-M          to $Nonstatutory_Stock_Options-O  09999999999
       move #Amount-M              to $Nonstatutory_Stock_Options-C  09999999999
       add  #Prv_Amount-M          to #Nonstatutory_Stock_Options-OT
       add  #Amount-M              to #Nonstatutory_Stock_Options-CT
       move 'Y' to $W-Flag
       break
     when = $YE_HSA_Employer_Contrib               !HSA Employer Contributions
       move #Prv_Amount-M          to $HSA_Employer_Contrib-O  09999999999
       move #Amount-M              to $HSA_Employer_Contrib-C  09999999999
       add  #Prv_Amount-M          to #HSA_Employer_Contrib-OT
       add  #Amount-M              to #HSA_Employer_Contrib-CT
       move 'Y' to $W-Flag
       break
     when = $YE_Combat_Pay               !Nontaxable Combat Pay
       move #Prv_Amount-M          to $Combat_Pay-O  09999999999
       move #Amount-M              to $Combat_Pay-C  09999999999
       add  #Prv_Amount-M          to #Combat_Pay-OT
       add  #Amount-M              to #Combat_Pay-CT
       move 'Y' to $W-Flag
       break
     when = $YE_409A_Def_NQ_Def_Comp      !409A Deferral NQ Deferred Comp
       move #Prv_Amount-M          to $409A_Def_NQ_Def_Comp-O  09999999999
       move #Amount-M              to $409A_Def_NQ_Def_Comp-C  09999999999
       add  #Prv_Amount-M          to #409A_Def_NQ_Def_Comp-OT
       add  #Amount-M              to #409A_Def_NQ_Def_Comp-CT
       move 'Y' to $W-Flag
       break
     when = $YE_409A_Inc_NQ_Def_Comp      !409A Income NQ Deferred Comp
       move #Prv_Amount-M          to $409A_Inc_NQ_Def_Comp-O  09999999999
       move #Amount-M              to $409A_Inc_NQ_Def_Comp-C  09999999999
       add  #Prv_Amount-M          to #409A_Inc_NQ_Def_Comp-OU
       add  #Amount-M              to #409A_Inc_NQ_Def_Comp-CU
       move 'Y' to $O-Flag
       break
   end-evaluate

  end-if

FROM  PS_YE_W2C_AMOUNTS D
WHERE D.W2C_BATCH_NBR   = &E.W2C_BATCH_NBR
AND   D.COMPANY         = &E.COMPANY
AND   D.W2C_ADD_EMPLID  = &E.W2C_ADD_EMPLID
AND   D.CALENDAR_YEAR   = &E.CALENDAR_YEAR
AND   D.W2C_TAXFORM_ID  = $Taxform_ID
end-SELECT
end-procedure


begin-procedure Update-W2C-Parameters

  let $W2c_Error = 'Update-W2C-Parameters  '

begin-SQL on-error=Error-W2c-Processing
UPDATE PS_YE_W2C_DATA
  SET MMREF_WRITTEN = 'Y'
WHERE W2C_STATUS         = 'C'
  AND W2C_TAXFORM_ID     = 'W'
  AND MMREF_WRITTEN      = 'N'
  AND CALENDAR_YEAR      = &TX.BALANCE_YEAR
end-SQL

end-procedure


begin-procedure Error-W2c-Processing
  display 'W2c Processing Error: ' noline
  display $W2c_Error
end-procedure


Begin-Procedure Get-MMREF-Data

  Let $XmitterFound = 'N'
Begin-Select
X.DESCR
X.FEDERAL_EIN
X.ADDRESS1
X.ADDRESS2
X.CITY
X.STATE
X.POSTAL
X.COUNTRY

  Let $XmitterFound = 'Y'

FROM  PS_W2_COMPANY X
WHERE X.COMPANY = &TX.Company
  AND X.CALENDAR_YEAR = &TX.Balance_Year
End-Select

  If $XmitterFound = 'N'
    Show 'W2 COMPANY DATA NOT SETUP FOR COMPANY : ' &TX.Company '  BALANCE YEAR : ' &TX.Balance_Year
    Stop
  End-if

Begin-Select
RC960.REPORTING_MEDIUM
RC960.DISKETTE_TYPE
RC960.EMPLR_PIN
RC960.RESUB_INDICATOR
RC960.RESUB_TLCN
RC960.CONTACT_NAME_SSA
RC960.TELEPHONE_NBR
RC960.PHONE_EXTN
RC960.EMAIL_ADDR_MMREF
RC960.CONTACT_FAX
RC960.NOTIFY_METHOD

FROM PS_TAX960_PARM RC960

End-Select

  if rtrim(&RC960.CONTACT_NAME_SSA, ' ') = ''
    Show 'MMREF Parameters must be set up on SETUP Menu.'
    Show 'Re-execute after establishing MMREF Parameters.'
    Stop
  End-if

  move &RC960.EMAIL_ADDR_MMREF to $RC960.EMAIL_ADDR
  uppercase $RC960.EMAIL_ADDR
  Let $RC960.CONTACT_NAME_SSA = translate(&RC960.CONTACT_NAME_SSA,',','')
!  Diskette is no longer a valid media - 2006
  move 'C' to $FileType
  Let #RecordLength = 1024

End-Procedure


Begin-Procedure Write-Transmitter-Record

  move &X.Federal_EIN       to $FedEIN  099999999
  move &RC960.EMPLR_PIN     to $EmprPIN ! 09999999999999999
  move 'N' to $FileNotOpen
  move '99'  to $SoftwareCd

  If &RC960.RESUB_INDICATOR = 'Y'
    Let $RS_Ind = '1'
  Else
    Let $RS_Ind = '0'
  End-if

  If &RC960.PHONE_EXTN <> 0
    move &RC960.PHONE_EXTN to $Phone_Extn
  Else
    move '    ' to $Phone_Extn
  End-if

  move &RC960.RESUB_TLCN      to $TLCN
  move &X.Descr        to $Xmitr_Name
  move &X.Address1     to $X.Address1
  move &X.Address2     to $X.Address2
  move &X.City         to $City
  let  $StateCd = rtrim(&X.State, ' ')
  move &X.Postal       to $Zip
  move &X.Country      to $Country
  do Foreign-Address-Test('Format 3',25)

  uppercase $Xmitr_Name
  uppercase $X.Address1
  uppercase $X.Address2
  uppercase $City
  uppercase $StateCd

  If $ForeignAddrInd = 'X'
     Let $X.US_Zip      = ' '
     Let $X.US_ZipXtnsn = ' '
     Let $X.US_State    = ' '
     Let $X.Frgn_Zip    = $Zip
     Let $X.Frgn_State  = $StateName
  Else
     Let $X.US_Zip      = $Zip
     Let $X.US_ZipXtnsn = $ZipExtsn
     Let $X.US_State    = $StateCd
     Let $X.Frgn_Zip    = ' '
     Let $X.Frgn_State  = ' '
     Let $X.Country-2Char   = ' '
  End-if

  do Write-RCA-Record

End-Procedure


begin-procedure Foreign-Address-Test($Format,#MaxLength)
  Let $_StateName = ''
  If $_Country = 'USA'
    move ' ' to $_ForeignAddrInd
    move $_Zip to $_ZipExtsn ~~~~~~xxxx
    If instr($_Zip,'-',6) = 0
    and $_ZipExtsn <> '    '
      let $_Zip = substr($_Zip,1,5) || '-' || substr($_Zip,6,4)
    End-if
    move $_Country to $priorCountry
  else
    move 'X' to $_ForeignAddrInd

    If $_Country <> $priorCountry
      do Get-Country-Code
      move $_Country to $priorCountry
      move &_Descr   to $CountryName
      move &_COUNTRY_CD_1042 to $_Country-2Char
    End-if

    if $_StateCd = ''
      Show '      Note: No state code for this record.  Country - ' $_Country
    else
      do Get-State-Code
      move &_STATE.DESCR to $_StateName
      uppercase $_StateName
    end-if

    Evaluate $Format
      when = 'Format 1'
        let #Length = LENGTH(RTRIM($CountryName,' '))
        let $_City = SUBSTR(RTRIM($_City,' '),1,(#MaxLength - #Length - 4) )
        let $_City = $_City || ' ' || $_StateCd || ' ' || $CountryName
        move ' ' to $_StateCd
      when = 'Format 2'
        let $_StateCd = $_StateCd || ' ' || $CountryName
        uppercase $_StateCd
      when = 'Format 3'
        let $_StateCd = $_StateCd
        uppercase $_StateCd
    End-evaluate
  End-if
  uppercase $_City
  let $EditZip = RTRIM($_Zip, ' ')
  let #DashPosition = INSTR($EditZip,'-',1)
  if #DashPosition <> 6
    move $_Zip to $_ZipExtsn ~~~~~xxxx
  else
    move $_Zip to $_ZipExtsn ~~~~~~xxxx
  end-if
End-Procedure


Begin-Procedure Get-Country-Code
  Let $Record_found = 'N'
Begin-Select
COUNTRY_2CHAR
DESCR
  Let $Record_found = 'Y'
FROM  PS_COUNTRY_TBL
WHERE COUNTRY = $Country
End-Select

 If $Record_found = 'N'
   Show ' Two Character Country code for ' $Country ' doesn''t exist in Country table.'
   Stop
 End-if

  Let $Record_found = 'N'
Begin-Select
COUNTRY_CD_1042
  Let $Record_found = 'Y'
FROM  PS_CNTRY_1042_TBL
WHERE COUNTRY = $Country
End-Select

 If $Record_found = 'N'
   Show ' Two Character Country code for ' $Country ' doesn''t exist in Country 1042 table.'
   Stop
 End-if
End-Procedure


Begin-Procedure Get-State-Code
  Let $Record_found = 'N'
Begin-Select
STATE.DESCR
  Let $Record_found = 'Y'
FROM  PS_STATE_NAMES_TBL  STATE
WHERE STATE.COUNTRY = $Country
  AND STATE.STATE   = $StateCd
End-Select

 If $Record_found = 'N'
   Show ' State code State : ' $StateCd ', Country : ' $Country ' doesn''t exist in State table.'
   Stop
 End-if
End-Procedure


Begin-Procedure Populate-Required

  if &E.W2C_SSN = '999999999'
     move '000000000'           to $E.SSN-C 
  else
     move &E.W2C_SSN            to $E.SSN-C
  end-if

  move &E.W2C_FNAME             to $FirstName-C
  move &E.W2C_MIDDLE_NAME       to $MiddleName-C
  move &E.W2C_LNAME             to $LastName-C
  Uppercase $FirstName-C
  Uppercase $MiddleName-C
  Uppercase $LastName-C

End-Procedure


Begin-Procedure Populate-Previous

  if &E.W2C_SSN <> &E.PRV_SSN
     if &E.PRV_SSN = '999999999'
        move '000000000'        to $E.SSN-O
        move 'Y' to $W-Flag
     else
        move &E.PRV_SSN         to $E.SSN-O
        move 'Y' to $W-Flag
     end-if
  end-if

  if &E.W2C_FNAME <> &E.PRV_YE_FNAME
    move &E.PRV_YE_FNAME        to $FirstName-O
    Uppercase $FirstName-O
    move 'Y' to $W-Flag
  end-if

  if &E.W2C_MIDDLE_NAME <> &E.PRV_YE_MIDDLE_NAME
    move &E.PRV_YE_MIDDLE_NAME  to $MiddleName-O
    Uppercase $MiddleName-O
    move 'Y' to $W-Flag
  end-if

  if &E.W2C_LNAME <> &E.PRV_YE_LNAME
    move &E.PRV_YE_LNAME        to $LastName-O
    Uppercase $LastName-O
    move 'Y' to $W-Flag
  end-if

  if &E.STATUTORY_EE <> &E.PRV_STATUTORY_EE
    if &E.PRV_STATUTORY_EE = 'Y'
      move '1' to $StatutoryEe-O
        else
      move '0' to $StatutoryEe-O
    end-if
    if &E.STATUTORY_EE = 'Y'
      move '1' to $StatutoryEe-C
        else
      move '0' to $StatutoryEe-C
    end-if
    move 'Y' to $W-Flag
  end-if

  if &E.PENSION_PLAN <> &E.PRV_PENSION_PLAN
    if &E.PRV_PENSION_PLAN = 'Y'
      move '1' to $RetirePlan-O
        else
      move '0' to $RetirePlan-O
    end-if
    if &E.PENSION_PLAN = 'Y'
      move '1' to $RetirePlan-C
        else
      move '0' to $RetirePlan-C
    end-if
    move 'Y' to $W-Flag
  end-if

  if &E.THIRDPARTY_SICKPAY <> &E.PRV_THIRDPARTYSICK
    if &E.PRV_THIRDPARTYSICK = 'Y'
      move '1' to $Third_Party_Sick_Ind-O
        else
      move '0' to $Third_Party_Sick_Ind-O
    end-if
    if &E.THIRDPARTY_SICKPAY = 'Y'
      move '1' to $Third_Party_Sick_Ind-C
        else
      move '0' to $Third_Party_Sick_Ind-C
    end-if
    move 'Y' to $W-Flag
  end-if

End-Procedure


#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'w2c.sqc'       !Routine for W2 Year End Box variables
#Include 'taxmref2.sqc'  !MMREF-2 record layout for W2C
#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
