!***********************************************************************
!  POS001:  Position Status Report                                     *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:18:11                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!Porcedures ending with "Scrty" and Record alias ending with "SC" are
!using SQR Seurity.
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
! HP00001       Add $PublicSector indicator                            *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup

#define POSITION_DATA
#include 'rellang.sqc'
#define RELLANG_PROG

begin-report
   do Init-DateTime
   do Init-Number
   do Get-Current-DateTime
   do Init-Report
   if $prcs_oprid=''
  goto last2
 end-if

  do Process-Main
  do Reset
  do Stdapi-Term

last2:
end-report

begin-heading 8
do Get_Field_Information ('POS001',     'REPORT_TITLE',         $REPORTTITLE,   #DW)
#Include 'stdhtr03.sqc'

do Get_Field_Information ('POS001',     'CONFIDENTIAL_POSN',    $CON,           #DW)
do Get_Field_Information ('POS001',     'REG_TEMP1',            $REG1,          #DW)
do Get_Field_Information ('POS001',     'REG_TEMP2',            $REG2,          #DW)
do Get_Field_Information ('HR',         'POSITION_STAT1',       $STAT1,         #DW)
do Get_Field_Information ('HR',         'POSITION_STAT2',       $STAT2,         #DW)
do Get_Field_Information ('HR',         'STATUS_DT1',           $STATDT1,       #DW)
do Get_Field_Information ('HR',         'STATUS_DT2',           $STATDT2,       #DW)
do Get_Field_Information ('HR',         'RECRUIT1',             $RECRUIT1,      #DW)
do Get_Field_Information ('HR',         'RECRUIT2',             $RECRUIT2,      #DW)
do Get_Field_Information ('HR',         'INTERNAL',             $INT,           #DW)
do Get_Field_Information ('HR',         'EXTERNAL',             $EXT,           #DW)
do Get_Field_Information ('HR',         'POSTING',              $POST,          #DW)
do Get_Field_Information ('HR',         'EXPIRATN',             $EXPIRE,        #DW)
do Get_Field_Information ('HR',         'INCUMBENT',            $INCUMBENT,     #DW)
do Get_Field_Information ('HR',         'DEPTID',               $DEPTID,        #DW)
do Get_Field_Information ('HR',         'JOBCODE1',             $JOB1,          #DW)
do Get_Field_Information ('HR',         'JOBCODE2',             $JOB2,          #DW)
do Get_Field_Information ('HR',         'POSITION_NBR1',        $POS1,          #DW)
do Get_Field_Information ('HR',         'POSITION_NBR2',        $POS2,          #DW)
do Get_Field_Information ('HR',         'EFFDT1',               $EFFDT1,        #DW)
do Get_Field_Information ('HR',         'EFFDT2',               $EFFDT2,        #DW)
do Get_Field_Information ('HR',         'POSITION_TITLE',       $POSTITLE,      #DW)

let $constrg1 = substr($CON,1,1)
let $constrg2 = substr($CON,2,1)
let $constrg3 = substr($CON,3,1)

let $reg_tmp1 = substr($REG1,1,1) || '|' || substr($REG2,1,1)
let $reg_tmp2 = substr($REG1,2,1) || '|' || substr($REG2,3,1)
let $reg_tmp3 = substr($REG1,3,1) || '|' || substr($REG2,4,1)

PRINT   $reg_tmp1               (+2,70,4)
PRINT   $constrg1               (0,75)
PRINT   $JOB1                   (+1,12,7)
PRINT   $POS1                   (0,20,9)
PRINT   $EFFDT1                 (0,30,39)
PRINT   $reg_tmp2               (0,70,4)
PRINT   $constrg2               (0,75,3)
PRINT   $STAT1                  (0,79,9)
PRINT   $STATDT1                (0,89,9)
PRINT   $RECRUIT1               (0,99,3)
PRINT   $INT                    (0,113,22)
PRINT   $EXT                    (0,136)
PRINT   $DEPTID                 (+1,1,10)
PRINT   $JOB2                   (0,12,10)
PRINT   $POS2                   (0,23,8)
PRINT   $EFFDT2                 (0,32,14)
PRINT   $POSTITLE               (0,47,22)
PRINT   $reg_tmp3               (0,70,4)
PRINT   $constrg3               (0,75,4)
PRINT   $STAT2                  (0,80,9)
PRINT   $STATDT2                (0,90,9)
PRINT   $RECRUIT2               (0,100,10)
PRINT   $POST                   (0,111,10)
PRINT   $EXPIRE                 (0,122,11)
PRINT   $POST                   (0,134,10)
PRINT   $EXPIRE                 (0,145,11)
PRINT   $INCUMBENT              (0,157)
end-heading

!********************************************
begin-procedure Init-Report

  move 'POS001' to $ReportID
  do Stdapi-Init
   if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

  do Security-Param
  if $prcs_process_instance = ''
    do Ask-As-Of-Date
  else
    do Select-Parameters
  end-if

do Init_Printer
do Init_Report_Translation ($ReportID, $language_cd)
do Append_Report_Translation ('HR')
last1:

end-procedure

!********************************************
begin-procedure Get-Values

let $language_cd = $PRCS_LANGUAGE_CD
   do Get-As-Of-Date

end-procedure

!********************************************
begin-procedure Process-Main

begin-SELECT
A.DEPTID                  (+1,1,10) on-break level=1 skiplines=1
A.JOBCODE                 (0,12,7)
A.POSITION_NBR            (0,20,8)
A.EFFDT
    do Format-DateTime(&A.EffDt,  $out,{DEFDATE}, '', '')
    print $out            (0,29,10)
B.DESCR
A.DESCR
   let $POSITION_DATA-DESCR = &A.DESCR
   do Get_Related_POSITION_DATA(&A.EFFDT,&A.POSITION_NBR)
   let $PositionDescr = $POSITION_DATA-DESCR



   if RTRIM(&A.Descr, ' ') = ''
     print &B.Descr       (0,40,31)
   else
     print $PositionDescr (0,40,31)
   end-if
A.REG_TEMP                (0,72,3)
A.CONFIDENTIAL_POSN
   if &A.Confidential_Posn = 'Y'
     print 'Y'            (0,76,2)
   end-if
A.POSN_STATUS
   move 'POSN_STATUS' to $FieldName
   move &A.Posn_Status  to $FieldValue
   do Read-Translate-Table
   print $XlatShortName   (0,79,8)
A.STATUS_DT
   if not IsNULL(&A.Status_Dt)
     do Format-DateTime(&A.Status_Dt, $out, {DEFDATE}, '', '')
     print $out                (0,88)
   end-if
   do Get-Requisition

   if &A.Posn_Status <> 'I'  !Inactive
     do Get-Incumbent
   end-if

FROM  PS_POSITION_DATA A,
      PS_JOBCODE_TBL B,
      PS_DEPT_SEC_SRCH SCRTY,
      PS_DEPT_TBL C
WHERE

A.EFF_STATUS = 'A'
AND A.EFFDT = (SELECT MAX(A1.EFFDT)
                        from PS_POSITION_DATA A1
                        where A1.POSITION_NBR = A.POSITION_NBR
                        and A1.EFFDT <= $AsOfDate )
AND B.JOBCODE = A.JOBCODE
AND B.SETID = (SELECT SETID
                 FROM PS_SET_CNTRL_REC
                 WHERE RECNAME = 'JOBCODE_TBL'
                  AND SETCNTRLVALUE = A.BUSINESS_UNIT)
AND B.EFFDT = (SELECT MAX(B1.EFFDT)
                        from PS_JOBCODE_TBL B1
                        where B1.JOBCODE = B.JOBCODE
                        AND B1.SETID = B.SETID
                        and B1.EFFDT <= $AsOfDate )
AND C.SETID = (SELECT SETID
                 FROM PS_SET_CNTRL_REC
                 WHERE RECNAME = 'DEPT_TBL'
                  AND SETCNTRLVALUE = A.BUSINESS_UNIT)
AND C.EFFDT = (SELECT MAX(C1.EFFDT)
                        from PS_DEPT_TBL C1
                        where C1.DEPTID = C.DEPTID
                        AND C1.SETID = C.SETID
                        and C1.EFFDT <= $AsOfDate )
AND A.DEPTID = C.DEPTID
AND C.SETID  = SCRTY.SETID
AND C.DEPTID = SCRTY.DEPTID
  [$SecurityClause]

ORDER BY A.DEPTID, A.JOBCODE, A.POSITION_NBR
end-SELECT

move 'Y' to $End_of_Report
print ' ' (+1,1) center

end-procedure Process-Main

!-----------------------------------------------------------------------
begin-procedure Get-Requisition

let $Recruit_Open_Dt  = ''
let $Internal_Dt = ''
let $Internal_Exp_Dt = ''
let $External_Dt = ''
let $External_Exp_Dt = ''

begin-SELECT DISTINCT
JT.HRS_JO_PST_TYPE
JT.HRS_JO_PST_OPN_DT
JT.HRS_JO_PST_CLS_DT

   evaluate &JT.HRS_JO_PST_TYPE
     when = 'R'
       if not IsNULL(&JT.HRS_JO_PST_OPN_DT)
         do Format-DateTime(&JT.HRS_JO_PST_OPN_DT, $Recruit_Open_Dt, {DEFDATE}, '', '')
       end-if
       break
     when = 'I'
       if not IsNULL(&JT.HRS_JO_PST_OPN_DT)
         do Format-DateTime(&JT.HRS_JO_PST_OPN_DT, $Internal_Dt, {DEFDATE}, '', '')
       end-if
       if not IsNULL(&JT.HRS_JO_PST_CLS_DT)
         do Format-DateTime(&JT.HRS_JO_PST_CLS_DT, $Internal_Exp_Dt, {DEFDATE}, '', '')
       end-if
       break
     when = 'E'
       if not IsNULL(&JT.HRS_JO_PST_OPN_DT)
         do Format-DateTime(&JT.HRS_JO_PST_OPN_DT, $External_Dt, {DEFDATE}, '', '')
       end-if
       if not IsNULL(&JT.HRS_JO_PST_CLS_DT)
         do Format-DateTime(&JT.HRS_JO_PST_CLS_DT, $External_Exp_Dt, {DEFDATE}, '', '')
       end-if
       break
     when-other
   end-evaluate

FROM  PS_HRS_JO_I J
      ,PS_HRS_JO_PSTDST_I JT
WHERE J.POSITION_NBR = &A.Position_Nbr
  AND J.JOBCODE  = &A.JobCode
  AND J.DEPTID   = &A.DeptID
  AND J.OPEN_DT <= $AsOfDate
  AND (J.CLOSE_DT >= $AsOfDate OR J.CLOSE_DT IS NULL)
  AND JT.HRS_JOB_OPENING_ID = J.HRS_JOB_OPENING_ID
end-SELECT

if not IsNULL($Recruit_Open_Dt)
  print $Recruit_Open_Dt  (0,99,10)
end-if
if not IsNULL($Internal_Dt)
  print $Internal_Dt  (0,110,10)
end-if
if not IsNULL($Internal_Exp_Dt)
  print $Internal_Exp_Dt  (0,121,11)
end-if
if not IsNULL($External_Dt)
  print $External_Dt  (0,133,10)
end-if
if not IsNULL($External_Exp_Dt)
  print $External_Exp_Dt  (0,144)
end-if

end-procedure Get-Requisition

!-----------------------------------------------------------------------
begin-procedure Get-Incumbent

let #firstIncumbent = 0

begin-SELECT

  if #firstIncumbent <> 0
    print ' ' (+1,155)
  end-if
   let #firstIncumbent = 1
!*************BEGIN NAME DISPLAY CHANGE***********************
!L.NAME (0,155,20)
L.NAME_DISPLAY (0,155,20)
!*************END NAME DISPLAY CHANGE***********************
M.EMPLID
FROM  PS_PERSON_NAME L,
      PS_EMPLOYMENT N,
      PS_JOB M,
      PS_INSTALLATION IN1
                                               !HP00001
WHERE M.POSITION_NBR = &A.Position_Nbr      !Uncomment if Posn# is used
  AND N.EMPLID = L.EMPLID
  AND M.EMPLID = N.EMPLID
  AND M.EMPL_RCD = N.EMPL_RCD
  AND (M.EMPL_STATUS IN ('A','P','L','S')                               !HP99999
       OR (IN1.PUBLIC_SECTOR = 'Y'                                      !HP00001
           AND M.EMPL_STATUS = 'W'))                                    !HP99999
  AND M.EFFDT = (SELECT MAX(C.EFFDT)
                   from PS_JOB C
                  where C.EMPLID = M.EMPLID
                    and C.EMPL_RCD = M.EMPL_RCD
                    and C.EFFDT <= $asOfDate)
  AND M.EFFSEQ =(SELECT MAX(D.EFFSEQ)
                   from PS_JOB D
                  where D.EMPLID = M.EMPLID
                    and D.EMPL_RCD = M.EMPL_RCD
                    and D.EFFDT = M.EFFDT)
end-SELECT

end-procedure Get-Incumbent

!****************************************************************
#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askaod.sqc'    !Ask As Of Date input
#include 'hrsecty.sqc'   !Get SQR Security parameters
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
