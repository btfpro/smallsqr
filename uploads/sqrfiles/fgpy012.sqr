!------------------------------------------------------------------------------------------------
! Report Name: FGPY012.SQR - Military Service Closed Accounts Report
!------------------------------------------------------------------------------------------------
!
! Confidentiality Information:
!
! This module contains confidential and proprietary information 
! of Oracle; it is not to be copied, reproduced, or transmitted 
! in any form, by any means, in whole or in part, nor is it to  
! be used for any purpose other than that for which it is       
! expressly provided under the applicable license agreement.    
!                                                               
! Copyright (C) 2006 Oracle. All Rights Reserved.               
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      
!          $Date:  2006/07/20:03:46:31                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!
!-------------------------------------------------------------
! Program Descr: Program prints a Military Deposit Report
!                with Closed Account that need a PAR Action
!-------------------------------------------------------------
!-------------------------------------------------------------
! Section:      Include Files
! Descr:        This sections contains all include files.
!-------------------------------------------------------------
! Environment Include Files:
#include 'setenv.sqc'   ! Set Environment Procedure

#define PageWidth  60
#define PageLength 200

begin-setup

#include 'setupdb.sqc'

declare Printer           !Declare printer characteristics.
    type=HPLASERJET       !Types are POSTSCRIPT, HPLASERJET.
    orientation=Portrait  !Orientations are PORTRAIT or LANDSCAPE.
    top-margin  = .25
    left-margin = .25
    font        =  5      !Font Number
    point-size  =  12
    char-size   =  7.2
    line-size   =  12

page-size {PageLength} {PageWidth}
end-setup

Begin-REPORT
  Do Init-DateTime
  show 'Init-DateTime'
  Do Init-Report
  show 'Init-Report'
  Do Print-Report
  Do Stdapi-Term
  show 'Stdapi-Term'
End-REPORT



!-------------------------------------------
!          *** INIT-REPORT ***
!-------------------------------------------

Begin-procedure Init-Report

  let $ReportID = 'FGPY012'
  do Get-Report-Language
  let $ReportTitle = $FGPY012-REPORTTITLE
  display $ReportTitle

  Do Stdapi-Init
  Let $first_page      = 'Y'
  Let #Max_Rows        = 56
  Let #Current_Row     = 1
  Let #Start_line      = 14

If $first_page = 'N'
      new-page
  else
      let $first_page = 'N'
  End-if

  if $prcs_process_instance = ''
        input $EMPLID MAXLEN=11 'Enter Employee ID' TYPE=CHAR
        move 'Y' to $DateOK
        input $REQDT 'Enter Date For Request ({Prompt-Date})'
        if $REQDT = ''
           do Get-Current-DateTime
           move $AsOfToday to $REQDT
        else
           move {PDelimiter} to $DDelimiter
           do Format-DateTime($REQDT,$REQUESTDT,{Prompt-Mask},'','native')
        end-if

           do Validate-Native-Date($REQUESTDT,$DateOK)

        if $DateOK = 'N'
           display '**** This is an invalid date, please reenter ****'
        end-if

  else
    Do Select-RunCntl-Parameters
  end-if
End-procedure

!----------------------------------------
!      *** SELECT PARAMETERS ***
!----------------------------------------

Begin-procedure Select-RunCntl-Parameters

display $prcs_oprid
display $prcs_run_cntl_id
display $ReportDate

Begin-select

C.OPRID
C.RUN_CNTL_ID
C.ASOFDATE

  Let $ReportDate = &C.ASOFDATE

FROM PS_GVT_RUN_CNTL C
WHERE C.OPRID = $prcs_oprid
AND   C.RUN_CNTL_ID = $prcs_run_cntl_id

End-select

End-procedure

!-------------------------------------------
!            *** PRINT REPORT
!-------------------------------------------

Begin-procedure Print-Report

DO PRINT-MILDEP-CLSD-ACCTS-FORM
 Show '3 -Got the form'
DO GET-CLOSED-ACCTS
 Show '4 -Got the data'

End-procedure

!------------------------------------------------------------------
!                 *** REPORT TRANSLATION ***
!------------------------------------------------------------------
Begin-Procedure Report-Translation
  do Init_Report_Translation($ReportID, $Language_Cd)

  do Get_Field_Information ('FGPY012','REPORT_TITLE',   $FGPY012-REPORTTITLE, #CW)
  do Get_Field_Information ('FGPY012','HEADER1',        $FGPY012-HEADER1,     #CW)
  do Get_Field_Information ('FGPY012','HEADER2',        $FGPY012-HEADER2,     #CW)
  do Get_Field_Information ('FGPY012','HEADER3',        $FGPY012-HEADER3,     #CW)
  do Get_Field_Information ('FGPY012','EMPLID',         $FGPY012-EMPLID,      #CW)
  do Get_Field_Information ('FGPY012','NAME',           $FGPY012-NAME,        #CW)
  do Get_Field_Information ('FGPY012','ACCOUNT_NO',     $FGPY012-ACCOUNT,     #CW)
  do Get_Field_Information ('FGPY012','STATUS',         $FGPY012-STATUS,      #CW)

End-Procedure

!---------------------------------------------
!                 PAGE HEADER
!---------------------------------------------


Begin-Procedure Print-MILDEP-CLSD-ACCTS-Form

DO Format-DateTime ($ReportDate,$RDate, {DEFMDY}, '','')
graphic () font 5 12
print $FGPY012-HEADER1                       (7,25) BOLD

graphic () font 5 11
print $FGPY012-HEADER2                       (8,23) BOLD
print $FGPY012-HEADER3                       (9,25) BOLD
print $RDate                                 (9,38) BOLD

!------------------------------------------------------------------
!                     *** COLUMN HEADINGS ***
!------------------------------------------------------------------


! Column Headings

graphic () font 5 10

print $FGPY012-EMPLID                        (12,5)  BOLD
print $FGPY012-NAME                          (12,15) BOLD
print $FGPY012-ACCOUNT                       (12,37) BOLD
print $FGPY012-STATUS                        (12,50) BOLD

graphic (12,5,55) horz-line 5

End-Procedure

!-------------------------------------------
!         *** GET-CLOSED-ACCTS ***
!-------------------------------------------

Begin-Procedure GET-CLOSED-ACCTS

Begin-Select Distinct
SD.EMPLID
SD.EMPL_RCD
SD.SEQ_NO
SD.GVT_STATUS_ACCT
SD.STATUS_DT
PER.NAME
TRN.END_BAL

   Do Print-Closed-Accts-Data

FROM PS_GVT_SVCDEP_TBL SD, PS_PERSON_NAME PER, PS_GVT_SVCTRN_TBL TRN
WHERE SD.EMPLID = PER.EMPLID
AND TRN.EMPLID = SD.EMPLID
AND TRN.END_BAL = 0
AND SD.GVT_STATUS_ACCT = '3'
AND NOT EXISTS
      (SELECT JOB.ACTION
              FROM PS_GVT_JOB JOB
              WHERE JOB.EMPLID = SD.EMPLID
              AND  JOB.ACTION = 'DTA' AND JOB.ACTION_REASON = 'STC'
              AND JOB.GVT_NOA_CODE = '882' AND JOB.GVT_LEG_AUTH_1 = 'VZM'
              AND JOB.EFFDT =  (SELECT MAX(JB2.EFFDT)
                                FROM PS_GVT_JOB JB2
                                WHERE JB2.EMPLID = JOB.EMPLID
                                AND   JB2.EMPL_RCD = JOB.EMPL_RCD
                                AND   JB2.EFFDT <= SD.STATUS_DT))

End-Select

End-Procedure


!----------------------------------------------
!       *** PRINT-CLOSED-ACCTS-DATA ***
!----------------------------------------------

Begin-Procedure Print-Closed-Accts-Data

  If #Current_Row < #Max_rows

    Do Format-DateTime (&SD.STATUS_DT,$STDATE, {DEFMDY}, '','')
    Let $NAME =rtrim(&PER.NAME,' ')
    Position (#Start_line)
    graphic () font 5 10

    Print &SD.EMPLID                 (0,5,0)
    Print $NAME                      (0,15,0)
    Print &SD.SEQ_NO                 (0,41,0)
    Print $STDATE                    (0,52,0)
  End-if


  If #Current_Row = #Max_rows
      New-Page
      Let #Current_Row = 1
      Let #Start_line  = 14
      Do Print-Report

   Else
      Let #Current_Row = #Current_Row +1
      Let #Start_line  = #Start_line + 1
   End-if

End-Procedure

#Include 'stdapi.sqc'       !Routines to Update Run Status
#Include 'datetime.sqc'     !Routines to format datetimes
#Include 'curdttim.sqc'     !Get-Current-DateTime procedure
#include 'validdt.sqc'      !Validate date routine
!#include 'fgrunctl.sqc'    !Get run control parameter values
!#include 'fggetval.sqc'    !Get values mask routines

#Include 'sqrtrans.sqc'     !Translate SQR strings to given language
#Include 'getrplng.sqc'     !Get the report language
!-----------------------------------------------------------
!                 >>>> END OF FILE <<<<
!----------------------------------------------------------

