!*************************************
!  PER009:  Union Membership         *
!*************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/08/06:00:30:34                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689848                                              !
!    Revision   :  09.22.2000  BSHAK-s79A8                             *
!                                                                      *
!***********************************************************************
!Porcedures ending with "Scrty" and Record alias ending with "SC" are
!using SQR Seurity.
!***********************************************************************
#include 'setenv.sqc'    !Set environment
begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup


begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  if $prcs_oprid=''
  goto last2
 end-if

  do Process-Main

  do Reset
  do Stdapi-Term
last2:
end-report


begin-heading 7
  #Include 'stdhdg02.sqc'
!  print 'Union Union                 Employee'                   (+3,1,71)
!  print 'Hire       Seniority'                                   (0,78,55)
!  print '     Emp Reg/ Full/ Pay                 Hourly'         (0,129)
!  print 'Code  Name       Barg Unit  ID          Employee Name'  (+1,1,71)
!  print 'Rcd#'                                                   (0,73,4)
!  print 'Date       Date       Dept       Location   Job Title'  (0,78,55)
!  print 'Typ Temp Part  Grp                 Rate'                (0,134,43)
!  print 'Shift'                                                  (0,178)

!Heading Line 1
   print $PER009-UNION           (+3,1,5)
   print $PER009-UNION           (0,+1,10)
   print $PER009-SENIORITY       (0,+72,10)
   print $PER009-REGTEMP         (0,+34,18)
   print $PER009-HOURLY          (0,+11,6)

   Print $PER009-CODE            (+1,1,5)
   Print $PER009-NAME            (0,+1,10)
   Print $PER009-BARGUNT         (0,+1,10)
   print $PER009-EMPLID          (0,+1,11)
   print $PER009-EMPLNAME        (0,+1,31)
   print $PER009-EMPL-RCD        (0,+1,4)
   print $PER009-HIREDT          (0,+1,7)
   print $PER009-DATE            (0,+4,10)
   
   print $PER009-DEPT            (0,+1,10)
   print $PER009-LOCATION        (0,+1,10)
   print $PER009-JOBTITLE        (0,+1,10)
   print $PER009-EMPTYPE         (0,+1,18)
   print $PER009-RATE            (0,+11,5)
   print $PER009-SHIFT           (0,+10,5)

end-heading

begin-procedure Init-Report
  Let $_TableAlias = 'A' 
  #define Year4 '1'
  move 'PER009' to $ReportID
!  move 'Union Membership' to $ReportTitle
!  display $ReportTitle

  do Stdapi-Init
  if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

  do Security-Param

  if $prcs_process_instance = ''
    !No Prompt
  else
    do Select-Parameters
  end-if
  do Get-Language-Codes
  do Report-Translation

last1:
end-procedure

Begin-Procedure Report-Translation

  do Init_Report_Translation($ReportID, $curr_language_cd)
  do Append_Report_Translation('PER009')

  do Get_Field_Information ('PER009', 'REPORT_TITLE', $ReportTitle,         #CW) 
  do Get_Field_Information ('PER009', 'UNION',        $PER009-UNION,        #CW)
  do Get_Field_Information ('PER009', 'CODE',         $PER009-CODE,         #CW)
  do Get_Field_Information ('PER009', 'EMPLID',       $PER009-EMPLID,       #CW)
  do Get_Field_Information ('PER009', 'HIREDT',       $PER009-HIREDT,       #CW)
  do Get_Field_Information ('PER009', 'SENIORITY',    $PER009-SENIORITY,    #CW)
  do Get_Field_Information ('PER009', 'DATE',         $PER009-DATE,         #CW)
  do Get_Field_Information ('PER009', 'REGTEMP',      $PER009-REGTEMP,      #CW)
  do Get_Field_Information ('PER009', 'HOURLY',       $PER009-HOURLY,       #CW) 
  do Get_Field_Information ('PER009', 'RATE',         $PER009-RATE,         #CW) 
  do Get_Field_Information ('PER009', 'CODE',         $PER009-CODE,         #CW)
  do Get_Field_Information ('PER009', 'NAME',         $PER009-NAME,         #CW)
  do Get_Field_Information ('PER009', 'BARGUNT',      $PER009-BARGUNT,      #CW)
  do Get_Field_Information ('PER009', 'EMPLNM',       $PER009-EMPLNAME,     #CW)
  do Get_Field_Information ('PER009', 'EMPL-RCD',     $PER009-EMPL-RCD,     #CW)
  do Get_Field_Information ('PER009', 'DEPT',         $PER009-DEPT,         #CW)
  do Get_Field_Information ('PER009', 'LOCATION',     $PER009-LOCATION,     #CW)
  do Get_Field_Information ('PER009', 'JOBTITLE',     $PER009-JOBTITLE,     #CW)
  do Get_Field_Information ('PER009', 'EMPLTYPE',      $PER009-EMPTYPE,      #CW)
  do Get_Field_Information ('PER009', 'SHIFT',        $PER009-SHIFT,        #CW)

End-Procedure

begin-procedure Get-Values

!No Prompt

end-procedure

begin-procedure Process-Main
  if $language_cd = 'JPN'
     let $qualifier1 = 'A.NAME_AC'
  else
     let $qualifier1 = 'A.NAME'
  end-if
begin-SELECT DISTINCT
A.BUSINESS_UNIT
  LET $BU = RTRIM(&A.BUSINESS_UNIT,' ')
A.COMPANY          ()  on-break print=never level=1 procedure=Company-Change
  move &A.Company to $Company
JL.UNION_CD                   (+1,1,5)
B.DESCRSHORT                  (0,7,10)
JL.BARG_UNIT
A.EFFDT             &A.EffDt

  move &A.EffDt    to $AsOfDate
  move 'BARG_UNIT' to $FieldName
  move &JL.Barg_Unit  to $FieldValue
  do Read-Translate-Table
  print $XlatShortName        (0,18,10)
A.EMPLID                      (0,29,11)
A.NAME                        (0,41,31)
A.EMPL_RCD                    (0,73,4)
A.HIRE_DT  &A.Hire_Dt
  do Format-DateTime(&A.Hire_Dt, $out, {DEFDATE}, '', '')
  print $out                  (0,78,10)
JL.UNION_SENIORITY_DT          &JL.Union_Seniority_Dt
  
  if not IsNULL(&JL.Union_Seniority_Dt)
    do Format-DateTime(&JL.Union_Seniority_Dt, $out, {DEFDATE}, '', '')
    print $out                (0,89,10)
  end-if
A.DEPTNAME_ABBRV              (0,100,10)
JL.SETID_LOCATION
  move &JL.SETID_LOCATION to $Setid
A.LOCATION
  move &A.Location to $Location
  do Get-Location-Name
  print $LocationAbbrv          (0,111,10)
A.JOBTITLE_ABBRV                (0,122,11)
A.EMPL_TYPE                     (0,134,3)
A.REG_TEMP                      (0,138,4)
A.FULL_PART_TIME                (0,143,5)
A.PAYGROUP                   
  move  &A.PAYGROUP to $Paygroup_out
  if  $Paygroup_out <> ' '
      print $Paygroup_out       (0,149,3)
  end-if
A.GP_PAYGROUP
  move  &A.GP_PAYGROUP to $Paygroup_out
  if  $Paygroup_out <> ' '
      print $Paygroup_out       (0,149,10)
  end-if 
A.CURRENCY_CD &curin
A.HOURLY_RT
  do Format-Amt(&A.Hourly_Rt, $out, '999999999999.999999',&curin, $curout)
  print $out                    (0,152)
  print $curout                 (0,172,5)
A.SHIFT                         (0,178)
FROM  PS_EMPLOYEES A,
      PS_UNION_TBL B,
      PS_JOB JL

WHERE JL.EMPLID = A.EMPLID
  AND JL.EMPL_RCD = A.EMPL_RCD
  AND JL.EFFDT = (SELECT MAX(EFFDT)
                  FROM PS_JOB J2
                  WHERE JL.EMPLID = J2.EMPLID
                        AND JL.EMPL_RCD = J2.EMPL_RCD
                        AND J2.EFFDT <= $ASOFTODAY)
  AND JL.EFFSEQ = (SELECT MAX(EFFSEQ)
                   FROM PS_JOB J3
                   WHERE J3.EMPLID = JL.EMPLID
                     AND J3.EMPL_RCD = JL.EMPL_RCD
                     AND J3.EFFDT = JL.EFFDT)
  AND JL.UNION_CD = B.UNION_CD
  AND B.EFFDT =
               (SELECT MAX(EFFDT)
                FROM PS_UNION_TBL B2
                WHERE B2.UNION_CD  = B.UNION_CD
                AND B2.EFFDT <= $ASOFTODAY)

  [$SecurityClausewithERN]

ORDER BY A.COMPANY,JL.UNION_CD,JL.BARG_UNIT,[$qualifier1]
end-SELECT
end-procedure


!*******************************************
begin-procedure Company-Change
  new-page
end-procedure


!*********************************************************************
#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'hrsecty.sqc'   !Get SQR Security parameters

#Include 'getlocnm.sqc'  !Get-Location-Name procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure (used in StdHdg02)
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Rountines to Update Run Status
#Include 'sqrtrans.sqc'   !Translate SQR strings to given language
