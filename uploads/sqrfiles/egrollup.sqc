!***********************************************************************
!  EGROLLUP.SQC:  ROLL-UP REPORT                                       *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
! Report Description: This program performs a dynamic retrieval of     *
! the depts to be rolled up. For every deptid that it returns, control *
! process is returned back to the procedure defined in the calling SQR *
! This procedure is defined in the variable called "rollup-return".    *
!                                                                      *
! Process Description: In order to determine the reporting levels of   *
! the departments (what departments report to what departments),       *
! certain parameters for the highest department level must first be    *
! defined in the run control table (RUN_CTL_EG):                       *
!   SETID, DEPTID, ASOFDATE, FISCAL_YEAR                               *
! (The process above is in ROLLUP-PARMS procedure)                     *
!                                                                      *
! Once the report parameters have been defined, this sqc returns the   *
! following information for the highest dept level that was specified. *
!   TREE_NODE         (deptid)                                         *
!   TREE_NODE_NUM     (number assigned to a tree node)                 *
!   TREE_NODE_NUM_END (number assigned to the last tree node           *
!                      under the highest tree node)                    *
!   TREE_LEVEL_NUM (level of the dept (1-9, 1 as being the highest     *
! (The process above is in ROLLUP-CONTROL procedure)                   *
!                                                                      *
! Starting with the highest tree node information, the sqc returns     *
! all the deptids reporting to that department. The tree node          *
! information (as above) for each of the deptid that was returned      *
! are then used to further determine its lower departments. This       *
! cycle is repeated for each subsequent lower level department until   *
! the last deptid has been reached (top to bottom processing).         *
! This procss is in the procedure called GET-ALL-DEPTIDS-TO-ROLLUP.    *
!                                                                      *
! The following are variables that this sqc controls and returns to    *
! the reporting SQR:                                                   *
!   REPORT PARAMETERS:                                                 *
!     $rollupp_cntl_setid                                              *
!     $rollup_cntl_deptid                                              *
!     $rollup_cntl_asofdate                                            *
!     $rollup_cntl_fiscalyr                                            *
!     $rollup_cntl_flag                                                *
!     $rollup_cntl_print                                               *
!                                                                      *
!   TREE NODE INFORMATION OF THE DEPT:                                 *
!     #rollup_cntl_curr_level (current level # for the dept being      *
!                              processed)                              *
!     $rollup_cntl_deptid     (deptid)                                 *
!     $rollup_cntl_deptname   (dept name)                              *
!     $rollup_cntl_tree_val   (tree node # assigned to the deptid)     *
!     $rollup_cntl_tree_end   (tree node # assigned for ending         *
!                              tree node)                              *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:11:41:55                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
! This program is specific to HRMS for Public Sector.                  *
!***********************************************************************


!********************************************************************
! ROLLUP-PARMS
! Get rollup reporting parameters
!********************************************************************
begin-procedure ROLLUP-PARMS
begin-SELECT
RUN_CTL_EG.OPRID
RUN_CTL_EG.SETID
RUN_CTL_EG.DEPTID
RUN_CTL_EG.ASOFDATE
RUN_CTL_EG.FISCAL_YEAR
RUN_CTL_EG.EG_ROLLUP_FLAG
RUN_CTL_EG.EG_PRINT_OPTIONS

   let $rollup_oprid = &RUN_CTL_EG.OPRID
   let $rollup_cntl_setid = &RUN_CTL_EG.SETID
   let $rollup_cntl_deptid = rtrim(&RUN_CTL_EG.DEPTID,' ')
   let $rollup_cntl_asofdate = &RUN_CTL_EG.ASOFDATE
   let #rollup_cntl_fiscalyr = &RUN_CTL_EG.FISCAL_YEAR
   let $rollup_cntl_flag = &RUN_CTL_EG.EG_ROLLUP_FLAG
   let $rollup_cntl_detail = &RUN_CTL_EG.EG_PRINT_OPTIONS

FROM PS_RUN_CNTL_EG RUN_CTL_EG
WHERE RUN_CTL_EG.OPRID = $prcs_oprid
  AND RUN_CTL_EG.RUN_CNTL_ID = $prcs_run_cntl_id
end-SELECT


end-procedure  ROLLUP-PARMS



!********************************************************************
! ROLLUP-CONTROL
! Get the controlling deptid information (top node)
!********************************************************************
begin-procedure ROLLUP-CONTROL

if rtrim($rollup_cntl_deptid,' ') = ''
   do ROLLUP-ALL
else
   do ROLLUP-SPECIFIC
end-if

end-procedure  ROLLUP-CONTROL



!********************************************************************
! ROLLUP-SPECIFIC
! Selects top node information for the given dept id
!********************************************************************
begin-procedure ROLLUP-SPECIFIC
begin-SELECT
TN.TREE_NODE
TN.TREE_NODE_NUM
TN.TREE_NODE_NUM_END
TN.TREE_LEVEL_NUM

   let $rollup_cntl_deptid = rtrim(substr(&TN.TREE_NODE,1,10),' ')
   let #rollup_cntl_tree_end = &TN.TREE_NODE_NUM_END
   let #rollup_cntl_tree_val = &TN.TREE_NODE_NUM
   let #rollup_cntl_highest_level = &TN.TREE_LEVEL_NUM
   let #rollup_cntl_curr_level = &TN.TREE_LEVEL_NUM

   do Get-Dept-Name
   do {rollup_return}

   do Get-All-Deptids-To-Rollup

FROM PSTREENODE TN
WHERE TN.SETID = $rollup_cntl_setid
  AND TN.TREE_NAME = 'DEPT_SECURITY'
  AND TN.TREE_NODE = $rollup_cntl_deptid
  AND TN.EFFDT = (SELECT MAX(TN1.EFFDT) FROM PSTREENODE TN1
                  WHERE TN1.SETID = TN.SETID
                    AND TN1.TREE_NAME = TN.TREE_NAME
                    AND TN1.TREE_NODE = TN.TREE_NODE
                    AND TN1.EFFDT <= $rollup_cntl_asofdate)
end-SELECT

end-procedure ROLLUP-SPECIFIC



!********************************************************************
! ROLLUP-ALL
! Selects node information for highest dept level in the tree.
!********************************************************************
begin-procedure ROLLUP-ALL
begin-SELECT DISTINCT
TREENODE.TREE_NODE
TREENODE.TREE_NODE_NUM
TREENODE.TREE_NODE_NUM_END
TREENODE.TREE_LEVEL_NUM

   let $rollup_cntl_deptid = rtrim(substr(&TREENODE.TREE_NODE,1,10),' ')
   let #rollup_cntl_tree_end = &TREENODE.TREE_NODE_NUM_END
   let #rollup_cntl_tree_val = &TREENODE.TREE_NODE_NUM
   let #rollup_cntl_highest_level = &TREENODE.TREE_LEVEL_NUM
   let #rollup_cntl_curr_level = &TREENODE.TREE_LEVEL_NUM

   do Get-Dept-Name
   do {rollup_return}

   do Get-All-Deptids-To-Rollup


FROM PSTREENODE TREENODE
WHERE TREENODE.SETID = $rollup_cntl_setid
  AND TREENODE.TREE_NAME = 'DEPT_SECURITY'
  AND TREENODE.TREE_NODE_NUM = 1
  AND TREENODE.EFFDT = (SELECT MAX(TREENODE1.EFFDT) FROM PSTREENODE TREENODE1
                  WHERE TREENODE1.SETID = TREENODE.SETID
                    AND TREENODE1.TREE_NAME = TREENODE.TREE_NAME
                    AND TREENODE1.TREE_NODE = TREENODE.TREE_NODE
                    AND TREENODE1.EFFDT <= $rollup_cntl_asofdate)
end-SELECT

end-procedure ROLLUP-ALL



!********************************************************************
! GET-ALL-DEPTIDS-TO-ROLLUP
! Return all dept ids to roll up (with security)
!********************************************************************
begin-procedure GET-ALL-DEPTIDS-TO-ROLLUP

let #node_found = 1

while #node_found

let #node_found = 0

begin-SELECT
TN2.SETID
TN2.TREE_NODE
TN2.TREE_NODE_NUM
TN2.TREE_LEVEL_NUM

   let #rollup_cntl_tree_val = &TN2.TREE_NODE_NUM
   let #rollup_cntl_curr_level = &TN2.TREE_LEVEL_NUM
   let $rollup_cntl_deptid = rtrim(substr(&TN2.TREE_NODE,1,10),' ')

   do Get-Dept-Name

   let #node_found = 1

   do {rollup_return}


FROM PSTREENODE TN2
WHERE TN2.SETID = $rollup_cntl_setid
  AND TN2.TREE_NAME = 'DEPT_SECURITY'
  AND TN2.EFFDT = (SELECT MAX(TN3.EFFDT) FROM PSTREENODE TN3
                    WHERE TN3.SETID = TN2.SETID
                      AND TN3.TREE_NAME = TN2.TREE_NAME
                      AND TN3.EFFDT <= $rollup_cntl_asofdate)
  AND TN2.TREE_NODE_NUM <= #rollup_cntl_tree_end
  AND TN2.TREE_NODE_NUM = (SELECT MIN(TN4.TREE_NODE_NUM) FROM PSTREENODE TN4
                            WHERE TN4.SETID = TN2.SETID
                              AND TN4.TREE_NAME = TN2.TREE_NAME
                              AND TN4.EFFDT = TN2.EFFDT
                              AND TN4.TREE_NODE_NUM > #rollup_cntl_tree_val)
  AND TN2.TREE_LEVEL_NUM > #rollup_cntl_highest_level
end-SELECT


end-while

end-procedure GET-ALL-DEPTIDS-TO-ROLLUP



!********************************************************************
! GET-DEPT-NAME
! Get department title
!********************************************************************
begin-procedure GET-DEPT-NAME
let $rollup_cntl_deptname = ' '

begin-SELECT
DEPT.DESCR

   let $rollup_cntl_deptname = &DEPT.DESCR

FROM PS_DEPT_TBL DEPT
WHERE DEPT.SETID = $rollup_cntl_setid
  AND DEPT.DEPTID = $rollup_cntl_deptid
  AND DEPT.EFFDT = (SELECT MAX(DEPT1.EFFDT) FROM PS_DEPT_TBL DEPT1
                     WHERE DEPT1.SETID = DEPT.SETID
                       AND DEPT1.DEPTID = DEPT.DEPTID
                       AND DEPT1.EFFDT <= $AsofToday)
end-SELECT

end-procedure GET-DEPT-NAME

