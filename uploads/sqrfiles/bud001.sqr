!**************************************************
!  BUD001.SQR:  HRMS DEPARTMENT FTE REPORT        *
!**************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
! Report Description: This report captures the variance, between FTE   *
! Caps and FTE actuals.  The user enters a Department ID, From Date,   *
! Thru Date, and Output File.  The report calculates, for all dates,   *
! the actual FTE count.  This actual amount will be displayed along    *
! with the corresponding FTE cap as of that date.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:11:19:50                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!  $Last Modified : May 12 2000 System testing                         *
!***********************************************************************
! This program is specific to HRMS for Public Sector.                  *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#include 'setup32.sqc'   !Landscape Setup
!***********************************************************************
begin-report

  do HOUSEKEEPING
  do MAINLINE
  do WRAPUP

end-report

begin-heading 7
       #include 'stdhtr08.sqc'  ! for standard heading                !F-LPARKER-125 (CAMI)
       print '' (+1,,)
       print $BUD001_SETID (+1,1,)                                    !F-LPARKER-125 (CAMI)
       print $SetID        (,+2,)
       print $BUD001_DEPT  (,+5,)                                     !F-LPARKER-125 (CAMI)
       print $DeptName     (,+2,)
       print $BUD001_FTE   (5,,) center                               !F-LPARKER-125 (CAMI)
       print $BUD001_DATE  (+3,1,)                                    !F-LPARKER-125 (CAMI)
end-heading

begin-footing 1
        print $BUD001_FOOT_C   (1,1,)                                 !F-LPARKER-125 (CAMI)
        print $BUD001_FOOT_A   (1,+9,)                                !F-LPARKER-125 (CAMI)
        print $BUD001_FOOT_U   (1,+9,)                                !F-LPARKER-125 (CAMI)
        print $BUD001_FOOT_F   (1,+9,)                                !F-LPARKER-125 (CAMI)
        print $BUD001_FOOT_B   (1,+9,)                                !F-LPARKER-125 (CAMI)
        print $BUD001_FOOT_O   (1,+9,)                                !F-LPARKER-125 (CAMI)
end-footing

!***********************************************************************
! F-LPARKER-125 (CAMI)                                                 *
! Read language-dependent text from the database using BUD001 program  *
! id.                                                                  *
!***********************************************************************
begin-procedure REPORT-TRANSLATION

  let $language_cd = $PRCS_LANGUAGE_CD
  do Init_Report_Translation($ReportID,$Language_Cd)

  do Get_Field_Information ('BUD001', 'BOTH_ACT',     $BUD001_TOTAL_ACT,   #DW)
  do Get_Field_Information ('BUD001', 'BOTH_CAP',     $BUD001_ALL_CAP,     #DW)
  do Get_Field_Information ('BUD001', 'CAP_ERROR',    $BUD001_CAP_ERROR,   #DW)
  do Get_Field_Information ('BUD001', 'CLASS_ACT',    $BUD001_CLASS_ACT,   #DW)
  do Get_Field_Information ('BUD001', 'CLASS_CAP',    $BUD001_CLASS_CAP,   #DW)
  do Get_Field_Information ('BUD001', 'DATE',         $BUD001_DATE,        #DW)
  do Get_Field_Information ('BUD001', 'DEL_ERROR',    $BUD001_DEL_ERROR,   #DW)
  do Get_Field_Information ('BUD001', 'DEPT',         $BUD001_DEPT,        #DW)
  do Get_Field_Information ('BUD001', 'FTE',          $BUD001_FTE,         #DW)
  do Get_Field_Information ('BUD001', 'FOOTING_A',    $BUD001_FOOT_A,      #DW)
  do Get_Field_Information ('BUD001', 'FOOTING_B',    $BUD001_FOOT_B,      #DW)
  do Get_Field_Information ('BUD001', 'FOOTING_C',    $BUD001_FOOT_C,      #DW)
  do Get_Field_Information ('BUD001', 'FOOTING_F',    $BUD001_FOOT_F,      #DW)
  do Get_Field_Information ('BUD001', 'FOOTING_O',    $BUD001_FOOT_O,      #DW)
  do Get_Field_Information ('BUD001', 'FOOTING_U',    $BUD001_FOOT_U,      #DW)
  do Get_Field_Information ('BUD001', 'JOB_ERROR',    $BUD001_JOB_ERROR,   #DW)
  do Get_Field_Information ('BUD001', 'KEY_VAL_HDG',  $BUD001_KEY_VALUES,  #DW)
  do Get_Field_Information ('BUD001', 'OPEN_ERROR',   $BUD001_OPEN_ERROR,  #DW)
  do Get_Field_Information ('BUD001', 'REPORT_END',   $BUD001_REPORT_END,  #DW)
  do Get_Field_Information ('BUD001', 'REPORT_TITLE', $REPORTTITLE,        #DW)
  do Get_Field_Information ('BUD001', 'SETID',        $BUD001_SETID,       #DW)
  do Get_Field_Information ('BUD001', 'UNCLASS_CAP',  $BUD001_UNCLASS_CAP, #DW)
  do Get_Field_Information ('BUD001', 'UNCLASS_ACT',  $BUD001_UNCLASS_ACT, #DW)

end-procedure

!***********************************************************************
! HOUSEKEEPING                                                         *
! This procedure performs the application initializations.  Formats    *
! variables for use.  Calls the procedures to get input parameters.    *
!***********************************************************************
begin-procedure HOUSEKEEPING

  move 'BUD001' to $ReportID                                          !F-LPARKER-125 (CAMI)
  do INIT-DATETIME
  do GET-CURRENT-DATETIME
  do STDAPI-INIT
  do SELECT-PARAMETERS
  do REPORT-TRANSLATION                                              !F-LPARKER-125 (CAMI)


  !***** Do not allow program to proceed if FileName is not present *****
  if $FileName = '' or $FileName = ' '
        let $err-statement1 = 'Output FileName Parameter not supplied'
        let $err-statement2 = '***** No Records were Processed **** '
        do error-display
        stop quiet
  end-if


  let #Array-Row = 0
  let #Add-to-Date = 1
  let #Max = 0

  let $OpenName = '{IMPORTPREFIX}' || $FileName || '{IMPORTSUFFIX}'

  open $OpenName as 1 for-writing record = 104 status = #filestat
        if #filestat !=0
           let $err-statement1 = 'BUD001.SQR, HOUSEKEEPING'           !F-LPARKER-125 (CAMI)
           let $err-statement2 = $BUD001_OPEN_ERROR||' '||$OpenName   !F-LPARKER-125 (CAMI)
           do error-display
           stop quiet
        end-if

  let $DDate       = $BUD001_Date                                     !F-LPARKER-125 (CAMI)
  let $Class_Act   = $BUD001_Class_Act                                !F-LPARKER-125 (CAMI)
  let $Class_Cap   = $BUD001_Class_Cap                                !F-LPARKER-125 (CAMI)
  let $Unclass_Act = $BUD001_UnClass_Act                              !F-LPARKER-125 (CAMI)
  let $Unclass_Cap = $BUD001_UnClass_Cap                              !F-LPARKER-125 (CAMI)
  let $Both_Act    = $BUD001_Total_Act                                !F-LPARKER-125 (CAMI)
  let $Both_Cap    = $BUD001_All_Cap                                  !F-LPARKER-125 (CAMI)

  write 1 from  $DDate:11
                $Class_Act:18
                $Class_Cap:15
                $Unclass_Act:20
                $Unclass_Cap:17
                $Both_Act:13
                $Both_Cap:9

  create-array name=fte size=367  field=date:char
                                  field=Cactual:number
                                  field=Ccap:number
                                  field=Uactual:number
                                  field=Ucap:number
                                  field=Bactual:number
                                  field=Bcap:number

  do CONVERT-TO-DTU-DATE($FromDate, $D_FromDate)
  let $DDate =  $D_FromDate

  do CONVERT-TO-DTU-DATE($ThruDate, $D_ThruDate)

end-procedure HOUSEKEEPING

!***********************************************************************
!GET-VALUES                                                            *
!***********************************************************************
begin-procedure GET-VALUES

        do GET-FROM-THRU-DATE

        do GET-SETID

        do GET-DEPTID

        do GET-DEPARTMENT-NAME-WITH-SETID

        do GET-FILENAME

end-procedure GET-VALUES


!***********************************************************************
! MAINLINE                                                             *
! This procedure is the main processing paragraph.  It performs        *
! application specific record processing.                              *
!***********************************************************************

begin-procedure MAINLINE

  while $DDate <= $D_ThruDate

        do INIT-SAVE-VARIABLES

        let $Class_Indc = 'C'

        do SELECT-FTE-VALUES    !Find the Classified Actual FTE total
                                !and the corresponding Cap*

        let $Class_Indc = 'U'

        do SELECT-FTE-VALUES    !Find the Unclassified Actual FTE total
                                !and the corresponding Cap*

        let $Class_Indc = '%'

        do SELECT-FTE-VALUES    !Find the Total Actual FTE and the
                                !corresponding Cap*

        do CONVERT-FROM-DTU-DATE($DDate, $T_Date)
        do INSERT-ARRAY
        do WRITE-FILE


        let #Array-Row = #Array-Row + 1

        do DTU-ADD-DAYS($DDate, #Add-to-Date, $DTUAfterAddDays)
        let $DDate = $DTUAfterAddDays

  end-while

  do PRINT-PROCESS

end-procedure MAINLINE

!***********************************************************************
!INIT-SAVE-VARIABLES                                                   *
!***********************************************************************

begin-procedure INIT-SAVE-VARIABLES

  let $Class_Act = ' '
  let $Unclass_Act = ' '
  let $Both_Act = ' '
  let $Class_Cap = ' '
  let $Unclass_Cap = ' '
  let $Both_Cap = ' '

  let #Class_Act = 0
  let #Unclass_Act = 0
  let #Both_Act = 0
  let #Class_Cap = 0
  let #Unclass_Cap = 0
  let #Both_Cap = 0

end-procedure INIT-SAVE-VARIABLES


!***********************************************************************
!PRINT-PROCESS                                                         *
!***********************************************************************

begin-procedure PRINT-PROCESS

   let #Split = 1

   while (#Max / #Split) > 100
      let #Split = #Split + 1
   end-while

   do PRINT-REPORT

end-procedure PRINT-PROCESS


!***********************************************************************
!PRINT-REPORT                                                          *
!***********************************************************************

begin-procedure PRINT-REPORT

  let $C_String = rpad ($C_String,100,'C')
  let $A_String = rpad ($A_String,100,'A')
  let $U_String = rpad ($U_String,100,'U')
  let $F_String = rpad ($F_String,100,'F')
  let $B_String = rpad ($B_String,100,'B')
  let $O_String = rpad ($O_String,100,'O')

  let #PrintCounter = 0
  while #PrintCounter < #Array-Row

        do GET-ARRAY

        let #Class_Length_Cap = round ((#Class_Cap / #Split),0)
        let #Class_Length_Act = round ((#Class_Act / #Split),0)
        let #Unclass_Length_Cap = round ((#Unclass_Cap / #Split),0)
        let #Unclass_Length_Act = round ((#Unclass_Act / #Split),0)
        let #Both_Length_Cap = round ((#Both_Cap / #Split),0)
        let #Both_Length_Act = round ((#Both_Act / #Split),0)

        if #Class_Length_Cap = 0
                let #Class_Length_Cap = 1
        end-if

        if #Class_Length_Act = 0
                let #Class_Length_Act = 1
        end-if

        if #Unclass_Length_Cap = 0
                let #Unclass_Length_Cap = 1
        end-if

        if #Unclass_Length_Act = 0
                let #Unclass_Length_Act = 1
        end-if

        if #Both_Length_Cap = 0
                let #Both_Length_Cap = 1
        end-if

        if #Both_Length_Act = 0
                let #Both_Length_Act = 1
        end-if


        do Format-DateTime ($T_Date, $Printout, {DEFCMP},'','')

        extract $Cent_Year from $Printout 0 4
        extract $Month from $Printout 4 2
        extract $Day from $Printout 6 2

        let $Printout = ($Month ||'/'|| $Day ||'/'|| $Cent_Year)

        print $Printout (+2,1,)
        let $Print_C = substr ($C_String,1,#Class_Length_Cap)
        let $Print_A = substr ($A_String,1,#Class_Length_Act)
        let $Print_U = substr ($U_String,1,#Unclass_Length_Cap)
        let $Print_F = substr ($F_String,1,#Unclass_Length_Act)
        let $Print_B = substr ($B_String,1,#Both_Length_Cap)
        let $Print_O = substr ($O_String,1,#Both_Length_Act)

        print $Print_C (,20,)
        print '(' (,+1,)
        print #Class_Cap ()
        print ')' ()

        print $Print_A (+1,20,)
        print '(' (,+1,)
        print #Class_Act () EDIT 0.999999
        print ')' ()

        print $Print_U (+1,20,)
        print '(' (,+1,)
        print #Unclass_Cap ()
        print ')' ()

        print $Print_F (+1,20,)
        print '(' (,+1,)
        print #Unclass_Act () EDIT 0.999999
        print ')' ()

        print $Print_B (+1,20,)
        print '(' (,+1,)
        print #Both_Cap ()
        print ')' ()

        print $Print_O (+1,20,)
        print '(' (,+1,)
        print #Both_Act () EDIT 0.999999
        print ')' ()

        let #PrintCounter = #PrintCounter + 1

  end-while
print $BUD001_REPORT_END (+3,,)center                                 !F-LPARKER-125 (CAMI)

end-procedure PRINT-REPORT

!***********************************************************************
!SELECT-FTE-VALUES                                                     *
!***********************************************************************

begin-procedure SELECT-FTE-VALUES

   do CONVERT-FROM-DTU-DATE($DDate, $T_Date)
   let #FTE = 0

   let $err-statement1 = 'BUD001.SQR, SELECT-FTE-VALUES, '||          !F-LPARKER-125 (CAMI)
                         $BUD001_JOB_ERROR                            !F-LPARKER-125 (CAMI)
   let $err-statement2 = $BUD001_KEY_VALUES||' '||'JobCode '||        !F-LPARKER-125 (CAMI)
                         $JOBCODE||', Effdt '||$Effdt                 !F-LPARKER-125 (CAMI)

begin-SELECT
JOB1.SETID_DEPT
JOB1.DEPTID
JOB1.FTE   &FTE

  add &FTE to #fte

FROM PS_JOB JOB1
WHERE JOB1.SETID_DEPT = $SetID
  AND JOB1.DEPTID IN (SELECT BUDDEP.DEPTID FROM PS_DEPT_TBL BUDDEP
                     WHERE BUDDEP.SETID = $SetID
                       AND BUDDEP.BUDGET_DEPTID = $DeptID
                       AND BUDDEP.EFFDT = (SELECT MAX(BUDDEP1.EFFDT) FROM PS_DEPT_TBL BUDDEP1
                                           WHERE BUDDEP1.SETID = BUDDEP.SETID
                                             AND BUDDEP1.DEPTID = BUDDEP.DEPTID
                                             AND BUDDEP1.EFFDT <= $T_Date)
                       AND BUDDEP.EFF_STATUS = 'A')
  AND JOB1.ADDS_TO_FTE_ACTUAL = 'Y'
  AND JOB1.CLASS_INDC LIKE $Class_Indc
  AND JOB1.EFFDT =
      (SELECT MAX(JOB2.EFFDT)
       FROM PS_JOB JOB2
       WHERE JOB2.EMPLID    = JOB1.EMPLID
         AND JOB2.EMPL_RCD = JOB1.EMPL_RCD
         AND JOB2.EFFDT    <= $T_Date)
  AND JOB1.EFFSEQ =
      (SELECT MAX(JOB3.EFFSEQ)
       FROM PS_JOB JOB3
       WHERE JOB3.EMPLID    = JOB1.EMPLID
         AND JOB3.EMPL_RCD = JOB1.EMPL_RCD
         AND JOB3.EFFDT     = JOB1.EFFDT)
end-SELECT


   if $Class_Indc='C'
     let #Class_Act = #FTE
   else
     if $Class_Indc = 'U'
        let #Unclass_Act = #FTE
     else
        let #Both_Act = #FTE
     end-if
   end-if

   if #FTE > #Max
      let #Max = #FTE
   end-if

   if $Class_Indc = '%'
     let $Class_Indc = 'B'
   end-if

   let #Cap = 0

   let $err-statement1 = 'BUD001.SQR, SELECT-FTE-VALUES, '||          !F-LPARKER-125 (CAMI)
                         $BUD001_CAP_ERROR                            !F-LPARKER-125 (CAMI)
   let $err-statement2 = $BUD001_KEY_VALUES || ' ' ||'Cap-Info '||    !F-LPARKER-125 (CAMI)
                         $Class_Indc||', Effdt '||$Effdt              !F-LPARKER-125 (CAMI)

begin-SELECT
CAP1.FTE_CAP    &CAP

  let #Cap = &CAP

FROM PS_DEPT_FTE_CAP CAP1
WHERE CAP1.SETID = $SetID
  AND CAP1.DEPTID = $Deptid
  AND CAP1.CLASS_INDC = $Class_Indc
  AND CAP1.EFFDT =
      (SELECT MAX(CAP2.EFFDT)
       FROM PS_DEPT_FTE_EFFDT CAP2
       WHERE CAP2.SETID  = CAP1.SETID
         AND CAP2.DEPTID = CAP1.DEPTID
         AND CAP2.FISCAL_YEAR = CAP1.FISCAL_YEAR
         AND CAP2.EFFDT <= $T_Date)
  AND EXISTS
      (SELECT 'X'
       FROM PS_DEPT_FTE_EFFDT CAP3
       WHERE CAP3.SETID = CAP1.SETID
         AND CAP3.DEPTID = CAP1.DEPTID
         AND CAP3.FISCAL_YEAR = CAP1.FISCAL_YEAR
         AND CAP3.EFFDT = CAP1.EFFDT
         AND CAP3.EFF_STATUS = 'A')
end-SELECT

   if $Class_Indc ='C'
     let #Class_Cap = #CAP
   else
     if $Class_Indc = 'U'
       let #Unclass_Cap = #CAP
     else
       let #Both_Cap = #CAP
     end-if
   end-if

   if #Cap > #Max
      let #Max = #Cap
   end-if

end-procedure SELECT-FTE-VALUES


!***********************************************************************
!INSERT-ARRAY                                                          *
!***********************************************************************

begin-procedure INSERT-ARRAY

   put $T_Date   #Class_Act   #Class_Cap
       #Unclass_Act #Unclass_Cap #Both_Act #Both_Cap
   into fte(#Array-Row) date Cactual Ccap
       Uactual Ucap Bactual Bcap

end-procedure INSERT-ARRAY


!***********************************************************************
!GET-ARRAY                                                             *
!***********************************************************************

begin-procedure GET-ARRAY

   get $T_Date   #Class_Act   #Class_Cap
       #Unclass_Act #Unclass_Cap #Both_Act #Both_Cap
   from fte(#PrintCounter) date Cactual Ccap
       Uactual Ucap Bactual Bcap

end-procedure GET-ARRAY


!***********************************************************************
!WRITE-FILE                                                            *
!***********************************************************************

begin-procedure WRITE-FILE

   move #Class_Act to $Class_Act     999999.99
   move #Class_Cap to $Class_Cap     999999.99
   move #Unclass_Cap to $Unclass_Cap 999999.99
   move #Unclass_Act to $Unclass_Act 999999.99
   move #Both_Cap to $Both_Cap       999999.99
   move #Both_Act to $Both_Act       999999.99

   write 1 from  $T_Date:11
                 $Class_Act:18
                 $Class_Cap:15
                 $Unclass_Act:20
                 $Unclass_Cap:17
                 $Both_Act:13
                 $Both_Cap:9

end-procedure WRITE-FILE


!***********************************************************************
! WRAPUP                                                               *
! This paragraph ends the report process and updates the status of the *
! job in the process scheduler.                                        *
!***********************************************************************
begin-procedure WRAPUP

  do DEL-RUNCTL
  do STDAPI-TERM

end-procedure WRAPUP


!**********************************************************************
! DEL-RUNCTL
! This paragraph deletes the Run Controls and Budget level indicator
! rows from PS_RUN_CNTL_BDGT & PS_BUDGET_SORT
!**********************************************************************
begin-procedure DEL-RUNCTL

  let $err-statement1 = 'BUD001, DEL-RUNCTL, '||$BUD001_DEL_ERROR     !F-LPARKER-125 (CAMI)
  let $err-statement2 = $BUD001_KEY_VALUES||                          !F-LPARKER-125 (CAMI)
                        ' TABLE PS_RUN_CNTL_BDGT'||                   !F-LPARKER-125 (CAMI)
                        ', OPRID ' || $PRCS_OPRID ||
                        ', RUN_CNTL_ID ' || $PRCS_RUN_CNTL_ID


begin-SQL On-Error=Error-Display
  DELETE FROM PS_RUN_CNTL_BDGT
         WHERE OPRID = $PRCS_OPRID
           AND RUN_CNTL_ID = $PRCS_RUN_CNTL_ID;
end-SQL

  do Commit-Transaction

end-procedure DEL-RUNCTL


!***********************************************************************
! SQCs                                                                 *
!***********************************************************************
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'stdapi.sqc'    !Update Process API
#Include 'btrnctl1.sqc'  !Get run control parameters.  This will change
                         !depending on the type of report you are running
                         !and which type of parameters are being used to
                         !run the report.  Other versions are hrrunctl2.sqc,
                         !bnrunctl.sqc, payrnctl.sqc, and taxrnctl.sqc
#Include 'btgetval.sqc'  !Formats run control parameters.  This will also
                         !change as the above sqc changes.  Other versions
                         !are bngetval.sqc and cbgetval.sqc.
#Include 'datemath.sqc'
#Include 'askftd.sqc'    !calls prompt for entry of from-thru date
#Include 'getdptnm.sqc'
#Include 'stderror.sqc'  !Routine for error display
#Include 'tranctrl.sqc'  !Transaction control (commits, etc.)
#Include 'getcodta.sqc'  !Get-Company-Data                              !F-LPARKER-125 (CAMI)
#Include 'getpgdta.sqc'  !Get-Paygroup-Data                             !F-LPARKER-125 (CAMI)
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language       !F-LPARKER-125 (CAMI)
