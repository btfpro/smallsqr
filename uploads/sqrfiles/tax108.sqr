!***********************************************************************
!  TAX108 : W4 - EMPLOYEE WITHHOLDING ALLOWANCE PRINT REPORT.          *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/06/22:12:30:46                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  716886                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set Database Environment
#include 'setup31.sqc'   !Printer and page-size initialization

begin-report
  do Stdapi-Init
  move 'TAX108' to $ReportID
  move 'EMPLOYEE W4 PRINT REPORT' to $ReportTitle
  display $ReportTitle
  display ''

  do Get-Run-ID

  do Get-From-Thru-Date

  move ' ' to $SelectedDates
  if $FromDate <> ' '
     move 'AND W4.LAST_UPDATE_DATE BETWEEN ' to $SelectedDates
     let $SelectedDates = $SelectedDates || $FromDate || ' AND ' || $ThruDate
  end-if
  do Init-DateTime
  do Get-Current-DateTime
  do Format-DateTime($AsOfToday, $out, {DEFMDY},'','')
  move $out to $ReportDate
  display 'Report Began: ' noline
  display $AsOfNow
  display ''

  do Format-DateTime($Fromdate, $FmDate, {DEFMDY},'','')
  do Format-DateTime($ThruDate, $TuDate, {DEFMDY},'','')

  print 'W4(s) updated via the web from ' (+1,1)
  print $FmDate ()
  print '  to  '  ()
  print $TuDate ()
  do Check-Processing
  do Get-W4Print

  do Get-Current-DateTime
  display ''
  display 'Report Ended: ' noline
  display $AsOfNow
  do Stdapi-Term
end-report

begin-procedure Get-Run-ID
  move ' ' to $FromDate
  move ' ' to $ThruDate
  if $Prcs_Process_Instance = ''
     do Prompt
  else

    do Select-Parameters
  end-if
end-procedure


Begin-Procedure Prompt

while 1 = 1
    input $RunID maxlen=3 'Enter Valid Run ID' type=char

    if RTRIM($RunID, ' ') = ''
      display 'Exiting....'
      Stop
    end-if

    do edit-Run

    if $Break_YN = 'Y'
      Break
    End-If
End-While

End-Procedure


begin-procedure Edit-Run

  move 0 to #Found


begin-select

Z.FROMDATE
Z.THRUDATE


  add 1 to #Found

FROM PS_RC_PAY Z
where Z.RUN_CNTL_ID = $RunID
end-select
  if #Found = 0
    display 'Error --  Not a Valid Run ID.'
    move 'N' to $Break_YN
  else

    if #Found = 1
    move 'Y' to $Break_YN

         Let $RC_PAY.FROMDATE = &Z.FROMDATE
         Let $RC_PAY.THRUDATE = &Z.THRUDATE

    end-if

  end-if
end-procedure


begin-procedure Get-W4Print
  display 'Generating report . . . '


begin-SELECT
W4.EMPLID
W4.FWT_MAR_STATUS
W4.FWT_ALLOWANCES
W4.FWT_ADDL_AMT
W4.SPECIAL_FWT_STATUS
W4.W4_NAME_CHECK
W4.COMPANY
W4.EFFDT
PERS.LAST_NAME
PERS.FIRST_NAME
PERS.MIDDLE_NAME
ADDR.ADDRESS1
ADDR.ADDRESS2
ADDR.ADDRESS3
ADDR.ADDRESS4
ADDR.CITY
ADDR.STATE
ADDR.POSTAL
NID.NATIONAL_ID

  do Get-Employer-Data
  move &W4.EMPLID              to $Emplid
  move &W4.FWT_ALLOWANCES      to #Fwt_Allowances
  move &W4.FWT_ADDL_AMT        to #Fwt_Addl_Amt
  move &W4.EFFDT               to $Effdt

  if rtrim(&W4.W4_NAME_CHECK, ' ') = 'Y'
     let $NameCheck = 'Yes'
  else
     let $NameCheck = 'No '
  end-if

  let $FieldName    = 'FWT_MAR_STATUS'
  let $FieldValue   = &W4.FWT_MAR_STATUS
  do Read-Translate-Table
  let $Fwt_Mar_Status = $XLatShortName

  let $FieldName    = 'SPECIAL_FWT_STATUS'
  let $FieldValue   = &W4.SPECIAL_FWT_STATUS
  do Read-Translate-Table
  let $Special_Fwt_Status = $XLatShortName
  let $MiddleInit = substr(&PERS.MIDDLE_NAME, 1,1)

  let $FirstName = rtrim(&PERS.FIRST_NAME,' ') || ' ' || $MiddleInit
  let $LastName = rtrim (&PERS.LAST_NAME, ' ')
  let $Address1 = rtrim(&ADDR.ADDRESS1, ' ')
  let $Address2 = rtrim(&ADDR.ADDRESS2, ' ')
  let $Address3 = rtrim(&ADDR.ADDRESS3, ' ')
  let $Address4 = rtrim(&ADDR.ADDRESS4, ' ')
  let $CityStateZip = Rtrim(&ADDR.CITY, ' ') ||', '|| Rtrim(&ADDR.STATE, ' ') || '  ' || Rtrim(&ADDR.POSTAL, ' ')
  let $SSN = &NID.NATIONAL_ID
  let $AsOfDate = &W4.EFFDT
  do Get-Date-Codes

  do Print-W4Print

FROM PS_FED_TAX_DATA  W4, PS_PERSON_NAME PERS, PS_PERS_NID NID, PS_PERSON_ADDRESS ADDR
WHERE W4.EMPLID = PERS.EMPLID
  [$SelectedEEs]
  AND W4.LAST_UPDATE_DATE BETWEEN $FromDate AND $ThruDate
  AND W4.EMPLID = ADDR.EMPLID
  AND ADDR.ADDRESS_TYPE = 'HOME'
  AND ADDR.ASOFDATE = (SELECT MAX(ADDR2.ASOFDATE) 
                              FROM PS_PERSON_ADDRESS ADDR2
                              WHERE ADDR.EMPLID = ADDR2.EMPLID
                                AND ADDR.ADDRESS_TYPE = ADDR2.ADDRESS_TYPE)
  AND W4.LAST_ACTION = 'W'
  AND W4.EMPLID=NID.EMPLID


end-SELECT
  display 'Done'
  do Delete-Sel-Employees-Table
end-procedure

Begin-procedure Get-Employer-Data
Begin-Select
A.W2_REPORTING_CO
A.DESCR
A.FEDERAL_EIN
A.ADDRESS1
A.ADDRESS2
A.CITY
A.STATE
A.POSTAL

  let $Company = &A.W2_Reporting_Co
  let $CompanyName = &A.Descr
  let $FederalEIN = &A.Federal_EIN
  let $ERAddress1 = rtrim(&A.Address1, ' ')
  let $ERAddress2 = rtrim(&A.Address2, ' ')
  let $ERCity = &A.City
  let $ERState = &A.State
  let $ERPostal = &A.Postal

  let $ERCityStateZip = Rtrim($ERCity, ' ') ||', '|| Rtrim($ERState, ' ') || '  ' || Rtrim($ERPostal, ' ')

FROM  PS_W2_COMPANY A
WHERE A.W2_REPORTING_CO = A.COMPANY
  AND A.COMPANY = &W4.COMPANY
  AND A.W2_REPORTING_CO <> ' '
  AND A.TAXFORM_ID      =  'W'
  AND A.CALENDAR_YEAR   = (SELECT MAX(CALENDAR_YEAR)
                              FROM PS_W2_COMPANY A1
                              WHERE A.COMPANY=A1.COMPANY
                                AND A.W2_REPORTING_CO = A1.W2_REPORTING_CO)
end-select

End-procedure

Begin-Procedure Print-W4Print

  new-page

  print 'EMPLID '                                    (+1,1)
  print $Emplid                                       (0,10)
  print 'FORM W-4'                                   (+5,1)
  print 'Employee Withholding Allowance Certificate ' (0,25)
  print 'Year '                                       (0,75)
  print $AsOfYYYY                                     (0,82)
  print '1. First name and middle initial '          (+2,1)
  print 'LastName '                                   (0,50)
  print '2.  Social Security Number '                 (0,80)
  print $FirstName                                   (+2,10)
  print $LastName                                    (0,50)
  print $SSN                                         (0,90)   edit xxx-xx-xxxx
  print 'Home Address '                              (+2,1)
  print '3.  Marital Status '                         (0,80)
  print $Address1                                    (+2,7)
  print $Fwt_Mar_Status                               (0,90)
  if $Address2 > ''
    print $Address2                                  (+1,7)
  end-if
  if $Address3 > ''
    print $Address3                                  (+1,7)
  end-if
  if $Address4 > ''
    print $Address4                                  (+1,7)
  end-if
  print 'City, State, ZIP Code ' (+2,1)
  print '4.  If your last name differs from that '    (0,80)
  print '    shown on your social security '         (+1,80)
  print $CityStateZip            (+1,7)
  print '    card, check here.  You must call '       (0,80)
  print '    1-800-772-1213 for a new card.'         (+1,80)
  print $NameCheck                                    (0,120)
  print '5.  Total number of allowances you are claiming ' (+2,1)
  print #Fwt_Allowances                               (0,80) edit 99
  print '6.  Additional amount, if any, you want withheld from each paycheck '  (+2,1)
  print #Fwt_Addl_Amt                                 (0,81)
  print '7.  I claim exemption from withholding for ' (+2,1)
  print $AsOfYYYY                                     (0,44)
  print 'and I certify that I meet both of the following conditions for exemption:' (+1,10)
  print '    Last year I had a right to a refund of all Federal Income tax ' (+2,1)
  print 'withheld because I had no tax liabilility and' (0,67)
  print '    This year I expect a refund of all Federal Income Tax withheld '  (+2,1)
  print 'because I expect to have no tax liability. '                      (0,68)
  print 'If you meet both conditions, write Exempt here '                  (+2,1)
  if rtrim(&W4.SPECIAL_FWT_STATUS, ' ') = 'G'
    print 'EXEMPT'                                                         (0,50)
  else
    print '       '                                                        (0,50)
  end-if

  print 'Effective Date '                              (0,80)
  print $Effdt                                         (0,96)
  print 'Employee Signature - Updated via Web'        (+2,1)
  print '8.  Employers name and address                   9.  Office code ' (+2,1)
  print '10.  Employer Identification Number (EIN) '   (0,79)
  print $CompanyName                                  (+2,10)
  print $FederalEIN                                    (0,85) edit 999999999
  print $ERAddress1                                   (+2,10)
  if $ERAddress2 > ''
     print $ERAddress2                                (+1,10)
  end-if
  print $ERCityStateZip                               (+1,10)

End-Procedure

Begin-Procedure Check-Processing

begin-SELECT

RC_W4A.REG_SELECT_PROC

FROM  PS_RC_TAX108A RC_W4A
WHERE RC_W4A.OPRID               = $Prcs_OprID
AND   RC_W4A.RUN_CNTL_ID         = $Prcs_Run_Cntl_ID

end-SELECT

  let $Reg_Select_Proc     = RTRIM(&RC_W4A.Reg_Select_Proc, ' ')

  if $Reg_Select_Proc = 'S'                                     !Load W-4 data for selected employees
    do Get-Selected-EEs
  end-if


End-Procedure

Begin-Procedure Get-Selected-EEs

move 'AND W4.EMPLID in (''' to $SelectedEEs
move ' ' to $SelectedEmplID

begin-SELECT
X.SELECTED_EE

  move &X.Selected_EE     to $SelectedEmplID

  let $SelectedEEs = $SelectedEEs || $SelectedEmplID || ''','''
  move 'Y' to $EE_Selected

FROM  PS_RC_TAX108B X
WHERE X.OPRID         = $Prcs_OprID
  AND X.RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
end-SELECT

let $SelectedEEs = SUBSTR($SelectedEEs,1,LENGTH($SelectedEEs) - 2)
let $SelectedEEs = $SelectedEEs || ')'

End-Procedure

Begin-Procedure Delete-Sel-Employees-Table
begin-SQL on-error=Ignore
  DELETE FROM PS_RC_TAX108B
  WHERE OPRID       = $Prcs_OprID
    AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID

end-SQL
End-Procedure

begin-procedure Ignore
! dummy procedure to avoid SQL error message on delete of empty table
end-procedure
#include 'getdatcd.sqc'  !Get Year from As of date
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'stdapi.sqc'    !Update Process API
#include 'payrctl2.sqc'  !Select Run Control Parameters
#include 'pygetval.sqc'  !To Get as Of date
#include 'readxlat.sqc'  !Read-Translate-Table procedure
#include 'number.sqc'    !Format numbers
