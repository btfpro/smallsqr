!***********************************************************************
!  RSI960US:  Create W-2 Print File                                    *
!***********************************************************************
!***********************************************************************
! Rimini Street Modification Log                                       *
!                                                                      *
!  08/13/2015 RSI-HCM105079  v1.2                                      *
!  Descr: Create new W-2 Print File Program                            *
!                                                                      *
!  10/19/2015 RSI-HCM105271  v2.0                                      *
!  Descr: Correction to RSI960US-W2-Sort procedure                     *
!                                                                      *
!  11/12/2015 RSI-HCM105287  v3.0                                      *
!  Descr: Defined the print position for 14C and 14H                   *
!                                                                      *
!  12/04/2015 RSI-HCM105391  v4.1                                      *
!  Descr: Correction to RSI960US-Read-States procedure                 *
!         Improved Box 12 Error Handling                               *
!         Corrected Program Version numbers                            *
!         Reduced Box 14 text size from 7 to 5                         *
!         Execute Rsi960us-Read-States for all App. Release            *
!                                                                      *
!  06/21/2016 RSI-HCM105480  v5.0                                      *
!  Descr: Truncate SSN using the format XXX-XX-####                    *
!                                                                      *
!  09/08/2016 RSI-HCM105788  v6.0                                      *
!  Descr: Changes related to XMLP Box 14 setup                         *
!                                                                      *
!  06/21/2016 RSI-HCM105763  v7.0                                      *
!  Descr:  Print OH Local SD Box 18 Wages,19 Tax and 20 Locality Name  *
!                                                                      *
!  10/24/2016 RSI-HCM105895  v8.0                                      *
!  Descr:  Correct mods from HCM105480 to apply only for tax years     *
!          2017 or later.                                              *
!                                                                      *
!  12/08/2016  RSI-HCM106080 v9.0                                      *
!  Descr:  Correction to Viewing Date.                                 *
!                                                                      *
!  12/22/2016  RSI-HCM106110 v10.0                                     *
!  Descr:  Correction to print 4th address line of company             *
!                                                                      *
!  12/29/2016  RSI-HCM106125 v11.0                                     *
!  Descr:  Truncate SSN using format XXX-XX-#### in XMLP               *
!                                                                      *
!***********************************************************************

#Include 'rsicdver.sqc' ! Client Specific PeopleSoft Application Information
#Include 'setenv.sqc'   ! Set environment
#Include 'usarpt.sqc'   ! Get USA variables

#IfnDef IMPORTPREFIX
   #Define IMPORTPREFIX  {FILEPREFIX}
#EndIf

!#Define DebugA

!***********************************************************************
! Procedure Setup
!***********************************************************************
Begin-Setup

  #Define Prgm_Ver         '11.0'
  #Define ReportID         RSI960US
  #Define PRINTER_TYPE LINEPRINTER
  #Include 'setupdb.sqc'
  #Include 'prtforml.sqc'  ! Form Layout Selection (Edit to direct output to printer)

! The escape codes, unless otherwise noted, are for PCL-compatible printers
! being used as a line printer. If the printer you are using is not
! PCL-compatible, then these codes will not work as intended. Please refer
! to the user's manual for your printer to determine the correct codes.

  #IfnDef EBCDIC          ! If not running on IBM MVS or AS/400
     #If {PRINTER_TYPE} = 'LINEPRINTER'
        Declare-Printer LP-definition
                      Type = LINEPRINTER
               Init-String = <27>E<27>(0N<27>&l8D<27>&l0E<27>&l88F
        !                        |      |      |       |       |
        !                        |      |      |       |       |
        !                        |      |      |       |        --> 88 text lines
        !                        |      |      |        --> top margin = 0 lines
        !                        |      |       --> 8 lines per inch
        !                        |       --> ISO 8859-1 symbol set
        !                         --> Reset
        End-Declare
     #EndIf
  #Else                                ! EBCDIC Ports
     #If {PRINTER_TYPE} = 'LINEPRINTER'
        Declare-Printer LP-definition
                      Type = LINEPRINTER

        ! If you intend to download the output file created by SQR to print it on a
        ! PCL-compatible printer attached to an ASCII-based operating system, such as
        ! Windows or Unix, use the following escape codes.
        !
        ! Note: These codes may not work as intended If the output is copied to a
        !       printer defined as a directly-attached printer or a remote network
        !       printer, even If the printer is PCL-compatible
        !
        ! init-string=<39>E<39>(0N<39>&l8D<39>&l0E<39>&l88F
        !             |    |       |       |       |
        !             |    |       |       |        --> 88 text lines
        !             |    |       |        --> top margin = 0 lines
        !             |    |        --> 8 lines per inch
        !             |     --> ISO 8859-1 symbol set
        !              --> Reset
        !
        ! If you intend to copy the output file created by SQR to a printer defined as
        ! a directly-attached printer or a remote network printer on EBCDIC-based operating
        ! systems, such as MVS or OS/400, use this init-string
        !
        ! THIS IS THE DEFAULT FOR EBCDIC SYSTEMS
        !
          Init-String=<241>
        !                |
        !                 --> FCFC "1" for top of page
        !

        End-Declare
     #EndIf
  #EndIf

  #If {PRINTER_TYPE} = 'POSTSCRIPT'
     Declare-Printer PS-DEFINITION
                    Type       = {PRINTER_TYPE}
                    Point-Size = 12
                    Font       = 3     ! Courier font
     !
     ! add STARTUP-FILE=dir\filename to change the symbol set
     !
     End-Declare
  #EndIf

  #If {PRINTER_TYPE} = 'HPLASERJET'
     Declare-Printer HP-definition
                   Type       = {PRINTER_TYPE}
                   Symbol-Set = 0U
                   Point-Size = 12
                   Pitch      = 10
                   Font       = 3
     End-Declare
  #EndIf

  create-array
    name  = BOX14
    size  = 60
    field = BOX:char
    field = TEXT:char
    field = COLUMN:number
    field = AMOUNT:number

  create-array
    name  = LOCALS
    size  = 21
    field = LOCALITY:char
    field = TXGRS:number
    field = TAX:number

 create-array
    name  = LOCALS_OH
    size  = 21
    field = LOCALITY_NAME_OH:char
    field = LOCALITY_OH:char
    field = TXGRS_OH:number
    field = TAX_OH:number

  #Define Dyn-S [
  #Define Dyn-E ]

  #If {sqr-platform} = mvs
      #Define Dyn-S \
      #Define Dyn-E \
  #EndIf

  #If {sqr-platform} = as400
      #Define Dyn-S \
      #Define Dyn-E \
  #EndIf

End-Setup

!***********************************************************************
! Procedure Program
!***********************************************************************
Begin-Program

  Show 'Create W-2 Print File'
  let $Program_Info = '{ReportID}.SQR - Version ' || {Prgm_Ver} || ' on {sqr-platform}'
  Show $Program_Info
  Show '**************************************************'
  let $Start = edit(datenow(),'MM/DD/YYYY HH24:MI:SS')
  Show 'Report Started at : ' $Start
  Show ''

  do Rsi960us-Init-Report

  If $Prcs_Process_Instance <> ''
     do Select-US-Year-End-Parameters
     do Rsi960us-Convert-Parameters
  Else

     input $Prcs_OprID batch-mode
     input $Prcs_Run_Cntl_ID batch-mode

     If $Prcs_OprID = '' and $Prcs_Run_Cntl_ID = ''
        Show ''
        Show 'Report requires Operator ID and Run Control ID used on the Run Control Records to run.'
        Show ''
        STOP
     Else
        do Select-US-Year-End-Parameters
        do Rsi960us-Convert-Parameters
     End-If
  End-If

  move $Rc_Us_Ye.Reprint_Descr to $Reprint_Descr

  #If {RSI_APP_REL} >= 9.00
     If $Xmlpub = 'Y'
        do Rsi960us-Init-Report-XMLP
     End-If
  #EndIf

  If &TX.ALIGN_COUNT > 0 and $Xmlpub <> 'Y'
     do Rsi960us-Print-Alignment-Forms
  End-If

  let $MultiFormDescr = ' '

  If $Xmlpub <> 'Y'
     If $Reprint_Descr = 'R'
        move 'REISSUED STATEMENT' to $ReprintDescr
        move 'REISSUED '          to $ReprintDescr1
        move 'STATEMENT'          to $ReprintDescr2
     Else
        If $Reprint_Descr = 'C'
           move 'CORRECTED         ' to $ReprintDescr
           move 'CORRECTED'          to $ReprintDescr1
           move '         '          to $ReprintDescr2
        Else
           move '                  ' to $ReprintDescr
           move '         '          to $ReprintDescr1
           move '         '          to $ReprintDescr2
        End-If
     End-If
  End-If

  do Rsi960us-Report-File-Create

  If &TX.ALIGN_COUNT > 0
     add #Align_Count to #T_Count
  End-If

  If $EE_Selected = 'Y'
     do Rsi960us-Delete-Sel-Employees-Table
  End-If

  If $Company_Selected = 'Y'
     do Rsi960us-Delete-Sel-Company-Table
  End-If

  #If {RSI_APP_REL} > 8.31
     If $States_Selected = 'Y'
        do Rsi960us-Delete-Sel-State-Table
     End-If
  #EndIf

  If $EmployeeFound = 'N'
     Show ' '
     Show '****** No Employee Records Selected ******'
     Show ' '
     If $Xmlpub <> 'Y'
        new-page
        print '********************************'  (+3,1)
        print '  No Employee Records Selected  '  (+1,1)
        print '********************************'  (+1,1)
     End-If
  Else
     If $Xmlpub <> 'Y'
        Show 'Upon successful completion of this program, one file will have been created:'
        Show '{IMPORTPREFIX}TAX960US.LIS contains print images for paper W-2s.'
        Show ''
        Show '----------------------------------------------------------'
        Show ''
     End-If
     If $SortCode1 <> '7'
        do Rsi960us-Print-Grand-Totals
     End-If
  End-If

  #If {RSI_APP_REL} >= 9.00
     If $Xmlpub = 'Y'
        do Rsi960us-Close-XMLP
     End-If
  #EndIf

  Show ''
  let $End = datenow()
  Show 'Report Ended at : ' $End
  do Stdapi-Term

End-Program

!***********************************************************************
! Procedure Rsi960us-Init-Report
!***********************************************************************
Begin-Procedure Rsi960us-Init-Report

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Rsi960us-Initialization

End-Procedure Rsi960us-Init-Report

!***********************************************************************
! Procedure Rsi960us-Initialization
!***********************************************************************
Begin-Procedure Rsi960us-Initialization

!  Short edge offset - negative or positive decipoints
!  Modify the codes below to adjust up or down -
!  PCL code &lnnZ not effective on HP4000 printers

  let $LP6    = ''
  let $LP8L   = ''
  let $LP8    = ''
  let $Quote  = ''''
  let #Box14G = 6

  #IfDef R_NJFLI
     let #Box14G = 7
  #End-If

  #If {PRINTER_TYPE} = 'LINEPRINTER'
     #IfnDef EBCDIC
        encode '<27>&l6D<27>&l66F' into $LP6
        encode '<27>&l3A<27>&l104F<27>&l85Z' into $LP8L
        encode '<27>&l10Z' into $LP8
     #Else
        !encode '<39>&l6D<39>&l66F' into $LP6
        !encode '<39>&l3A<39>&l104F<39>&l85Z' into $LP8L
        !encode '<39>&l10Z' into $LP8
     #EndIf
  #EndIf

  do Get-Current-DateTime
  move '1' to $MMLZero
  move '1' to $Year4
  do Format-DateTime($AsOfToday, $910Date, {DEFYMD},'','')
  move $910Date  to $AsOfYear xxxx
  move $AsOfYear to #AsOfYear
  move #AsOfYear to #SaveAsOfYear
  subtract 1 from #AsOfYear

  do Get-Tax-Reporting-Run-Controls
  move &TX.BALANCE_YEAR to $Rpt_Year 9999

  If rtrim(&TX.FORM_ID,' ') = ''
     Show '***********************************************************'
     Show '* Form ID not specified on Tax Reporting Parameters Panel *'
     Show '* Program Stopped                                         *'
     Show '***********************************************************'
     STOP
  End-If

  move &TX.EMPLOYEES_PER_PAGE to #EmployeesPerPage

  If Not (#EmployeesPerPage > 0)
     Show '**********************************************************************'
     Show '* Employees Per Page not specified in Tax Reporting Parameters       *'
     Show '* Program Stopped                                                    *'
     Show '**********************************************************************'
     STOP
  End-If

  let $Form_Id = rtrim(&TX.FORM_ID,' ')
  let $Xmlpub = 'N'

  Evaluate $Form_Id
    When = 'IMP01'
      #IfnDef LayoutW2-6
         Show 'For FormId "IMP01", LayoutW2-6 must be defined in PRTFORML.SQC'
         STOP
      #EndIf
      let #WColumn1 = 3
      let #WColumn2 = 42
      print $LP6 () code
      let #MaxLocal = 7
      Break
    When = 'LSR02A'
      #IfnDef LayoutW2-8
         Show 'For FormId "LSR02A", LayoutW2-8 must be defined in PRTFORML.SQC'
         STOP
      #EndIf
      let #WColumn1 = 2
      let #WColumn2 = 42
      print $LP8 () code
      let #MaxLocal = 11
      Break
    When = 'LSR03'
      #IfnDef LayoutW2-6
         Show 'For FormId "LSR03", LayoutW2-6 must be defined in PRTFORML.SQC'
         STOP
      #EndIf
      let #WColumn1 = 3
      let #WColumn2 = 42
      print $LP6 () code
      let #MaxLocal = 7
      Break
    When = 'LSR03P'
      #IfnDef LayoutW2-6
         Show 'For FormId "LSR03P", LayoutW2-6 must be defined in PRTFORML.SQC'
         STOP
      #EndIf
      let #WColumn1 = 3
      let #WColumn2 = 42
      print $LP6 () code
      let #MaxLocal = 7
      Break
    When = 'LW2PS'
      #IfnDef LayoutW2-8L
         Show 'For FormId "LW2PS", LayoutW2-8L should be defined in PRTFORML.SQC'
         STOP
      #EndIf
      If #EmployeesPerPage <> 1
         Show '*******************************************************************************************'
         Show '* Employees per page specified in Tax Reporting Parameters must be "1" for Form ID: LW2PS *'
         Show '* Program Stopped                                                                         *'
         Show '*******************************************************************************************'
         STOP
      End-If
      let #WColumn1 = 2
      let #WColumn2 = 42
      print $LP8L () code
      let #MaxLocal = 7
      Break
    When = 'LSR01'
      #IfnDef LayoutW2-8
         Show 'For FormId "LSR01", LayoutW2-8 must be defined in PRTFORML.SQC'
         STOP
      #EndIf
      let #WColumn1 = 2
      let #WColumn2 = 42
      print $LP8 () code
      let #MaxLocal = 11
      Break
    When = 'LPS4V'
      #IfnDef LayoutW2-8LF
         Show 'For FormId "LPS4V", LayoutW2-8LF must be defined in PRTFORML.SQC'
         STOP
      #EndIf

      If #EmployeesPerPage <> 1
         Show '*******************************************************************************************'
         Show '* Employees per page specified in Tax Reporting Parameters must be "1" for Form ID: LPS4V *'
         Show '* Program Stopped                                                                         *'
         Show '*******************************************************************************************'
         STOP
      End-If
      let #WColumn1 = 2
      let #WColumn2 = 42
      print $LP8L () code
      let #MaxLocal = 7
      Break
    When = 'XMLP'
      let $Xmlpub = 'Y'
      let #WColumn1 = 3
      let #MaxLocal = 7
      Break
    When-Other
      Show '****************************************************************'
      Show '* U.S. Form ID not specified in Tax Reporting Parameters       *'
      Show '* Program Stopped                                              *'
      Show '****************************************************************'
      STOP
  End-Evaluate

  move &TX.BALANCE_YEAR to $CalYear 9999
  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')
  do Rsi960us-Load-W2-PRT

  move 0 to #T_Count
  move 0 to #Form_Nbr

  Evaluate $Layout_Style
    When = '4CORNER'
      COLUMNS #WColumn1 #WColumn2
      move 4 to #FormsPerPage
      Break
    When = '4CORNERPS'
      COLUMNS #WColumn1 #WColumn2
      move 1 to #FormsPerPage
      Break
    When = '2VERTICAL'
      COLUMNS #WColumn1
      move 2 to #FormsPerPage
      Break
    When = '4VERTICAL'
      COLUMNS #WColumn1
      move 4 to #FormsPerPage
      Break
    When  = 'XMLP'
    COLUMNS #WColumn1
    move 1 to #FormsPerPage
    move 1 to #EmployeesPerPage
    Break
  End-Evaluate

  If #EmployeesPerPage > #FormsPerPage
     or ($Layout_Style = '4CORNER' and #EmployeesPerPage = 2)
     or ($Layout_Style = '4CORNER' and #EmployeesPerPage = 3)
     or ($Layout_Style = '4VERTICAL' and #EmployeesPerPage = 2)
     or ($Layout_Style = '4VERTICAL' and #EmployeesPerPage = 3)
     Show '*****************************************************************'
     Show '* Employees Per Page specifed in Tax Reporting Parameters is    *'
     Show '* not valid for the selected Layout Style                       *'
     Show '*****************************************************************'
     STOP
  End-If

BEGIN-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
END-SELECT

  do Rsi960us-Set-DB

End-Procedure Rsi960us-Initialization

!***********************************************************************
! Procedure Rsi960us-Load-W2-PRT
!***********************************************************************
Begin-Procedure Rsi960us-Load-W2-PRT

BEGIN-SELECT
TF.LAYOUT_STYLE
TF.TOP_MARGIN
TF.TOP_SPLIT
TF.CENTER_SPLIT
TF.BOTTOM_SPLIT
TF.LAST_PRINT_LINE
TF.LOCALS_PER_FORM
TF.TAXFORM_ID

  let $Layout_Style = rtrim(&TF.LAYOUT_STYLE,' ')

  move &TF.TOP_MARGIN       to #Top_Margin
  move &TF.TOP_SPLIT        to #Top_Split
  move &TF.CENTER_SPLIT     to #Center_Split
  move &TF.BOTTOM_SPLIT     to #Bottom_Split
  move &TF.LAST_PRINT_LINE  to #Last_Print_Line
  move &TF.LOCALS_PER_FORM  to #Locals_Per_Form
  move &TF.TAXFORM_ID       to $Taxform_Id

FROM PS_TAXFORM_FORM TF
WHERE TF.FORM_ID    = &TX.FORM_ID
  AND TF.TAXFORM_ID = 'W'
  AND TF.EFFDT      = (SELECT MAX(TF1.EFFDT)
                       FROM PS_TAXFORM_TBL TF1
                       WHERE TF1.TAXFORM_ID = TF.TAXFORM_ID
                         AND TF1.EFFDT     <= $AsOfDate)
END-SELECT

  do Rsi960us-Assign-Year-End-Variables
  let #m = 0

BEGIN-SELECT
TB.BOX

  let $TB_Box = &TB.BOX
  let $TB_Box = rpad($TB_Box,4,' ')
  move $TB_Box to $Box xx
  let $Position3 = substr($TB_Box, 3,1)

  If $Box = $YE_Other and $Position3 > ' '
     let $Box14Letter = substr($TB_Box,3,2)
     let $Box14Letter = rpad($Box14Letter,2,' ')
     put $TB_Box into BOX14(#m) BOX

     If $TB_Box = $YE_OtherYN
        let #BoxYN = #m
     End-If

     If $TB_Box = $YE_OtherYT
        let #BoxYT= #m
     End-If

     If $TB_Box = $YE_OtherZN
        let #BoxZN = #m
     End-If

     let #m = #m + 1
  End-If

FROM PS_TAXFORM_BOX TB
WHERE TB.TAXFORM_ID = 'W'
  AND TB.EFFDT      = (SELECT MAX(TB1.EFFDT)
                       FROM PS_TAXFORM_TBL TB1
                       WHERE TB1.TAXFORM_ID = TB.TAXFORM_ID
                         AND TB1.EFFDT     <= $AsOfDate)
ORDER BY TB.BOX
END-SELECT

BEGIN-SELECT
TP.BOX
TP.PRINT_LINE
TP.PRINT_COL
TP.PRINT_FORMAT
TP.PRINT_TEXT

  let $TP_Box = &TP.BOX
  move $TP_Box to $Box xx
  let $Position3 = substr($TP_Box,3,1)

  If ($Box = $YE_Box12_StartPos or $Box = $YE_Other) and $Position3 > ' '
     let $TP_Box = &TP.BOX
     let $TP_Box = rpad($TP_Box,4,' ')
  Else
     let $TP_Box = rtrim(&TP.BOX,' ')
  End-If

  do Rsi960us-Evaluate-Print-Box

  If $TP_Box = $YE_Other
     move &TP.PRINT_LINE to #L_14_Start
     let $F14 = rtrim(&TP.PRINT_FORMAT,' ')
  Else
     If $Box = $YE_Other
        move &TP.PRINT_COL to #C_14_Start
        let #m = 0
        let $Box14Letter = substr($TP_Box,1,4)

        While #m < 30
          get $BoxLetter from BOX14(#m) BOX

          If $BoxLetter = $Box14Letter
             let $m = #m
             let $TP_Print_Text = rtrim(&TP.PRINT_TEXT,' ')
             put &TP.PRINT_COL $TP_Print_Text into BOX14(#m) COLUMN TEXT
             let #m = 30
          End-If

          let #m = #m + 1
        End-While

        move '  ' to $Box
      End-If
  End-If

FROM PS_TAXFORM_PRT TP
WHERE TP.FORM_ID    = &TX.FORM_ID
  AND TP.TAXFORM_ID = 'W'
  AND TP.EFFDT      = (SELECT MAX(TP1.EFFDT)
                       FROM PS_TAXFORM_TBL TP1
                       WHERE TP1.TAXFORM_ID = TP.TAXFORM_ID
                         AND TP1.EFFDT     <= $AsOfDate)
ORDER BY TP.BOX
END-SELECT

End-Procedure Rsi960us-Load-W2-PRT

!***********************************************************************
! Procedure Rsi960us-Set-DB
!***********************************************************************
Begin-Procedure Rsi960us-Set-DB

  #IfDef DB2ALL
     #Define DB2
  #EndIf
  #IfDef DB2UNIX
     #Define DB2
  #EndIf
  #IfDef DB2400
     #Define DB2
  #EndIf
  #IfDef DB2DDCS
     #Define DB2
  #EndIf

End-Procedure Rsi960us-Set-DB

!***********************************************************************
! Procedure Rsi960us-Convert-Parameters
!***********************************************************************
Begin-Procedure Rsi960us-Convert-Parameters

  move $RC_US_YE.REG_SELECT_PROC  to $SelectEEs
  move $RC_US_YE.REG_SELECT_COMP  to $SelectCompanies
  move $RC_US_YE.REG_SELECT_STATE to $SelectStates
  move $RC_US_YE.SORT_CODE1       to $SortCode1
  move $RC_US_YE.SORT_CODE3       to $SortCode3

  If $SelectEEs = 'S'
     do Rsi960us-Read-EEs
  End-If

  If $SelectCompanies = 'C'
     do Rsi960us-Read-Companies
  End-If

  #If {RSI_APP_REL} > 7.52
     let $RC_State_Select_State    = 'RS.STATE'
     let $RC_State_Select_Locality = 'RS.LOCALITY'
     let $RC_State_Tbl             = 'PS_RC_SEL_STATE RS'

     If $SelectStates = 'S'
        do Rsi960us-Read-States
     End-If
  #Else
     let $RC_State_Select_State    = ''
     let $RC_State_Select_Locality = ''
     let $RC_State_Tbl             = ''
     let $RC_State_Where           = ''
  #EndIf

  do Rsi960us-Create-Order-By

End-Procedure Rsi960us-Convert-Parameters

!***********************************************************************
! Procedure Rsi960us-Read-EEs
!***********************************************************************
Begin-Procedure Rsi960us-Read-EEs

  move 'AND YD.EMPLID IN (''' to $E_SelectedEEs
  move 'AND NS.EMPLID IN (''' to $S_SelectedEEs
  move 'AND J.EMPLID IN (''' to $J_SelectedEEs
  move ' ' to $SelectedEmplID

BEGIN-SELECT
RE.SELECTED_EE

  move &RE.SELECTED_EE to $SelectedEmplID
  let $E_SelectedEEs = $E_SelectedEEs || $SelectedEmplID || ''','''
  let $S_SelectedEEs = $S_SelectedEEs || $SelectedEmplID || ''','''
  let $J_SelectedEEs = $J_SelectedEEs || $SelectedEmplID || ''','''
  move 'Y' to $EE_Selected

FROM PS_RC_TAX960US RE
WHERE RE.OPRID       = $Prcs_OprID
  AND RE.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
END-SELECT

  let $E_SelectedEEs = substr($E_SelectedEEs,1,length($E_SelectedEEs)-2)
  let $E_SelectedEEs = $E_SelectedEEs || ')'
  let $S_SelectedEEs = substr($S_SelectedEEs,1,length($S_SelectedEEs)-2)
  let $S_SelectedEEs = $S_SelectedEEs || ')'
  let $J_SelectedEEs = substr($J_SelectedEEs,1,length($J_SelectedEEs)-2)
  let $J_SelectedEEs = $J_SelectedEEs || ')'

End-Procedure Rsi960us-Read-EEs

!***********************************************************************
! Procedure Rsi960us-Read-Companies
!***********************************************************************
Begin-Procedure Rsi960us-Read-Companies

  move 'AND W2C.COMPANY IN (''' to $W2C_SelectedCompanies
  move ' ' to $SelectedEmplID

BEGIN-SELECT
RC.SELECTED_COMPANY

  move &RC.SELECTED_COMPANY to $SelectedCompany
  let $W2C_SelectedCompanies = $W2C_SelectedCompanies || $SelectedCompany || ''','''
  move 'Y' to $Company_Selected

FROM PS_RC_SEL_COMPANY RC
WHERE RC.OPRID       = $Prcs_OprID
  AND RC.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
END-SELECT

  If $Company_Selected = 'Y'
     let $W2C_SelectedCompanies = substr($W2C_SelectedCompanies,1,length($W2C_SelectedCompanies)-2)
  Else
     let $W2C_SelectedCompanies = $W2C_SelectedCompanies || ''''
  End-If

  let $W2C_SelectedCompanies = $W2C_SelectedCompanies || ')'

End-Procedure Rsi960us-Read-Companies

!***********************************************************************
! Procedure Rsi960us-Read-States
!***********************************************************************
Begin-Procedure Rsi960us-Read-States

  move 'N' to $States_Selected

  let $SelectedPrint1 = ' AND EXISTS (SELECT ''X'' FROM PS_YE_AMOUNTS YA ' ||
                        ' WHERE YA.COMPANY = YEE.COMPANY AND YA.EMPLID = YEE.EMPLID ' ||
                        ' AND YA.CALENDAR_YEAR = YEE.CALENDAR_YEAR AND ('
  let $SelectedPrint2 = ' AND EXISTS (SELECT ''X'' FROM PS_YE_AMOUNTS YA ' ||
                        ' WHERE YA.COMPANY = JB.COMPANY AND YA.EMPLID = J.EMPLID ' ||
                        ' AND YA.CALENDAR_YEAR = ' || $rpt_year || ' AND ('
  let $SelectedPrint3 = ' AND ('

BEGIN-SELECT
[$RC_State_Select_State]      &SS.STATE    = CHAR
[$RC_State_Select_Locality]   &SS.LOCALITY = CHAR

  let $SelectedState    = rtrim(&SS.STATE, ' ')
  let $SelectedLocality = rtrim(&SS.LOCALITY, ' ')

  If $States_Selected = 'Y'
     let $SelectedPrint1 = $SelectedPrint1 || ' OR '
     let $SelectedPrint2 = $SelectedPrint2 || ' OR '
     let $SelectedPrint3 = $SelectedPrint3 || ' OR '
  Else
     move 'Y' to $States_Selected
  End-If

  let $SelectedPrint1 = $SelectedPrint1 || '(YA.STATE = ''' || $SelectedState || ''''
  let $SelectedPrint2 = $SelectedPrint2 || '(YA.STATE = ''' || $SelectedState || ''''
  let $SelectedPrint3 = $SelectedPrint3 || '(SLS.STATE = ''' || $SelectedState || ''''

  If $SelectedLocality = ''
     let $SelectedPrint1 = $SelectedPrint1 || ')'
     let $SelectedPrint2 = $SelectedPrint2 || ')'
     let $SelectedPrint3 = $SelectedPrint3 || ')'
  Else
     let $SelectedPrint1 = $SelectedPrint1 || ' AND YA.LOCALITY = ''' || $SelectedLocality || ''')'
     let $SelectedPrint2 = $SelectedPrint2 || ' AND YA.LOCALITY = ''' || $SelectedLocality || ''')'
     let $SelectedPrint3 = $SelectedPrint3 || ' AND SLS.LOCALITY = ''' || $SelectedLocality || ''')'
  End-If

FROM [$RC_State_Tbl]
WHERE RS.OPRID = $Prcs_OprID
AND RS.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
END-SELECT

  If $States_Selected = 'Y'
     let $SelectedPrint1 = $SelectedPrint1 || '))'
     let $SelectedPrint2 = $SelectedPrint2 || '))'
     let $SelectedPrint3 = $SelectedPrint3 || ')'
  Else
     let $SelectedPrint1 = ' '
     let $SelectedPrint2 = ' '
     let $SelectedPrint3 = ' '
  End-If

End-Procedure Rsi960us-Read-States

!***********************************************************************
! Procedure Rsi960us-Create-Order-By
!***********************************************************************
Begin-Procedure Rsi960us-Create-Order-By

  move 'ORDER BY YD.EMPLID, YD.SEQUENCE_NUMBER' to $Sort2

  If $SortCode1 <> '1'
     Show ' '
     Show 'Selected As Of Date for retrieving the sorted data.'
     Show $AsofDate

     Evaluate $SortCode3
       When = '1'
         Evaluate $SortCode1
           When = '2'
             move 'ORDER BY YD.W2_STATE, YD.EMPLID, YD.SEQUENCE_NUMBER' to $Sort2
           When = '3'
             move 'ORDER BY JB.PAYGROUP, NS.EMPLID' to $Sort1
           When = '4'
             move 'ORDER BY JB.DEPTID, NS.EMPLID' to $Sort1
           When = '5'
             move 'ORDER BY YD.POSTAL, YD.EMPLID, YD.SEQUENCE_NUMBER' to $Sort2
           When = '6'
             move 'ORDER BY PY.MAIL_DROP, NS.EMPLID' to $Sort1
           When = '7'
             move 'ORDER BY YD.W2_STATE, YD.EMPLID, YD.SEQUENCE_NUMBER' to $Sort2
         End-Evaluate
         Break
       When = '2'
         Evaluate $SortCode1
           When = '2'
             move 'ORDER BY YD.W2_STATE, YD.SSN, YD.SEQUENCE_NUMBER' to $Sort2
           When = '3'
             move 'ORDER BY JB.PAYGROUP, NID.NATIONAL_ID' to $Sort1
           When = '4'
             move 'ORDER BY JB.DEPTID, NID.NATIONAL_ID' to $Sort1
           When = '5'
             move 'ORDER BY YD.POSTAL, YD.SSN, YD.SEQUENCE_NUMBER' to $Sort2
           When = '6'
             move 'ORDER BY PY.MAIL_DROP, NID.NATIONAL_ID' to $Sort1
           When = '7'
             move 'ORDER BY YD.W2_STATE, YD.SSN, YD.SEQUENCE_NUMBER' to $Sort2
         End-Evaluate
         Break
       When = '3'
         Evaluate $SortCode1
           When = '2'
             move 'ORDER BY YD.W2_STATE,YP.NAME, YD.SSN, YD.SEQUENCE_NUMBER' to $Sort2
           When = '3'
             move 'ORDER BY JB.PAYGROUP, NS.NAME, NID.NATIONAL_ID' to $Sort1
           When = '4'
             move 'ORDER BY JB.DEPTID, NS.NAME, NID.NATIONAL_ID' to $Sort1
           When = '5'
             move 'ORDER BY YD.POSTAL, YP.NAME, YD.SSN, YD.SEQUENCE_NUMBER' to $Sort2
           When = '6'
             move 'ORDER BY PY.MAIL_DROP, NS.NAME, NID.NATIONAL_ID' to $Sort1
           When = '7'
             move 'ORDER BY YD.W2_STATE, YP.NAME, YD.SSN, YD.SEQUENCE_NUMBER' to $Sort2
         End-Evaluate
         Break
       When = ''
         Evaluate $SortCode1
           When = '2'
             move 'ORDER BY YD.W2_STATE, YD.EMPLID, YD.SEQUENCE_NUMBER' to $Sort2
           When = '3'
             move 'ORDER BY JB.PAYGROUP, NS.EMPLID' to $Sort1
           When = '4'
             move 'ORDER BY JB.DEPTID, NS.EMPLID' to $Sort1
           When = '5'
             move 'ORDER BY YD.POSTAL, YD.EMPLID, YD.SEQUENCE_NUMBER' to $Sort2
           When = '6'
             move 'ORDER BY PY.MAIL_DROP, NS.EMPLID' to $Sort1
           When = '7'
             move 'ORDER BY YD.W2_STATE, YD.EMPLID, YD.SEQUENCE_NUMBER' to $Sort2
         End-Evaluate
         Break
     End-Evaluate
  Else
     Evaluate $SortCode3
       When = '1'
         move 'ORDER BY YD.EMPLID, YD.SEQUENCE_NUMBER, YD.COMPANY' to $Sort2
         Break
       When = '2'
         move 'ORDER BY YD.SSN, YD.SEQUENCE_NUMBER, YD.COMPANY' to $Sort2
         Break
       When = '3'
         move 'ORDER BY YP.NAME, YD.SSN, YD.SEQUENCE_NUMBER, YD.COMPANY' to $Sort2
         Break
       When = ''
         move 'ORDER BY YD.EMPLID, YD.SEQUENCE_NUMBER, YD.COMPANY' to $Sort2
     End-Evaluate
  End-If

End-Procedure Rsi960us-Create-Order-By

!***********************************************************************
! Procedure Rsi960us-Print-Alignment-Forms
!***********************************************************************
Begin-Procedure Rsi960us-Print-Alignment-Forms

  move &TX.ALIGN_COUNT to #Align_Count
  move 'Y' to $AlignForm
  let #Align_Count = #Align_Count * #FormsPerPage
  move #EmployeesPerPage to #Temp
  move #FormsPerPage to #EmployeesPerPage
  move 1 to #k

  While #k <= #Align_Count
    do Rsi960us-Load-Test-Data

    If $Form_ID = 'LPS4V' and (#k = 1 or mod(#k - 1,4) = 0)
       do Rsi960us-Get-EE-Long-Name-Address
    End-If

    do Rsi960us-Print-W2

    If $Form_ID = 'LW2PS' and mod(#k,4) = 0
       do Rsi960us-Get-Long-Name-Address
    End-If

    add 1 to #k
  End-While

  let $FirstEE = 'Y'
  move 0 to #Align_Count
  move #Temp to #EmployeesPerPage
  move '' to $PriorState
  move '' to $PriorLocality
  move '' to $LocalityPrintName
  do Rsi960us-Zero-Box14

End-Procedure Rsi960us-Print-Alignment-Forms

!***********************************************************************
! Procedure Rsi960us-Report-File-Create
!***********************************************************************
Begin-Procedure Rsi960us-Report-File-Create

  move 'N' to $EmployeeFound
  let $SortSQL10 = $Sort2

BEGIN-SELECT
W2C.W2_REPORTING_CO
W2C.DESCR
W2C.FEDERAL_EIN
W2C.ADDRESS1
W2C.ADDRESS2
W2C.CITY
W2C.STATE
W2C.POSTAL
W2C.COUNTRY
W2C.TAXFORM_ID

  move &W2C.FEDERAL_EIN to $Federal_EIN 099999999
  move $Federal_EIN     to $W2C_Federal_EIN xx-xxxxxxx
  let $W2C_Descr         = rtrim(&W2C.DESCR,' ')
  let $W2C_Address1      = rtrim(&W2C.ADDRESS1,' ')
  let $W2C_Address2      = rtrim(&W2C.ADDRESS2,' ')
  let $W2C_City          = rtrim(&W2C.CITY,' ')
  let $W2C_State         = rtrim(&W2C.STATE, ' ')
  let $W2C_Zip           = rtrim(&W2C.POSTAL, ' ')
  let $W2C_Country       = rtrim(&W2C.COUNTRY, ' ')
  let $W2C_Reporting_Co  = rtrim(&W2C.W2_REPORTING_CO, ' ')

  uppercase $W2C_Descr
  uppercase $W2C_Address1
  uppercase $W2C_Address2
  uppercase $W2C_Country
  uppercase $W2C_City

  let $W2C_Federal_EIN = substr($W2C_Federal_EIN,1,#YE_ER_ID_Box_Size)
  let $W2C_Descr       = substr($W2C_Descr,1,#YE_ER_Name_Box_Size)
  let $W2C_Address1    = substr($W2C_Address1,1,#YE_ER_Address1_Box_Size)
  let $W2C_Address2    = substr($W2C_Address2,1,#YE_ER_Address2_Box_Size)

  move 0 to #I_Count

  Evaluate $SortCode1
    When = '1'
    When = '2'
    When = '5'
      let $SelectedPrint = $SelectedPrint1
      do Rsi960us-Read-Employee-Data
      Break
    When = '3'
    When = '4'
    When = '6'
      let $SelectedPrint = ' '
      do Rsi960us-W2-Sort
      Break
    When = '7'
      let $SelectedPrint = ' '
      do Rsi960us-State-Locality-Select
      Break
  End-Evaluate

FROM PS_W2_COMPANY W2C
WHERE W2C.CALENDAR_YEAR   = &TX.BALANCE_YEAR
  AND W2C.W2_REPORTING_CO = W2C.COMPANY
  [$W2C_SelectedCompanies]
  AND W2C.W2_REPORTING_CO <> ' '
ORDER BY W2C.W2_REPORTING_CO
END-SELECT

End-Procedure Rsi960us-Report-File-Create

!***********************************************************************
! Procedure Rsi960us-State-Locality-Select
!***********************************************************************
Begin-Procedure Rsi960us-State-Locality-Select

BEGIN-SELECT DISTINCT
SLS.STATE
SLS.LOCALITY

  let $Sort2 = ' AND EXISTS (SELECT ''X'' From PS_YE_AMOUNTS WHERE COMPANY = YD.COMPANY AND EMPLID = YD.EMPLID '
            || ' AND CALENDAR_YEAR = E.CALENDAR_YEAR AND TAXFORM_ID = YD.TAXFORM_ID AND SEQUENCE_NUMBER = YD.SEQUENCE_NUMBER '
            || ' AND STATE = ' || $Quote || &SLS.STATE || $Quote || ' AND LOCALITY = ' || $Quote || &SLS.LOCALITY || $Quote || ') '
            || $SortSQL10

  If rtrim(&SLS.LOCALITY,' ') <> ''
     do Rsi960us-Read-Employee-Data
  End-If

FROM PS_YE_AMOUNTS SLS
WHERE SLS.COMPANY IN (SELECT SLS1.COMPANY
                      FROM PS_W2_COMPANY SLS1
                      WHERE SLS1.W2_REPORTING_CO = &W2C.W2_REPORTING_CO
                        AND SLS1.CALENDAR_YEAR   = &TX.BALANCE_YEAR)
  AND SLS.CALENDAR_YEAR = &TX.BALANCE_YEAR
  AND SLS.TAXFORM_ID    = 'W'
  [$SelectedPrint3]
END-SELECT

End-Procedure Rsi960us-State-Locality-Select

!***********************************************************************
! Procedure Rsi960us-Read-Employee-Data
!***********************************************************************
Begin-Procedure Rsi960us-Read-Employee-Data

  let $Local_Wages =  'N'

BEGIN-SELECT
YD.COMPANY
YD.EMPLID           () on-Break level=1 print=never before=Rsi960us-Before-Emplid
YD.TAXFORM_ID
YD.SEQUENCE_NUMBER  () on-Break level=2 print=never after=Rsi960us-After-Seq
YD.CONTROL_NUMBER
YD.W2_STATE
YD.EMPLOYER_ID_SWT
YD.SSN
YD.YE_FNAME
YD.YE_MIDDLE_NAME
YD.YE_LNAME
YD.YE_SUFFIX
YD.ADDRESS1
YD.ADDRESS2
YD.CITY
YD.STATE
YD.POSTAL
YD.COUNTRY
YD.STATUTORY_EE
YD.PENSION_PLAN
YD.THIRDPARTY_SICKPAY
YEE.PROCESS_FLAG
YP.NAME

  move &YD.SEQUENCE_NUMBER to #TempNum
  let $TempEmplid = &YD.EMPLID

  If $TempEmplid = $YD_Emplid and #TempNum = #YD_Sequence_Number and rtrim(&YD.W2_STATE,' ') <> $YD_W2_State
     let $Check_ID = 'Y'
  End-If

  If &YD.STATUTORY_EE = 'Y'
     move &YD.STATUTORY_EE to $YD_Statutory_Ee
  End-If

  If &YD.PENSION_PLAN = 'Y'
     move &YD.PENSION_PLAN  to $YD_Pension_Plan
  End-If

  If &YD.THIRDPARTY_SICKPAY = 'Y'
     move &YD.THIRDPARTY_SICKPAY to $YD_Thirdparty_Sickpay
  End-If

  move &YD.TAXFORM_ID      to $YD_TaxForm_ID
  move &YD.SEQUENCE_NUMBER to #YD_Sequence_Number
  move &YD.COMPANY         to $YD_Company

  If $Check_ID = 'Y'
     If rtrim(&YD.W2_STATE,' ') <> ''
        move &YD.W2_STATE to $YD_W2_State
        move &YD.EMPLOYER_ID_SWT to $YD_Employer_ID_SWT
     Else
        If $TempST <> ' '
           let $YD_W2_State        = $TempST
           let $YD_Employer_ID_SWT = $TempSWT
        Else
           let $YD_W2_State        = ' '
           let $YD_Employer_ID_SWT = ' '
        End-If
     End-If
     let $Check_ID = 'N'
  Else
     move &YD.W2_STATE to $YD_W2_State

     If rtrim(&YD.EMPLOYER_ID_SWT,' ') <> ''
        move &YD.EMPLOYER_ID_SWT to $YD_Employer_ID_SWT
     Else
        let $YD_Employer_ID_SWT = ' '
     End-If
  End-If

  let $YD_Employer_ID_SWT = substr($YD_Employer_ID_SWT,1,#YE_State_ID_Box_Size)
  let $TempSWT            = $YD_Employer_ID_SWT
  let $TempST             = $YD_W2_State

  move 'Y' to $EmployeeFound

FROM PS_YE_EE YEE, PS_YE_DATA YD, PS_NAMES YP, PS_W2_COMPANY YW
WHERE YW.W2_REPORTING_CO = &W2C.W2_REPORTING_CO
  AND YW.COMPANY         = YD.COMPANY
  AND YW.CALENDAR_YEAR   = YD.CALENDAR_YEAR
  AND YD.COMPANY         = YEE.COMPANY
  AND YD.EMPLID          = YEE.EMPLID
  AND YD.TAXFORM_ID      = YEE.TAXFORM_ID
  AND YD.CALENDAR_YEAR   = YEE.CALENDAR_YEAR
  AND YD.CALENDAR_YEAR   = &TX.BALANCE_YEAR
  AND YP.EMPLID          = YEE.EMPLID
  AND YD.TAXFORM_ID      = 'W'
  AND YEE.PROCESS_FLAG  <> 'V'
  AND YP.NAME_TYPE       = 'PRI'
  AND YP.EFFDT           = (SELECT MAX(YPX.EFFDT)
                            FROM PS_NAMES YPX
                            WHERE YPX.EMPLID    = YP.EMPLID
                              AND YPX.NAME_TYPE = YP.NAME_TYPE
                              AND YPX.EFFDT    <= $AsOfDate)
  [$E_SelectedEEs]
  [$SelectedPrint]
[$Sort2]
END-SELECT

End-Procedure Rsi960us-Read-Employee-Data

!***********************************************************************
! Procedure Rsi960us-Before-Emplid
!***********************************************************************
Begin-Procedure Rsi960us-Before-Emplid

  move &YD.EMPLID to $YD_Emplid
  move &YD.SSN    to $S123 xxx
  move 0          to #MultiForm
  let $TempSWT     = ' '
  let $TempST      = ' '

  If $S123 = &TEMP_SSN_MASK or rtrim(&YD.SSN, ' ') = ''
     move 'Applied For' to $YD_Ssn
  Else
     move &YD.SSN to $YD_Ssn xxx-xx-xxxx
  End-If

  let $YD_FirstName = rtrim(&YD.YE_FNAME,' ') || ' '

  If rtrim(&YD.YE_MIDDLE_NAME,' ') = ''
     let $YD_MiddleName = ''
  Else
     let $YD_MiddleName = rtrim(&YD.YE_MIDDLE_NAME,' ') || ' '
  End-If

  let $YD_LastName        = rtrim(&YD.YE_LNAME,' ') || ' '
  let $YD_Suffix          = rtrim(&YD.YE_SUFFIX,' ')
  let $E_YE_Name          = $YD_FirstName || $YD_MiddleName|| $YD_LastName || $YD_Suffix
  let $E_YE_FirstName     = $YD_FirstName || $YD_MiddleName
  let $E_YE_LastName      = $YD_LastName
  let $E_YE_Suffix        = $YD_Suffix
  let #FirstNameLen       = length($E_YE_FirstName)
  let #LastNameLen        = length($E_YE_LastName)
  let #FullNameLen        = length($E_YE_Name)
  let $Use_Alternate_Name = 'N'

  uppercase $E_YE_Name
  uppercase $E_YE_Suffix

  Evaluate $Form_ID
    When = 'LSR03'
    When = 'LSR03P'
    When = 'XMLP'
      If #FirstNameLen > #YE_EE_FName_Box_Size or #LastNameLen > #YE_EE_LName_Box_Size
         let $Use_Alternate_Name = 'Y'
         let $Alternate_Name = substr($E_YE_FirstName,1,1) || ' ' || nvl(substr(rtrim($YD_MiddleName,' '),1,1),'') || ' ' || $E_YE_LastName
         let $Alternate_Name = substr($Alternate_Name,1,(#YE_EE_FName_Box_Size + #YE_EE_LName_Box_Size))
      End-If
      Break
    When-Other
      If #FullNameLen > #YE_EE_FullName_Box_Size
         let $Use_Alternate_Name = 'Y'
         let $Alternate_Name = substr($E_YE_FirstName,1,1) || ' ' || nvl(substr(rtrim($YD_MiddleName,' '),1,1),'') || ' ' || $E_YE_LastName
         let $Alternate_Name = substr($Alternate_Name,1,#YE_EE_FullName_Box_Size)
      End-If
      Break
  End-Evaluate

  let $Use_Alternate_Name_flap = 'N'

  If ($Form_ID = 'LPS4V' or $Form_ID = 'XMLP')
      If Length($E_YE_Name) > 55
         let $Use_Alternate_Name_flap = 'Y'
         If $YD_MiddleName <> ' '
            let $Alternate_Name_flap = substr($E_YE_FirstName,1,1) || ' ' || substr($YD_MiddleName,1,1) || ' ' || $E_YE_LastName || $E_YE_Suffix
         else
            let $Alternate_Name_flap = substr($E_YE_FirstName,1,1) || ' ' || $E_YE_LastName || $E_YE_Suffix
         end-if
      else
         let $E_YE_Name_flap = $E_YE_Name
      end-if
  end-if

  let $YD_Address1 = rtrim(&YD.ADDRESS1,' ')
  let $YD_Address2 = rtrim(&YD.ADDRESS2,' ')
  let $YD_City     = rtrim(&YD.CITY,' ')
  let $YD_State    = rtrim(&YD.STATE, ' ')
  let $YD_Zip      = rtrim(&YD.POSTAL, ' ')
  let $YD_Country  = rtrim(&YD.COUNTRY,' ')

  uppercase $YD_Address1
  uppercase $YD_Address2
  uppercase $YD_Country
  uppercase $YD_City

  let $E_YE_Name_flap   = substr($E_YE_Name,1,55)
  let $YD_Address1_flap = substr($YD_Address1,1,55)
  let $YD_Address2_flap = substr($YD_Address2,1,55)

  let $YD_Control_Number = substr(rtrim(&YD.CONTROL_NUMBER,' '),1,#YE_Control_Nbr_Box_Size)
  let $YD_Ssn            = substr($YD_Ssn,1,#YE_EE_SSN_Box_Size)
  let $E_YE_Name         = substr($E_YE_Name,1,#YE_EE_FullName_Box_Size)
  let $YD_Address1       = substr($YD_Address1,1,#YE_EE_Address1_Box_Size)
  let $YD_Address2       = substr($YD_Address2,1,#YE_EE_Address2_Box_Size)
  let $E_YE_FirstName    = substr($E_YE_FirstName,1,#YE_EE_FName_Box_Size)
  let $E_YE_LastName     = substr($E_YE_LastName,1,#YE_EE_LName_Box_Size)
  let $E_YE_Suffix       = substr($E_YE_Suffix,1,#YE_EE_Suffix_Box_Size)

  If $Form_ID = 'LPS4V' and #Align_Count = 0
     do Rsi960us-Get-EE-Address-Line3
  End-If

  If #T_Count = 0
     move 0 to #Form_Nbr
  End-If

End-Procedure Rsi960us-Before-Emplid

!***********************************************************************
! Procedure Rsi960us-After-Seq
!***********************************************************************
Begin-Procedure Rsi960us-After-Seq

  do Rsi960us-Load-Amounts

  If #LocalCount > 2
     move 1 to #MultiForm
  End-If

  If &TX.BALANCE_YEAR > 2015
     do Rsi960us-Load-OH-Local-Amounts
  End-If

  #If {RSI_APP_REL} >= 9.00
     If $Xmlpub = 'Y'
        do Rsi960us-Print-W2-XMLP
        If $RC_US_YE.Py_W2_Copy_Type = '2'
          do Rsi960us-Insert-Guide-Data
        End-If
     Else
        do Rsi960us-Print-W2
     End-If
  #Else
     do Rsi960us-Print-W2
  #EndIf

  If &YD.SEQUENCE_NUMBER = 1
     add 1 to #I_Count
  End-If

  let $Local_Wages = 'N'

End-Procedure Rsi960us-After-Seq

!***********************************************************************
! Procedure Rsi960us-Load-Amounts
!***********************************************************************
Begin-Procedure Rsi960us-Load-Amounts

  move 0 to #LocalCount
  let $Local_Wages = 'N'

BEGIN-SELECT
LC.W2_REPORTING_CO
LD.STATE
LD.LOCALITY
LD.BOX
#IfDef DB2
DECIMAL(SUM(LD.W2_AMOUNT),15,3) &LD.W2_Amount
#Else
SUM(LD.W2_AMOUNT)  &LD.W2_Amount
#EndIf

  move &LD.W2_Amount to #Amount
  let $LD_Box         = &LD.BOX
  let $Position3      = substr($LD_Box,3,1)
  move $LD_Box       to $Box xx

  If $Box = $YE_Box12_StartPos or $Box = $YE_Other and $Position3 > ' '
     let $LD_Box = rpad(&LD.BOX,4,' ')
  Else
     let $LD_Box = rtrim(&LD.BOX,' ')
  End-If

  do Rsi960us-Evaluate-Box

  If $LD_Box = $YE_Local_Wages
     If $YD_W2_State <> 'MD'
        add 1 to #LocalCount
        let $Local_Wages = 'Y'

        If #LocalCount > 20
           Show 'Local Array Size Exceeded - Processing Stopped'
           STOP
        End-If
        put &LD.LOCALITY into LOCALS(#LocalCOUNT) LOCALITY
        put #Amount into LOCALS(#LocalCOUNT) TXGRS
     End-If
  End-If

  If $LD_Box = $YE_Local_Tax
     If $YD_W2_State <> 'MD'
        If $Local_Wages = 'N'
           add 1 to #LocalCount
           put &LD.LOCALITY into LOCALS(#LocalCOUNT) LOCALITY
        End-If
        put #Amount into LOCALS(#LocalCOUNT) TAX
     Else
        add #Amount to #State_Tax
     End-If
     move 'N' to $Local_Wages
  End-If

  If $Box = $YE_Other
     let #i = 0
     let $Box14Letter = substr($LD_Box,1,4)

     While #i < 30
       get $BoxLetter from BOX14(#i) BOX

       If $BoxLetter = $Box14Letter
          array-add #Amount to BOX14(#i) AMOUNT
          let #i = 30
       End-If
       let #i = #i+1
     End-While
     move '  ' to $Box
  End-If

FROM PS_YE_AMOUNTS LD, PS_W2_COMPANY LC
WHERE LC.W2_REPORTING_CO = &W2C.W2_REPORTING_CO
  AND LC.COMPANY         = LD.COMPANY
  AND LC.CALENDAR_YEAR   = LD.CALENDAR_YEAR
  AND LD.EMPLID          = $YD_Emplid
  AND LD.CALENDAR_YEAR   = &TX.BALANCE_YEAR
  AND LD.TAXFORM_ID      = $YD_TaxForm_ID
  AND LD.SEQUENCE_NUMBER = #YD_Sequence_Number
GROUP BY LC.W2_REPORTING_CO, LD.STATE, LD.LOCALITY, LD.BOX
ORDER BY LC.W2_REPORTING_CO, LD.STATE, LD.LOCALITY, LD.BOX
END-SELECT

End-Procedure Rsi960us-Load-Amounts

!***********************************************************************
! Procedure Rsi960us-Load-OH-Local-Amounts
!***********************************************************************
Begin-Procedure Rsi960us-Load-OH-Local-Amounts

  let #oh = 1

BEGIN-SELECT DISTINCT
LD2.COMPANY
LD2.STATE
LCT.LOCALITY_NAME
LD2.LOCALITY

   let $Locality_OH   = rtrim(&LD2.LOCALITY, ' ')
   let $Locality_Name = rtrim(&LCT.LOCALITY_NAME, ' ')
   let #loc = 1

   While #loc <= #LocalCount

       get $Locality #Local_Wages #Local_Tax from LOCALS(#loc)

       if rtrim($Locality_OH, ' ') = rtrim($Locality, ' ')

           put $Locality_Name    into LOCALS_OH(#oh) LOCALITY_NAME_OH
           put $Locality         into LOCALS_OH(#oh) LOCALITY_OH
           put #Local_Wages      into LOCALS_OH(#oh) TXGRS_OH
           put #Local_Tax        into LOCALS_OH(#oh) TAX_OH
           add 1 to #oh
           break
       else
           add 1 to #loc
       end-if

   End-While

FROM PS_YE_AMOUNTS LD2, PS_LOCAL_TAX_TBL LCT
WHERE LD2.EMPLID          = $YD_Emplid
  AND LD2.CALENDAR_YEAR   = &TX.BALANCE_YEAR
  AND LD2.TAXFORM_ID      = $YD_TaxForm_ID
  AND LD2.SEQUENCE_NUMBER = #YD_Sequence_Number
  AND LD2.STATE           = 'OH'
  AND LD2.BOX IN ('18','19')
  AND LD2.STATE           = LCT.STATE
  AND LD2.LOCALITY        = LCT.LOCALITY
  AND LCT.EFFDT    = (SELECT MAX(LCT2.EFFDT)
                     FROM PS_LOCAL_TAX_TBL LCT2
                     WHERE LCT2.STATE    = LCT.STATE
                       AND LCT2.LOCALITY = LCT.LOCALITY
                       AND LCT2.EFFDT   <= $AsOfDate)
ORDER BY LD2.COMPANY, LD2.STATE, LCT.LOCALITY_NAME, LD2.LOCALITY
END-SELECT

End-Procedure Rsi960us-Load-OH-Local-Amounts

!***********************************************************************
! Procedure Rsi960us-Print-W2
!***********************************************************************
Begin-Procedure Rsi960us-Print-W2

  move 'N' to $Combat_Pay

  If $SortCode1 <> '7'
     do Rsi960us-Identify-Box12-Entries
     let $Box12PrintString = substr($Box12CheckString,1,8)
  End-If

  move 0 to #NextLocal
  move 0 to #HoldNextLocal
  move 1 to #j

  If #EmployeesPerPage > 0
     While #j <= #FormsPerPage/#EmployeesPerPage
        If $Form_ID = 'LPS4V' and #Align_Count = 0 and #j = 1
           do Rsi960us-Get-EE-Long-Name-Address
        End-If

        do Rsi960us-Next-Form
        do Rsi960us-Print-ER-Data
        do Rsi960us-Print-EE-Data

        If #LocalCount > 0 or #Align_Count > 0
           move #HoldNextLocal to #NextLocal

           If $SortCode1 <> '7'
              do Rsi960us-Print-Local-Amounts
           Else
              do Rsi960us-Print-Locality-Sort-Amounts
           End-If
        End-If

        do Rsi960us-Print-Box14
        do Rsi960us-Print-Fed-State-Amounts

        If #YD_Sequence_Number = 1 or #Align_Count > 0
           do Rsi960us-Print-Box13
        End-If

        If $SortCode1 <> '7'
           do Rsi960us-Print-Box12
        End-If
        add 1 to #j
     End-While

     If $Form_ID = 'LW2PS' and #Align_Count = 0
        do Rsi960us-Get-Long-Name-Address
     End-If
  End-If

  If $SortCode1 <> '7'
     let #Len_Box12Print   = length($Box12PrintString)
     let #Len_Box12Check   = length($Box12CheckString)
     let $Box12CheckString = substr($Box12CheckString,(#Len_Box12Print + 1),(#Len_Box12Check - #Len_Box12Print))

     While $Box12CheckString <> ''
        let $Box12PrintString = substr($Box12CheckString,1,8)
        move 1 to #j

        While #j <= #FormsPerPage/#EmployeesPerPage
          If $Form_ID = 'LPS4V' and #Align_Count = 0 and #j = 1
             do Rsi960us-Get-EE-Long-Name-Address
          End-If

          do Rsi960us-Next-Form
          do Rsi960us-Print-ER-Data
          do Rsi960us-Print-EE-Data
          do Rsi960us-Print-Box12
          move #L_14_Start to #L_14
          do Rsi960us-Print-Suppl-Box14
          add 1 to #j
        End-While

        If $Form_ID = 'LW2PS' and #Align_Count = 0
           do Rsi960us-Get-Long-Name-Address
        End-If
        let #Len_Box12Print   = length($Box12PrintString)
        let #Len_Box12Check   = length($Box12CheckString)
        let $Box12CheckString = substr($Box12CheckString,(#Len_Box12Print + 1),(#Len_Box12Check - #Len_Box12Print))
     End-While

     While #NextLocal < #LocalCount
        move #NextLocal to #HoldNextLocal
        move 1 to #j

        If #EmployeesPerPage > 0
           While #j <= #FormsPerPage/#EmployeesPerPage
              If $Form_ID = 'LPS4V' and #Align_Count = 0 and #j = 1
                 do Rsi960us-Get-EE-Long-Name-Address
              End-If

              do Rsi960us-Next-Form
              do Rsi960us-Print-ER-Data
              do Rsi960us-Print-EE-Data
              move #HoldNextLocal to #NextLocal
              do Rsi960us-Print-Local-Amounts
              move #L_14_Start to #L_14
              do Rsi960us-Print-Suppl-Box14
              add 1 to #j
           End-While

           If $Form_ID = 'LW2PS' and #Align_Count = 0
              do Rsi960us-Get-Long-Name-Address
           End-If
        End-If
     End-While
  End-If

  do Rsi960us-Clear-W2-Variables

  If #Align_Count = 0
     do Rsi960us-Zero-Box14
  End-If

  If #LocalCount > 0
     do Rsi960us-Zero-Local-Table
  End-If

  move ' ' to $YD_Statutory_Ee
  move ' ' to $YD_Pension_Plan
  move ' ' to $YD_Thirdparty_Sickpay

End-Procedure Rsi960us-Print-W2

!***********************************************************************
! Procedure Rsi960us-Print-ER-Data
!***********************************************************************
Begin-Procedure Rsi960us-Print-ER-Data

  do Rsi960us-Print-Value($W2C_Federal_EIN,#L_B,#C_B,'Box B')
  do Rsi960us-Print-Value($W2C_Descr,#L_C1,#C_C1,'Box C1')
  do Rsi960us-Print-Value($W2C_Address1,#L_C2,#C_C2,'Box C2')

  If rtrim($W2C_Address2,' ') <> ''
     do Rsi960us-Print-Value($W2C_Address2,#L_C3,#C_C3,'Box C3')
     move 'N' to $LineShift
  Else
     move 'Y' to $LineShift
  End-If

  If #Align_Count = 0
     If $W2C_Country = 'USA'
        move $W2C_Zip to $A_ZipExtsn ~~~~~~xxxx

        If instr($W2C_Zip,'-',6) = 0 and $A_ZipExtsn <> '    '
           let $W2C_Zip = substr($W2C_Zip,1,5) || '-' || substr($W2C_Zip,6,4)
        End-If

        let $C4 = $W2C_City || ' ' || $W2C_State || ' ' || $W2C_Zip

        If length($C4) > #YE_State_City_Zip_Box_Size
           let #NewLen = length($W2C_City) + #YE_State_City_Zip_Box_Size - length($C4)
           let $C4 = substr($W2C_City,1,#NewLen) || ' ' || $W2C_State || ' ' || $W2C_Zip
        End-If
     Else
        let $C4 = $W2C_City || ' ' || $W2C_State || ' ' || $W2C_Country || ' ' || $W2C_Zip

        If length($C4) > #YE_State_City_Zip_Box_Size
            let #NewLen = length($W2C_City) + #YE_State_City_Zip_Box_Size - length($C4)
            let $C4 = substr($W2C_City,1,#NewLen) || ' ' || $W2C_State || ' ' || $W2C_Country || ' ' || $W2C_Zip
        End-If
     End-If
  End-If

  If $LineShift = 'Y'
     let #PrintLine = #L_C3
  Else
     let #PrintLine = #L_C4
  End-If

  do Rsi960us-Print-Value($C4,#PrintLine,#C_C4,'Box C4')

End-Procedure Rsi960us-Print-ER-Data

!***********************************************************************
! Procedure Rsi960us-Print-EE-Data
!***********************************************************************
Begin-Procedure Rsi960us-Print-EE-Data

  add 1 to #T_Count

  If $S123 = &TEMP_SSN_MASK or rtrim(&YD.SSN, ' ') = ''
     do Rsi960us-Print-Value($YD_Ssn,#L_A,#C_A,'Box A')
  else
     If &TX.BALANCE_YEAR > 2016
        let $YD_Ssn_Trunc = 'XXX-XX-' || substr($YD_Ssn, 8,4)
        do Rsi960us-Print-Value($YD_Ssn_Trunc,#L_A,#C_A,'Box A')
     Else
        do Rsi960us-Print-Value($YD_Ssn,#L_A,#C_A,'Box A')
     End-If
  end-if

  Evaluate $Form_id
    When = 'LPS4V'
    When = 'LSR01'
      do Rsi960us-Print-Value($ReprintDescr1,#L_R1,#C_R1,'Box R1')
      do Rsi960us-Print-Value($ReprintDescr2,#L_R2,#C_R2,'Box R2')
      Break
    When = 'LSR02A'
      If #Form_Nbr < 3
         do Rsi960us-Print-Value($ReprintDescr1,#L_R1,#C_R1,'Box R1')
         do Rsi960us-Print-Value($ReprintDescr2,#L_R2,#C_R2,'Box R2')
      Else
         do Rsi960us-Print-Value($ReprintDescr,40,11,'Box R')
      End-If
      Break
    When-Other
      do Rsi960us-Print-Value($ReprintDescr,#L_R,#C_R,'Box R')
      Break
   End-Evaluate

  If $Form_ID <> 'LPS4V'
     If &YEE.PROCESS_FLAG = 'V' or #Align_Count <> 0
        do Rsi960us-Print-Value('X',#L_V,#C_V,'Box V')
     End-If
  End-If

  do Rsi960us-Print-Value($YD_Control_Number,#L_D,#C_D,'Box D')

  If $Form_ID <> 'LSR03' and $Form_ID <> 'LSR03P'
     If $Use_Alternate_Name = 'Y'
        do Rsi960us-Print-Value($Alternate_Name,#L_E,#C_E,'Box E')
     Else
        do Rsi960us-Print-Value($E_YE_Name,#L_E,#C_E,'Box E')
     End-If
  Else
     If $Use_Alternate_Name = 'Y'
        do Rsi960us-Print-Value($Alternate_Name,#L_E1,#C_E1,'Box E1')
     Else
        do Rsi960us-Print-Value($E_YE_FirstName,#L_E1,#C_E1,'Box E1')
        do Rsi960us-Print-Value($E_YE_LastName,#L_E3,#C_E3,'Box E3')
        do Rsi960us-Print-Value($E_YE_Suffix,#L_E4,#C_E4,'Box E4')
     End-If
  End-If

  do Rsi960us-Print-Value($YD_Address1,#L_F1,#C_F1,'Box F1')

  If rtrim($YD_Address2,' ') <> ''
     do Rsi960us-Print-Value($YD_Address2,#L_F2,#C_F2,'Box F2')
     move 'N' to $LineShift
  Else
     move 'Y' to $LineShift
  End-If

  If #Align_Count = 0
     do Rsi960us-Get-EE-Address-Line3
  End-If

  If $LineShift = 'Y'
     let #PrintLine = #L_F2
  Else
     let #PrintLine = #L_F3
  End-If

  do Rsi960us-Print-Value($F3,#PrintLine,#C_F3,'Box F3')

End-Procedure Rsi960us-Print-EE-Data

!***********************************************************************
! Procedure Rsi960us-Get-EE-Long-Name-Address
!***********************************************************************
Begin-Procedure Rsi960us-Get-EE-Long-Name-Address

  new-page

  If $FirstEE = 'Y' and #Align_Count = 0
     do Rsi960us-Get-EE-Address-Line3
     let $FirstEE = 'N'
  End-If

  If rtrim($YD_Address2,' ') <> ''
     If $Use_Alternate_Name = 'Y'
        print $Alternate_Name       (6,22)
     Else
        print $E_YE_Name            (6,22)
     End-If

     print $YD_Address1             (+1,22)
     print $YD_Address2             (+1,22)
     print $F3                      (+1,22)
 Else
     If $Use_Alternate_Name = 'Y'
        print $Alternate_Name       (7,22)
     Else
        print $E_YE_Name            (7,22)
     End-If

     print $YD_Address1             (+1,22)
     print $F3                      (+1,22)
 End-If

End-Procedure Rsi960us-Get-EE-Long-Name-Address

!***********************************************************************
! Procedure Rsi960us-Get-EE-Long-Name-Address
!***********************************************************************
Begin-Procedure Rsi960us-Get-Long-Name-Address

  next-column

  print $W2C_Descr (45,2)
  print $W2C_Address1 (+1,2)

  If rtrim($W2C_Address2,' ') <> ''
     print $W2C_Address2 (+1,2)
  End-If

  print $C4 (+1,2)

  If rtrim($YD_Address2, ' ') <> ''
     If $Use_Alternate_Name = 'Y'
        print $Alternate_Name      (60,21)
     Else
        print $E_YE_Name           (60,21)
     End-If
     print $YD_Address1            (+1,21)
     print $YD_Address2            (+1,21)
     print $F3                     (+1,21)
  Else
     If $Use_Alternate_Name = 'Y'
        print $Alternate_Name       (61,21)
     Else
        print $E_YE_Name            (61,21)
     End-If
     print $YD_Address1             (+1,21)
     print $F3                      (+1,21)
  End-If

End-Procedure Rsi960us-Get-Long-Name-Address

!***********************************************************************
! Procedure Rsi960us-Get-EE-Address-Line3
!***********************************************************************
Begin-Procedure Rsi960us-Get-EE-Address-Line3

  If $YD_Country = 'USA'
     move $YD_Zip to $YD_ZipExtsn ~~~~~~xxxx

     If instr($YD_Zip,'-',6) = 0 and $YD_ZipExtsn <> '    '
        let $YD_Zip = substr($YD_Zip,1,5) || '-' || substr($YD_Zip,6,4)
     End-If

     let $F3 = $YD_City || ' ' || $YD_State || ' ' || $YD_Zip
     let $F3_Flap = $F3

     If length($F3) > #YE_EE_Country_Box_Size
        let #NewLen = length($YD_City) + #YE_EE_Country_Box_Size - length($F3)
        let $F3 = substr($YD_City,1,#NewLen) || ' ' || $YD_State || ' ' || $YD_Zip
     End-If
  Else
     do Rsi960us-Get-Country-Code
     let $Country = rtrim(substr(&CNT.DESCR,1,15),' ')
     uppercase $Country
     let $F3 = $YD_City || ' ' || $YD_State || ' ' || $YD_Zip  || ' ' || $Country
     let $F3_Flap = $F3

     If length($F3) > 55
        let #flaplen = length($YD_City) + 55 - length($F3)
        let $F3_Flap = substr($YD_City,1,#flaplen) || ' ' || $YD_State || ' ' ||
                              $YD_Zip  || ' '  || $Country
     End-If

     If length($F3) > #YE_EE_Country_Box_Size
        let #NewLen = length($YD_City) + #YE_EE_Country_Box_Size - length($F3)
        let $F3 = substr($YD_City,1,#NewLen) || ' ' || $YD_State || ' ' || $YD_Zip  || ' ' || $Country
     End-If
  End-If

End-Procedure Rsi960us-Get-EE-Address-Line3

!***********************************************************************
! Procedure Rsi960us-Get-Country-Code
!***********************************************************************
Begin-Procedure Rsi960us-Get-Country-Code

BEGIN-SELECT
CNT.DESCR

FROM PS_COUNTRY_TBL CNT
WHERE CNT.COUNTRY = $YD_Country
END-SELECT

End-Procedure Rsi960us-Get-Country-Code

!***********************************************************************
! Procedure Rsi960us-Print-Fed-State-Amounts
!***********************************************************************
Begin-Procedure Rsi960us-Print-Fed-State-Amounts

  If #T_Count > #Align_Count
     If #j = 1
        do Rsi960us-Add-EE-to-Interum
     End-If
  End-If

  do Format-Number(#Fed_Wages,$Out,$F01)
  do Rsi960us-Print-Value($Out,#L_01,#C_01,'Box 01')

  do Format-Number(#Fed_Tax,$Out,$F02)
  do Rsi960us-Print-Value($Out,#L_02,#C_02,'Box 02')

  do Format-Number(#SS_Wages,$Out,$F03)
  do Rsi960us-Print-Value($Out,#L_03,#C_03,'Box 03')

  do Format-Number(#SS_Tax,$Out,$F04)
  do Rsi960us-Print-Value($Out,#L_04,#C_04,'Box 04')

  do Format-Number(#Med_Wages,$Out,$F05)
  do Rsi960us-Print-Value($Out,#L_05,#C_05,'Box 05')

  do Format-Number(#Med_Tax,$Out,$F06)
  do Rsi960us-Print-Value($Out,#L_06,#C_06,'Box 06')

  do Format-Number(#SS_Tips,$Out,$F07)
  do Rsi960us-Print-Value($Out,#L_07,#C_07,'Box 07')

  do Format-Number(#Alloc_Tips,$Out,$F08)
  do Rsi960us-Print-Value($Out,#L_08,#C_08,'Box 08')

  If &TX.BALANCE_YEAR < 2011 and #Adv_EIC <> 0 ! #Align_Count > 0
     do Format-Number(#Adv_EIC,$Out,$F09)
     do Rsi960us-Print-Value($Out,#L_09,#C_09,'Box 09')
  End-If

  do Format-Number(#Dep_Care,$Out,$F10)
  do Rsi960us-Print-Value($Out,#L_10,#C_10,'Box 10')

  do Format-Number(#Non_Qual_457_Amt,$Out,$F11)
  do Rsi960us-Print-Value($Out,#L_11,#C_11,'Box 11')

  !If (#L_14 - #L_14_Start) > 1  and $Suppl-Box14 = 'N' and $Form_ID = 'LSR03P' and #Align_Count = 0
  !      add 1 to #L_15
  !      add 1 to #L_15A
  !      add 1 to #L_16
  !      add 1 to #L_17
  !End-If

  If rtrim($YD_W2_State,' ') <> ''
     do Rsi960us-Print-Value($YD_W2_State,#L_15,#C_15,'Box 15')
     do Rsi960us-Print-Value($YD_Employer_ID_SWT,#L_15A,#C_15A,'Box 15A')
  Else
     do Rsi960us-Print-Value(' ',#L_15,#C_15,' ')
  End-If

  do Format-Number(#State_Wages,$Out,$F16)
  do Rsi960us-Print-Value($Out,#L_16,#C_16,'Box 16')
  do Format-Number(#State_Tax,$Out,$F17)
  do Rsi960us-Print-Value($Out,#L_17,#C_17,'Box 17')

  !If (#L_14 - #L_14_Start) > 1 and $Suppl-Box14 = 'N' and $Form_ID = 'LSR03P' and #Align_Count = 0
  !      add -1 to #L_15
  !      add -1 to #L_15A
  !      add -1 to #L_16
  !      add -1 to #L_17
  !End-If

End-Procedure Rsi960us-Print-Fed-State-Amounts

!***********************************************************************
! Procedure Rsi960us-Print-Local-Amounts
!***********************************************************************
Begin-Procedure Rsi960us-Print-Local-Amounts

  move 1 to #i
  move #L_18 to #LocalPrintLine18
  move #L_19 to #LocalPrintLine19
  move #L_20 to #LocalPrintLine20

  While #NextLocal < #LocalCount and #i <= #Locals_Per_Form
    add 1 to #NextLocal

    If rtrim($YD_W2_State,' ') = 'OH' and &TX.BALANCE_YEAR > 2015 and #Align_Count = 0
       get $Locality_Name $Locality #Local_Wages #Local_Tax from LOCALS_OH(#NextLocal)
    else
       get $Locality #Local_Wages #Local_Tax from LOCALS(#NextLocal)
    end-if

    let $Locality = rtrim($Locality,' ')

    If $Locality = $PriorLocality
       If $YD_W2_State <> $PriorState
          move $YD_W2_State to $PriorState
          do Rsi960us-Get-Locality-Print-Name
          move $Locality to $PriorLocality
       End-If
    Else
       do Rsi960us-Get-Locality-Print-Name
       move $Locality to $PriorLocality
    End-If

    If #i = 1
       If #NextLocal > 1
          do Rsi960us-Print-Value($YD_W2_State,#L_15,#C_15,'Box 15')
          do Rsi960us-Print-Value($YD_Employer_ID_SWT,#L_15A,#C_15A,'Box 15A')
       End-If
    End-If

    If &YD.SEQUENCE_NUMBER > 1
       do Rsi960us-Print-Value($YD_W2_State,#L_15,#C_15,'Box 15')
       do Rsi960us-Print-Value($YD_Employer_ID_SWT,#L_15A,#C_15A,'Box 15A')
    End-If

    do Format-Number(#Local_Wages,$Out,$F18)
    do Rsi960us-Print-Value($Out,#LocalPrintLine18,#C_18,'Box 18')
    do Format-Number(#Local_Tax,$Out,$F19)
    do Rsi960us-Print-Value($Out,#LocalPrintLine19,#C_19,'Box 19')

    uppercase $LocalityPrintName

    If &TX.BALANCE_YEAR > 2015 and rtrim($YD_W2_State,' ') = 'OH' and #Align_Count = 0
       do Rsi960us-Print-Value-Locality-OH($LocalityPrintName,#LocalPrintLine20,#C_20,'Box 20')
    else
       do Rsi960us-Print-Value($LocalityPrintName,#LocalPrintLine20,#C_20,'Box 20')
    End-If

    add 2 to #LocalPrintLine18
    add 2 to #LocalPrintLine19
    add 2 to #LocalPrintLine20

    If #j = 1 and #Align_Count = 0
       add #Local_Wages to #Local_Wages_I
       add #Local_Tax to #Local_Tax_I

       If #i = 1
          add 1 to #Local
       End-If
    End-If
    add 1 to #i
  End-While

End-Procedure Rsi960us-Print-Local-Amounts

!***********************************************************************
! Procedure Rsi960us-Print-Locality-Sort-Amounts
!***********************************************************************
Begin-Procedure Rsi960us-Print-Locality-Sort-Amounts

  move 1 to #i
  move #L_18 to #LocalPrintLine18
  move #L_19 to #LocalPrintLine19
  move #L_20 to #LocalPrintLine20

  While #NextLocal < #LocalCount and #i <= #Locals_Per_Form
    add 1 to #NextLocal

    If rtrim($YD_W2_State,' ') = 'OH' and &TX.BALANCE_YEAR > 2015 and #Align_Count = 0
       get $Locality_Name $Locality #Local_Wages #Local_Tax from LOCALS_OH(#NextLocal)
    else
       get $Locality #Local_Wages #Local_Tax from LOCALS(#NextLocal)
    end-if

    If &SLS.LOCALITY = $Locality
       let $Locality = rtrim($Locality,' ')

       If $Locality = $PriorLocality
          If $YD_W2_State <> $PriorState
             move $YD_W2_State to $PriorState
             do Rsi960us-Get-Locality-Print-Name
             move $Locality to $PriorLocality
          End-If
       Else
          do Rsi960us-Get-Locality-Print-Name
          move $Locality to $PriorLocality
       End-If

       If &YD.SEQUENCE_NUMBER > 1
          do Rsi960us-Print-Value($YD_W2_State,#L_15,#C_15,'Box 15')
          do Rsi960us-Print-Value($YD_Employer_ID_SWT,#L_15A,#C_15A,'Box 15A')
       End-If

       do Format-Number(#Local_Wages,$Out,$F18)
       do Rsi960us-Print-Value($Out,#LocalPrintLine18,#C_18,'Box 18')

       do Format-Number(#Local_Tax,$Out,$F19)
       do Rsi960us-Print-Value($Out,#LocalPrintLine19,#C_19,'Box 19')

       uppercase $LocalityPrintName

       If &TX.BALANCE_YEAR > 2015 and rtrim($YD_W2_State,' ') = 'OH' and #Align_Count = 0
          do Rsi960us-Print-Value-Locality-OH($LocalityPrintName,#LocalPrintLine20,#C_20,'Box 20')
       else
          do Rsi960us-Print-Value($LocalityPrintName,#LocalPrintLine20,#C_20,'Box 20')
       End-If

       add 2 to #LocalPrintLine18
       add 2 to #LocalPrintLine19
       add 2 to #LocalPrintLine20
       add 1 to #i

       If #j = 1 and #Align_Count = 0
          add #Local_Wages to #Local_Wages_I
          add #Local_Tax to #Local_Tax_I

          If #i = 1
             add 1 to #Local
          End-If
       End-If
    End-If
  End-While

End-Procedure Rsi960us-Print-Locality-Sort-Amounts

!***********************************************************************
! Procedure Rsi960us-Get-Locality-Print-Name
!***********************************************************************
Begin-Procedure Rsi960us-Get-Locality-Print-Name

  If $AlignForm = 'Y'
     let $LocalityPrintName = lpad($x,to_number(substr($F20,3,instr($F20,')',1)-2)),'X')
     move 'N' to $AlignForm
  Else
     If rtrim($YD_W2_State,' ') = 'PA'
        let $LocalityPrintName = substr(&LD.LOCALITY,1,2)
     Else
        do Rsi960us-Get-Locality-Name
     End-If

     If rtrim($YD_W2_State,' ') = 'IN' and rtrim($Locality,' ') <> '99990'
        let $LocalityPrintName = 'C ' || $LocalityPrintName
     End-If

     If #YE_Locality_Box_Size > #MaxLocal
        let #YE_Locality_Box_Size = #MaxLocal
     End-If

     If length($LocalityPrintName) > #YE_Locality_Box_Size and (rtrim($YD_W2_State,' ') <> 'OH' or &TX.BALANCE_YEAR < 2016)
        let $LocalityPrintName = substr($LocalityPrintName,1,#YE_Locality_Box_Size)
     End-If
  End-If

End-Procedure Rsi960us-Get-Locality-Print-Name

!***********************************************************************
! Procedure Rsi960us-Get-Locality-Name
!***********************************************************************
Begin-Procedure Rsi960us-Get-Locality-Name

  move 'N' to $LocalityNameFound

BEGIN-SELECT
LC2.W2_PRT_NAME
LC2.LOCALITY_ABBRV

  move 'Y' to $LocalityNameFound

FROM PS_LOCAL_TAX_TBL2 LC2
WHERE LC2.STATE    = $YD_W2_State
  AND LC2.LOCALITY = $Locality
  AND LC2.EFFDT    = (SELECT MAX(LC21.EFFDT)
                     FROM PS_LOCAL_TAX_TBL2 LC21
                     WHERE LC21.STATE    = LC2.STATE
                       AND LC21.LOCALITY = LC2.LOCALITY
                       AND LC21.EFFDT   <= $AsOfDate)
END-SELECT

  If #YE_Locality_Box_Size > #MaxLocal
     let #YE_Locality_Box_Size = #MaxLocal
  End-If

  If $LocalityNameFound = 'Y' and rtrim(&LC2.W2_PRT_NAME,' ') <> ''
     let $LocalityPrintName = substr(&LC2.W2_PRT_NAME,1,#YE_Locality_Box_Size)

     If rtrim($YD_W2_State,' ') = 'OH' and &TX.BALANCE_YEAR > 2015
        let $LocW2PrintName = substr(&LC2.W2_PRT_NAME,1,#YE_Locality_Box_Size)
        let $LocalityAbbrv  = substr(&LC2.LOCALITY_ABBRV,1,7)
        let $LocalityAbbrv  = rpad($LocalityAbbrv,7,' ')
        If $Xmlpub = 'Y'
           let $LocalityPrintName = 'SD ' || $LocW2PrintName
        else
           let $LocalityPrintName = $LocalityAbbrv  || ' ' || 'SD ' || $LocW2PrintName
        End-If
     End-If

  Else
     If $LocalityNameFound = 'Y' and rtrim(&LC2.LOCALITY_ABBRV,' ') <> ''
        let $LocalityPrintName = substr(&LC2.LOCALITY_ABBRV,1,#YE_Locality_Box_Size)

     If rtrim($YD_W2_State,' ') = 'OH' and &TX.BALANCE_YEAR > 2015
        let $LocalityPrintName = substr(&LC2.LOCALITY_ABBRV,1,7)
     End-If

     Else
        do Rsi960us-Get-Locality-Abbrv
     End-If
  End-If

End-Procedure Rsi960us-Get-Locality-Name

!***********************************************************************
! Procedure Rsi960us-Get-Locality-Abbrv
!***********************************************************************
Begin-Procedure Rsi960us-Get-Locality-Abbrv

BEGIN-SELECT
LC.LOCALITY_NAME

  let $LocalityPrintName = substr(&LC.LOCALITY_NAME,1,#YE_Locality_Box_Size)

     If rtrim($YD_W2_State,' ') = 'OH' and &TX.BALANCE_YEAR > 2015
        let $LocalityPrintName = substr(&LC.LOCALITY_NAME,1,7)
     End-If

FROM PS_LOCAL_TAX_TBL LC
WHERE LC.STATE    = $YD_W2_State
  AND LC.LOCALITY = $Locality
  AND LC.EFFDT    = (SELECT MAX(LC1.EFFDT)
                    FROM PS_LOCAL_TAX_TBL LC1
                    WHERE LC1.STATE    = LC.STATE
                      AND LC1.LOCALITY = LC.LOCALITY
                      AND LC1.EFFDT   <= $AsOfDate)
END-SELECT

End-Procedure Rsi960us-Get-Locality-Abbrv

!***********************************************************************
! Procedure Rsi960us-Print-Box13
!***********************************************************************
Begin-Procedure Rsi960us-Print-Box13

  If #Align_Count > 0
     do Rsi960us-Print-Value('S',#L_13A,#C_13A,'Box 13A')
     do Rsi960us-Print-Value('P',#L_13B,#C_13B,'Box 13B')
     do Rsi960us-Print-Value('T',#L_13C,#C_13C,'Box 13C')
  End-If

  If $YD_Statutory_Ee = 'Y'
     do Rsi960us-Print-Value('X',#L_13A,#C_13A,'Box 13A')
  End-If

  If $YD_Pension_Plan = 'Y'
     do Rsi960us-Print-Value('X',#L_13B,#C_13B,'Box 13B')
  End-If

  If $YD_Thirdparty_Sickpay = 'Y'
     do Rsi960us-Print-Value('X',#L_13C,#C_13C,'Box 13C')
  End-If

End-Procedure Rsi960us-Print-Box13

!***********************************************************************
! Procedure Rsi960us-Print-Box14
!***********************************************************************
Begin-Procedure Rsi960us-Print-Box14

  move #L_14_Start to #L_14
  Let $Suppl-Box14 = 'N'

  If #L_14 <= 0
     Show ''
     Show '************************************************************************'
     Show '* Print Line not defined for Box 14 in Tax Form Print Parameters Table *'
     Show '* Program Stopped                                                      *'
     Show '************************************************************************'
     Show ''
     STOP
  End-If

  move 0 to #m
  move 4 to #Last_Box14_Line

  If $YD_W2_State = 'NJ'
     get #14 from BOX14(4) AMOUNT

     If #14 > 0
        get #14 from BOX14(5) AMOUNT

        If #14 > 0
           get #14 from BOX14(7) AMOUNT

           If #14 > 0
              put 0 into BOX14(3) AMOUNT
           End-If
        End-If
     End-If
  End-If

  If $YD_W2_State = 'PA'
     get $B_14 $T_14 #C_14 #14 from BOX14(5) BOX TEXT COLUMN AMOUNT

     If #14 > 0
        do Rsi960us-Print-PA-Box14
     End-If

     get $B_14 $T_14 #C_14 #14 from BOX14(#BoxYN) BOX TEXT COLUMN AMOUNT

     If #14 > 0
        do Rsi960us-Print-PA-Box14
     End-If

     get $B_14 $T_14 #C_14 #14 from BOX14(#BoxYT) BOX TEXT COLUMN AMOUNT

     If #14 > 0
        do Rsi960us-Print-PA-Box14
     End-If

     get $B_14 $T_14 #C_14 #14 from BOX14(#BoxZN) BOX TEXT COLUMN AMOUNT

     If #14 > 0
        do Rsi960us-Print-PA-Box14
     End-If

     If #YD_Sequence_Number > 1
        let #m = 30
     Else
        let #m = 6
     End-If
  End-If

  let #NJFLI_Tot = 0

  While #m <= 29 and (#L_14 - #L_14_Start) < #Last_Box14_Line
    get $B_14 $T_14 #C_14 #14 from BOX14(#m) BOX TEXT COLUMN AMOUNT

    If (#m <> #BoxYN and #m <> #BoxYT and #m <> #BoxZN)
       If #14 > 0
          If #Align_Count <> 0
             If ( rtrim($B_14,' ') = $YE_OtherYL OR rtrim($B_14,' ') = rtrim($YE_OtherC, ' ') OR rtrim($B_14,' ') = rtrim($YE_OtherH, ' ') )
                 add #14 to #NJFLI_Tot
                 do Rsi960us-Print-NJSUT
             else
                 print 'XXXXX' (#L_14,#C_14,5)
                 do Format-Number(#14, $Out, $F14)
                 print $Out ()
                 add 1 to #L_14
           End-If
          Else
             If ( rtrim($B_14,' ') = $YE_OtherYL OR rtrim($B_14,' ') = rtrim($YE_OtherC, ' ') OR rtrim($B_14,' ') = rtrim($YE_OtherH, ' ') )
                add #14 to #NJFLI_Tot
                do Rsi960us-Print-NJSUT
             Else
                If $Form_ID = 'LPS4V'
                   print $T_14 (#L_14,#C_14,8)
                   do Format-Number(#14,$Out,$F14)
                   print $Out ()
                Else
                    print $T_14 (#L_14,#C_14,5 )
                    do Format-Number(#14,$Out,$F14)
                    print $Out ()
                End-If
                add 1 to #L_14
             End-If
          End-If
          If #T_Count > #Align_Count
             If #j = 1
                let #Amount = #14
                do Rsi960us-Add-Box14-Totals
             End-If
          End-If
          If $YD_W2_State = 'NJ'
             If #m = #Box14G
                do Rsi960us-Print-NJSUT
             End-If
          End-If
       end-if
    end-if

    add 1 to #m
  end-while

  If #NJFLI_Tot > 0
     do Format-Number(#NJFLI_Tot,$Out,$F_FLI)
     print $Out (#L_FLI,#C_FLI)
     print $T_FLI (,+1)
  End-If

  If (#L_14 - #L_14_Start) = 5
     Show 'Attempted to create more than 4 Box 14 entries for, ' $YD_Ssn ', ' $E_YE_Name
  End-If

  If #YD_Sequence_Number > 1
     do Rsi960us-Print-Suppl-Box14
  End-If

End-Procedure Rsi960us-Print-Box14

!***********************************************************************
! Procedure Rsi960us-Print-Suppl-Box14
!***********************************************************************
Begin-Procedure Rsi960us-Print-Suppl-Box14

  If (#L_14 - #L_14_Start) < 3
     move #L_14_Start to #L_14
     move #C_14_Start to #C_14
     move 4 to #Last_Box14_Line
     add 2 to #L_14
     print 'FED W-2 DATA IS' (#L_14,#C_14,15)
     add 1 to #L_14
     print 'ON SEPARATE W-2' (#L_14,#C_14,15)
     add 1 to #L_14
     Let $Suppl-Box14 = 'Y'
  End-If

End-Procedure Rsi960us-Print-Suppl-Box14

!***********************************************************************
! Procedure Rsi960us-Print-PA-Box14
!***********************************************************************
Begin-Procedure Rsi960us-Print-PA-Box14

  print $T_14 (#L_14,#C_14,5)
  do Format-Number(#14,$Out,$F14)
  print $Out ()

  If #T_Count > #Align_Count
     If #j = 1
        let #Amount = #14
        do Rsi960us-Add-Box14-Totals
     End-If
  End-If

  add 1 to #L_14

End-Procedure Rsi960us-Print-PA-Box14

!***********************************************************************
! Procedure Rsi960us-Print-NJSUT
!***********************************************************************
Begin-Procedure Rsi960us-Print-NJSUT

BEGIN-SELECT
CST.EMPLOYER_ID_SUT
CST.VDI_PLAN_NBR
#IfDef O_NJFLI
CST.PNA_FLI_PLAN_NBR
#End-If

 if #m = 6         ! DI Plan #

  move &CST.VDI_Plan_Nbr to $VDI_Plan_Nbr
  let $VDI_Plan_Nbr = 'DI PP # ' || $VDI_Plan_Nbr
  let #vdi_length = length($VDI_Plan_Nbr)

     #ifndef LayoutW2-6
         let #L15A = #L_15A + 1
     #endif
     #ifdef LayoutW2-6
         let #L15A = #L_15A + 2
     #endif
     print $VDI_Plan_Nbr (#L_14,#C_14,#VDI_Length)
     add 1 to #L_14

  else              ! FLI Plan #
     #IfDef O_NJFLI
        let $FLI_Plan_Nbr  = rtrim(&CST.PNA_FLI_PLAN_NBR,' ')

        If $FLI_Plan_Nbr <> ''
           let $FLI_Plan_Text = 'FLI PP # '
           let $FLI_Plan_Nbr  = $FLI_Plan_Text || $FLI_Plan_Nbr
           let #C_FLI_Nbr     = #C_FLI - 20
           print $FLI_Plan_Nbr (#L_FLI,#C_FLI_Nbr)
        End-If
     #End-If
  End-If

FROM PS_CO_STATETAX_TBL CST
WHERE CST.COMPANY = $YD_Company
  AND CST.STATE   = 'NJ'
  AND CST.EFFDT   = (SELECT MAX(CST1.EFFDT)
                    FROM PS_CO_STATETAX_TBL CST1
                    WHERE CST1.COMPANY = $YD_Company
                      AND CST1.STATE   = 'NJ'
                      AND CST1.EFFDT  <= $AsOfDate)
END-SELECT

End-Procedure Rsi960us-Print-NJSUT

!***********************************************************************
! Procedure Rsi960us-Print-Value
!***********************************************************************
Begin-Procedure Rsi960us-Print-Value($String,#Line,#Col,$Identifier)

  #IfDef DebugA
     do Rsi960us-DebugA
  #EndIf

  If #Line > 0 and #Col > 0
     print $String (#Line,#Col)
  Else
     Show ''
     Show '************************************************************************************'
     Show '* Print Line not defined for, ' $Identifier ', in Tax Form Print Parameters Table. *'
     Show '* Program Stopped.                                                                 *'
     Show '************************************************************************************'
     Show ''
     STOP
  End-If

End-Procedure Rsi960us-Print-Value

!***********************************************************************
! Procedure Rsi960us-Print-Value-Locality-OH
!***********************************************************************
Begin-Procedure Rsi960us-Print-Value-Locality-OH($String,#Line,#Col,$Identifier)

  #IfDef DebugA
     do Rsi960us-DebugA
  #EndIf

  let $String1 = ''
  let $String2 = ''
  let $LocalityAbbrv = substr($String,1,7)
  let $LocW2PrintName = substr($String,9,15)

  if rtrim($LocalityAbbrv,' ') <> ''
     let $String1 = $LocalityAbbrv
  else
     let $String1 = $String
  end-if

  if rtrim($LocW2PrintName,' ') <> ''
      let #Line1 = #Line - 1
      let $String2 = $LocW2PrintName
  else
      let #Line1 = #Line
  end-if

  If #Line > 0 and #Col > 0
     print $String1 (#Line1,#Col)
     if rtrim($String2,' ') <> ''
        let #Line2 = #Line1 + 1
        print $String2 (#Line2,#Col)
     end-if
  Else
     Show ''
     Show '************************************************************************************'
     Show '* Print Line not defined for, ' $Identifier ', in Tax Form Print Parameters Table. *'
     Show '* Program Stopped.                                                                 *'
     Show '************************************************************************************'
     Show ''
     STOP
  End-If

End-Procedure Rsi960us-Print-Value-Locality-OH

!***********************************************************************
! Procedure Rsi960us-Print-Grand-Totals
!***********************************************************************
Begin-Procedure Rsi960us-Print-Grand-Totals

  do Rsi960us-Print-Box-Totals

End-Procedure Rsi960us-Print-Grand-Totals

!***********************************************************************
! Procedure Rsi960us-Next-Form
!***********************************************************************
Begin-Procedure Rsi960us-Next-Form

  Evaluate $Layout_Style
    When = '4CORNER'
    When = '4CORNERPS'
      do Rsi960us-Next-Form-FourCorner
      Break
    When = '4VERTICAL'
      do Rsi960us-Next-Form-FourVertical
      Break
    When = '2VERTICAL'
      do Rsi960us-Next-Form-TwoVertical
      Break
  End-Evaluate

End-Procedure Rsi960us-Next-Form

!***********************************************************************
! Procedure Rsi960us-Next-Form-FourCorner
!***********************************************************************
Begin-Procedure Rsi960us-Next-Form-FourCorner

  If #Form_Nbr <> 4
     add 1 to #Form_Nbr
  Else
     move 1 to #Form_Nbr
  End-If

  Evaluate #Form_Nbr
    When = 1
      If $Layout_Style <> '4CORNERPS'
         new-page
      Else
         If $First_Page_PS = 'N'
            next-listing
         End-If

         let $First_Page_PS = 'N'
      End-If

      do Rsi960us-Print-Value(' ',#Top_Margin,1,'Top Margin')
      next-listing
      do Rsi960us-Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      Break
    When = 2
      next-column
      do Rsi960us-Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      Break
    When = 3
      next-listing
      do Rsi960us-Print-Value(' ',#Center_Split,1,'Center Split')
      next-listing
      do Rsi960us-Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      Break
    When = 4
      next-column
      do Rsi960us-Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
  End-Evaluate

End-Procedure Rsi960us-Next-Form-FourCorner

!***********************************************************************
! Procedure Rsi960us-Next-Form-FourVertical
!***********************************************************************
Begin-Procedure Rsi960us-Next-Form-FourVertical

  If #Form_Nbr <> 4
     add 1 to #Form_Nbr
  Else
     move 1 to #Form_Nbr
  End-If

  Evaluate #Form_Nbr
    When = 1
      If $Form_ID = 'LPS4V'
         next-listing
      Else
         new-page
      End-If
      do Rsi960us-Print-Value(' ',#Top_Margin,1,'Top Margin')
      next-listing
      do Rsi960us-Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      Break
    When = 2
      next-listing
      do Rsi960us-Print-Value(' ',#Top_Split,1,'Top Split')
      next-listing
      do Rsi960us-Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      Break
    When = 3
      next-listing
      do Rsi960us-Print-Value(' ',#Center_Split,1,'Center Split')
      next-listing
      do Rsi960us-Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      Break
    When = 4
      next-listing
      do Rsi960us-Print-Value(' ',#Bottom_Split,1,'Bottom Split')
      next-listing
      do Rsi960us-Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
  End-Evaluate

End-Procedure Rsi960us-Next-Form-FourVertical

!***********************************************************************
! Procedure Rsi960us-Next-Form-TwoVertical
!***********************************************************************
Begin-Procedure Rsi960us-Next-Form-TwoVertical

  If #Form_Nbr <> 2
     add 1 to #Form_Nbr
  Else
     move 1 to #Form_Nbr
  End-If

  Evaluate #Form_Nbr
    When = 1
      new-page
      next-column
      do Rsi960us-Print-Value(' ',#Top_Margin,1,'Top Margin')
      next-listing
      do Rsi960us-Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      Break
    When = 2
      next-listing
      do Rsi960us-Print-Value(' ',#Center_Split,1,'Center Split')
      next-listing
      do Rsi960us-Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
  End-Evaluate

End-Procedure Rsi960us-Next-Form-TwoVertical

!***********************************************************************
! Procedure Rsi960us-Load-Test-Data
!***********************************************************************
Begin-Procedure Rsi960us-Load-Test-Data

  let $YD_Ssn             = lpad($x,to_number(substr($FA,3,instr($FA,')',1)-2)),'X')
  let $W2C_Federal_EIN    = lpad($x,to_number(substr($FB,3,instr($FB,')',1)-2)),'X')
  let $W2C_Descr          = lpad($x,to_number(substr($FC1,3,instr($FC1,')',1)-2)),'X')
  let $W2C_Address1       = lpad($x,to_number(substr($FC2,3,instr($FC2,')',1)-2)),'X')
  let $W2C_Address2       = lpad($x,to_number(substr($FC3,3,instr($FC3,')',1)-2)),'X')
  let $C4                 = lpad($x,to_number(substr($FC4,3,instr($FC4,')',1)-2)),'X')
  let $YD_Control_Number  = lpad($x,to_number(substr($FD,3,instr($FD,')',1)-2)),'X')
  let $E_YE_Name          = lpad($x,to_number(substr($FE,3,instr($FE,')',1)-2)),'X')
  let $E_YE_FirstName     = lpad($x,to_number(substr($FE1,3,instr($FE1,')',1)-2)),'X')
  let $E_YE_LastName      = lpad($x,to_number(substr($FE3,3,instr($FE3,')',1)-2)),'X')
  let $E_YE_Suffix        = lpad($x,to_number(substr($FE4,3,instr($FE4,')',1)-2)),'X')
  let $YD_Address1        = lpad($x,to_number(substr($FF1,3,instr($FF1,')',1)-2)),'X')
  let $YD_Address2        = lpad($x,to_number(substr($FF2,3,instr($FF2,')',1)-2)),'X')
  let $F3                 = lpad($x,to_number(substr($FF3,3,instr($FF3,')',1)-2)),'X')
  let $E_YE_Name_flap     = lpad($x,55,'X')
  let $YD_Address1_flap   = lpad($x,55,'X')
  let $YD_Address2_flap   = lpad($x,55,'X')
  let $F3_Flap            = lpad($x,55,'X')

  If $Form_ID <> 'LSR02A'
     let $ReprintDescr = lpad($x,to_number(substr($FReprint,3,instr($FReprint,')',1)-2)),'X')
  Else
     let $ReprintDescr = lpad($x,15,'X')
  End-If

  let $ReprintDescr1 = lpad($x,to_number(substr($FReprint1,3,instr($FReprint1,')',1)-2)),'X')
  let $ReprintDescr2 = lpad($x,to_number(substr($FReprint2,3,instr($FReprint2,')',1)-2)),'X')

  move $F01 to $01
  let $01 = translate($01,'Bb','99')
  move $01 to #Fed_Wages

  move $F02 to $02
  let $02 = translate($02,'Bb','99')
  move $02 to #Fed_Tax

  move $F03 to $03
  let $03 = translate($03,'Bb','99')
  move $03 to #SS_Wages

  move $F04 to $04
  let $04 = translate($04,'Bb','99')
  move $04 to #SS_Tax

  move $F05 to $05
  let $05 = translate($05,'Bb','99')
  move $05 to #Med_Wages

  move $F06 to $06
  let $06 = translate($06,'Bb','99')
  move $06 to #Med_Tax

  move $F07 to $07
  let $07 = translate($07,'Bb','99')
  move $07 to #SS_Tips

  move $F08 to $08
  let $08 = translate($08,'Bb','99')
  move $08 to #Alloc_Tips

  move $F09 to $09
  let $09 = translate($09,'Bb','99')
  move $09 to #Adv_EIC

  move $F10 to $10
  let $10 = translate($10,'Bb','99')
  move $10 to #Dep_Care

  move $F11 to $11
  let $11 = translate($11,'Bb','99')
  move $11 to #Non_Qual_457_Amt

  move $F12 to $12
  let $12 = translate($12,'Bb','99')
  move $12 to #Uncoll_SS_Tax_On_Tips
  move $12 to #Uncoll_Med_Tax_On_Tips
  move $12 to #Group_Term_Life
  move $12 to #401K

  move $F14 to $14
  let $14 = translate($14,'Bb','99')
  move $14 to #14
  move 0 to #i

  While #i <= 3
    put #14 into BOX14(#i) AMOUNT
    add 1 to #i
  End-While

  let $YD_W2_State = lpad($x,to_number(substr($F15,3,instr($F15,')',1)-2)),'X')
  let $YD_Employer_ID_SWT = lpad($x,to_number(substr($F15A,3,instr($F15A,')',1)-2)),'X')

  move $F16 to $16
  let $16 = translate($16,'Bb','99')
  move $16 to #State_Wages

  move $F17 to $17
  let $17 = translate($17,'Bb','99')
  move $17 to #State_Tax

  let #LocalSize = to_number(substr($F20,3,instr($F20,')',1)-2))

  If #LocalSize > #MaxLocal
     let $LocalityPrintName = lpad($x,#MaxLocal,'X')
  Else
     let $LocalityPrintName = lpad($x,#LocalSize,'X')
  End-If

  move $F18 to $18
  let $18 = translate($18,'Bb','99')
  move $18 to #Local_Wages

  move $F19 to $19
  let $19 = translate($19,'Bb','99')
  move $19 to #Local_Tax

  put #Local_Wages #Local_Tax into LOCALS(1) TXGRS TAX
  put #Local_Wages #Local_Tax into LOCALS(2) TXGRS TAX

  move #Locals_Per_Form to #LocalCount

End-Procedure Rsi960us-Load-Test-Data

!***********************************************************************
! Procedure Rsi960us-W2-Sort
!***********************************************************************
Begin-Procedure Rsi960us-W2-Sort

  Evaluate $SortCode1
    When = '3'
      move 'PayGroup: ' to $SortField
      Break
    When = '4'
      move 'Dept ID:  ' to $SortField
      Break
    When = '6'
      move 'Mail Drop:' to $SortField
  End-Evaluate

  move '' to $priorSortValue

BEGIN-SELECT
JB.COMPANY
JB.PAYGROUP
JB.DEPTID
NS.EMPLID
NS.NAME
NID.NATIONAL_ID
PY.MAIL_DROP
PY.PRIM_PAYGROUP

  If &PY.MAIL_DROP <> ' '
     move &PY.MAIL_DROP to $Mail_Drop_Hold
  Else
     do Rsi960us-Get-Position-Nbr-From-Job
  End-If

  move &NS.EMPLID to $Emplid

  Evaluate $SortCode1
    When = '3'
      move &JB.PAYGROUP to $SortValue
      Break
    When = '4'
      move &JB.DEPTID to $SortValue
      Break
    When = '6'
      move $Mail_Drop_Hold to $SortValue
  End-Evaluate

  If $SortValue <> $PriorSortValue
     If $PriorSortValue <> '' and $SortEmployeeFound = 'Y'
        new-page
        move 'N' to $SortEmployeeFound
     End-If
     move $SortValue to $PriorSortValue
  End-If

  let $E_SelectedEEs = 'AND YD.EMPLID = ''' || &NS.EMPLID || ''''

  do Rsi960us-Read-Employee-Data

FROM PS_NAMES NS, PS_PERS_NID NID, PS_PAYROLL_DATA PY, PS_JOB JB
WHERE NS.NAME_TYPE         = 'PRI'
  AND NS.EMPLID            = NID.EMPLID
  AND NID.COUNTRY          = {NID_COUNTRY}
  AND NID.NATIONAL_ID_TYPE = $Payroll_Nid_Type
  AND PY.EMPLID            = JB.EMPLID
  AND PY.COMPANY           = JB.COMPANY
  AND JB.EMPLID            = NS.EMPLID
  AND NS.EFFDT             = (SELECT MAX(NSX.EFFDT)
                             FROM PS_NAMES NSX
                             WHERE NSX.EMPLID    = NS.EMPLID
                               AND NSX.NAME_TYPE = NS.NAME_TYPE
                               AND NSX.EFFDT    <= $AsOfDate)
  AND JB.EFFDT             = (SELECT MAX(JJ.EFFDT)
                             FROM PS_JOB JJ, PS_W2_COMPANY W
                             WHERE JJ.EMPLID         = JB.EMPLID
                               AND W.W2_REPORTING_CO = &W2C.W2_REPORTING_CO
                               AND W.CALENDAR_YEAR   = &TX.BALANCE_YEAR
                               AND JJ.COMPANY        = W.COMPANY
                               AND JJ.EFFDT         <= $AsOfDate)
  AND JB.EMPL_RCD          = (SELECT MAX(JJ1.EMPL_RCD)
                             FROM PS_JOB JJ1, PS_W2_COMPANY W1
                             WHERE JJ1.EMPLID         = JB.EMPLID
                               AND W1.W2_REPORTING_CO = &W2C.W2_REPORTING_CO
                               AND W1.CALENDAR_YEAR   = &TX.BALANCE_YEAR
                               AND JJ1.COMPANY        = W1.COMPANY
                               AND JJ1.EFFDT          = JB.EFFDT)
  AND JB.EFFSEQ            = (SELECT MAX(JJJ.EFFSEQ)
                             FROM PS_JOB JJJ, PS_W2_COMPANY WW
                             WHERE JJJ.EMPLID         = JB.EMPLID
                               AND JJJ.EMPL_RCD       = JB.EMPL_RCD
                               AND WW.W2_REPORTING_CO = &W2C.W2_REPORTING_CO
                               AND WW.CALENDAR_YEAR   = &TX.BALANCE_YEAR
                               AND JJJ.COMPANY        = WW.COMPANY
                               AND JJJ.EFFDT          = JB.EFFDT)
  AND EXISTS                (SELECT 'X'
                             FROM PS_YE_DATA YE
                             WHERE YE.EMPLID        = NS.EMPLID
                               AND YE.CALENDAR_YEAR = &TX.BALANCE_YEAR
                               AND YE.TAXFORM_ID    = $Taxform_id)
  [$S_SelectedEEs]
  [$SelectedPrint2]
[$Sort1]
END-SELECT

End-Procedure Rsi960us-W2-Sort

!***********************************************************************
! Procedure Rsi960us-Get-Position-Nbr-From-Job
!***********************************************************************
Begin-Procedure Rsi960us-Get-Position-Nbr-From-Job

BEGIN-SELECT
JB1.POSITION_NBR

  If &JB1.POSITION_NBR <> ' '
     do Rsi960us-Get-Mail-Drop-From-Position-Data
  End-If

FROM PS_JOB JB1
WHERE JB1.EMPLID   = $Emplid
  AND JB1.PAYGROUP = &PY.PRIM_PAYGROUP
  AND JB1.EFFDT    = (SELECT MAX(JJOB.EFFDT)
                     FROM PS_JOB JJOB
                     WHERE JJOB.EMPLID   = JB1.EMPLID
                       AND JJOB.PAYGROUP = JB1.PAYGROUP)
  AND JB1.EMPL_RCD = (SELECT MAX(JJOB1.EMPL_RCD)
                     FROM PS_JOB JJOB1
                     WHERE JJOB1.EMPLID   = JB1.EMPLID
                       AND JJOB1.PAYGROUP = JB1.PAYGROUP
                       AND JJOB1.EFFDT    = JB1.EFFDT)
  AND JB1.EFFSEQ   = (SELECT MAX(JJJOB.EFFSEQ)
                     FROM PS_JOB JJJOB
                     WHERE JJJOB.EMPLID   = JB1.EMPLID
                       AND JJJOB.PAYGROUP = JB1.PAYGROUP
                       AND JJJOB.EMPL_RCD = JB1.EMPL_RCD
                       AND JJJOB.EFFDT    = JB1.EFFDT)
END-SELECT

End-Procedure Rsi960us-Get-Position-Nbr-From-Job

!***********************************************************************
! Procedure Rsi960us-Get-Mail-Drop-From-Position-Data
!***********************************************************************
Begin-Procedure Rsi960us-Get-Mail-Drop-From-Position-Data

BEGIN-SELECT
PSD.MAIL_DROP

   move &PSD.MAIL_DROP to $Mail_Drop_Hold

FROM PS_POSITION_DATA PSD
WHERE PSD.POSITION_NBR = &JB1.POSITION_NBR
  AND PSD.EFFDT        = (SELECT MAX(PSD1.EFFDT)
                           FROM PS_POSITION_DATA PSD1
                           WHERE PSD1.POSITION_NBR = PSD.POSITION_NBR)
END-SELECT

End-Procedure Rsi960us-Get-Mail-Drop-From-Position-Data

!***********************************************************************
! Procedure Rsi960us-Delete-Sel-Employees-Table
!***********************************************************************
Begin-Procedure Rsi960us-Delete-Sel-Employees-Table

BEGIN-SQL on-error=Rsi960us-Ignore-Error
DELETE FROM PS_RC_TAX960US
WHERE OPRID       = $Prcs_OprID
  AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID

END-SQL

End-Procedure Rsi960us-Delete-Sel-Employees-Table

!***********************************************************************
! Procedure Rsi960us-Delete-Sel-Company-Table
!***********************************************************************
Begin-Procedure Rsi960us-Delete-Sel-Company-Table

BEGIN-SQL on-error=Rsi960us-Ignore-Error
DELETE FROM PS_RC_SEL_COMPANY
WHERE OPRID       = $Prcs_OprID
  AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID
END-SQL

End-Procedure Rsi960us-Delete-Sel-Company-Table

!***********************************************************************
! Procedure Rsi960us-Delete-Sel-State-Table
!***********************************************************************
Begin-Procedure Rsi960us-Delete-Sel-State-Table

BEGIN-SQL on-error=Rsi960us-Ignore-Error
DELETE FROM PS_RC_SEL_STATE
WHERE OPRID       = $Prcs_OprID
  AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID
END-SQL

End-Procedure Rsi960us-Delete-Sel-State-Table

!***********************************************************************
! Procedure Rsi960us-Zero-Box14
!***********************************************************************
Begin-Procedure Rsi960us-Zero-Box14

  move 0 to #m

  While #m <= 29
    put 0 into BOX14(#m) AMOUNT
    add 1 to #m
  End-While

  move #L_14_Start to #L_14

End-Procedure Rsi960us-Zero-Box14

!***********************************************************************
! Procedure Rsi960us-Zero-Local-Table
!***********************************************************************
Begin-Procedure Rsi960us-Zero-Local-Table

  move 0 to #l

  While #l <= 20
    put '      ' into LOCALS(#l)  LOCALITY
    put 0        into LOCALS(#l)  TXGRS
    put 0        into LOCALS(#l)  TAX
    add 1        to #l
  End-While

 move 0 to #loc

  While #loc <= 20
    put '      ' into LOCALS_OH(#loc)  LOCALITY_NAME_OH
    put '      ' into LOCALS_OH(#loc)  LOCALITY_OH
    put 0        into LOCALS_OH(#loc)  TXGRS_OH
    put 0        into LOCALS_OH(#loc)  TAX_OH
    add 1        to #loc
  End-While

End-Procedure Rsi960us-Zero-Local-Table

!***********************************************************************
! Procedure Rsi960us-Ignore-Error
!***********************************************************************
Begin-Procedure Rsi960us-Ignore-Error

! dummy procedure to avoid SQL error message on delete of empty table

End-Procedure Rsi960us-Ignore-Error

!***********************************************************************
! Procedure Rsi960us-Clear-W2-Variables
!***********************************************************************
Begin-Procedure Rsi960us-Clear-W2-Variables

  move 'N' to $Non_Qual_457_Y
  move 'N' to $Non_Qual_457_N
  move 0 to #Fed_Wages
  move 0 to #Fed_Tax
  move 0 to #SS_Wages
  move 0 to #SS_Tax
  move 0 to #Med_Wages
  move 0 to #Med_Tax
  move 0 to #SS_Tips
  move 0 to #Alloc_Tips
  move 0 to #Adv_EIC
  move 0 to #Dep_Care
  move 0 to #Non_Qual_457_Amt
  move 0 to #Uncoll_SS_Tax_On_Tips
  move 0 to #Roth_401K
  move 0 to #Uncoll_Med_Tax_On_Tips
  move 0 to #Roth_403B
  move 0 to #Roth_Contribution_457b
  move 0 to #Group_Term_Life
  move 0 to #401K
  move 0 to #403B
  move 0 to #408K6
  move 0 to #457B
  move 0 to #501C18D
  move 0 to #Sick_Pay
  move 0 to #Excise_Tax
  move 0 to #Business_Exp
  move 0 to #Uncoll_SS_Tax_GTL
  move 0 to #Uncoll_Med_Tax_GTL
  move 0 to #Excl_Moving_Exp
  move 0 to #Basic_Qtrs_and_Subsist
  move 0 to #Combat_Pay
  move 0 to #Med_Svgs_Acct
  move 0 to #408P_Simple_Retirement
  move 0 to #Adoption_Exp
  move 0 to #NonStatutory_Stock_Opt
  move 0 to #HSA_Employer_Contrib
  move 0 to #409A_Def_NQ_Def_Comp
  move 0 to #409A_Inc_NQ_Def_Comp
  move 0 to #Hire_Exempt_Wage_Tips
  move 0 to #ER_Hlth_Cvrg
  move 0 to #State_Wages
  move 0 to #State_Tax
  move 0 to #OtherA
  move 0 to #OtherB
  move 0 to #OtherC
  move 0 to #OtherD
  move 0 to #OtherE
  move 0 to #OtherF
  move 0 to #OtherG
  move 0 to #OtherH
  move 0 to #OtherI
  move 0 to #OtherJ
  move 0 to #OtherK
  move 0 to #OtherL
  move 0 to #OtherM
  move 0 to #OtherN
  move 0 to #OtherO
  move 0 to #OtherP
  move 0 to #OtherQ
  move 0 to #OtherR
  move 0 to #OtherS
  move 0 to #OtherT
  move 0 to #OtherU
  move 0 to #OtherV
  move 0 to #OtherW
  move 0 to #OtherX
  move 0 to #OtherY
  move 0 to #OtherYN
  move 0 to #OtherYT
  move 0 to #OtherZ
  move 0 to #OtherZN

End-Procedure Rsi960us-Clear-W2-Variables

!***********************************************************************
! Procedure Rsi960us-Assign-Year-End-Variables
!***********************************************************************
Begin-Procedure Rsi960us-Assign-Year-End-Variables

  let $YE_Fed_Wages                 = '01'
  let $YE_Fed_Tax                   = '02'
  let $YE_SS_Wages                  = '03'
  let $YE_SS_Tax                    = '04'
  let $YE_Med_Wages                 = '05'
  let $YE_Med_Tax                   = '06'
  let $YE_SS_Tips                   = '07'
  let $YE_Alloc_Tips                = '08'
  let $YE_Adv_EIC                   = '09'
  let $YE_Dep_Care                  = '10'
  let $YE_Non_Qual_457              = '11'
  let $YE_Non_Qual_457_Y            = '11A'
  let $YE_Non_Qual_457_N            = '11B'
  let $YE_Box12_StartPos            = '12'
  let $YE_Uncoll_SS_Tax_On_Tips     = '12A '
  let $YE_Uncoll_Med_Tax_On_Tips    = '12B '
  let $YE_Group_Term_Life           = '12C '

  If &TX.BALANCE_YEAR = 2010
     let $YE_Hire_Exempt_Wage_Tips  = '12CC'
  End-If

  If &TX.BALANCE_YEAR > 2010
     let $YE_Roth_Contribution_457b = '12EE'
  End-If

  If &TX.BALANCE_YEAR > 2011
     let $YE_ER_Hlth_Cvrg           = '12DD'
  End-If

  let $YE_401K                      = '12D '
  let $YE_403B                      = '12E '
  let $YE_408K6                     = '12F '
  let $YE_457B                      = '12G '
  let $YE_501C18D                   = '12H '
  let $YE_Sick_Pay                  = '12J '
  let $YE_Excise_Tax                = '12K '
  let $YE_Business_Exp              = '12L '
  let $YE_Uncoll_SS_Tax_GTL         = '12M '
  let $YE_Uncoll_Med_Tax_GTL        = '12N '
  let $YE_Excl_Moving_Exp           = '12P '
  let $YE_Combat_Pay                = '12Q '
  let $YE_Med_Svgs_Acct             = '12R '
  let $YE_408P_Simple_Retirement    = '12S '
  let $YE_Adoption_Exp              = '12T '
  let $YE_NonStatutory_Stock_Opt    = '12V '
  let $YE_HSA_Employer_Contrib      = '12W '
  let $YE_409A_Def_NQ_Def_Comp      = '12Y '
  let $YE_409A_Inc_NQ_Def_Comp      = '12Z '
  let $YE_Statut_EE                 = '13A'
  let $YE_Retire_Plan               = '13B'
  let $YE_Third_Party_Sick_Pay      = '13C'
  let $YE_Other                     = '14'
  let $YE_OtherA                    = '14A '
  let $YE_OtherB                    = '14B '
  let $YE_OtherC                    = '14C '
  let $YE_OtherD                    = '14D '
  let $YE_OtherE                    = '14E '
  let $YE_OtherF                    = '14F '
  let $YE_OtherG                    = '14G '
  let $YE_OtherH                    = '14H '
  let $YE_OtherI                    = '14I '
  let $YE_OtherJ                    = '14J '
  let $YE_OtherK                    = '14K '
  let $YE_OtherL                    = '14L '
  let $YE_OtherM                    = '14M '
  let $YE_OtherN                    = '14N '
  let $YE_OtherO                    = '14O '
  let $YE_OtherP                    = '14P '
  let $YE_OtherQ                    = '14Q '
  let $YE_OtherR                    = '14R '
  let $YE_OtherS                    = '14S '
  let $YE_OtherT                    = '14T '
  let $YE_OtherU                    = '14U '
  let $YE_OtherV                    = '14V '
  let $YE_OtherW                    = '14W '
  let $YE_OtherX                    = '14X '
  let $YE_OtherY                    = '14Y '
  let $YE_OtherZ                    = '14Z '
  let $YE_State                     = '15'
  let $YE_State_ID                  = '15A'
  let $YE_State_Wages               = '16'
  let $YE_State_Tax                 = '17'
  let $YE_Local_Wages               = '18'
  let $YE_Local_Tax                 = '19'
  let $YE_Locality                  = '20'
  let $YE_EE_SSN                    = 'A'
  let $YE_ER_ID                     = 'B'
  let $YE_ER_Name                   = 'C1'
  let $YE_ER_Address1               = 'C2'
  let $YE_ER_Address2               = 'C3'
  let $YE_State_City_Zip            = 'C4'
  let $YE_Control_Nbr               = 'D'
  let $YE_EE_FullName               = 'E'
  let $YE_EE_FName                  = 'E1'
  let $YE_EE_Init                   = 'E2'
  let $YE_EE_LName                  = 'E3'
  let $YE_EE_Address1               = 'F1'
  let $YE_EE_Address2               = 'F2'
  let $YE_EE_Country                = 'F3'
  let $YE_EE_City                   = 'F4'
  let $YE_EE_State                  = 'F5'
  let $YE_EE_Zip                    = 'F6'
  let $YE_EE_Suffix                 = 'E4'
  let $YE_OtherYL                   = '14YL'
  let $YE_OtherYN                   = '14YN'
  let $YE_OtherYT                   = '14YT'
  let $YE_OtherZN                   = '14ZN'
  let $YE_Roth_401K                 = '12AA'
  let $YE_Roth_403B                 = '12BB'

End-Procedure Rsi960us-Assign-Year-End-Variables

!***********************************************************************
! Procedure Rsi960us-Evaluate-Print-Box
!***********************************************************************
Begin-Procedure Rsi960us-Evaluate-Print-Box

  Evaluate $TP_Box
    When = $YE_Fed_Wages
      move &TP.PRINT_LINE to #L_01
      move &TP.PRINT_COL  to #C_01
      let $F01 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_Fed_Tax
      move &TP.PRINT_LINE to #L_02
      move &TP.PRINT_COL  to #C_02
      let $F02 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_SS_Wages
      move &TP.PRINT_LINE to #L_03
      move &TP.PRINT_COL  to #C_03
      let $F03 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_SS_Tax
      move &TP.PRINT_LINE to #L_04
      move &TP.PRINT_COL  to #C_04
      let $F04 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_Med_Wages
      move &TP.PRINT_LINE to #L_05
      move &TP.PRINT_COL  to #C_05
      let $F05 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_Med_Tax
      move &TP.PRINT_LINE to #L_06
      move &TP.PRINT_COL  to #C_06
      let $F06 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_SS_Tips
      move &TP.PRINT_LINE to #L_07
      move &TP.PRINT_COL  to #C_07
      let $F07 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_Alloc_Tips
      move &TP.PRINT_LINE to #L_08
      move &TP.PRINT_COL  to #C_08
      let $F08 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_Adv_EIC
      move &TP.PRINT_LINE to #L_09
      move &TP.PRINT_COL  to #C_09
      let $F09 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_Dep_Care
      move &TP.PRINT_LINE to #L_10
      move &TP.PRINT_COL  to #C_10
      let $F10 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_Non_Qual_457
      move &TP.PRINT_LINE to #L_11
      move &TP.PRINT_COL  to #C_11
      let $F11 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_Box12_StartPos
      move &TP.PRINT_LINE to #L_12_Start
      let $F12 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_Uncoll_SS_Tax_On_Tips
      move &TP.PRINT_COL to #C_Uncoll_SS_Tax_On_Tips
      let $F_Uncoll_SS_Tax_On_Tips = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Uncoll_SS_Tax_On_Tips = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Roth_401K
      move &TP.PRINT_COL to #C_Roth_401K
      let $F_Roth_401K = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Roth_401K = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Uncoll_Med_Tax_On_Tips
      move &TP.PRINT_COL to #C_Uncoll_Med_Tax_On_Tips
      let $F_Uncoll_Med_Tax_On_Tips = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Uncoll_Med_Tax_On_Tips = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Roth_403B
      move &TP.PRINT_COL to #C_Roth_403B
      let $F_Roth_403B = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Roth_403B = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Roth_Contribution_457b
      move &TP.PRINT_COL to #C_Roth_Contribution_457b
      let $F_Roth_Contribution_457b = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Roth_Contribution_457b = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Group_Term_Life
      move &TP.PRINT_COL to #C_Group_Term_Life
      let $F_Group_Term_Life = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Group_Term_Life = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_401K
      move &TP.PRINT_COL to #C_401K
      let $F_401K = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_401K = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_403B
      move &TP.PRINT_COL to #C_403B
      let $F_403B = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_403B = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_408K6
      move &TP.PRINT_COL to #C_408K6
      let $F_408K6 = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_408K6 = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_457B
      move &TP.PRINT_COL to #C_457B
      let $F_457B = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_457B = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_501C18D
      move &TP.PRINT_COL to #C_501C18D
      let $F_501C18D = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_501C18D = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Sick_Pay
      move &TP.PRINT_COL to #C_Sick_Pay
      let $F_Sick_Pay = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Sick_Pay = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Excise_Tax
      move &TP.PRINT_COL to #C_Excise_Tax
      let $F_Excise_Tax = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Excise_Tax = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Business_Exp
      move &TP.PRINT_COL to #C_Business_Exp
      let $F_Business_Exp = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Business_Exp = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Uncoll_SS_Tax_GTL
      move &TP.PRINT_COL to #C_Uncoll_SS_Tax_GTL
      let $F_Uncoll_SS_Tax_GTL = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Uncoll_SS_Tax_GTL = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Uncoll_Med_Tax_GTL
      move &TP.PRINT_COL to #C_Uncoll_Med_Tax_GTL
      let $F_Uncoll_Med_Tax_GTL = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Uncoll_Med_Tax_GTL = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Excl_Moving_Exp
      move &TP.PRINT_COL to #C_Excl_Moving_Exp
      let $F_Excl_Moving_Exp = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Excl_Moving_Exp = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Basic_Qtrs_and_Subsist
      move &TP.PRINT_COL to #C_Basic_Qtrs_and_Subsist
      let $F_Basic_Qtrs_and_Subsist = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Basic_Qtrs_and_Subsist = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Combat_Pay
      move &TP.PRINT_COL to #C_Combat_Pay
      let $F_Combat_Pay = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Combat_Pay = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Med_Svgs_Acct
      move &TP.PRINT_COL to #C_Med_Svgs_Acct
      let $F_Med_Svgs_Acct = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Med_Svgs_Acct = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_408P_Simple_Retirement
      move &TP.PRINT_COL to #C_408P_Simple_Retirement
      let $F_408P_Simple_Retirement = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_408P_Simple_Retirement = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Adoption_Exp
      move &TP.PRINT_COL to #C_Adoption_Exp
      let $F_Adoption_Exp = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Adoption_Exp = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_NonStatutory_Stock_Opt
      move &TP.PRINT_COL to #C_NonStatutory_Stock_Opt
      let $F_NonStatutory_Stock_Opt = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_NonStatutory_Stock_Opt = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_HSA_Employer_Contrib
      move &TP.PRINT_COL to #C_HSA_Employer_Contrib
      let $F_HSA_Employer_Contrib = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_HSA_Employer_Contrib = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_409A_Def_NQ_Def_Comp
      move &TP.PRINT_COL to #C_409A_Def_NQ_Def_Comp
      let $F_409A_Def_NQ_Def_Comp = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_409A_Def_NQ_Def_Comp = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_409A_Inc_NQ_Def_Comp
      move &TP.PRINT_COL to #C_409A_Inc_NQ_Def_Comp
      let $F_409A_Inc_NQ_Def_Comp = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_409A_Inc_NQ_Def_Comp = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Hire_Exempt_Wage_Tips
      move &TP.PRINT_COL to #C_Hire_Exempt_Wage_Tips
      let $F_Hire_Exempt_Wage_Tips = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Hire_Exempt_Wage_Tips = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_ER_Hlth_Cvrg
      move &TP.PRINT_COL to #C_ER_Hlth_Cvrg
      let $F_ER_Hlth_Cvrg = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_ER_Hlth_Cvrg = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_Statut_EE
      move &TP.PRINT_LINE to #L_13A
      move &TP.PRINT_COL  to #C_13A
      Break
    When = $YE_Retire_Plan
      move &TP.PRINT_LINE to #L_13B
      move &TP.PRINT_COL  to #C_13B
      Break
    When = $YE_Third_Party_Sick_Pay
      move &TP.PRINT_LINE to #L_13C
      move &TP.PRINT_COL  to #C_13C
      Break
    When = $YE_State
      move &TP.PRINT_LINE to #L_15
      move &TP.PRINT_COL  to #C_15
      let $F15 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_State_ID
      move &TP.PRINT_LINE to #L_15A
      move &TP.PRINT_COL  to #C_15A
      let $F15A = rtrim(&TP.PRINT_FORMAT,' ')
      let #YE_State_ID_Box_Size = to_number(substr($F15A,3,instr($F15A,')',1)-2))
      Break
    When = $YE_State_Wages
      move &TP.PRINT_LINE to #L_16
      move &TP.PRINT_COL  to #C_16
      let $F16 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_State_Tax
      move &TP.PRINT_LINE to #L_17
      move &TP.PRINT_COL  to #C_17
      let $F17 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_Local_Wages
      move &TP.PRINT_LINE to #L_18
      move &TP.PRINT_COL  to #C_18
      let $F18 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_Local_Tax
      move &TP.PRINT_LINE to #L_19
      move &TP.PRINT_COL  to #C_19
      let $F19 = rtrim(&TP.PRINT_FORMAT,' ')
      Break
    When = $YE_Locality
      move &TP.PRINT_LINE to #L_20
      move &TP.PRINT_COL  to #C_20
      let $F20 = rtrim(&TP.PRINT_FORMAT,' ')
      let #YE_Locality_Box_Size = to_number(substr($F20,3,instr($F20,')',1)-2))
      Break
     When = $YE_Control_Nbr
      move &TP.PRINT_LINE to #L_D
      move &TP.PRINT_COL  to #C_D
      let $FD = rtrim(&TP.PRINT_FORMAT,' ')
      let #YE_Control_Nbr_Box_Size = to_number(substr($FD,3,instr($FD,')',1)-2))
      Break
    When = $YE_ER_ID
      move &TP.PRINT_LINE to #L_B
      move &TP.PRINT_COL  to #C_B
      let $FB = rtrim(&TP.PRINT_FORMAT,' ')
      let #YE_ER_ID_Box_Size = to_number(substr($FB,3,instr($FB,')',1)-2))
      Break
    When = $YE_ER_Name
      move &TP.PRINT_LINE to #L_C1
      move &TP.PRINT_COL  to #C_C1
      let $FC1 = rtrim(&TP.PRINT_FORMAT,' ')
      let #YE_ER_Name_Box_Size = to_number(substr($FC1,3,instr($FC1,')',1)-2))
      Break
    When = $YE_ER_Address1
      move &TP.PRINT_LINE to #L_C2
      move &TP.PRINT_COL  to #C_C2
      let $FC2 = rtrim(&TP.PRINT_FORMAT,' ')
      let #YE_ER_Address1_Box_Size = to_number(substr($FC2,3,instr($FC2,')',1)-2))
      Break
    When = $YE_ER_Address2
      move &TP.PRINT_LINE to #L_C3
      move &TP.PRINT_COL  to #C_C3
      let $FC3 = rtrim(&TP.PRINT_FORMAT,' ')
      let #YE_ER_Address2_Box_Size = to_number(substr($FC3,3,instr($FC3,')',1)-2))
      Break
    When = $YE_State_City_Zip
      move &TP.PRINT_LINE to #L_C4
      move &TP.PRINT_COL  to #C_C4
      let $FC4 = rtrim(&TP.PRINT_FORMAT,' ')
      let #YE_State_City_Zip_Box_Size = to_number(substr($FC4,3,instr($FC4,')',1)-2))
      Break
    When = $YE_EE_SSN
      move &TP.PRINT_LINE to #L_A
      move &TP.PRINT_COL  to #C_A
      let $FA = rtrim(&TP.PRINT_FORMAT,' ')
      let #YE_EE_SSN_Box_Size  = to_number(substr($FA,3,instr($FA,')',1)-2))
      Break
    When = $YE_EE_FullName
      move &TP.PRINT_LINE to #L_E
      move &TP.PRINT_COL  to #C_E
      let $FE = rtrim(&TP.PRINT_FORMAT,' ')
      let #YE_EE_FullName_Box_Size  = to_number(substr($FE,3,instr($FE,')',1)-2))
      Break
    When = $YE_EE_FName
      move &TP.PRINT_LINE to #L_E1
      move &TP.PRINT_COL  to #C_E1
      let $FE1 = rtrim(&TP.PRINT_FORMAT,' ')
      let #YE_EE_FName_Box_Size = to_number(substr($FE1,3,instr($FE1,')',1)-2))
      Break
    When = $YE_EE_LName
      move &TP.PRINT_LINE to #L_E3
      move &TP.PRINT_COL  to #C_E3
      let $FE3 = rtrim(&TP.PRINT_FORMAT,' ')
      let #YE_EE_LName_Box_Size = to_number(substr($FE3,3,instr($FE3,')',1)-2))
      Break
    When = $YE_EE_Suffix
      move &TP.PRINT_LINE to #L_E4
      move &TP.PRINT_COL  to #C_E4
      let $FE4= rtrim(&TP.PRINT_FORMAT,' ')
      let #YE_EE_Suffix_Box_Size = to_number(substr($FE4,3,instr($FE4,')',1)-2))
      Break
    When = $YE_EE_Address1
      move &TP.PRINT_LINE to #L_F1
      move &TP.PRINT_COL  to #C_F1
      let $FF1 = rtrim(&TP.PRINT_FORMAT,' ')
      let #YE_EE_Address1_Box_Size = to_number(substr($FF1,3,instr($FF1,')',1)-2))
      Break
    When = $YE_EE_Address2
      move &TP.PRINT_LINE to #L_F2
      move &TP.PRINT_COL  to #C_F2
      let $FF2 = rtrim(&TP.PRINT_FORMAT,' ')
      let #YE_EE_Address2_Box_Size = to_number(substr($FF2,3,instr($FF2,')',1)-2))
      Break
    When = $YE_EE_Country
      move &TP.PRINT_LINE to #L_F3
      move &TP.PRINT_COL  to #C_F3
      let $FF3 = rtrim(&TP.PRINT_FORMAT,' ')
      let #YE_EE_Country_Box_Size = to_number(substr($FF3,3,instr($FF3,')',1)-2))
      Break
    When = 'R'
      move &TP.PRINT_LINE to #L_R
      move &TP.PRINT_COL  to #C_R
      let $FReprint  = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Reprint = rtrim(&TP.PRINT_TEXT,' ')
      let #ReprintDescr_Box_Size = to_number(substr($FReprint,3,instr($FReprint,')',1)-2))
      Break
    When = 'R1'
      move &TP.PRINT_LINE to #L_R1
      move &TP.PRINT_COL  to #C_R1
      let $FReprint1  = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Reprint1  = rtrim(&TP.PRINT_TEXT,' ')
      let #ReprintDescr_Box_Size = to_number(substr($FReprint1,3,instr($FReprint1,')',1)-2))
      Break
    When = 'R2'
      move &TP.PRINT_LINE to #L_R2
      move &TP.PRINT_COL  to #C_R2
      let $FReprint2  = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Reprint2  = rtrim(&TP.PRINT_TEXT,' ')
      let #ReprintDescr_Box_Size = to_number(substr($FReprint2,3,instr($FReprint2,')',1)-2))
      Break
    When = 'V'
      move &TP.PRINT_LINE to #L_V
      move &TP.PRINT_COL  to #C_V
      let $F_Void = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_Void = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When = $YE_OtherC
    When = $YE_OtherH
    When = $YE_OtherYL
      move &TP.PRINT_LINE to #L_FLI
      move &TP.PRINT_COL  to #C_FLI
      let $F_FLI = rtrim(&TP.PRINT_FORMAT,' ')
      let $T_FLI = rtrim(&TP.PRINT_TEXT,' ')
      Break
    When-Other
      move $TP_Box to $Box xx

      If $TP_Box = $YE_Other
         move &TP.PRINT_LINE to #L_14_Start
         let $F14 = rtrim(&TP.PRINT_FORMAT,' ')
      End-If
  End-Evaluate

End-Procedure Rsi960us-Evaluate-Print-Box

!***********************************************************************
! Procedure Rsi960us-Print-Box12
!***********************************************************************
Begin-Procedure Rsi960us-Print-Box12

  move #L_12_Start to #L_12

  If instr($Box12PrintString,'A ',1)
     do Rsi960us-Print-Value($T_Uncoll_SS_Tax_On_Tips,#L_12,#C_Uncoll_SS_Tax_On_Tips,'Box 12A')
     do Format-Number(#Uncoll_SS_Tax_On_Tips,$Out,$F_Uncoll_SS_Tax_On_Tips)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'B ',1)
     do Rsi960us-Print-Value($T_Uncoll_Med_Tax_On_Tips,#L_12,#C_Uncoll_Med_Tax_On_Tips,'Box 12B')
     do Format-Number(#Uncoll_Med_Tax_On_Tips,$Out,$F_Uncoll_Med_Tax_On_Tips)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'C ',1)
     do Rsi960us-Print-Value($T_Group_Term_Life,#L_12,#C_Group_Term_Life,'Box 12C')
     do Format-Number(#Group_Term_Life,$Out,$F_Group_Term_Life)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'D ',1)
     do Rsi960us-Print-Value($T_401K,#L_12,#C_401K,'Box 12D')
     do Format-Number(#401K,$Out,$F_401K)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'E ',1)
     do Rsi960us-Print-Value($T_403B,#L_12,#C_403B,'Box 12E')
     do Format-Number(#403B,$Out,$F_403B)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'F ',1)
     do Rsi960us-Print-Value($T_408K6,#L_12,#C_408K6,'Box 12F')
     do Format-Number(#408K6,$Out,$F_408K6)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'G ',1)
     do Rsi960us-Print-Value($T_457B,#L_12,#C_457B,'Box 12G')
     do Format-Number(#457B,$Out,$F_457B)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'H ',1)
     do Rsi960us-Print-Value($T_501C18D,#L_12,#C_501C18D,'Box 12H')
     do Format-Number(#501C18D,$Out,$F_501C18D)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'J ',1)
     do Rsi960us-Print-Value($T_Sick_Pay,#L_12,#C_Sick_Pay,'Box 12J')
     do Format-Number(#Sick_Pay,$Out,$F_Sick_Pay)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'K ',1)
     do Rsi960us-Print-Value($T_Excise_Tax,#L_12,#C_Excise_Tax,'Box 12K')
     do Format-Number(#Excise_Tax,$Out,$F_Excise_Tax)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'L ',1)
     do Rsi960us-Print-Value($T_Business_Exp,#L_12,#C_Business_Exp,'Box 12L')
     do Format-Number(#Business_Exp,$Out,$F_Business_Exp)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'M ',1)
     do Rsi960us-Print-Value($T_Uncoll_SS_Tax_GTL,#L_12,#C_Uncoll_SS_Tax_GTL,'Box 12M')
     do Format-Number(#Uncoll_SS_Tax_GTL,$Out,$F_Uncoll_SS_Tax_GTL)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'N ',1)
     do Rsi960us-Print-Value($T_Uncoll_Med_Tax_GTL,#L_12,#C_Uncoll_Med_Tax_GTL,'Box 12N')
     do Format-Number(#Uncoll_Med_Tax_GTL,$Out,$F_Uncoll_Med_Tax_GTL)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'P ',1)
     do Rsi960us-Print-Value($T_Excl_Moving_Exp,#L_12,#C_Excl_Moving_Exp,'Box 12P')
     do Format-Number(#Excl_Moving_Exp,$Out,$F_Excl_Moving_Exp)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'Q ',1)
    If #Combat_Pay <> 0
       do Rsi960us-Print-Value($T_Combat_Pay,#L_12,#C_Combat_Pay,'Box 12Q')
       do Format-Number(#Combat_Pay,$Out,$F_Combat_Pay)
    Else
       do Rsi960us-Print-Value($T_Basic_Qtrs_and_Subsist,#L_12,#C_Basic_Qtrs_and_Subsist,'Box 12Q')
       do Format-Number(#Basic_Qtrs_and_Subsist,$Out,$F_Basic_Qtrs_and_Subsist)
    End-If
    print $Out (,+1)
    add 2 to #L_12
  End-If

  If instr($Box12PrintString,'R ',1)
     do Rsi960us-Print-Value($T_Med_Svgs_Acct,#L_12,#C_Med_Svgs_Acct,'Box 12R')
     do Format-Number(#Med_Svgs_Acct,$Out,$F_Med_Svgs_Acct)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'S ',1)
     do Rsi960us-Print-Value($T_408P_Simple_Retirement,#L_12,#C_408P_Simple_Retirement,'Box 12S')
     do Format-Number(#408P_Simple_Retirement,$Out,$F_408P_Simple_Retirement)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'T ',1)
     do Rsi960us-Print-Value($T_Adoption_Exp,#L_12,#C_Adoption_Exp,'Box 12T')
     do Format-Number(#Adoption_Exp,$Out,$F_Adoption_Exp)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'V ',1)
     do Rsi960us-Print-Value($T_NonStatutory_Stock_Opt,#L_12,#C_NonStatutory_Stock_Opt,'Box 12V')
     do Format-Number(#NonStatutory_Stock_Opt,$Out,$F_NonStatutory_Stock_Opt)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'W ',1)
     do Rsi960us-Print-Value($T_HSA_Employer_Contrib,#L_12,#C_HSA_Employer_Contrib,'Box 12W')
     do Format-Number(#HSA_Employer_Contrib,$Out,$F_HSA_Employer_Contrib)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'Y ',1)
     do Rsi960us-Print-Value($T_409A_Def_NQ_Def_Comp,#L_12,#C_409A_Def_NQ_Def_Comp,'Box 12Y')
     do Format-Number(#409A_Def_NQ_Def_Comp,$Out,$F_409A_Def_NQ_Def_Comp)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'Z ',1)
     do Rsi960us-Print-Value($T_409A_Inc_NQ_Def_Comp,#L_12,#C_409A_Inc_NQ_Def_Comp,'Box 12Z')
     do Format-Number(#409A_Inc_NQ_Def_Comp,$Out,$F_409A_Inc_NQ_Def_Comp)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'AA',1)
     do Rsi960us-Print-Value($T_Roth_401K,#L_12,#C_Roth_401K,'Box 12AA')
     do Format-Number(#Roth_401K,$Out,$F_Roth_401K)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'BB',1)
     do Rsi960us-Print-Value($T_Roth_403B,#L_12,#C_Roth_403B,'Box 12BB')
     do Format-Number(#Roth_403B,$Out,$F_Roth_403B)
     print $Out (,+1)
     add 2 to #L_12
  End-If

   If instr($Box12PrintString,'CC',1)
     do Rsi960us-Print-Value($T_Hire_Exempt_Wage_Tips,#L_12,#C_Hire_Exempt_Wage_Tips,'Box 12CC')
     do Format-Number(#Hire_Exempt_Wage_Tips,$Out,$F_Hire_Exempt_Wage_Tips)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'DD',1)
     do Rsi960us-Print-Value($T_ER_Hlth_Cvrg,#L_12,#C_ER_Hlth_Cvrg,'Box 12DD')
     do Format-Number(#ER_Hlth_Cvrg,$Out,$F_ER_Hlth_Cvrg)
     print $Out (,+1)
     add 2 to #L_12
  End-If

  If instr($Box12PrintString,'EE',1)
     do Rsi960us-Print-Value($T_Roth_Contribution_457b,#L_12,#C_Roth_Contribution_457b,'Box 12EE')
     do Format-Number(#Roth_Contribution_457b,$Out,$F_Roth_Contribution_457b)
     print $Out (,+1)
     add 2 to #L_12
  End-If

End-Procedure Rsi960us-Print-Box12

!***********************************************************************
! Procedure Rsi960us-Identify-Box12-Entries
!***********************************************************************
Begin-Procedure Rsi960us-Identify-Box12-Entries

  let $Box12CheckString = ''

  If #Uncoll_SS_Tax_On_Tips <> 0
     let $Box12CheckString = $Box12CheckString || 'A '
     add 1 to #Box12_Entries
  End-If

  If #Uncoll_Med_Tax_On_Tips <> 0
     let $Box12CheckString = $Box12CheckString || 'B '
     add 1 to #Box12_Entries
  End-If

  If #Group_Term_Life <> 0
     let $Box12CheckString = $Box12CheckString || 'C '
     add 1 to #Box12_Entries
  End-If

  If #401K <> 0
     let $Box12CheckString = $Box12CheckString || 'D '
     add 1 to #Box12_Entries
  End-If

  If #403B <> 0
     let $Box12CheckString = $Box12CheckString || 'E '
     add 1 to #Box12_Entries
  End-If

  If #408K6 <> 0
     let $Box12CheckString = $Box12CheckString || 'F '
     add 1 to #Box12_Entries
  End-If

  If #457B <> 0
     let $Box12CheckString = $Box12CheckString || 'G '
     add 1 to #Box12_Entries
  End-If

  If #501C18D <> 0
     let $Box12CheckString = $Box12CheckString || 'H '
     add 1 to #Box12_Entries
  End-If

  If #Sick_Pay <> 0
     let $Box12CheckString = $Box12CheckString || 'J '
     add 1 to #Box12_Entries
  End-If

  If #Excise_Tax <> 0
     let $Box12CheckString = $Box12CheckString || 'K '
     add 1 to #Box12_Entries
  End-If

  If #Business_Exp <> 0
     let $Box12CheckString = $Box12CheckString || 'L '
     add 1 to #Box12_Entries
  End-If

  If #Uncoll_SS_Tax_GTL <> 0
     let $Box12CheckString = $Box12CheckString || 'M '
     add 1 to #Box12_Entries
  End-If

  If #Uncoll_Med_Tax_GTL <> 0
     let $Box12CheckString = $Box12CheckString || 'N '
     add 1 to #Box12_Entries
  End-If

  If #Excl_Moving_Exp <> 0
     let $Box12CheckString = $Box12CheckString || 'P '
     add 1 to #Box12_Entries
  End-If

  If #Basic_Qtrs_and_Subsist <> 0
     let $Box12CheckString = $Box12CheckString || 'Q '
     add 1 to #Box12_Entries
  End-If

  If #Combat_Pay <> 0
     let $Box12CheckString = $Box12CheckString || 'Q '
     add 1 to #Box12_Entries
  End-If

  If #Med_Svgs_Acct <> 0
     let $Box12CheckString = $Box12CheckString || 'R '
     add 1 to #Box12_Entries
  End-If

  If #408P_Simple_Retirement <> 0
     let $Box12CheckString = $Box12CheckString || 'S '
     add 1 to #Box12_Entries
  End-If

  If #Adoption_Exp <> 0
     let $Box12CheckString = $Box12CheckString || 'T '
     add 1 to #Box12_Entries
  End-If

  If #NonStatutory_Stock_Opt <> 0
     let $Box12CheckString = $Box12CheckString || 'V '
     add 1 to #Box12_Entries
  End-If

  If #HSA_Employer_Contrib <> 0
     let $Box12CheckString = $Box12CheckString || 'W '
     add 1 to #Box12_Entries
  End-If

  If #409A_Def_NQ_Def_Comp <> 0
     let $Box12CheckString = $Box12CheckString || 'Y '
     add 1 to #Box12_Entries
  End-If

  If #409A_Inc_NQ_Def_Comp <> 0
     let $Box12CheckString = $Box12CheckString || 'Z '
     add 1 to #Box12_Entries
  End-If

  If #Roth_401K <> 0
     let $Box12CheckString = $Box12CheckString || 'AA'
     add 1 to #Box12_Entries
  End-If

  If #Roth_403B <> 0
     let $Box12CheckString = $Box12CheckString || 'BB'
     add 1 to #Box12_Entries
  End-If

  If #Hire_Exempt_Wage_Tips <> 0
     let $Box12CheckString = $Box12CheckString || 'CC'
     add 1 to #Box12_Entries
  End-If

  If #ER_Hlth_Cvrg <> 0
     let $Box12CheckString = $Box12CheckString || 'DD'
     add 1 to #Box12_Entries
  End-If

  If #Roth_Contribution_457b <> 0
     let $Box12CheckString = $Box12CheckString || 'EE'
     add 1 to #Box12_Entries
  End-If

  If #Box12_Entries > 4
     move 1 to #MultiForm
  End-If

End-Procedure Rsi960us-Identify-Box12-Entries

!***********************************************************************
! Procedure Rsi960us-Evaluate-Box
!***********************************************************************
Begin-Procedure Rsi960us-Evaluate-Box

  Evaluate $LD_Box
    When = $YE_Fed_Wages
      add #Amount to #Fed_Wages

      If #Prv_Amount <> 0
         let #Prv_Fed_Wages = #Prv_Amount
      End-If
      Break
    When = $YE_Fed_Tax
      add #Amount to #Fed_Tax

      If #Prv_Amount <> 0
         let #Prv_Fed_Tax = #Prv_Amount
      End-If
      Break
    When = $YE_SS_Wages
      add #Amount to #SS_Wages
      If #Prv_Amount <> 0
         let #Prv_SS_Wages = #Prv_Amount
      End-If
      Break
    When = $YE_SS_Tax
      add #Amount to #SS_Tax

      If #Prv_Amount <> 0
         let #Prv_SS_Tax = #Prv_Amount
      End-If
      Break
    When = $YE_Med_Wages
      add #Amount to #Med_Wages

      If #Prv_Amount <> 0
         let #Prv_Med_Wages = #Prv_Amount
      End-If
      Break
    When = $YE_Med_Tax
      add #Amount to #Med_Tax

      If #Prv_Amount <> 0
         let #Prv_Med_Tax = #Prv_Amount
      End-If
      Break
    When = $YE_SS_Tips
      add #Amount to #SS_Tips

      If #Prv_Amount <> 0
         let #Prv_SS_Tips = #Prv_Amount
      End-If
      Break
    When = $YE_Adv_EIC
      add #Amount to #Adv_EIC

      If #Prv_Amount <> 0
         let #Prv_Adv_EIC = #Prv_Amount
      End-If
      Break
    When = $YE_Dep_Care
      add #Amount to #Dep_Care

      If #Prv_Amount <> 0
         let #Prv_Dep_Care = #Prv_Amount
      End-If
      Break
    When = $YE_Non_Qual_457_N
      add 0 to #Non_Qual_457_N
      add #Amount to #Non_Qual_457_Amt
      move 'Y' to $Non_Qual_457_N

      If #Non_Qual_457AB = 0
         add 1 to #BlankBoxCount
      End-If
      add #Amount to #Non_Qual_457AB
      add #Prv_Amount to #Prv_Non_Qual_457AB

      If #Amount > 0
         move 'Y' to $AmtNon_Qual_457B
      End-If

      If #Prv_Amount > 0
         move 'Y' to $Prv_AmtNon_Qual_457B
      End-If
      Break
    When = $YE_Non_Qual_457_Y
      add 0 to #Non_Qual_457_Y
      add #Amount to #Non_Qual_457_Amt
      move 'Y' to $Non_Qual_457_Y

      If #Non_Qual_457AB = 0
         add 1 to #BlankBoxCount
      End-If
      add #Amount to #Non_Qual_457AB
      add #Prv_Amount to #Prv_Non_Qual_457AB

      If #Amount > 0
         move 'Y' to $AmtNon_Qual_457A
      End-If

      If #Prv_Amount > 0
         move 'Y' to $Prv_AmtNon_Qual_457A
      End-If
      Break
    When = $YE_Alloc_Tips
      add #Amount to #Alloc_TIPS

      If #Prv_Amount <> 0
         let #Prv_Alloc_Tips = #Prv_Amount
      End-If
      Break
    When = $YE_Uncoll_SS_Tax_On_Tips
      add #Amount to #Uncoll_Tax_On_Tips
      add #Amount to #Uncoll_SS_Tax_On_Tips
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Uncoll_SS_Tax_On_Tips
      End-If
      Break
    When = $YE_Roth_401K
      add  #Amount to #Roth_401K
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Roth_401K
      End-If
      Break
    When = $YE_Uncoll_Med_Tax_On_Tips
      add #Amount to #Uncoll_Tax_On_Tips
      add #Amount to #Uncoll_Med_Tax_On_Tips
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Uncoll_Med_Tax_On_Tips
      End-If
      Break
    When = $YE_Roth_403B
      add #Amount to #Roth_403B
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Roth_403B
      End-If
      Break
    When = $YE_Group_Term_Life
      add #Amount to #Group_Term_Life
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Group_Term_Life
      End-If
      Break
    When = $YE_401K
      add #Amount to #401K
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_401K
      End-If
      Break
    When = $YE_403B
      add #Amount to #403B
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_403B
      End-If
      Break
    When = $YE_408K6
      add #Amount to #408K6
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_408K6
      End-If
      Break
    When = $YE_457B
      add #Amount to #457B
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_457B
      End-If
      Break
    When = $YE_501C18D
      add #Amount to #501C18D
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_501C18D
      End-If
      Break
   When = $YE_Sick_Pay
      add #Amount to #Sick_Pay
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Sick_Pay
      End-If
     Break
   When = $YE_Excise_Tax
      add #Amount to #Excise_Tax
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Excise_Tax
      End-If
     Break
   When = $YE_Business_Exp
      add #Amount to #Business_Exp
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Business_Exp
      End-If
     Break
    When = $YE_Uncoll_SS_Tax_GTL
      add #Amount to #Uncoll_SS_Tax_GTL
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Uncoll_SS_Tax_GTL
      End-If
      Break
    When = $YE_Uncoll_Med_Tax_GTL
      add #Amount to #Uncoll_Med_Tax_GTL
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Uncoll_Med_Tax_GTL
      End-If
      Break
   When = $YE_Excl_Moving_Exp
      add #Amount to #Excl_Moving_Exp
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Excl_Moving_Exp
      End-If
     Break
    When = $YE_Basic_Qtrs_and_Subsist
      add #Amount to #Basic_Qtrs_and_Subsist
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Basic_Qtrs_and_Subsist
      End-If
      Break
    When = $YE_Combat_Pay
      add #Amount to #Combat_Pay
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Combat_Pay
      End-If
      Break
    When = $YE_Med_Svgs_Acct
      add #Amount to #Med_Svgs_Acct
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Med_Svgs_Acct
      End-If
      Break
    When = $YE_408P_Simple_Retirement
      add #Amount to #408P_Simple_Retirement
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_408P_Simple_Retirement
      End-If
      Break
    When = $YE_Adoption_Exp
      add  #Amount to #Adoption_Exp
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Adoption_Exp
      End-If
      Break
    When = $YE_NonStatutory_Stock_Opt
      add #Amount to #Nonstatutory_Stock_Opt
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_NonStatutory_Stock_Opt
      End-If
      Break
    When = $YE_HSA_Employer_Contrib
      add #Amount to #HSA_Employer_Contrib
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_HSA_Employer_Contrib
      End-If
      Break
    When = $YE_409A_Def_NQ_Def_Comp
      add #Amount to #409A_Def_NQ_Def_Comp
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_409A_Def_NQ_Def_Comp
      End-If
      Break
    When = $YE_409A_Inc_NQ_Def_Comp
      add #Amount to #409A_Inc_NQ_Def_Comp
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_409A_Inc_NQ_Def_Comp
      End-If
      Break
    When = $YE_Hire_Exempt_Wage_Tips
      add #Amount to #Hire_Exempt_Wage_Tips
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Hire_Exempt_Wage_Tips
      End-If
      Break
    When = $YE_ER_Hlth_Cvrg
      add #Amount to #ER_Hlth_Cvrg
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_ER_Hlth_Cvrg
      End-If
      Break
    When = $YE_Roth_Contribution_457b
      add #Amount to #Roth_Contribution_457b
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_Roth_Contribution_457b
      End-If
      Break
     When = $YE_State_Wages
       add #Amount to #State_Wages
       add 1 to #BlankBoxCount
       Break
     When = $YE_State_Tax
       add #Amount to #State_Tax
       add 1 to #BlankBoxCount
       Break
     When = $YE_Local_Wages
     When = $YE_Local_Tax
       add #Amount to #MyAmount
       Break
     When-Other
       move $LD_Box to $Box xx
       do Rsi960us-Add-Misc-Box
  End-Evaluate

End-Procedure Rsi960us-Evaluate-Box

!***********************************************************************
! Procedure Rsi960us-Add-Misc-Box
!***********************************************************************
Begin-Procedure Rsi960us-Add-Misc-Box

  move 'Y' to $Box14

  Evaluate $LD_Box
    When = $YE_OtherA
      add #Amount to #OtherA
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherA
      End-If
      Break
    When = $YE_OtherB
      add #Amount to #OtherB
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherB
      End-If
      Break
    When = $YE_OtherC
      add #Amount to #OtherC
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherC
      End-If
      Break
    When = $YE_OtherD
      add #Amount to #OtherD
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherD
      End-If
      Break
    When = $YE_OtherE
      add #Amount to #OtherE
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherE
      End-If
      Break
    When = $YE_OtherF
      add #Amount to #OtherF
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherF
      End-If
      Break
    When = $YE_OtherG
      add #Amount to #OtherG
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherG
      End-If
      Break
    When = $YE_OtherH
      add #Amount to #OtherH
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherH
      End-If
      Break
    When = $YE_OtherI
      add #Amount to #OtherI
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherI
      End-If
      Break
    When = $YE_OtherJ
      add #Amount to #OtherJ
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherJ
      End-If
      Break
    When = $YE_OtherK
      add #Amount to #OtherK
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherK
      End-If
      Break
    When = $YE_OtherL
      add #Amount to #OtherL
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherL
      End-If
      Break
    When = $YE_OtherM
      add #Amount to #OtherM
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherM
      End-If
      Break
    When = $YE_OtherN
      add #Amount to #OtherN
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherN
      End-If
      Break
    When = $YE_OtherO
      add #Amount to #OtherO
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherO
      End-If
      Break
    When = $YE_OtherP
      add #Amount to #OtherP
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherP
      End-If
      Break
    When = $YE_OtherQ
      add #Amount to #OtherQ
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherQ
      End-If
      Break
    When = $YE_OtherR
      add #Amount to #OtherR
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherR
      End-If
      Break
    When = $YE_OtherS
      add #Amount to #OtherS
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherS
      End-If
      Break
    When = $YE_OtherT
      add #Amount to #OtherT
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherT
      End-If
      Break
    When = $YE_OtherU
      add #Amount to #OtherU
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherU
      End-If
      Break
    When = $YE_OtherV
      add #Amount to #OtherV
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherV
      End-If
      Break
    When = $YE_OtherW
      add #Amount to #OtherW
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherW
      End-If
      Break
    When = $YE_OtherX
      add #Amount to #OtherX
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherX
      End-If
      Break
    When = $YE_OtherY
      add #Amount to #OtherY
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherY
      End-If
      Break
    When = $YE_OtherYK
      add #Amount to #OtherYK
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherYK
      End-If
      Break
    When = $YE_OtherYL
      add #Amount to #OtherYL
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add  #Prv_Amount to #Prv_OtherYL
      End-If
      Break
    When = $YE_OtherYN
      add #Amount to #OtherYN
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherYN
      End-If
      Break
    When = $YE_OtherYT
      add #Amount to #OtherYT
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherYT
      End-If
      Break
    When = $YE_OtherZ
      add #Amount to #OtherZ
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherZ
      End-If
      Break
    When = $YE_OtherZN
      add #Amount to #OtherZN
      add 1 to #BlankBoxCount

      If #Prv_Amount <> 0
         add #Prv_Amount to #Prv_OtherZN
      End-If
      Break
    When-Other
      Show '*************************************'
      Show '* Unknown Box Identifier: ' $LD_Box '*'
      Show '* Program Stopped.                  *'
      Show '*************************************'
      STOP
  End-Evaluate

End-Procedure Rsi960us-Add-Misc-Box

!***********************************************************************
! Procedure Rsi960us-Add-EE-to-Interum
!***********************************************************************
Begin-Procedure Rsi960us-Add-EE-to-Interum

  add #Fed_Wages              to #Fed_Wages_I
  add #Fed_Tax                to #Fed_Tax_I
  add #SS_Wages               to #SS_Wages_I
  add #SS_Tax                 to #SS_Tax_I
  add #Med_Wages              to #Med_Wages_I
  add #Med_Tax                to #Med_Tax_I
  add #SS_Tips                to #SS_Tips_I
  add #Alloc_Tips             to #Alloc_Tips_I
  add #Adv_EIC                to #Adv_EIC_I
  add #Dep_Care               to #Dep_Care_I
  add #Non_Qual_457_Amt       to #Non_Qual_457_Amt_I
  add #14                     to #14_I
  add #State_Tax              to #State_Tax_I
  add #State_Wages            to #State_Wages_I
  add #Uncoll_SS_Tax_On_Tips  to #Uncoll_SS_Tax_On_Tips_I
  add #Uncoll_Med_Tax_On_Tips to #Uncoll_Med_Tax_On_Tips_I
  add #Roth_401K              to #Roth_401K_I
  add #Roth_403B              to #Roth_403B_I
  add #Group_Term_Life        to #Group_Term_Life_I
  add #401K                   to #401K_I
  add #403B                   to #403B_I
  add #457B                   to #457B_I
  add #408K6                  to #408K6_I
  add #501C18D                to #501C18D_I
  add #Sick_Pay               to #Sick_Pay_I
  add #Excise_Tax             to #Excise_Tax_I
  add #Business_Exp           to #Business_Exp_I
  add #Uncoll_SS_Tax_GTL      to #Uncoll_SS_Tax_GTL_I
  add #Uncoll_Med_Tax_GTL     to #Uncoll_Med_Tax_GTL_I
  add #Excl_Moving_Exp        to #Excl_Moving_Exp_I
  add #Basic_Qtrs_and_Subsist to #Basic_Qtrs_and_Subsist_I
  add #Combat_Pay             to #Combat_Pay_I
  add #Med_Svgs_Acct          to #Med_Svgs_Acct_I
  add #408P_Simple_Retirement to #408P_Simple_Retirement_I
  add #Adoption_Exp           to #Adoption_Exp_I
  add #NonStatutory_Stock_Opt to #NonStatutory_Stock_Opt_I
  add #HSA_Employer_Contrib   to #HSA_Employer_Contrib_I
  add #409A_Def_NQ_Def_Comp   to #409A_Def_NQ_Def_Comp_I
  add #409A_Inc_NQ_Def_Comp   to #409A_Inc_NQ_Def_Comp_I
  add #Hire_Exempt_Wage_Tips  to #Hire_Exempt_Wage_Tips_I
  add #ER_Hlth_Cvrg           to #ER_Hlth_Cvrg_I
  add #Roth_Contribution_457b to #Roth_Contribution_457b_I

End-Procedure Rsi960us-Add-EE-to-Interum

!***********************************************************************
! Procedure Rsi960us-Add-Box14-Totals
!***********************************************************************
Begin-Procedure Rsi960us-Add-Box14-Totals

  Evaluate $B_14
    When = $YE_OtherA
      add #Amount to #OtherA_I
      Break
    When = $YE_OtherB
      add #Amount to #OtherB_I
      Break
    When = $YE_OtherC
      add #Amount to #OtherC_I
      Break
    When = $YE_OtherD
      add #Amount to #OtherD_I
      Break
    When = $YE_OtherE
      add #Amount to #OtherE_I
      Break
    When = $YE_OtherF
      add #Amount to #OtherF_I
      Break
    When = $YE_OtherG
      add #Amount to #OtherG_I
      Break
    When = $YE_OtherH
      add #Amount to #OtherH_I
      Break
    When = $YE_OtherI
      add #Amount to #OtherI_I
      Break
    When = $YE_OtherJ
      add #Amount to #OtherJ_I
      Break
    When = $YE_OtherK
      add #Amount to #OtherK_I
      Break
    When = $YE_OtherL
      add #Amount to #OtherL_I
      Break
    When = $YE_OtherM
      add #Amount to #OtherM_I
      Break
    When = $YE_OtherN
      add #Amount to #OtherN_I
      Break
    When = $YE_OtherO
      add #Amount to #OtherO_I
      Break
    When = $YE_OtherP
      add #Amount to #OtherP_I
      Break
    When = $YE_OtherQ
      add #Amount to #OtherQ_I
      Break
    When = $YE_OtherR
      add #Amount to #OtherR_I
      Break
    When = $YE_OtherS
      add #Amount to #OtherS_I
      Break
    When = $YE_OtherT
      add #Amount to #OtherT_I
      Break
    When = $YE_OtherU
      add #Amount to #OtherU_I
      Break
    When = $YE_OtherV
      add #Amount to #OtherV_I
      Break
    When = $YE_OtherW
      add #Amount to #OtherW_I
      Break
    When = $YE_OtherX
      add #Amount to #OtherX_I
      Break
    When = $YE_OtherY
      add #Amount to #OtherY_I
      Break
    When = $YE_OtherYK
      add #Amount to #OtherYK_I
      Break
    When = $YE_OtherYL
      add #Amount to #OtherYL_I
      Break
    When = $YE_OtherYN
      add #Amount to #OtherYN_I
      Break
    When = $YE_OtherYT
      add #Amount to #OtherYT_I
      Break
    When = $YE_OtherZ
      add #Amount to #OtherZ_I
      Break
    When = $YE_OtherZN
      add #Amount to #OtherZN_I
  End-Evaluate

  move 0 to #local

End-Procedure Rsi960us-Add-Box14-Totals

!***********************************************************************
! Procedure Rsi960us-Print-Box-Totals
!***********************************************************************
Begin-Procedure Rsi960us-Print-Box-Totals

  If #Fed_Wages_I > 0
     do Format-Number(#Fed_Wages_I,$Out,'999,999,999,999.99')
     Show 'Federal Wages              : ' $Out
  End-If

  If #Fed_Tax_I > 0
     do Format-Number(#Fed_Tax_I,$Out,'999,999,999,999.99')
     Show 'Federal Tax                : ' $Out
  End-If

  If #SS_Wages_I > 0
     do Format-Number(#SS_Wages_I,$Out,'999,999,999,999.99')
     Show 'SS Wages                   : ' $Out
  End-If

  If #SS_Tax_I > 0
     do Format-Number(#SS_Tax_I,$Out,'999,999,999,999.99')
     Show 'SS tax                     : ' $Out
  End-If

  If #Med_Wages_I > 0
     do Format-Number(#Med_Wages_I,$Out,'999,999,999,999.99')
     Show 'Medicare Wages             : ' $Out
  End-If

  If #Med_Tax_I > 0
     do Format-Number(#Med_Tax_I,$Out,'999,999,999,999.99')
     Show 'Medicare Tax               : ' $Out
  End-If

  If #SS_Tips_I > 0
     do Format-Number(#SS_Tips_I,$Out,'999,999,999,999.99')
     Show 'SS Tips                    : ' $Out
  End-If

  If #Alloc_Tips_I > 0
     do Format-Number(#Alloc_Tips_I,$Out,'999,999,999,999.99')
     Show 'Allocated Tips             : ' $Out
  End-If

  If #Adv_EIC_I > 0
     do Format-Number(#Adv_EIC_I,$Out,'999,999,999,999.99')
     Show 'EIC                        : ' $Out
  End-If

  If #Dep_Care_I > 0
     do Format-Number(#Dep_Care_I,$Out,'999,999,999,999.99')
     Show 'Dependent Care             : ' $Out
  End-If

  If #Non_Qual_457_Amt_I > 0
     do Format-Number(#Non_Qual_457_Amt_I,$Out,'999,999,999,999.99')
     Show 'Non-Qual Plan              : ' $Out
  End-If

  If #Uncoll_SS_Tax_On_Tips_I > 0
     do Format-Number(#Uncoll_SS_Tax_On_Tips_I,$Out,'999,999,999,999.99')
     Show 'Uncoll SS Tax Tips Tot     : ' $Out
  End-If

  If #Uncoll_Med_Tax_On_Tips_I > 0
     do Format-Number(#Uncoll_Med_Tax_On_Tips_I,$Out,'999,999,999,999.99')
     Show 'Uncoll MED Tax Tips        : ' $Out
  End-If

  If #Group_Term_Life_I > 0
     do Format-Number(#Group_Term_Life_I,$Out,'999,999,999,999.99')
     Show 'Group Term Life            : ' $Out
  End-If

  If #401K_I > 0
     do Format-Number(#401K_I,$Out,'999,999,999,999.99')
     Show '401(K)                     : ' $Out
  End-If

  If #403B_I > 0
     do Format-Number(#403B_I,$Out,'999,999,999,999.99')
     Show '403(b)                     : ' $Out
  End-If

  If #408K6_I > 0
     do Format-Number(#408K6_I,$Out,'999,999,999,999.99')
     Show '408(k)6                    : ' $Out
  End-If

  If #457B_I > 0
     do Format-Number(#457B_I,$Out,'999,999,999,999.99')
     Show '457(b)                     : ' $Out
  End-If

  If #501C18D_I > 0
     do Format-Number(#501C18D_I,$Out,'999,999,999,999.99')
     Show '501(c)18(d)                : ' $Out
  End-If

  If #Sick_Pay_I > 0
     do Format-Number(#Sick_Pay_I,$Out,'999,999,999,999.99')
     Show 'Sick Pay Total             : ' $Out
  End-If

  If #Excise_Tax_I > 0
     do Format-Number(#Excise_Tax_I,$Out,'999,999,999,999.99')
     Show 'Excise Tax                 : ' $Out
  End-If

  If #Business_Exp_I > 0
     do Format-Number(#Business_Exp_I,$Out,'999,999,999,999.99')
     Show 'Business Expense Total     : ' $Out
  End-If

  If #Uncoll_SS_Tax_GTL_I > 0
     do Format-Number(#Uncoll_SS_Tax_GTL_I,$Out,'999,999,999,999.99')
     Show 'Uncoll SS Tax - GTL        : ' $Out
  End-If

  If #Uncoll_Med_Tax_GTL_I > 0
     do Format-Number(#Uncoll_Med_Tax_GTL_I,$Out,'999,999,999,999.99')
     Show 'Uncoll MED Tax - GTL       : ' $Out
  End-If

  If #Excl_Moving_Exp_I > 0
     do Format-Number(#Excl_Moving_Exp_I,$Out,'999,999,999,999.99')
     Show 'Excl Moving Exp            : ' $Out
  End-If

  If #Basic_Qtrs_and_Subsist_I > 0
     do Format-Number(#Basic_Qtrs_and_Subsist_I,$Out,'999,999,999,999.99')
     Show 'Quarters & Subsistence     : ' $Out
  End-If

  If #Combat_Pay_I > 0
     do Format-Number(#Combat_Pay_I,$Out,'999,999,999,999.99')
     Show 'Combat Pay                 : ' $Out
  End-If

  If #Med_Svgs_Acct_I > 0
     do Format-Number(#Med_Svgs_Acct_I,$Out,'999,999,999,999.99')
     Show 'Medical Spending Acct      : ' $Out
  End-If

  If #408P_Simple_Retirement_I > 0
     do Format-Number(#408P_Simple_Retirement_I,$Out,'999,999,999,999.99')
     Show 'Sec 418(p) Simple Ret      : ' $Out
  End-If

  If #Adoption_Exp_I > 0
     do Format-Number(#Adoption_Exp_I,$Out,'999,999,999,999.99')
     Show 'Adoption Expenses          : ' $Out
  End-If

  If #NonStatutory_Stock_Opt_I > 0
     do Format-Number(#NonStatutory_Stock_Opt_I,$Out,'999,999,999,999.99')
     Show 'NonStatutory Stock Opt     : ' $Out
  End-If

  If #HSA_Employer_Contrib_I > 0
     do Format-Number(#HSA_Employer_Contrib_I,$Out,'999,999,999,999.99')
     Show 'HSA Employer Contrib       : ' $Out
  End-If

  If #409A_Def_NQ_Def_Comp_I > 0
     do Format-Number(#409A_Def_NQ_Def_Comp_I,$Out,'999,999,999,999.99')
     Show '409A Deferral NQ Def Comp  : ' $Out
  End-If

  If #409A_Inc_NQ_Def_Comp_I > 0
     do Format-Number(#409A_Inc_NQ_Def_Comp_I,$Out,'999,999,999,999.99')
     Show '409A Income NQ Def Comp    : ' $Out
  End-If

  If #Hire_Exempt_Wage_Tips_I > 0
     do Format-Number(#Hire_Exempt_Wage_Tips_I,$Out,'999,999,999,999.99')
     Show 'HIRE Exempt Wage and Tips  : ' $Out
  End-If

  If #ER_Hlth_Cvrg_I > 0
     do Format-Number(#ER_Hlth_Cvrg_I,$Out,'999,999,999,999.99')
     Show 'Cost of Employer Hlth Cvrg : ' $Out
  End-If

  If #Roth_Contribution_457b_I > 0
     do Format-Number(#Roth_Contribution_457b_I,$Out,'999,999,999,999.99')
     Show 'Roth Contribution to 457(b): ' $Out
  End-If

  If #Roth_401K_I > 0
     do Format-Number(#Roth_401K_I,$Out,'999,999,999,999.99')
     Show 'Roth Contrib to 401(k)     : ' $Out
  End-If

  If #Roth_403B_I > 0
     do Format-Number(#Roth_403B_I,$Out,'999,999,999,999.99')
     Show 'Roth Contrib to 403(b)     : ' $Out
  End-If

  If #State_Wages_I > 0
     do Format-Number(#State_Wages_I,$Out,'999,999,999,999.99')
     Show 'State Wages Total          : ' $Out
  End-If

  If #State_Tax_I > 0
     do Format-Number(#State_Tax_I,$Out,'999,999,999,999.99')
     Show 'State Tax Total            : ' $Out
  End-If

  If #Local_Wages_I > 0
     do Format-Number(#Local_Wages_I,$Out,'999,999,999,999.99')
     Show 'Local Wages Total          : ' $Out
  End-If

  If #Local_Tax_I > 0
     do Format-Number(#Local_Tax_I,$Out,'999,999,999,999.99')
     Show 'Local Tax Total            : ' $Out
  End-If

  If #OtherA_I > 0
     do Format-Number(#OtherA_I,$Out,'999,999,999,999.99')
     Show 'CASDI                      : ' $Out
  End-If

  If #OtherB_I > 0
     do Format-Number(#OtherB_I,$Out,'999,999,999,999.99')
     Show 'CA-VPDI                    : ' $Out
  End-If

  If #OtherC_I > 0
     do Format-Number(#OtherC_I,$Out,'999,999,999,999.99')
     Show 'NJWDPF                     : ' $Out
  End-If

  If #OtherD_I > 0
     do Format-Number(#OtherD_I,$Out,'999,999,999,999.99')
     Show 'NJ-UI/HC                   : ' $Out
  End-If

  If #OtherE_I > 0
     do Format-Number(#OtherE_I,$Out,'999,999,999,999.99')
     Show 'NJ-SDI                     : ' $Out
  End-If

  If #OtherF_I > 0
     do Format-Number(#OtherF_I,$Out,'999,999,999,999.99')
     Show 'PA UI                      : ' $Out
  End-If

  If #OtherG_I > 0
     do Format-Number(#OtherG_I,$Out,'999,999,999,999.99')
     Show 'NJ-VPDI                    : ' $Out
  End-If

  If #OtherH_I > 0
     do Format-Number(#OtherH_I,$Out,'999,999,999,999.99')
     Show 'Other H                    : ' $Out
  End-If

  If #OtherI_I > 0
     do Format-Number(#OtherI_I,$Out,'999,999,999,999.99')
     Show 'Other I                    : ' $Out
  End-If

  If #OtherJ_I > 0
     do Format-Number(#OtherJ_I,$Out,'999,999,999,999.99')
     Show 'Other J                    : ' $Out
  End-If

  If #OtherK_I > 0
     do Format-Number(#OtherK_I,$Out,'999,999,999,999.99')
     Show 'Other K                    : ' $Out
  End-If

  If #OtherL_I > 0
     do Format-Number(#OtherL_I,$Out,'999,999,999,999.99')
     Show 'Other L                    : ' $Out
  End-If

  If #OtherM_I > 0
     do Format-Number( #OtherM_I,$Out,'999,999,999,999.99')
     Show 'Other M                    : ' $Out
  End-If

  If #OtherN_I > 0
     do Format-Number(#OtherN_I,$Out,'999,999,999,999.99')
     Show 'Other N                    : ' $Out
  End-If

  If #OtherO_I > 0
     do Format-Number(#OtherO_I,$Out,'999,999,999,999.99')
     Show 'Other O                    : ' $Out
  End-If

  If #OtherP_I > 0
     do Format-Number(#OtherP_I,$Out,'999,999,999,999.99')
     Show 'Other P                    : ' $Out
  End-If

  If #OtherQ_I > 0
     do Format-Number(#OtherQ_I,$Out,'999,999,999,999.99')
     Show 'Other Q                    : ' $Out
  End-If

  If #OtherR_I > 0
     do Format-Number( #OtherR_I,$Out,'999,999,999,999.99')
     Show 'Other R                    : ' $Out
  End-If

  If #OtherS_I > 0
     do Format-Number(#OtherS_I,$Out,'999,999,999,999.99')
     Show 'Other S                    : ' $Out
  End-If

  If #OtherT_I > 0
     do Format-Number(#OtherT_I,$Out,'999,999,999,999.99')
     Show 'Other T                    : ' $Out
  End-If

  If #OtherU_I > 0
     do Format-Number(#OtherU_I,$Out,'999,999,999,999.99')
     Show 'Other U                    : ' $Out
  End-If

  If #OtherV_I > 0
     do Format-Number( #OtherV_I,$Out,'999,999,999,999.99')
     Show 'Other V                    : ' $Out
  End-If

  If #OtherW_I > 0
     do Format-Number(#OtherW_I,$Out,'999,999,999,999.99')
     Show 'Other W                    : ' $Out
  End-If

  If #OtherX_I > 0
     do Format-Number(#OtherX_I,$Out,'999,999,999,999.99')
     Show 'Other X                    : ' $Out
  End-If

  If #OtherY_I > 0
     do Format-Number(#OtherY_I,$Out,'999,999,999,999.99')
     Show 'Other Y                    : ' $Out
  End-If

  If #OtherYK_I > 0
     do Format-Number(#OtherYK_I,$Out,'999,999,999,999.99')
     Show 'Other YK                   : ' $Out
  End-If

  If #OtherYL_I > 0
     do Format-Number(#OtherYL_I,$Out,'999,999,999,999.99')
     Show 'Other YL                   : ' $Out
  End-If

  If #OtherYN_I > 0
     do Format-Number(#OtherYN_I,$Out,'999,999,999,999.99')
     Show 'PA NQDC Deferrals          : ' $Out
  End-If

  If #OtherYT_I > 0
     do Format-Number(#OtherYT_I,$Out,'999,999,999,999.99')
     Show 'PA NQDC Distributions      : ' $Out
  End-If

  If #OtherZ_I > 0
     do Format-Number(#OtherZ_I,$Out,'999,999,999,999.99')
     Show 'Other Z                    : ' $Out
  End-If

  If #OtherZN_I > 0
     do Format-Number(#OtherZN_I,$Out,'999,999,999,999.99')
     Show 'PA NQDC Earnings           : ' $Out
  End-If

  do Format-Number(#T_Count,$Out,'999,999,999')
  Show ''
  Show '----------------------------------------------------------'
  Show 'Total Forms Including Alignment and Subtotals: ' $Out

End-Procedure Rsi960us-Print-Box-Totals

!*************
!XMLP code
!*************

!***********************************************************************
! Procedure Rsi960us-Init-Report-XMLP
!***********************************************************************
#If {RSI_APP_REL} >= 9.00
Begin-Procedure Rsi960us-Init-Report-XMLP

  If $RC_US_YE.Py_W2_Type <> 'W'
     Show 'Incorrect process selected. PYYEW2 is not for territory.'
     STOP
  End-If

  do Rsi960us-Get-XMLP-Definitions

  do Format-DateTime($AsOfToday, $Out, {DEFYMD},'','')
  do Format-DateTime($Out, $IssueDate, {DEFYMD},'','native')

  do Rsi960us-Clear-Guide-Temp

  move 0 to #BatchSize
  move 1 to #BatchId
  let $BurstValueSave = ''

  let #FNum  = 0
  let #FStat = 0

  let $FName2 = 'RSITAXW21XM.xml'
  let $sourceFile2     = $FName2 || '{IMPORTSUFFIX}'
  let $sourceLocation2 = '{IMPORTPREFIX}' || ''
  let $sourceFileName2 = rtrim($sourceLocation2,' ') || rtrim($sourceFile2,' ')
  let #FNum2  = 4
  let #FStat2 = 0
  do Rsi960us-Open-XML-File($FName2, #FNum2, #FStat2)
  do Rsi960us-XML-Open-Tag('USA_YearEnd', $openTag2)
  do Rsi960us-Write-XML-Line(#Fnum2, $openTag2)

  If $RC_US_YE.Py_W2_Process_Type = '1'
     move ' ' to $ReprintDescr
  Else
     let $FieldName = 'PY_W2_PROCESS_TYPE'
     let $FieldValue = $RC_US_YE.Py_W2_Process_Type
     do Rsi960us-Select_From_Xlat($FieldName, $FieldValue, $ShortName, $LongName)
     move $LongName to $ReprintDescr
  End-If

  do Rsi960us-Capture-OS
  do Rsi960us-Insert-YE-Runcontrol

End-Procedure Rsi960us-Init-Report-XMLP

!***********************************************************************
! Procedure Rsi960us-Get-XMLP-Definitions
!***********************************************************************
Begin-Procedure Rsi960us-Get-XMLP-Definitions

  do Rsi960us-Get-XML-URLID
  do Rsi960us-Get-Report-Definitions

  move 'N'  to $RC_US_YE.Py_Ye_Rpt_Burst
  move 'N'  to $Py_Ye_Rpt_Burst

  If $RD1_PY_YE_RPT_SS = 'Y'
     move $RD1_Report_Defn_Id to $Report_Defn_ID
  End-If

  move 'N'  to $Py_Ye_Rpt_Burst

  If #RD2_PY_RPT_BATCH_SIZE <> 0
     move $RD2_REPORT_DEFN_ID to $Report_Defn_ID
     do Rsi960us-Check-Burst-Value

     If $Py_Ye_Rpt_Burst <> 'Y'
        Show 'No burst fieldname given for batched report definition: ' $RD2_REPORT_DEFN_ID
     End-If
  End-If

End-Procedure Rsi960us-Get-XMLP-Definitions

!***********************************************************************
! Procedure Rsi960us-Get-XML-URLID
!***********************************************************************
Begin-Procedure Rsi960us-Get-XML-URLID

  move ' '  to $XMLUrl_Py_Ye_XMLUrlid

BEGIN-SELECT
XMLURL.PY_YE_XMLURLID

  move &XMLURL.PY_YE_XMLURLID to $XMLUrl_Py_Ye_XMLUrlid

  EXIT-SELECT

FROM PS_PY_YE_OPT_TAX XMLURL
WHERE XMLURL.PY_TAX_YEAR = &TX.BALANCE_YEAR
  AND XMLURL.TAXFORM_ID  = 'W'
END-SELECT

  If $XMLUrl_Py_Ye_XMLUrlid = ' '
     Show 'XML data file URLID is missing.'
  End-If

End-Procedure Rsi960us-Get-XML-URLID

!***********************************************************************
! Procedure Rsi960us-Get-Report-Definitions
!***********************************************************************
Begin-Procedure Rsi960us-Get-Report-Definitions

  move 'N'  to $RD1_PY_YE_RPT_SS
  move ' '  to $RD1_Report_Defn_Id
  move ' '  to $RD1_TMPLDEFN_ID

BEGIN-SELECT
RD1.PY_YE_RPT_SS
RD1.REPORT_DEFN_ID
RD1.TMPLDEFN_ID
RD1.PY_RPT_BATCH_SIZE

  move &RD1.PY_YE_RPT_SS   to $RD1_PY_YE_RPT_SS
  move &RD1.REPORT_DEFN_ID to $RD1_Report_Defn_Id
  move &RD1.TMPLDEFN_ID    to $RD1_TMPLDEFN_ID

  EXIT-SELECT

FROM PS_PY_YE_OPT_RPT RD1
WHERE RD1.PY_TAX_YEAR     = &TX.BALANCE_YEAR
  AND RD1.TAXFORM_ID      = 'W'
  AND RD1.PY_W2_COPY_TYPE = $RC_US_YE.Py_W2_Copy_Type
  AND RD1.PY_YE_RPT_SS    = 'Y'
END-SELECT

  move ' ' to $RD2_REPORT_DEFN_ID
  move ' ' to $RD2_TMPLDEFN_ID
  move 0   to #RD2_PY_RPT_BATCH_SIZE

BEGIN-SELECT
RD2.REPORT_DEFN_ID
RD2.TMPLDEFN_ID
RD2.PY_RPT_BATCH_SIZE

  move &RD2.REPORT_DEFN_ID    to $RD2_REPORT_DEFN_ID
  move &RD2.TMPLDEFN_ID       to $RD2_TMPLDEFN_ID
  move &RD2.PY_RPT_BATCH_SIZE to #RD2_PY_RPT_BATCH_SIZE

  EXIT-SELECT

FROM PS_PY_YE_OPT_RPT RD2
WHERE RD2.PY_TAX_YEAR     = &TX.BALANCE_YEAR
  AND RD2.TAXFORM_ID      = 'W'
  AND RD2.PY_W2_COPY_TYPE = $RC_US_YE.Py_W2_Copy_Type
  AND RD2.PY_YE_RPT_SS   <> 'Y'
END-SELECT

End-Procedure Rsi960us-Get-Report-Definitions

!***********************************************************************
! Procedure Rsi960us-Check-Burst-Value
!***********************************************************************
Begin-Procedure Rsi960us-Check-Burst-Value

  let $Py_Ye_Rpt_Burst = 'N'

BEGIN-SELECT
CB.BURST_FIELDNAME

  If rtrim(&CB.BURST_FIELDNAME, ' ') = ''
     let $Py_Ye_Rpt_Burst = 'N'
  Else
     let $Py_Ye_Rpt_Burst = 'Y'
  End-If

  EXIT-SELECT

From PSXPRPTDEFN CB
WHERE CB.REPORT_DEFN_ID = $Report_Defn_ID
END-SELECT

End-Procedure Rsi960us-Check-Burst-Value

!***********************************************************************
! Procedure Rsi960us-Clear-Guide-Temp
!***********************************************************************
Begin-Procedure Rsi960us-Clear-Guide-Temp

  let $err-statement = 'Rsi960us-Clear-Guide-Temp, DELETE PS_PY_SS_USA_TMP'

BEGIN-SQL on-error=Rsi960us-Sql-Statement-Error
DELETE FROM PS_PY_SS_USA_TMP
WHERE PY_YE_UPD_ACTION <> 'F'
AND TAXFORM_ID = 'W'
END-SQL
End-Procedure Rsi960us-Clear-Guide-Temp

!***********************************************************************
! Procedure Rsi960us-Sql-Statement-Error
!***********************************************************************
Begin-Procedure Rsi960us-Sql-Statement-Error

  show $err-statement
  show ' Error : ' $sql-error

End-Procedure Rsi960us-Sql-Statement-Error

!***********************************************************************
! Procedure Rsi960us-Open-XML-File
!***********************************************************************
Begin-Procedure Rsi960us-Open-XML-File($FName, #FNum, :#FStat)

  let $FName = Rtrim(LTRIM($FName, ' '), ' ')
  let $FName = '{IMPORTPREFIX}' || $FName || '{IMPORTSUFFIX}'

  open $FName as #FNum for-writing
        record=200:vary status = #FStat ENCODING = UTF-8

  If #FStat = 0
      let $xmlLine = '<?xml version="1.0" encoding="UTF-8"?>'
      do Rsi960us-Write-XML-Line(#FNum, $xmlLine)
  End-If

End-Procedure Rsi960us-Open-XML-File

!***********************************************************************
! Procedure Rsi960us-Build-XML-Line
!***********************************************************************
Begin-Procedure Rsi960us-Build-XML-Line($xmlTagIn, $xmlValueIn, $xmlEndFlag, #FNum, #FNum2, $UserFlag)

  let $xmlElement = ''

  do Rsi960us-Convert-Special-Chars($xmlValueIn, $xmlValueOut)
  let $xmlValueIn = $xmlValueOut

  do Rsi960us-XML-Open-Tag($xmlTagIn, $xmlTagOut)
  let $xmlElement = $xmlElement || $xmlTagOut || $xmlValueIn

  If $xmlEndFlag = 'Y'
     do Rsi960us-XML-Close-Tag($xmlTagIn, $xmlTagOut)
  Else
     let $xmlTagOut = ''
  End-If

  let $xmlElement = $xmlElement || $xmlTagOut

  If #FNum <> 0
     do Rsi960us-Write-XML-Line(#FNum, $xmlElement)
  End-If

  If #FNum2 <> 0 and $UserFlag = 'Y'
     do Rsi960us-Write-XML-Line(#FNum2, $xmlElement)
  End-If

End-Procedure Rsi960us-Build-XML-Line

!***********************************************************************
! Procedure Rsi960us-Get-SS-Consent
!***********************************************************************
Begin-Procedure Rsi960us-Get-SS-Consent

  let $SS_Consent = 'N'

BEGIN-SELECT
SSCON.YE_CONSENT_CURRENT

  move &SSCON.YE_CONSENT_CURRENT to $SS_Consent

FROM PS_PY_YE_CONS_USA SSCON
WHERE SSCON.EMPLID = $YD_Emplid
  AND SSCON.LASTUPDDTTM = (SELECT MAX(SSCON1.LASTUPDDTTM)
                           FROM PS_PY_YE_CONS_USA SSCON1
                           WHERE SSCON1.EMPLID = SSCON.EMPLID)
END-SELECT

  If $SS_Consent = 'C' and $RC_US_YE.Py_W2_Copy_Type = '2'
     let $UserFlag = 'N'
  Else
     let $UserFlag = 'Y'
  End-If
End-Procedure Rsi960us-Get-SS-Consent

!***********************************************************************
! Procedure Rsi960us-Convert-Special-Chars
!***********************************************************************
Begin-Procedure Rsi960us-Convert-Special-Chars($string_in, :$string_out)

  let $string_in = replace($string_in, '&', '&amp;')
  let $string_in = replace($string_in, '"', '&quot;')
  let $string_in = replace($string_in, '<', '&lt;')
  let $string_in = replace($string_in, '>', '&gt;')
  let $string_in = replace($string_in, '''', '&apos;')
  let $string_out = $string_in

End-Procedure Rsi960us-Convert-Special-Chars

!***********************************************************************
! Procedure Rsi960us-Write-XML-Line
!***********************************************************************
Begin-Procedure Rsi960us-Write-XML-Line(#Fnum, $xmlLine)

   write #Fnum from $xmlLine:200

End-Procedure Rsi960us-Write-XML-Line

!***********************************************************************
! Procedure Rsi960us-Select_From_Xlat
!***********************************************************************
Begin-Procedure Rsi960us-Select_From_Xlat ($FldName, $FldVal, :$ShortName, :$LongName)

  #IfDef debugx
     Show 'Entering READXLAT.SQC: Rsi960us-Select_From_Xlat'
     Show 'Input $FldName: ' $FldName
     Show 'Input $FldVal: ' $FldVal
  #EndIf

BEGIN-SELECT
XLATSHORTNAME
XLATLONGNAME

  move &XlatShortName to $ShortName
  move &XlatLongName  to $LongName

FROM PSXLATITEM
WHERE FIELDNAME  = $FldName
  AND FIELDVALUE = $FldVal
  AND EFFDT      = (SELECT MAX(EFFDT)
                      FROM   PSXLATITEM
                      WHERE  FIELDNAME  = $_FieldName
                        AND  FIELDVALUE = $_FieldValue
                        AND  EFFDT     <= $_AsOfDate)
END-SELECT

  #IfDef debugx
     Show 'Exiting READXLAT.SQC: Rsi960us-Select_From_Xlat'
     Show 'Output $ShortName: ' $ShortName
     Show 'Output $LongName: ' $LongName
  #EndIf

End-Procedure Rsi960us-Select_From_Xlat

!***********************************************************************
! Procedure Rsi960us-XML-Open-Tag
!***********************************************************************
Begin-Procedure Rsi960us-XML-Open-Tag($xmlTagIn,:$xmlTagOut)

   let $xmlTagOut   = ''
   let $xmlTagOpen  = '<'
   let $xmlTagClose = '>'

   let $xmlTagIn = ltrim(rtrim($xmlTagIn, ' '), ' ')
   let $xmlTagOut = $xmlTagOpen || $xmlTagIn || $xmlTagClose

End-Procedure Rsi960us-XML-Open-Tag

!***********************************************************************
! Procedure Rsi960us-Capture-OS
!***********************************************************************
Begin-Procedure Rsi960us-Capture-OS

  let $yeOS = ' '

  #Ifdef NT
     let $yeOS = 'NT'
  #End-If

  #Ifdef MVS
     let $yeOS = 'MVS'
  #End-If

  #Ifdef UNIX
     let $yeOS = 'UNIX'
  #End-If

End-Procedure Rsi960us-Capture-OS

!***********************************************************************
! Procedure Rsi960us-Insert-YE-Runcontrol
!***********************************************************************
Begin-Procedure Rsi960us-Insert-YE-Runcontrol

  let $err-statement = 'Rsi960us-Insert-YE-Runcontrol, INSERT PS_PY_YE_FORM_RCTL'

BEGIN-SQL on-error=Rsi960us-Sql-Statement-Error
INSERT INTO PS_PY_YE_FORM_RCTL
(OPRID
,RUN_CNTL_ID
,PRCSINSTANCE
,PRCSNAME
,JOBINSTANCE
,REPORT_DEFN_ID
,TMPLDEFN_ID
,PY_YE_SOURCEFILE
,PY_YE_SOURCELOC
,PY_YE_SRC_FILENAME
,PY_YE_OSPLATFORM
,FORM_ID
,PY_W2_FINAL_PRINT
,PY_W2_COPY_TYPE
,PY_YE_RPT_BURST
,PY_YE_RPT_SS
,PY_RPT_DEFN_ID_SS
,PY_RPT_TMPL_ID_SS
,TAXFORM_ID
,PY_YE_SOURCEFILE2
,PY_YE_SRC_FILENAM2
,PY_YE_FILE_COUNT
,PY_YE_XMLURLID
,PY_TAX_YEAR)
VALUES
($Prcs_OprID
,$Prcs_Run_Cntl_ID
,#prcs_process_instance
,'RSI960US'
,#prcs_job_instance
,$RD2_REPORT_DEFN_ID
,$RD2_TMPLDEFN_ID
,$sourceFile2
,$sourceLocation2
,$sourceFileName2
,$yeOS
,$Form_ID
,$RC_US_YE.Py_W2_Final_Print
,$RC_US_YE.Py_W2_Copy_Type
,$RC_US_YE.Py_Ye_Rpt_Burst
,$RD1_PY_YE_RPT_SS
,$RD1_Report_Defn_Id
,$RD1_TMPLDEFN_ID
,'W'
,$sourceFile2
,$sourceFileName2
,0
,$XMLUrl_Py_Ye_XMLUrlid
,&TX.Balance_Year)
END-SQL

End-Procedure Rsi960us-Insert-YE-Runcontrol

!***********************************************************************
! Procedure Rsi960us-XML-Close-Tag
!***********************************************************************
Begin-Procedure Rsi960us-XML-Close-Tag($xmlTagIn,:$xmlTagOut)

   let $xmlTagOut   = ''
   let $xmlTagOpen  = '</'
   let $xmlTagClose = '>'

   let $xmlTagIn = ltrim(rtrim($xmlTagIn, ' '), ' ')
   let $xmlTagOut = $xmlTagOpen || $xmlTagIn || $xmlTagClose

End-Procedure Rsi960us-XML-Close-Tag

!***********************************************************************
! Procedure Rsi960us-Close-XML-File
!***********************************************************************
Begin-Procedure Rsi960us-Close-XML-File(#Fnum)

   close #Fnum

End-Procedure Rsi960us-Close-XML-File

!***********************************************************************
! Procedure Rsi960us-Insert-Guide-Data
!***********************************************************************
Begin-Procedure Rsi960us-Insert-Guide-Data

  let $UpdateAction = 'I'
  let $NotifyFlag = 'N'
  do Rsi960us-Get-Viewing-Date
  do Rsi960us-Get-Guide-Seqnum

  let $err-statement = 'Rsi960us-Insert-Guide-Data, INSERT PS_PY_SS_USA_TMP'

BEGIN-SQL on-error=Rsi960us-Sql-Statement-Error
INSERT INTO PS_PY_SS_USA_TMP (OPRID
                             ,RUN_CNTL_ID
                             ,PRCSINSTANCE
                             ,PRCSNAME
                             ,JOBINSTANCE
                             ,EMPLID
                             ,PY_TAX_YEAR
                             ,W2_REPORTING_CO
                             ,TAXFORM_ID
                             ,SEQUENCE_NUMBER
                             ,W2C_BATCH_NBR
                             ,W2C_BATCH_YR
                             ,PY_YE_FORM_SEQNUM
                             ,PY_W2_PROCESS_TYPE
                             ,YE_FORM_ISSUE_DT
                             ,YE_FORM_VIEWING_DT
                             ,ATTACHSYSFILENAME
                             ,ATTACHUSERFILE
                             ,PY_YE_FILEURLID
                             ,PY_YE_REPORT_URL
                             ,PY_YE_BURST_ID
                             ,PROCESS_INSTANCE
                             ,REPORT_DEFN_ID
                             ,BURST_FIELDNAME
                             ,PY_YE_NOTIFY_FLG
                             ,PY_W2_FINAL_PRINT
                             ,PY_YE_UPD_ACTION)
           VALUES
                             ($Prcs_OprID
                             ,$Prcs_Run_Cntl_ID
                             ,#Prcs_Process_Instance
                             ,'RSI960US'
                             ,#Prcs_Job_Instance
                             ,$YD_Emplid
                             ,&TX.Balance_Year
                             ,&W2C.W2_Reporting_Co
                             ,'W'
                             ,#YD_Sequence_Number
                             ,0
                             ,&TX.Balance_Year
                             ,#GD_Seq_Py_Ye_Form_Seqnum
                             ,$RC_US_YE.Py_W2_Process_Type
                             ,$IssueDate
                             ,$ViewingDate1
                             ,$FName
                             ,$FName
                             ,$XMLUrl_Py_Ye_XMLUrlid
                             ,' '
                             ,$BurstValue
                             ,0
                             ,$RD1_Report_Defn_Id
                             ,'BURST_VALUE'
                             ,$NotifyFlag
                             ,$RC_US_YE.Py_W2_Final_Print
                             ,$UpdateAction)
END-SQL

End-Procedure Rsi960us-Insert-Guide-Data

!***********************************************************************
! Procedure Rsi960us-Get-Viewing-Date
!***********************************************************************
Begin-Procedure Rsi960us-Get-Viewing-Date

  do Format-DateTime('19000101', $ViewingDate, {DEFCMP}, '', 'native' )

BEGIN-SELECT
YEOPT.YE_FORM_VIEWING_DT

   let $ViewingDate = &YEOPT.YE_FORM_VIEWING_DT

   if $ViewingDate = ''
      do Format-DateTime('19000101', $ViewingDate, {DEFCMP}, '', 'native' )   
   end-if

FROM PS_PY_YEOPT_TX_USA YEOPT
WHERE YEOPT.W2_REPORTING_CO = &W2C.W2_Reporting_Co
AND YEOPT.PY_TAX_YEAR = &TX.Balance_Year
AND YEOPT.TAXFORM_ID = 'W'
END-SELECT

End-Procedure Rsi960us-Get-Viewing-Date
 
!***********************************************************************
! Procedure Rsi960us-Get-Guide-Seqnum
!***********************************************************************
Begin-Procedure Rsi960us-Get-Guide-Seqnum

  let #GD_Seq_Py_Ye_Form_Seqnum =  0
  let $ViewingDate1 = $ViewingDate

BEGIN-SELECT
GD_SEQ.PY_YE_FORM_SEQNUM
GD_SEQ.YE_FORM_VIEWING_DT
GD_SEQ.PY_YE_NOTIFY_FLG

  let #GD_Seq_Py_Ye_Form_Seqnum = &GD_SEQ.PY_YE_FORM_SEQNUM
  let $ViewingDate1 = &GD_SEQ.YE_FORM_VIEWING_DT
  let $NotifyFlag = &GD_SEQ.PY_YE_NOTIFY_FLG
  let $UpdateAction = 'C'

  EXIT-SELECT

FROM PS_PY_SS_USA_GDE GD_SEQ
WHERE GD_SEQ.EMPLID          = $YD_Emplid
  AND GD_SEQ.PY_TAX_YEAR     = &TX.Balance_Year
  AND GD_SEQ.W2_REPORTING_CO = &W2C.W2_Reporting_Co
  AND GD_SEQ.TAXFORM_ID      = 'W'
  AND GD_SEQ.SEQUENCE_NUMBER = #YD_Sequence_Number
  AND GD_SEQ.W2C_BATCH_NBR   = 0
  AND GD_SEQ.W2C_BATCH_YR    = &TX.Balance_Year
ORDER BY GD_SEQ.PY_YE_FORM_SEQNUM DESC
END-SELECT

  If $UpdateAction <> 'C'
     let #GD_Seq_Py_Ye_Form_Seqnum = #GD_Seq_Py_Ye_Form_Seqnum + 1
  End-If

  If $UpdateAction = 'C' and $NotifyFlag = 'N'
     let $ViewingDate1 = $ViewingDate
  End-If

End-Procedure Rsi960us-Get-Guide-Seqnum

!***********************************************************************
! Procedure Rsi960us-Print-W2-XMLP
!***********************************************************************
Begin-Procedure Rsi960us-Print-W2-XMLP

  move 'N' to $Combat_Pay

  If $SortCode1 <> '7'
     do Rsi960us-identify-box12-entries
     let $Box12PrintString = substr($Box12CheckString,1,8)
  End-If

  move 0 to #NextLocal
  move 0 to #HoldNextLocal
  move 1 to #j

  If #EmployeesPerPage > 0 or $Xmlpub = 'Y'
     While #j <= #FormsPerPage/#EmployeesPerPage or $Xmlpub = 'Y'
       do Rsi960us-Print-ER-Data-XMLP
       do Rsi960us-Print-EE-Data-XMLP
       do Rsi960us-Print-Fed-State-Amounts-XMLP

       If #LocalCount > 0 or #Align_Count > 0
          move #HoldNextLocal to #NextLocal

          If $SortCode1 <> '7'
             do Rsi960us-Print-Local-Amounts-XMLP
          Else
             do Rsi960us-Print-Locality-Sort-Amounts-XMLP
          End-If
       End-If

       do Rsi960us-Print-Box14-XMLP

       If #YD_Sequence_Number = 1 or #Align_Count > 0
          do Rsi960us-Print-Box13-XMLP
       End-If

       If $SortCode1 <> '7'
          do Rsi960us-Print-Box12-XMLP
       End-If

       add 1 to #j

       If $Xmlpub = 'Y'
          do Rsi960us-XML-Close-Tag('W2_Data', $CloseTag)

          If ($RC_US_YE.Py_W2_Copy_Type = '2' and $SS_Consent <> 'C') or
             $RC_US_YE.Py_W2_Copy_Type <> '2'
             do Rsi960us-Write-XML-Line(#Fnum2, $CloseTag)
          End-If

          If $RC_US_YE.Py_W2_Copy_Type = '2' and #FNum <> 0
             do Rsi960us-Write-XML-Line(#Fnum, $CloseTag)
          End-If
          Break
       End-If
     End-While
  End-If

  If $SortCode1 <> '7'
     let #Len_Box12Print   = length($Box12PrintString)
     let #Len_Box12Check   = length($Box12CheckString)
     let $Box12CheckString = substr($Box12CheckString,(#Len_Box12Print + 1),(#Len_Box12Check - #Len_Box12Print))

     While $Box12CheckString <> ''
       let $Box12PrintString = substr($Box12CheckString,1,8)
       move 1 to #j

       While #j <= #FormsPerPage/#EmployeesPerPage
         do Rsi960us-Print-ER-Data-XMLP
         do Rsi960us-Print-EE-Data-XMLP
         do Rsi960us-Print-Box12-XMLP
         move #L_14_Start to #L_14
         do Rsi960us-Print-Suppl-Box14-XMLP

         add 1 to #j

         If $Xmlpub = 'Y'
            do Rsi960us-XML-Close-Tag('W2_Data', $CloseTag)
            If ($RC_US_YE.Py_W2_Copy_Type = '2' and $SS_Consent <> 'C') or
               $RC_US_YE.Py_W2_Copy_Type <> '2'
               do Rsi960us-Write-XML-Line(#Fnum2, $CloseTag)
            End-If

            If $RC_US_YE.Py_W2_Copy_Type = '2' and #FNum <> 0
               do Rsi960us-Write-XML-Line(#Fnum, $CloseTag)
            End-If
         End-If
       End-While

       let #Len_Box12Print   = length($Box12PrintString)
       let #Len_Box12Check   = length($Box12CheckString)
       let $Box12CheckString = substr($Box12CheckString,(#Len_Box12Print + 1),(#Len_Box12Check - #Len_Box12Print))
     End-While

     While #NextLocal < #LocalCount
       move #NextLocal to #HoldNextLocal
       move 1 to #j

       If #EmployeesPerPage > 0
          While #j <= #FormsPerPage/#EmployeesPerPage
            do Rsi960us-Print-ER-Data-XMLP
            do Rsi960us-Print-EE-Data-XMLP
            move #HoldNextLocal to #NextLocal
            do Rsi960us-Print-Local-Amounts-XMLP
            move #L_14_Start to #L_14
            do Rsi960us-Print-Suppl-Box14-XMLP

            add 1 to #j

            If $Xmlpub = 'Y'
               do Rsi960us-XML-Close-Tag('W2_Data', $CloseTag)
               If ($RC_US_YE.Py_W2_Copy_Type = '2' and $SS_Consent <> 'C') or
                  $RC_US_YE.Py_W2_Copy_Type <> '2'
                  do Rsi960us-Write-XML-Line(#Fnum2, $CloseTag)
               End-If

               If $RC_US_YE.Py_W2_Copy_Type = '2' and #FNum <> 0
                  do Rsi960us-Write-XML-Line(#Fnum, $CloseTag)
               End-If
            End-If
          End-While
       End-If
     End-While
  End-If

  do Rsi960us-clear-w2-variables

  If #Align_Count = 0
     do Rsi960us-zero-box14
  End-If

  If #LocalCount > 0
     do Rsi960us-zero-local-table
  End-If

  move ' ' to $YD_Statutory_Ee
  move ' ' to $YD_Pension_Plan
  move ' ' to $YD_Thirdparty_Sickpay

End-Procedure Rsi960us-Print-W2-XMLP

!***********************************************************************
! Procedure Rsi960us-Print-ER-Data-XMLP
!***********************************************************************
Begin-Procedure Rsi960us-Print-ER-Data-XMLP

  move &TX.Balance_Year to $CalYear 9999
  let $BurstValue = rtrim($YD_Emplid, ' ') || $CalYear
  let $BurstValue = $BurstValue || rtrim(&W2C.W2_Reporting_Co, ' ') || 'W2'
  do format-number(#YD_Sequence_Number, $W2SeqNo, '09')
  let $BurstValue = $BurstValue || $W2SeqNo

  If $RC_US_YE.Py_W2_Copy_Type = '2'
     If $BurstValue <> $BurstValueSave
        If $BurstValueSave <> ''
           do Rsi960us-XML-Close-Tag('USA_YearEnd', $CloseTag)
           do Rsi960us-Write-XML-Line(#Fnum, $CloseTag)
           do Rsi960us-Close-XML-File(#FNum)
        End-If
        move $BurstValue to $BurstValueSave
        let $FName = rtrim($BurstValue,' ') || '.xml'
        let $sourceFile     = $FName || '{IMPORTSUFFIX}'
        let $sourceLocation = '{IMPORTPREFIX}' || ''
        let $sourceFileName = rtrim($sourceLocation,' ') || rtrim($sourceFile,' ')
        let #FNum  = 3
        let #FStat = 0
        do Rsi960us-Open-XML-File($FName, #FNum, #FStat)
        do Rsi960us-XML-Open-Tag('USA_YearEnd', $openTag)
        do Rsi960us-Write-XML-Line(#Fnum, $openTag)
     End-If
  End-If

  do Rsi960us-XML-Open-Tag('W2_Data', $openTag)

  If $RC_US_YE.Py_W2_Copy_Type = '2' and #FNum <> 0
     do Rsi960us-Write-XML-Line(#Fnum, $openTag)
  End-If

  do Rsi960us-Get-SS-Consent

  If ($RC_US_YE.Py_W2_Copy_Type = '2' and $SS_Consent <> 'C') or
      $RC_US_YE.Py_W2_Copy_Type <> '2'
     do Rsi960us-Write-XML-Line(#Fnum2, $openTag)
  End-If

  do Rsi960us-Build-XML-Line('BURST_VALUE', $BurstValue, 'Y', #FNum, #FNum2, $UserFlag)
  do Rsi960us-Build-XML-Line('EMPLID', $YD_Emplid, 'Y', #FNum, #FNum2, $UserFlag)

  do format-number(#BatchId, $W2Batch, '09999')
  do Rsi960us-Build-XML-Line('BATCH_ID', $W2Batch, 'Y', #FNum, #FNum2, $UserFlag)

  do Rsi960us-Build-XML-Line('ER_EIN', $W2C_Federal_EIN, 'Y', #FNum, #FNum2, $UserFlag)
  do Rsi960us-Build-XML-Line('Box_Year', $CalYear, 'Y', #FNum, #FNum2, $UserFlag)

  do Rsi960us-Build-XML-Line('ER_Name', $W2C_Descr, 'Y', #FNum, #FNum2, $UserFlag)
  do Rsi960us-Build-XML-Line('ER_Address1', $W2C_Address1, 'Y', #FNum, #FNum2, $UserFlag)

  If rtrim($W2C_Address2,' ') <> ''
     do Rsi960us-Build-XML-Line('ER_Address2', $W2C_Address2, 'Y', #FNum, #FNum2, $UserFlag)
     move 'N' to $LineShift
  Else
     move 'Y' to $LineShift
  End-If

  If #Align_Count = 0
     If $W2C_Country = 'USA'
        move $W2C_Zip to $A_ZipExtsn ~~~~~~xxxx

        If instr($W2C_Zip,'-',6) = 0 and $A_ZipExtsn <> '    '
           let $W2C_Zip = substr($W2C_Zip,1,5) || '-' || substr($W2C_Zip,6,4)
        End-If

        let $C4 = $W2C_City || ' ' || $W2C_State || ' ' || $W2C_Zip

        If length($C4) > #YE_State_City_Zip_Box_Size
           let #NewLen = length($W2C_City) + #YE_State_City_Zip_Box_Size - length($C4)
           let $C4 = substr($W2C_City,1,#NewLen) || ' ' || $W2C_State || ' ' || $W2C_Zip
        End-If
     Else
        let $C4 = $W2C_City || ' ' || $W2C_State || ' ' || $W2C_Country || ' ' || $W2C_Zip

        If length($C4) > #YE_State_City_Zip_Box_Size
            let #NewLen = length($W2C_City) + #YE_State_City_Zip_Box_Size - length($C4)
            let $C4 = substr($W2C_City,1,#NewLen) || ' ' || $W2C_State || ' ' || $W2C_Country || ' ' || $W2C_Zip
        End-If
     End-If
  End-If

  If $LineShift = 'Y'
     let #PrintLine = #L_C3
  Else
     let #PrintLine = #L_C4
  End-If

  If rtrim($W2C_Address2,' ') <> ''
     do Rsi960us-Build-XML-Line('ER_Address3', $C4, 'Y', #FNum, #FNum2, $UserFlag)
  Else
     do Rsi960us-Build-XML-Line('ER_Address2', $C4, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

End-Procedure Rsi960us-Print-ER-Data-XMLP

!***********************************************************************
! Procedure Rsi960us-Print-EE-Data-XMLP
!***********************************************************************
Begin-Procedure Rsi960us-Print-EE-Data-XMLP

  add 1 to #T_Count

  If $S123 = &TEMP_SSN_MASK or rtrim(&YD.SSN, ' ') = ''
     do Rsi960us-Build-XML-Line('EE_SSN', $YD_SSN, 'Y', #FNum, #FNum2, $UserFlag)
  else
     If &TX.BALANCE_YEAR > 2016
        let $YD_SSN_Trunc = 'XXX-XX-' || substr($YD_SSN, 8,4)
        do Rsi960us-Build-XML-Line('EE_SSN', $YD_SSN_Trunc, 'Y', #FNum, #FNum2, $UserFlag)
     Else
        do Rsi960us-Build-XML-Line('EE_SSN', $YD_SSN, 'Y', #FNum, #FNum2, $UserFlag)  
     End-If
  End-If

  do Rsi960us-Build-XML-Line('Box_R', $ReprintDescr, 'Y', #FNum, #FNum2, $UserFlag)

  If &YEE.PROCESS_FLAG = 'V' or #Align_Count <> 0
     do Rsi960us-Build-XML-Line('Box_V', 'Y', 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  do Rsi960us-Build-XML-Line('Control_Number', $YD_Control_Number, 'Y', #FNum, #FNum2, $UserFlag)

  If $Use_Alternate_Name = 'Y'
     let $Alternate_Name = $Alternate_Name || $YD_Suffix
     do Rsi960us-Build-XML-Line('EE_YEName', $Alternate_Name, 'Y', #FNum, #FNum2, $UserFlag)
  Else
     do Rsi960us-Build-XML-Line('EE_FullName', $E_YE_Name, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  If $Use_Alternate_Name_flap = 'Y'
     do Rsi960us-Build-XML-Line('EE_FullName_flap', $Alternate_Name_flap, 'Y', #FNum, #FNum2, $UserFlag)
  Else
     do Rsi960us-Build-XML-Line('EE_FullName_flap', $E_YE_Name_flap, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  do Rsi960us-Build-XML-Line('EE_Address1', $YD_Address1, 'Y', #FNum, #FNum2, $UserFlag)
  do Rsi960us-Build-XML-Line('EE_Address1_flap', $YD_Address1_flap, 'Y', #FNum, #FNum2, $UserFlag)

  If rtrim($YD_Address2,' ') <> ''
     do Rsi960us-Build-XML-Line('EE_Address2', $YD_Address2, 'Y', #FNum, #FNum2, $UserFlag)
     do Rsi960us-Build-XML-Line('EE_Address2_flap', $YD_Address2_flap, 'Y', #FNum, #FNum2, $UserFlag)
     move 'N' to $LineShift
  Else
     move 'Y' to $LineShift
  End-If

  If #Align_Count = 0
     do Rsi960us-Get-EE-Address-Line3
  End-If

  If rtrim($YD_Address2, ' ') <> ''
     do Rsi960us-Build-XML-Line('EE_Address3', $F3, 'Y', #FNum, #FNum2, $UserFlag)
     do Rsi960us-Build-XML-Line('EE_Address3_flap', $F3_Flap, 'Y', #FNum, #FNum2, $UserFlag)
  Else
     do Rsi960us-Build-XML-Line('EE_Address2', $F3, 'Y', #FNum, #FNum2, $UserFlag)
     do Rsi960us-Build-XML-Line('EE_Address2_flap', $F3_Flap, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

End-Procedure Rsi960us-Print-EE-Data-XMLP

!***********************************************************************
! Procedure Rsi960us-Print-Fed-State-Amounts-XMLP
!***********************************************************************
Begin-Procedure Rsi960us-Print-Fed-State-Amounts-XMLP

  If #Fed_Wages <> 0
     do Format-Number (#Fed_Wages, $Out, '99999999999.99')
     do Rsi960us-Build-XML-Line('Fed_Wages', $Out, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  If #Fed_Tax <> 0
     do Format-Number (#Fed_Tax, $Out, '99999999999.99')
     do Rsi960us-Build-XML-Line('Fed_Tax', $Out, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  If #SS_Wages <> 0
     do Format-Number (#SS_Wages, $Out, '99999999999.99')
     do Rsi960us-Build-XML-Line('SS_Wages', $Out, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  If #SS_Tax <> 0
     do Format-Number (#SS_Tax, $Out, '99999999999.99')
     do Rsi960us-Build-XML-Line('SS_Tax', $Out, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  If #Med_Wages <> 0
     do Format-Number (#Med_Wages, $Out, '99999999999.99')
     do Rsi960us-Build-XML-Line('Med_Wages', $Out, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  If #Med_Tax <> 0
     do Format-Number (#Med_Tax, $Out, '99999999999.99')
     do Rsi960us-Build-XML-Line('Med_Tax', $Out, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  If #SS_Tips <> 0
     do Format-Number (#SS_Tips, $Out, '99999999999.99')
     do Rsi960us-Build-XML-Line('SS_Tips', $Out, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  If #Alloc_Tips <> 0
     do Format-Number (#Alloc_Tips, $Out, '99999999999.99')
     do Rsi960us-Build-XML-Line('Alloc_Tips', $Out, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  If #Adv_EIC <> 0
     do Format-Number (#Adv_EIC, $Out, '99999999999.99')
     do Rsi960us-Build-XML-Line('Adv_EIC', $Out, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  If #Dep_Care <> 0
     do Format-Number (#Dep_Care, $Out, '99999999999.99')
     do Rsi960us-Build-XML-Line('DEP_Care', $Out, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  If #Non_Qual_457_Amt <> 0
     do Format-Number (#Non_Qual_457_Amt, $Out, '99999999999.99')
     do Rsi960us-Build-XML-Line('NonQual_457AB', $Out, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  If rtrim($YD_W2_State,' ') <> ''
     do Rsi960us-Build-XML-Line('ST1_ST', $YD_W2_State, 'Y', #FNum, #FNum2, $UserFlag)
     do Rsi960us-Build-XML-Line('ST1_StateID', $YD_Employer_ID_SWT, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  If #State_Wages <> 0
     do Format-Number (#State_Wages, $Out, '99999999999.99')
     do Rsi960us-Build-XML-Line('ST1_WAGES', $Out, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  If #State_Tax <> 0
     do Format-Number (#State_Tax, $Out, '99999999999.99')
     do Rsi960us-Build-XML-Line('ST1_TAXES', $Out, 'Y', #FNum, #FNum2, $UserFlag)
  End-If

End-Procedure Rsi960us-Print-Fed-State-Amounts-XMLP

!***********************************************************************
! Procedure Rsi960us-Print-Local-Amounts-XMLP
!***********************************************************************
Begin-Procedure Rsi960us-Print-Local-Amounts-XMLP

  move 1 to #i
  move #L_18 to #LocalPrintLine18
  move #L_19 to #LocalPrintLine19
  move #L_20 to #LocalPrintLine20

  If #Locals_Per_Form <> 1
     move 1 to #Locals_Per_Form
  End-If

  While #NextLocal < #LocalCount and #i <= #Locals_Per_Form
    add 1 to #NextLocal

    If rtrim($YD_W2_State,' ') = 'OH' and &TX.BALANCE_YEAR > 2015
       get $Locality_Name $Locality #Local_Wages #Local_Tax from LOCALS_OH(#NextLocal)
    else
       get $Locality #Local_Wages #Local_Tax from LOCALS(#NextLocal)
    End-If

    let $Locality = rtrim($Locality,' ')

    If $Locality = $PriorLocality
       If $YD_W2_State <> $PriorState
          move $YD_W2_State to $PriorState
          do Rsi960us-Get-Locality-Print-Name
          move $Locality to $PriorLocality
       End-If
    Else
       do Rsi960us-Get-Locality-Print-Name
       move $Locality to $PriorLocality
    End-If

    let $Box15Done = 'N'
    If #i = 1
       If #NextLocal > 1
               let $Box15Done = 'Y'
               do Rsi960us-Build-XML-Line('ST1_ST', $YD_W2_State, 'Y', #FNum, #FNum2, $UserFlag)
               do Rsi960us-Build-XML-Line('ST1_StateID', $YD_Employer_ID_SWT, 'Y', #FNum, #FNum2, $UserFlag)
       End-If
    End-If

    If &YD.SEQUENCE_NUMBER > 1
       If $Box15Done = 'N'
          do Rsi960us-Build-XML-Line('ST1_ST', $YD_W2_State, 'Y', #FNum, #FNum2, $UserFlag)
          do Rsi960us-Build-XML-Line('ST1_StateID', $YD_Employer_ID_SWT, 'Y', #FNum, #FNum2, $UserFlag)
       End-If
    End-If

    If #i <= #Locals_Per_Form
       If #i = 1
          If #Local_Wages <> 0
             do Format-Number (#Local_Wages, $Out, '99999999999.99')
             do Rsi960us-Build-XML-Line('LOC1_WAGES', $Out, 'Y', #FNum, #FNum2, $UserFlag)
          End-If

          If #Local_Tax <> 0
             do Format-Number (#Local_Tax, $Out, '99999999999.99')
             do Rsi960us-Build-XML-Line('LOC1_TAXES', $Out, 'Y', #FNum, #FNum2, $UserFlag)
          End-If
          uppercase $LocalityPrintName
          do Rsi960us-Build-XML-Line('LOC1_LOC', $LocalityPrintName, 'Y', #FNum, #FNum2, $UserFlag)
       Else
          If #Local_Wages <> 0
             do Format-Number (#Local_Wages, $Out, '99999999999.99')
             do Rsi960us-Build-XML-Line('LOC2_WAGES', $Out, 'Y', #FNum, #FNum2, $UserFlag)
          End-If

          If #Local_Tax <> 0
             do Format-Number (#Local_Tax, $Out, '99999999999.99')
             do Rsi960us-Build-XML-Line('LOC2_TAXES', $Out, 'Y', #FNum, #FNum2, $UserFlag)
          End-If
          uppercase $LocalityPrintName
          do Rsi960us-Build-XML-Line('LOC2_LOC', $LocalityPrintName, 'Y', #FNum, #FNum2, $UserFlag)
       End-If
    End-If

    If #j = 1 and #Align_Count = 0
       add #Local_Wages to #Local_Wages_I
       add #Local_Tax to #Local_Tax_I

       If #i = 1
          add 1 to #Local
       End-If
    End-If
    add 1 to #i
  End-While

End-Procedure Rsi960us-Print-Local-Amounts-XMLP

!***********************************************************************
! Procedure Rsi960us-Print-Locality-Sort-Amounts-XMLP
!***********************************************************************
Begin-Procedure Rsi960us-Print-Locality-Sort-Amounts-XMLP

  move 1 to #i
  move #L_18 to #LocalPrintLine18
  move #L_19 to #LocalPrintLine19
  move #L_20 to #LocalPrintLine20

  While #NextLocal < #LocalCount and #i <= #Locals_Per_Form
    add 1 to #NextLocal

    If rtrim($YD_W2_State,' ') = 'OH' and &TX.BALANCE_YEAR > 2015
       get $Locality_Name $Locality #Local_Wages #Local_Tax from LOCALS_OH(#NextLocal)
    else
       get $Locality #Local_Wages #Local_Tax from LOCALS(#NextLocal)
    End-If

    If &SLS.LOCALITY = $Locality
       let $Locality = rtrim($Locality,' ')

       If $Locality = $PriorLocality
          If $YD_W2_State <> $PriorState
             move $YD_W2_State to $PriorState
             do Rsi960us-Get-Locality-Print-Name
             move $Locality to $PriorLocality
          End-If
       Else
          do Rsi960us-Get-Locality-Print-Name
          move $Locality to $PriorLocality
       End-If

       If &YD.SEQUENCE_NUMBER > 1
          do Rsi960us-Build-XML-Line('ST1_ST', $YD_W2_State, 'Y', #FNum, #FNum2, $UserFlag)
          do Rsi960us-Build-XML-Line('ST1_StateID', $YD_Employer_ID_SWT, 'Y', #FNum, #FNum2, $UserFlag)
       End-If

       If #i <= #Locals_Per_Form
          If #i = 1
             If #Local_Wages <> 0
                do Format-Number (#Local_Wages, $Out, '99999999999.99')
                do Rsi960us-Build-XML-Line('LOC1_WAGES', $Out, 'Y', #FNum, #FNum2, $UserFlag)
             End-If

             If #Local_Tax <> 0
                do Format-Number (#Local_Tax, $Out, '99999999999.99')
                do Rsi960us-Build-XML-Line('LOC1_TAXES', $Out, 'Y', #FNum, #FNum2, $UserFlag)
             End-If
             uppercase $LocalityPrintName
             do Rsi960us-Build-XML-Line('LOC1_LOC', $LocalityPrintName, 'Y', #FNum, #FNum2, $UserFlag)
          Else
             If #Local_Wages <> 0
                do Format-Number (#Local_Wages, $Out, '99999999999.99')
                do Rsi960us-Build-XML-Line('LOC2_WAGES', $Out, 'Y', #FNum, #FNum2, $UserFlag)
             End-If

             If #Local_Tax <> 0
                do Format-Number (#Local_Tax, $Out, '99999999999.99')
                do Rsi960us-Build-XML-Line('LOC2_TAXES', $Out, 'Y', #FNum, #FNum2, $UserFlag)
             End-If
             uppercase $LocalityPrintName
             do Rsi960us-Build-XML-Line('LOC2_LOC', $LocalityPrintName, 'Y', #FNum, #FNum2, $UserFlag)
          End-If
       End-If

       add 1 to #i

       If #j = 1 and #Align_Count = 0
          add #Local_Wages to #Local_Wages_I
          add #Local_Tax to #Local_Tax_I

          If #i = 1
             add 1 to #Local
          End-If
       End-If
    End-If
  End-While

End-Procedure Rsi960us-Print-Locality-Sort-Amounts-XMLP

!***********************************************************************
! Procedure Rsi960us-Print-Box14-XMLP
!***********************************************************************
Begin-Procedure Rsi960us-Print-Box14-XMLP

  move 0 to #m
  move 4 to #Last_Box14_Line
  move 1 to #Box14Count

  If $YD_W2_State = 'NJ'
     get #14 from BOX14(4) AMOUNT

     If #14 > 0
        get #14 from BOX14(5) AMOUNT

        If #14 > 0
           get #14 from BOX14(7) AMOUNT

           If #14 > 0
              put 0 into BOX14(3) AMOUNT
           End-If
        End-If
     End-If
  End-If

  If $YD_W2_State = 'PA'
     get $B_14 $T_14 #C_14 #14 from BOX14(5) BOX TEXT COLUMN AMOUNT

     If #14 > 0
        do Rsi960us-Print-PA-Box14-XMLP
     End-If

     get $B_14 $T_14 #C_14 #14 from BOX14(#BoxYN) BOX TEXT COLUMN AMOUNT

     If #14 > 0
        do Rsi960us-Print-PA-Box14-XMLP
     End-If

     get $B_14 $T_14 #C_14 #14 from BOX14(#BoxYT) BOX TEXT COLUMN AMOUNT

     If #14 > 0
        do Rsi960us-Print-PA-Box14-XMLP
     End-If

     get $B_14 $T_14 #C_14 #14 from BOX14(#BoxZN) BOX TEXT COLUMN AMOUNT

     If #14 > 0
        do Rsi960us-Print-PA-Box14-XMLP
     End-If

     If #YD_Sequence_Number > 1
        let #m = 30
     Else
        let #m = 6
     End-If
  End-If

  let #MyCount = 0
  #If [LAST_ORACLE_UPDATE] > 2009.2
      While #m <= 29 and (#Box14Count <= #Last_Box14_Line)
        get $B_14 $T_14 #C_14 #14 from Box14(#m) Box Text Column Amount
        If &TX.BALANCE_YEAR < 2006 or
           (#m <> #boxYN and
            #m <> #boxYT and
            #m <> #boxZN)
           If #14 > 0
              do Format-Number (#14, $Out, '99999999999.99')
              let $b14Amt = lpad(ltrim($Out,' '),10,' ')
              let $b14Lbl = rpad(rtrim($T_14,' '),5, ' ')
              let $b14    = $b14Lbl || ' ' || $b14Amt
              If (#m = #box14D or #m = #box14E or #m = #box14G or #m = #box14C or #m = #box14H)
                 If #m = #box14D
                    let $NJ_UI = 'Y'
                    let #Local_Tax = #14
                    let $LocalityPrintName = substr($T_14,1,7)
                    uppercase $LocalityPrintName
                    If #MyCount = 0
                       If #Local_Tax <> 0
                       do Format-Number (#Local_Tax, $Out, '99999999999.99')
                       do Rsi960us-Build-XML-Line('LOC1_TAXES', $Out, 'Y', #FNum, #FNum2, $UserFlag)
                       End-If
                       do Rsi960us-Build-XML-Line('LOC1_LOC', $LocalityPrintName, 'Y', #FNum, #FNum2, $UserFlag)
                       add 1 to #MyCount
                    Else
                       do Format-Number (#Local_Tax, $Out, '99999999999.99')
                       do Rsi960us-Build-XML-Line('LOC2_Text1', $Out, 'Y', #FNum, #FNum2, $UserFlag)
                       do Rsi960us-Build-XML-Line('LOC2_Text2', $LocalityPrintName, 'Y', #FNum, #FNum2, $UserFlag)
                       add 1 to #MyCount
                    End-If
                    move ' ' to  $LocalityPrintName
                 Else
                    If (#m = #box14E or #m = #box14G)
                       add #14 to #NJSDI_VPDI_Tot
                       let $NJDI_text = substr($T_14,1,7)
                       uppercase $NJDI_text
                       let $NJ_DI = 'Y'
                    Else
                       If #j = 1
                          add #14 to #NJFLI_VPFLI_Tot
                          let $NJFLI_text = substr($T_14,1,7)
                          uppercase $NJFLI_text
                          If #m = #box14H
                             let $NJ_VPFLI = 'Y'
                          End-If
                       End-If
                    End-If
                 End-If
              Else
                 If #Box14Count = 1
                    do Rsi960us-Build-XML-Line('Other1', $b14, 'Y', #FNum, #FNum2, $UserFlag)
                 Else
                    If #Box14Count = 2
                       do Rsi960us-Build-XML-Line('Other2', $b14, 'Y', #FNum, #FNum2, $UserFlag)
                    Else
                       If #Box14Count = 3
                          do Rsi960us-Build-XML-Line('Other3', $b14, 'Y', #FNum, #FNum2, $UserFlag)
                       Else
                          do Rsi960us-Build-XML-Line('Other4', $b14, 'Y', #FNum, #FNum2, $UserFlag)
                       End-If
                    End-If
                 End-If
                 add 1 to #Box14Count
              End-If
              let #Amount = #14
              do Rsi960us-add-box14-totals
              If $YD_W2_State = 'NJ' and #m = 6
                 do Rsi960us-Print-NJSUT-XMLP
              End-If
           End-If
        End-If
        add 1 to #m
      End-While
  #Else
      While #m <= 29 and (#Box14Count <= #Last_Box14_Line)
        get $B_14 $T_14 #C_14 #14 from Box14(#m) Box Text Column Amount
        If &TX.BALANCE_YEAR < 2006 or
           (#m <> #boxYN and
            #m <> #boxYT and
            #m <> #boxZN)
           If #14 > 0
              do Format-Number (#14, $Out, '9999999.99')
              let $b14Amt = lpad(ltrim($Out,' '),10,' ')
              let $b14Lbl = rpad(rtrim($T_14,' '),5, ' ')
              let $b14    = $b14Lbl || ' ' || $b14Amt
              If (#m = #box14D or #m = #box14E or #m = #box14G)
                 If #m = #box14D
                    let #Local_Tax = #14
                    let $LocalityPrintName = substr($T_14,1,7)
                    uppercase $LocalityPrintName
                    If #MyCount = 0
                       If #Local_Tax <> 0
                          do Format-Number (#Local_Tax, $Out, '99999999.99')
                          do Rsi960us-Build-XML-Line('LOC1_TAXES', $Out, 'Y', #FNum, #FNum2, $UserFlag)
                       End-If
                       do Rsi960us-Build-XML-Line('LOC1_LOC', $LocalityPrintName, 'Y', #FNum, #FNum2, $UserFlag)
                       add 1 to #MyCount
                    Else
                       do Format-Number (#Local_Tax, $Out, '99999999.99')
                       do Rsi960us-Build-XML-Line('LOC2_Text1', $Out, 'Y', #FNum, #FNum2, $UserFlag)
                       do Rsi960us-Build-XML-Line('LOC2_Text2', $LocalityPrintName, 'Y', #FNum, #FNum2, $UserFlag)
                       add 1 to #MyCount
                    End-If
                 Else
                    add #14 to #NJSDI_VPDI_Tot
                    let $NJDI_text = substr($T_14,1,7)
                    uppercase $NJDI_text
                 End-If
              Else
                 If #Box14Count = 1
                    do Rsi960us-Build-XML-Line('Other1', $b14, 'Y', #FNum, #FNum2, $UserFlag)
                 Else
                    If #Box14Count = 2
                       do Rsi960us-Build-XML-Line('Other2', $b14, 'Y', #FNum, #FNum2, $UserFlag)
                    Else
                       If #Box14Count = 3
                          do Rsi960us-Build-XML-Line('Other3', $b14, 'Y', #FNum, #FNum2, $UserFlag)
                       Else
                          do Rsi960us-Build-XML-Line('Other4', $b14, 'Y', #FNum, #FNum2, $UserFlag)
                       End-If
                    End-If
                 End-If
                 add 1 to #Box14Count
              End-If
              let #Amount = #14
              do Rsi960us-add-box14-totals
              If $YD_W2_State = 'NJ' and #m = 6
                 do Rsi960us-Print-NJSUT-XMLP
              End-If
           End-If
        End-If
        add 1 to #m
        End-While
  #EndIf

  If #NJSDI_VPDI_Tot <> 0
     do Format-Number (#NJSDI_VPDI_Tot, $Out, '99999999.99')
     If #MyCount = 0
        do Rsi960us-Build-XML-Line('LOC1_TAXES', $Out, 'Y', #FNum, #FNum2, $UserFlag)
        do Rsi960us-Build-XML-Line('LOC1_LOC', $NJDI_text, 'Y', #FNum, #FNum2, $UserFlag)
     Else
        do Rsi960us-Build-XML-Line('LOC2_Text1', $Out, 'Y', #FNum, #FNum2, $UserFlag)
        do Rsi960us-Build-XML-Line('LOC2_Text2', $NJDI_text, 'Y', #FNum, #FNum2, $UserFlag)
     End-If
     let #NJSDI_VPDI_Tot = 0
  End-If

  If #YD_Sequence_Number > 1
     do Rsi960us-Print-Suppl-Box14-XMLP
  End-If

End-Procedure Rsi960us-Print-Box14-XMLP

!***********************************************************************
! Procedure Rsi960us-Print-Box13-XMLP
!***********************************************************************
Begin-Procedure Rsi960us-Print-Box13-XMLP

  If $YD_Statutory_Ee = 'Y'
     do Rsi960us-Build-XML-Line('STAT_EE', 'Y', 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  If $YD_Pension_Plan = 'Y'
     do Rsi960us-Build-XML-Line('RETIRE_EE', 'Y', 'Y', #FNum, #FNum2, $UserFlag)
  End-If

  If $YD_Thirdparty_Sickpay = 'Y'
     do Rsi960us-Build-XML-Line('SICK_EE', 'Y', 'Y', #FNum, #FNum2, $UserFlag)
  End-If

End-Procedure Rsi960us-Print-Box13-XMLP

!***********************************************************************
! Procedure Rsi960us-Print-PA-Box14-XMLP
!***********************************************************************
Begin-Procedure Rsi960us-Print-PA-Box14-XMLP

  do Format-Number (#14, $Out, '99999999999.99')
  let $b14Amt = lpad(ltrim($Out,' '),10,' ')
  If $B_14 = '14YN'  or
     $B_14 = '14YT'  or
     $B_14 = '14ZN'
     let $b14Lbl = substr($T_14,1,3)
     let $b14Lbl = rpad($b14Lbl,5,' ')
  Else
     let $b14Lbl = substr($T_14,1,5)
     let $b14Lbl = rpad($b14Lbl,5,' ')
  End-If

  let $b14    = $b14Lbl || ' ' || $b14Amt

  If #Box14Count = 1
     do Rsi960us-Build-XML-Line('Other1', $b14, 'Y', #FNum, #FNum2, $UserFlag)
  Else
     If #Box14Count = 2
        do Rsi960us-Build-XML-Line('Other2', $b14, 'Y', #FNum, #FNum2, $UserFlag)
     Else
        If #Box14Count = 3
           do Rsi960us-Build-XML-Line('Other3', $b14, 'Y', #FNum, #FNum2, $UserFlag)
        Else
           do Rsi960us-Build-XML-Line('Other4', $b14, 'Y', #FNum, #FNum2, $UserFlag)
        End-If
     End-If
  End-If
  let #Amount = #14
  do Rsi960us-add-box14-totals
  add 1 to #Box14Count

End-Procedure Rsi960us-Print-PA-Box14-XMLP

!***********************************************************************
! Procedure Rsi960us-Print-NJSUT-XMLP
!***********************************************************************
Begin-Procedure Rsi960us-Print-NJSUT-XMLP

BEGIN-SELECT
NJSUT.EMPLOYER_ID_SUT
NJSUT.VDI_PLAN_NBR
#IfDef O_NJFLI
NJSUT.PNA_FLI_PLAN_NBR
#End-If

  #If [LAST_ORACLE_UPDATE] > 2009.2
      move &NJSUT.VDI_Plan_Nbr to $VDI_Plan_Nbr
      let $VDI_Plan_Nbr = 'DI PP # ' || $VDI_Plan_Nbr
      let #VDI_Length = length($VDI_Plan_Nbr)
      let $FLI_Plan_Text = 'FLI PP #     '
      let $FLI_Plan_Nbr = rtrim(&NJSUT.PNA_FLI_Plan_Nbr,' ')  || '         '

      If #m = 6
         do Rsi960us-Build-XML-Line('NJ_DI_NBR', $VDI_Plan_Nbr, 'Y', #FNum, #FNum2, $UserFlag)
      Else
         If $NJ_UI = 'Y' and $NJ_DI = 'Y'
            do Rsi960us-Build-XML-Line('ST1_TAXES', $FLI_Plan_Text, 'Y', #FNum, #FNum2, $UserFlag)
            do Rsi960us-Build-XML-Line('LOC1_WAGES', $FLI_Plan_Nbr,  'Y', #FNum, #FNum2, $UserFlag)
         Else
            do Rsi960us-Build-XML-Line('NJ_FLI_TXT', $FLI_Plan_Text, 'Y', #FNum, #FNum2, $UserFlag)
            do Rsi960us-Build-XML-Line('NJ_FLI_NBR', $FLI_Plan_Nbr,  'Y', #FNum, #FNum2, $UserFlag)
         End-If
      End-If
  #Else
      move &NJSUT.VDI_Plan_Nbr to $VDI_Plan_Nbr
      let $VDI_Plan_Nbr = 'DI PP # ' || $VDI_Plan_Nbr
      let #VDI_Length = length($VDI_Plan_Nbr)
      do Rsi960us-Build-XML-Line('NJ_DI_NBR', $VDI_Plan_Nbr, 'Y', #FNum, #FNum2, $UserFlag)
  #EndIf

FROM PS_CO_STATETAX_TBL NJSUT
WHERE NJSUT.COMPANY = $YD_Company
  AND NJSUT.STATE   = 'NJ'
  AND NJSUT.EFFDT   = (SELECT MAX(NJSUT1.EFFDT)
                       FROM PS_CO_STATETAX_TBL NJSUT1
                       WHERE NJSUT1.COMPANY = $YD_Company
                         AND NJSUT1.STATE   = 'NJ'
                         AND NJSUT1.EFFDT  <= $AsOfDate)
END-SELECT

End-Procedure Rsi960us-Print-NJSUT-XMLP

!***********************************************************************
! Procedure Rsi960us-Print-Suppl-Box14-XMLP
!***********************************************************************
Begin-Procedure Rsi960us-Print-Suppl-Box14-XMLP

  If #Box14Count < 3 and #Box14Count <> 0
     let $b14x = 'FED W-2 DATA IS'
     let $b14y = 'ON SEPARATE W-2'
     move 3 to #Box14Count
     do Rsi960us-Build-XML-Line('Other3', $b14x, 'Y', #FNum, #FNum2, $UserFlag)
     do Rsi960us-Build-XML-Line('Other4', $b14y, 'Y', #FNum, #FNum2, $UserFlag)
     add 2 to #Box14Count
     add 2 to #L_14
  End-If

End-Procedure Rsi960us-Print-Suppl-Box14-XMLP

!***********************************************************************
! Procedure Rsi960us-Print-Box12-XMLP
!***********************************************************************
Begin-Procedure Rsi960us-Print-Box12-XMLP

  move 1 to #Box12Count

  If instr($Box12PrintString,'A ',1)
     move #Uncoll_SS_Tax_On_Tips to #box12LineAmt
     move $T_Uncoll_SS_Tax_On_Tips to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'B ',1)
     move #Uncoll_Med_Tax_On_Tips to #box12LineAmt
     move $T_Uncoll_Med_Tax_On_Tips to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'C ',1)
     move #Group_Term_Life to #box12LineAmt
     move $T_Group_Term_Life to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'D ',1)
     move #401K to #box12LineAmt
     move $T_401K to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'E ',1)
     move #403B to #box12LineAmt
     move $T_403B to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'F ',1)
     move #408K6 to #box12LineAmt
     move $T_408K6 to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'G ',1)
     move #457B to #box12LineAmt
     move $T_457B to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'H ',1)
     move #501C18D to #box12LineAmt
     move $T_501C18D to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'J ',1)
     move #Sick_Pay to #box12LineAmt
     move $T_Sick_Pay to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'K ',1)
     move #Excise_Tax to #box12LineAmt
     move $T_Excise_Tax to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'L ',1)
     move #Business_Exp to #box12LineAmt
     move $T_Business_Exp to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'M ',1)
     move #Uncoll_SS_Tax_GTL to #box12LineAmt
     move $T_Uncoll_SS_Tax_GTL to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'N ',1)
     move #Uncoll_Med_Tax_GTL to #box12LineAmt
     move $T_Uncoll_Med_Tax_GTL to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'P ',1)
     move #Excl_Moving_Exp to #box12LineAmt
     move $T_Excl_Moving_Exp to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'Q ',1)
     If #Combat_Pay <> 0
        move #Combat_Pay to #box12LineAmt
        move $T_Combat_Pay to $box12LineLbl
     Else
        move #Basic_Qtrs_and_Subsist to #box12LineAmt
        move $T_Basic_Qtrs_and_Subsist to $box12LineLbl
     End-If
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'R ',1)
     move #Med_Svgs_Acct to #box12LineAmt
     move $T_Med_Svgs_Acct to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'S ',1)
     move #408P_Simple_Retirement to #box12LineAmt
     move $T_408P_Simple_Retirement to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'T ',1)
     move #Adoption_Exp to #box12LineAmt
     move $T_Adoption_Exp to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'V ',1)
     move #NonStatutory_Stock_Opt to #box12LineAmt
     move $T_NonStatutory_Stock_Opt to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'W ',1)
        move #HSA_Employer_Contrib to #box12LineAmt
        move $T_HSA_Employer_Contrib to $box12LineLbl
        do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'Y ',1)
     move #409A_Def_NQ_Def_Comp to #box12LineAmt
     move $T_409A_Def_NQ_Def_Comp to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'Z ',1)
     move #409A_Inc_NQ_Def_Comp to #box12LineAmt
     move $T_409A_Inc_NQ_Def_Comp to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'AA',1)
     move #Roth_401K to #box12LineAmt
     move $T_Roth_401K to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'BB',1)
     move #Roth_403B to #box12LineAmt
     move $T_Roth_403B to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'CC',1)
     move #HIRE_WTips to #box12LineAmt
     move $T_HIRE_WTips to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'DD',1)
     move #ER_Hlth_Cvrg to #box12LineAmt
     move $T_ER_Hlth_Cvrg to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

  If instr($Box12PrintString,'EE',1)
     move #Roth_Contribution_457b to #box12LineAmt
     move $T_Roth_Contribution_457b to $box12LineLbl
     do Rsi960us-Assign-Line-To-Box12
  End-If

End-Procedure Rsi960us-Print-Box12-XMLP

!***********************************************************************
! Procedure Rsi960us-Assign-Line-To-Box12
!***********************************************************************
Begin-Procedure Rsi960us-Assign-Line-To-Box12

  move #Box12Count to $box12Count 9

  let $box12LineA = 'B12_LBL' || $box12Count
  let $box12LineB = 'B12_AMT' || $box12Count

  If #box12LineAmt <> 0
     do Rsi960us-Build-XML-Line($box12LineA, $box12LineLbl, 'Y', #FNum, #FNum2, $UserFlag)
     do Format-Number (#box12LineAmt, $Out, '99999999999.99')
     do Rsi960us-Build-XML-Line($box12LineB, $Out, 'Y', #FNum, #FNum2, $UserFlag)
     add 1 to #Box12Count
  End-If

End-Procedure Rsi960us-Assign-Line-To-Box12

!***********************************************************************
! Procedure Rsi960us-Close-XMLP
!***********************************************************************
Begin-Procedure Rsi960us-Close-XMLP

  do Rsi960us-XML-Close-Tag('USA_YearEnd', $CloseTag)
  do Rsi960us-Write-XML-Line(#Fnum2, $CloseTag)
  do Rsi960us-Close-XML-File(#FNum2)

  If $RC_US_YE.Py_W2_Copy_Type = '2' and #Fnum <> 0
     do Rsi960us-Write-XML-Line(#Fnum, $CloseTag)
     do Rsi960us-Close-XML-File(#FNum)
  End-If

End-Procedure Rsi960us-Close-XMLP
#EndIf
!***********************************************************************
! Procedure Rsi960us-DebugA
!***********************************************************************
Begin-Procedure Rsi960us-DebugA

  Show '$String     = |' $String     '|'
  Show '#Line       = |' #Line       '|'
  Show '#Col        = |' #Col        '|'
  Show '$Identifier = |' $Identifier '|'

End-Procedure Rsi960us-DebugA

#Include 'taxrnctl.sqc'    !Get-Tax-Reporting-Run-Controls procedure
#Include 'txrnctl2.sqc'    !US Year End Process Scheduler Run Controls
#Include 'curdttim.sqc'    !Get-Current-DateTime procedure
#Include 'datetime.sqc'    !Routines for date and time formatting
#Include 'number.sqc'      !Routines to format numbers
#Include 'stdapi.sqc'      !Update Process API
