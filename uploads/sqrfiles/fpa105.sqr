!***********************************************************************
!  FPA105:  Trainees waiting for Tenures List                          *
!                                                                      *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2006/07/19:12:30:19                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'     ! Set environment
#include 'setup01.sqc'    ! Printer and page-size initialization

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Security-Param
  show '$SecurityClause = ' $SecurityClause
  show ' '
  do PROCESS-MAIN
  do Reset
  do Stdapi-Term
end-report


begin-heading 5

#Include 'stdhdg01.sqc'

  do Get_Field_Information($ReportID, 'EMPLID', $EMPLID_LBL, #DW)
  do Get_Field_Information($ReportID, 'NAME', $NAME_LBL, #DW)
  do Get_Field_Information($ReportID, 'EMPLRCD', $EMPLRCD_LBL, #DW)
  do Get_Field_Information($ReportID, 'DT_CONTRAT', $DT_CONTRAT_LBL, #DW)
  do Get_Field_Information($ReportID, 'SITUATION', $SITUATION_LBL, #DW)
  do Get_Field_Information($ReportID, 'ANC_ECHE', $ANC_ECHE_LBL, #DW)
  do Get_Field_Information($ReportID, 'ECHEANCE', $ECHEANCE_LBL, #DW)

print $EMPLID_LBL        (+1,1)
print $NAME_LBL          (,13)
print $EMPLRCD_LBL       (,50)
print $DT_CONTRAT_LBL    (,62)
print $SITUATION_LBL     (,79)
print $ANC_ECHE_LBL      (,90)
print $ECHEANCE_LBL      (,105)

end-heading



begin-procedure Init-Report

  move 'FPA105' to $ReportID

  do Stdapi-Init

  let $language_cd = $CURR_LANGUAGE_CD

  do Init_Report_Translation($ReportID, $language_cd)
  do Append_Report_Translation($ReportID)

  do Get_Field_Information($ReportID, 'REPORT_TITLE', $ReportTitle, #DW)

  #IFDEF DEBUGI
    display $ReportTitle
  #ENDIF

  if $prcs_process_instance = ''
      INPUT $OprId         'Enter operator class'
  else
     do Select-Parameters
  end-if

end-procedure



begin-procedure Get-Values

        do Get-OprId

end-procedure



!---------- Main Process -------------!
begin-procedure PROCESS-MAIN

do Get-TenTerm
do Calc-DateLim
do Get-Tenure

end-procedure PROCESS-MAIN



!---------- Select Days before tenure -------------!
begin-procedure Get-TenTerm

let $sql-statement = 'FPA105.SQR,,Select,Get-TenTerm'
begin-select On-Error=SQL-Error

W.FP_TENTERM_DY
from PS_FPMSYSTEM_TBL W

end-select

end-procedure Get-TenTerm



!---------- Limit Tenure Date Calculating -------------!
begin-procedure Calc-DateLim

 Let #wnbj=&W.FP_TENTERM_DY

 do Convert-To-DTU-Date($AsOfToday,$DateLimw)
 do DTU-Add-Days($DateLimw,#wnbj,$DateLim)
 do Convert-From-DTU-Date($DateLim,$DateLim_Native)

#IFDEF DEBUGI
    display $DateLim_Native
#ENDIF

end-procedure Calc-DateLim



!---------- Select Trainees -------------!
begin-procedure Get-Tenure


#IFDEF DEBUGI
    Display '$OprId :' noline
    Display $OprId
#ENDIF

let $sql-statement = 'FPA105.SQR,Select,Get-Tenure'
begin-select On-Error=SQL-Error

A.EMPLID
A.EMPL_RCD
{DATEOUT-PREFIX}A.EFFDT{DATEOUT-SUFFIX}             &A.EFFDT
A.FP_PROBATION_DUR
A.FP_PROB_DUR_TYP
{DATEOUT-PREFIX}A.PROBATION_DT{DATEOUT-SUFFIX}      &A.PROBATION_DT
{DATEOUT-PREFIX}A.FP_FIRST_PRO_DT{DATEOUT-SUFFIX}   &A.FP_FIRST_PRO_DT
A.FP_TENURE_OK
B.NAME

  do Print-Tenure
  do Update-Tenure

from    PS_FPAEESTATUS A,
        PS_PERSON_NAME B,
        PS_FPAEELEGALSTAT L, PS_FPMLEGALSTA_TBL G
       ,PS_FPFAST_PERS_VW2 SCRTY                      !SQR security

where
        A.EMPLID = B.EMPLID
  and   A.FP_TRNE_SVT_CD = 'S'
  and   (A.FP_TENURE_OK ='B' or A.FP_TENURE_OK='R')
  and   A.FP_TENURE_DT <= {DATEIN-PREFIX}$DateLim_Native{DATEIN-SUFFIX}
  and   L.EMPLID = A.EMPLID
  and   L.EMPL_RCD = A.EMPL_RCD
  and   L.EFFDT = (select max(L1.EFFDT) from PS_FPAEELEGALSTAT L1
                    where L1.EMPLID = L.EMPLID
                    and L1.EMPL_RCD = L.EMPL_RCD
                    and L1.EFFDT <= A.FP_TENURE_DT)
  and   G.FP_LEGALSTAT_CD = L.FP_LEGALSTAT_CD
  and   G.EFF_STATUS = 'A'
  and   G.EFFDT =  (select max(G1.EFFDT) from PS_FPMLEGALSTA_TBL  G1
                    where G1.FP_LEGALSTAT_CD = G.FP_LEGALSTAT_CD
                    and G1.EFFDT <= A.FP_TENURE_DT)
  and   G.FP_TENPD_BRK = 'N'

  and A.EMPLID = SCRTY.EMPLID                       !
  and A.EMPL_RCD = SCRTY.EMPL_RCD         !SQR security
      [$SecurityClause]                             !

  AND (L.EMPLID = A.EMPLID                          !SQR security FPAEELEGALSTAT
  AND L.EMPL_RCD = A.EMPL_RCD                       !SQR security FPAEELEGALSTAT
  AND L.FP_HIR_DOS_SIT = '02')                      !SQR security FPAEELEGALSTAT

end-select

end-procedure Get-Tenure



!---------- Trainees waiting for Tenures Editing -------------!
begin-procedure Print-Tenure

let $Name=substr(&B.NAME,1,35)

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&A.EFFDT,$Effdt,{DEFDMY},'','')

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&A.FP_FIRST_PRO_DT,$First_pro_dt,{DEFDMY},'','')

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&A.PROBATION_DT,$Probation_dt,{DEFDMY},'','')

print &A.EMPLID                 (+1,1)
Print $Name                     (,13)
print &A.EMPL_RCD               (,54)
print $Effdt                    (,64)
print &A.FP_TENURE_OK           (,82)
print $First_pro_dt             (,92)
print $Probation_dt             (,106)

end-procedure Print-Tenure



!---------- Select Trainees waiting for Tenures -------------!
begin-procedure Update-Tenure

if &A.FP_TENURE_OK='B'
 let $TTOK='V'
else
 let $TTOK='O'
end-if

let $sql-statement = 'FPA105.SQR,Update,Update-Tenure'
begin-SQL On-Error=SQL-Error

Update PS_FPAEESTATUS Set FP_TENURE_OK=$TTOK
Where EMPLID=&A.EMPLID
  and EMPL_RCD=&A.EMPL_RCD
  and EFFDT={DATEIN-PREFIX}&A.EFFDT{DATEIN-SUFFIX}

end-SQL

end-procedure Update-Tenure



#include 'stdapi.sqc'           ! Routine to update run status
#Include 'hrrnctl1.sqc'         ! Get run control parameter values
#Include 'fprnctl1.sqc'         ! Get run control parameter values (FPS)
#Include 'fpgetval.sqc'         ! Get values mask routines (FPS)
#Include 'hrgetval.sqc'         ! Get values mask routines
#Include 'fpparam.sqc'          ! Routines for  Parameters Tables (FPS)
#include 'askftd.sqc'           ! From Thru Date input
#Include 'getdptnm.sqc'         ! Get-Department-Name procedure
#Include 'datemath.sqc'         ! Routines for date arithmetic
#Include 'reset.sqc'            ! Reset printer procedure
#Include 'curdttim.sqc'         ! Get-Current-DateTime procedure
#Include 'datetime.sqc'         ! Routines for date and time formatting
#Include 'number.sqc'           ! Routines to format numbers
#include 'hrsecty.sqc'          ! Get SQR Security parameters
#include 'sqrtrans.sqc'         ! Translate SQR strings to given language

!#include 'rellang.sqc'   ! Related Language File call by Fpparam.sqc
