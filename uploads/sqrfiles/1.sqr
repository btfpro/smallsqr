!***********************************************************************
! GEXPY644.sqr  
!   This sqr first executes a script gexpy644.sh and this script
!   ftps the NT5 United Way deduction file (sent via email) to Unix.  This
!   file contains the emplid, weekly ded amt and yearly UW pledge amount.
!   This sqr loads these amounts to general deductions with a dedcd retrieved
!   from the run control panel.
!
!   To ensure that the file does not get loaded into general deductions more than
!   once, this sqr copies the input file to a backup file with a 
!   time/date stamp and deletes the original.
!   
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#  INITIALS   DATE           DESCRIPTION OF THE CHANGE            *        
!***********************************************************************
!       CJH     10/08/2001    INITIAL CREATION                         *
!                                                                      *
!       PSR     09/20/2002    EMPL_RCD# column removed as part of      * 
!			      key from PS_GENL_DEDUCTION and           * 
!			      PS_GENL_DED_CD  V8.3 Upgrade             *
!                                                                      *
!       GBD     12/17/2002    Corrected misspelled #invalid_trans      *
!                             variable for reporting validation.       *
!                                                                      *
!       CWB     03/10/2003    Added logic to handle blank company      *
!                             or paygroup on input record.             *
!                                                                      *
!       SCM     10/23/2003    Added lookup for valid company/paygroup  *
!                             for all records.  Added a warning if a   *
!                             record  was updated (possible dup ssn).  *     
!                                                                      *
!       AXL     03/03/2004    V8.3 Upgrade - Add YES (Y) to Genl       *
!                             Deduction table insert for Process_DEDN. *
!       CXA     06/22/2005    Add code to extract SSN from             *
!                             GEX_EMPLID_MAPP based on EMPLID          *
!GEX_SEC_REENG 2015-04-29 Vahini Katta                                 *
!Changes related to gex_emplid_mapp/7 digit emplid
!***********************************************************************
 
#DEFINE FileID 'gexpy644.dat'
#DEFINE Backup_FileID 'gexpy644.'
!selection criteria
#define #x000_col_selection_criteria_a 	02
#define #x000_col_selection_criteria_b 	05
#define #x000_col_selection_criteria_c 	10
#include 'setenv.sqc' 
#Include 'setup02.sqc'

begin-report
#debug9 Show 'Begin-Report'
   do P010-set-system-commands
   do P015-cd-bindir    ! gex isdvnpk 05/04/2008 UNCommented this as this was commented before  
   !Commented by Ujwal Dyasani 20161228 - Begin
   !do P020-exec-script-to-ftp-file 
   !Commented by Ujwal Dyasani 20161228 - End
   do P030-Initialization
   do P100-Main-Procedure
   
   date-time () HH:MI:SS &ProcessTime
   show 'Backing-up Input file started at: ' &ProcessTime
   let $asofnow_noAMPM = substr($asofnow,1,8)
   let $Backup_FileName = '{INFILE}' ||{Backup_FileID} || $asoftoday ||'-' ||$asofnow_noAMPM 

   display $Backup_FileName
   do P600-make-backup-copy                        
   do P610-delete-original-file                    
   do P050-Finalization 

end-report

begin-heading 6 

 #Include 'stdhdg01.sqc'

  position (+2)
  print 'Emplid'              (,1)  
  print 'Empl_rcd#'           (,11)  
  print 'Company'             (,25)
  print 'Paygroup'            (,35)
  print 'Pay Period ded'      (,45)
  print 'Yearly Pledge amt'   (,60)
  print 'Error Message'       (,80)
  print '-' (+1,1,176) fill
 
end-heading

!***********************************************************************
begin-procedure P010-set-system-commands
!***********************************************************************
  !Added by Ujwal Dyasani 20161228 - Begin
  Let $BINDIR  = '/apps/hr/hrms90/pshrprd/scripts/gex_shell'
  !Added by Ujwal Dyasani 20161228 - End
  show 'Value of $BINDIR ' $BINDIR
  do GEXXX951-Select-Oracle-Instance
  let $db_name = lower($GEXXX951_Oracle_Instance)
  let $cd_command_bindir = 'cd '||'$BINDIR'
  !let $pshome = getenv('PS_HOME')
  !let $ftp_command = $pshome || '/scripts/gex_shell/'||'gexpycc1.sh '||$db_name 
  let $ftp_command = 'gexpy644.sh ' || $db_name

end-procedure

!***********************************************************************
begin-procedure P015-cd-bindir
!***********************************************************************
     show 'P015-cd-bindir'
      CALL SYSTEM USING $cd_command_bindir #sys_status
      if #sys_status <> 0
         let $cd_display_msg = 'Command ' || $cd_command_bindir || ' did not work'
         display $cd_display_msg
	 display 'JOB failed'
	 stop
      end-if

end-procedure

!***********************************************************************
begin-procedure P020-exec-script-to-ftp-file
!***********************************************************************
     date-time () HH:MI:SS &ProcessTime
     show 'Executing FTP process started at: ' &ProcessTime

     show 'P020-exec-script-to-ftp-file'
      show '$ftp_command ' $ftp_command
      CALL SYSTEM USING $ftp_command #sys_status
      if #sys_status <> 0
	 show 'Command ' $ftp_command ' Failed'
	 show 'JOB failed'
         show '#sys_status ' #sys_status 
	 stop
      end-if

end-procedure
   
!************************************************************************
begin-procedure P030-Initialization
!************************************************************************
#debug9 Show 'P030-Initialization'

  show 'P030-Initialization'
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  move 'GEXPY644' to $ReportID
  move 'United Way eCampaign Pledge Load Process' to $ReportTitle
  display $ReportTitle

  let $FileName = '{INFILE}' || {FileID}

  do Get-Current-DateTime
  let $reportdate_mm = substr($reportdate,1,2)
  let $reportdate_dd = substr($reportdate,4,2)
  let $reportdate_yy = substr($reportdate,7,2)
  do MakeYear4Digits ($reportdate_yy)
  let $reportdate_ccyy = $reportdate_yy||'-'||$reportdate_mm||'-'||$reportdate_dd
  do Convert-From-DTU-Date($reportdate_ccyy, $reportdate_dbf)
  move $reportdate_dbf to $rnctl_date

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show '================================================'
  show 'Report Began at ' &timeBegan ' on ' &dateBegan
  show '================================================'

  let #genl_data_updated     = 0
  let #genl_data_inserted    = 0
  let #genl_dedcd_inserted   = 0
  let #invalid_trans         = 0
  let #trans_processed       = 0


  If $prcs_process_instance = ''

    let $Prcs_OPRID = 'SQRW/pssqr'
    let $PRCS_RUN_CNTL_ID = 'manual'


    Input $In-dedcd Maxlen=6 'United Way Deduction Code'
    let $DEDCD = $In-dedcd
  
    input $In-Ded-Begin-Dt 'Deduction Begin Dt({Prompt-Date}): ' type=char
    let $Ded_Begin_Dt = $In-Ded-Begin-Dt
  
    input $In-Ded-End-Dt 'Deduction End Dt({Prompt-Date}): ' type=char
    let $Ded_End_Dt = $In-Ded-End-Dt

    do format-datetime($Ded_Begin_Dt,$Ded_Begin_Dt_dbf,{prompt-mask},'','native')
    do format-datetime($Ded_End_Dt,$Ded_End_Dt_dbf,{prompt-mask},'','native')

  Else

   Do Select-Run-control

  End-If

  show 'INCLUDE_DEDCD_CRITERIA                          = ' $DEDCD
  show 'INCLUDE_DEDUCTION_BEGIN_DT_CRITERIA             = ' $Ded_Begin_Dt_dbf
  show 'INCLUDE_DEDUCTION_END_DT_CRITERIA               = ' $Ded_End_Dt_dbf



  print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,{#x000_col_selection_criteria_a})
  print '$Prcs_OPRID          ='                                  (+1,{#x000_col_selection_criteria_b})
  print $Prcs_OPRID                                               (0,+2)
  print '$PRCS_RUN_CNTL_ID    ='                                  (+1,{#x000_col_selection_criteria_b})
  print $PRCS_RUN_CNTL_ID                                         (0,+2)

  print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,{#x000_col_selection_criteria_a})
  print 'INCLUDE_DEDCD_CRITERIA ='                                (+1,{#x000_col_selection_criteria_b})
  print $DEDCD                                                    (0,+2)
  print 'INCLUDE_DEDUCTION_BEGIN_DT_CRITERIA ='                   (+1,{#x000_col_selection_criteria_b})
  print $Ded_Begin_Dt_dbf                                         (0,+2)
  print 'INCLUDE_DEDUCTION_END_DT_CRITERIA ='                     (+1,{#x000_col_selection_criteria_c})
  print $Ded_End_Dt_dbf                                           (0,+2)
 
  let #page-count = 0
  NEW-PAGE


end-procedure P030-Initialization
!*****************************************************************************

begin-procedure Select-Run-Control
 let $found = 'N'
begin-select
RC.DEDCD
RC.DEDUCTION_BEGIN_DT
RC.DEDUCTION_END_DT

 let $found = 'Y'
 let $DEDCD = &RC.DEDCD
 let $Ded_Begin_dt_dbf = &RC.DEDUCTION_BEGIN_DT
 let $Ded_End_dt_dbf = &RC.DEDUCTION_END_DT

FROM PS_GEX_RC_GEXPY644 RC
WHERE RC.OPRID = $Prcs_OprID
  AND RC.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-SELECT

 if $found = 'N'
    show 'No Run Control found for Operator:' $Prcs_Oprid ' and Run Control Id:' $Prcs_Run_Cntl_ID
    show 'Process aborted...'
    stop
 end-if

end-procedure
!************************************************************************
begin-procedure P050-Finalization
!************************************************************************
#debug9 Show 'P050-Finalization'

  do Reset                 !reset.sqc
  Do Stdapi-Term           !stdapi.sqc
 
  move #genl_data_updated     to $genl_data_updated    999999
  move #genl_data_inserted    to $genl_data_inserted   999999
  move #genl_dedcd_inserted   to $genl_dedcd_inserted  999999
  move #invalid_trans         to $invalid_trans        999990
  move #trans_processed       to $trans_processed      999999


  show (+2,0) ''
  show 'Totals Section'
  show 'General Dedcd Inserts:         ' $genl_dedcd_inserted
  show 'General Ded Data Inserts:      ' $genl_data_inserted
  show 'General Ded Data Updates:      ' $genl_data_updated
  show 'Invalid Records:               ' $invalid_trans
  show 'Records Processed:             ' $trans_processed
  
  show '================================================'
  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show ' '
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
  show '================================================'

  Show 'Successful end of report'

end-procedure P050-Finalization


!*****************************************************************************
! This procedure will read an ASCII file of United Way pedge amounts
! and create general deduction rows for each EE, specifying the pay period
! pledge and the annual goal amount.
!*****************************************************************************
 
begin-procedure P100-Main-Procedure

  date-time () MMDDYYYY &curr_date
  move &curr_date    to $curr_date

  do P200-End-Current-Deductions
  do P150-Open-Input-Files 
 
  date-time () HH:MI:SS &ProcessTime
!  show ' Processing Pledge Transactions started at: ' &ProcessTime

  while 1 = 1
     read 1 into $emplid:9          -
                 $empl_rcd:1       -
		 $filler1:1         -
 		 $ssn:9             -
	 	 $filler2:1         -
		 $company:3         -
		 $filler3:1         -
		 $paygroup:3        -
		 $filler4:1         -
		 $pay_period_amt:13 -
                 $filler5:1         -        
		 $annual_pledge:12	


     let $pay_period_amt = rtrim($pay_period_amt,' ')
     let $annual_pledge = rtrim($annual_pledge,' ')

     move $empl_rcd      to #empl_rcd
     move $pay_period_amt to #pay_period_amt
     move $annual_pledge  to #annual_pledge

     if #end-file = 1
        break
     else
        add +1 to #trans_processed
     end-if

     !CXA 06/22/2005  BEGIN
     let $emplid = rtrim($emplid,' ')		!remove trailing spaces
     let $found = 'N'
     do P212-Get-Emplid-Mapp
     if $found = 'N'
        show 'EMPLID not found on EMPLID MAPP Table for ' $emplid
        show 'Trying to retrieve SSN from PS_GEX_EMPLID_MAP'
     else
         !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
         !move &GEM.SSN to $emplid
         !move &GEM.EMPL_RCD to $empl_rcd
         !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
     end-if  
     !CXA 06/22/2005  END


     ! Validate the Emplid, empl_rcd in each pledge transaction to 
     ! ensure that the EE exists and is active on
     ! the HR tables.  Generate error listings of exception employees.

     do P210-Validate-Pledge-Transaction


     ! Process each new pledge transaction by creating new GENL_DEDUCTION 
     ! rows with an EFFDT of the $Ded_Begin_dt and an end date of $Ded_End_dt

     if $found = 'Y'
! CWB 03/10/2003 BEGIN
        let $company-paygroup-found = 'Y'
        if ($company = '   ' and $paygroup = '   ')
        or ($company = '' and $paygroup = '')
          show 'Company and/or paygroup are blank for ' $emplid
          show 'Trying to retrieve company and paygroup from PS_JOB'
          do p215-validate-company-paygroup
        else                                       !SCM 10/23/2003
          do P215-validate-company-paygroup        !SCM 10/23/2003
        end-if
        if $company-paygroup-found = 'Y'
          do P220-Process-New-Pledge
        end-if
! CWB 03/10/2003 END
     end-if
  end-while

  close 1

end-procedure
   
!************************************
begin-procedure P150-Open-Input-Files
!************************************

 date-time () HH:MI:SS &ProcessTime
 show ' Opening Input File started at: ' &ProcessTime

 open $filename as 1 
   for-reading record=55 status=#filestat1

  if #filestat <> 0
    display $Input_filename noline
    display ': Input file Open error occured;  Cannot proceed'
    stop 
 end-if
end-procedure P150-Open-Input-Files

!*********************************************************************
! Turn off all Current United Way deductions using an end date equal to
! the Pay Begin Dt associated with the new Deduction begin dt (pay end dt).  
! This procedure will run against all active United Way deductions that 
! are automated through the UW eCampaign process (all Division codes other than COL).
!*********************************************************************
begin-procedure P200-End-Current-Deductions

! Get Pay Begin Date based on new Deduction Begin Dt for turning off existing
! UW deduction rows

 date-time () HH:MI:SS &ProcessTime
 show ' Ending Current Deductions started at: ' &ProcessTime

  do P201-Get-Pay-Begin


begin-sql on-error=P500-sql-error-found('P200-End-Current-Deductions')

update ps_genl_deduction ugd 
         set ugd.deduction_end_dt = $pay_begin_dt
       where ugd.deduction_end_dt is null
         and ugd.goal_amt <> ugd.goal_bal
         and ugd.dedcd = $dedcd

end-sql
end-procedure

!*********************************************************************
begin-procedure P201-Get-Pay-Begin
begin-SELECT loops=1
PC.PAY_BEGIN_DT

 let $pay_begin_dt = &PC.PAY_BEGIN_DT

FROM PS_PAY_CALENDAR PC
WHERE PC.PAY_END_DT = $Ded_Begin_Dt_dbf

end-SELECT
end-procedure


!*********************************************************************
begin-procedure P210-Validate-Pledge-Transaction

 date-time () HH:MI:SS &ProcessTime
! show ' Validating Pledge Transaction started at: ' &ProcessTime
! show $Ded_Begin_dt_dbf
! show $Ded_End_dt_dbf
 let $found = 'N'

begin-SELECT on-error=P500-sql-error-found('P210-Validate-Pledge-Transaction')
VPT.EMPLID
VPT.EMPL_RCD

 let $found = 'Y'

from PS_JOB VPT
where VPT.EMPLID = $emplid
  and VPT.EMPL_RCD = #empl_rcd
  and VPT.EMPL_STATUS in ('A','L','P','S')
  and VPT.EFFDT = (select max(VPT2.EFFDT) from ps_job VPT2
                    where VPT2.EMPLID = VPT.EMPLID
                      and VPT2.EMPL_RCD = VPT.EMPL_RCD
                      and VPT2.EFFDT <= $Ded_Begin_Dt_dbf)
end-SELECT

 if $found = 'N'
    print $emplid               (+1,1)  
    print #empl_rcd'           (,11)  
    print $company              (,25)
    print $Paygroup             (,35)
    print #Pay_Period_amt       (,45)
    print #annual_pledge        (,60)
    print 'Employee id does not exist in an Active or Leave Status on JOB' (,80)
    show $emplid ' does not exist in an Active or Leave Status on JOB.'
    add +1 to #invalid_trans
 end-if
end-procedure

!CXA 06/22/2005  BEGIN
!***********************************************************************
! Get GE Employee SSN from Employee ID table based on EMPLID
!***********************************************************************
begin-procedure P212-Get-Emplid-Mapp
 let $found = 'N'
begin-SELECT
GEM.SSN, 
GEM.EMPLID, 
GEM.EMPL_RCD

   let $found = 'Y'

FROM PS_GEX_EMPLID_MAPP GEM
WHERE GEM.EMPLID = $emplid
end-SELECT

end-procedure
!CXA 06/22/2005  END

! CWB 03/10/2003 BEGIN
!*********************************************************************
! This procedure attempts to find values for $company and $paygroup  *
! when they are missing on the input record.                         *
!*********************************************************************
begin-procedure P215-Validate-company-paygroup

!  show 'procedure P215-Validate-company-paygroup for ' $emplid

 let $company-paygroup-found = 'N'

begin-SELECT on-error=P500-sql-error-found('P215-Validate-company-paygroup')
VCP.company
VCP.paygroup

 let $company-paygroup-found = 'Y'
 let $company  = &VCP.company
 let $paygroup = &VCP.paygroup

from PS_JOB VCP
where VCP.EMPLID = $emplid
  and VCP.EMPL_RCD = #empl_rcd
  and VCP.EMPL_STATUS in ('A','L','P','S')
  and VCP.EFFDT = (select max(VCP2.EFFDT) from ps_job VCP2
                    where VCP2.EMPLID = VCP.EMPLID
                      and VCP2.EMPL_RCD = VCP.EMPL_RCD
                      and VCP2.EFFDT <= $Ded_Begin_Dt_dbf)
end-SELECT

 if $found = 'N'
    print $emplid               (+1,1)  
    print #empl_rcd'            (,11)  
    print $company              (,25)
    print $Paygroup             (,35)
    print #Pay_Period_amt       (,45)
    print #annual_pledge        (,60)
! CWB 03/10/2003 BEGIN
    print 'Company and Paygroup are not valid, or not found for employee.'(,80)
    add +1 to #invalid_trans
    show '*******ERROR***** Company and or paygroup not valid for emplid: ' $emplid  !SCM 10/23/2003
    show 'Company =  ' $company       !SCM 10/23/2003  added show to log file
    show 'Paygroup = ' $Paygroup      !SCM 10/23/2003   
 end-if
end-procedure     !P215-Validate-company-paygroup
! CWB 03/10/2003 END

!*********************************************************************
! This procedure processes the new pledge transaction
!
!*********************************************************************
begin-procedure P220-Process-New-Pledge

  date-time () HH:MI:SS &ProcessTime
!  show ' Processing New Pledge Transaction started at: ' &ProcessTime

  do Check-the-Dedcd-existence
  if $found = 'N'
     add +1 to #genl_dedcd_inserted
     do Insert-Genl-Dedcd
  end-if

  do Check-the-Genl-data
  if $found = 'N'
     do Insert-Genl-data
  else
     do Update-Genl-data
  end-if


end-procedure

!*********************************************************************
!This procedure checks the GENL_DED_CD table for the dedcd for 
!the employee
!*********************************************************************
Begin-Procedure Check-the-Dedcd-existence

 move 'N' to $found

Begin-Select on-error=P500-sql-error-found('Check-the-Dedcd-existence')
I.EMPLID  

  move 'Y' to $found

FROM PS_GENL_DED_CD I

WHERE I.EMPLID = $emplid
!PSR 09/20/2002 V8.3 Upgrade Begin
!  AND I.EMPL_RCD = #empl_rcd
  AND I.DEDCD = $dedcd
  AND I.company = $company
!PSR 09/20/2002 V8.3 Upgrade End
end-select
end-procedure

!*********************************************************************
!This procedure inserts a row into the GENL_DED_CD table for the dedcd, 
!employee id and empl_rcd
!*********************************************************************
begin-procedure Insert-Genl-Dedcd
begin-sql on-error=P500-sql-error-found('Insert-Genl-Dedcd')
insert into ps_genl_ded_cd
!PSR 09/20/2002 V8.3 Upgrade Begin
!values ($emplid,#empl_rcd,$dedcd)
values ($emplid,$dedcd,$company)
!PSR 09/20/2002 V8.3 Upgrade Begin
end-sql
end-procedure

!*********************************************************************
!This procedure checks the GENL_DEDUCTION table for the deduction for 
!the employee
!*********************************************************************
Begin-Procedure Check-the-Genl-data

 move 'N' to $found

Begin-Select on-error=P500-sql-error-found('Check-the-Genl-data')
GDX.EMPLID  

  move 'Y' to $found

FROM PS_GENL_DEDUCTION GDX

WHERE GDX.EMPLID = $emplid
!PSR 09/12/2002 V8.3 Upgrade Begin
!  AND GDX.EMPL_RCD = #empl_rcd
   AND GDX.COMPANY  = $company
!PSR 09/12/2002 V8.3 Upgrade Begin
  AND GDX.DEDCD = $dedcd
  AND GDX.EFFDT = $Ded_Begin_Dt_dbf
end-select
end-procedure

!*******************************************************************************
! Inserting the General Deduction row for the new deduction amt/goal
!
!*******************************************************************************
Begin-Procedure Insert-Genl-Data
  show 'Inserting General Deduction data for emplid: ' $emplid

  add +1 to #genl_data_inserted

Begin-Sql on-error=P500-sql-error-found('Insert-Genl-Data')
INSERT INTO PS_GENL_DEDUCTION 
(EMPLID,
!PSR 09/20/2002 V8.3 Upgrade Begin
!EMPL_RCD,
!PSR 09/20/2002 V8.3 Upgrade End
DEDCD,
EFFDT,
DED_CALC,
DEDUCTION_END_DT,
DED_ADDL_AMT,
DED_RATE_PCT,
GOAL_AMT,
GOAL_BAL,
LOAN_INT_PCT,
BAS_TAXABLE_BEN,
DED_STOPPED,
LAST_ACTION,
LAST_UPDATE_DATE,
!PSR 09/20/2002 Added new columns V8.3 Upgrade Begin
COMPANY,
PROCESS_DEDN,           
GVT_DED_DIST_CD,        
GVT_PYMNT_METHOD,       
GVT_CHK_NAME,           
GVT_ADDRESS1,           
GVT_ADDRESS2,           
GVT_ADDRESS_CITY,       
GVT_ADDRESS_STATE,      
GVT_ADDRESS_ZIP,        
GVT_ADDRESS_CNTRY,      
BANK_CD,                
ACCOUNT_NUM,            
ACCOUNT_TYPE,           
GVT_PAYEE_ID_NO,        
GVT_PAYEE_NAME,         
GVT_ALLOT_PB)
!PSR 09/20/2002 Added new columns V8.3 Upgrade End
VALUES
($emplid,
!#empl_rcd,
$dedcd,
$Ded_Begin_Dt_dbf,
'A',
$Ded_End_Dt_dbf,
#pay_period_amt,
0,
#annual_pledge,
0,
0,
'N',
'N',
'C',
sysdate,
$company,
!PSR 09/20/2002 Added new columns V8.3 Upgrade End
'Y',	!AXL 03/03/2004 New for V8.3
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ')
!PSR 09/20/2002 Added new columns V8.3 Upgrade End
end-sql
end-procedure
!*******************************************************************************
! Inserting the General Deduction row for the new deduction amt/goal
!
!*******************************************************************************
Begin-Procedure Update-Genl-Data
  show '*** Updating General Deduction data for emplid: ' $emplid
! SCM 10/23/2003   BEGIN    added warning so that entry can be reviewed for dup ssn
    print $emplid               (+1,1)  
    print #empl_rcd'            (,11)  
    print $company              (,25)
    print $Paygroup             (,35)
    print #Pay_Period_amt       (,45)
    print #annual_pledge        (,60)
    print '*Warning*Input requires review-possible dup SSN-Rec was updated'(,80)
    show '*WARNING* INPUT REQUIRES REVIEW ** possible duplicate ssn entry: ' $emplid   
! SCM 10/23/2003 END   

  add +1 to #genl_data_updated

Begin-Sql on-error=P500-sql-error-found('Update-Genl-Data')
UPDATE PS_GENL_DEDUCTION GDU
set   GDU.DED_ADDL_AMT = #pay_period_amt,
      GDU.GOAL_AMT = #annual_pledge,
      GDU.DEDUCTION_END_DT = $Ded_End_Dt_dbf,
      GDU.LAST_ACTION = 'C',
      GDU.LAST_UPDATE_DATE = sysdate    
WHERE GDU.EMPLID = $emplid
!PSR 09/20/2002 V8.3 Upgrade Begin
!  AND GDU.EMPL_RCD = #empl_rcd
  AND GDU.COMPANY = $COMPANY
!PSR 09/20/2002 V8.3 Upgrade Begin
  AND GDU.DEDCD = $dedcd
  AND GDU.EFFDT = $Ded_Begin_Dt_dbf
end-sql
end-procedure

!************************************************************************************
! Insert new General Deduction code row for the employee
!
!************************************************************************************

Begin-Procedure Insert-Genl-Ded-Cd

Begin-Sql on-error=P500-sql-error-found('Insert-Genl-Ded-Cd')
INSERT INTO PS_GENL_DED_CD 
(EMPLID,
!EMPL_RCD,
DEDCD,
company)
VALUES
($emplid,
!#empl_rcd,
$dedcd,
$company)
end-sql

end-procedure

!********************************************************************
!This procedure displays in the error report if there are any sql 
!  errors happened in the program
!********************************************************************

begin-procedure P500-SQL-Error-Found($Proc_Name) 

  print 'SQL Error in ' (,21)
  print $Proc_Name (,35)  
  print $_sql-error (+1,1) 
  print 'sql-status:' (+1,1)
  print #_sql-status () edit 99999 
  show $SSN_In $company $paygroup #prize_amount noline
  display ' : SQL error ' noline
  display #_sql-status
  stop

end-procedure
 
!************************************************
!******   MAKE BACKUP COPY
!************************************************
begin-procedure P600-make-backup-copy

display 'Making Backup copy of ' noline
display $FileName 
#ifdef UNIX
let $UNIX_COPY_COMMAND = 'cp'||' '||$FileName||' '||$Backup_FileName
CALL SYSTEM USING $UNIX_COPY_COMMAND #system_status
#else
let $NT_COPY_COMMAND = 'copy'||' '||$FileName||' '||$Backup_FileName
CALL SYSTEM USING $NT_COPY_COMMAND #system_status
#endif

if #system_status <> 0
   add 1 to #errorcount
   display 'Copying input file into a backup file failed;'
   display 'Input file name:' noline
   display $filename
   display 'Backup file:' noline
   display $backup_filename
   print 'Copying Input file into a backup file failed;' (,21)
   print 'Input File:' ()
   print $FileName ()
   print 'Backup File:' ()
   print $Backup_FileName ()
   do end-sqr
end-if

display 'Successful copy is done'
display 'Backup filename:' noline
display $backup_filename

end-procedure
 
!*********************************************
begin-procedure P610-delete-original-file
!*********************************************
display 'Deleting input file:' noline
display $filename

#ifdef UNIX
let $UNIX_DELETE_COMMAND = 'rm'||' '||$FileName
CALL SYSTEM USING $UNIX_DELETE_COMMAND #system_status
#else
let $NT_DELETE_COMMAND = 'del'||' '||$FileName
CALL SYSTEM USING $NT_DELETE_COMMAND #system_status
#endif

if #system_status <> 0
   add 1 to #errorcount
!    do error-found
   display 'Deleting input file failed'
   display 'Input file:' noline
   display $filename
   print 'Deleting Input file failed;' (,21)
   print 'Input File:' ()
   print $FileName ()

   do end-sqr
end-if

display 'Successful delete is done'
display 'Filename:' noline
display $filename
end-procedure P610-delete-original-file

!*****************************************
begin-procedure end-sqr 
  let $tbl_name = 'ge_error_table'
begin-select 
aa
from [$tbl_name]
end-select
end-procedure



!--------------------------------------------------------------------
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#include 'gexaltse.sqc'  ! Alter ORACLE Session
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'payrnctl.sqc'  !Select-Parameters
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'gexxx951.sqc'  !Get Oracle instance
