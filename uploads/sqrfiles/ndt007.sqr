!*********************************************************
!  NDT007:  Section 129 - Concentration Test             *
!*********************************************************

!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:09:17:12                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
!
!                 Concentration Test of 5 Percent Owners
!
! This is the third report in the Section 129 Nondiscrimination Testing.
!
! The SQR NDT001, SQR NDT005 and SQR NDT006 must have been run prior to
! this report and the on-line run control set with the desired options.
!***********************************************************************

#include 'setenv.sqc'    !Set environment

begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

!#define debugD  YES

#define  CURRENT_YEAR   C

!************************************************
begin-program
!************************************************

  do Init-Report

  display 'Program Began at: ' NoLine
  do Display-Time

  If (&RC.SLOB <> 'Y')
    do Main-Report
  end-if

  display 'Program Ended at: ' noline
  do Display-Time

  do StdAPI-Term

end-program


!************************************************
begin-procedure Init-Report
!************************************************

  do Init-DateTime
  do Get-Current-DateTime
  do Init-Number

  move 'NDT007' to $ReportID
  move 'Section 129 NDT 5% Owner Benefits Test (Part 3 of 3)' to $ReportTitle
  display $ReportTitle
  display ' '
  display 'Prior to running this program, you should have verified that the'
  display 'SQR Program NDT001 was run for Section 129 only. If Single Lines'
  display 'of Business was tested prior to this test, then NDT001 will need'
  display 'to be re-run.'
  display ''

  do Check-Run-Control

  If (&RC.SLOB = 'Y')
    display 'ERROR: Re-run NDT001 - SLOB Test was run prior to this test.'
  end-if

  do StdAPI-Init

end-procedure


!************************************************
begin-procedure Main-Report
!************************************************

  do Reset-the-Results
  do Pct-Calc
  do Display-Results
  do Set-Final-Result

end-procedure


!************************************************
begin-procedure Check-Run-Control
!************************************************

begin-SELECT
RC.SLOB,
RC.PLAN_YEAR_BEGIN_DT,
RC.MONTH_END_DT

FROM  PS_NDT_RUNCTL RC
end-SELECT

end-procedure


!************************************************
begin-procedure Reset-the-Results
!************************************************

  display 'Status: Resetting Test Results ...'

let $sql-statement = 'NDT007.SQR,Reset-Test-Results,R_Final_Results'
begin-SQL on-error=SQL-Error

DELETE FROM PS_R_FINAL_RESULTS
 WHERE TEST_ID = '5Pct';

INSERT INTO PS_R_FINAL_RESULTS
(TEST_ID,PASSED, TTL_BENEFIT_PAID, PCT_BENEFIT_PAID, NHCE_LOOKUP_PCT,
 ELIG_NHCE_COUNT, ELIG_HCE_COUNT,   CALC_HARBOR_PCT,  SAFE_HARBOR_PCT,
 UNSAFE_HARBOR_PCT, SLOB, CAFETERIA_PLAN, FIFTY5_CALC_PCT,
 MIN_EMPLOYEE_COUNT)
VALUES
('5Pct','N',0,0,0,0,0,0,0,0,'?','?',0,0);

end-SQL

end-procedure


!************************************************
begin-procedure Pct-Calc
!************************************************

  display 'Status: Determining Benefits Paid ...'

  do Format-DateTime(&RC.Plan_Year_Begin_Dt, $out, {DEFCMP}, '', '')
  let #PlanYear = To_Number(SubStr($out, 1, 4))

begin-SELECT
#ifdef DB2ALL
DECIMAL(SUM(F1.FSA_PD_AMT_YTD),15,2) &Total
#else
SUM(F1.FSA_PD_AMT_YTD) &Total
#endif

FROM  PS_FSA_SUMMARY F1
WHERE F1.EMPLID IN
      (SELECT DISTINCT EMPLID
         FROM PS_R_NDT_EMPL_YTD
        WHERE YEAR_CD  = '{CURRENT_YEAR}')
  AND F1.PLAN_TYPE = '61'
  AND F1.BALANCE_YEAR = #PlanYear
end-SELECT

begin-SELECT
#ifdef DB2ALL
DECIMAL(SUM(F2.FSA_PD_AMT_YTD),15,2) &5Pct
#else
SUM(F2.FSA_PD_AMT_YTD) &5Pct
#endif

FROM  PS_FSA_SUMMARY F2
WHERE F2.EMPLID IN
      (SELECT DISTINCT EMPLID
         FROM PS_R_NDT_EMPL_YTD
        WHERE YEAR_CD = '{CURRENT_YEAR}')
  AND EXISTS
      (SELECT 'X'
         FROM PS_PER_ORG_ASGN POA
        WHERE POA.EMPLID = F2.EMPLID
          AND POA.OWN_5PERCENT_CO = 'Y')
  AND F2.PLAN_TYPE = '61'
  AND F2.BALANCE_YEAR = #PlanYear
end-SELECT

end-procedure


!************************************************
begin-procedure Display-Results
!************************************************

  display ''
  display '************      Quick Results     **************'
  display ''
  display '25% of Total Benefits Paid is       ' noline
  let #Limit = &Total * 0.25
  do PS_SQR_Round(#Limit, 2, #Limit)
  display #Limit         $$$,$$$,$$9.00
  display 'Total Benefits Paid to 5% Owners is ' noline
  display &5Pct          $$$,$$$,$$9.00
  display ''

  if (#Limit >= &5Pct)
     move 'Y' to $Passed
     display 'Test Passed'
  else
     move 'N' to $Passed
     display 'Test Failed'
  end-if

  display ''
  display '**************************************************'
  display ''

end-procedure


!************************************************
begin-procedure Set-Final-Result
!************************************************
 move &Total to #Total
 move &5Pct to #5Pct

let $sql-statement = 'NDT007.SQR,Set-Final-Result,R_Final_Results,Update'
begin-SQL on-error=SQL-Error
UPDATE PS_R_FINAL_RESULTS
   SET PASSED           = $Passed,
       TTL_BENEFIT_PAID = #Total,
       PCT_BENEFIT_PAID = #5Pct
 WHERE TEST_ID = '5Pct';
end-SQL

end-procedure


!************************************************
begin-procedure Display-Time
!************************************************

  do Get-Current-Datetime
  display $AsOfNow
  display ''

end-procedure

!***********************************************************************

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines for numeric formatting
#Include 'stdapi.sqc'    !Update Process API

!***************************** End of NDT007 ***************************

