!----------------------------------------------------------------------!
!  Report Name:  UDATACNV.SQR -- Aplication Engine Commnents           !
!                                                                      !
!----------------------------------------------------------------------!
!                                                                      !
! Confidentiality Information:                                         !
!                                                                      !
! This module contains confidential and proprietary information        !
! of Oracle; it is not to be copied, reproduced, or transmitted        !
! in any form, by any means, in whole or in part, nor is it to         !
! be used for any purpose other than that for which it is              !
! expressly provided under the applicable license agreement.           !
!                                                                      !
! Copyright (C) 2006 Oracle. All Rights Reserved.                      !
!                                                                      !
!----------------------------------------------------------------------!
!                                                                      !
!          $Date:  2006/07/20:12:30:34                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      !
!    4/1/2002  Cathlin DeRosa  Eliminated all Run Control/Process      !
!                              Instance related commands               !
!    9/17/2002 A. Carter       Changed upgradepath prompt text,        !
!                              and SEQUENCE to SEQ_NUM.                !
!   10/16/2002 C. DeRosa       Changed "UPGRADEPATH" to "UPG_PATH      !
!                              Changed "GROUP_SEQ_NUM" to              !
!                              "UPG_GROUP_SEQ_NUM"                     !
!   06/09/2003 P. Massarelli   Added Get-Run-Control-Parms             !
!                              due to error when running via PrcSched  !
!----------------------------------------------------------------------!


#include 'setenv.sqc'    ! Set Environment Procedure
#include 'setup32.sqc'   ! Landscape printer/page initialization

begin-REPORT

  #debugf  display 'Begin-Report'

  DO INIT-DATETIME
  DO INIT-NUMBER
  do Define-Prcs-Vars
  DO GET-CURRENT-DATETIME
  DO INIT-REPORT
  if $AsOfDate = ''
      move $AsOfToday to $AsOfDate
  end-if
  
  DO PROCESS-MAIN
  DO RESET
  DO COMMIT-TRANSACTION
end-REPORT

#include 'tranctrl.sqc'   ! Tools transaction control module

#define UP  2
#define PG  13
#define PN  26
#define ST  40
#define SQ  49
#define CO  56

begin-heading 5


  #include 'stdhdg01.sqc'
  print 'Path      '         (4,{UP}) underline
  print 'Group       '       (0,{PG}) underline
  print 'Program      '      (0,{PN}) underline
  print 'Section '           (0,{ST}) underline
  print 'Seq. '              (0,{SQ}) underline
  print 'Comments '          (0,{CO}) underline

end-heading


!----------------------------------------------------------------------!
! Procedure: INIT-REPORT                                               !
! Descr:     Report initialization procedure.                          !
!----------------------------------------------------------------------!

begin-procedure INIT-REPORT

  #debugf show 'INIT-REPORT'

  DO INIT-DATETIME
  DO GET-CURRENT-DATETIME
  do Get-Run-Control-Parms
      move 'UDATACNV'    to $ReportId
      move $xv_rep_title  to $ReportName
      move 'Conversion Documentation' to $ReportTitle

  let $First_Page = 'Y'
  let $ReportYear4 = '1'
  
   
end-procedure


!----------------------------------------------------------------------!
! Procedure: PROCESS-MAIN                                              !
! Desc:      This is the main report procedure                         !
!----------------------------------------------------------------------!

begin-procedure PROCESS-MAIN

  #debugf show 'PROCESS-MAIN'

  let #counter = 0

  if $First_Page = 'Y'
      let $First_Page = 'N'
  else
      NEW-PAGE
  end-if
  DO INITIALIZE-VARIABLES
  if $prcs_process_instance = ''
        DO GET-VALUES
  else
        let $OprID = $prcs_oprid
        let $Run_Cntl_ID = $prcs_run_cntl_id
        do SELECT-PARAMETERS
  end-if
     
  DO AE-COMMENTS
  DO END-PROCESS-SUCCESS
end-procedure

!----------------------------------------------------------------------
! Procedure: Select-Parameters
! Descr:
!
!----------------------------------------------------------------------

begin-procedure SELECT-PARAMETERS


BEGIN-SELECT ON-ERROR=SQL-Error

UPG_RUN_AEC.UPG_PATH,
UPG_RUN_AEC.UPG_GROUP_SEQ_NUM 

     let $WHERE = ' DC.UPG_PATH  = ''' || &UPG_RUN_AEC.UPG_PATH  ||''''
     
     if &UPG_RUN_AEC.UPG_GROUP_SEQ_NUM <> 0
          let $upg_group_seq_num = to_char(&UPG_RUN_AEC.UPG_GROUP_SEQ_NUM)
          let $WHERE = $WHERE || ' and DC.UPG_GROUP_SEQ_NUM = ''' || $upg_group_seq_num ||''''
     end-if
     
FROM PS_UPG_RUN_AEC UPG_RUN_AEC

WHERE UPG_RUN_AEC.OPRID = $prcs_oprid
  AND UPG_RUN_AEC.RUN_CNTL_ID = $prcs_run_cntl_id

END-SELECT

end-procedure

!----------------------------------------------------------------------!
! Procedure: INITIALIZE-VARIABLES                                      !
! Descr:                                                               !
!----------------------------------------------------------------------!
begin-procedure INITIALIZE-VARIABLES

 #debugf show 'INITIALIZE-VARIABLES'

 let $upg_path = '*'
 let #upg_group_seq_num =  999

end-procedure INITIALIZE-VARIABLES



!----------------------------------------------------------------------!
! Procedure: GET-VALUES                                                !
! Desc:      When run this report from outside of Process Scheduler,   !
!            prompt user for OprID and Run_Cntl_ID                     !
!----------------------------------------------------------------------!

begin-procedure GET-VALUES

 #debugf show 'GET-VALUES'

 if $upg_path = '*'
     input $upg_path 'Upgrade Path (Required, Enter your 4-character upgrade path)'
     DO CHECK-VALID-UPGRADEPATH
 end-if

 let $WHERE = ' DC.UPG_PATH  = ''' || $upg_path  ||''''

 if #upg_group_seq_num = 999
    input #upg_group_seq_num 'Group Number (Enter a 2 digit Group Number or 0 all groups)'
 end-if

 if #upg_group_seq_num <> 0
     DO CHECK-VALID-GROUP
     let $upg_group_seq_num = to_char(#upg_group_seq_num)
     let $WHERE = $WHERE || ' and DC.UPG_GROUP_SEQ_NUM = ''' || $upg_group_seq_num ||''''
 end-if


#debugv show '$WHERE=' $WHERE


end-procedure GET-VALUES

!----------------------------------------------------------------------!
! Procedure: CHECK-VALID-UPGRADEPATH                                   !
! Descr:                                                               !
!----------------------------------------------------------------------!

begin-procedure CHECK-VALID-UPGRADEPATH

 #debugf show 'CHECK-VALID-UPGRADEPATH'

let $validpath = 'N'
uppercase $upg_path
begin-select DISTINCT on-error=sql-error

DC1.UPG_PATH

  let $validpath = 'Y'
  #debugv  show 'VALID PATH'

  FROM PS_UPG_DATACONV DC1
  where  DC1.UPG_PATH = $upg_path
end-select

if $validpath = 'N'
  show 'The Upgrade Path You Entered is not valid.'
  input $upg_path 'Please Try Again (Required, Enter your 4-character upgrade path)'
  DO CHECK-VALID-UPGRADEPATH
end-if

 end-procedure CHECK-VALID-UPGRADEPATH


!----------------------------------------------------------------------!
! Procedure: CHECK-VALID-GROUP                                         !
! Descr:                                                               !
!----------------------------------------------------------------------!

begin-procedure CHECK-VALID-GROUP

 #debugf show 'CHECK-VALID-GROUP'

let $validgroup = 'N'


begin-select DISTINCT on-error=sql-error

DC2.UPG_PATH
DC2.UPG_GROUP_SEQ_NUM

  let $validgroup = 'Y'

  FROM PS_UPG_DATACONV DC2
  where  DC2.UPG_PATH = $upg_path
    and  DC2.UPG_GROUP_SEQ_NUM = #upg_group_seq_num
end-select


if $validgroup = 'N'
  show 'The Group Number You Entered is not valid.'
  input #upg_group_seq_num 'Please Try Again (Enter a 2 digit Group Number or 0 for all groups)'
  if #upg_group_seq_num <> 0
    DO CHECK-VALID-GROUP
  end-if
end-if

end-procedure CHECK-VALID-GROUP-SELECT


!-----------------------------------------------------------------------!
! Procedure: AE-COMMENTS                                                !
! Desc:      Get AE section Comments                                    !
!-----------------------------------------------------------------------!

begin-procedure  AE-COMMENTS

 #debugf show 'AE-COMMENTS'

begin-select DISTINCT  on-error=sql-error


DC.UPG_PATH          &DC.UPG_PATH             (+1,{UP})  ON-BREAK level=1 PRINT=CHANGE
DC.UPG_GROUP_SEQ_NUM &DC.UPG_GROUP_SEQ_NUM    (0,{PG})   ON-BREAK level=2 PRINT=CHANGE skiplines = 2
DC.AE_APPLID         &DC.AE_APPLID            (0,{PN})   ON-BREAK level=3 PRINT=CHANGE skiplines = 2
DC.AE_SECTION        &DC.AE_SECTION           (0,{ST})   ON-BREAK level=4 PRINT=CHANGE skiplines = 2
DC.SEQ_NUM           &DC.SEQ_NUM              (0,{SQ})

    DO GET-COMMENTS
    DO PRINT-COMMENT
 FROM PS_UPG_DATACONV DC
WHERE  [$WHERE]
  AND DC.ACTIVE_FLAG = 'A'
ORDER BY DC.UPG_GROUP_SEQ_NUM, DC.SEQ_NUM
end-select

end-procedure

!-----------------------------------------------------------------------!
! Procedure: GET-COMMENTS                                                !
! Desc:      Get AE section Comments                                    !
!-----------------------------------------------------------------------!

begin-procedure  GET-COMMENTS

 #debugf show 'GET-COMMENTS'

let $old_descr = ' '

begin-select

A.DESCRLONG      &A.DESCRLONG

      move  &A.DESCRLONG to $DESCRLONG

 FROM PSAESECTDTLDEFN A
WHERE A.AE_APPLID = &DC.AE_APPLID
  AND A.AE_SECTION = &DC.AE_SECTION

end-select

if $DESCRLONG = ''
     let $DESCRLONG = 'No Comments have been entered for this section'
end-if

if $DESCRLONG = ' '
     let $DESCRLONG = 'No Comments have been entered for this section'
end-if

end-procedure


!-----------------------------------------------------------------------!
! Procedure: PRINT-COMMENT                                                !
! Desc:                                                                 !
!-----------------------------------------------------------------------!

begin-procedure PRINT-COMMENT

 #debugf show 'PRINT-COMMENT'


   let $descr-total = length($DESCRLONG)
   move $descr-total to #descr-total
   
   let #first-line = 1
   let #end-line = 118

   IF #first-line = 1
       print $DESCRLONG (0,{CO})   wrap 118 70  strip=/\^@<13>  on=<10>
   ELSE
       print $DESCRLONG (+1,{CO})  wrap 118 70  strip=/\^@<13>  on=<10>
   END-IF

end-procedure

!----------------------------------------------------------------------!
! Procedure: END-PROCESS-SUCCESS                                       !
! Descr:                                                               !
!----------------------------------------------------------------------!

begin-procedure END-PROCESS-SUCCESS

 #debugf SHOW 'END-PROCESS-SUCCESS'

 DO COMMIT-TRANSACTION
 print 'SQR Completed Successfully'   (+5,{UP})


 display '       UDATACNV - Completed Successfully '
 display ' '


 DO UPDATE-PRCS-RUN-STATUS

end-procedure


!************************************************************************
!----------------------------------------------------------------------!
! Called SQC Procedures                                                !
!----------------------------------------------------------------------!

#include 'prcsapi.sqc'   ! Update Process Request API
#include 'prcsdef.sqc'   ! Update Process Request variable declare
#include 'reset.sqc'     ! Reset printer       procedure
#include 'curdttim.sqc'  ! Get-Current-DateTime procedure
#include 'datetime.sqc'  ! Routines for date and time formatting
#include 'number.sqc'    ! Routines to format numbers
#include 'sqlerr.sqc'    ! SQL Error Routines
