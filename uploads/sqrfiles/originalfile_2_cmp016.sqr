!************************************************
!  CMP016:  Defaulting Rules Eligibility Report *
!************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/02/06:19:55:43                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  688700                                              !
!                                                                      *
!***********************************************************************
!Porcedures ending with "Scrty" and Record alias ending with "SC" are  *
!using SQR Seurity.                                                    *
!***********************************************************************
#Include 'setenv.sqc'    !Set environment
Begin-Setup
#Include 'ptpsp125.sqc'  !Printer and page-size initialization
End-Setup

#define CMP_RULE_DEFN
#Include 'rellang.sqc'   ! Translations File 

!***************************************************
! Uncommment definition of DEBUG variables to show *
! various important variables in the output file.  *
!***************************************************
!#define DEBUG_RULE
!#define DEBUG_WHERE_CLAUSE
!#define DEBUG_WHERE_STMT
!#define DEBUG_CRIT_STMT

!**********************************************
! Report                                      *
!**********************************************
begin-report
   do Init-DateTime
   do Init-Number
   do Get-Current-DateTime
   do Init-Report

   if $prcs_oprid=''
      goto last2
   end-if
 
   do Process-Main
 
   do Reset
   do Stdapi-Term
last2:
end-report


!**********************************************
! Heading                                     *
!**********************************************
begin-heading 10
   do Get_Field_Information ('CMP016',   'REPORT_TITLE', $REPORTTITLE,   #DW)
   #Include 'stdhtr03.sqc'

   do Get_Field_Information ('CMP016',   'RULE_ID',      $RULE_ID_LBL,       #DW)
   do Get_Field_Information ('CMP016',   'RULE_DESCR',   $RULE_DESCR_LBL,    #DW)
   do Get_Field_Information ('CMP016',   'ELIG_EE',      $ELIG_EE_LBL,       #DW)
   do Get_Field_Information ('HR',       'EMPLID',       $EMPLID_LBL,        #DW)
   do Get_Field_Information ('HR',       'NAME',         $NAME_LBL,          #DW)
   do Get_Field_Information ('HR',       'EMPL_RCD',     $EMPL_RCD_LBL,      #DW)
   do Get_Field_Information ('CMP016',   'EFF_DATE',     $EFF_DATE_LBL,      #DW)
   do Get_Field_Information ('CMP016',   'EFF_SEQ',      $EFF_SEQ_LBL,       #DW)
   do Get_Field_Information ('HR',       'DEPARTMENT',   $DEPARTMENT_LBL,    #DW)
   do Get_Field_Information ('HR',       'JOBTITLE',     $JOBTITLE_LBL,      #DW)

   PRINT $RULE_ID_LBL                    ( 6, 1, 25)
   PRINT &R1.CMP_RULE_ID                 ( 0, 26, 15)
   PRINT $RULE_DESCR_LBL                 ( 0, 50, 30)
   PRINT $CMP_RULE_DEFN-CMP_RULE_DESCR50 ( 0, 81, 50)

   PRINT $ELIG_EE_LBL                    (+2,  1, 30)

   PRINT $EMPLID_LBL                     (+2,  1, 12)
   PRINT $NAME_LBL                       ( 0, 14, 35)
   PRINT $EMPL_RCD_LBL                   ( 0, 50,  3)
   PRINT $EFF_DATE_LBL                   ( 0, 55, 10)
   PRINT $EFF_SEQ_LBL                    ( 0, 66,  3)
   PRINT $DEPARTMENT_LBL                 ( 0, 71, 30)
   PRINT $JOBTITLE_LBL                   ( 0,103, 30)

end-heading


!**********************************************
! Init-Report                                 *
!**********************************************
begin-procedure Init-Report

   move 'CMP016' to $ReportID
   move 'W' to $ReportMsgType  !Warning

   do Stdapi-Init

   if $prcs_oprid=''
      display ''
      display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
      display ''
      goto last1
   end-if

   do Security-Param

   if $prcs_process_instance = ''
      do Ask-As-Of-Date
      do Ask-Rule-IDs
   else
      do Select-Parameters
      do Get-Rule-IDs
   end-if

   do Init_Printer
   do Init_Report_Translation ($ReportID, $language_cd)
   do Append_Report_Translation ('HR')
last1:
end-procedure


!**********************************************
! Get-Values                                  *
!**********************************************
begin-procedure Get-Values

   let $language_cd = $prcs_language_cd

   let $AsOfDate = &RUN_CNTL_HR.EFFDT

   if $AsOfDate = ''
      move $AsOfToday to $AsOfDate
   end-if

end-procedure


!**********************************************
! Process-Main                                *
!**********************************************
begin-procedure Process-Main

#IfDef DEBUG_RULE
   show 'DEBUG_RULE: RULE ID STRING from Run Control = ' $Rule_ID_String
   show 'DEBUG_RULE: As of Date from Run Control: ' $AsofDate
   show 'DEBUG_RULE: Start Process-Main'
#End-If
  
   do Get_Field_Information ('CMP016',   'TOTAL_NR',     $TOTAL_NR_LBL,       #DW)
  
!***************************
! For each Rule Definition *
!***************************
begin-SELECT
R1.CMP_RULE_ID                        
R1.EFFDT
R1.CMP_RULE_DESCR50

   #IfDef DEBUG_RULE
      show 'DEBUG_RULE: &R1.CMP_RULE_ID = ' &R1.CMP_RULE_ID
   #End-If
   
   !**************************************
   ! Get the Defaulting Rule Description *
   !**************************************
   let $CMP_RULE_DEFN-CMP_RULE_DESCR50 = rtrim(&R1.CMP_RULE_DESCR50, ' ')
   do Get_Related_CMP_RULE_DEFN(&R1.CMP_RULE_ID,&R1.EFFDT)

   !*************************************************************
   ! Build the Where Clause from the Defaulting Rule Definition *
   !*************************************************************
   let $Rule_Where_Clause = ''
   do Build-Rule-Where-Clause
   
   #IfDef DEBUG_WHERE_CLAUSE
      show '     DEBUG_WHERE_CLAUSE: $Rule_Where_Clause = ' $Rule_Where_Clause
   #End-If

   !************************************
   ! Print the List of Employees       *
   ! eligible for this Defaulting Rule *
   !************************************
   let #EE_Total_Count = 0
      do Print-Elig-EE-List

   !**************************************
   ! Print the Total Number of Employees *
   !**************************************
   Print $TOTAL_NR_LBL                  ( +2,  1, 30)
   Print #EE_Total_Count                (  0, +1) edit 999,999

   new-page

FROM PS_CMP_RULE_DEFN R1
WHERE R1.CMP_RULE_ID IN ([$Rule_ID_String])
  AND R1.EFF_STATUS = 'A'
  AND R1.EFFDT = (SELECT MAX(R2.EFFDT)
                    FROM PS_CMP_RULE_DEFN R2
                   WHERE R2.CMP_RULE_ID = R1.CMP_RULE_ID
                     AND R2.EFFDT <= $AsofDate)
ORDER BY R1.CMP_RULE_ID ASC, R1.EFFDT DESC
end-SELECT

#IfDef DEBUG_RULE
   show 'DEBUG_RULE: end Process-Main'
#End-If

end-procedure


!************************************************
! Procedure Build-Rule-Where-Clause             *
! Builds the Where-Clause for the Rule.         *
!************************************************
begin-procedure Build-Rule-Where-Clause

#IfDef DEBUG_WHERE_CLAUSE
   show '     DEBUG_WHERE_CLAUSE: Start Build-Rule-Where-Clause'
#End-If

   let $First_Criterion = 'True'

!**************************
! For each Rule Criterion *
!**************************
begin-SELECT
W1.CMP_RULE_ID
W1.EFFDT
W1.CMP_RULE_OPER_SEQ
W1.RECNAME
W1.FIELDNAME
W1.CMP_RULE_SQL_OPER

   ! ************************************
   ! get the Record Name and Field Name *
   ! ************************************
   let $Rec_Name = rtrim(&W1.RECNAME, ' ')
   let $Field_Name = rtrim(&W1.FIELDNAME, ' ')

   #IfDef DEBUG_WHERE_STMT
      show '          DEBUG_WHERE_STMT: $Rec_Name = ' $Rec_Name
      show '          DEBUG_WHERE_STMT: $Field_Name = ' $Field_Name
   #End-If

   ! ********************************************
   ! get the Compare Operator and Bool Operator *
   ! from the SQL Operator                      *
   ! ********************************************
   let $Compare_Operator = ''
   let $Bool_Operator = ''
   let $SQL_Oper = rtrim(&W1.CMP_RULE_SQL_OPER, ' ')
   Evaluate $SQL_Oper
      When = 'A'
         let $Compare_Operator = ' = '
         let $Bool_Operator = ' AND '
         break
      When = 'F'
         let $Compare_Operator = ' = '
         let $Bool_Operator = ' OR '
         break
      When = 'G'
         let $Compare_Operator = ' <> '
         let $Bool_Operator = ' AND '
         break
      When-Other
         show 'Unknown SQL Operator' $SQL_Oper
         break
   End-Evaluate

   ! ***************************************************
   ! Build the Where Statement for this Rule Criterion *
   ! and put paranthesis around the Where Statement.   *
   ! ***************************************************
   let $Rule_Where_Stmt = ''
   do Build-Rule-Where-Stmt
   let $Rule_Where_Stmt = ' ( ' || $Rule_Where_Stmt || ' ) '

   ! ******************************************
   ! if this is not the first Rule Criterion, *
   ! then add an 'AND' to the Where Statement *
   ! ******************************************
   if $First_Criterion = 'False'
      let $Rule_Where_Stmt = ' AND ' || $Rule_Where_Stmt
   else
      let $First_Criterion = 'False'
   end-if

   #IfDef DEBUG_WHERE_STMT
      show '          DEBUG_WHERE_STMT: $Rule_Where_Stmt = ' $Rule_Where_Stmt
   #End-If

   !**********************************************
   ! Add the Where Statement to the Where Clause *
   !**********************************************
   concat $Rule_Where_Stmt with $Rule_Where_Clause

   #IfDef DEBUG_WHERE_CLAUSE
      show '     DEBUG_WHERE_CLAUSE: $Rule_Where_Clause = ' $Rule_Where_Clause
   #End-If

FROM PS_CMP_RULE_WHERE W1
WHERE W1.CMP_RULE_ID = &R1.CMP_RULE_ID
  AND W1.EFFDT = &R1.EFFDT
end-SELECT

#IfDef DEBUG_WHERE_CLAUSE
   show '     DEBUG_WHERE_CLAUSE: End Build-Rule-Where-Clause'
#End-If

end-procedure


!***************************************
! Procedure Print-Elig-EE-List         *
! Print the list of employees eligible *
! for the Defaulting Rule.             *
!***************************************
begin-procedure Print-Elig-EE-List
                                                
if $Rec_Name = 'JOB'     
   let $From_Clause = ' '
   let $Join_Where_Clause = ' '
else
   let $From_Clause = ' , PS_' || $Rec_Name || ' ' || $Rec_Name
   let $Join_Where_Clause = ' AND JOB.EMPLID   = ' || $Rec_Name || '.EMPLID '
                         || ' AND JOB.EMPL_RCD = ' || $Rec_Name || '.EMPL_RCD '             
                         || ' AND JOB.EFFDT = '    || $Rec_Name || '.EFFDT '
                         || ' AND JOB.EFFSEQ = '   || $Rec_Name || '.EFFSEQ '  
end-if


!****************************************
! Select the Employees eligible for the *
! Defaulting Rule, determined by the    *
! $Rule_Where_Clause variable           * 
!****************************************
begin-SELECT DISTINCT
JOB.EMPLID                  ( +1,  1, 12)
!******************BEGIN SQR NAME DISPLAY CHANGE********************************
    !PERS.NAME                   (  0, 14, 35)
PERS.NAME_DISPLAY            (  0, 14, 35)
!******************End SQR NAME DISPLAY CHANGE********************************
JOB.EMPL_RCD                (  0, 50,  3) edit 999
JOB.EFFDT                   
   Move 1 to $Year4
   do Format-DateTime(&JOB.EFFDT, $out, {DEFDATE}, '', '')
   print $out               (  0, 55, 10)

JOB.EFFSEQ                  (  0, 66,  3) edit 999
JOB.BUSINESS_UNIT
JOB.DEPTID
   LET $BU = RTRIM(&JOB.BUSINESS_UNIT,' ')
   move &JOB.DEPTID to $DeptID
   do Get-Department-Name
   print $DeptName          (  0, 71, 30)

JOB.SETID_JOBCODE
JOB.JOBCODE
   move &JOB.SETID_JOBCODE to $setid
   move &JOB.JOBCODE to $Jobcode
   do Get-Job-Title
   print $JobTitle          (  0,103)

   Add 1 to #EE_Total_Count

FROM PS_JOB JOB
    ,PS_PERSON_NAME PERS
    ,PS_FAST_SQR_SEC_VW SCRTY  
    [$From_Clause]
WHERE [$Rule_Where_Clause]
  AND JOB.EFFDT = (SELECT MAX(JOB1.EFFDT)
                     FROM PS_JOB JOB1
                    WHERE JOB1.EMPLID = JOB.EMPLID
                      AND JOB1.EMPL_RCD = JOB.EMPL_RCD
                      AND JOB1.EFFDT <= $AsofDate)
  AND JOB.EFFSEQ = (SELECT MAX(JOB2.EFFSEQ)
                      FROM PS_JOB JOB2
                     WHERE JOB2.EMPLID = JOB.EMPLID
                       AND JOB2.EMPL_RCD = JOB.EMPL_RCD
                       AND JOB2.EFFDT = JOB.EFFDT)
  AND JOB.HR_STATUS = 'A'
  AND JOB.EMPLID = PERS.EMPLID
  [$Join_Where_Clause]
  [$SecurityClause]
  AND JOB.EMPLID = SCRTY.EMPLID
  AND JOB.EMPL_RCD = SCRTY.EMPL_RCD
end-SELECT

end-procedure


!*********************************************
! Procedure Build-Rule-Where-Stmt            *
! Builds a Where-Statement from a Rule Crit. *
!*********************************************
begin-procedure Build-Rule-Where-Stmt

#IfDef DEBUG_WHERE_STMT
   show '          DEBUG_WHERE_STMT: Start Build-Rule-Where-Stmt'
#End-If

   let $First_Rule_Field_Value = 'True'

!**************************
! For each Rule Value row *
!**************************   
begin-SELECT
V1.CMP_RULE_ID
V1.EFFDT
V1.CMP_RULE_OPER_SEQ
V1.CMP_VALUE_SEQ
V1.CMP_FLD_VALUE
V1.CMP_FLD_VALUE_DT
V1.CMP_FLD_VALUE_DTTM
V1.CMP_FLD_VALUE_TM
V1.SETID
V1.ACTION
V1.COMPANY
V1.PAYGROUP
V1.SAL_ADMIN_PLAN
V1.GRADE
V1.RATING_MODEL
V1.OPRCLASS
V1.TARIFF_GER
V1.GVT_NOA_CODE
V1.GVT_RTND_PAY_PLAN
V1.GVT_RTND_SAL_PLAN
V1.GVT_RTND_GRADE
V1.GVT_SUB_AGENCY
V1.ACTION_ITA
V1.SEQUENCE_NBR
V1.LABOR_AGREEMENT
V1.EMPL_CTG
V1.EMPL_CTG_L1
V1.EMPLID

   !****************************************
   ! Fill the Prereq_Fields Array with     *
   ! the values of the CMP_RULE_VALUES row *
   !****************************************
   do Fill-Prereq-Flds-Array

   !************************************
   ! Build the Prereq Fields Statement *
   !************************************
   let $Prereq_Flds_Stmt = ''
   do Build-Prereq-Flds-Stmt

   !*********************************
   ! Build the Rule Field Statement *
   !*********************************
   let $Rule_Field_Stmt = ''
   do Build-Rule-Field-Stmt

   #IfDef DEBUG_CRIT_STMT
      show '               DEBUG_CRIT_STMT: $Rule_Field_Stmt = ' $Rule_Field_Stmt
   #End-If

   !*************************************
   ! Concat the Prereq Fields Statement *
   ! and the Rule Field Statement       *
   !*************************************
   if $Prereq_Flds_Stmt <> ''
      let $Rule_Field_Stmt = $Prereq_Flds_Stmt || ' AND ' || $Rule_Field_Stmt
      let $Rule_Field_Stmt = '(' || $Rule_Field_Stmt || ')'
   end-if

   #IfDef DEBUG_CRIT_STMT
      show '               DEBUG_CRIT_STMT: $Rule_Field_Stmt = ' $Rule_Field_Stmt
   #End-If

   !***********************************************
   ! Add the Bool Operator to the Rule Field Stmt *
   ! if this is not the first Rule Field Stmt     *
   !***********************************************
   if $First_Rule_Field_Value = 'False'
      let $Rule_Field_Stmt = $Bool_Operator || $Rule_Field_Stmt
   else
      let $First_Rule_Field_Value = 'False'
   end-if

   #IfDef DEBUG_CRIT_STMT
      show '               DEBUG_CRIT_STMT: $Rule_Field_Stmt = ' $Rule_Field_Stmt
   #End-If

   !********************************************
   ! Add the Rule Field Stmt to the Where Stmt *
   !********************************************
   concat $Rule_Field_Stmt with $Rule_Where_Stmt

   #IfDef DEBUG_WHERE_STMT
      show '          DEBUG_WHERE_STMT: $Rule_Where_Stmt = ' $Rule_Where_Stmt
   #End-If

FROM PS_CMP_RULE_VALUES V1
WHERE V1.CMP_RULE_ID = &R1.CMP_RULE_ID
  AND V1.EFFDT = &R1.EFFDT
  AND V1.CMP_RULE_OPER_SEQ = &W1.CMP_RULE_OPER_SEQ
end-SELECT

#IfDef DEBUG_WHERE_STMT
   show '          DEBUG_WHERE_STMT: End Build-Rule-Where-Stmt'
#End-If

end-procedure


!************************************************
! Procedure Get-Prereq-Flds-Array               *
! Fills the Prereq-Fields Array with the fields *
! and values of a CMP_RULE_VALUES row.          *
!************************************************
begin-procedure Fill-Prereq-Flds-Array

   !************************************************
   ! Create and Initialize the Prereq Fields Array *
   !************************************************
   Create-Array Name=Prereq_Fields Size=20
      Field=Preq_Field_Name:Char
      Field=Preq_Field_Value:Char
   Clear-Array Name=Prereq_Fields
   
   let $Setid_Value = '''' || rtrim(&V1.SETID, ' ') || ''''
   put 'SETID' $Setid_Value into Prereq_Fields (0) Preq_Field_Name Preq_Field_Value
   
   let $Action_Value = '''' || rtrim(&V1.ACTION, ' ') || ''''
   put 'ACTION' $Action_Value into Prereq_Fields (1) Preq_Field_Name Preq_Field_Value
   
   let $Company_Value = '''' || rtrim(&V1.COMPANY, ' ') || ''''
   put 'COMPANY' $Company_Value into Prereq_Fields (2) Preq_Field_Name Preq_Field_Value
   
   let $Paygroup_Value = '''' || rtrim(&V1.PAYGROUP, ' ') || ''''
   put 'PAYGROUP' $Paygroup_Value into Prereq_Fields (3) Preq_Field_Name Preq_Field_Value
   
   let $Sal_Admin_Plan_Value = '''' || rtrim(&V1.SAL_ADMIN_PLAN, ' ') || ''''
   put 'SAL_ADMIN_PLAN' $Sal_Admin_Plan_Value into Prereq_Fields (4) Preq_Field_Name Preq_Field_Value
   
   let $Grade_Value = '''' || rtrim(&V1.GRADE, ' ') || ''''
   put 'GRADE' $Grade_Value into Prereq_Fields (5) Preq_Field_Name Preq_Field_Value
   
   let $Rating_Model_Value = '''' || rtrim(&V1.RATING_MODEL, ' ') || ''''
   put 'RATING_MODEL' $Rating_Model_Value into Prereq_Fields (6) Preq_Field_Name Preq_Field_Value
   
   let $Oprclass_Value = '''' || rtrim(&V1.OPRCLASS, ' ') || ''''
   put 'OPRCLASS' $Oprclass_Value into Prereq_Fields (7) Preq_Field_Name Preq_Field_Value
   
   let $Tariff_Ger_Value = '''' || rtrim(&V1.TARIFF_GER, ' ') || ''''
   put 'TARIFF_GER' $Tariff_Ger_Value into Prereq_Fields (8) Preq_Field_Name Preq_Field_Value

   let $Gvt_Noa_Code_Value = '''' || rtrim(&V1.GVT_NOA_CODE, ' ') || ''''
   put 'GVT_NOA_CODE' $Gvt_Noa_Code_Value into Prereq_Fields (9) Preq_Field_Name Preq_Field_Value

   let $Gvt_Rtnd_Pay_Plan_Value = '''' || rtrim(&V1.GVT_RTND_PAY_PLAN, ' ') || ''''
   put 'GVT_RTND_PAY_PLAN' $Gvt_Rtnd_Pay_Plan_Value into Prereq_Fields (10) Preq_Field_Name Preq_Field_Value

   let $Gvt_Rtnd_Sal_Plan_Value = '''' || rtrim(&V1.GVT_RTND_SAL_PLAN, ' ') || ''''
   put 'GVT_RTND_SAL_PLAN' $Gvt_Rtnd_Sal_Plan_Value into Prereq_Fields (11) Preq_Field_Name Preq_Field_Value

   let $Gvt_Rtnd_Grade_Value = '''' || rtrim(&V1.GVT_RTND_GRADE, ' ') || ''''
   put 'GVT_RTND_GRADE' $Gvt_Rtnd_Grade_Value into Prereq_Fields (12) Preq_Field_Name Preq_Field_Value

   let $Gvt_Sub_Agency_Value = '''' || rtrim(&V1.GVT_SUB_AGENCY, ' ') || ''''
   put 'GVT_SUB_AGENCY' $Gvt_Sub_Agency_Value into Prereq_Fields (13) Preq_Field_Name Preq_Field_Value

   let $Action_Ita_Value = '''' || rtrim(&V1.ACTION_ITA, ' ') || ''''
   put 'ACTION_ITA' $Action_Ita_Value into Prereq_Fields (14) Preq_Field_Name Preq_Field_Value

   let $Sequence_Nbr_Value = edit(&V1.SEQUENCE_NBR, '99')
   put 'SEQUENCE_NBR' $Sequence_Nbr_Value into Prereq_Fields (15) Preq_Field_Name Preq_Field_Value

   let $Labor_Agreement_Value = '''' || rtrim(&V1.LABOR_AGREEMENT, ' ') || ''''
   put 'LABOR_AGREEMENT' $Labor_Agreement_Value into Prereq_Fields (16) Preq_Field_Name Preq_Field_Value

   let $Empl_Ctg_Value = '''' || rtrim(&V1.EMPL_CTG, ' ') || ''''
   put 'EMPL_CTG' $Empl_Ctg_Value into Prereq_Fields (17) Preq_Field_Name Preq_Field_Value

   let $Empl_Ctg_L1_Value = '''' || rtrim(&V1.EMPL_CTG_L1, ' ') || ''''
   put 'EMPL_CTG_L1' $Empl_Ctg_L1_Value into Prereq_Fields (18) Preq_Field_Name Preq_Field_Value

   let $Emplid_Value = '''' || rtrim(&V1.EMPLID, ' ') || ''''
   put 'EMPLID' $Emplid_Value into Prereq_Fields (19) Preq_Field_Name Preq_Field_Value

end-procedure


!************************************************
! Procedure Build-Prereq-Flds-Stmt              *
! Builds the prerequisite fields statement      *
! of a Rule Criterion of a Where-Statement.     *
!************************************************
begin-procedure Build-Prereq-Flds-Stmt

#IfDef DEBUG_CRIT_STMT
   show '               DEBUG_CRIT_STMT: Start Build-Prereq-Flds-Stmt'
#End-If

   let $First_Prereq_Fld = 'True'

!******************************
! For each Prerequisite Field *
!******************************
begin-SELECT
REQ1.RECNAME
REQ1.FIELDNAME
REQ1.CMP_PROMPT_FIELD
REQ1.FIELDLABEL
REQ1.CMP_RECORD_FIELD

   !**********************************
   ! If a Prereq Record Field exists *
   !**********************************
   let $Prereq_Field = ''
   let $Prereq_Field = rtrim(&REQ1.CMP_RECORD_FIELD, ' ')

   #IfDef DEBUG_CRIT_STMT
      show '               DEBUG_CRIT_STMT: $Prereq_Field = ' $Prereq_Field
   #End-If

   if $Prereq_Field <> ''
      
      !**********************************
      ! Initialize the String Variables *
      !**********************************
      let $Prompt_Field = ''
      let $Array_Field_Name = ''
      let $Array_Field_Value = ''

      !***********************
      ! Get the Prompt Field *
      !***********************
      let $Prompt_Field = rtrim(&REQ1.CMP_PROMPT_FIELD, ' ')

      #IfDef DEBUG_CRIT_STMT
         show '               DEBUG_CRIT_STMT: $Prompt_Field = ' $Prompt_Field
      #End-If

      !*************************************
      ! Go through the Prereq_Fields Array *
      !*************************************
      let #Array_Count = 0
      While #Array_Count < 20
         Get $Array_Field_Name from Prereq_Fields (#Array_Count) Preq_Field_Name

         #IfDef DEBUG_CRIT_STMT
            show '               DEBUG_CRIT_STMT: $Array_Field_Name = ' $Array_Field_Name
         #End-If

         !***************************************
         ! if the Prompt Field is in the Array, *
         ! get its Value for the Prereq Field.  *
         !***************************************
         if $Array_Field_Name = $Prompt_Field
            Get $Array_Field_Value from Prereq_Fields (#Array_Count) Preq_Field_Value

            #IfDef DEBUG_CRIT_STMT
               show '               DEBUG_CRIT_STMT: $Array_Field_Value = ' $Array_Field_Value 
            #End-If

            let #Array_Count = 20
         else
            Add 1 to #Array_Count
         end-if
      End-While

      !**********************************************
      ! Add an "AND" to the Prereq Fields Statement *
      ! if this is not the first Prereq Field       *
      !**********************************************
      if $First_Prereq_Fld = 'False'
         concat ' AND ' with $Prereq_Flds_Stmt
      else
         let $First_Prereq_Fld = 'False'
      end-if

      !********************************************
      ! Add the Prereq Record Field and its Value *
      ! to the Prereq Fields Statement            *
      !********************************************
      let $Compare_Operator_Prereq = ' = '
      concat $Rec_Name with $Prereq_Flds_Stmt
      concat '.' with $Prereq_Flds_Stmt
      concat $Prereq_Field with $Prereq_Flds_Stmt
      concat $Compare_Operator_Prereq with $Prereq_Flds_Stmt
      concat $Array_Field_Value with $Prereq_Flds_Stmt

      #IfDef DEBUG_CRIT_STMT
         show '               DEBUG_CRIT_STMT: $Prereq_Flds_Stmt = ' $Prereq_Flds_Stmt
      #End-If

   end-if   ! *** if $Prereq_Field <> '' ***

FROM PS_CMP_OPT_REQ_FLD REQ1
WHERE REQ1.RECNAME = &W1.RECNAME
  AND REQ1.FIELDNAME = &W1.FIELDNAME
end-SELECT

#IfDef DEBUG_CRIT_STMT
   show '               DEBUG_CRIT_STMT: End Build-Prereq-Flds-Stmt'
#End-If

end-procedure


!*********************************************
! Procedure Build-Rule-Field-Stmt            *
! Builds the Rule Field Statement            *
! of a Criterion Field of a Where-Statement. *
!*********************************************
begin-procedure Build-Rule-Field-Stmt

#IfDef DEBUG_CRIT_STMT
   show '               DEBUG_CRIT_STMT: Start Build-Rule-Field-Stmt'
#End-If

!*********************
! Get the Field Type *
!*********************
begin-SELECT 
FT1.FIELDTYPE 
FROM PSDBFIELD FT1
WHERE FIELDNAME = &W1.FIELDNAME
end-SELECT

   !**************************************************
   ! Get the Field Value depending on the Field Type *
   !**************************************************
   Evaluate &FT1.FIELDTYPE
      When = 2
      When = 3
         let $Field_Value = &V1.CMP_FLD_VALUE
         Break
      When = 4
         let $Field_Value = '''' || &V1.CMP_FLD_VALUE_DT || ''''
         Break
      When = 5
         let $Field_Value = '''' || &V1.CMP_FLD_VALUE_TM || ''''
         Break
      When = 6
         let $Field_Value = '''' || &V1.CMP_FLD_VALUE_DTTM || ''''
         Break
      When-Other
         let $Field_Value = '''' || rtrim(&V1.CMP_FLD_VALUE, ' ') || ''''
         Break
   End-Evaluate

   !*************************************
   ! Add the Record Field and its Value *
   ! to the Rule Field Statement        *
   !*************************************
   concat $Rec_Name with $Rule_Field_Stmt
   concat '.' with $Rule_Field_Stmt
   concat $Field_Name with $Rule_Field_Stmt
   concat $Compare_Operator with $Rule_Field_Stmt
   concat $Field_Value with $Rule_Field_Stmt

#IfDef DEBUG_CRIT_STMT
   show '               DEBUG_CRIT_STMT: $Rule_Field_Stmt = ' $Rule_Field_Stmt
   show '               DEBUG_CRIT_STMT: End Build-Rule-Field-Stmt'
#End-If

end-procedure


!******************************************
! Procedure Get-Rule-IDs                  *
! Gets the Defaulting Rule IDs to process *
! from the Run Control Record.            *
!******************************************
begin-procedure Get-Rule-IDs

  move '''' to $Rule_ID_String

begin-SELECT
RUN_CNTL_CMP016.OPRID
RUN_CNTL_CMP016.RUN_CNTL_ID
RUN_CNTL_CMP016.CMP_RULE_ID

  let $Rule_ID = rtrim(&RUN_CNTL_CMP016.CMP_RULE_ID,' ')
  do Build-Rule-ID-String

FROM PS_RUN_CNTL_CMP016 RUN_CNTL_CMP016
WHERE RUN_CNTL_CMP016.OPRID = &RUN_CNTL_HR.OPRID
  AND RUN_CNTL_CMP016.RUN_CNTL_ID = &RUN_CNTL_HR.RUN_CNTL_ID
end-Select

  concat '''' with $Rule_ID_String

end-procedure


!************************************************
! Procedure Build-Rule-ID-String                *
! Builds the list of Rule IDs in the variable   *
! $Rule_ID_String for the Main Select stmt.     *
!************************************************
begin-procedure Build-Rule-ID-String

  if $Rule_ID_String  <> ''''
    concat ''',''' with $Rule_ID_String
  end-if
  concat $Rule_ID with $Rule_ID_String

end-procedure


!**********************************************
! Procedure Ask-Rule-IDs                      *
! Asks for the Defaulting Rule IDs to process *
! if report is called outside PeopleSoft.     *
!**********************************************
begin-procedure Ask-Rule-IDs

  move '''' to $Rule_ID_String
  display 'Enter Defaulting Rule ID or leave blank to exit.'
  while 1 = 1
    input $RULE_ID maxlen=15 'Rule ID'
    if RTRIM($RULE_ID, ' ') = ''
      concat '''' with $Rule_ID_String
      break
    end-if
    if $Rule_ID_String <> ''''
      concat ''',''' with $Rule_ID_String
    end-if
    concat $RULE_ID with $Rule_ID_String
  end-while

end-procedure

#Include 'hrrnctl1.sqc'  !Get run control parameter values
#Include 'hrgetval.sqc'  !Get values mask routines
#Include 'askaod.sqc'    !Ask As Of Date input
#Include 'hrsecty.sqc'   !Get SQR Security parameters

#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getjobtl.sqc'  !Get-Job-Title procedure

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to update run status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
