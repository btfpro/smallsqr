!********************************************************
!  OHS017.SQR - OSHA 301 Incident Report                !
!********************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:11:44                                 *
!       $Release:  HR9                                                 *
!      $Revision:  101                                                 *
!                                                                      *
!***********************************************************************
!                              *
!                              *
!***********************************************************************


#include 'setenv.sqc'   !Set environment

! No printout for this process, so manually include #setupdb.sqc
!----------------------------------------------------------------------
Begin-Setup
#include 'setupdb.sqc'
End-Setup

!----------------------------------------------------------------------
!---------Program------------------------------------------------------
!----------------------------------------------------------------------

!----------------------------------------------------------------------
Begin-Program
#DEBUG SHOW 'Begin-Program'

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Init-Array
  do Process-Main

  ! Update the Process Scheduler
  !------------------------------------------------------------
  DO Stdapi-Term

End-Program

!----------------------------------------------------------------------
!---------Init-Report--------------------------------------------------
!----------------------------------------------------------------------
! We need to get the calendar year from the process instance
!----------------------------------------------------------------------

begin-procedure Init-Report
#DEBUG SHOW 'FLOW: Init-Report'

  move 'OHS017' to $ReportID
  move 'OSHA 301 Incident Log' to $ReportTitle
  move 'OSHA301' to $ProcessName

  display $ReportTitle

  do Stdapi-Init

  if $prcs_process_instance = ''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
     STOP QUIET
  else
     do Select-Parameters
  end-if

end-procedure

!----------------------------------------------------------------------
!---------Get-Values---------------------------------------------------
!----------------------------------------------------------------------
! Fetch run control parameters
!----------------------------------------------------------------------
begin-procedure Get-Values
#DEBUG SHOW 'FLOW: Get-Values'


   do Get-Incident-Nbr
   DISPLAY '$Incident_Nbr: ' NOLINE
   DISPLAY $Incident_Nbr

   do Get-Emplid
   DISPLAY '$Emplid: ' NOLINE
   DISPLAY $Emplid

   LET $Quote = ''''
   LET $CRLF = chr(13) ||chr(10) ! Line break read correctly on all platforms
   LET $RTFPageBreak = '\page ' || $CRLF
   LET $RTFDocumentEnd = '}' || $CRLF

end-procedure Get-Values


!----------------------------------------------------------------------
!---------Process-Main-------------------------------------------------
!----------------------------------------------------------------------
! This routine will be run once - this SQL loop controls the flow of
! the program.
!----------------------------------------------------------------------
begin-procedure Process-Main
#DEBUG SHOW 'FLOW: Process-Main'
BEGIN-SELECT
AA.NAME1
AA.TITLE
AA.PHONE
AA.DATE_FILED
BB1.NAME
BB2.ADDRESS1
BB2.ADDRESS2
BB2.ADDRESS3
BB2.CITY
BB2.STATE
BB2.POSTAL
BB1.BIRTHDATE
BB1.SEX
AA.PHYSICIAN_NAME
AA.HOSPITAL
AA.ADDRESS1
AA.ADDRESS2
AA.CITY
AA.STATE
AA.POSTAL
AA.EMER_CARE_GIVEN
AA.HOSPITAL_IN_PT
CC.CASE_NBR_USA
DD.INCIDENT_DT
AA.INCIDENT_TIME
AA.TIME_BEGAN_WK
AA.ACTIVITY_BEFORE_IN
AA.NATURE_OF_INJ_ILL
AA.DT_OF_DEATH
CC.FATALITY_SW
AA.WHAT_OBJECT_CAUSED
AA.WHAT_HAPPENED
BB1.EMPLID
DD.INCIDENT_NBR
CC.PRIVACY_CASE

        DO RTF-Add-Token('%COMPLETEDBY%', &AA.NAME1)
        DO RTF-Add-Token('%COMPLETEDTITLE%', &AA.TITLE)
        DO RTF-Add-Token('%COMPLETEDPHONE%', &AA.PHONE)

        DO Format-DateTime(&AA.DATE_FILED, $TEMP, {DEFDATE}, '', '')
        DO RTF-Add-Token('%COMPLETEDDATE%',$TEMP)

        IF &CC.PRIVACY_CASE = 'N'
        DO RTF-Add-Token('%EMPLOYEENAME%', &BB1.NAME)
        ELSE
        DO RTF-Add-Token('%EMPLOYEENAME%', 'Privacy Case')
        END-IF

        LET $TEMP = rtrim(&BB2.ADDRESS1,' ')
        IF NOT ISBLANK(&BB2.ADDRESS2)
           LET $TEMP = $TEMP || rtrim(&BB2.ADDRESS2,' ')
        END-IF
        IF NOT ISBLANK(&BB2.ADDRESS3)
           LET $TEMP = $TEMP || rtrim(&BB2.ADDRESS3,' ')
        END-IF
        IF &CC.PRIVACY_CASE = 'N'
        DO RTF-Add-Token('%EEADDRESS1%', $TEMP)
        ELSE
        DO RTF-Add-Token('%EEADDRESS1%', ' ')
        END-IF

        LET $TEMP = rtrim(&BB2.CITY,' ') || ', ' || rtrim(&BB2.STATE,' ') || ' ' || rtrim(&BB2.POSTAL,' ')
        IF &CC.PRIVACY_CASE = 'N'
        DO RTF-Add-Token('%EEADDRESS2%', $TEMP)
        ELSE
        DO RTF-Add-Token('%EEADDRESS2%', ' ')
        END-IF

        DO Format-DateTime(&BB1.BIRTHDATE, $TEMP, {DEFDATE}, '', '')
        DO RTF-Add-Token('%EMPLOYEEDOB%', $TEMP)

        DO Get_Orig_Hire_Dt
        DO Format-DateTime(&ORH.ORIG_HIRE_DT, $TEMP, {DEFDATE}, '', '')
        DO RTF-Add-Token('%EMPLOYEEHIREDT%', $TEMP)
        DO RTF-Add-Token('%EMPLOYEESEX%', &BB1.SEX)
        DO RTF-Add-Token('%PHYSICIANNAME%', &AA.PHYSICIAN_NAME)
        DO RTF-Add-Token('%FACILITY%', &AA.HOSPITAL)

        LET $TEMP = rtrim(&AA.ADDRESS1,' ')
        IF NOT ISBLANK(&AA.ADDRESS2)
           LET $TEMP = $TEMP || rtrim(&AA.ADDRESS2,' ')
        END-IF
        DO RTF-Add-Token('%HCADDRESS1%', $TEMP)

        LET $TEMP = rtrim(&AA.CITY,' ') || ', ' || rtrim(&AA.STATE,' ') || ' ' || rtrim(&AA.POSTAL,' ')
        DO RTF-Add-Token('%HCADDRESS2%', $TEMP)

        IF rtrim(&AA.EMER_CARE_GIVEN,' ') = 'Y'
           LET $TEMP = 'YES'
        ELSE
           LET $TEMP = 'NO'
        END-IF
        DO RTF-Add-Token('%ER%', $TEMP)

        IF rtrim(&AA.HOSPITAL_IN_PT,' ') = 'Y'
           LET $TEMP = 'YES'
        ELSE
           LET $TEMP = 'NO'
        END-IF
        DO RTF-Add-Token('%HSP%', $TEMP)

        DO RTF-Add-Token('%CASE_NBR%', &CC.CASE_NBR_USA)

        DO Format-DateTime(&DD.INCIDENT_DT, $TEMP, {DEFDATE}, '', '')
        DO RTF-Add-Token('%INJURY_DT%', $TEMP)

        !DO Format-DateTime(&AA.INCIDENT_TIME, $TEMP, {DEFDATE}, 'time', '')
        LET $TEMP = datetostr(&AA.INCIDENT_TIME, 'HH:MI AM')
        DO RTF-Add-Token('%INJURY_TIME%', $TEMP)

        DO RTF-Add-Token('%BEGIN_WORK%', &AA.TIME_BEGAN_WK)
        DO RTF-Add-Token('%EVENT_BEFORE%', &AA.ACTIVITY_BEFORE_IN)
        DO RTF-Add-Token('%EVENT_DESCR%', &AA.WHAT_HAPPENED)
        DO RTF-Add-Token('%INJURY_DESCR%', &AA.NATURE_OF_INJ_ILL)
        DO RTF-Add-Token('%INFLICTING_OBJECT%', &AA.WHAT_OBJECT_CAUSED)
        IF RTRIM(&CC.FATALITY_SW,' ') = 'Y'
                DO RTF-Add-Token('%DATE_OF_DEATH%', &AA.DT_OF_DEATH)
        ELSE
                DO RTF-Add-Token('%DATE_OF_DEATH%', ' ')
        END-IF

        LET $Incident_Nbr = rtrim(&DD.INCIDENT_NBR,' ')

        DO Merge-File

FROM PS_OSHA_301_REPORT AA,
     PS_PERSONAL_DT_FST BB1,
     PS_PERSON_ADDR_HOM BB2,
     PS_INJURY_ILL CC,
     PS_INCIDENT_DATA DD

WHERE AA.INCIDENT_NBR = $Incident_Nbr
  AND AA.EMPLID = $Emplid
  AND BB1.EMPLID = AA.EMPLID
  AND BB1.EMPLID = CC.EMPLID
  AND BB1.EMPLID = BB2.EMPLID
  AND CC.INCIDENT_NBR = DD.INCIDENT_NBR
  AND DD.INCIDENT_NBR = AA.INCIDENT_NBR
END-SELECT
end-procedure Process-Main
!----------------------------------------------------------------------
!---------Get Orig Hire Date-------------------------------------------
!----------------------------------------------------------------------
begin-procedure Get_Orig_Hire_Dt
begin-select
ORH.ORIG_HIRE_DT
from PS_ORIG_HIRE_VW ORH
where ORH.EMPLID = $Emplid
end-select
end-procedure Get_Orig_Hire_Dt
!----------------------------------------------------------------------
!---------Init-Array---------------------------------------------------
!----------------------------------------------------------------------
begin-procedure Init-Array
#DEBUG SHOW 'Flow: Init-Array'

CREATE-ARRAY NAME = OSHA
             SIZE = 100
            FIELD = search:char
            FIELD = replace:char

LET #RTF_Seq_Nbr = 1
end-procedure Init-Array
!----------------------------------------------------------------------
!---------Merge-File---------------------------------------------------
!----------------------------------------------------------------------
begin-procedure Merge-File
#DEBUG SHOW 'Flow: Merge-File'

LET $RTFFile = 'ohs017.dat'
LET $RTFTemplate = ''
DO RTF-Fetch-and-Process

end-procedure

!----------------------------------------------------------------------
!---------SQCs---------------------------------------------------------
!----------------------------------------------------------------------
#include 'osha.sqc'
#include 'stdapi.sqc'      !Routine to update run status
#include 'rgrnctl1.sqc'    !Get run control parameter values
#include 'rggetval.sqc'    !Get values mask routines
#include 'askcalyr.sqc'    !Ask Calendar Year input
#Include 'curdttim.sqc'    !Get-Current-DateTime procedure
#Include 'datetime.sqc'    !Routines for date and time formatting
#Include 'datemath.sqc'    !Routines for date and time calculations
#Include 'number.sqc'      !Routines to format numbers
