!***********************************************************************
!  PER051.SQR:  SERVICE REPORT - EMPLOYEES TENURE YEARS OF SERVICE     *
!               HRMS for Education & Government Reports                *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!     specify a range of service (in years) and the program will list  *
!     only employees whose service in the selected type falls within   *
!     the selected range.                                              *
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:46:47                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
! This program is specific to HRMS for Education & Government          *
!***********************************************************************

#include 'setenv.sqc'         !Set Environment
#include 'setup32.sqc'        !Printer and Page-Size Initialization

begin-report
  do Init-Report
  do Process-Main
  do Wrap-Up
  do Stdapi-Term
end-report


begin-heading 8
#include 'stdhdgtr.sqc'                                               !F-LPARKER-125 (CAMI)

   Print $PER048_SERVICE_GRP             (+1,3,24)                    !F-LPARKER-125 (CAMI)
   Print $Ten_Group_Descr                    (,+2)
   Print $PER048_SERVICE_TYPE                (,+2)                    !F-LPARKER-125 (CAMI)
   Print $PER051_TEN_SERV                    (,+4)                    !F-LPARKER-125 (CAMI)

   Print $PER051_START                  (+2,81,09)                    !F-LPARKER-125 (CAMI)
   Print $PER051_TENURE                   (,+3,06)                    !F-LPARKER-125 (CAMI)
   Print $PER051_REQD                     (,+3,04)                    !F-LPARKER-125 (CAMI)
   Print $PER051_EXT                      (,+5,05)                    !F-LPARKER-125 (CAMI)
   Print $PER051_PRIOR                    (,+4,05)                    !F-LPARKER-125 (CAMI)
   Print $PER051_ACCR                     (,+5,04)                    !F-LPARKER-125 (CAMI)
   Print $PER051_YRS_TO                   (,+5,07)                    !F-LPARKER-125 (CAMI)
   Print $PER051_LAST'                    (,+5,08)                    !F-LPARKER-125 (CAMI)

   Print $PER051_HOME_DEPT               (+1,3,10)                    !F-LPARKER-125 (CAMI)
   Print $PER051_NAME                     (,+7,14)                    !F-LPARKER-125 (CAMI)
   Print $PER048_EMPLID                   (,+1,10)                    !F-LPARKER-125 (CAMI)
   Print $PER048_EMPL_NAME                (,+2,30)                    !F-LPARKER-125 (CAMI)
   Print $PER048_DATE                     (,+4,09)                    !F-LPARKER-125 (CAMI)
   Print $PER051_STATUS                   (,+3,06)                    !F-LPARKER-125 (CAMI)
   Print $PER051_SRVC                     (,+3,04)                    !F-LPARKER-125 (CAMI)
   Print $PER051_SRVC                     (,+5,05)                    !F-LPARKER-125 (CAMI)
   Print $PER051_SRVC                     (,+5,04)                    !F-LPARKER-125 (CAMI)
   Print $PER051_SRVC                     (,+5,04)                    !F-LPARKER-125 (CAMI)
   Print $PER048_ACCRUED                  (,+5,07)                    !F-LPARKER-125 (CAMI)
   Print $PER051_PROC_THRU                (,+2,14)                    !F-LPARKER-125 (CAMI)

   Print '----------'                    (+1,3,10)
   Print '--------------------'           (,+1,20)
   Print '----------'                     (,+1,10)
   Print '------------------------------' (,+2,30)
   Print '-----------'                    (,+2,11)
   Print '-------'                        (,+2,07)
   Print '-----'                          (,+2,05)
   Print '------'                         (,+4,06)
   Print '-----'                          (,+4,05)
   Print '-----'                          (,+4,05)
   Print '--------'                       (,+4,08)
   Print '--------------'                 (,+2,14)

end-heading

!***********************************************************************
! F-LPARKER-125 (CAMI)                                                 *
! Read language-dependent text from the database using PER051 program  *
! ids.                                                                 *
!***********************************************************************
begin-procedure REPORT-TRANSLATION

  let $language_cd = $PRCS_LANGUAGE_CD
  do Init_Report_Translation($ReportID,$Language_Cd)
  do Append_Report_Translation('PER048')

  do Get_Field_Information ('PER048', 'ACCRUED',      $PER048_ACCRUED,     #DW)
  do Get_Field_Information ('PER048', 'DATE',         $PER048_DATE,        #DW)
  do Get_Field_Information ('PER048', 'EMPLID',       $PER048_EMPLID,      #DW)
  do Get_Field_Information ('PER048', 'EMPLOYEE_NAME',$PER048_EMPL_NAME,   #DW)
  do Get_Field_Information ('PER048', 'NO_GROUP',     $PER048_NO_GROUP,    #DW)
  do Get_Field_Information ('PER048', 'SERVICE_GROUP',$PER048_SERVICE_GRP, #DW)
  do Get_Field_Information ('PER048', 'SERVICE_TYPE', $PER048_SERVICE_TYPE,#DW)
  do Get_Field_Information ('PER048', 'SHOW_1',       $PER048_SHOW_1,      #DW)
  do Get_Field_Information ('PER048', 'SHOW_2',       $PER048_SHOW_2,      #DW)
  do Get_Field_Information ('PER048', 'SHOW_3',       $PER048_SHOW_3,      #DW)

  do Get_Field_Information ('PER051', 'ACCR',         $PER051_ACCR,        #DW)
  do Get_Field_Information ('PER051', 'EXT',          $PER051_EXT,         #DW)
  do Get_Field_Information ('PER051', 'HOME_DEPT',    $PER051_HOME_DEPT,   #DW)
  do Get_Field_Information ('PER051', 'LAST',         $PER051_LAST,        #DW)
  do Get_Field_Information ('PER051', 'NAME',         $PER051_NAME,        #DW)
  do Get_Field_Information ('PER051', 'PRIOR',        $PER051_PRIOR,       #DW)
  do Get_Field_Information ('PER051', 'PROC_THRU',    $PER051_PROC_THRU,   #DW)
  do Get_Field_Information ('PER051', 'REPORT_TITLE', $REPORTTITLE,        #DW)
  do Get_Field_Information ('PER051', 'REQD',         $PER051_REQD,        #DW)
  do Get_Field_Information ('PER051', 'SRVC',         $PER051_SRVC,        #DW)
  do Get_Field_Information ('PER051', 'START',        $PER051_START,       #DW)
  do Get_Field_Information ('PER051', 'STATUS',       $PER051_STATUS,      #DW)
  do Get_Field_Information ('PER051', 'TEN_SERV',     $PER051_TEN_SERV,    #DW)
  do Get_Field_Information ('PER051', 'TENURE',       $PER051_TENURE,      #DW)
  do Get_Field_Information ('PER051', 'YRS_TO',       $PER051_YRS_TO,      #DW)

end-procedure

!***********************************************************************
! Procedure: INIT-REPORT                                               *
! Descr:     Performs the application initializations.  Formats var-   *
!            iables for use.  Calls the procedures to get input parms. *
!                                                                      *
! Called by: BEGIN-REPORT                                              *
!***********************************************************************
begin-procedure Init-Report

  move 'PER051'             to $ReportID

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init
  do REPORT-TRANSLATION                                               !F-LPARKER-125 (CAMI)

  if $prcs_process_instance = ''
    show $PER048_SHOW_1                                               !F-LPARKER-125 (CAMI)
    show $PER048_SHOW_2                                               !F-LPARKER-125 (CAMI)
    show $PER048_SHOW_3                                               !F-LPARKER-125 (CAMI)
    !NOTE -- The call to "Ask-Parameters" is provided only to assist in
    !        only to assist in debugging or program modification.
    !        Uncomment Prompts for SQRW development/testing ONLY!!
    ! do ASK-PARAMETERS
  else
    do SELECT-PARAMETERS
  end-if

  if #Ten_MaxSvc = 0
    let #Ten_MaxSvc = 99999.99
  end-if

  if $Ten_Group <> ''
    move $Ten_Group to $Last_Group
    do LOAD-GROUP-DESCRIPTION
  end-if

 do SET-TENSRVC-SELECTION

end-procedure


!***********************************************************************
! Procedure: ASK-PARAMETERS                                            *
! Descr:     Gets run-time parameters from the user where the program  *
!            is not executed through the process scheduler interface   *
!                                                                      *
! Called by: INIT-REPORT                                               *
!***********************************************************************
Begin-Procedure ASK-PARAMETERS


  input $Ten_BU maxlen=5 'Enter Business Unit' type=char

  input $Ten_Dept maxlen=10 'Enter Department ID' type=char

  input $Ten_Group maxlen=6 'Enter Calc Group' type=char
  uppercase $Ten_Group

  input $Ten_MinSvc maxlen=5 'Minimum Service Amount' type=number
  let #Ten_MinSvc = $Ten_MinSvc

  input $Ten_MaxSvc maxlen=5 'Maximum Service Amount' type=number
  let #Ten_MaxSvc = $Ten_MaxSvc

  input $Ten_SortIn maxlen=1 'Service Sort Param (A/D)' type=char
  uppercase $Ten_SortIn


  if ($Ten_Group = 'QUIT')
     display ' '
     display 'Program aborted by user'
     stop quiet
  end-if

End-Procedure ASK-PARAMETERS


!***********************************************************************
! Procedure: GET_VALUES                                                *
! Descr:     Assigns variable read from the run control record to      *
!            program variables.  Mandatory module called from the      *
!            run control select module.                                *
!                                                                      *
! Called by: SELECT-PARAMETERS                                         *
!***********************************************************************
begin-procedure GET-VALUES

  let $Ten_BU       = upper(rtrim(&RUN_CNTL_EG.BUSINESS_UNIT,' '))
  let $Ten_Dept     = upper(rtrim(&RUN_CNTL_EG.DEPTID,' '))
  let $Ten_Group    = upper(rtrim(&RUN_CNTL_EG.EG_GROUP, ' '))
  let #Ten_MinSvc   = &RUN_CNTL_EG.MIN_AMT
  let #Ten_MaxSvc   = &RUN_CNTL_EG.MAX_AMT
  let $Ten_SortIn   = upper(&RUN_CNTL_EG.SORT_A_D)

end-procedure GET-VALUES


!***********************************************************************
! Procedure: SET-TenSRVC-SELECTION                                     *
! Descr:     Assigns variable read from the run control record to      *
!            where clause substitutions for processing.  Where no parm *
!            has been supplied, the search is set to be global.        *
!                                                                      *
! Called by: INIT-REPORT                                               *
!***********************************************************************
Begin-Procedure SET-TENSRVC-SELECTION

  if $Ten_BU = ''
    let $BUnit_Srch = 'CTL.SETCNTRLVALUE'
  else
    let $BUnit_Srch = '''' || $Ten_BU || ''''
  end-if

  if $Ten_Dept = ''
    let $DeptID_Srch = 'Ten.EG_TENURE_HOME'
  else
    let $DeptID_Srch = '''' || $Ten_Dept || ''''
  end-if

  if $Ten_Group = ''
    let $CGrp_Srch = 'Ten.EG_GROUP'
  else
    let $CGrp_Srch = '''' || $Ten_Group || ''''
  end-if


  if $Ten_Sortin = 'A'
    let $SortIn = 'ASC'
  else
    let $SortIn = 'DESC'
  end-if

End-Procedure SET-TENSRVC-SELECTION


!***********************************************************************
! Procedure: PROCESS-MAIN                                              *
! Descr:     Main Select for this program.  Selects data from PS_EG_   *
!            TENURE_DATA.                                              *
!                                                                      *
! Called by: BEGIN-REPORT                                              *
!***********************************************************************
begin-procedure PROCESS-MAIN

  let #First_Pass = 1

Begin-SELECT
Ten.EMPLID
PDT.NAME
Ten.EG_GROUP            () ON-BREAK LEVEL=1 PRINT=NEVER SAVE=$Sav_Group
                                    BEFORE=TRIGGER-PROC-HEADER
Ten.SETID
Ten.EG_TENURE_HOME      () ON-BREAK LEVEL=3 PRINT=NEVER BEFORE=TRIGGER-DEPT-HEADER
Ten.EG_TRACK_HIRE_DT
Ten.TENURE_STATUS
Ten.EG_TL_REQ_SVC
Ten.EG_TL_EXT_SVC
Ten.EG_ACCR_SVC
Ten.EG_ADD_REQ_SVC
Ten.LAST_PROC_DT

  let $Ten_Group     = rtrim(&Ten.EG_GROUP, ' ')
  let $EmplID        = rtrim(&Ten.EMPLID,' ')
  let $Name          = rtrim(&PDT.NAME,' ')
  let $Accr_Svc       = edit(&Ten.EG_ACCR_SVC,'99.999')
  let $Req_Svc        = edit(&Ten.EG_TL_REQ_SVC,'99.999')
  let $Extend_Svc     = edit(&Ten.EG_TL_EXT_SVC,'99.999')
  let $Add_Req_Svc    = edit(&Ten.EG_ADD_REQ_SVC, '99.999')

   do LOAD-STARTUP-CREDIT
  let $StartUp        = edit(#StartUp, '99.9999')

   If #Header_Break
      If #First_Pass
         move 0 to #First_Pass
      Else
         new-page
      End-if
      Move $Ten_Group to $Last_Group
      do LOAD-GROUP-DESCRIPTION
      move 0 to #Header_Break
   end-if

   If #Dept_Break
      Print $DeptID                          (+1,3,10)
      Print $DeptName                         (,14,20)
      move 0 to #Dept_Break
   Else
      Print ' '                              (+1,3,20)
   End-If

   Print $EmplID                              (,35,10)
   Print $Name                                (,47,30)
   Print &Ten.EG_TRACK_HIRE_DT                (,79,11)
   Print &Ten.TENURE_STATUS                   (,94,05)
   Print $Req_Svc                            (,100,06)
   Print $Extend_Svc                         (,110,06)
   Print $StartUp                            (,119,06)
   Print $Accr_Svc                           (,128,06)
   Print $Add_Req_Svc                        (,140,06)
   Print &Ten.LAST_PROC_DT                   (,148,11)

FROM PS_EG_TENURE_DATA Ten
   , PS_PERSON_NAME PDT
WHERE PDT.EMPLID = Ten.EMPLID
  AND Ten.EG_TENURE_HOME = [$DeptID_Srch]
  AND Ten.EG_GROUP = [$CGrp_Srch]
  AND Ten.SETID IN (SELECT CTL.SETID
                     FROM PS_SET_CNTRL_REC CTL
                     WHERE CTL.SETCNTRLVALUE = [$BUnit_Srch]
                       AND CTL.REC_GROUP_ID = 'HR_01'
                       AND CTL.RECNAME='DEPT_TBL')
  ORDER BY Ten.EG_GROUP,Ten.EG_TENURE_HOME,Ten.EG_ACCR_SVC [$SortIn]
end-SELECT

End-procedure PROCESS-MAIN


!***********************************************************************
! Procedure: TRIGGER-PROC-HEADER                                       *
! Descr:     Loads values for EG_GROUP and FUNCTION_RESULT_NM into     *
!             the last report header line when a break occurs.         *
!                                                                      *
! Called by: PROCESS-MAIN (ON-BREAK: EG_GROUP and FUNCTION_RESULT_NM)  *
!***********************************************************************
Begin-Procedure TRIGGER-PROC-HEADER

   let #Header_Break = 1

End-Procedure TRIGGER-PROC-HEADER


!***********************************************************************
! Procedure: TRIGGER-DEPT-HEADER                                       *
! Descr:     Loads values for department header and prints header      *
!            when a break occurs.                                      *
!                                                                      *
! Called by: PROCESS-MAIN (ON-BREAK for DEPTID)                        *
!***********************************************************************
Begin-Procedure TRIGGER-DEPT-HEADER

   let #Dept_Break         = 1
   let $DeptID             = &Ten.EG_TENURE_HOME
   let $SetID              = &Ten.SETID
   do Get-Department-Name-With-SetId

End-Procedure TRIGGER-DEPT-HEADER


!***********************************************************************
! Procedure: LOAD-STARTUP-CREDIT                                       *
! Descr:     Total startup credits for the employee                    *
!                                                                      *
!***********************************************************************
Begin-Procedure LOAD-STARTUP-CREDIT

let #StartUp = 0

begin-SELECT
ST.EG_START_UP_CR
ST.EG_ACCR_FLAG

   let #StartUp =  &ST.EG_START_UP_CR + #StartUp

FROM PS_EG_PRIOR_CREDIT ST
WHERE ST.EMPLID = $EMPLID
  AND ST.EG_ACCR_FLAG = 'Y'

end-SELECT

End-Procedure LOAD-STARTUP-CREDIT


!***********************************************************************
! Procedure: LOAD-GROUP-DESCRIPTION                                    *
! Descr:     Obtains Description for Calc Group for use in the heading *
!            line.  Concatenates result.                               *
!                                                                      *
! Called by: INIT-REPORT                                               *
!***********************************************************************
Begin-Procedure LOAD-GROUP-DESCRIPTION

   move $PER048_NO_GROUP to $Grp_Descr                                !F-LPARKER-125 (CAMI)

begin-SELECT
PG1.DESCR

   let $Grp_Descr = rtrim(&PG1.DESCR,' ')
   let $Ten_Group_Descr = $Last_Group || ' (' || rtrim($Grp_Descr,' ') || ')'

FROM PS_EG_CALC_GRP_TBL PG1
WHERE PG1.EG_GROUP = $Last_Group
end-SELECT

End-Procedure LOAD-GROUP-DESCRIPTION


!***********************************************************************
! Procedure: WRAP-UP                                                   *
! Descr:     Deletes Run Control record and performs general           *
!            housekeeping activies.                                    *
!                                                                      *
! Called by: BEGIN-REPORT                                              *
!***********************************************************************
Begin-Procedure WRAP-UP

   do Delete-Run-Control
   do Commit-Transaction
   do Reset
   do Successful-EOJ

End-Procedure WRAP-UP


!***********************************************************************
! Procedure: DELETE-RUN-CONTROL                                        *
! Descr:     Deletes run control information from run control table.   *
!                                                                      *
! Called by: WRAPUP                                                    *
!***********************************************************************
Begin-Procedure DELETE-RUN-CONTROL

   let $SQL-STATEMENT = 'PER051.SQR, DELETE-RUN-CONTROL, PS_RUN_CNTL_EG'

begin-SQL on-error=SQL-Error
DELETE FROM PS_RUN_CNTL_EG
WHERE OPRID       = $Prcs_OprID
  AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-SQL

End-Procedure DELETE-RUN-CONTROL


!***********************************************************************
! "Include" modules containing various called procedures               *
!***********************************************************************
#include 'egrnctl1.sqc'  !Get run control parameter values             *
#include 'stdapi.sqc'    !Routines to update run status                *
#Include 'reset.sqc'     !Reset printer procedure                      *
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure               *
#Include 'datetime.sqc'  !Routines for date and time formatting        *
#Include 'number.sqc'    !Routines to format numbers                   *
#include 'readxlat.sqc'  !Read Translate Table                         *
#include 'getempnm.sqc'  !Get Employee Name                            *
#include 'rotname1.sqc'  !Rotate Name                                  *
#include 'getdptnm.sqc'  !Get Department Name                          *
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language      * !F-LPARKER-125 (CAMI)
!***********************************************************************
