!********************************************************
!  HRS035.SQR - Internet Applicant Analysis             !
!********************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/08/08:04:31:02                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689848                                              !
!                                                                      *
!***********************************************************************

! Uncomment the following line to have debug values put into the sqr.log
! #DEFINE DEBUGHRS035


#include 'setenv.sqc'   !Set environment

Begin-Setup

   #Include 'ptpsl177.sqc'  !Printer and page-size initialization

End-Setup


begin-program

#IFDEF DEBUGHRS035
  DISPLAY 'FLOW: Program '
#ENDIF

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main

!********************************************************************
!  Print End-of-Report message on the very last page
!********************************************************************
  ALTER-PRINTER point-size=12

  print '*** End of Report ***' (+4,1) Bold Center

  do Stdapi-Term

end-program


begin-Heading 9
#IFDEF DEBUGHRS035
  DISPLAY 'FLOW: Header'
#ENDIF

! Print CONFIDENTIAL in big letters
!-----------------------------------------

    ALTER-PRINTER point-size=26

    PRINT 'CONFIDENTIAL'                                              (1, 67) BOLD


! Print the title of the report in big letters
!---------------------------------------------
   ALTER-PRINTER point-size=18

   PRINT $ReportTitle                                                 (3, 63) BOLD

   ALTER-PRINTER point-size=8

   let $ReportIdOutput = 'Report Id: ' || $ReportId
   print $ReportIdOutput                                              (3, 1)

   page-number                                                        (1,168)  'Page No. '

! Format the date (strip off the time) and print it. 

   do Format-DateTime($AsOfToday, $SystemDtOutput, {DEFDATE},'','')
   let $RunDateOutput = 'Run: ' || $SystemDtOutput || ' ' || Substr($AsOfNow, 1, 8)
   Print $RunDateOutput                                               (3,156)


   ALTER-PRINTER point-size=10

   GRAPHIC (4, 1, 180) Horz-line

! Print Report section heading

   PRINT $Section_Title                                               (6, 1) BOLD underline

   ALTER-PRINTER point-size=8

! Print Column Headings

   if $Section = '5'
      PRINT $HD_SetId                                                 (7, #Col1)  WRAP 8 3
      PRINT $HD_BusUnit                                               (7, #Col2)  WRAP 8 3
      PRINT $HD_Company                                               (7, #Col3)  WRAP 8 3
      PRINT $HD_Position                                              (7, #Col4)  WRAP 8 3
      PRINT $HD_JobCode                                               (7, #Col5)  WRAP 8 3
      PRINT $HD_ApplicName                                            (7, #Col6)  WRAP 16 3
      PRINT $HD_ApplicNum                                             (7, #Col8)  WRAP 9 3
      PRINT $HD_ApplicRef                                             (7, #Col9)  WRAP 9 3
      PRINT $HD_ApplicStatus                                          (7, #Col10) WRAP 9 3
      PRINT $HD_StatusRsn                                             (7, #Col11) WRAP 8 3
      PRINT $HD_Gender                                                (7, #Col12) WRAP 8 3
      PRINT $HD_EthnicGrp                                             (7, #Col13) WRAP 8 3
      PRINT $HD_Total                                                 (7, #Col14) WRAP 8 3
   else
      PRINT $HD_JobOpening                                            (7, #Col1)  WRAP 8 3
      PRINT $HD_SetId                                                 (7, #Col2)  WRAP 8 3
      PRINT $HD_BusUnit                                               (7, #Col3)  WRAP 8 3
      PRINT $HD_Company                                               (7, #Col4)  WRAP 8 3
      PRINT $HD_PostDur                                               (7, #Col5)  WRAP 16 3
      PRINT $HD_Position                                              (7, #Col6)  WRAP 8 3
      PRINT $HD_JobCode                                               (7, #Col7)  WRAP 8 3
      PRINT $HD_FillOpenings                                          (7, #Col8)  WRAP 8 3
      PRINT $HD_ApplicName                                            (7, #Col9)  WRAP 16 3
      PRINT $HD_ApplicNum                                             (7, #Col10) WRAP 9 3
      PRINT $HD_ApplicRef                                             (7, #Col11) WRAP 9 3

      If $Section = '1' or $Section = '2'
         PRINT $HD_ApplicStatus                                       (7, #Col12) WRAP 9 3
         PRINT $HD_StatusRsn                                          (7, #Col13) WRAP 8 3
         PRINT $HD_Gender                                             (7, #Col14) WRAP 8 3
         PRINT $HD_EthnicGrp                                          (7, #Col15) WRAP 8 3
         PRINT $HD_Total                                              (7, #Col16) WRAP 8 3

      else
      If $Section = '3'
         PRINT $HD_ApplicStatus                                       (7, #Col12) WRAP 9 3
         PRINT $HD_StatusRsn                                          (7, #Col13) WRAP 8 3
         PRINT $HD_ScreenLvl                                          (7, #Col14) WRAP 9 3
         PRINT $HD_Gender                                             (7, #Col15) WRAP 8 3
         PRINT $HD_EthnicGrp                                          (7, #Col16) WRAP 8 3
         PRINT $HD_Total                                              (7, #Col17) WRAP 8 3

      else
      If $Section = '4'
         PRINT $HD_SrchName                                           (7, #Col12) WRAP 9 3
         PRINT $HD_SrchDate                                           (7, #Col13) WRAP 9 3
         PRINT $HD_SrchRsltPct                                        (7, #Col14) WRAP 9 3
         PRINT $HD_Gender                                             (7, #Col15) WRAP 8 3
         PRINT $HD_EthnicGrp                                          (7, #Col16) WRAP 8 3
         PRINT $HD_Total                                              (7, #Col17) WRAP 8 3
      end-if
      end-if
      end-if
   end-if

! Set back to the default setting for the document

   ALTER-PRINTER point-size=7


End-Heading


!----------------------------------------------------------------------
!---------Footer-------------------------------------------------------
!----------------------------------------------------------------------
! The 'fine print' at the bottom of the page
!----------------------------------------------------------------------

Begin-Footing 2

#IFDEF DEBUGHRS035
  DISPLAY 'FLOW: Footer'
#ENDIF


! Print Confidental warning
!-----------------------------------------------
   ALTER-PRINTER point-size=7

   PRINT $FT_CpyRtStmt (2, 1)


! Print Copyright notice
!-----------------------------------------------
   ALTER-PRINTER point-size=5

   do Format-DateTime($AsOfToday, $AsOfOutput, {DEFDATE},'','')

   let $TheYear =  {ps-substr}($AsOfOutput, 7, 4)

   let $FooterOutput = $ReportTitle || ' ' || $FT_CpyRt || ' ' || $TheYear || ' PeopleSoft, Inc.'

   PRINT $FooterOutput                                             (2, 80)

   ALTER-PRINTER point-size=7

End-Footing


!**********************************************************************
!       Init-Report
!**********************************************************************
begin-procedure Init-Report

#IFDEF DEBUGHRS035
  DISPLAY 'FLOW: Init-Report'
#ENDIF

  do Stdapi-Init

  do Prep-Global

  if $prcs_process_instance = ''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
     STOP QUIET
  else
     do Select-Parameters
  end-if

  ALTER-PRINTER font=4

  display '$proc ' noline
  display $prcs_process_instance
  display '#proc' noline
  display #prcs_process_instance


#IFDEF DEBUGHRS035
  Show 'Establishment: ' $Estab
  Show 'FromDate: ' $FromDate
  Show 'ThruDate: ' $ThruDate
  Show 'Language: ' $Language_Cd
#ENDIF

end-procedure

!**********************************************************************
!**********************************************************************
!Get-Values
!**********************************************************************
!**********************************************************************
begin-procedure Get-Values
#IFDEF DEBUGHRS035
  DISPLAY 'FLOW: Get-Values'
#ENDIF

  let $FromDate = &RUN_CNTL_REG.fromdate
  let $ThruDate = &RUN_CNTL_REG.thrudate

  if $FromDate = ''
     do Format-DateTime('19000101',$FromDate,{DEFCMP},'','native')
  end-if

  if $ThruDate = ''
     move $AsOfToday to $ThruDate
  end-if

  LET $language_cd = RTRIM(&RC.LANGUAGE_CD, ' ')

  let $Estab      = RTrim (&RUN_CNTL_REG.ESTABID, ' ')
  let #ParamJO    = &RUN_CNTL_REG.HRS_JOB_OPENING_ID
  let $ParamJF    = Rtrim(&RUN_CNTL_REG.JOB_FAMILY, ' ')
  let $ParamBU    = Rtrim(&RUN_CNTL_REG.BUSINESS_UNIT, ' ')
  let $ParamJC    = Rtrim(&RUN_CNTL_REG.JOBCODE, ' ')
  let $ParamPos   = Rtrim(&RUN_CNTL_REG.POSITION_NBR, ' ')
  let $ParamSex   = Rtrim(&RUN_CNTL_REG.SEX, ' ')
  let $ParamEG    = Rtrim(&RUN_CNTL_REG.ETHNIC_GROUP, ' ')

end-procedure Get-Values

!**********************************************************************
!**********************************************************************
!       Process-Main
!**********************************************************************
!**********************************************************************
Begin-Procedure Process-Main
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:Process-Main'
#ENDIF

   let $Quote = ''''

   DO Process-Section1
   DO Process-Section2
   DO Process-Section3
   DO Process-Section4
   DO Process-Section5

End-Procedure


!**********************************************************************
!**********************************************************************
!       Process-Section1
!       Internet Applicants Associated With Job Openings
!**********************************************************************
!**********************************************************************
Begin-Procedure Process-Section1
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:Process-Section1'
#ENDIF

   let $Section = '1'
   let $Section_Title = $Section1_Title

   let #Col1 = 1
   let #Col2 = 9
   let #Col3 = 16
   let #Col4 = 25
   let #Col5 = 34
   let #Col6 = 55
   let #Col7 = 65
   let #Col8 = 74
   let #Col9 = 83
   let #Col10 = 106
   let #Col11 = 118
   let #Col12 = 128
   let #Col13 = 139
   let #Col14 = 147
   let #Col15 = 156
   let #Col16 = 164
   let #Col17 = 172

   let $AddFrom  = ''
   let $AddWhere = ''

   do Process-Section

   if #Total > 0 
      do Process-Section-Summary
   end-if

   NEW-PAGE

end-Procedure


!**********************************************************************
!**********************************************************************
!       Process-Section-Summary
!       Print summary by Ethnic Group
!**********************************************************************
!**********************************************************************
Begin-Procedure Process-Section-Summary
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:Process-Section-Summary'
#ENDIF

   Next-Listing skiplines=1 need=8

   Print $HD_Gender                                   (+1, 63)

   Begin-Select
X.FIELDVALUE
X.XLATSHORTNAME
X.XLATLONGNAME

         If RTrim(&X.FIELDVALUE, ' ') = '1' 
            Print &X.XLATSHORTNAME                    (0, 75)
         else
         If RTrim(&X.FIELDVALUE, ' ') = '2' 
            Print &X.XLATSHORTNAME                    (0, 87)
         else
         If RTrim(&X.FIELDVALUE, ' ') = '3' 
            Print &X.XLATSHORTNAME                    (0, 99)
         else
         If RTrim(&X.FIELDVALUE, ' ') = '4' 
            Print &X.XLATSHORTNAME                    (0, 111)
         else
         If RTrim(&X.FIELDVALUE, ' ') = '5' 
            Print &X.XLATSHORTNAME                    (0, 123)
         else
         If RTrim(&X.FIELDVALUE, ' ') = '6' 
            Print &X.XLATLONGNAME                     (0, 145, 15)
         else
         If RTrim(&X.FIELDVALUE, ' ') = '7' 
            Print &X.XLATSHORTNAME                    (0, 135)
         end-if
         end-if
         end-if
         end-if
         end-if
         end-if
         end-if

      From PSXLATITEM X
     Where X.FIELDNAME  = 'ETHNIC_GROUP'
       and X.EFFDT      = (Select Max(X1.EFFDT)
                             From PSXLATITEM X1
                            Where X1.FIELDNAME = X.FIELDNAME
                              and X1.EFFDT    <= $ThruDate)
       and X.EFF_STATUS = 'A'
   end-Select

   Print $HD_Total                                    (0, 164)
   Position                                           (+1)


   let #Total = 0
   let #TotalAll = 0
   let #TotalSex = #TotalEG1F + #TotalEG2F + #TotalEG3F + #TotalEG4F + #TotalEG5F + #TotalEG6F + #TotalEG7F

   if #TotalSex > 0
      Print 'F'                                       (0, 65)
      Print #TotalEG1F                                (0, 74) edit 999999
      Print #TotalEG2F                                (0, 86) edit 999999
      Print #TotalEG3F                                (0, 98) edit 999999
      Print #TotalEG4F                                (0, 110) edit 999999
      Print #TotalEG5F                                (0, 122) edit 999999
      Print #TotalEG7F                                (0, 134) edit 999999
      Print #TotalEG6F                                (0, 146) edit 999999

      Print #TotalSex                                 (0, 162) edit 999999

      Position                                        (+1)

      let #TotalAll = #TotalAll + #TotalSex
   end-if

   let #TotalSex = #TotalEG1M + #TotalEG2M + #TotalEG3M + #TotalEG4M + #TotalEG5M + #TotalEG6M + #TotalEG7M

   if #TotalSex > 0
      Print 'M'                                       (0, 65)
      Print #TotalEG1M                                (0, 74) edit 999999
      Print #TotalEG2M                                (0, 86) edit 999999
      Print #TotalEG3M                                (0, 98) edit 999999
      Print #TotalEG4M                                (0, 110) edit 999999
      Print #TotalEG5M                                (0, 122) edit 999999
      Print #TotalEG7M                                (0, 134) edit 999999
      Print #TotalEG6M                                (0, 146) edit 999999

      Print #TotalSex                                 (0, 162) edit 999999

      Position                                        (+1)

      let #TotalAll = #TotalAll + #TotalSex
   end-if

   let #TotalSex = #TotalEG1U + #TotalEG2U + #TotalEG3U + #TotalEG4U + #TotalEG5U + #TotalEG6U + #TotalEG7U

   if #TotalSex > 0
      Print 'U'                                       (0, 65)
      Print #TotalEG1U                                (0, 74) edit 999999
      Print #TotalEG2U                                (0, 86) edit 999999
      Print #TotalEG3U                                (0, 98) edit 999999
      Print #TotalEG4U                                (0, 110) edit 999999
      Print #TotalEG5U                                (0, 122) edit 999999
      Print #TotalEG7U                                (0, 134) edit 999999
      Print #TotalEG6U                                (0, 146) edit 999999

      Print #TotalSex                                 (0, 162) edit 999999

      Position                                        (+1)

      let #TotalAll = #TotalAll + #TotalSex
   end-if

   Print $HD_Total                                    (+1,151)
   Print #TotalAll                                    (0, 162) edit 999999 underline

End-Procedure


!**********************************************************************
!**********************************************************************
!       Process-Section2
!       Applicants for Job Opening in Withdrawn Status
!**********************************************************************
!**********************************************************************
Begin-Procedure Process-Section2
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:Process-Section2'
#ENDIF

   let $Section = '2'
   let $Section_Title = $Section2_Title

   let $AddFrom  = ''
   let $AddWhere = ' and R.STATUS_CODE = ' || $Quote || '120' || $Quote

   do Process-Section

   if #Total > 0 
      do Process-Section-Summary
   end-if

   NEW-PAGE

end-Procedure


!**********************************************************************
!**********************************************************************
!       Process-Section
!       Create a section of the report
!**********************************************************************
!**********************************************************************
Begin-Procedure Process-Section
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:Process-Section'
   show '$AddWhere=' $AddWhere
#ENDIF

   let #Colsx = #Col14 + 2
   let #Colsn = #Col11 - 1

   let #TotalEG1F = 0
   let #TotalEG1M = 0
   let #TotalEG1U = 0
   let #TotalEG2F = 0
   let #TotalEG2M = 0
   let #TotalEG2U = 0
   let #TotalEG3F = 0
   let #TotalEG3M = 0
   let #TotalEG3U = 0
   let #TotalEG4F = 0
   let #TotalEG4M = 0
   let #TotalEG4U = 0
   let #TotalEG5F = 0
   let #TotalEG5M = 0
   let #TotalEG5U = 0
   let #TotalEG6F = 0
   let #TotalEG6M = 0
   let #TotalEG6U = 0
   let #TotalEG7F = 0
   let #TotalEG7M = 0
   let #TotalEG7U = 0

   let #Total = 0

   let $Params = ''
   if $Estab  <> ''
      let $Params = ' and J.ESTABID = ' || $Quote || $Estab || $Quote
   end-if
   if #ParamJO  <> 0
      move #ParamJO to $ParamJO
      let $Params = $Params || ' and R.HRS_JOB_OPENING_ID = ' || $ParamJO
   end-if
   if $ParamJF  <> ''
      let $Params = $Params || ' and J.JOB_FAMILY = ' || $Quote || $ParamJF || $Quote
   end-if
   if $ParamBU  <> ''
      let $Params = $Params || ' and J.BUSINESS_UNIT = ' || $Quote || $ParamBU || $Quote
   end-if
   if $ParamJC  <> ''
      let $Params = $Params || ' and J.HRS_PRM_JOBCODE = ' || $Quote || $ParamJC || $Quote
   end-if
   if $ParamPos <> ''
      let $Params = $Params || ' and J.HRS_PRM_POSITION   = ' || $Quote || $ParamPos || $Quote
   end-if
   if $ParamSex <> ''
      let $Params = $Params || ' and A.SEX   = ' || $Quote || $ParamSex || $Quote
   end-if
   if $ParamEG  <> ''
      let $Params = $Params || ' and Exists (Select ' || $Quote || 'X' || $Quote
      let $Params = $Params || '               From PS_HRS_APP_DIV_ETH E,'
      let $Params = $Params || '                    PS_HCR_ETHNC_GRP_I EG'
      let $Params = $Params || '              Where E.HRS_PERSON_ID     = R.HRS_PERSON_ID'
      let $Params = $Params || '                and E.PRIMARY_INDICATOR = ' || $Quote || 'Y' || $Quote
      let $Params = $Params || '                and E.HRS_REG_REGION   in (Select RR.REG_REGION'
      let $Params = $Params || '                                             From PS_REG_REGION_TBL RR'
      let $Params = $Params || '                                            Where RR.COUNTRY = ' || $Quote || 'USA' || $Quote || ')'
      let $Params = $Params || '                and EG.SETID            = (Select XX.SETID'
      let $Params = $Params || '                                             From PS_SET_CNTRL_REC XX'
      let $Params = $Params || '                                            Where XX.SETCNTRLVALUE = E.HRS_REG_REGION'
      let $Params = $Params || '                                              and XX.REC_GROUP_ID  = ' || $Quote || 'HR_11' || $Quote
      let $Params = $Params || '                                              and XX.RECNAME       = ' || $Quote || 'ETHNIC_GRP_TBL' || $Quote || ')'
      let $Params = $Params || '                and E.HRS_ETHNIC_GRP_CD = EG.ETHNIC_GRP_CD'
      let $Params = $Params || '                and EG.EFFDT            = (Select Max(E2.EFFDT)'
      let $Params = $Params || '                                             From PS_HCR_ETHNC_GRP_I E2'
      let $Params = $Params || '                                            Where E2.SETID         = EG.SETID'
      let $Params = $Params || '                                              and E2.ETHNIC_GRP_CD = EG.ETHNIC_GRP_CD'
      let $Params = $Params || '                                              and E2.EFFDT        <= ' || $Quote || $ThruDate || $Quote || ')'
      let $Params = $Params || '                and EG.ETHNIC_GROUP     = ' || $Quote || $ParamEG || $Quote || ')'
   end-if

   Begin-SELECT Distinct

R.HRS_JOB_OPENING_ID                                  (0, #Col1, 10) on-break Before = JO_Change

      if $Break <> 'Y'
         Position                                     (+1)
      else
         let $Break = 'N'
      end-if

JC.SETID
J.BUSINESS_UNIT
J.COMPANY
J.HRS_PRM_POSITION
J.HRS_PRM_JOBCODE
J.OPENINGS_CNT
R.STATUS_CODE
R.STATUS_REASON
AN.NAME_DISPLAY                                       (0, #Col9, 19)
R.HRS_PERSON_ID                                       (0, #Col10)
A.SEX                                                 (0, #Colsx, 10)
AP.HRS_AL_LOG_ID

      let $SetId          = &JC.SETID
      let $BusinessUnit   = &J.BUSINESS_UNIT
      let $Company        = &J.COMPANY
      let $Position       = &J.HRS_PRM_POSITION
      let $JobCode        = &J.HRS_PRM_JOBCODE
      let #OpeningsCnt    = &J.OPENINGS_CNT
      let $ApplicStatusCd = &R.STATUS_CODE
      let $StatusRsnCd    = &R.STATUS_REASON
      let #JobOpening     = &R.HRS_JOB_OPENING_ID
      let #PersonId       = &R.HRS_PERSON_ID
      let $Sex            = &A.SEX

      do Get-Ethnic-Group

      do Get-Descriptions

      Print $ApplicStatus                             (0, #Col12, 10)
      Print $StatusReason                             (0, #Col13, 10)
      Print $EthnicGrpDescr                           (0, #Col15, 10)

      Let #LogId = &AP.HRS_AL_LOG_ID
      Do GetSourceName
      Print $SourceName                               (0, #Colsn, 10)

      let #Job_Total = #Job_Total + 1

      From PS_HRS_RCMNT R,
           PS_HRS_JOB_OPENING J,
           PS_HRS_APP_PROFILE AP,
           PS_HRS_APPLICANT A,
           PS_HRS_APP_NAMES AN,
           PS_HRS_JOBCODE_I JC

     Where J.HRS_PRM_JOBCODE     = JC.JOBCODE
       and JC.EFFDT              = (Select Max(C1.EFFDT)
                                      From PS_HRS_JOBCODE_I C1
                                     Where C1.JOBCODE = JC.JOBCODE
                                       and C1.SETID   = JC.SETID
                                       and C1.EFFDT  <= $ThruDate)
       and R.HRS_JOB_OPENING_ID  = J.HRS_JOB_OPENING_ID
       and R.HRS_PERSON_ID       = AP.HRS_PERSON_ID
       and AP.HRS_PROFILE_SEQ    = (Select Max(APX.HRS_PROFILE_SEQ)
                                      From PS_HRS_APP_PROFILE APX
                                     Where APX.HRS_PERSON_ID = AP.HRS_PERSON_ID)
       and JC.SETID              = (Select XX.SETID
                                      From PS_SET_CNTRL_REC XX
                                     Where XX.SETCNTRLVALUE = J.BUSINESS_UNIT
                                       and XX.REC_GROUP_ID  = 'HR_02'
                                       and XX.RECNAME       = 'JOBCODE_TBL')
       and R.HRS_PERSON_ID       = A.HRS_PERSON_ID
       and A.STATUS_CODE        <> '030'
       and R.HRS_PERSON_ID       = AN.HRS_PERSON_ID
       and AN.NAME_TYPE          = 'PRI'
       and R.HRS_STATUS_DT Between $FromDate and $ThruDate
       [$Params]
       [$AddWhere]

      Order By R.HRS_JOB_OPENING_ID, J.HRS_PRM_POSITION, J.HRS_PRM_JOBCODE, R.HRS_PERSON_ID

   end-Select

   if #Job_Total > 0
      Print #Job_Total                                (0, #Col16) edit 999999
      let #Total = #Total + #Job_Total
      let #Job_Total = 0
   end-if

   Print $HD_Total                                    (+2,#Col15)
   Print #Total                                       (0, #Col16) edit 999999 underline

End-Procedure


!**********************************************************************
!**********************************************************************
!   Procedure GetSourceName:
!**********************************************************************
!**********************************************************************
Begin-Procedure GetSourceName
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:GetSourceName'
#ENDIF

   Let $SourceName = ' '

   Begin-Select
S.HRS_SOURCE_NAME
      Let $SourceName = &S.HRS_SOURCE_NAME

   From PS_HRS_AL_LOG_SRCE AL,
        PS_HRS_SOURCE S
  Where AL.HRS_AL_LOG_ID = #LogId
    and AL.HRS_AL_LOG_SRC_SEQ = (Select Min(ALX.HRS_AL_LOG_SRC_SEQ)
                                   From PS_HRS_AL_LOG_SRCE ALX
                                  Where ALX.HRS_AL_LOG_ID = AL.HRS_AL_LOG_ID)
    and S.HRS_SOURCE_ID = AL.HRS_SOURCE_ID

   end-Select

End-Procedure


!**********************************************************************
!**********************************************************************
!   Procedure JO_Change:
!   On change of Job Opening ID, print Job Opening details
!**********************************************************************
!**********************************************************************
Begin-Procedure JO_Change
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:JO_Change'
#ENDIF

   if #Job_Total > 0
      Print #Job_Total                       (0, #Col16) edit 999999
      let #Total = #Total + #Job_Total
      let #Job_Total = 0
   end-if

   let $Break        = 'Y'

   let $SetId        = &JC.SETID
   let $BusinessUnit = &J.BUSINESS_UNIT
   let $Company      = &J.COMPANY
   let $Position     = &J.HRS_PRM_POSITION
   let $JobCode      = &J.HRS_PRM_JOBCODE
   let #OpeningsCnt  = &J.OPENINGS_CNT

   Print $SetId                              (+2,#Col2, 8)
   Print $BusinessUnit                       (0, #Col3, 8)
   Print $Company                            (0, #Col4, 8)
   Print $Position                           (0, #Col6, 8)
   Print $JobCode                            (0, #Col7, 6)

   let #JobOpening     = &R.HRS_JOB_OPENING_ID
   do Get-Posting-Dates

   do Format-DateTime($PostOpen, $OpenOut, {DEFDATE}, '', '')
   do Format-DateTime($PostClose, $CloseOut, {DEFDATE}, '', '')
   let $PostDur = $OpenOut || '-' || $CloseOut

   Print $PostDur                            (0, #Col5) 
   Print #OpeningsCnt                        (0, #Col8, 8) Edit 99999

End-Procedure


!**********************************************************************
!**********************************************************************
!       Process-Section3
!       Applicants Withdrawn Via Job Opening Screening
!**********************************************************************
!**********************************************************************
Begin-Procedure Process-Section3
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:Process-Section3'
#ENDIF

   let $Section = '3'
   let $Section_Title = $Section3_Title
   let #Col6  = #Col6  - 1
   let #Col15 = #Col15 + 2
   let #Col16 = #Col16 + 2
   let #Col17 = #Col17 + 4
   let #Colsx = #Col15 + 2
   let #Total = 0

   let #TotalEG1F = 0
   let #TotalEG1M = 0
   let #TotalEG1U = 0
   let #TotalEG2F = 0
   let #TotalEG2M = 0
   let #TotalEG2U = 0
   let #TotalEG3F = 0
   let #TotalEG3M = 0
   let #TotalEG3U = 0
   let #TotalEG4F = 0
   let #TotalEG4M = 0
   let #TotalEG4U = 0
   let #TotalEG5F = 0
   let #TotalEG5M = 0
   let #TotalEG5U = 0
   let #TotalEG6F = 0
   let #TotalEG6M = 0
   let #TotalEG6U = 0
   let #TotalEG7F = 0
   let #TotalEG7M = 0
   let #TotalEG7U = 0

   let $Params = ''
   if $Estab  <> ''
      let $Params = ' and J3.ESTABID = ' || $Quote || $Estab || $Quote
   end-if
   if #ParamJO  <> 0
      move #ParamJO to $ParamJO
      let $Params = $Params || ' and R3.HRS_JOB_OPENING_ID = ' || $ParamJO
   end-if
   if $ParamJF  <> ''
      let $Params = $Params || ' and J3.JOB_FAMILY = ' || $Quote || $ParamJF || $Quote
   end-if
   if $ParamBU  <> ''
      let $Params = $Params || ' and J3.BUSINESS_UNIT = ' || $Quote || $ParamBU || $Quote
   end-if
   if $ParamJC  <> ''
      let $Params = $Params || ' and J3.HRS_PRM_JOBCODE = ' || $Quote || $ParamJC || $Quote
   end-if
   if $ParamPos <> ''
      let $Params = $Params || ' and J3.HRS_PRM_POSITION   = ' || $Quote || $ParamPos || $Quote
   end-if
   if $ParamSex <> ''
      let $Params = $Params || ' and A3.SEX   = ' || $Quote || $ParamSex || $Quote
   end-if
   if $ParamEG  <> ''
      let $Params = $Params || ' and Exists (Select ' || $Quote || 'X' || $Quote
      let $Params = $Params || '               From PS_HRS_APP_DIV_ETH E,'
      let $Params = $Params || '                    PS_HCR_ETHNC_GRP_I EG'
      let $Params = $Params || '              Where E.HRS_PERSON_ID     = R3.HRS_PERSON_ID'
      let $Params = $Params || '                and E.PRIMARY_INDICATOR = ' || $Quote || 'Y' || $Quote
      let $Params = $Params || '                and E.HRS_REG_REGION   in (Select RR.REG_REGION'
      let $Params = $Params || '                                             From PS_REG_REGION_TBL RR'
      let $Params = $Params || '                                            Where RR.COUNTRY = ' || $Quote || 'USA' || $Quote || ')'
      let $Params = $Params || '                and EG.SETID            = (Select XX.SETID'
      let $Params = $Params || '                                             From PS_SET_CNTRL_REC XX'
      let $Params = $Params || '                                            Where XX.SETCNTRLVALUE = E.HRS_REG_REGION'
      let $Params = $Params || '                                              and XX.REC_GROUP_ID  = ' || $Quote || 'HR_11' || $Quote
      let $Params = $Params || '                                              and XX.RECNAME       = ' || $Quote || 'ETHNIC_GRP_TBL' || $Quote || ')'
      let $Params = $Params || '                and E.HRS_ETHNIC_GRP_CD = EG.ETHNIC_GRP_CD'
      let $Params = $Params || '                and EG.EFFDT            = (Select Max(E2.EFFDT)'
      let $Params = $Params || '                                             From PS_HCR_ETHNC_GRP_I E2'
      let $Params = $Params || '                                            Where E2.SETID         = EG.SETID'
      let $Params = $Params || '                                              and E2.ETHNIC_GRP_CD = EG.ETHNIC_GRP_CD'
      let $Params = $Params || '                                              and E2.EFFDT        <= ' || $Quote || $ThruDate || $Quote || ')'
      let $Params = $Params || '                and EG.ETHNIC_GROUP     = ' || $Quote || $ParamEG || $Quote || ')'
   end-if

   Begin-SELECT Distinct

R3.HRS_JOB_OPENING_ID                                  (0, #Col1, 10) on-break Before = JO_Change3

      if $Break <> 'Y'
         Position                                      (+1)
      else
         let $Break = 'N'
      end-if

JC3.SETID
J3.BUSINESS_UNIT
J3.COMPANY
J3.HRS_PRM_POSITION
J3.HRS_PRM_JOBCODE
J3.OPENINGS_CNT
AN3.NAME_DISPLAY                                       (0, #Col9,  19)
R3.HRS_PERSON_ID                                       (0, #Col10)
AP3.HRS_AL_LOG_ID
R3.STATUS_CODE
R3.STATUS_REASON
SL3.HRS_SCREENING_ID                                   (0, #Col14, 8)  edit 99999999
A3.SEX                                                 (0, #Colsx, 10)

      let $SetId          = &JC3.SETID
      let $BusinessUnit   = &J3.BUSINESS_UNIT
      let $Company        = &J3.COMPANY
      let #JobOpening     = &R3.HRS_JOB_OPENING_ID
      let #OpeningsCnt    = &J3.OPENINGS_CNT
      let $ApplicStatusCd = &R3.STATUS_CODE
      let $StatusRsnCd    = &R3.STATUS_REASON
      let #PersonId       = &R3.HRS_PERSON_ID
      let $Sex            = &A3.SEX

      do Get-Ethnic-Group
      do Get-Descriptions

      Print $ApplicStatus                             (0, #Col12, 10)
      Print $StatusReason                             (0, #Col13, 10)
      Print $EthnicGrpDescr                           (0, #Col16, 10)

      Let #LogId = &AP3.HRS_AL_LOG_ID
      Do GetSourceName
      Print $SourceName                               (0, #Colsn, 10)

      let #Job_Total = #Job_Total + 1

      From PS_HRS_RCMNT R3,
           PS_HRS_JOB_OPENING J3,
           PS_HRS_APP_PROFILE AP3,
           PS_HRS_APPLICANT A3,
           PS_HRS_APP_NAMES AN3,
           PS_HRS_JOBCODE_I JC3,
           PS_HRS_JO_SCR_LVL SL3,
           PS_HRS_JO_SCR_SUMM SS3,
           PS_HRS_SCR_RSLT SR3

     Where J3.HRS_PRM_JOBCODE     = JC3.JOBCODE
       and JC3.EFFDT              = (Select Max(C13.EFFDT)
                                       From PS_HRS_JOBCODE_I C13
                                      Where C13.JOBCODE = JC3.JOBCODE
                                        and C13.SETID   = JC3.SETID
                                        and C13.EFFDT  <= $ThruDate)
       and R3.HRS_JOB_OPENING_ID  = J3.HRS_JOB_OPENING_ID
       and R3.HRS_PERSON_ID       = AP3.HRS_PERSON_ID
       and AP3.HRS_PROFILE_SEQ    = (Select Max(APX.HRS_PROFILE_SEQ)
                                       From PS_HRS_APP_PROFILE APX
                                      Where APX.HRS_PERSON_ID = AP3.HRS_PERSON_ID)
       and JC3.SETID              = (Select XX3.SETID
                                      From PS_SET_CNTRL_REC XX3
                                     Where XX3.SETCNTRLVALUE = J3.BUSINESS_UNIT
                                       and XX3.REC_GROUP_ID  = 'HR_02'
                                       and XX3.RECNAME       = 'JOBCODE_TBL')
       and R3.HRS_PERSON_ID       = A3.HRS_PERSON_ID
and A3.APP_PER_STATUS     in ('N', 'A')
       and A3.STATUS_CODE        <> '030'
       and R3.HRS_PERSON_ID       = AN3.HRS_PERSON_ID
       and AN3.NAME_TYPE          = 'PRI'
       and R3.HRS_JOB_OPENING_ID  = SR3.HRS_JOB_OPENING_ID
       and R3.HRS_PERSON_ID       = SR3.HRS_PERSON_ID
       and R3.HRS_RCMNT_ID        = SR3.HRS_RCMNT_ID
       and SR3.HRS_JOB_OPENING_ID = SS3.HRS_JOB_OPENING_ID
       and SS3.HRS_JO_SCR_SUMM_ID = SL3.HRS_JO_SCR_SUMM_ID
       and SL3.HRS_JO_SCR_SEQ     = (Select Min(X.HRS_JO_SCR_SEQ)
                                       From PS_HRS_JO_SCR_LVL X
                                      Where X.HRS_JO_SCR_SUMM_ID = SL3.HRS_JO_SCR_SUMM_ID)
       and SL3.HRS_SCREENING_ID   = SR3.HRS_SCREENING_ID
      and SR3.STATUS_CODE         = SL3.HRS_SCR_STS_FAIL
       and R3.HRS_STATUS_DT Between $FromDate and $ThruDate
       [$Params]

      Order By R3.HRS_JOB_OPENING_ID, J3.HRS_PRM_POSITION, J3.HRS_PRM_JOBCODE, R3.HRS_PERSON_ID

   end-Select

   if #Job_Total > 0
      Print #Job_Total                                (0, #Col17) edit 999999
      let #Total = #Total + #Job_Total
      let #Job_Total = 0
   end-if

   Print $HD_Total                                    (+2,#Col16)
   Print #Total                                       (0, #Col17) edit 999999 underline

   if #Total > 0 
      do Process-Section-Summary
   end-if

   NEW-PAGE

end-Procedure


!**********************************************************************
!**********************************************************************
!   Procedure JO_Change3:
!   On change of Job Opening ID, print Job Opening details
!**********************************************************************
!**********************************************************************
Begin-Procedure JO_Change3
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:JO_Change3'
#ENDIF

   if #Job_Total > 0
      Print #Job_Total                       (0, #Col17) edit 999999
      let #Total = #Total + #Job_Total
      let #Job_Total = 0
   end-if

   let $Break        = 'Y'

   let $SetId        = &JC3.SETID
   let $BusinessUnit = &J3.BUSINESS_UNIT
   let $Company      = &J3.COMPANY
   let $Position     = &J3.HRS_PRM_POSITION
   let $JobCode      = &J3.HRS_PRM_JOBCODE
   let #OpeningsCnt  = &J3.OPENINGS_CNT

   Print $SetId                              (+2,#Col2, 8)
   Print $BusinessUnit                       (0, #Col3, 8)
   Print $Company                            (0, #Col4, 8)
   Print $Position                           (0, #Col6, 8)
   Print $JobCode                            (0, #Col7, 6)

   let #JobOpening   = &R3.HRS_JOB_OPENING_ID
   do Get-Posting-Dates

   do Format-DateTime($PostOpen, $OpenOut, {DEFDATE}, '', '')
   do Format-DateTime($PostClose, $CloseOut, {DEFDATE}, '', '')
   let $PostDur = $OpenOut || '-' || $CloseOut

   Print $PostDur                            (0, #Col5) 
   Print #OpeningsCnt                        (0, #Col8) edit 999999

End-Procedure


!**********************************************************************
!**********************************************************************
!       Process-Section4
!       Create a section of the report
!**********************************************************************
!**********************************************************************
Begin-Procedure Process-Section4
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:Process-Section4'
#ENDIF

   let $Section = '4'
   let $Section_Title = $Section4_Title
   let #Col13 = #Col13 + 4
   let #Col14 = #Col14 + 5
   let #Col15 = #Col15 + 1
   let #Col16 = #Col16 + 1

   let #Total = 0

   let #TotalEG1F = 0
   let #TotalEG1M = 0
   let #TotalEG1U = 0
   let #TotalEG2F = 0
   let #TotalEG2M = 0
   let #TotalEG2U = 0
   let #TotalEG3F = 0
   let #TotalEG3M = 0
   let #TotalEG3U = 0
   let #TotalEG4F = 0
   let #TotalEG4M = 0
   let #TotalEG4U = 0
   let #TotalEG5F = 0
   let #TotalEG5M = 0
   let #TotalEG5U = 0
   let #TotalEG6F = 0
   let #TotalEG6M = 0
   let #TotalEG6U = 0
   let #TotalEG7F = 0
   let #TotalEG7M = 0
   let #TotalEG7U = 0

   let $Params = ''
   if $Estab  <> ''
      let $Params = ' and J4.ESTABID = ' || $Quote || $Estab || $Quote
   end-if
   if #ParamJO  <> 0
      move #ParamJO to $ParamJO
      let $Params = $Params || ' and SJ.HRS_JOB_OPENING_ID = ' || $ParamJO
   end-if
   if $ParamJF  <> ''
      let $Params = $Params || ' and J4.JOB_FAMILY = ' || $Quote || $ParamJF || $Quote
   end-if
   if $ParamBU  <> ''
      let $Params = $Params || ' and J4.BUSINESS_UNIT = ' || $Quote || $ParamBU || $Quote
   end-if
   if $ParamJC  <> ''
      let $Params = $Params || ' and J4.HRS_PRM_JOBCODE = ' || $Quote || $ParamJC || $Quote
   end-if
   if $ParamPos <> ''
      let $Params = $Params || ' and J4.HRS_PRM_POSITION   = ' || $Quote || $ParamPos || $Quote
   end-if
   if $ParamSex <> ''
      let $Params = $Params || ' and A4.SEX   = ' || $Quote || $ParamSex || $Quote
   end-if
   if $ParamEG  <> ''
      let $Params = $Params || ' and Exists (Select ' || $Quote || 'X' || $Quote
      let $Params = $Params || '               From PS_HRS_APP_DIV_ETH E,'
      let $Params = $Params || '                    PS_HCR_ETHNC_GRP_I EG'
      let $Params = $Params || '              Where E.HRS_PERSON_ID     = LA.HRS_PERSON_ID'
      let $Params = $Params || '                and E.PRIMARY_INDICATOR = ' || $Quote || 'Y' || $Quote
      let $Params = $Params || '                and E.HRS_REG_REGION   in (Select RR.REG_REGION'
      let $Params = $Params || '                                             From PS_REG_REGION_TBL RR'
      let $Params = $Params || '                                            Where RR.COUNTRY = ' || $Quote || 'USA' || $Quote || ')'
      let $Params = $Params || '                and EG.SETID            = (Select XX.SETID'
      let $Params = $Params || '                                             From PS_SET_CNTRL_REC XX'
      let $Params = $Params || '                                            Where XX.SETCNTRLVALUE = E.HRS_REG_REGION'
      let $Params = $Params || '                                              and XX.REC_GROUP_ID  = ' || $Quote || 'HR_11' || $Quote
      let $Params = $Params || '                                              and XX.RECNAME       = ' || $Quote || 'ETHNIC_GRP_TBL' || $Quote || ')'
      let $Params = $Params || '                and E.HRS_ETHNIC_GRP_CD = EG.ETHNIC_GRP_CD'
      let $Params = $Params || '                and EG.EFFDT            = (Select Max(E2.EFFDT)'
      let $Params = $Params || '                                             From PS_HCR_ETHNC_GRP_I E2'
      let $Params = $Params || '                                            Where E2.SETID         = EG.SETID'
      let $Params = $Params || '                                              and E2.ETHNIC_GRP_CD = EG.ETHNIC_GRP_CD'
      let $Params = $Params || '                                              and E2.EFFDT        <= ' || $Quote || $ThruDate || $Quote || ')'
      let $Params = $Params || '                and EG.ETHNIC_GROUP     = ' || $Quote || $ParamEG || $Quote || ')'
   end-if

   Begin-SELECT Distinct

XX.SETID
J4.BUSINESS_UNIT
J4.COMPANY
J4.HRS_PRM_POSITION
J4.HRS_PRM_JOBCODE
J4.OPENINGS_CNT
SJ.HRS_JOB_OPENING_ID                                                  (0, #Col1, 10) on-break Before = JO_Change4
AN4.NAME_DISPLAY
LA.HRS_PERSON_ID 
AP4.HRS_AL_LOG_ID
L.HRS_SEARCH_NAME
SJ.HRS_ROW_UPD_DTTM
A4.SEX
SD.SRCH_SCORE

      if &LA.HRS_PERSON_ID <> #PrevPersonId

         if $Break <> 'Y'
            Position                                                   (+1)
         else
            let $Break = 'N'
         end-if

         Let #PrevPersonId = &LA.HRS_PERSON_ID

         Print &AN4.NAME_DISPLAY                                       (0, #Col9,  19)
         Print &LA.HRS_PERSON_ID                                       (0, #Col10)
         Print &L.HRS_SEARCH_NAME                                      (0, #Col12, 12) 
         Print &A4.SEX                                                 (0, #Colsx, 10)

         Let #LogId = &AP4.HRS_AL_LOG_ID
         Do GetSourceName
         Print $SourceName                                             (0, #Colsn, 10)

         Print &SD.SRCH_SCORE                                          (0, #Col14, 8)  edit 99999

         let $SetId          = &XX.SETID
         let $BusinessUnit   = &J4.BUSINESS_UNIT
         let $Company        = &J4.COMPANY
         let #JobOpening     = &SJ.HRS_JOB_OPENING_ID
         let #OpeningsCnt    = &J4.OPENINGS_CNT
         let $ApplicStatusCd = ' '
         let $StatusRsnCd    = ' '
         let #PersonId       = &LA.HRS_PERSON_ID
         let $Sex            = &A4.SEX
  
         do Get-Ethnic-Group

         do Format-DateTime(&SJ.HRS_ROW_UPD_DTTM, $SrchDtOut, {DEFDATE},'','')
         Print $SrchDtOut                                 (0, #Col13, 10)

         let $EthnicGrpDescr = $EthnicGrpDescr

         do Get-Descriptions

         Print $EthnicGrpDescr                            (0, #Col16, 10)

         let #Job_Total = #Job_Total + 1
         let #Total = #Total + 1
      end-if

      From PS_HRS_LIST L,
           PS_HRS_LIST_APPL LA,
           PS_HRS_SRCH_RSLTJO SJ,
           PS_HRS_JOB_OPENING J4,
           PS_SET_CNTRL_REC XX,
           PS_HRS_APP_NAMES AN4,
           PS_HRS_APP_PROFILE AP4,
           PS_HRS_SRCH_SAVED SS,
           PS_HRS_LIST_APPDTL SD,
           PS_HRS_APPLICANT A4

     Where L.HRS_LST_TYPE         = 'SSRL'
       and L.HRS_OWNER_ID         = SJ.HRS_OWNER_ID
       and L.HRS_SEARCH_NAME      = SJ.SEARCH_NAME
       and L.HRS_LST_ID           = LA.HRS_LST_ID
       and SJ.HRS_JOB_OPENING_ID <> 0
       and Not Exists (Select 'Y'
                         From PS_HRS_RCMNT RX
                        Where RX.HRS_PERSON_ID      = LA.HRS_PERSON_ID
                          and RX.HRS_JOB_OPENING_ID = SJ.HRS_JOB_OPENING_ID)
       and J4.HRS_JOB_OPENING_ID  = SJ.HRS_JOB_OPENING_ID
       and XX.SETCNTRLVALUE       = J4.BUSINESS_UNIT
       and XX.REC_GROUP_ID        = 'HR_02'
       and XX.RECNAME             = 'JOBCODE_TBL'
       and AN4.HRS_PERSON_ID      = LA.HRS_PERSON_ID
       and AN4.NAME_TYPE          = 'PRI'
       and AP4.HRS_PERSON_ID      = LA.HRS_PERSON_ID
       and AP4.HRS_PROFILE_SEQ    = (Select Max(APX.HRS_PROFILE_SEQ)
                                       From PS_HRS_APP_PROFILE APX
                                      Where APX.HRS_PERSON_ID = AP4.HRS_PERSON_ID)
       and SS.HRS_OWNER_ID        = SJ.HRS_OWNER_ID
       and SS.SEARCH_NAME         = SJ.SEARCH_NAME
       and SS.HRS_LST_FREEZE      = 'Y'
       and SD.HRS_LST_ID          = LA.HRS_LST_ID
       and SD.HRS_PERSON_ID       = LA.HRS_PERSON_ID
       and A4.HRS_PERSON_ID       = LA.HRS_PERSON_ID
       and A4.STATUS_CODE        <> '030'
       [$Params]

      Order By SJ.HRS_JOB_OPENING_ID, J4.HRS_PRM_POSITION, J4.HRS_PRM_JOBCODE, LA.HRS_PERSON_ID
             , SJ.HRS_ROW_UPD_DTTM DESC

   end-Select

   if #Job_Total > 0
      Print #Job_Total                                 (0, #Col17) edit 999999
      let #Job_Total = 0
   end-if

   Print $HD_Total                                     (+2,#Col16)
   Print #Total                                        (0, #Col17) edit 999999 underline

   if #Total > 0 
      do Process-Section-Summary
   end-if

   if $ParamJO = '' and $ParamJC = '' and $ParamPos = ''
      NEW-PAGE
   end-if

End-Procedure


!**********************************************************************
!**********************************************************************
!   Procedure JO_Change4:
!   On change of Job Opening ID, print Job Opening details
!**********************************************************************
!**********************************************************************
Begin-Procedure JO_Change4
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:JO_Change4'
#ENDIF

   if #Job_Total > 0
      Print #Job_Total                       (0, #Col17) edit 999999
      let #Job_Total = 0
   end-if

   let $SetId        = &XX.SETID
   let $BusinessUnit = &J4.BUSINESS_UNIT
   let $Company      = &J4.COMPANY
   let $Position     = &J4.HRS_PRM_POSITION
   let $JobCode      = &J4.HRS_PRM_JOBCODE
   let #OpeningsCnt  = &J4.OPENINGS_CNT
   let #PrevPersonId = 0

   Print $SetId                              (+2,#Col2, 8)
   Print $BusinessUnit                       (0, #Col3, 8)
   Print $Company                            (0, #Col4, 8)
   Print $Position                           (0, #Col6, 8)
   Print $JobCode                            (0, #Col7, 6)

   let #JobOpening   = &SJ.HRS_JOB_OPENING_ID
   do Get-Posting-Dates

   do Format-DateTime($PostOpen, $OpenOut, {DEFDATE}, '', '')
   do Format-DateTime($PostClose, $CloseOut, {DEFDATE}, '', '')
   let $PostDur = $OpenOut || '-' || $CloseOut

   Print $PostDur                            (0, #Col5) 
   Let #CntCol = #Col8 - 3
   Print #OpeningsCnt                        (0, #CntCol, 7) edit 9999999

   let $PrevPersonId = ''
   let $Break        = 'Y'

End-Procedure


!**********************************************************************
!**********************************************************************
!       Process-Section5
!       Create a section of the report
!**********************************************************************
!**********************************************************************
Begin-Procedure Process-Section5
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:Process-Section5'
#ENDIF

   if $ParamJO = '' and $ParamJC = '' and $ParamPos = ''
      let $Section = '5'
      let $Section_Title = $Section5_Title
      let #Col3  = #Col3 + 2
      let #Col4  = #Col4 + 3
      let #Col5  = #Col5 + 3
      let #Col6  = #Col6 - 7
      let #Col7  = #Col7 + 3
      let #Col8  = #Col8 + 6
      let #Col9  = #Col9 + 12
      let #Col14 = #Col14 + 3
      let #Colsx = #Col12 + 2
      let #Total = 0

      let #TotalEG1F = 0
      let #TotalEG1M = 0
      let #TotalEG1U = 0
      let #TotalEG2F = 0
      let #TotalEG2M = 0
      let #TotalEG2U = 0
      let #TotalEG3F = 0
      let #TotalEG3M = 0
      let #TotalEG3U = 0
      let #TotalEG4F = 0
      let #TotalEG4M = 0
      let #TotalEG4U = 0
      let #TotalEG5F = 0
      let #TotalEG5M = 0
      let #TotalEG5U = 0
      let #TotalEG6F = 0
      let #TotalEG6M = 0
      let #TotalEG6U = 0
      let #TotalEG7F = 0
      let #TotalEG7M = 0
      let #TotalEG7U = 0

      let $Params = ''
      if $ParamJF  <> ''
         let $Params = $Params || ' and Exists (Select ' || $Quote || 'X' || $Quote
         let $Params = $Params || '       From PS_HRS_APP_JOBFAM AJ'
         let $Params = $Params || '      Where AJ.HRS_PERSON_ID = R5.HRS_PERSON_ID'
         let $Params = $Params || '        and AJ.JOB_FAMILY = ' || $Quote || $ParamJF || $Quote || ')'
      end-if
      if $ParamBU  <> ''
         let $Params = $Params || ' and AP5.BUSINESS_UNIT = ' || $Quote || $ParamBU || $Quote
      end-if
      if $ParamSex <> ''
         let $Params = $Params || ' and A5.SEX   = ' || $Quote || $ParamSex || $Quote
      end-if
      if $ParamEG  <> ''
         let $Params = $Params || ' and Exists (Select ' || $Quote || 'X' || $Quote
         let $Params = $Params || '               From PS_HRS_APP_DIV_ETH E,'
         let $Params = $Params || '                    PS_HCR_ETHNC_GRP_I EG'
         let $Params = $Params || '              Where E.HRS_PERSON_ID     = R5.HRS_PERSON_ID'
         let $Params = $Params || '                and E.PRIMARY_INDICATOR = ' || $Quote || 'Y' || $Quote
         let $Params = $Params || '                and E.HRS_REG_REGION   in (Select RR.REG_REGION'
         let $Params = $Params || '                                             From PS_REG_REGION_TBL RR'
         let $Params = $Params || '                                            Where RR.COUNTRY = ' || $Quote || 'USA' || $Quote || ')'
         let $Params = $Params || '                and EG.SETID            = (Select XX.SETID'
         let $Params = $Params || '                                             From PS_SET_CNTRL_REC XX'
         let $Params = $Params || '                                            Where XX.SETCNTRLVALUE = E.HRS_REG_REGION'
         let $Params = $Params || '                                              and XX.REC_GROUP_ID  = ' || $Quote || 'HR_11' || $Quote
         let $Params = $Params || '                                              and XX.RECNAME       = ' || $Quote || 'ETHNIC_GRP_TBL' || $Quote || ')'
         let $Params = $Params || '                and E.HRS_ETHNIC_GRP_CD = EG.ETHNIC_GRP_CD'
         let $Params = $Params || '                and EG.EFFDT            = (Select Max(E2.EFFDT)'
         let $Params = $Params || '                                             From PS_HCR_ETHNC_GRP_I E2'
         let $Params = $Params || '                                            Where E2.SETID         = EG.SETID'
         let $Params = $Params || '                                              and E2.ETHNIC_GRP_CD = EG.ETHNIC_GRP_CD'
         let $Params = $Params || '                                              and E2.EFFDT        <= ' || $Quote || $ThruDate || $Quote || ')'
         let $Params = $Params || '                and EG.ETHNIC_GROUP     = ' || $Quote || $ParamEG || $Quote || ')'
      end-if

      print ' '                                           (+1, 1)

      Begin-SELECT Distinct

AP5.BUSINESS_UNIT                                         (0, #Col2)
AN5.NAME_DISPLAY                                          (0, #Col6)
R5.HRS_PERSON_ID                                          (0, #Col8)
AP5.HRS_AL_LOG_ID
R5.STATUS_CODE
R5.STATUS_REASON
A5.SEX                                                    (0, #Colsx, 11)

         let $ApplicStatusCd = &R5.STATUS_CODE
         let $StatusRsnCd    = &R5.STATUS_REASON
         let #PersonId       = &R5.HRS_PERSON_ID
         let $Sex            = &A5.SEX

         Let #LogId = &AP5.HRS_AL_LOG_ID
         Do GetSourceName
         Print $SourceName                                (0, #Col9, 10)

         do Get-Ethnic-Group

         do Get-Descriptions

         Print $ApplicStatus                              (0, #Col10, 10)
         Print $StatusReason                              (0, #Col11, 10)
         Print $EthnicGrpDescr                            (0, #Col13, 10)
         Print 1                                          (0, #Col14) edit 999999

         Print ' '                                        (+1, 1)

         let #Total = #Total + 1

      From PS_HRS_RCMNT R5, 
           PS_HRS_APP_PROFILE AP5,
           PS_HRS_APPLICANT A5,
           PS_HRS_APP_NAMES AN5

     Where R5.HRS_JOB_OPENING_ID = 0
       and R5.HRS_PERSON_ID      = AP5.HRS_PERSON_ID
       and AP5.HRS_PROFILE_SEQ   = (Select Max(APX.HRS_PROFILE_SEQ)
                                      From PS_HRS_APP_PROFILE APX
                                     Where APX.HRS_PERSON_ID = AP5.HRS_PERSON_ID)
       and R5.HRS_PERSON_ID      = A5.HRS_PERSON_ID
       and A5.STATUS_CODE       <> '030'
       and R5.HRS_PERSON_ID      = AN5.HRS_PERSON_ID
       and AN5.NAME_TYPE         = 'PRI'
       and Exists (Select 'X'
                     From PS_HRS_APP_ADDRESS AAD
                    Where AAD.HRS_PERSON_ID = A5.HRS_PERSON_ID
                      and AAD.COUNTRY       = 'USA')
       and Not Exists  (Select 'X'
                          From PS_HRS_RCMNT RR
                         Where RR.HRS_PERSON_ID       = R5.HRS_PERSON_ID
                           and RR.HRS_JOB_OPENING_ID <> 0)
       and Exists (Select 'X'
                     From PS_HRS_RCMNT_STS RS
                    Where RS.HRS_PERSON_ID     = R5.HRS_PERSON_ID
                      and RS.HRS_RCMNT_ID      = R5.HRS_RCMNT_ID
                      and RS.STATUS_CODE Between '030' and '100')
       and R5.HRS_STATUS_DT Between $FromDate and $ThruDate
       [$Params]

      Order By R5.HRS_PERSON_ID

      end-Select

      Print $HD_Total                                    (+1,#Col13)
      Print #Total                                       (0, #Col14) edit 999999 underline

      if #Total > 0 
         do Process-Section-Summary
      end-if

   end-if

End-Procedure


!**********************************************************************
!**********************************************************************
!   Procedure Get-Descriptions:
!   Get descriptions for code fields
!**********************************************************************
!**********************************************************************
Begin-Procedure Get-Descriptions
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:Get-Descriptions'
#ENDIF

   let $ApplicStatus = ' '
   let $StatusReason = ' '

   If $Language_Cd <> $Base_Language
      Do Get-Descrs-Lang
   end-if

   if $ApplicStatus = ' '
      Begin-Select
SR.DESCRSHORT

            let $ApplicStatus = &SR.DESCRSHORT

         From PS_HRS_STS_REC_I SR
        Where SR.STATUS_AREA   = '3'
          and SR.STATUS_CODE = $ApplicStatusCd

      End-Select
   end-if


   if $StatusReason = ' '
      Begin-Select
RR.DESCRSHORT

            let $StatusReason = &RR.DESCRSHORT

         From PS_HRS_RSN_REC_I RR
        Where RR.STATUS_AREA   = '3'
          and RR.STATUS_CODE   = $ApplicStatusCd
          and RR.STATUS_REASON = $StatusRsnCd

      End-Select
   end-if

End-Procedure


!**********************************************************************
!**********************************************************************
!   Procedure Get-Descrs-Lang:
!   Get descriptions from the Related Language tables
!**********************************************************************
!**********************************************************************
Begin-Procedure Get-Descrs-Lang
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:Get-Descrs-Lang'
#ENDIF

   Begin-Select
EGL.DESCRSHORT

      if &EGL.DESCRSHORT <> ' '
         let $EthnicGrpDescr = &EGL.DESCRSHORT
      end-if

      From PS_HCR_ETH_GRP_LNI EGL
     Where EGL.SETID         = $EthnicGrpSetId
       and EGL.ETHNIC_GRP_CD = $EthnicGrpCode
       and EGL.LANGUAGE_CD   = $Language_Cd
       and EGL.EFFDT         = (Select Max(EG2.EFFDT)
                                  From PS_HCR_ETHNC_GRP_I EG2
                                 Where EG2.SETID = EGL.SETID
                                   and EG2.ETHNIC_GRP_CD = EGL.ETHNIC_GRP_CD
                                   and EG2.EFFDT <= $ThruDate)
   End-Select


   Begin-Select
SRL.DESCRSHORT
           let $ApplicStatus = &SRL.DESCRSHORT

      From PS_HRS_STS_LNG SRL
     Where SRL.STATUS_AREA = '3'
       and SRL.STATUS_CODE = $ApplicStatusCd
       and SRL.LANGUAGE_CD = $Language_Cd
   End-Select

   Begin-Select
RRL.DESCRSHORT
            let $StatusReason = &RRL.DESCRSHORT

         From PS_HRS_STS_RSN_LNG RRL
        Where RRL.STATUS_AREA   = '3'
          and RRL.STATUS_CODE   = $ApplicStatusCd
          and RRL.STATUS_REASON = $StatusRsnCd
          and RRL.LANGUAGE_CD   = $Language_Cd
      End-Select

End-Procedure


!**********************************************************************
!**********************************************************************
!   Procedure Get-Posting-Dates:
!   Get Posting Date range for Job Opening
!**********************************************************************
!**********************************************************************
Begin-Procedure Get-Posting-Dates
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:Get-Posting-Dates'
#ENDIF

   let $PostOpen       = ''
   let $PostClose      = ''

   Begin-Select

JP.HRS_JO_PST_OPN_DT
JP.HRS_JO_PST_CLS_DT

         if &JP.HRS_JO_PST_OPN_DT < $PostOpen or $PostOpen = ''
            let $PostOpen  = &JP.HRS_JO_PST_OPN_DT
         end-if

         if &JP.HRS_JO_PST_CLS_DT > $PostClose
            let $PostClose = &JP.HRS_JO_PST_CLS_DT
         end-if

      From PS_HRS_JO_PST_DST JP
     Where JP.HRS_JOB_OPENING_ID = #JobOpening

   end-Select

End-Procedure


!**********************************************************************
!**********************************************************************
!   Procedure Get-Ethnic-Group:
!   Get Ethnic Group details for applicant
!**********************************************************************
!**********************************************************************
Begin-Procedure Get-Ethnic-Group
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:Get-Ethnic-Group'
#ENDIF

   let $EthnicGrpDescr = ' '
   let $EthnicGrpSetId = ' '
   let $EthnicGrpCode  = ' '

   Begin-Select

EG.DESCRSHORT
EG.SETID
EG.ETHNIC_GRP_CD
EG.ETHNIC_GROUP

      let $EthnicGrpDescr = &EG.DESCRSHORT
      let $EthnicGrpSetId = &EG.SETID
      let $EthnicGrpCode  = &EG.ETHNIC_GRP_CD

      if Rtrim(&EG.ETHNIC_GROUP, ' ') = '1'
         if $Sex = 'F'
            let #TotalEG1F = #TotalEG1F + 1
         else
         if $Sex = 'M'
            let #TotalEG1M = #TotalEG1M + 1
         else
            let #TotalEG1U = #TotalEG1U + 1
         end-if
         end-if
      else 

      if Rtrim(&EG.ETHNIC_GROUP, ' ') = '2'
         if $Sex = 'F'
            let #TotalEG2F = #TotalEG2F + 1
         else
         if $Sex = 'M'
            let #TotalEG2M = #TotalEG2M + 1
         else
            let #TotalEG2U = #TotalEG2U + 1
         end-if
         end-if
      else 

      if Rtrim(&EG.ETHNIC_GROUP, ' ') = '3'
         if $Sex = 'F'
            let #TotalEG3F = #TotalEG3F + 1
         else
         if $Sex = 'M'
            let #TotalEG3M = #TotalEG3M + 1
         else
            let #TotalEG3U = #TotalEG3U + 1
         end-if
         end-if
      else 

      if Rtrim(&EG.ETHNIC_GROUP, ' ') = '4'
         if $Sex = 'F'
            let #TotalEG4F = #TotalEG4F + 1
         else
         if $Sex = 'M'
            let #TotalEG4M = #TotalEG4M + 1
         else
            let #TotalEG4U = #TotalEG4U + 1
         end-if
         end-if
      else 

      if Rtrim(&EG.ETHNIC_GROUP, ' ') = '5'
         if $Sex = 'F'
            let #TotalEG5F = #TotalEG5F + 1
         else
         if $Sex = 'M'
            let #TotalEG5M = #TotalEG5M + 1
         else
            let #TotalEG5U = #TotalEG5U + 1
         end-if
         end-if
      else 

      if Rtrim(&EG.ETHNIC_GROUP, ' ') = '6'
         if $Sex = 'F'
            let #TotalEG6F = #TotalEG6F + 1
         else
         if $Sex = 'M'
            let #TotalEG6M = #TotalEG6M + 1
         else
            let #TotalEG6U = #TotalEG6U + 1
         end-if
         end-if
      else

      if Rtrim(&EG.ETHNIC_GROUP, ' ') = '7'
         if $Sex = 'F'
            let #TotalEG7F = #TotalEG7F + 1
         else
         if $Sex = 'M'
            let #TotalEG7M = #TotalEG7M + 1
         else
            let #TotalEG7U = #TotalEG7U + 1
         end-if
         end-if
      end-if
      end-if
      end-if
      end-if
      end-if
      end-if
      end-if

      From PS_HRS_APP_DIV_ETH E,
           PS_HCR_ETHNC_GRP_I EG

     Where E.HRS_PERSON_ID     = #PersonId
       and E.PRIMARY_INDICATOR = 'Y'
       and E.HRS_REG_REGION   in (Select RR.REG_REGION
                                    From PS_REG_REGION_TBL RR
                                   Where RR.COUNTRY = 'USA')
       and EG.SETID            = (Select XX.SETID
                                    From PS_SET_CNTRL_REC XX
                                   Where XX.SETCNTRLVALUE = E.HRS_REG_REGION
                                     and XX.REC_GROUP_ID  = 'HR_11'
                                     and XX.RECNAME       = 'ETHNIC_GRP_TBL')
       and E.HRS_ETHNIC_GRP_CD = EG.ETHNIC_GRP_CD
       and EG.EFFDT            = (Select Max(E2.EFFDT)
                                    From PS_HCR_ETHNC_GRP_I E2
                                   Where E2.SETID         = EG.SETID
                                     and E2.ETHNIC_GRP_CD = EG.ETHNIC_GRP_CD
                                     and E2.EFFDT        <= $ThruDate)

   end-Select

   if $EthnicGrpCode = ' '
      if $Sex = 'F'
         let #TotalEG6F = #TotalEG6F + 1
      else
      if $Sex = 'M'
         let #TotalEG6M = #TotalEG6M + 1
      else
         let #TotalEG6U = #TotalEG6U + 1
      end-if
      end-if
   end-if

End-Procedure




!**********************************************************************
!**********************************************************************
!       Prep-Global
!**********************************************************************
!**********************************************************************
Begin-Procedure Prep-Global
#IFDEF DEBUGHRS035
   DISPLAY 'FLOW:Prep-Global'
#ENDIF

  move 'HRS035' to $ReportID

  do Init_Report_Translation ($ReportID, $language_cd)

  do Get_Field_Information ('HRS035',     'REPORT_TITLE',               $ReportTitle,           #DW)
  do Get_Field_Information ('HRS035',     'SECTION1_TITLE',             $Section1_Title,        #DW)
  do Get_Field_Information ('HRS035',     'SECTION2_TITLE',             $Section2_Title,        #DW)
  do Get_Field_Information ('HRS035',     'SECTION3_TITLE',             $Section3_Title,        #DW)
  do Get_Field_Information ('HRS035',     'SECTION4_TITLE',             $Section4_Title,        #DW)
  do Get_Field_Information ('HRS035',     'SECTION5_TITLE',             $Section5_Title,        #DW)
  do Get_Field_Information ('HRS035',     'HD_JOB_OPENING',             $HD_JobOpening,         #DW)
  do Get_Field_Information ('HRS035',     'HD_SETID',                   $HD_SETID,              #DW)
  do Get_Field_Information ('HRS035',     'HD_BUS_UNIT',                $HD_BusUnit,            #DW)
  do Get_Field_Information ('HRS035',     'HD_COMPANY',                 $HD_Company,            #DW)
  do Get_Field_Information ('HRS035',     'HD_POST_DUR',                $HD_PostDur,            #DW)
  do Get_Field_Information ('HRS035',     'HD_POSITION',                $HD_Position,           #DW)
  do Get_Field_Information ('HRS035',     'HD_JOB_CODE',                $HD_JobCode,            #DW)
  do Get_Field_Information ('HRS035',     'HD_FILL_OPENINGS',           $HD_FillOpenings,       #DW)
  do Get_Field_Information ('HRS035',     'HD_APPLICANT_NAME',          $HD_ApplicName,         #DW)
  do Get_Field_Information ('HRS035',     'HD_APPLICANT_NUM',           $HD_ApplicNum,          #DW)
  do Get_Field_Information ('HRS035',     'HD_APPLICANT_REF',           $HD_ApplicRef,          #DW)
  do Get_Field_Information ('HRS035',     'HD_APPLICANT_STAT',          $HD_ApplicStatus,       #DW)
  do Get_Field_Information ('HRS035',     'HD_STATUS_REASON',           $HD_StatusRsn,          #DW)
  do Get_Field_Information ('HRS035',     'HD_GENDER',                  $HD_Gender,             #DW)
  do Get_Field_Information ('HRS035',     'HD_ETHNIC_GRP',              $HD_EthnicGrp,          #DW)
  do Get_Field_Information ('HRS035',     'HD_SUBTOTALS',               $HD_SubTotals,          #DW)
  do Get_Field_Information ('HRS035',     'HD_TOTAL',                   $HD_Total,              #DW)
  do Get_Field_Information ('HRS035',     'HD_SCREEN_LVL',              $HD_ScreenLvl,          #DW)
  do Get_Field_Information ('HRS035',     'HD_SRCH_NAME',               $HD_SrchName,           #DW)
  do Get_Field_Information ('HRS035',     'HD_SRCH_DATE',               $HD_SrchDate,           #DW)
  do Get_Field_Information ('HRS035',     'HD_SRCH_RSLT_PCT',           $HD_SrchRsltPct,        #DW)
  do Get_Field_Information ('HRS035',     'FT_COPYRIGHT',               $FT_CpyRtStmt,          #DW)
  do Get_Field_Information ('HRS035',     'FT_CPYRT',                   $FT_CpyRt,              #DW)

End-Procedure Prep-Global



begin-procedure select-parameters

BEGIN-Select

RUN_CNTL_REG.OPRID
RUN_CNTL_REG.RUN_CNTL_ID
RUN_CNTL_REG.FROMDATE
RUN_CNTL_REG.THRUDATE
RUN_CNTL_REG.ESTABID
RUN_CNTL_REG.HRS_JOB_OPENING_ID
RUN_CNTL_REG.JOB_FAMILY
RUN_CNTL_REG.BUSINESS_UNIT
RUN_CNTL_REG.JOBCODE
RUN_CNTL_REG.POSITION_NBR
RUN_CNTL_REG.SEX
RUN_CNTL_REG.ETHNIC_GROUP
RC.LANGUAGE_CD

      do Get-Values

   from PS_RUN_CNTL_HRS035 RUN_CNTL_REG
      , PS_PRCSRUNCNTL RC

   where RUN_CNTL_REG.OPRID       = $prcs_oprid
     and RUN_CNTL_REG.RUN_CNTL_ID = $prcs_run_cntl_id
     and RC.OPRID                 = $prcs_oprid
     and RC.RUN_CNTL_ID           = $prcs_run_cntl_id

end-select

end-procedure



!**********************************************************************
!       SQCs
!**********************************************************************
#include 'stdapi.sqc'      !Routine to update run status
#include 'askcalyr.sqc'    !Ask Calendar Year input
#Include 'curdttim.sqc'    !Get-Current-DateTime procedure
#Include 'datetime.sqc'    !Routines for date and time formatting
#Include 'number.sqc'      !Routines to format numbers
#include 'sqrtrans.sqc'    !Globalization
#include 'regutils.sqc'
