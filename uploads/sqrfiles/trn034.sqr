!************************************************************
!  Trn034:    Course Session Equipment Checklist            *
!************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:46:02                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************


#include 'setenv.sqc' !Set environment
begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup

! Related language stuff
#define COURSE_TBL
#include 'rellang.sqc'
#define RELLANG_PROG

begin-REPORT
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Layout
  do Init-Report
!--ADDED FOR FIX 302027 STARTS
  do Find-Date-Format
!--ADDED FOR FIX 302027 ENDS
  do Process-Main
  do Stdapi-Term
end-REPORT

!***********************************************************************
! Init Report
!***********************************************************************

begin-procedure Init-Report

  move 'TRN034' to $ReportID
  
!--------COMMENTED FOR FIX 590517 STARTS
!  move 'EQUIPMENT CHECKLIST' to $ReportTitle
!--------COMMENTED FOR FIX 590517 ENDS

  do Stdapi-Init

  let $language_cd = $CURR_LANGUAGE_CD

  if $prcs_process_instance = ''
      INPUT $Course 'Enter Course : '
      INPUT $Session 'Enter Session : '
  else
    do select-parameters                           !in HRRNCTL1.SQC
  end-if

  do Init_Printer
  do Init_Report_Translation('TRAINING', $language_cd)

!--------COMMENTED FOR FIX 590517 STARTS  
!  do Append_Report_Translation('TRAINING')
!--------COMMENTED FOR FIX 590517 ENDS

!--------ADDED FOR FIX 590517 STARTS
   do Get-Translat-Info_TRN034
!--------ADDED FOR FIX 590517 ENDS

end-procedure


!--------ADDED FOR FIX 590517 STARTS
begin-procedure Get-Translat-Info_TRN034

   do Append_Report_Translation('TRN034')
   do Get_Field_Information ('TRN034', 'REPORT_TITLE',       $ReportTitle,        #dummy_width)
   do Get_Field_Information ('TRN034', 'LBL_EQUIPMENT',      $LBL_EQUIPMENT,      #dummy_width)
   do Get_Field_Information ('TRN034', 'LBL_QUANTITY',       $LBL_QUANTITY,       #dummy_width)
   do Get_Field_Information ('TRN034', 'LBL_AVAILABILITY',   $LBL_AVAILABILITY,   #dummy_width)
   do Get_Field_Information ('TRN034', 'LBL_BOOKED',         $LBL_BOOKED,         #dummy_width)
   do Get_Field_Information ('TRN034', 'LBL_CODE',           $LBL_CODE,           #dummy_width)
   do Get_Field_Information ('TRN034', 'LBL_DESCRIPTION',    $LBL_DESCRIPTION,    #dummy_width)
   do Get_Field_Information ('TRN034', 'LBL_REQUIRED',       $LBL_REQUIRED,       #dummy_width)
   do Get_Field_Information ('TRN034', 'LBL_ROOM',           $LBL_ROOM,           #dummy_width)
   do Get_Field_Information ('TRN034', 'LBL_FACILITY',       $LBL_FACIL,       #dummy_width)
   
end-procedure !Get-Translat-Info_TRN034 
!--------ADDED FOR FIX 590517 ENDS


!--ADDED FOR FIX 302027 STARTS
begin-procedure Find-Date-Format

let $REC_FOUND = 'N'
begin-SELECT
A.USER_OPTION_VALUE
  let $REC_FOUND = 'Y'
FROM PSUSERPRSNLOPTN A

WHERE A.OPRID = $prcs_oprid
  AND A.USEROPTN = 'DFRMT'
end-SELECT

IF $REC_FOUND = 'N'
  let $DT_FMT = 'M'
ELSE
  LET $DT_FMT = &A.USER_OPTION_VALUE
  LET $DT_FMT = RTRIM($DT_FMT,' ')
END-If
 
end-procedure !Find-Date-Format
!--ADDED FOR FIX 302027 ENDS

!***********************************************************************
! Get Values
!***********************************************************************

begin-procedure Get-Values

  let $language_cd = $PRCS_LANGUAGE_CD

  let $Course = &RUN_CNTL_HR.COURSE
  let $Session = &RUN_CNTL_HR.SESSION_NBR

end-procedure Get-Values

!***********************************************************************
! Layout
!***********************************************************************

begin-procedure Init-Layout

#define col0  1
#define colh1 16
#define col1  12
#define col2  45
#define col3  60
#define col4  75
#define col5  90
#define col6  107

end-procedure

!***********************************************************************
! Heading
!***********************************************************************

begin-heading  9

!--COMMENTED FOR FIX 302027 STARTS
!#include 'stdhdgtr.sqc'
!--COMMENTED FOR FIX 302027 ENDS
!--ADDED FOR FIX 302027 STARTS
  do Append_Report_Translation ('STDHDGTR')
  if $Program_Read = 'Y'
    do Get_Field_Information ('STDHDGTR', 'STDHDG_CO_NM',   $stdhdg_co_nm,   #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_REP_ID',  $stdhdg_rep_id,  #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_PAGE_NO', $stdhdg_page_no, #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_RUN_DT',  $stdhdg_run_dt,  #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_RUN_TM',  $stdhdg_run_tm,  #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_END_REP', $stdhdg_end_rep, #dummy_width)
  end-if

  print '            '    (1,1)
  print $stdhdg_co_nm     ()          center
  print $stdhdg_rep_id    (+1,1)
  print $ReportID         (0,+2)
!***********************************************************************
! T-MBOWDEN-5: not to uppercase due to languages other than English    *
!***********************************************************************
! uppercase $ReportTitle                                               *
  print $ReportTitle      ()          center
  let #RptCol = {ColR} - 2
  print $stdhdg_page_no   (0,#RptCol)
  print #page-count       (0,+2)      edit 88888888
  print $stdhdg_run_dt    (+1,#RptCol)
  let $RepDate = StrToDate($ReportDate,{PTRPTDATE})
    evaluate $DT_FMT
     when = 'M'
          do Format-DateTime($RepDate,$Rep_dt,{DEFMDY},'','')
          break
     when = 'D'
          do Format-DateTime($RepDate,$Rep_dt,{DEFDMY},'','')
          break
     when-Other
          do Format-DateTime($RepDate,$Rep_dt,{DEFYMD},'','')
          break
     end-evaluate
  print $Rep_dt           (0,+1) 
  print $stdhdg_run_tm    (+1,#RptCol)
  print $ReportTime       (0,+1)
!--ADDED FOR FIX 302027 ENDS


print $LBL_COURSE       (0,{col0})
print $Course           (0,{colh1})
print $CourseDescr      (0,+1)
print $LBL_SESS_NUM     (+1,{col0}
print $Session          (0,{colh1})
print $LBL_DATE         (+1,{col0})
print $st_date          (0,{colh1})
print ' - '             (0,0)
print $end_date         (0,0)
print $LBL_MAX_STUDENTS (+1,{col0})
print #Max_Studs        (0,{colh1}) edit 999
print $LBL_NUM_ENROLLED (+1,{col0})
print #Num_Enr          (0,{colh1}) edit 999

end-heading

!***********************************************************************
! Main
!***********************************************************************

begin-procedure Process-Main

   do Get-Translat-Info   ! Global

   do Get-Session-Info
   do Get-Session-Dates

end-procedure Process-Main

!***********************************************************************
!  Gets header information about the course session
!***********************************************************************

begin-procedure Get-Session-Info

begin-SELECT

CST.COURSE
CT.DESCR
CST.SESSION_NBR
CST.COURSE_START_DT
CST.COURSE_END_DT
CST.MAX_STUDENTS

  do Get-Num-Enrolled

  let $COURSE_TBL-DESCR = &CT.DESCR
  do Get_Related_COURSE_TBL(&CST.COURSE)

  let $Course = &CST.COURSE
  let $CourseDescr = $COURSE_TBL-DESCR
  let $Session = &CST.SESSION_NBR
  let #Max_Studs = &CST.MAX_STUDENTS

!--COMMENTED FOR FIX 302027 STARTS
!  do Format-DateTime(&CST.COURSE_START_DT,$st_date,{DEFDATE},'','')
!  do Format-DateTime(&CST.COURSE_END_DT,$end_date,{DEFDATE},'','')
!--COMMENTED FOR FIX 302027 ENDS
!--ADDED FOR FIX 302027 STARTS
  evaluate $DT_FMT
     when = 'M'
          do Format-DateTime(&CST.COURSE_START_DT,$st_date,{DEFMDY},'','')
          do Format-DateTime(&CST.COURSE_END_DT,$end_date,{DEFMDY},'','')
          break
     when = 'D'
          do Format-DateTime(&CST.COURSE_START_DT,$st_date,{DEFDMY},'','')
          do Format-DateTime(&CST.COURSE_END_DT,$end_date,{DEFDMY},'','')
          break
     when-Other
          do Format-DateTime(&CST.COURSE_START_DT,$st_date,{DEFYMD},'','')
          do Format-DateTime(&CST.COURSE_END_DT,$end_date,{DEFYMD},'','')
     end-evaluate
!--ADDED FOR FIX 302027 ENDS

FROM   PS_CRSE_SESSN_TBL CST
      ,PS_COURSE_TBL     CT

WHERE  CST.COURSE = $Course
AND    CST.SESSION_NBR = $Session
AND    CT.COURSE = CST.COURSE

end-SELECT

end-procedure

!***********************************************************************
!  Gets number of students enrolled in course session
!***********************************************************************

begin-procedure Get-Num-Enrolled

begin-SELECT
COUNT(*)    &TRN.COUNT

  let #Num_Enr = &TRN.COUNT

FROM   PS_TRAINING TRN

WHERE  TRN.COURSE = &CST.COURSE
AND    TRN.SESSION_NBR = &CST.SESSION_NBR
AND    TRN.ATTENDANCE = 'E'

end-SELECT

end-procedure

!***********************************************************************
!  Gets information for each cut session
!***********************************************************************

begin-procedure Get-Session-Dates

begin-SELECT

CSD.SESSN_START_DT
CSD.SESSN_END_DT
CSD.SESSN_START_TIME
CSD.SESSN_END_TIME
CSD.FACILITY
CSD.FACILITY_NAME
CSD.ROOM_CD
!--TRT.ROOM_NBR
!--TFT.CONTACT_NAME
!--BPV.PHONE

  !----- begin resolution 151585
  do Get-Room-Nbr
  !----- End resolution 151585

!--COMMENTED FOR FIX 302027 STARTS
!  do Format-DateTime(&CSD.SESSN_START_DT,$sess_st_date,{DEFDATE},'','')
!  do Format-DateTime(&CSD.SESSN_END_DT,$sess_end_date,{DEFDATE},'','')
!--COMMENTED FOR FIX 302027 ENDS
!--ADDED FOR FIX 302027 STARTS
  evaluate $DT_FMT
     when = 'M'
          do Format-DateTime(&CSD.SESSN_START_DT,$sess_st_date,{DEFMDY},'','')
          do Format-DateTime(&CSD.SESSN_END_DT,$sess_end_date,{DEFMDY},'','')
          break
     when = 'D'
          do Format-DateTime(&CSD.SESSN_START_DT,$sess_st_date,{DEFDMY},'','')
          do Format-DateTime(&CSD.SESSN_END_DT,$sess_end_date,{DEFDMY},'','')
          break
     when-Other
          do Format-DateTime(&CSD.SESSN_START_DT,$sess_st_date,{DEFYMD},'','')
          do Format-DateTime(&CSD.SESSN_END_DT,$sess_end_date,{DEFYMD},'','')
     end-evaluate
!--ADDED FOR FIX 302027 ENDS
  print $LBL_FACILITY      (+2,{col0})
  print &CSD.FACILITY      (0,{colh1})
  print ' - '              (0,0)
  print &CSD.FACILITY_NAME (0,+1)
  print $LBL_TRN_ROOM      (+1,{col0})
  print &CSD.ROOM_CD       (0,{colh1})
  print ' - '              (0,0)
  print &TRT.ROOM_NBR      (0,+1)
  print $LBL_DATE          (+1,{col0})
  print $sess_st_date      (0,{colh1})
  print ' - '              (0,0)
  print $sess_end_date     (0,0)

!------COMMENTED FOR FIX 590517 STARTS
!  print 'Equipment'        (+2,{col0})
!  print 'Quantity'         (0,{col2})
!  print '# Available'      (0,{col3})
!  print '# Available'      (0,{col4})
!  print '# Booked'         (0,{col5})
!  print 'Code'             (+1,{col0})
!  print 'Description'      (0,{col1})
!  print 'Required'         (0,{col2})
!  print 'in Room'          (0,{col3})
!  print 'at Facility'      (0,{col4})
!  print 'at Facility'      (0,{col5})
!  print ' '                (+1,{col0})
!------COMMENTED FOR FIX 590517 ENDS

!-------ADDED FOR FIX 590517 STARTS
  print $LBL_EQUIPMENT        (+2,{col0})
  print $LBL_QUANTITY         (0,{col2})
  print $LBL_AVAILABILITY     (0,{col3})
  print $LBL_AVAILABILITY     (0,{col4})
  print $LBL_BOOKED           (0,{col5})
  print $LBL_CODE             (+1,{col0})
  print $LBL_DESCRIPTION      (0,{col1})
  print $LBL_REQUIRED         (0,{col2})
  print $LBL_ROOM             (0,{col3})
  print $LBL_FACIL            (0,{col4})
  print $LBL_FACIL            (0,{col5})
  print ' '                   (+1,{col0})
!-------ADDED FOR FIX 590517 ENDS

  do Init-Contact-Flag
  do Get-Session-Equip

  if #CONTACT_FLAG = 1
  !----- begin resolution 151585
  do Get-Contact-Info
  !----- End resolution 151585
    print $LBL_CONTACT       (+2,{col0})
    print &TFT.CONTACT_NAME  (0,{colh1})
    print $LBL_PHONE         (+1,{col0})
    print &BPV.PHONE         (0,{colh1})
  end-if

FROM   PS_CRSE_SESS_DATES CSD
       !-- ,PS_TRN_ROOM_TBL    TRT
       !-- ,PS_TRN_FACIL_TBL   TFT
       !--,PS_TRN_BUSPHONE_VW BPV

WHERE  CSD.COURSE = $Course
AND    CSD.SESSION_NBR = $Session
!--AND    TRT.FACILITY = CSD.FACILITY
!--AND    TRT.ROOM_CD = CSD.ROOM_CD
!--AND    TFT.FACILITY = CSD.FACILITY
!--AND    BPV.FACILITY = CSD.FACILITY


ORDER BY CSD.SESSN_START_DT,CSD.SESSN_START_TIME

end-SELECT

end-procedure

!***********************************************************************
!  Initialisation of flag to determine whether or not to print out
!  Contact Information.
!***********************************************************************

begin-procedure Init-Contact-Flag

  let #CONTACT_FLAG = 0

end-procedure

!----- begin resolution 151585
!***********************************************************************
!  Get  Contact Information.
!***********************************************************************

begin-procedure Get-Contact-Info

begin-SELECT
TFT.CONTACT_NAME
FROM  PS_TRN_FACIL_TBL   TFT
WHERE TFT.FACILITY = $Course
end-SELECT

begin-SELECT
BPV.PHONE
FROM  PS_TRN_BUSPHONE_VW BPV
WHERE BPV.FACILITY = $Course
end-SELECT

end-procedure

!***********************************************************************
!  Get  training Room number
!***********************************************************************

begin-procedure Get-Room-Nbr

begin-SELECT
TRT.ROOM_NBR
FROM  PS_TRN_ROOM_TBL    TRT
WHERE  TRT.FACILITY = &CSD.FACILITY
AND    TRT.ROOM_CD = &CSD.ROOM_CD
end-SELECT

end-procedure

!----- end resolution 151585


!***********************************************************************
!  Gets the equipment required for course session
!***********************************************************************

begin-procedure Get-Session-Equip

begin-SELECT

CSE.EQUIP_CD
TET.DESCR
CSE.QUANTITY

  print &CSE.EQUIP_CD      (+1,{col0})
  print &TET.DESCR         (0,{col1})
  print &CSE.QUANTITY      (0,{col2}) edit 999999

  do Get-Room-Equip
  print &TRE.QUANTITY      (0,{col3}) edit 999999

  if &CSE.QUANTITY > 0

    do Get-Facil-Equip
    print &TFE.QUANTITY      (0,{col4}) edit 999999

    do Get-Booked-Facil-Equip
    print &FEV.QUANTITY      (0,{col5}) edit 999999


    if &FEV.QUANTITY > &TFE.QUANTITY

      print $LBL_STAR          (0,{col6})
      let #CONTACT_FLAG = 1

    end-if

  else

     print $LBL_DASH         (0,{col4})
     print $LBL_DASH         (0,{col5})

  end-if

FROM   PS_CRSE_SESS_EQUIP CSE
      ,PS_TRN_EQUIP_TBL   TET
WHERE  CSE.COURSE = $Course
AND    CSE.SESSION_NBR = $Session
AND    TET.EQUIP_CD = CSE.EQUIP_CD

end-SELECT

end-procedure

!***********************************************************************
!  Gets the quantity available in training room
!***********************************************************************

begin-procedure Get-Room-Equip

begin-SELECT

TRE.QUANTITY

FROM    PS_TRN_ROOM_EQUIP TRE

WHERE   TRE.EQUIP_CD = &CSE.EQUIP_CD

AND     TRE.ROOM_CD = &CSD.ROOM_CD

AND     TRE.FACILITY = &CSD.FACILITY

end-SELECT

end-procedure

!***********************************************************************
!  Gets the quantity available at the training facility
!***********************************************************************

begin-procedure Get-Facil-Equip

begin-SELECT

TFE.QUANTITY

FROM    PS_TRN_FACIL_EQUIP TFE

WHERE   TFE.FACILITY = &CSD.FACILITY
AND     TFE.EQUIP_CD = &CSE.EQUIP_CD

end-SELECT

end-procedure

!***********************************************************************
!  Gets the quantity booked at the training facility
!***********************************************************************

begin-procedure Get-Booked-Facil-Equip

begin-SELECT

SUM(FEV.QUANTITY) &FEV.QUANTITY

FROM    PS_FACIL_EQUIP_VW FEV

WHERE   FEV.FACILITY = &CSD.FACILITY
AND     FEV.EQUIP_CD = &CSE.EQUIP_CD
AND     ((FEV.SESSN_START_DT BETWEEN &CSD.SESSN_START_DT AND &CSD.SESSN_END_DT)
OR       (FEV.SESSN_END_DT BETWEEN &CSD.SESSN_START_DT AND &CSD.SESSN_END_DT)
OR       (&CSD.SESSN_START_DT BETWEEN FEV.SESSN_START_DT AND FEV.SESSN_END_DT)
OR       (&CSD.SESSN_END_DT BETWEEN FEV.SESSN_START_DT AND FEV.SESSN_END_DT))
AND     ((FEV.SESSN_START_TIME BETWEEN &CSD.SESSN_START_TIME AND &CSD.SESSN_END_TIME)
OR       (FEV.SESSN_END_TIME BETWEEN &CSD.SESSN_START_TIME AND &CSD.SESSN_END_TIME)
OR       (&CSD.SESSN_START_TIME BETWEEN FEV.SESSN_START_TIME AND FEV.SESSN_END_TIME)
OR       (&CSD.SESSN_END_TIME BETWEEN FEV.SESSN_START_TIME AND FEV.SESSN_END_TIME))

end-SELECT

end-procedure

!***********************************************************************
!  Gets the strings printed in this report (Globalization)
!***********************************************************************

begin-procedure Get-Translat-Info

!--------ADDED FOR FIX 590517 STARTS
   do Append_Report_Translation('TRAINING')
!--------ADDED FOR FIX 590517 ENDS

   do Get_Field_Information('TRAINING', 'LBL_COURSE'      ,$LBL_COURSE       ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_SESS_NUM'    ,$LBL_SESS_NUM     ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_DATE'        ,$LBL_DATE         ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_FACILITY'    ,$LBL_FACILITY     ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_MAX_STUDENTS',$LBL_MAX_STUDENTS ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_NUM_ENROLLED',$LBL_NUM_ENROLLED ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_TRN_ROOM'    ,$LBL_TRN_ROOM     ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_CONTACT'     ,$LBL_CONTACT      ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_PHONE'       ,$LBL_PHONE        ,#DW)


   let $LBL_DASH = '     -'
   let $LBL_STAR = '*'

end-procedure

!***********************************************************************

#include 'hrrnctl1.sqc'  !Get run control parameter values

#include 'stdapi.sqc'    !Routines to update run status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'
#Include 'datemath.sqc'

