!**********************************************************************!
! gpustxst: Federal Tax Data Status Report                    (USA)    !
!**********************************************************************!
!                                                                      !
!               Confidentiality Information:                           !
!                                                                      !
!                                                                      !
! This module contains confidential and proprietary information        !
! of Oracle; it is not to be copied, reproduced, or transmitted        !
! in any form, by any means, in whole or in part, nor is it to         !
! be used for any purpose other than that for which it is              !
! expressly provided under the applicable license agreement.           !
!                                                                      !
! Copyright (C) 2006 Oracle. All Rights Reserved.                      !
!                                                                      !
!**********************************************************************!
!                                                                      !
!          $Date:  2006/07/21:02:00:56                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      !
!**********************************************************************!

#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization
#Include 'usarpt.sqc'    !Get USA variables

begin-report
  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'GPUSTXST' to $ReportID
  move 'Federal Tax Data Status Report' to $ReportTitle
  display $ReportTitle

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  do Select-Parameters

! determine report end of month date..
  MOVE $GPUS_RPT_TAX_RC.GPUS_TAX_YEAR TO $Year 9999
  move #GPUS_RPT_TAX_RC.GPUS_Tax_Month   to  $Month 09
  let $Date_String = $Year || $Month || '01'
  do Format-DateTime($Date_String, $Date_String, {DEFCMP},'','native')
  do Convert-to-DTU-date($Date_String, $Date_String)
  do DTU-Month-End($Date_String, $Date_String)
  do Convert-From-DTU-Date($Date_String, $Date_String)
  let $MonthEndDate = $Date_String


! determine first day of report year
  let $Date_In =  '01' || '/' || '01' || '/' || $Year
  do Format-DateTime($Date_In, $JAN_1_YEAR, {DEFDATE},'','native')
  do Process-Main
  do delete-tmp
  do Reset
end-procedure

begin-procedure Process-Run-Control
end-procedure

begin-heading 8
  #Include 'stdhdg02.sqc'
  print 'Effective'                                               (+3,64)
  print 'Taxable    Allow-  Special'                              (0,113)
  print 'Additional  Additional'                                  (0,154)
  print 'EmployeeID  Name'                                        (+1,1)
  print '   Date     Dept.ID    Dept.Name      SSN'               (0,63)
  print 'Gross YTD  ances   FWT Status'                           (0,113)
  print 'W/H %   W/H Amount'                                      (0,158)
end-heading

begin-procedure Process-Main
begin-SELECT
A.COMPANY () on-break print=never procedure=Company-Change Level=1
A.EMPLID                    (+1,1)                on-break Level=2
P.FIRST_NAME
P.LAST_NAME
   let $Print_Name = LTrim(RTrim(&P.FIRST_NAME,' '),' ') || ' ' || LTrim(RTrim(&P.LAST_NAME,' '),' ')
   let $Print_Name = substr($Print_Name,0,49)
   print $Print_Name        (0,12)                on-break Level=2
B.EFFDT
  do Format-DateTime(&B.EffDt, $out, {DEFDATE}, '', '')
  print $out                (0,64)                on-break Level=2
P1.NATIONAL_ID
  move &A.COMPANY to $Company  !for use in Heading procedure
  print &P1.NATIONAL_ID              (0,99) edit xxx-xx-xxxx
                                                  on-break Level=2
  do Get-FWT-Gross-YTD
  do Format-Number(#TxGrs_YTD, $out, '99,999,999.99mi')
  print $out                (0,110)               on-break Level=2
  move 0 to #TxGrs_YTD
B.GPUS_FWT_ALLOW            (0,126) EDIT 99       on-break Level=2
B.GPUS_FWT_STATUS
  if &B.GPUS_FWT_STATUS = 'N'
   print 'None'                     (0,131)       on-break Level=2
   else
    if &B.GPUS_FWT_STATUS = 'E'
     print 'No txble gross, no tax' (0,131)       on-break Level=2
     else
      if &B.GPUS_FWT_STATUS = 'G'
       print 'Zero W/H...'          (0,131)       on-break Level=2
      end-if
    end-if
  end-if
B.GPUS_FWT_ADD_PCT
  move &B.GPUS_FWT_ADD_PCT to #Additional_Percent
  do Format-Number(#Additional_Percent, $out, '99.999mi')
  print $out               (0,156)                 on-break Level=2
  move 0 to #Additional_Percent
B.GPUS_FWT_ADD_AMT
  move &B.GPUS_FWT_ADD_AMT to #Additional_Withhold
  do Format-Number(#Additional_Withhold, $out, '99,999.999mi')
  print $out               (0,163)                 on-break Level=2
  move 0 to #Additional_Withhold
A.DEPTID                   (0,76)                  on-break Level=3
D.DESCRSHORT               (0,86)                  on-break Level=3

!--  Levels were added to suppress amount print when employee
!--   had data records with more than one department

FROM  PS_JOB A,PS_NAMES P,PS_DEPT_TBL D, PS_GPUS_FWT_EE B,  PS_PERS_NID P1
WHERE A.EMPLID             = P1.EMPLID
  AND B.COMPANY            = A.COMPANY
  AND B.EMPLID             = A.EMPLID
  AND B.EMPLID             = P1.EMPLID
  AND A.EMPLID             = P.EMPLID
  AND P.EMPLID             = B.EMPLID
  AND A.DEPTID             = D.DEPTID
  AND P1.COUNTRY           = {NID_COUNTRY}
  AND P1.NATIONAL_ID_TYPE  = $PAYROLL_NID_TYPE
  AND A.EFFDT = (SELECT MAX(C3.EFFDT)
                   FROM PS_JOB C3
                  WHERE A.EMPLID = C3.EMPLID
                    AND A.EFFSEQ = C3.EFFSEQ
                    AND C3.EFFDT <= $JAN_1_YEAR)

!Emplid was active at anytime during current year - previous to report date


  AND A.EFFSEQ = ( SELECT MAX(C4.EFFSEQ)
                     FROM PS_JOB C4
                    WHERE A.EMPLID = C4.EMPLID
                      AND A.EFFDT = C4.EFFDT)

  AND (B.GPUS_FWT_STATUS = 'E' OR
       B.GPUS_FWT_STATUS = 'G' OR
       B.GPUS_FWT_ALLOW     > 10)
  AND B.EFFDT              =  (SELECT MAX(B1.EFFDT)
                                 FROM PS_GPUS_FWT_EE B1
                                WHERE B1.COMPANY    = B.COMPANY
                                  AND B1.EMPLID     = B.EMPLID
                                  AND B1.EFFDT     <= $MonthEndDate)
  AND (EXISTS
         (SELECT 'X'
            FROM PS_JOB C1
           WHERE A.EMPLID = C1.EMPLID
             AND C1.HR_STATUS = 'A'
             AND C1.EFFDT BETWEEN $JAN_1_YEAR AND $MonthEndDate)
      OR EXISTS
         (SELECT 'X'
            FROM PS_JOB C2
           WHERE A.EMPLID = C2.EMPLID
             AND C2.HR_STATUS = 'A'
             AND C2.EFFDT = (SELECT MAX(C3.EFFDT)
                               FROM PS_JOB C3
                              WHERE A.EMPLID = C3.EMPLID
                                AND C3.EFFDT <= $JAN_1_YEAR)))
  ORDER BY A.COMPANY,
         A.EMPLID,
         P.FIRST_NAME,
         P.LAST_NAME,
         B.EFFDT,
         P1.NATIONAL_ID,
         B.GPUS_FWT_ALLOW,
         B.GPUS_FWT_STATUS,
         B.GPUS_FWT_ADD_PCT,
         B.GPUS_FWT_ADD_AMT,
         A.DEPTID,
         D.DESCRSHORT
end-SELECT
end-procedure


begin-procedure Company-Change
  new-page
end-procedure

begin-procedure Get-FWT-Gross-YTD

begin-SELECT

SUM(TB1.GPUS_TAX_GRS) &TAX_YTD
   LET #TXGRS_YTD = &TAX_YTD

FROM  PS_GPUS_TXST_TMP TB1
WHERE   TB1.PROCESS_INSTANCE    =  #prcs_process_instance - 1
        AND TB1.EMPLID          =  &A.EMPLID
        AND TB1.COMPANY         =  &A.COMPANY
end-SELECT
end-procedure

begin-procedure delete-tmp
begin-Sql
delete from PS_GPUS_TXST_TMP
  WHERE PROCESS_INSTANCE   = #prcs_process_instance - 1
end-SQL
end-procedure


#Include 'gpuscodt.sqc'  !Get-Company-Data procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datemath.sqc'  !Routine for determining end of month
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'gpuspctl.sqc'  !Get-Run-Control procedure
#Include 'getmonnm.sqc'  !Get-Month-Name
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
