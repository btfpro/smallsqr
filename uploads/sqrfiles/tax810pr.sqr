!***********************************************************************
!  TAX810PR:  Qtrly Wage List - Tape - PUERTO RICO                     *
!                                                                      *
!             NOTE: "#IFDEF TAXTEST" in main SELECT is used for        *
!                   testing this report against DEMO database          *
!                                                                      *
!                   "Batch Number" not supported by program.           *
!                   Field is set to 000.                               *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2012, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2012/12/18:14:15:19                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  885414                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup31.sqc' !Printer and page-size initialization
#include 'usarpt.sqc'  ! NID_COUNTRY defined

begin-report
  do Init-Report

! These variables are used by rptsmmry.sqc
  Let $Prnt_CoTxGrs = 'N'
  Let $Prnt_CoExGrs = 'N'

  do Process-Main

  close 10

  if $RecordWritten = 'Y'
    display ''
    display 'Upon successful conclusion of this program, one or more'
    display 'files will have been created, as follows:'
    display ''
    display '{IMPORTPREFIX}TAX810PR{IMPORTSUFFIX} '
    display ''
    display '     or '
    display ''
    display '  TAX810PR.nnn  where "nnn" represents a volume number '
    display ''
    display '            The file or files you create will '
    display '            contain 150-character records in the format'
    display '            required for tape or diskette submission of'
    display '            wage data to the Puerto Rico Department of  '
    display '            Labor and Human Resources.'
    display ''
    display 'Follow instructions from the department for preparing and'
    display 'submitting the tape or diskettes.'
    display ''
  else
    do Print-Summary-Data('NoData')
  end-if

  do Stdapi-Term

end-report

begin-procedure Init-Report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Get-Calendar-Year-Id
  do Stdapi-Init

  do Initialization
  move 'TAX810PR' to $ReportID

 if $FileType = 'D'
  move 'Puerto Rico Quarterly UI Wage Report - Diskette' to $ReportTitle
  display ''
  display 'Creating Diskette File for Puerto Rico UI Wage Reporting'
 else
  move 'Puerto Rico Quarterly UI Wage Report - Tape' to $ReportTitle
  display ''
  display 'Creating Tape File for Puerto Rico UI Wage Reporting'
 end-if
end-procedure

begin-procedure Initialization
#ifdef TAXTEST
  move 'CA'              to $State
#else
  move 'PR'              to $State
#endif

  do Get-Tax-Reporting-Run-Controls
  move &TX.Balance_Year to $RptYear 9999
  move $RptYear          to $CalendarYr
  move $RptYear          to $RptYear ~~xx
  move $PeriodEndDate    to $AsOfDate

  display ' '
  display 'Processing balances for '   noline
  display $RptQtrYr

  move 150 to #RecordLength
  add 2 to #RecordLength

  if $PRCS_Process_Instance = ''
     do Prompts
  else
     do Select-Parameters
     do Convert-Parameters
  end-if
  do Evaluate-File-Type
  do Calculate-Diskette-Capacity
  do Open-File
end-procedure

begin-procedure Open-File

if $FileType = 'D'
   move 0 to #RecordCount
   if #FileExtension <> 0
      close 10
   end-if
   add 1 to #FileExtension
   move #FileExtension to $FileExtension 099
#ifdef OS400
   let $FileExtension = '(D' || $FileExtension || ')'
   let $FileID = '{IMPORTPREFIX}' || 'TAX810PR' || $FileExtension
#else
   let $FileID = '{IMPORTPREFIX}' || 'TAX810PR.' || $FileExtension
#endif
   open $FileID as 10 for-writing record=150:fixed
else

  open '{IMPORTPREFIX}TAX810PR{IMPORTSUFFIX}' as 10 for-writing record=150:fixed

end-if
end-procedure

begin-procedure Process-Main
  move &TX.Company       to $Company  !TX.Company is the Transmitter
  if RTRIM($Company,' ') = ''
    display '*** Company field blank on Tax Run Control Record ***'
    display '***************** Processing stopped ****************'
    display 'Company'
    display $Company
    stop
  end-if

  move &TX.Balance_Qtr to $QtrCd

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

begin-SELECT
A.COMPANY
A.FEDERAL_EIN
A.DESCR

  move &A.Company to $Company
  move &A.Descr   to $CompanyName

  move '' to $priorEmplID
  do Read-Employee-Data

FROM  PS_COMPANY_TBL A
WHERE A.EFF_STATUS = 'A'
  AND A.TAX_REPORT_TYPE IN ('2', 'P')
  AND A.EFFDT =
  (SELECT MAX(EFFDT)
     FROM PS_COMPANY_TBL
     WHERE  COMPANY = A.COMPANY
       AND  EFFDT  <= $AsOfDate)
ORDER BY COMPANY
end-SELECT
  if #Count_F > 0
    do Print-Summary-Data('FileTotal')
  end-if
end-procedure

begin-procedure Read-Employee-Data
begin-SELECT
C.COMPANY    () on-break print=never before=Before-Company
                                     AFTER=AFTER-COMPANY
C.EMPLID
C.NLGRS_QTD
C.TXGRS_QTD
D1.NATIONAL_ID
D.NAME
D.LAST_NAME
D.FIRST_NAME
D.MIDDLE_NAME

  if &C.NlGrs_QTD > 0
    do Process-Employee
  else
    do Print-Summary-Data('NegWage')
  end-if

FROM  PS_TAX_BALANCE C, PS_NAMES D, PS_PERS_NID D1
WHERE C.COMPANY       = &A.Company
  AND D.EMPLID        = C.EMPLID
  AND C.TAX_CLASS     = 'U'
  AND C.BALANCE_ID    = $Calendar_Year_Id
  AND C.BALANCE_YEAR  = &TX.Balance_Year
  AND C.BALANCE_QTR   = &TX.Balance_Qtr
#ifdef TAXTEST
  AND C.STATE         = 'CA'
#else
  AND C.STATE         = 'PR'
#endif
  AND C.LOCALITY      = ' '
  AND C.BALANCE_PERIOD  =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE
       WHERE  EMPLID        = C.EMPLID
         AND  COMPANY       = C.COMPANY
         AND  BALANCE_ID    = C.BALANCE_ID
         AND  BALANCE_YEAR  = C.BALANCE_YEAR
         AND  BALANCE_QTR   = C.BALANCE_QTR
         AND  STATE         = C.STATE
         AND  LOCALITY      = C.LOCALITY
         AND  TAX_CLASS     = C.TAX_CLASS)
  AND C.NLGRS_QTD <> 0
  AND D.EMPLID            = D1.EMPLID
  AND D.NAME_TYPE = 'PRI'
  AND D.EFFDT =
      (SELECT MAX(DX.EFFDT)
       FROM   PS_NAMES DX
       WHERE  DX.EMPLID    = D.EMPLID
         AND  DX.NAME_TYPE = D.NAME_TYPE
         AND  DX.EFFDT    <= $AsOfDate)
  AND D1.COUNTRY          = {NID_Country}
  AND D1.NATIONAL_ID_TYPE = $Payroll_NID_Type
ORDER BY D1.NATIONAL_ID
end-SELECT
end-procedure

begin-procedure Process-Employee
  move &D1.NATIONAL_ID to $S123 xxx       !isolate first 3 digits
  if $S123 = &Temp_SSN_Mask or RTRIM(&D1.NATIONAL_ID, ' ') = ''
    move '000000000'   to $NATIONAL_ID
  else
    move &D1.NATIONAL_ID        to $NATIONAL_ID
  end-if
  move &D.Name         to $Name
  move &D.First_name   to $First_name
  move &D.Last_name    to $Last_name
  let $Initial  = substr(&D.MIDDLE_NAME,1,1)
  uppercase $Name
  uppercase $Last_name
  uppercase $First_name
  do Rotate-Name
  do Parse-Last-name
    extract $Key from $LastName 0 4

  move &C.NlGrs_QTD to #NlGrs_QTD
  add #NlGrs_QTD to #Co_NlGrs_QTD
  multiply 100 times #NlGrs_QTD

  let #max_amt_NLG = 9999999
  let #NLGrs_orig = #NlGrs_QTD
  add 1 to #Count_S
  let $done1 = 'N'

  while $done1 <> 'Y'
    do split-s-record (#NLGrs_orig,#NlGrs_QTD,#max_amt_NLG,$done1)
    do Format-Number(#NlGrs_QTD,  $NlGrs_QTD,  '0999999')
    do write-c-record
    add 1 to #Count_R
  end-while

end-procedure

begin-procedure Before-Company
  do Get-Company-Data
  move &A.Federal_EIN  to $FedEIN 099999999

  do Get-State-Tax-Data             !Employer ID
  if RTRIM(&Employer_ID_SUT,' ') = ''
    display '*** State Unemployment ID missing in Company State Tax Table ***'
    display '*********************** Processing stopped *********************'
    display 'Company ' noline
    display $Company
    stop
  end-if
  let $StateEIN = SUBSTR(&Employer_ID_SUT,1,9)
  move $StateEIN to $StateEIN 099999999
end-procedure

begin-procedure After-Company
  if #Count_S > 0
    do Print-Summary-Data('CoTotal')

    add #Co_NlGrs_QTD to #Tot_NlGrs_QTD
    add #Count_S to #Count_F
    add #Count_R to #Count_R_Total

    move 0 to #Co_NlGrs_QTD
    move 0 to #Count_S
    move 0 to #Count_R
    new-page
  end-if
end-procedure

begin-procedure Write-C-Record

  if $FileType = 'D'
    if #RecordCount >= #MaxRecordsPerDiskette
      do Open-File
    end-if
  end-if



  if $FileType = 'D'
     move '04' to $Orig_cd
  else
     move '02' to $Orig_cd
  end-if

  let $Name_key = substr($Last_name,1,4)
  uppercase $Name_key

  do Format-DateTime($AsOfToday, $AsOfDateYMD, {DEFYMD},'','')
  let $RptDate =  substr($AsOfDateYMD,3,2) || substr($AsOfDateYMD,6,2) || substr($AsOfDateYMD,9,2)
  let $RptTime = substr($ReportTime,1,2) || substr($ReportTime,4,2) || substr($ReportTime,7,2)

  write 10 from $NATIONAL_ID:9    ! 1 - 9     Employee Social security number
                         $Sp:1    ! 10        Blank spaces
                        'W4':2    ! 11 - 12   Transaction
                   $Name_key:4    ! 13 - 16   Generic Key
                  '12345678':8    ! 17 - 24   Operator
                      '$WCA':4    ! 25 - 28   Terminal
                    $RptDate:6    ! 29 - 34   Today's date YYMMDD
                    $RptTime:6    ! 35 - 40   Hour HHMMSS
                    $RptYear:2    ! 41 - 42   Year
                      $QtrCd:1    ! 43        Quarter
                         '2':1    ! 44        Code
                  $NlGrs_QTD:7    ! 45 - 51   Employee wages
                   $StateEIN:9    ! 52 - 60   Puerto Rico Employers account number
                         $Sp:4    ! 61 - 64   Blank spaces
                  '00000000':8    ! 65 - 72   Code dot
                         $Sp:2    ! 73 - 74   Blank spaces
                         '1':1    ! 75        Indicator
                    '000000':6    ! 76 - 81   Batch number
                    $RptDate:6    ! 82 - 87   Effective date YYMMDD
                       '000':3    ! 88 - 90   Batch code
                       '000':3    ! 91 - 93   Page code
                    $Orig_cd:2    ! 94 - 95   Origination code
                 $First_name:16   ! 96 - 111  Employee Name
                    $Initial:1    ! 112       Initial Second name
            $Name_First_last:16   ! 113 - 128 Employee Paternal first last name
           $Name_Second_last:16   ! 129 - 144 Employee Maternal second last name
                         'N':1    ! 145       Partial Wages Indicator
                         $Sp:5    ! 146 - 150 Blank spaces

  add 1 to #RecordCount

  move '' to $NlGrs_QTD
  move 0  to #NlGrs_QTD
  move 'Y' to $RecordWritten
end-procedure

begin-procedure Prompts

  while $FileType = ''
    input $FileType 'Tape, cartridge or diskette file? (T, C, D or Q to quit)'
    uppercase $FileType
    if INSTR('TDCQ',$FileType,1) = 0
      display ' '
      display '***** Enter T, D, C or Q *****'
      display ' '
      move '' to $FileType
    end-if
  end-while
end-procedure

begin-procedure Convert-Parameters

  move $RC_QTR_UI.Reporting_Medium to $FileType
  move $RC_QTR_UI.Diskette_Type    to $DisketteType
end-procedure

begin-procedure Parse-Last-name


  let $Last_name_trim = rtrim($Last_name, ' ')
  let $Last_name_trim = $Last_name_trim || ' '
  find ' ' in $Last_name_trim 0 #locn
  extract $Name_First_last from $Last_name_trim 0 #locn
  add 2 to #locn
  let $Name_Second_last = substr($Last_name_trim,#locn,(length($Last_name_trim) - #locn) + 1)


end-procedure

begin-procedure Evaluate-File-Type

  evaluate $FileType
    when = 'Q'
      stop

    when = 'D'
      if $Prcs_Process_Instance = ''
         do Get-Diskette-Format
      end-if
      move &TX.Recording_Cd to $Recording_Cd
      break

    when = 'T'
      move &TX.Tape_Density      to $Density
      move &TX.Recording_Cd      to $Recording_Cd
      move 'SL'                  to $Tape_Label
      move &TX.Computer_Mfr      to $Computer_Mfr
      move 'MT'                  to $FilingType
      move '09'                  to $Tracks
      break

    when = 'C'
      move &TX.Recording_Cd      to $Recording_Cd
      move 'SL'                  to $Tape_Label
      move &TX.Computer_Mfr      to $Computer_Mfr
      move 'MC'                  to $FilingType

  end-evaluate
end-procedure

#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getstdta.sqc'  !Get-State-Tax-Data procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getfrmat.sqc'  !Get-Diskette-Format procedure
#Include 'rotname1.sqc'  !Rotate-Name procedure
#Include 'rptsmmry.sqc'  !Print-Summary-Data procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'stdapi.sqc'    !Update Process API
#Include 'txrnctl1.sqc'  !Process Scheduler Run Controls
#Include 'txovrflw.sqc'  !Split-S-Record
