!***********************************************************************
!  Leave Transfer Program Participants                                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:03:55:39                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'    !Set environment
#Include 'setup31.sqc'   !Printer and page-size initialization

#define col_emplid               1   !EmplId
#define col_name                15   !Employee Name
#define col_national_id         48   !National ID
#define col_pay_plan            61   !Pay Plan
#define col_gender              80   !Gender
#define col_totals              90   !Totals
#define col_used_hrs           105   !Used Hours Total

!***********************************************************************
!  FGPY030:  Begin Report                                              *
!***********************************************************************
begin-report

  do Init-Report
  do Get-Parameters
  do Process-Main
  do Stdapi-Term

end-report

!**************************
begin-procedure Init-Report
!**************************

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  let $ReportID = 'FGPY030'
  let $ReportTitle = 'LEAVE TRANSFER PROGRAM PARTICIPANTS'
  display  'Report ID: ' noline
  display $ReportTitle

end-procedure

!**************
begin-heading 6
!**************

  print '            '    (1,1)
  print $ReportTitle      (+1,,)          center
  let #RptCol = {ColR} - 2
  print 'Page'            (0,#RptCol)
  print #page-count       (0,+2)      edit 88888888
  let $AgencyTitle = 'For Agency: ' || $Agency
  print $AgencyTitle      (+1,,)          center
  do Format-DateTime($FromDate, $FromDtOut, {DEFDATE},'','')
  do Format-DateTime($ThruDate, $ThruDtout, {DEFDATE},'','')
  let $DateRange = 'From ' || $FromDtOut || ' Thru ' || $ThruDtout
  print $DateRange        (+1,,)          center

end-heading

!*****************************
begin-procedure Get-Parameters
!*****************************

  if $Prcs_Process_Instance = ''
    stop
  else
    do Select-Parameters
    let $Agency = RTRIM(&RUN_CNTL_FG.Company, ' ')
    let $FromDate = RTRIM(&RUN_CNTL_FG.fromdate, ' ')
    let $ThruDate = RTRIM(&RUN_CNTL_FG.thrudate, ' ')
  end-if

end-procedure

!***************************
begin-procedure Process-Main
!***************************

  do Get-ErnCode
  let $LeaveReason = 'E'
  do Get-Approved-Total
    print 'Number of Approved Applications (affecting Employee): ' (+2,1)
    print &ApprTot                                                 (,) edit 999,999
  let $LeaveReason = 'F'
  do Get-Approved-Total
    print 'Number of Approved Applications (affecting Family Member): ' (+1,1)
    print &ApprTot                                                      (,) edit 999,999

  let $RecHeader = 'Approved Leave Recipients and their Donors - Affecting Employee:'
  do Print-Recipients-Header
  let $LeaveReason = 'E'
  do Process-Recipients
  print 'TOTAL - Employee:  ' (+2, {col_totals})  underline
  print #EECount              (,)   underline  edit 999,999
  new-page
  let $RecHeader = 'Approved Leave Recipients and their Donors - Affecting Family Member:'
  do Print-Recipients-Header
  let $LeaveReason = 'F'
  do Process-Recipients
  print 'TOTAL - Family Member:  ' (+2, {col_totals})  underline
  print #EECount              (,)   underline  edit 999,999



end-procedure

!**************************
begin-procedure Get-ErnCode
!**************************

BEGIN-SELECT

DB.ERNCD

FROM PS_EARNINGS_TBL DB
WHERE DB.EFFDT = (SELECT MAX(J.EFFDT)
                  FROM PS_EARNINGS_TBL J
                  WHERE J.ERNCD = DB.ERNCD
                    AND J.EFFDT <= $ThruDate)
  AND DB.EFF_STATUS = 'A'
  AND DB.GVT_LV_EARN_TYPE = 'R'

END-SELECT

end-procedure  !Get-Earn-Codes

!*********************************
begin-procedure Get-Approved-Total
!*********************************

BEGIN-SELECT

COUNT(*) &ApprTot

FROM PS_GVT_LV_REC_APP APP,
     PS_GVT_JOB JOB2
WHERE APP.GVT_LV_APP_STATUS = 'A'
  AND APP.GVT_LEAVE_REASON = $LeaveReason
  AND APP.EMPLID = JOB2.EMPLID
  AND APP.EMPL_RCD = JOB2.EMPL_RCD
  AND APP.START_DATE BETWEEN $FromDate AND $ThruDate
  AND JOB2.COMPANY = $Agency
  AND JOB2.EFFDT = (SELECT MAX(A2.EFFDT) FROM PS_GVT_JOB A2
                    WHERE A2.EMPLID = JOB2.EMPLID
                      AND A2.EMPL_RCD = JOB2.EMPL_RCD
                      AND A2.EFFDT <= $ThruDate
                      AND JOB2.GVT_STATUS_TYPE IN ('COM', 'COR'))
  AND JOB2.EFFSEQ = (SELECT MAX(B2.EFFSEQ) FROM PS_GVT_JOB B2
                     WHERE B2.EMPLID = JOB2.EMPLID
                       AND B2.EMPL_RCD = JOB2.EMPL_RCD
                       AND B2.EFFDT = JOB2.EFFDT
                       AND B2.GVT_STATUS_TYPE IN ('COM', 'COR'))

END-SELECT

end-procedure

!*********************************
begin-procedure Process-Recipients
!*********************************

let #EECount = 0

BEGIN-SELECT

REC.GVT_LEAVE_XFR_TYPE
REC.EMPLID
REC.EMPL_RCD
REC.EFFSEQ
REC.GVT_LV_DUR_HOURS
JOB.GVT_STEP
JOB.GVT_PAY_PLAN
JOB.GRADE
PERS.NAME
PERS.SEX

  let #EECount = #EECount + 1
  do Get-NID
  do Get-Hrs-Used
  do Print-Recipient-Detail
  do Process-Donors
  print '_' (+1,1,115) fill
  print ' ' (+1,1,115) fill

FROM PS_GVT_LV_REC_APP REC,
     PS_GVT_JOB JOB,
     PS_PERSONAL_DT_FST PERS,
     PS_GVT_XFR_TYP_TBL XFR

WHERE REC.GVT_LV_APP_STATUS = 'A'
  AND REC.GVT_LEAVE_REASON = $LeaveReason
  AND REC.EMPLID = JOB.EMPLID
  AND REC.EMPL_RCD = JOB.EMPL_RCD
  AND REC.EMPLID = PERS.EMPLID
  AND REC.START_DATE BETWEEN $FromDate AND $ThruDate
  AND REC.GVT_LEAVE_XFR_TYPE = XFR.GVT_LEAVE_XFR_TYPE
  AND XFR.GVT_LEAVE_XFR_TYPE <> 'B'
  AND JOB.COMPANY = $Agency
  AND JOB.EFFDT = (SELECT MAX(A.EFFDT) FROM PS_GVT_JOB A
                    WHERE A.EMPLID = JOB.EMPLID
                      AND A.EMPL_RCD = JOB.EMPL_RCD
                      AND A.EFFDT <= $ThruDate
                      AND JOB.GVT_STATUS_TYPE IN ('COM', 'COR'))
  AND JOB.EFFSEQ = (SELECT MAX(B.EFFSEQ) FROM PS_GVT_JOB B
                     WHERE B.EMPLID = JOB.EMPLID
                       AND B.EMPL_RCD = JOB.EMPL_RCD
                       AND B.EFFDT = JOB.EFFDT
                       AND B.GVT_STATUS_TYPE IN ('COM', 'COR'))

ORDER BY PERS.SEX

END-SELECT

end-procedure

!**************************************
begin-procedure Print-Recipients-Header
!**************************************

print $RecHeader                     (+2, 1,) underline
print 'Total Hrs'                    (+2,{col_totals},)
print 'Total Hrs'                    (0, {col_used_hrs},)
print 'Requested/'                   (+1,{col_totals},)
print 'EmplId'                       (+1,{col_emplid},) underline
print 'Name'                         (0, {col_name},) underline
print 'National ID'                  (0, {col_national_id},) underline
print 'PP/Grade/Step'                (0, {col_pay_plan},) underline
print 'Gender'                       (0, {col_gender},) underline
print '(Donated)'                    (0, {col_totals},) underline
print 'Used'                         (0, {col_used_hrs},) underline

end-procedure

!*************************************
begin-procedure Print-Recipient-Detail
!*************************************

  print &REC.EMPLID                     (+1, {col_emplid})  bold
  print &PERS.NAME                      (0, {col_name})     bold
  print &NID.NATIONAL_ID                (0, {col_national_id})  bold

  let $JobData = &JOB.GVT_PAY_PLAN || '/' || RTRIM(&JOB.GRADE, ' ') || '/' || &JOB.GVT_STEP

  print $JobData                        (0, {col_pay_plan}) bold
  let $Fieldname = 'SEX'
  let $Fieldvalue = &PERS.SEX
  Do Read-Translate-Table
  print $Xlatlongname                   (0, {col_gender})   bold
  print &REC.GVT_LV_DUR_HOURS           (0, {col_totals})   bold
  print #TotalUsed                      (0, {col_used_hrs}) bold

end-procedure


!**********************
begin-procedure Get-NID
!**********************

BEGIN-SELECT

NID.NATIONAL_ID

FROM PS_PERS_NID NID

WHERE NID.EMPLID = &REC.EMPLID

END-SELECT

end-procedure


!*********************************
begin-procedure Process-Donors
!*********************************
  let #TotDonated = 0

BEGIN-SELECT

DON.EMPLID
DON.NAME
DON.NATIONAL_ID
DON.GVT_HRS_DONATED
DON.GVT_LV_DON_EMPLID

  move ' ' to $Step
  move ' ' to $PayPlan
  move ' ' to $Grade


  let #TotDonated = #TotDonated + &DON.GVT_HRS_DONATED
  if &DON.GVT_LV_DON_EMPLID <> ' '
    do Get-Internal-Info
  end-if
  do Print-Donor-Detail

FROM PS_GVT_LV_DONOR DON


WHERE DON.EMPLID = &REC.EMPLID
  AND DON.EMPL_RCD = &REC.EMPL_RCD
  AND DON.EFFSEQ= &REC.EFFSEQ
  AND DON.GVT_LEAVE_XFR_TYPE = &REC.GVT_LEAVE_XFR_TYPE

END-SELECT

end-procedure

!********************************
begin-procedure Get-Internal-Info
!********************************

BEGIN-SELECT

JOB1.GVT_STEP
JOB1.GVT_PAY_PLAN
JOB1.GRADE

  move &JOB1.GVT_STEP to $Step
  move &JOB1.GVT_PAY_PLAN  to $PayPlan
  move &JOB1.GRADE  to $Grade

FROM PS_GVT_JOB JOB1

WHERE JOB1.EMPLID = &DON.GVT_LV_DON_EMPLID
  AND JOB1.EMPL_RCD = 0
  AND JOB1.COMPANY = $Agency
  AND JOB1.EFFDT = (SELECT MAX(A1.EFFDT) FROM PS_GVT_JOB A1
                    WHERE A1.EMPLID = JOB1.EMPLID
                      AND A1.EMPL_RCD = JOB1.EMPL_RCD
                      AND A1.EFFDT <= $ThruDate
                      AND JOB1.GVT_STATUS_TYPE IN ('COM', 'COR'))
  AND JOB1.EFFSEQ = (SELECT MAX(B1.EFFSEQ) FROM PS_GVT_JOB B1
                     WHERE B1.EMPLID = JOB1.EMPLID
                       AND B1.EMPL_RCD = JOB1.EMPL_RCD
                       AND B1.EFFDT = JOB1.EFFDT
                       AND B1.GVT_STATUS_TYPE IN ('COM', 'COR'))

END-SELECT

end-procedure

!*************************************
begin-procedure Print-Donor-Detail
!*************************************

  print &DON.GVT_LV_DON_EMPLID          (+1, {col_emplid})
  print &DON.NAME                       (0, {col_name})
  print &DON.NATIONAL_ID                (0, {col_national_id})
  if $step <> ' '
    let $JobData = &JOB.GVT_PAY_PLAN || '/' || RTRIM(&JOB.GRADE, ' ') || '/' || &JOB.GVT_STEP
    print $JobData                        (0, {col_pay_plan})
  end-if
  print &DON.GVT_HRS_DONATED            (0, {col_totals})

end-procedure


!*********************************
begin-procedure Get-Hrs-Used
!*********************************

let #TotalUsed = 0
BEGIN-SELECT

CHK.COMPANY
CHK.PAYGROUP
CHK.PAY_END_DT
CHK.OFF_CYCLE
CHK.PAGE_NUM
CHK.LINE_NUM
CHK.SEPCHK

  do Get-Oth-Earns
  let #TotalUsed = #TotalUsed + &OthHrs

FROM PS_PAY_CHECK CHK WHERE CHK.PAY_END_DT BETWEEN $FromDate AND $ThruDate
AND CHK.EMPLID = &REC.EMPLID
AND CHK.EMPL_RCD = &REC.EMPL_RCD
AND CHK.COMPANY = $Agency


END-SELECT

end-procedure

!****************************
begin-procedure Get-Oth-Earns
!****************************
BEGIN-SELECT

SUM(OTH.OTH_HRS) &OthHrs

FROM PS_PAY_OTH_EARNS_V OTH
WHERE OTH.ERNCD = &DB.ERNCD
AND OTH.COMPANY = &CHK.COMPANY
AND OTH.PAYGROUP = &CHK.PAYGROUP
AND OTH.PAY_END_DT = &CHK.PAY_END_DT
AND OTH.OFF_CYCLE = &CHK.OFF_CYCLE
AND OTH.PAGE_NUM = &CHK.PAGE_NUM
AND OTH.LINE_NUM = &CHK.LINE_NUM
AND OTH.SEPCHK = &CHK.SEPCHK

END-SELECT

end-procedure

!***********************************************************************
!  The following are include sqc files                                 *
!***********************************************************************
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'fgrunctl.sqc'  !Select Parameters
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'datemath.sqc'  !Do date manipulation
!*---------------------------------------------------------------------*
