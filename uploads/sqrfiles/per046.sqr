!***********************************************************************
!  PER046.SQR:  CASE REVIEW REPORT                                     *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:43:57                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
! This program is specific to HRMS for Public Sector.                  *
!***********************************************************************


#include 'setenv.sqc'
#include 'setup31.sqc'


begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


begin-heading 10
#include 'stdhdgtr.sqc'
  print $PER045_FAC_MEMBER          (+1,1,24)                            !F-LPARKER-125 (CAMI)
  print $Faculty_Name               (,26)
  print $Faculty_Emplid             (,+2)
  print $PER045_TENHOME_DPT         (+1,1,24)                            !F-LPARKER-125 (CAMI)
  print $Tenure_Home                (,26)
  print $Home_Dept_Name             (,+2)
  print $PER045_TEN_STATUS          (+1,1,24)                            !F-LPARKER-125 (CAMI)
  print $Tenure_Status              (,26)
  print $PER045_RANK                (+1,1,24)                            !F-LPARKER-125 (CAMI)
  print $Current_Rank               (,26)
  print $PER045_ANNUAL_RT           (+1,1,24)                            !F-LPARKER-125 (CAMI)
  print $Annual_Rate                (,26)      edit b,999,999.99
end-heading

!***********************************************************************
! F-LPARKER-125 (CAMI)                                                 *
! Read language-dependent text from the database using PER046 program  *
! ids.                                                                 *
!***********************************************************************
begin-procedure REPORT-TRANSLATION

  let $language_cd = $PRCS_LANGUAGE_CD
  do Init_Report_Translation($ReportID,$Language_Cd)
  do Append_Report_Translation('PER045')

  do Get_Field_Information ('PER045', 'ACADEMIC_RANK', $PER045_RANK,          #DW)
  do Get_Field_Information ('PER045', 'ANNUAL_RT',     $PER045_ANNUAL_RT,     #DW)
  do Get_Field_Information ('PER045', 'BEGIN_DT',      $PER045_BEGIN_DT,      #DW)
  do Get_Field_Information ('PER045', 'FAC_MEMBER',    $PER045_FAC_MEMBER,    #DW)
  do Get_Field_Information ('PER045', 'PARMS_INCOMPLT',$PER045_PARMS_INCOM,   #DW)
  do Get_Field_Information ('PER045', 'TEN_HOME_DEPT', $PER045_TENHOME_DPT,   #DW)
  do Get_Field_Information ('PER045', 'TENURE_STATUS', $PER045_TEN_STATUS,    #DW)
  do Get_Field_Information ('PER045', 'TITLE',         $PER045_TITLE,         #DW)
  do Get_Field_Information ('PER045', 'TYPE',          $PER045_TYPE,          #DW)

  do Get_Field_Information ('PER046', 'CASE',          $PER046_CASE,          #DW)
  do Get_Field_Information ('PER046', 'CASE_REVW_DTL', $PER046_CASE_REVW_DTL, #DW)
  do Get_Field_Information ('PER046', 'CASE_REVW_PATH',$PER046_CASE_REVW_PATH,#DW)
  do Get_Field_Information ('PER046', 'CURR_REVW',     $PER046_CURR_REVW,     #DW)
  do Get_Field_Information ('PER046', 'DEPT',          $PER046_DEPT,          #DW)
  do Get_Field_Information ('PER046', 'DEPTID_REVW',   $PER046_DEPTID_REVW,   #DW)
  do Get_Field_Information ('PER046', 'FINAL_ACTION',  $PER046_FINAL_ACTION,  #DW)
  do Get_Field_Information ('PER046', 'FORWARDED',     $PER046_FORWARDED,     #DW)
  do Get_Field_Information ('PER046', 'FTE',           $PER046_FTE,           #DW)
  do Get_Field_Information ('PER046', 'FWD_DATE',      $PER046_FWD_DATE,      #DW)
  do Get_Field_Information ('PER046', 'NEXT_CASE_TYPE',$PER046_NEXT_CASE_TYPE,#DW)
  do Get_Field_Information ('PER046', 'NEXT_REVW',     $PER046_NEXT_REVW,     #DW)
  do Get_Field_Information ('PER046', 'NOTES_DESCR',   $PER046_NOTES_DESCR,   #DW)
  do Get_Field_Information ('PER046', 'OFFER_DESCR',   $PER046_OFFER_DESCR,   #DW)
  do Get_Field_Information ('PER046', 'OUTSIDE_OFFER', $PER046_OUTSIDE_OFFER, #DW)
  do Get_Field_Information ('PER046', 'PROPOSAL',      $PER046_PROPOSAL,      #DW)
  do Get_Field_Information ('PER046', 'RANK',          $PER046_RANK,          #DW)
  do Get_Field_Information ('PER046', 'RECEIVED_DATE', $PER046_RECEIVED_DATE, #DW)
  do Get_Field_Information ('PER046', 'RECOMMEND_DATE',$PER046_RECOMMEND_DATE,#DW)
  do Get_Field_Information ('PER046', 'REPORT_TITLE',  $REPORTTITLE,          #DW)
  do Get_Field_Information ('PER046', 'REVW_STEP',     $PER046_REVW_STEP,     #DW)
  do Get_Field_Information ('PER046', 'STATUS',        $PER046_STATUS,        #DW)
  do Get_Field_Information ('PER046', 'TENURE',        $PER046_TENURE,        #DW)

end-procedure

begin-procedure Init-Report

  move 'PER046'             to $ReportID

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do REPORT-TRANSLATION                                               !F-LPARKER-125 (CAMI)

  if $prcs_process_instance = ''
        !No Prompt
  else
    do Select-Parameters
  end-if

end-procedure


begin-procedure Get-Values

  let $Faculty_Emplid  = RTRIM(&RUN_CNTL_EG.EMPLID, ' ')
  let $Case_Id         = RTRIM(&RUN_CNTL_EG.EG_CASE_ID, ' ' )
  if $Faculty_Emplid   = ''
    print $PER045_PARMS_INCOM (+2) center                             !F-LPARKER-125 (CAMI)
    display $PER045_PARMS_INCOM
    stop
  end-if

  show 'Report: '  $ReportID
  show 'EmplID: '  $Faculty_Emplid
  show 'CaseID: '  $Case_Id

  let $Emplid = $Faculty_Emplid
  do Get-Employee-Name
  do Rotate-Name
    let $Faculty_Name = $Name

  do Faculty-Empl-Data
    let $Current_Rank = $Academic_Rank_Descr

end-procedure


begin-procedure Faculty-Empl-Data
move '' to $Tenure_Home
begin-SELECT
TN.EG_TENURE_HOME
TN.EG_ACADEMIC_RANK
TN.TENURE_STATUS
J.ANNUAL_RT
J.BUSINESS_UNIT

  let $Tenure_Home   = RTRIM(&TN.EG_TENURE_HOME, ' ')
  let $Academic_Rank = RTRIM(&TN.EG_ACADEMIC_RANK, ' ')
  let $Tenure_Status = RTRIM(&TN.TENURE_STATUS, ' ')
  move &J.ANNUAL_RT to #annual_rate
  move &J.BUSINESS_UNIT to $BU

From PS_EG_TENURE_DATA TN,
     PS_JOB J
WHERE TN.EMPLID = $Faculty_Emplid
  AND J.EMPLID =  TN.EMPLID
  AND J.EFFDT = (SELECT MAX(J1.EFFDT)
                   FROM PS_JOB J1
                  WHERE J1.EMPLID = J.EMPLID
                    AND J1.EMPL_RCD = J.EMPL_RCD)
  AND J.EMPL_RCD = (SELECT MIN(J2.EMPL_RCD)
                       FROM PS_JOB J2
                      WHERE J2.EMPLID = J.EMPLID
                        AND J2.EFFSEQ = J.EFFSEQ)
  AND J.EFFSEQ = (SELECT MAX(J3.EFFSEQ)
                    FROM PS_JOB J3
                   WHERE J3.EMPLID = J.EMPLID
                     AND J3.EMPL_RCD = J.EMPL_RCD
                     AND J3.EFFDT = J.EFFDT)
end-SELECT

if $Tenure_Home = ''
begin-SELECT
JOB.DEPTID
JOB.ANNUAL_RT
JOB.BUSINESS_UNIT

  let $Tenure_Home     = RTRIM(&JOB.DEPTID, ' ')
  move &JOB.ANNUAL_RT to #annual_rate
  show $PER045_TENHOME_DPT ' ' $Tenure_Home                           !F-LPARKER-125 (CAMI)
  move &JOB.BUSINESS_UNIT to $BU

FROM PS_JOB JOB
WHERE JOB.EMPLID = $Faculty_Emplid
  AND JOB.EFFDT = (SELECT MAX(JOB1.EFFDT)
                   FROM PS_JOB JOB1
                  WHERE JOB1.EMPLID    = JOB.EMPLID
                    AND JOB1.EMPL_RCD = JOB.EMPL_RCD)
  AND JOB.EMPL_RCD = (SELECT MIN(JOB2.EMPL_RCD)
                       FROM PS_JOB JOB2
                      WHERE JOB2.EMPLID = JOB.EMPLID
                        AND JOB2.EFFSEQ = JOB.EFFSEQ)
  AND JOB.EFFSEQ = (SELECT MAX(JOB3.EFFSEQ)
                    FROM PS_JOB JOB3
                   WHERE JOB3.EMPLID    = JOB.EMPLID
                     AND JOB3.EMPL_RCD = JOB.EMPL_RCD
                     AND JOB3.EFFDT     = JOB.EFFDT)
end-SELECT
end-if

  move 'TENURE_STATUS' to $FieldName
  move $Tenure_Status  to $FieldValue
  do Read-Translate-Table
     move $XlatLongName to $Tenure_Status

  do Get-Rank-Description

  let $Annual_Rate = to_char(#annual_rate)
  let $DeptID = $Tenure_Home
  do Get-Department-Name
  let $Home_Dept_Name = $DeptName

end-procedure


begin-procedure Process-Main

  do Case-Review
  do Review-Path

end-procedure


begin-procedure Case-Review
begin-SELECT
CR.EMPLID
CR.EG_CASE_ID
CR.EG_CASE_TYPE
CR.EG_CASE_STATUS
CR.TENURE_STATUS
CR.EG_ACADEMIC_RANK
CR.EG_ACADEMIC_TITLE
CR.FTE
CR.ANNUAL_RT
CR.BEGIN_DT
CR.EG_OUTSIDE_OFFER
CR.DESCR50
CR.EG_CASE_DOCS
CR.DESCRLONG

  let $FieldName   = 'EG_CASE_TYPE'
  let $FieldValue  = &CR.EG_CASE_TYPE
  do Read-Translate-Table
     let $Case_Type = $XlatShortName

  let $FieldName   = 'EG_CASE_STATUS'
  let $FieldValue  = &CR.EG_CASE_STATUS
  do Read-Translate-Table
     let $Case_Status = $XlatShortName

  let $FieldName   = 'TENURE_STATUS'
  let $FieldValue  = &CR.TENURE_STATUS
  do Read-Translate-Table
     let $Proposed_Tenure_Status = $XlatShortName

  let $Academic_Rank = &CR.EG_ACADEMIC_RANK
  do Get-Rank-Description
    let $Proposed_Rank = $Academic_Rank_Descr

  print $PER046_CASE_REVW_DTL    (+2,1)                               !F-LPARKER-125 (CAMI)
  print $PER046_CASE             (+2,1)                               !F-LPARKER-125 (CAMI)
  print $Case_Id                 (,+1)
  print $PER045_TYPE             (,21)                                !F-LPARKER-125 (CAMI)
  print $Case_Type               (,+1)
  print $PER046_STATUS           (,41)                                !F-LPARKER-125 (CAMI)
  print $Case_Status             (,+1)
  print $PER046_PROPOSAL         (+2,1) underline                     !F-LPARKER-125 (CAMI)
  print $PER046_TENURE           (+1,1)                               !F-LPARKER-125 (CAMI)
  print $Proposed_Tenure_Status  (,+1)
  print $PER046_RANK             (,21)                                !F-LPARKER-125 (CAMI)
  print $Proposed_Rank           (,+1)
  print $PER045_TITLE            (+1,1)                               !F-LPARKER-125 (CAMI)
  print &CR.EG_ACADEMIC_TITLE    (,+1)
  print $PER046_FTE              (,60)                                !F-LPARKER-125 (CAMI)
  print &CR.FTE                  ()    edit b9.999999
  print $PER045_ANNUAL_RT        (,75)                                !F-LPARKER-125 (CAMI)
  print &CR.ANNUAL_RT            (,+1) edit b,999,999.99
  print $PER045_BEGIN_DT         (,102)                               !F-LPARKER-125 (CAMI)
  print &CR.BEGIN_DT             (,+1,11)
  print $PER046_OUTSIDE_OFFER    (+1,1)                               !F-LPARKER-125 (CAMI)
  print &CR.EG_OUTSIDE_OFFER     (,+1)
  print $PER046_OFFER_DESCR      (,+2)                                !F-LPARKER-125 (CAMI)
  print &CR.DESCR50              (,+1)
  print $PER046_FORWARDED        (+1,1)                               !F-LPARKER-125 (CAMI)
  print &CR.EG_CASE_DOCS         (,+1)
  print $PER046_NOTES_DESCR      (+1,1)                               !F-LPARKER-125 (CAMI)
  print &CR.DESCRLONG            (,30) wrap 93 10

FROM PS_EG_CASE_REVIEW CR
WHERE CR.EMPLID     = $Faculty_Emplid
  AND CR.EG_CASE_ID = $Case_Id
end-SELECT
end-procedure


begin-procedure Review-Path
move 1 to #first
begin-SELECT
RP.EG_REVIEW_STEP
RP.EG_DEPTID_REVIEW
RP.EG_EMPLID_REVIEW
RP.EG_CURR_REVIEWER
RP.EG_RECEIVED_DATE
RP.EG_RECOMMEND_DATE
RP.EG_FWD_DATE
RP.EG_FWD_DEPTID
RP.EG_FINAL_ACTION
RP.NEXT_REVIEW_DT
RP.EG_NEXT_CASE_TYPE

  let $Deptid = RTRIM(&RP.EG_DEPTID_REVIEW, ' ')
  do Get-Department-Name
    let $Current_Review_Dept = $DeptName

  let $Deptid = RTRIM(&RP.EG_FWD_DEPTID, ' ')
  do Get-Department-Name
    let $Fwd_Dept = $DeptName

  let $EmplID = RTRIM(&RP.EG_EMPLID_REVIEW, ' ')
  do Get-Employee-Name
  do Rotate-Name

  let $FieldName   = 'EG_CASE_TYPE'
  let $FieldValue  = &CR.EG_CASE_TYPE
  do Read-Translate-Table
     let $Case_Type = $XlatShortName

  if #first
    print $PER046_CASE_REVW_PATH     (+3,1)                           !F-LPARKER-125 (CAMI)
    move 0 to #first
  end-if

  print $PER046_REVW_STEP            (+2,1) underline                 !F-LPARKER-125 (CAMI)
  print &RP.EG_REVIEW_STEP           (,+1)
  print $PER046_DEPTID_REVW          (,16)                            !F-LPARKER-125 (CAMI)
  print &RP.EG_DEPTID_REVIEW         (,+1)
  print $Current_Review_Dept         (,+1)
  print $PER046_CURR_REVW            (+1,1)                           !F-LPARKER-125 (CAMI)
  print $Name                        (,+1)
  print &RP.EG_CURR_REVIEWER         (,+1)
  print $PER046_RECEIVED_DATE        (+1,1)                           !F-LPARKER-125 (CAMI)
  print &RP.EG_RECEIVED_DATE         (,+1,11)
  print $PER046_RECOMMEND_DATE       (,+2)                            !F-LPARKER-125 (CAMI)
  print &RP.EG_RECOMMEND_DATE        (,+1,11)
  print $PER046_FWD_DATE             (,+2)                            !F-LPARKER-125 (CAMI)
  print &RP.EG_FWD_DATE              (,+1,11)
  print $PER046_DEPT                 (+1,1)                           !F-LPARKER-125 (CAMI)
  print &RP.EG_FWD_DEPTID            (,+1)
  print $Fwd_Dept                    (,+1)
  if &RP.EG_FINAL_ACTION = 'Y'
    print $PER046_FINAL_ACTION       (+1,1)                           !F-LPARKER-125 (CAMI)
    print &RP.EG_FINAL_ACTION        (,+1)
    print $PER046_NEXT_REVW          (,+2)                            !F-LPARKER-125 (CAMI)
    print &RP.NEXT_REVIEW_DT         (,+1,11)
    print $PER046_NEXT_CASE_TYPE     (,+2)                            !F-LPARKER-125 (CAMI)
    print &RP.EG_NEXT_CASE_TYPE      (,+1)
  end-if

FROM PS_EG_REVIEW_PATH RP
WHERE RP.EMPLID     = &CR.EMPLID
  AND RP.EG_CASE_ID = &CR.EG_CASE_ID
end-SELECT
end-procedure


begin-procedure Get-Rank-Description
begin-SELECT
R.DESCR

  let $Academic_Rank_Descr = RTRIM(&R.DESCR, ' ')

FROM PS_EG_RANK_TBL R
WHERE R.EG_ACADEMIC_RANK = $Academic_Rank
end-SELECT
end-procedure

!***********************************************************************
#include 'egrnctl1.sqc'  !Get run control parameter values             *
#include 'stdapi.sqc'    !Routines to update run status                *
#Include 'reset.sqc'     !Reset printer procedure                      *
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure               *
#Include 'datetime.sqc'  !Routines for date and time formatting        *
#Include 'number.sqc'    !Routines to format numbers                   *
#include 'readxlat.sqc'  !Read Translate Table                         *
#include 'getempnm.sqc'  !Get Employee Name                            *
#include 'rotname1.sqc'  !Rotate Name                                  *
#include 'getdptnm.sqc'  !Get Department Name                          *
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language      * !F-LPARKER-125 (CAMI)
!***********************************************************************
