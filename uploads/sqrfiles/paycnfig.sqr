!***********************************************************************
!***********************************************************************
!  PAYCNFIG: Print contents of ChartFields Configuration Work Table    *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/08/28:16:20:38                        
!       $Release:  HR9                                        
!      $Revision:  102                                        
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup02.sqc'  !printer and page-size initialization


!***********************************************************************
! BEGIN-REPORT                                                         *
!***********************************************************************
begin-report

   do Init-Report
   do Process-Main
   do Reset
   do Stdapi-Term

end-report


!***********************************************************************
! PROCEDURE: Init-Report                                               *
!***********************************************************************
begin-procedure Init-Report
   move 'PAYCNFIG' to $ReportID
   move 'ChartField Configuration Report' to $ReportTitle

   do Init-DateTime
   do Init-Number
   show ' '
   show $ReportID ' - ' $ReportTitle
   show ' '

   do Get-Current-DateTime
   do Stdapi-Init

   do Create-Arrays
   do Init-Variables
   do Get-Report-Language   ! Procedure that decides the report language
                            ! and then calls 'Report-Translation' procedure
                            ! that reads the language dep. text.

   do Set-Process-Mode

end-procedure


!***********************************************************************
! PROCEDURE: Create-Arrays                                             *
!***********************************************************************
begin-procedure Create-Arrays

   Create-array name=CF_Array Size = 10
        field=Action_Ind:Char
        field=Action_Num:Number
        field=FieldCnt:Number
        field=FieldName:Char:20

   let #Max_CF = 6

end-Procedure


!***********************************************************************
! PROCEDURE: Init-Variables                                            *
!***********************************************************************
begin-procedure Init-Variables

   Clear-Array name=CF_Array

   put 'R'  1 into CF_Array(1) Action_Ind Action_Num
   put 'Z'  2 into CF_Array(2) Action_Ind Action_Num
   put 'L'  4 into CF_Array(3) Action_Ind Action_Num
   put 'X'  8 into CF_Array(4) Action_Ind Action_Num
   put 'A' 16 into CF_Array(5) Action_Ind Action_Num
   put 'I' 32 into CF_Array(6) Action_Ind Action_Num

   let #CF_Cnt    = 6
   let #MaxLine   = 43
   let #Overhead6 = 6
   let #Overhead7 = 7

end-Procedure

!***********************************************************************
! PROCEDURE: Report-Translation                                        *
!***********************************************************************
begin-procedure Report-Translation
! Read from PAYCNFIG program id
   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('PAYCNFIG', 'PROCESS_MODE',      $paycnfig_process_mode,       #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'UPDATE_MODE',       $paycnfig_update_mode,        #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'REPORT_MODE',       $paycnfig_report_mode,        #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'MSG_REVIEW_ACCT',   $paycnfig_msg_review_acct,    #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'MSG_ACTIVATE_CF',   $paycnfig_msg_activate_cf ,   #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'MSG_CF_AFF_IU_CHG', $paycnfig_msg_cf_aff_iu_chg,  #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'MSG_CF_AFTER_CHG',  $paycnfig_msg_cf_after_chg,   #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'MSG_CF_BEFORE_CHG', $paycnfig_msg_cf_before_chg,  #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'MSG_CF_DSP_LEN_CHG',$paycnfig_msg_cf_dsp_len_chg, #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'MSG_CF_LABEL_CHG',  $paycnfig_msg_cf_label_chg,   #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'MSG_CF_SEQ_CHG',    $paycnfig_msg_cf_seq_chg,     #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'MSG_INACTIVATE_CF', $paycnfig_msg_inactivate_cf,  #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'COMBO_CD',          $paycnfig_combo_cd,           #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'DESCR',             $paycnfig_descr,              #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'NO_CONFIG_CHG',     $paycnfig_no_config_chg,      #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'CHARTFIELD',        $paycnfig_chartfield,         #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'DISP_LEN',          $paycnfig_disp_len,           #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'DISP_ORDER',        $paycnfig_disp_order,         #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'DIST_FLD_DESCR',    $paycnfig_dist_fld_descr,     #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'INTRAUNIT_RELATED', $paycnfig_intraunit_related,  #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'LABELID',           $paycnfig_labelid,            #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'LONGNAME',          $paycnfig_longname,           #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'NEW',               $paycnfig_new,                #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'NO_CONFIG_CHG',     $paycnfig_no_config_chg,      #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'PREVIOUS',          $paycnfig_previous,           #dummy_width)
   do Get_Field_Information ('PAYCNFIG', 'SHORTNAME',         $paycnfig_shortname,          #dummy_width)

end-procedure

!***********************************************************************
! PROCEDURE: Set-Process-Mode                                          *
!***********************************************************************
begin-procedure Set-Process-Mode

   let $Process_Mode = ' '

begin-select loops=1
MDE.CF_CONFIG_FLG

   if &MDE.CF_CONFIG_FLG >= 1024
       let $Process_Mode = $paycnfig_update_mode
   else
       let $Process_Mode = $paycnfig_report_mode
   end-if

FROM PS_PAY_CONFIG_WRK MDE
WHERE MDE.CF_CONFIG_FLG > 0
end-select

end-Procedure

!***********************************************************************
! HEADING 6                                                            *
!***********************************************************************
begin-HEADING 6
   #Include 'stdhdg01.sqc'

   print $paycnfig_process_mode    (+2, 1)
   print $Process_Mode             ( 0, +1)

    if $PrtColumnHeading = 'Y'
        print $paycnfig_msg_review_acct    (+2, 1)

        print $paycnfig_combo_cd           (+3,  5)
        print $paycnfig_descr              ( 0, 35)
        print '-'                          (+1,  5, 25) fill
        print '-'                          ( 0, 35, 30) fill
    end-if

end-HEADING


!***********************************************************************
! PROCEDURE: Process-Main                                              *
!***********************************************************************
begin-procedure Process-Main

   if $Process_Mode = ' '
       print $paycnfig_no_config_chg       (+2, 5)
   else
       do Decode-Actions
       do Build-Lists

       let $PrtColumnHeading = 'N'
       do Print-Old-Configuration
       new-page

       let #LineCnt = 0

       if #InActivateCnt > 0
           do Report-Inactivate-CF
       end-if

       if #ActivateCnt > 0
           do Report-Activate-CF
       end-if

       if #ChgDispLenCnt > 0
           do Report-Display-Length-Chg
       end-if

       if #ReLabelCnt > 0
           do Report-Lable-Chg
       end-if

       if #ReSeqCnt > 0
           do Report-Sequence-Chg
       end-if

       if #ChgRelAffCnt > 0
           do Report-Rel-Aff-Chg
       end-if

       new-page
       do Print-New-Configuration

       if #InActivateCnt > 0 or #ChgRelAffCnt > 0

           new-page
           let $PrtColumnHeading = 'Y'
           Alter-report Heading-Size = 12
           do Possible-Inactive-Acct-Code
       end-if

   end-if

end-procedure


!***********************************************************************
! PROCEDURE: Decode-Actions                                            *
!***********************************************************************
begin-procedure Decode-Actions

begin-select
CFWRK.ORIG_CF_NAME
CFWRK.CF_CONFIG_FLG

   let #CF_Action = &CFWRK.CF_CONFIG_FLG

   if #CF_Action >= 1024
       let #CF_Action = #CF_Action - 1024
   end-if

   let #CF_Cnt = #Max_CF

   while #CF_Cnt > 0

      get #Action_Cd #Field_Cnt from CF_Array(#CF_Cnt) Action_Num FieldCnt

      if #CF_Action >= #Action_Cd
          let #Field_Cnt = #Field_Cnt + 1
          put #Field_Cnt &CFWRK.ORIG_CF_NAME into CF_Array(#CF_Cnt) FieldCnt FieldName (#Field_Cnt)
          let #CF_Action = #CF_Action - #Action_Cd
      end-if

      let #CF_Cnt = #CF_Cnt - 1
   end-while

FROM PS_PAY_CONFIG_WRK CFWRK
end-select

end-procedure

!***********************************************************************
! PROCEDURE: Build-Lists                                               *
!***********************************************************************
begin-procedure Build-Lists

   let $ComboCodeWhere = 'WHERE ('

   let #CF_Cnt = #Max_CF
   while #CF_Cnt > 0

      let $TempList = ''
      let #TempCnt  = 0
      get $Action_Ind #Field_Cnt from CF_Array(#CF_Cnt) Action_Ind FieldCnt

      if #Field_Cnt > 0

          let #TempCnt = #Field_Cnt
          let #i = 1
          while #i <= #Field_Cnt
             get $Orig_CF_Name from CF_Array(#CF_Cnt) FieldName (#i)
             let $Orig_CF_Name = ltrim(rtrim($Orig_CF_Name,' '), ' ')
             let $TempList = $TempList || ''''|| $Orig_CF_Name || ''''
             if #i < #Field_Cnt
                 let $TempList = $TempList || ','
             end-if

             if $Action_Ind = 'X' or $Action_Ind = 'I'

                 let $ComboCodeWhere = $ComboCodeWhere || 'COMBO.' || $Orig_CF_Name ||
                                       ' <> ' || ''' ''' || ' OR '
             end-if
             let #i = #i + 1
          end-while
          let $TempList = '(' || $TempList || ')'
      end-if

      evaluate $Action_Ind

         when = 'R'
            let $ReSeqList = $TempList
            let #ReSeqCnt  = #TempCnt
            break

         when = 'Z'
            let $ChgDispLenList = $TempList
            let #ChgDispLenCnt = #TempCnt
            break

         when = 'L'
            let $ReLabelList = $TempList
            let #ReLabelCnt  = #TempCnt
            break

         when = 'X'
            let $ChgRelAffList = $TempList
            let #ChgRelAffCnt  = #TempCnt
            break

         when = 'A'
            let $ActivateList = $TempList
            let #ActivateCnt  = #TempCnt
            break

         when = 'I'
            let $InActivateList = $TempList
            let #InActivateCnt  = #TempCnt
      end-evaluate

      let #CF_Cnt = #CF_Cnt - 1
   end-while

   let #ComboLen = Length($ComboCodeWhere)
   let $ComboCodeWhere = Substr($ComboCodeWhere, 1, #ComboLen - 4) || ')'

end-procedure

!***********************************************************************
! PROCEDURE: Print-Old-Configuration                                   *
!***********************************************************************
begin-procedure Print-Old-Configuration

   print $paycnfig_msg_cf_before_chg (+2,1) Bold
   print ' ' (+2,1)
   let #order = 0

   print $paycnfig_intraunit_related        (+2, 85)
   print $paycnfig_chartfield               (+1, 10)
   print $paycnfig_longname                 ( 0, 30)
   print $paycnfig_shortname                ( 0, 65)
   print $paycnfig_chartfield               ( 0, 88)
   print $paycnfig_disp_len                 ( 0, 110)
   print '-'                                (+1, 10, 18) fill
   print '-'                                ( 0, 30, 30) fill
   print '-'                                ( 0, 65, 15) fill
   print '-'                                ( 0, 85, 18) fill
   print '-'                                ( 0, 110,15) fill

begin-select
A.ORIG_CF_NAME
A.PREV_LONGNAME
A.PREV_SHORTNAME
A.PREV_DISPLAY_LEN
A.PREV_RELATED_CF
A.AFF_RELATED_CF
A.PREV_CF_ORDER
DBL1.LONGNAME
DBL1.SHORTNAME

    let $LongName = ltrim(rtrim(&A.PREV_LONGNAME,' '),' ')
    if $LongName = ''
        let $LongName = &DBL1.LONGNAME
    end-if

    let $ShortName = ltrim(rtrim(&A.PREV_SHORTNAME,' '),' ')
    if $ShortName = ''
        let $ShortName = &DBL1.SHORTNAME
    end-if

    let $AffRelCF = ltrim(rtrim(&A.PREV_RELATED_CF,' '),' ')
    if $AffRelCF = ''
        let $AffRelCF = &A.AFF_RELATED_CF
    end-if

    let #Order = #order + 1
    print #order                    (+1,  5) edit b9
    print '.'                       ( 0,  7)
    print &A.ORIG_CF_NAME           ( 0, 10)
    print $LongName                 ( 0, 30)
    print $ShortName                ( 0, 65)
    print $AffRelCF                 ( 0, 85)
    print &A.PREV_DISPLAY_LEN       ( 0,112) edit bbb9

FROM PS_PAY_CONFIG_WRK A, PSDBFLDLABL DBL1
WHERE A.PREV_CF_ACTIVE_STS = 'A'
AND A.FIELDNAME = DBL1.FIELDNAME
AND DBL1.DEFAULT_LABEL = 1
order by A.PREV_CF_ORDER
end-select

end-procedure

!***********************************************************************
! PROCEDURE: Report-Inactivate-CF                                      *
!***********************************************************************
begin-procedure Report-Inactivate-CF

   do Require-New-Page (#InActivateCnt, #Overhead6, #LineCnt, #MaxLine  )

   print $paycnfig_msg_inactivate_cf (+2,1) Bold
   print ' ' (+2,1)

   print $paycnfig_chartfield                    (+1, 10)
   print '-'                                     (+1, 10, 18) fill

   let #LineCnt = #LineCnt + 6

begin-select
B.ORIG_CF_NAME

    print &B.ORIG_CF_NAME           (+1, 10)

    let #LineCnt = #LineCnt + 1

FROM PS_PAY_CONFIG_WRK B
WHERE B.ORIG_CF_NAME in [$InActivateList]
end-select

   do print-blank

end-procedure

!***********************************************************************
! PROCEDURE: Report-Activate-CF                                        *
!***********************************************************************
begin-procedure Report-Activate-CF

   do Require-New-Page (#ActivateCnt, #Overhead6, #LineCnt, #MaxLine )

   print $paycnfig_msg_activate_cf (+2,1) Bold
   print ' ' (+2,1)

   print $paycnfig_chartfield                    (+1, 10)
   print '-'                                     (+1, 10, 18) fill

   let #LineCnt = #LineCnt + 6

begin-select
C.ORIG_CF_NAME

    print &C.ORIG_CF_NAME           (+1, 10)

    let #LineCnt = #LineCnt + 1

FROM PS_PAY_CONFIG_WRK C
WHERE C.ORIG_CF_NAME in [$ActivateList]
end-select

   do print-blank

end-procedure

!***********************************************************************
! PROCEDURE: Report-Display-Length-Chg                                 *
!***********************************************************************
begin-procedure Report-Display-Length-Chg

   do Require-New-Page (#ChgDispLenCnt, #Overhead7, #LineCnt, #MaxLine )

   print $paycnfig_msg_cf_dsp_len_chg (+2,1) Bold
   print ' ' (+2,1)

   print $paycnfig_disp_len                 (+1, 33)
   print $paycnfig_chartfield               (+1, 10)
   print $paycnfig_previous                 ( 0, 30)
   print $paycnfig_new                      ( 0, 45)
   print '-'                                (+1, 10, 18) fill
   print '-'                                ( 0, 30,  8) fill
   print '-'                                ( 0, 42,  8) fill

   let #LineCnt = #LineCnt + 7

begin-select
D.ORIG_CF_NAME
D.DISPLAY_LENGTH
D.PREV_DISPLAY_LEN

    print &D.ORIG_CF_NAME           (+1, 10)
    print &D.PREV_DISPLAY_LEN       ( 0, 32) edit bbb9
    print &D.DISPLAY_LENGTH         ( 0, 45) edit bbb9

    let #LineCnt = #LineCnt + 1

FROM PS_PAY_CONFIG_WRK D
WHERE D.ORIG_CF_NAME in [$ChgDispLenList]
end-select

   do print-blank

end-procedure

!***********************************************************************
! PROCEDURE: Report-Lable-Chg                                          *
!***********************************************************************
begin-procedure Report-Lable-Chg

   let #ReLabelCnt = #ReLabelCnt * 3
   do Require-New-Page (#ReLabelCnt, #Overhead6, #LineCnt, #MaxLine )

   print $paycnfig_msg_cf_label_chg (+2,1) Bold
   print ' ' (+2,1)

   print $paycnfig_chartfield                     (+1, 10)
   print $paycnfig_labelid                        ( 0, 30)
   print $paycnfig_longname                       ( 0, 60)
   print $paycnfig_shortname                      ( 0, 95)
   print $paycnfig_dist_fld_descr                 ( 0,115)
   print '-'                              (+1, 10, 18) fill
   print '-'                              ( 0, 30, 18) fill
   print '-'                              ( 0, 60, 30) fill
   print '-'                              ( 0, 95, 15) fill
   print '-'                              ( 0,115, 30) fill

   let #LineCnt = #LineCnt + 6

begin-select
E.ORIG_CF_NAME
E.LABEL_ID
E.PREV_LONGNAME
E.PREV_SHORTNAME
E.HP_FIELD_DESCR
E.LONGNAME
E.SHORTNAME

    print &E.ORIG_CF_NAME                 (+1, 10)
    print &E.LABEL_ID                     ( 0, 30)

    print $paycnfig_previous              ( 0, 50)
    print &E.PREV_LONGNAME                ( 0, 60)
    print &E.PREV_SHORTNAME               ( 0, 95)
    print &E.HP_FIELD_DESCR               ( 0,115)

    print $paycnfig_new                   (+1, 50)
    print &E.LONGNAME                     ( 0, 60)
    print &E.SHORTNAME                    ( 0, 95)

    if ltrim(rtrim(&E.HP_FIELD_DESCR,' '),' ') <> ''

       print &E.LONGNAME                  ( 0,115)
       do Check-Duplicte-Field-Descr
       if $Duplicate_Found = 'Y'
           print '** Duplicate Description - Distribution Field Desription not updated **' (+1,60)
           let #LineCnt = #LineCnt + 1
       end-if
    end-if

    let #LineCnt = #LineCnt + 2

    let $OrigCFName = &E.ORIG_CF_NAME
    let $LabelID    = &E.LABEL_ID
    do Print-Other-Lang-Label-Change

FROM PS_PAY_CONFIG_WRK E
WHERE E.ORIG_CF_NAME in [$ReLabelList]
end-select

   do print-blank

end-procedure

!***********************************************************************
! PROCEDURE: Print-Other-Lang-Label-Change                             *
!***********************************************************************
begin-procedure Print-Other-Lang-Label-Change

begin-select
L.LANGUAGE_CD
L.PREV_LONGNAME
L.PREV_SHORTNAME
L.LONGNAME
L.SHORTNAME

    let $LangString = '(' || &L.LANGUAGE_CD || ')'

    print $LangString                     (+1, 30)
    print $paycnfig_previous              ( 0, 50)
    print &L.PREV_LONGNAME                ( 0, 60)
    print &L.PREV_SHORTNAME               ( 0, 95)

    print $paycnfig_new                   (+1, 50)
    print &L.LONGNAME                     ( 0, 60)
    print &L.SHORTNAME                    ( 0, 95)

    let #LineCnt = #LineCnt + 2

FROM PS_PAY_CONFIG_LABL L
WHERE L.ORIG_CF_NAME = $OrigCFName
  AND L.LABEL_ID     = $LabelID
end-select

end-procedure

!***********************************************************************
! PROCEDURE: Report-Sequence-Chg                                       *
!***********************************************************************
begin-procedure Report-Sequence-Chg

   do Require-New-Page (#ReSeqCnt, #Overhead7, #LineCnt, #MaxLine )

   print $paycnfig_msg_cf_seq_chg (+2,1) Bold
   print ' ' (+2,1)

   print $paycnfig_disp_order               (+1, 33)
   print $paycnfig_chartfield               (+1, 10)
   print $paycnfig_previous                 ( 0, 30)
   print $paycnfig_new                      ( 0, 45)
   print '-'                                (+1, 10, 18) fill
   print '-'                                ( 0, 30,  8) fill
   print '-'                                ( 0, 42,  8) fill

   let #LineCnt = #LineCnt + 7

begin-select
F.ORIG_CF_NAME
F.CF_ORDER
F.PREV_CF_ORDER

    print &F.ORIG_CF_NAME           (+1, 10)
    print &F.PREV_CF_ORDER          ( 0, 32) edit bbb9
    print &F.CF_ORDER               ( 0, 45) edit bbb9

    let #LineCnt = #LineCnt + 1

FROM PS_PAY_CONFIG_WRK F
WHERE F.ORIG_CF_NAME in [$ReSeqList]
end-select

   do print-blank

end-procedure

!***********************************************************************
! PROCEDURE: Report-Rel-Aff-Chg                                        *
!***********************************************************************
begin-procedure Report-Rel-Aff-Chg

   do Require-New-Page (#ChgRelAffCnt, #Overhead7, #LineCnt, #MaxLine )

   print $paycnfig_msg_cf_aff_iu_chg (+2,1) Bold
   print ' ' (+2,1)

   print $paycnfig_intraunit_related     (+1, 35)
   print $paycnfig_chartfield            ( 0, +2)
   print $paycnfig_chartfield            (+1, 10)
   print $paycnfig_previous              ( 0, 30)
   print $paycnfig_new                   ( 0, 50)
   print '-'                             (+1, 10, 18) fill
   print '-'                             ( 0, 30, 18) fill
   print '-'                             ( 0, 50, 18) fill

   let #LineCnt = #LineCnt + 7

begin-select
G.ORIG_CF_NAME
G.AFF_RELATED_CF
G.PREV_RELATED_CF

    print &G.ORIG_CF_NAME           (+1, 10)
    print &G.PREV_RELATED_CF        ( 0, 30)
    print &G.AFF_RELATED_CF         ( 0, 50)

    let #LineCnt = #LineCnt + 1

FROM PS_PAY_CONFIG_WRK G
WHERE G.ORIG_CF_NAME in [$ChgRelAffList]
end-select

   do print-blank

end-procedure

!***********************************************************************
! PROCEDURE: Print-New-Configuration                                   *
!***********************************************************************
begin-procedure Print-New-Configuration

   print $paycnfig_msg_cf_after_chg (+2,1) Bold
   print ' ' (+2,1)
   let #order = 0

   print $paycnfig_intraunit_related        (+2, 85)
   print $paycnfig_chartfield               (+1, 10)
   print $paycnfig_longname                 ( 0, 30)
   print $paycnfig_shortname                ( 0, 65)
   print $paycnfig_chartfield               ( 0, 88)
   print $paycnfig_disp_len                 ( 0, 110)
   print '-'                                (+1, 10, 18) fill
   print '-'                                ( 0, 30, 30) fill
   print '-'                                ( 0, 65, 15) fill
   print '-'                                ( 0, 85, 18) fill
   print '-'                                ( 0, 110,15) fill

begin-select
H.ORIG_CF_NAME
H.LONGNAME
H.SHORTNAME
H.DISPLAY_LENGTH
H.AFF_RELATED_CF
H.CF_ORDER
DBL2.LONGNAME
DBL2.SHORTNAME

    let $LongName = ltrim(rtrim(&H.LONGNAME,' '),' ')
    if $LongName = ''
        let $LongName = &DBL2.LONGNAME
    end-if

    let $ShortName = ltrim(rtrim(&H.SHORTNAME,' '),' ')
    if $ShortName = ''
        let $ShortName = &DBL2.SHORTNAME
    end-if

    let #Order = #order + 1
    print #order                    (+1,  5) edit b9
    print '.'                       ( 0,  7)
    print &H.ORIG_CF_NAME            (0, 10)
    print $LongName                 ( 0, 30)
    print $ShortName                ( 0, 65)
    print &H.AFF_RELATED_CF         ( 0, 85)
    print &H.DISPLAY_LENGTH         ( 0,112) edit bbb9

FROM PS_PAY_CONFIG_WRK H, PSDBFLDLABL DBL2
WHERE H.CF_ACTIVE_STATUS = 'A'
AND H.FIELDNAME = DBL2.FIELDNAME
AND DBL2.DEFAULT_LABEL = 1
order by H.CF_ORDER
end-select

end-procedure

!***********************************************************************
! PROCEDURE: Possible-Inactive-Acct-Code                               *
!***********************************************************************
begin-procedure Possible-Inactive-Acct-Code

begin-select
COMBO.ACCT_CD
COMBO.DESCR

    print &COMBO.ACCT_CD          (+1,  5)
    print &COMBO.DESCR            ( 0, 35)

FROM PS_ACCT_CD_TBL COMBO
[$ComboCodeWhere]
end-select

end-procedure

!***********************************************************************
! PROCEDURE: Check-Duplicte-Field-Descr                                *
!***********************************************************************
begin-procedure Check-Duplicte-Field-Descr

   let $Duplicate_Found = 'N'

begin-select
FIELDNAME

  let $Duplicate_Found = 'Y'

from PS_HP_DIST_FLDS
where FIELDNAME <> &E.ORIG_CF_NAME
and   HP_FIELD_DESCR = &E.LONGNAME
end-select

end-procedure

!***********************************************************************
! PROCEDURE: Require-New-Page                                          *
!***********************************************************************
begin-procedure Require-New-Page (#ReqCnt, #OverheadCnt, :#LineCnt, :#MaxLine)

   if #LineCnt + #ReqCnt + #OverheadCnt > #MaxLine
       new-page
       let #LineCnt = 0
   end-if

end-procedure

!***********************************************************************
! PROCEDURE: print-blank                                               *
!***********************************************************************
begin-procedure print-blank

   print ' '                             (+1, 1)
   let #LineCnt = #LineCnt + 1

end-procedure

!**************************************************************************
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
