!***********************************************************************
! PER074JP : Ido Candidate Listing                                     *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:59:18                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************

Begin-setup

#define  REPORTID  'PER074JP'
#include 'setenv.sqc'      !Set environment
#include 'ptset02.sqc'     !Init printer and page sizeLandscape

end-setup


begin-program
    do Init-DateTime
    do Init-Number
    do Get-Current-DateTime
    do Define-Prcs-Vars
    do Init-Report
    do Process-Main
    Close 1
    do Update-Prcs-Run-Status
end-program

!*************************************************************************!
! Init-Report
!*************************************************************************!
begin-procedure Init-Report

!***********************************************************************
! Translations procedures & Strings Table retrievals.                  *
!***********************************************************************

  move {REPORTID} to $ReportID
  let #Error_Total = 0
  do Get-Run-Control-Parms
  do Get-Run-Cntl-Data  
  do Get-Tree-Node  

  do Init_Report_Translation ('PER074JP', $curr_language_cd)
  do Append_Report_Translation ('PER074JP')

  do Get_Field_Information ('PER074JP' ,'PER074JP_TITLE'    ,$PER074JP_Title          ,#DW)
  do Get_Field_Information ('PER074JP' ,'ORG_PLAN'          ,$org_plan_lbl            ,#DW)
  do Get_Field_Information ('PER074JP' ,'ORG_DATE'          ,$org_date_lbl            ,#DW)
  do Get_Field_Information ('PER074JP' ,'BUNIT'             ,$BUnit_lbl               ,#DW)
  do Get_Field_Information ('PER074JP' ,'TREE_NAME'         ,$Tree_Name_lbl           ,#DW)
  do Get_Field_Information ('PER074JP' ,'TREE_NODE'         ,$Tree_Node_lbl           ,#DW)
  do Get_Field_Information ('PER074JP' ,'DEPTID'            ,$DEPTID_lbl              ,#DW)
  do Get_Field_Information ('PER074JP' ,'DEPT_NAME'         ,$DEPT_NAME_lbl           ,#DW)
  do Get_Field_Information ('PER074JP' ,'EMPLID'            ,$EMPLID_lbl              ,#DW)
  do Get_Field_Information ('PER074JP' ,'EMPL_RCD'          ,$EMPL_RCD_lbl            ,#DW)
  do Get_Field_Information ('PER074JP' ,'NAME'              ,$NAME_lbl                ,#DW)
  do Get_Field_Information ('PER074JP' ,'APPT_TYPE'         ,$APPT_TYPE_lbl           ,#DW)  
  do Get_Field_Information ('PER074JP' ,'JOBCODE'           ,$JOBCODE_lbl             ,#DW)
  do Get_Field_Information ('PER074JP' ,'SUPV_LVL_ID'       ,$SUPV_LVL_ID_lbl         ,#DW)  
  do Get_Field_Information ('PER074JP' ,'SUPV_LVL_NAME'     ,$SUPV_LVL_NAME_lbl       ,#DW)
  do Get_Field_Information ('PER074JP' ,'SAL_ADMIN_PLAN'    ,$SAL_ADMIN_PLAN_lbl      ,#DW)
  do Get_Field_Information ('PER074JP' ,'GRADE'             ,$GRADE_lbl               ,#DW)
  do Get_Field_Information ('PER074JP' ,'STEP'              ,$STEP_lbl                ,#DW)
  do Get_Field_Information ('PER074JP' ,'PRD_IN_DEPT'       ,$PRD_IN_DEPT_lbl         ,#DW)
  do Get_Field_Information ('PER074JP' ,'PROMOTION'         ,$PROMOTION_lbl           ,#DW)
  do Get_Field_Information ('PER074JP' ,'TAMAT_CAND'        ,$TAMAT_CAND_lbl          ,#DW)
 
  move $PER074JP_Title to $ReportTitle
  let $ReportDate            = $AsOfToday          ! Printed in header
  let $ReportTime            = $AsOfNow            ! Printed in header
  let $PNLGRPNAME = 'RC_IDO_EE_LIST_JPN'
  do Security-Param
  do Security-Param-JPN2
  
  Let #FileCount = 1
  !Open record for writing
  do Get-prcsoutputdir
  if (rtrim($prcsoutputdir,' ') <> '')
   move $prcsoutputdir to $Filename
   concat 'per074jp.csv' with $Filename
  end-if
  open $Filename as 1 for-writing record=2000
  do Write-csv-heading

end-procedure !Init-Report

!*************************************************************************!
! Get-Run-Cntl-Data
!*************************************************************************!
begin-procedure Get-Run-Cntl-Data
  
begin-SELECT

RC.ORG_PLAN_JPN
RC.BUSINESS_UNIT
RC.SETID
RC.TREE_NAME
RC.TREE_NODE
RC.EFFDT_JPN

 do get-org-plan-date

FROM
PS_RC_IDO_JPN RC

WHERE
RC.OPRID = $prcs_oprid
AND RC.RUN_CNTL_ID = $prcs_run_cntl_id

end-SELECT

end-procedure !Get-Run-Cntl-Data

!*************************************************************************!
! get-org-plan-date
!*************************************************************************!

begin-procedure get-org-plan-date

begin-select

X.ORG_DATE_JPN

 let $AsOfDate      = &X.ORG_DATE_JPN
 
FROM
PS_IDO_ORGPLAN_JPN X

WHERE
X.ORG_PLAN_JPN = &RC.ORG_PLAN_JPN

end-select

end-procedure !get-org-plan-date

!*************************************************************************!
! Get-Tree-Node
!*************************************************************************!
begin-procedure Get-Tree-Node

  let #tree_node_num = ''
  let #tree_node_num_end = ''
  
if rtrim(&RC.TREE_NODE,' ') = ''
  let #tree_node_num = 0
  let #tree_node_num_end = 9999999999
else
begin-SELECT

A.TREE_NODE_NUM
A.TREE_NODE_NUM_END

  let #tree_node_num = &A.TREE_NODE_NUM
  let #tree_node_num_end = &A.TREE_NODE_NUM_END
  
FROM PSTREENODE A

WHERE A.SETID = &RC.SETID
AND A.TREE_NAME = &RC.TREE_NAME
AND A.TREE_NODE = &RC.TREE_NODE
AND A.EFFDT = &RC.EFFDT_JPN
end-SELECT

end-if

end-procedure !Get-Tree-Node

!*************************************************************************!
! Process-Main
!*************************************************************************!

begin-procedure Process-Main

  Let $Select_Records = 'PS_JOB A, PSTREENODE B, ' || $Security_Record

begin-select DISTINCT

A.DEPTID
A.EMPLID
A.EMPL_RCD
A.EFFDT
A.EFFSEQ
A.APPT_TYPE
A.JOBCODE
A.SUPV_LVL_ID
A.SAL_ADMIN_PLAN
A.GRADE
A.STEP
A.SETID_DEPT

 ! Keys to be passed for Procedure Get-Department-Name
 let $BU          = &RC.BUSINESS_UNIT
 let $DEPTID      = &A.DEPTID
 
 ! Keys to be passed for Procedure Get-Employee-Name
 let $EMPLID      = &A.EMPLID
 
 let #EMPL_RCD    = &A.EMPL_RCD
 
 ! Keys to be passed for Procedure Get-Supvlvl-Name
 let $SUPV_LVL_ID = &A.SUPV_LVL_ID
 let $SETID_DEPT  = &A.SETID_DEPT
 
 ! Keys to be passed for Procedure Read-Translate-Table for Field APPT_TYPE
 let $FieldName   = 'APPT_TYPE'
 let $FieldValue  = &A.APPT_TYPE
 
 ! Keys to be passed for Procedure Get-Job-Title
 let $JOBCODE     = &A.JOBCODE
 let $SETID       = &RC.SETID

 do Get-Department-Name
 do Get-Employee-Name
 do Get-Job-Title
 do Get-Supvlvl-Name
 do Read-Translate-Table
 do Get-Prd-Same-Dept
 do Promotion
 do Tamatsuki
 do Print_Line
 do Write-Data-line

FROM  [PS_JOB A, PSTREENODE B, PS_FAST_SQR_SEC_VW SCRTY: $Select_Records]

WHERE A.DEPTID = B.TREE_NODE
AND   A.SETID_DEPT = B.SETID
AND   B.SETID = &RC.SETID
AND   B.TREE_NAME = &RC.TREE_NAME
AND   B.TREE_NODE_NUM BETWEEN #tree_node_num AND #tree_node_num_end
AND   B.EFFDT = &RC.EFFDT_JPN
AND   A.BUSINESS_UNIT = &RC.BUSINESS_UNIT
AND   A.HR_STATUS = 'A'
AND   A.EFFDT = (SELECT MAX(EFFDT)
FROM  PS_JOB
WHERE DEPTID = A.DEPTID
AND   SETID_DEPT  = A.SETID_DEPT
AND   EMPLID = A.EMPLID
AND   EMPL_RCD = A.EMPL_RCD
AND   EFFDT <= &X.ORG_DATE_JPN)
AND   A.EFFSEQ = (SELECT MAX(EFFSEQ)
FROM  PS_JOB
WHERE DEPTID = A.DEPTID
AND   SETID_DEPT  = A.SETID_DEPT
AND   EMPLID = A.EMPLID
AND   EMPL_RCD = A.EMPL_RCD
AND   EFFDT <= &X.ORG_DATE_JPN)
AND   A.EMPLID = SCRTY.EMPLID
AND   A.EMPL_RCD = SCRTY.EMPL_RCD
 [$SecurityClause]
ORDER BY A.DEPTID, A.EMPLID

end-select

end-procedure !Process-Main

!*************************************************************************!
! Get-Prd-Same-Dept
!*************************************************************************!

begin-procedure Get-Prd-Same-Dept

begin-select 

C.EFFDT
C.EFFSEQ
C.ACTION 

 let $ACTION = &C.ACTION
 
 if ($ACTION = 'HIR' or $ACTION = 'REH')
  
  let #Prd_Same_Dept = datediff(&X.ORG_DATE_JPN, &C.EFFDT, 'year')

 else
  do Get-Begin-Date
 end-if

FROM PS_JOB C

WHERE C.EMPLID = $EMPLID
AND   C.EMPL_RCD = #EMPL_RCD
AND   C.EFFDT < &A.EFFDT
AND   ((C.DEPTID <> $DEPTID) 
OR    (C.ACTION IN ('HIR','REH')))
ORDER BY C.EFFDT, C.EFFSEQ DESC

end-select

end-procedure !Get-Prd-Same-Dept

!*************************************************************************!
! Get-Begin-Date
!*************************************************************************!

begin-procedure Get-Begin-Date

begin-select

D.EFFDT

 let #Prd_Same_Dept = datediff(&X.ORG_DATE_JPN, &D.EFFDT, 'year')
 
FROM  PS_JOB D

WHERE D.EMPLID = $EMPLID
AND   D.EMPL_RCD = #EMPL_RCD
AND   ((D.EFFDT > &A.EFFDT)
OR    (D.EFFDT = &A.EFFDT
AND   D.EFFSEQ > &A.EFFSEQ))

end-select
end-procedure !Get-Begin-Date

!*************************************************************************!
! Promotion
!*************************************************************************!

begin-procedure Promotion

 let $Promotion = 'N'

begin-select

'X' 

 let $Promotion = 'Y'

FROM PS_JOB E

WHERE E.EMPLID = $EMPLID
AND   E.EMPL_RCD = #EMPL_RCD
AND   E.EFFDT = &A.EFFDT
AND   E.ACTION = 'PRO'

end-select

end-procedure !Promotion

!*************************************************************************!
! Tamatsuki
!*************************************************************************!

begin-procedure Tamatsuki

 let $Tamatsuki = 'N'

begin-select

'Y' 

 let $Tamatsuki = 'Y'

FROM PS_IDO_CANDIDT_JPN F

WHERE F.ORG_PLAN_JPN = &RC.ORG_PLAN_JPN
AND F.EMPLID = $EMPLID
AND F.EMPL_RCD = #EMPL_RCD

end-select

end-procedure !Tamatsuki

!*************************************************************************!
! Write-csv-heading
!*************************************************************************!
begin-procedure Write-csv-heading
 Let $BUnit_lbl1 = rtrim($BUnit_lbl,':')
 Let $Write_Line = ''
 Let $Write_Line = $Write_Line || $BUnit_lbl1
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $DEPTID_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $DEPT_NAME_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $EMPLID_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $EMPL_RCD_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $NAME_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $APPT_TYPE_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $JOBCODE_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $SUPV_LVL_ID_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $SUPV_LVL_NAME_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $SAL_ADMIN_PLAN_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $GRADE_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $STEP_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $PRD_IN_DEPT_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $PROMOTION_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $TAMAT_CAND_lbl
 Write 1 from $Write_Line
end-procedure !Write-csv-heading

!*************************************************************************************
!*This procedure performs the following:                                             *
!*1.  Places double quotes around string fields.  This is necessary to ensure that   *
!*    a field holding the value of "I have a comma, in the middle" is treated as a   *
!*    string and not 2 separate fields.                                              *
!*2.  Converts decimal to 12.6 format, removing any extra spaces.                    *
!*3.  Converts numbers to 12.0 format, removing any extra spaces.                    *
!*                                                                                   *
!*To use this procedure you need to specify the format of the field: CHAR for        *
!*character fields, NUM for numeric, and DEC for decimal. In addition, you need to   *
!*populate the $input parameter for character fields, and the #input parameter for   *
!*decimal and numeric fields.  Since you have to specify both $input and #input each *
!*time the procedure is called, use a space ' ' for the $input field when converting *
!*numbers/decimals, and use a 0 for the #input field when converting characters.     *
!*************************************************************************************

begin-procedure Prepare-for-Write-JPN ($type, $input, #input, :$result)

If $type = 'DEC'
  Let $result = ltrim(edit(#input,'999999999999.999999'),' ')
Else
  If $type = 'NUM'
    Let $result = ltrim(edit(#input,'999999999999'),' ')
  Else !Type Char
    Let $result = '"'||$input||'"'
  End-If
End-If

end-procedure !Prepare-for-Write-JPN

!*************************************************************************!
! Print Heading
!*************************************************************************!

begin-heading 10
#include 'stdhdgtr.sqc'

   print $org_plan_lbl (+2,1,19)
   print &RC.ORG_PLAN_JPN (0,20,4)
   print $org_date_lbl (0,50,11)
     do Convert-To-DTU-Date (&X.ORG_DATE_JPN, $ORG_DATE_JPN_out)
   print $ORG_DATE_JPN_out (0,61,10)
   print $BUnit_lbl (+1,1,15)
   print &RC.BUSINESS_UNIT (0,20,6)
   print $Tree_Name_lbl (+1,1,11)
   print &RC.TREE_NAME (0,20,19)
   print $Tree_Node_lbl (+1,1,6)
   print &RC.TREE_NODE (0,20,21)

   print $DEPTID_lbl (+2,1,11)
   print $DEPT_NAME_lbl (0,12,11)
   print $EMPLID_lbl (0,23,12)
   print $EMPL_RCD_lbl (0,35,9)
   print $NAME_lbl (0,44,30)
   print $APPT_TYPE_lbl (0,74,11)
   print $JOBCODE_lbl (0,85,11)
   print $SUPV_LVL_ID_lbl (0,96,9)
   print $SUPV_LVL_NAME_lbl (0,105,14)
   print $SAL_ADMIN_PLAN_lbl (0,119,15)
   print $GRADE_lbl (0,134,6)
   print $STEP_lbl (0,140,5)
   print $PRD_IN_DEPT_lbl (0,145,12)
   print $PROMOTION_lbl (0,157,10)
   print $TAMAT_CAND_lbl (0,167,10)
   print '-' (+1,1,177) fill
    

end-heading
!*************************************************************************!
! Print_Line
!*************************************************************************!
begin-procedure Print_Line

   print $DEPTID (+2,1,11)
   print $DeptNameAbbrv (0,12,11)
   print $EMPLID (0,23,12)
   print #EMPL_RCD (0,35,9) edit 99
   print $Name (0,44,30)
   print $XlatShortName (0,74,11)
   print $JobTitleAbbrv (0,85,11)
   print $SUPV_LVL_ID (0,96,9)
   print $SupvlvlNameAbbrv (0,105,11)
   print &A.SAL_ADMIN_PLAN (0,119,10)
   print &A.GRADE (0,134,6)
   print &A.STEP (0,140,5) edit 99
   print #Prd_Same_Dept (0,145,10) !edit 9.9
   print $Promotion (0,157,10)
   print $Tamatsuki (0,167,10)   
   
end-procedure !Print_Line

!*************************************************************************!
! Write-Data-line
!*************************************************************************!
begin-procedure Write-Data-line
 Let $Write_Line = ''
 do Prepare-for-Write-JPN('CHAR',&RC.BUSINESS_UNIT,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$DEPTID,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$DeptNameAbbrv,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$EMPLID,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('NUM',' ',#EMPL_RCD,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$Name,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$XlatShortName,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$JobTitleAbbrv,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$SUPV_LVL_ID,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$SupvlvlNameAbbrv,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',&A.SAL_ADMIN_PLAN,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',&A.GRADE,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('NUM',' ',&A.STEP,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('DEC',' ',#Prd_Same_Dept,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$Promotion,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$Tamatsuki,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 Write 1 from $Write_Line
end-procedure !Write-Data-line

!*************************************************************************!
! SQC Files for called procedures
!*************************************************************************!
#include 'prcsdef.sqc'       !Update Process Request variable declare
#include 'prcsapi.sqc'       !Update Process Request API
#include 'hrsecty.sqc'       !Get SQR Security parameters
#include 'hrsectjp.sqc'      !Get JPN SQR Security parameters
#include 'curdttim.sqc'      !Get-Current-DateTime procedure
#include 'datetime.sqc'      !Routines for date and time formatting
#include 'number.sqc'        !Routines to format numbers
#include 'sqrtrans.sqc'      !Translate SQR strings to given language
#include 'datemath.sqc'      !Date conversion procedures
#include 'getsupjp.sqc'      !Get Supervisor Level Name
#Include 'getempnm.sqc'      !Get Employee Name
#include 'getdptnm.sqc'      !Get Department Name from the Department Table
#include 'getjobtl.sqc'      !Get Job Title from the Job Table
#include 'readxlat.sqc'      !Get XLAT Value
#include 'getlogou.sqc'     !get current logoutput directory
