!***********************************************************************
!  Leave Bank Program Participants                                     *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:03:55:05                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'    !Set environment
#Include 'setup31.sqc'   !Printer and page-size initialization

#define col_emplid               1   !EmplId
#define col_name                15   !Employee Name
#define col_national_id         48   !National ID
#define col_pay_plan            61   !Pay Plan
#define col_gender              80   !Gender
#define col_totals              90   !Totals
#define col_used_hrs           105   !Used Hours Total

!***********************************************************************
!  FGPY029:  Begin Report                                              *
!***********************************************************************
begin-report

  do Init-Report
  do Get-Parameters
  do Process-Main
  do Stdapi-Term

end-report

!**************************
begin-procedure Init-Report
!**************************

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  let $ReportID = 'FGPY029'
  let $ReportTitle = 'LEAVE BANK PROGRAM PARTICIPANTS'
  display  'Report ID: ' noline
  display $ReportTitle

end-procedure

!**************
begin-heading 6
!**************

  print '            '    (1,1)
  print $ReportTitle      (+1,,)          center
  let #RptCol = {ColR} - 2
  print 'Page'            (0,#RptCol)
  print #page-count       (0,+2)      edit 88888888
  let $AgencyTitle = 'For Agency: ' || $Agency
  print $AgencyTitle      (+1,,)          center
  do Format-DateTime($FromDate, $FromDtOut, {DEFDATE},'','')
  do Format-DateTime($ThruDate, $ThruDtout, {DEFDATE},'','')
  let $DateRange = 'From ' || $FromDtOut || ' Thru ' || $ThruDtout
  print $DateRange        (+1,,)          center

end-heading

!*****************************
begin-procedure Get-Parameters
!*****************************

  if $Prcs_Process_Instance = ''
    stop
  else
    do Select-Parameters
    let $Agency = RTRIM(&RUN_CNTL_FG.Company, ' ')
    let $FromDate = RTRIM(&RUN_CNTL_FG.fromdate, ' ')
    let $ThruDate = RTRIM(&RUN_CNTL_FG.thrudate, ' ')
  end-if

end-procedure

!***************************
begin-procedure Process-Main
!***************************

  do Get-ErnCode
  do Process-Bank-ID

end-procedure

!**************************
begin-procedure Get-ErnCode
!**************************

BEGIN-SELECT

DB.ERNCD

FROM PS_EARNINGS_TBL DB
WHERE DB.EFFDT = (SELECT MAX(J.EFFDT)
                  FROM PS_EARNINGS_TBL J
                  WHERE J.ERNCD = DB.ERNCD
                    AND J.EFFDT <= $ThruDate)
  AND DB.EFF_STATUS = 'A'
  AND DB.GVT_LV_EARN_TYPE = 'W'

END-SELECT

end-procedure  !Get-Earn-Codes

!******************************
begin-procedure Process-Bank-ID
!******************************

BEGIN-SELECT DISTINCT

ID.GVT_LEAVE_XFR_TYPE (+2, 1, 3)    bold on-break print=change/top-page
TYP.DESCR             (0, +2, 30)   bold

  do Current-Bank-Hrs
  do Print-Current-Totals
  let #Contributors = 0
  do Print-Contribute-Header
  do Process-Bank-Contributions
  let $RecHeader = 'Approved Leave Recipients - Affecting Employee:'
  do Print-Recipients-Header
  let $LeaveReason = 'E'
  do Process-Recipients
  let $RecHeader = 'Approved Leave Recipients - Affecting Family Member:'
  do Print-Recipients-Header
  let $LeaveReason = 'F'
  do Process-Recipients
  new-page

FROM PS_GVT_LV_BANK_APP ID,
     PS_GVT_JOB JOB,
     PS_GVT_XFR_TYP_TBL TYP
WHERE ID.GVT_LV_MEM_STATUS = 'C'
  AND ID.EMPLID = JOB.EMPLID
  AND ID.EMPL_RCD = JOB.EMPL_RCD
  AND ID.GVT_LEAVE_XFR_TYPE = TYP.GVT_LEAVE_XFR_TYPE
  AND ID.EFFDT = (SELECT MAX(C.EFFDT) FROM PS_GVT_LV_BANK_APP C
                     WHERE C.EMPLID = ID.EMPLID
                       AND C.EMPL_RCD = ID.EMPL_RCD
                       AND C.GVT_LEAVE_XFR_TYPE = ID.GVT_LEAVE_XFR_TYPE
                       AND C.EFFDT BETWEEN $FromDate AND $ThruDate)
  AND JOB.COMPANY = $Agency
  AND JOB.EFFDT = (SELECT MAX(A.EFFDT) FROM PS_GVT_JOB A
                    WHERE A.EMPLID = JOB.EMPLID
                      AND A.EMPL_RCD = JOB.EMPL_RCD
                      AND A.EFFDT <= $ThruDate
                      AND JOB.GVT_STATUS_TYPE IN ('COM', 'COR'))
  AND JOB.EFFSEQ = (SELECT MAX(B.EFFSEQ) FROM PS_GVT_JOB B
                     WHERE B.EMPLID = JOB.EMPLID
                       AND B.EMPL_RCD = JOB.EMPL_RCD
                       AND B.EFFDT = JOB.EFFDT
                       AND B.GVT_STATUS_TYPE IN ('COM', 'COR'))
ORDER BY ID.GVT_LEAVE_XFR_TYPE

END-SELECT

end-procedure

!***********************************
begin-procedure Print-Current-Totals
!***********************************

print 'Current Leave Bank Hours:'   (+2,1)
print #AvailHrs                     (0,+2)     edit 999,999

end-procedure


!**************************************
begin-procedure Print-Contribute-Header
!**************************************

print 'Leave Bank Contributors:'    (+3, 1,) 
print 'Total Hrs'                   (+2, {col_totals},)
print 'EmplId'                      (+1, {col_emplid},)     underline
print 'Name'                        (0, {col_name},)        underline
print 'National ID'                 (0, {col_national_id},) underline
print 'PP/Grade/Step'               (0, {col_pay_plan},)    underline
print 'Gender'                      (0, {col_gender},)      underline
print 'Contributed'                 (0, {col_totals},)      underline


end-procedure

!**************************************
begin-procedure Print-Recipients-Header
!**************************************

print $RecHeader                     (+2, 1,) underline
print 'Total Hrs'                    (+2, {col_totals},)
print 'Total Hrs'                    (0, {col_used_hrs},)
print 'EmplId'                       (+1, {col_emplid},)     underline
print 'Name'                         (0, {col_name},)        underline
print 'National ID'                  (0, {col_national_id},) underline
print 'PP/Grade/Step'                (0, {col_pay_plan},)    underline
print 'Gender'                       (0, {col_gender},)      underline
print 'Recieved'                     (0, {col_totals},)      underline
print 'Used'                         (0, {col_used_hrs},)    underline


end-procedure

!*****************************************
begin-procedure Process-Bank-Contributions
!*****************************************

BEGIN-SELECT

BANK.EMPLID
BANK.GVT_LV_ANNL_CONT
BANK.GVT_LEAVE_XFR_TYPE
JOB1.GVT_STEP
JOB1.GVT_PAY_PLAN
JOB1.GRADE

  let #Contributors = #Contributors + 1
  move &BANK.EMPLID to $emplid
  do Get-Personal-Data
  do Get-NID
  do Print-Bank-Detail

FROM PS_GVT_LV_BANK_APP BANK,
     PS_GVT_JOB JOB1
WHERE BANK.GVT_LV_MEM_STATUS = 'C'
  AND BANK.GVT_LEAVE_XFR_TYPE = &ID.GVT_LEAVE_XFR_TYPE
  AND BANK.EMPLID = JOB1.EMPLID
  AND BANK.EMPL_RCD = JOB1.EMPL_RCD
  AND BANK.EFFDT = (SELECT MAX(D.EFFDT) FROM PS_GVT_LV_BANK_APP D
                     WHERE D.EMPLID = BANK.EMPLID
                       AND D.EMPL_RCD = BANK.EMPL_RCD
                       AND D.GVT_LEAVE_XFR_TYPE = BANK.GVT_LEAVE_XFR_TYPE
                       AND D.EFFDT BETWEEN $FromDate AND $ThruDate)
  AND JOB1.COMPANY = $Agency
  AND JOB1.EFFDT = (SELECT MAX(E.EFFDT) FROM PS_GVT_JOB E
                    WHERE E.EMPLID = JOB1.EMPLID
                      AND E.EMPL_RCD = JOB1.EMPL_RCD
                      AND E.EFFDT <= $ThruDate
                      AND JOB1.GVT_STATUS_TYPE IN ('COM', 'COR'))
  AND JOB1.EFFSEQ = (SELECT MAX(F.EFFSEQ) FROM PS_GVT_JOB F
                     WHERE F.EMPLID = JOB1.EMPLID
                       AND F.EMPL_RCD = JOB1.EMPL_RCD
                       AND F.EFFDT = JOB1.EFFDT
                       AND F.GVT_STATUS_TYPE IN ('COM', 'COR'))
ORDER BY BANK.GVT_LEAVE_XFR_TYPE

END-SELECT

  print 'TOTAL Contributors:  ' (+2, {col_totals})  underline
  print #Contributors           (,) underline
  print '_'                            (+2,1,115) fill

end-procedure

!********************************
begin-procedure Print-Bank-Detail
!********************************

  print &BANK.EMPLID                    (+1, {col_emplid})
  print &PERS.NAME                      (0, {col_name})
  print &NID.NATIONAL_ID                (0, {col_national_id})

  let $JobData = &JOB1.GVT_PAY_PLAN || '/' || RTRIM(&JOB1.GRADE, ' ') || '/' || &JOB1.GVT_STEP

  print $JobData                        (0, {col_pay_plan})
  let $Fieldname = 'SEX'
  let $Fieldvalue = &PERS.SEX
  Do Read-Translate-Table
  print $Xlatlongname                   (0, {col_gender})
  print &BANK.GVT_LV_ANNL_CONT          (0, {col_totals})

end-procedure

!*************************************
begin-procedure Print-Recipient-Detail
!*************************************

  print $emplid                         (+1, {col_emplid})
  print &PERS.NAME                      (0, {col_name})
  print &NID.NATIONAL_ID                (0, {col_national_id})

  let $JobData = &JOB2.GVT_PAY_PLAN || '/' || RTRIM(&JOB2.GRADE, ' ') || '/' || &JOB2.GVT_STEP

  print $JobData                        (0, {col_pay_plan})
  let $Fieldname = 'SEX'
  let $Fieldvalue = &PERS.SEX
  Do Read-Translate-Table
  print $Xlatlongname                   (0, {col_gender}) 
  print &EMP.GVT_LV_DUR_HOURS           (0, {col_totals})
  print #TotalUsed                      (0, {col_used_hrs})

end-procedure

!********************************
begin-procedure Get-Personal-Data
!********************************

BEGIN-SELECT

PERS.NAME
PERS.SEX

FROM PS_PERSONAL_DT_FST PERS

WHERE PERS.EMPLID = $emplid

END-SELECT

end-procedure

!**********************
begin-procedure Get-NID
!**********************

BEGIN-SELECT

NID.NATIONAL_ID

FROM PS_PERS_NID NID

WHERE NID.EMPLID = $emplid

END-SELECT

end-procedure

!*******************************
begin-procedure Current-Bank-Hrs
!*******************************

BEGIN-SELECT

SUM(LA.GVT_HRS_USED) &bankCon
FROM PS_GVT_LVBANK_LDGR LA
WHERE LA.GVT_LEAVE_XFR_TYPE = &ID.GVT_LEAVE_XFR_TYPE
  AND LA.GVT_LV_WITH_CONTR = 'C'

END-SELECT

BEGIN-SELECT

SUM(LB.GVT_HRS_USED)  &BankWdraw
FROM PS_GVT_LVBANK_LDGR LB
WHERE LB.GVT_LEAVE_XFR_TYPE = &ID.GVT_LEAVE_XFR_TYPE
  AND LB.GVT_LV_WITH_CONTR = 'W'

END-SELECT

BEGIN-SELECT

SUM(LC.GVT_HRS_USED) &AgyCon

FROM PS_GVT_LV_AGY_LDGR LC
WHERE LC.GVT_LEAVE_XFR_TYPE = &ID.GVT_LEAVE_XFR_TYPE
  AND LC.GVT_LV_WITH_CONTR = 'C'

END-SELECT

BEGIN-SELECT

SUM(LD.GVT_HRS_USED) &AgyWdraw

FROM PS_GVT_LV_AGY_LDGR LD
WHERE LD.GVT_LEAVE_XFR_TYPE = &ID.GVT_LEAVE_XFR_TYPE
  AND LD.GVT_LV_WITH_CONTR = 'W'

END-SELECT

  move &bankCon to #BankCon
  move &BankWdraw to #BankWdraw
  move &AgyCon to #AgyCon
  move &AgyWdraw to #AgyWdraw

  let #AvailHrs = (#BankCon  + #AgyCon) - (#BankWdraw + #AgyWdraw)

end-procedure

!*********************************
begin-procedure Process-Recipients
!*********************************

  let #Recipients = 0

BEGIN-SELECT
EMP.EMPLID
EMP.EMPL_RCD
EMP.GVT_LV_DUR_HOURS
JOB2.GVT_STEP
JOB2.GVT_PAY_PLAN
JOB2.GRADE


  move &EMP.EMPLID to $emplid
  let #Recipients = #Recipients + 1
  do Get-Personal-Data
  do Get-NID
  do Get-Hrs-Used
  do Print-Recipient-Detail

FROM PS_GVT_LV_REC_APP EMP, PS_GVT_JOB JOB2
WHERE EMP.GVT_LV_APP_STATUS = 'A'
  AND EMP.GVT_LEAVE_XFR_TYPE = &ID.GVT_LEAVE_XFR_TYPE
  AND EMP.GVT_LEAVE_REASON = $LeaveReason
  AND EMP.START_DATE BETWEEN $FromDate AND $ThruDate
  AND EMP.EMPLID = JOB2.EMPLID
  AND EMP.EMPL_RCD = JOB2.EMPL_RCD
  AND EMP.EFFDT <= $ThruDate
  AND JOB2.COMPANY = $Agency
  AND JOB2.EFFDT = (SELECT MAX(H.EFFDT) FROM PS_GVT_JOB H
                   WHERE H.EMPLID = JOB2.EMPLID
                     AND H.EMPL_RCD = JOB2.EMPL_RCD
                     AND H.EFFDT <= $ThruDate
                     AND JOB2.GVT_STATUS_TYPE IN ('COM', 'COR'))
  AND JOB2.EFFSEQ = (SELECT MAX(I.EFFSEQ) FROM PS_GVT_JOB I
                    WHERE I.EMPLID = JOB2.EMPLID
                      AND I.EMPL_RCD = JOB2.EMPL_RCD
                      AND I.EFFDT = JOB2.EFFDT
                      AND I.GVT_STATUS_TYPE IN ('COM', 'COR'))

END-SELECT

  if $LeaveReason = 'E'
    print 'TOTAL - Employee:  ' (+2, {col_totals})  underline
    print #Recipients           (,)   underline
    print '_'                            (+2,1,115) fill
  else
    print 'TOTAL - Family Member:  ' (+2, {col_totals})  underline
    print #Recipients           (,)   underline
  end-if
 
end-procedure

!*********************************
begin-procedure Get-Hrs-Used
!*********************************

let #TotalUsed = 0
BEGIN-SELECT

CHK.COMPANY
CHK.PAYGROUP
CHK.PAY_END_DT
CHK.OFF_CYCLE
CHK.PAGE_NUM
CHK.LINE_NUM
CHK.SEPCHK

  do Get-Oth-Earns
  let #TotalUsed = #TotalUsed + &OthHrs

FROM PS_PAY_CHECK CHK WHERE CHK.PAY_END_DT BETWEEN $FromDate AND $ThruDate
AND CHK.EMPLID = &EMP.EMPLID
AND CHK.EMPL_RCD = &EMP.EMPL_RCD
AND CHK.COMPANY = $Agency


END-SELECT

end-procedure

!****************************
begin-procedure Get-Oth-Earns
!****************************
BEGIN-SELECT

SUM(OTH.OTH_HRS) &OthHrs

FROM PS_PAY_OTH_EARNS_V OTH
WHERE OTH.ERNCD = &DB.ERNCD
AND OTH.COMPANY = &CHK.COMPANY
AND OTH.PAYGROUP = &CHK.PAYGROUP
AND OTH.PAY_END_DT = &CHK.PAY_END_DT
AND OTH.OFF_CYCLE = &CHK.OFF_CYCLE
AND OTH.PAGE_NUM = &CHK.PAGE_NUM
AND OTH.LINE_NUM = &CHK.LINE_NUM
AND OTH.SEPCHK = &CHK.SEPCHK

END-SELECT

end-procedure

!***********************************************************************
!  The following are include sqc files                                 *
!***********************************************************************
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'fgrunctl.sqc'  !Select Parameters
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'datemath.sqc'  !Do date manipulation
!*---------------------------------------------------------------------*
