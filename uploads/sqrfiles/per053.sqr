!******************************************
!  PER053:  Equal Opportunities          *
!******************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!          $Date:  2006/07/19:14:47:21                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-heading 7

  do Get_Field_Information ('PER053',    'REPORT_TITLE',      $REPORTTITLE,          #DW)
  #Include 'stdhdgtr.sqc'

  let $title = $REPORTTITLE || ':'
  print $TITLE     (3,1)

end-heading


!******************************************************************************
! Heading for Table1
!******************************************************************************


begin-procedure Heading_table1

  print 'TABELLA 1'                               (+1,1)
  print 'INFORMAZIONI GENERALI SULLA AZIENDA'     (+2,1)

end-procedure



!************************************
! Create Table 1
!************************************
begin-procedure Create-Table1


begin-SELECT DISTINCT
W.COMPANY,
W.DESCR,
W.LEGAL_TYPE,
W.CITY

  print 'Azienda'               (+2,1)
  print &W.COMPANY              (0,40)
  print &W.DESCR                (0,48)
  print 'Ragione Sociale'       (+2,1)
  print &W.LEGAL_TYPE           (0,40)
  print 'Sede Legale'           (+2,1)
  print &W.CITY                 (0,40)

FROM  PS_COMPANY_TBL W
WHERE W.COMPANY = $Company
  AND W.EFFDT =
      (SELECT MAX(Y.EFFDT)
       FROM PS_COMPANY_TBL Y
       WHERE Y.COMPANY = W.COMPANY
         AND Y.EFFDT <= $ThruDate)
  AND W.EFF_STATUS = 'A'
end-SELECT


print 'Occupazione al'          (+2,1)
print $ThruDatePrint            (0,20)
print 'di cui'                  (+1,1)

begin-select

  print 'Occupati'              (+2,1)
A.SEX
  move &A.SEX to $Sex
  move 'SEX'  to $FieldName
  move &A.SEX to $FieldValue
  do Read-Translate-Table
  print $XlatLongName           (0,10)
count(*)                        (0,40)

FROM PS_PERS_DATA_EFFDT A, PS_JOB B
where A.EMPLID=B.EMPLID
  and B.HR_STATUS = 'A'
  and B.EFFDT=
      (SELECT MAX(F.EFFDT)
       FROM PS_JOB F
       WHERE F.EMPLID = B.EMPLID
         AND F.EFFDT <= $ThruDate)
  AND B.EFFSEQ =
      (SELECT MAX(I.EFFSEQ)
       FROM PS_JOB I
       WHERE I.EMPLID = B.EMPLID
        AND I.EMPL_RCD = B.EMPL_RCD
        AND I.EFFDT = B.EFFDT)
  AND B.COMPANY = $Company

GROUP BY A.SEX
end-select

print ' ' (+3,1)
print 'Contratti collettivi'          (+2,1)
print 'Codice'                        (0,40)
print 'Occupati'                      (0,60)


if $Unita <> '%'
 do SelectWithUP
else
 do SelectWithoutUP
end-if
end-procedure



begin-procedure SelectWithUP

begin-select

count(*)   &EeCount1
            Print &EeCount1                (+2,60)
B1.LABOR_AGREEMENT                        (0,40)
C1.DESCR                                  (0,1)
FROM PS_PERS_DATA_EFFDT A1, PS_JOB B1, PS_JOB_JR BJ1, PS_EMPL_CTG C1, PS_UNITA_PROD_TBL K2
where A1.EMPLID=B1.EMPLID
  AND BJ1.EMPLID = B1.EMPLID AND BJ1.EMPL_RCD = B1.EMPL_RCD AND BJ1.EFFDT = B1.EFFDT AND BJ1.EFFSEQ = B1.EFFSEQ
  and B1.HR_STATUS = 'A'
  and B1.EFFDT=
     (SELECT MAX(F1.EFFDT)
       FROM PS_JOB F1
       WHERE F1.EMPLID = B1.EMPLID
         AND F1.EFFDT <= $ThruDate)
  AND B1.EFFSEQ =
      (SELECT MAX(I1.EFFSEQ)
       FROM PS_JOB I1
       WHERE I1.EMPLID = B1.EMPLID
        AND I1.EMPL_RCD = B1.EMPL_RCD
        AND I1.EFFDT = B1.EFFDT)
  AND B1.COMPANY = $Company
  AND B1.SETID_LBR_AGRMNT = C1.SETID
  AND B1.LABOR_AGREEMENT = C1.LABOR_AGREEMENT
  AND C1.EFFDT =
    (SELECT MAX(CTG.EFFDT)
     FROM PS_EMPL_CTG CTG
     WHERE CTG.SETID = C1.SETID
     AND CTG.LABOR_AGREEMENT = C1.LABOR_AGREEMENT
     AND CTG.EFFDT <= $ThruDate)
  AND C1.EFF_STATUS = 'A'
  AND BJ1.UNITA_PROD_CD = K2.UNITA_PROD_CD
  AND K2.COMPANY = $Company
  AND K2.CITY = $City
  AND K2.EFFDT =
    (SELECT MAX(KK2.EFFDT)
     FROM PS_UNITA_PROD_TBL KK2
     WHERE KK2.COMPANY = $Company
     AND KK2.EFFDT <= $ThruDate
     AND KK2.CITY = $City)
 GROUP BY B1.LABOR_AGREEMENT,C1.DESCR
end-select

end-procedure


begin-procedure SelectWithoutUP

begin-select
B11.LABOR_AGREEMENT                        (+2,40)
C11.DESCR                                  (0,1)
count(*)   &EeCount2
            Print &EeCount2                 (0,48)
 FROM PS_PERS_DATA_EFFDT A11, PS_JOB B11, PS_JOB_JR BJ11, PS_EMPL_CTG C11
 where A11.EMPLID=B11.EMPLID
  AND BJ11.EMPLID = B11.EMPLID AND BJ11.EMPL_RCD = B11.EMPL_RCD AND BJ11.EFFDT = B11.EFFDT AND BJ11.EFFSEQ = B11.EFFSEQ
  and B11.HR_STATUS = 'A'
  and B11.EFFDT=
     (SELECT MAX(F11.EFFDT)
       FROM PS_JOB F11
       WHERE F11.EMPLID = B11.EMPLID
         AND F11.EFFDT <= $ThruDate)
  AND B11.EFFSEQ =
      (SELECT MAX(I11.EFFSEQ)
       FROM PS_JOB I11
       WHERE I11.EMPLID = B11.EMPLID
        AND I11.EMPL_RCD = B11.EMPL_RCD
        AND I11.EFFDT = B11.EFFDT)
  AND B11.COMPANY = $Company
  AND B11.SETID_LBR_AGRMNT = C11.SETID
  AND B11.LABOR_AGREEMENT = C11.LABOR_AGREEMENT
  AND C11.EFFDT =
    (SELECT MAX(CTG.EFFDT)
     FROM PS_EMPL_CTG CTG
     WHERE CTG.SETID = C11.SETID
     AND CTG.LABOR_AGREEMENT = C11.LABOR_AGREEMENT
     AND CTG.EFFDT <= $ThruDate)
  AND C11.EFF_STATUS = 'A'
 GROUP BY B11.LABOR_AGREEMENT,C11.DESCR
 end-select

end-procedure



!******************************************************************************
! Heading for Table2
!******************************************************************************

begin-procedure Heading_table2

  print 'TABELLA 2'                               (+1,1)
  print 'INFORMAZIONI GENERALI SULLE UNITA IN AMBITO COMUNALE'     (+2,1)
  print 'per il comune di'      (+2,1)
  print $City                   (0,30)


  PRINT 'Numero totale unita produttive presenti nel comune'    (+2,1)

begin-select
count(*)   &EeCount3
           Print &EeCount3                  (0,60)
FROM PS_UNITA_PROD_TBL U
where U.CITY = $City
and U.COMPANY = $Company
and U.EFFDT = (SELECT max(RR.EFFDT)
                FROM PS_UNITA_PROD_TBL RR
                where RR.CITY = $City
                and RR.COMPANY = $Company
                and RR.EFFDT <= $ThruDatePrint
                and U.UNITA_PROD_CD = RR.UNITA_PROD_CD)
end-select


if $Unita = '%'

  print 'Occupati alle dipendenze per ciascuna unita produttiva al'   (+2,1)
  print $ThruDatePrint                                                (0,65)
  print 'Unita Produttive'                 (+3,1)

else

  print 'Unita Produttiva '                       (+2,1)
  print $Unita                                    (0,20)

end-if



print 'Categoria       '                 (0,40)
print 'Maschi'                           (0,70)
print 'Femmine'                          (0,80)

end-procedure


!************************************
! Create Table 2
!************************************


begin-procedure Create-Table2


let #cntgender = 0

begin-SELECT
K.DESCR
UPR.UNITA_PROD_CD  () On-Break Level = 1 Before = PrintUnitUPR  Print=Never
UPR.SETID_LBR_AGRMNT
UPR.LABOR_AGREEMENT
UPR.EMPL_CTG       () On-Break Level = 1 Before = PrintCategoryUPR  Print=Never
UPR.SEX            () On-Break Level = 2 After = PrintGenderUPR Print=Never

    let $Sex = &UPR.SEX
    let #cntgender = #cntgender + 1

UPR.EFFDT
FROM PS_R_PER053_MAX UPR, PS_UNITA_PROD_TBL K
WHERE UPR.EFFDT = (SELECT MAX(UP1.EFFDT) FROM PS_R_PER053_MAX UP1 WHERE UPR.EMPLID = UP1.EMPLID)
AND UPR.UNITA_PROD_CD = K.UNITA_PROD_CD
AND K.COMPANY = $Company
AND K.CITY = $City
AND K.EFFDT =
    (SELECT MAX(KK.EFFDT)
     FROM PS_UNITA_PROD_TBL KK
     WHERE KK.COMPANY = $Company
     AND KK.EFFDT <= $ThruDate
     AND KK.CITY = $City)
     AND UPR.UNITA_PROD_CD like '%'
ORDER BY UPR.UNITA_PROD_CD,UPR.EMPL_CTG,UPR.SEX
end-SELECT

end-procedure

!************************************
 Begin-Procedure PrintUnitUPR
!************************************

print &UPR.UNITA_PROD_CD    (+2,1)
print &K.DESCR              (0,10)
let #jump = 0

end-procedure


!************************************
 Begin-Procedure PrintCategoryUPR
!************************************
begin-SELECT DISTINCT
DE4.DESCR
  print &DE4.DESCR           (+#jump,40)
  let #jump = 2
FROM PS_EMPL_CTG_L1 DE4
where DE4.EMPL_CTG = &UPR.EMPL_CTG
and DE4.SETID = &UPR.SETID_LBR_AGRMNT
and DE4.LABOR_AGREEMENT=&UPR.LABOR_AGREEMENT
and DE4.EFFDT = (SELECT MAX(EFFDT) FROM PS_EMPL_CTG_L1 WHERE SETID = DE4.SETID AND LABOR_AGREEMENT = DE4.LABOR_AGREEMENT AND EMPL_CTG = DE4.EMPL_CTG AND EFFDT <= &UPR.EFFDT)
and DE4.EFF_STATUS = 'A'
end-SELECT

end-procedure

!************************************
 Begin-Procedure PrintGenderUPR
!************************************

if $Sex = 'M'
  print #cntgender      (0,70)
else
  if $Sex = 'F'
    print #cntgender      (0,80)
  end-if
end-if

let #cntgender = 0
end-procedure



!******************************************************************************
! Heading for Table3
!******************************************************************************


begin-procedure Heading_table3

print 'TABELLA 3'                               (+1,1)


print 'Comune di  '                       (0,40)
print $City                                    (0,50)

if $Unita <> '%'
  print 'Unita Produttiva '                       (+1,40)
  print $Unita                                    (0,60)
end-if

print 'Occupati alle dipendenze al'             (+2,1)
print $FromDatePrint                            (0,30)
print 'e al'                                    (0,50)
print $ThruDatePrint                            (0,57)

print 'Categoria'                               (+3,1)
print 'Occupati al'                             (0,30)
print $FromDatePrint                            (0,44)
print 'Entrate'                                 (0,60)
print 'Uscite'                                  (0,80)
print 'Occupati al'                             (0,100)
print $ThruDatePrint                            (0,113)

print 'Maschi'                                  (+1,30)
print 'Femmine'                                 (0,40)
print 'Maschi'                                  (0,60)
print 'Femmine'                                 (0,70)
print 'Maschi'                                  (0,80)
print 'Femmine'                                 (0,90)
print 'Maschi'                                  (0,100)
print 'Femmine'                                 (0,110)

end-procedure


!************************************
! Create Table 3
!************************************

begin-procedure Create-Table3

print ' '   (+4,1)

Position (9,60)
let #CountPeople = 0
let #CountEntrate = 0
let #CountUscite = 0
let #cntgender = 0
let #PrintZone1 = 60
let #PrintZone2 = 70
let #PrintZone3 = 80
let #PrintZone4 = 90

begin-SELECT
PPP.SETID_LBR_AGRMNT
PPP.LABOR_AGREEMENT
PPP.EMPL_CTG  () On-Break Level = 1 Before = PrintCategoryPPP  Print=Never Skiplines=0
PPP.FLAG      () On-Break Level = 2 Before = SetColumnPPP Print=Never
PPP.SEX       () On-Break Level = 3 After = PrintGenderPPP Print=Never

     let #CountPeople = #CountPeople + 1
     let $sex = &PPP.SEX
     let $Flag = &PPP.FLAG

PPP.ACTION_ITA
     if &PPP.FLAG = '2'
        if &PPP.ACTION_ITA ='HIR'
           let #CountPeopleE = #CountPeopleE + 1
        else
           if &PPP.ACTION_ITA ='TER'
              let #CountPeopleU = #CountPeopleU + 1
           end-if
        end-if
     end-if
PPP.EFFDT
FROM PS_R_PER053_ALL PPP
ORDER BY PPP.EMPL_CTG,PPP.FLAG,PPP.SEX

end-SELECT

end-procedure


!************************************
 Begin-Procedure PrintCategoryPPP
!************************************
begin-SELECT DISTINCT
DES.DESCR
  print &DES.DESCR           (+2,1)
FROM PS_EMPL_CTG_L1 DES
where DES.EMPL_CTG = &PPP.EMPL_CTG
and DES.LABOR_AGREEMENT=&PPP.LABOR_AGREEMENT
and DES.SETID = &PPP.SETID_LBR_AGRMNT
and DES.EFFDT = (SELECT MAX(EFFDT) FROM PS_EMPL_CTG_L1 WHERE SETID = DES.SETID AND LABOR_AGREEMENT = DES.LABOR_AGREEMENT AND EMPL_CTG = DES.EMPL_CTG AND EFFDT <= &PPP.EFFDT)
and DES.EFF_STATUS = 'A'
end-SELECT
end-procedure



!************************************
! SetColumnPPP
!************************************

begin-procedure SetColumnPPP

  if &PPP.FLAG = '1'
     move 30 to #ColumnNumberM
     move 40 to #ColumnNumberF
  else
     if &PPP.FLAG = '3'
        move 100 to #ColumnNumberM
        move 110 to #ColumnNumberF
     end-if
  end-if
end-procedure


!******************************************************************************
! Heading for Table4
!******************************************************************************


begin-procedure Heading_table4

print 'TABELLA 4'                               (+1,1)


print 'Comune di  '                       (0,40)
print $City                                    (0,50)

if $Unita <> '%'
  print 'Unita Produttiva '                       (+1,40)
  print $Unita                                    (0,60)
end-if



print 'Occupati alle dipendenze al'             (+2,1)
print $ThruDatePrint                            (0,30)

print 'Categoria'                               (+3,1)
print 'Livello'                                 (0,30)
print 'Occupazione al'                          (0,45)
print $ThruDatePrint                            (0,62)
print 'Promozioni'                              (0,75)
print 'Assunzioni'                              (0,95)

print 'Maschi'                                  (+1,45)
print 'Femmine'                                 (0,55)
print 'Maschi'                                  (0,75)
print 'Femmine'                                 (0,85)
print 'Maschi'                                  (0,95)
print 'Femmine'                                 (0,105)

end-procedure




!************************************
! Create Table 4
!************************************

begin-procedure Create-Table4


Position (9,60)
let #CountProm = 0
let #CountAss = 0
let #cntgender = 0
let #CountPeople = 0

let #PrintZone1 = 75
let #PrintZone2 = 85
let #PrintZone3 = 95
let #PrintZone4 = 105

begin-SELECT
MD2.EMPLID
MD2.SETID_LBR_AGRMNT
MD2.LABOR_AGREEMENT
MD2.EMPL_CTG     () On-Break Level = 1 Before = PrintCategoryMD2 Print=Never Skiplines=0
MD2.EMPL_CTG_L1  () On-Break Level = 2 Before = PrintLevelMD2 Print=Never Skiplines=0
MD2.FLAG         () On-Break Level = 3 Before = SetColumnMD2 Print=Never
MD2.SEX          () On-Break Level = 4 After = PrintGenderPPP Print=Never

     let #CountPeople = #CountPeople + 1
     let $sex = &MD2.SEX
     let $Flag = &MD2.FLAG

MD2.ACTION_ITA
MD2.ACTION
   if &MD2.FLAG = '2'
      if &MD2.ACTION_ITA ='HIR'
         let #CountAss = #CountAss + 1
      end-if
      if &MD2.ACTION ='PRO'
            let #CountProm = #CountProm + 1
      end-if
   end-if
   let #CountPeopleE = #CountProm
   let #CountPeopleU = #CountAss
MD2.EFFDT
FROM PS_R_PER053_ALL MD2, PS_EMPL_CTG_L1 DE1
WHERE MD2.FLAG <> '1'
AND DE1.EMPL_CTG = MD2.EMPL_CTG
AND DE1.LABOR_AGREEMENT=MD2.LABOR_AGREEMENT
AND DE1.SETID = MD2.SETID_LBR_AGRMNT
AND DE1.EFFDT = (SELECT MAX(EFFDT) FROM PS_EMPL_CTG_L1 WHERE SETID = DE1.SETID AND LABOR_AGREEMENT = DE1.LABOR_AGREEMENT AND EMPL_CTG = DE1.EMPL_CTG AND EFFDT <= MD2.EFFDT)
AND DE1.EFF_STATUS = 'A'
ORDER BY MD2.EMPL_CTG,MD2.EMPL_CTG_L1,MD2.FLAG,MD2.SEX
end-SELECT

end-procedure


!************************************
 Begin-Procedure PrintCategoryMD2
!************************************

begin-SELECT DISTINCT
DE1.DESCR
  print &DE1.DESCR           (+2,1)
  let #jump = 0
FROM PS_EMPL_CTG_L1 DE1
where DE1.EMPL_CTG = &MD2.EMPL_CTG
and DE1.LABOR_AGREEMENT=&MD2.LABOR_AGREEMENT
and DE1.SETID = &MD2.SETID_LBR_AGRMNT
and DE1.EFFDT = (SELECT MAX(EFFDT) FROM PS_EMPL_CTG_L1 WHERE SETID = DE1.SETID AND LABOR_AGREEMENT = DE1.LABOR_AGREEMENT AND EMPL_CTG = DE1.EMPL_CTG AND EFFDT <= &MD2.EFFDT)
end-SELECT
end-procedure


!************************************
 Begin-Procedure PrintLevelMD2
!************************************

begin-SELECT  DISTINCT
SUB4.DESCR
   print &MD2.EMPL_CTG_L1      (+#jump,30)
   let #jump = 2
FROM PS_EMPL_CTG_L2 SUB4
where SUB4.EMPL_CTG = &MD2.EMPL_CTG
and SUB4.EMPL_CTG_L1 = &MD2.EMPL_CTG_L1
and SUB4.LABOR_AGREEMENT = &MD2.LABOR_AGREEMENT
and SUB4.SETID = &MD2.SETID_LBR_AGRMNT
and SUB4.EFFDT = (SELECT MAX(EFFDT) FROM PS_EMPL_CTG_L2 WHERE SETID = SUB4.SETID AND LABOR_AGREEMENT = SUB4.LABOR_AGREEMENT AND EMPL_CTG = SUB4.EMPL_CTG AND EMPL_CTG_L1 = SUB4.EMPL_CTG_L1 AND EFFDT <= &MD2.EFFDT)
end-SELECT
end-procedure


!************************************
! SetColumnMD2
!************************************

begin-procedure SetColumnMD2

  if &MD2.FLAG = '1'
     move 125 to #ColumnNumberM
     move 135 to #ColumnNumberF
  else
     if &MD2.FLAG = '3'
        move 45 to #ColumnNumberM
        move 55 to #ColumnNumberF
     end-if
  end-if
end-procedure



!************************************
 Begin-Procedure PrintGenderPPP
!************************************


if $sex  = 'F'
     if $Flag = '2'
        move #PrintZone2 to #ColumnNumberE
        move #PrintZone4 to #ColumnNumberU
        if #CountPeopleE <> 0
           print #CountPeopleE       (0,#ColumnNumberE)
        end-if
        if #CountPeopleU <> 0
           print #CountPeopleU       (0,#ColumnNumberU)
        end-if
     else
        print #CountPeople       (0,#ColumnNumberF)
     end-if
else
   if $sex = 'M'
      if $Flag = '2'
         move #PrintZone1 to #ColumnNumberE
         move #PrintZone3 to #ColumnNumberU
         if #CountPeopleE <> 0
            print #CountPeopleE       (0,#ColumnNumberE)
         end-if
         if #CountPeopleU <> 0
            print #CountPeopleU       (0,#ColumnNumberU)
         end-if
      else
         print #CountPeople       (0,#ColumnNumberM)
      end-if
   end-if
end-if
let #CountGender = 0
let #CountPeople = 0
let #CountPeopleU = 0
let #CountPeopleE = 0
let #CountPeopleF = 0
let #CountPeopleM = 0
let #CountEntrate = 0
let #CountUscite = 0
let #CountProm = 0
let #CountAss = 0

end-procedure


!******************************************************************************
! Heading for Table5
!******************************************************************************

begin-procedure Heading_table5

print 'TABELLA 5'                               (+1,1)


print 'Comune di  '                             (0,40)
print $City                                     (0,50)

if $Unita <> '%'
  print 'Unita Produttiva '                     (+1,40)
  print $Unita                                  (0,60)
end-if


print 'Occupati alle dipendenze al'             (+2,1)
print $ThruDatePrint                            (0,30)

print 'Categoria'                               (+3,1)
print 'Tempo Indet'                             (0,30)
print 'Tempo Deter'                             (0,50)
print 'Formazione'                              (0,70)
print 'Apprendistato'                           (0,90)
print 'Solidarieta'                             (0,110)

print 'Maschi'                                  (+1,30)
print 'Femmine'                                 (0,40)
print 'Maschi'                                  (0,50)
print 'Femmine'                                 (0,60)
print 'Maschi'                                  (0,70)
print 'Femmine'                                 (0,80)
print 'Maschi'                                  (0,90)
print 'Femmine'                                 (0,100)
print 'Maschi'                                  (0,110)
print 'Femmine'                                 (0,120)

end-procedure



!************************************
! Create Table 5
!************************************

begin-procedure Create-Table5

let #cntgender = 0
let #Countind = 0
let #Countdet = 0
let #CountForm = 0
let #CountAppr = 0
let #CountSolid = 0

begin-SELECT
MX3.SETID_LBR_AGRMNT
MX3.LABOR_AGREEMENT
MX3.EMPL_CTG  () On-Break Level = 1 Before = PrintCategoryMX3  Print=Never
MX3.SEX       () On-Break Level = 2 After = PrintContract Print=Never

    let $Sex = &MX3.SEX

CNT.CONTRACT_TYPE

  if &CNT.CONTRACT_TYPE = '001'
    let #Countdet = #Countdet + 1
  end-if

  if &CNT.CONTRACT_TYPE = '002'
    let #Countind = #Countind + 1
  end-if

  if &CNT.CONTRACT_TYPE = '003'
    let #CountForm = #CountForm + 1
  end-if

  if &CNT.CONTRACT_TYPE = '004'
    let #CountAppr = #CountAppr + 1
  end-if

  if &CNT.CONTRACT_TYPE = '005'
    let #CountSolid = #CountSolid + 1
  end-if
MX3.EFFDT
FROM PS_R_PER053_MAX MX3, PS_WKF_CNT_TYPE CNT
WHERE MX3.EMPLID = CNT.EMPLID
  AND CNT.EFFDT =
      (SELECT MAX(CNT1.EFFDT)
       FROM PS_WKF_CNT_TYPE CNT1
       WHERE CNT.EMPLID = CNT1.EMPLID
         AND CNT.EFFDT <= $ThruDate)
ORDER BY MX3.SETID_LBR_AGRMNT,MX3.LABOR_AGREEMENT,MX3.EMPL_CTG,MX3.SEX
end-SELECT

end-procedure

!************************************
 Begin-Procedure PrintCategoryMX3
!************************************

begin-SELECT DISTINCT
DE2.DESCR
  print &DE2.DESCR           (+2,1)
FROM PS_EMPL_CTG_L1 DE2
where DE2.EMPL_CTG = &MX3.EMPL_CTG
and DE2.LABOR_AGREEMENT=&MX3.LABOR_AGREEMENT
and DE2.SETID = &MX3.SETID_LBR_AGRMNT
and DE2.EFFDT = (SELECT MAX(EFFDT) FROM PS_EMPL_CTG_L1 WHERE SETID = DE2.SETID AND LABOR_AGREEMENT = DE2.LABOR_AGREEMENT AND EMPL_CTG = DE2.EMPL_CTG AND EFFDT <= &MX3.EFFDT)
and DE2.EFF_STATUS = 'A'
end-SELECT
end-procedure

!************************************
 Begin-Procedure PrintContract
!************************************

if $Sex = 'F'

 if #Countind > 0
  print #Countind        (0,40)
 end-if
 if #Countdet > 0
  print #Countdet        (0,60)
 end-if
 if #CountForm > 0
  print #CountForm       (0,80)
 end-if
 if #CountAppr > 0
  print #CountAppr       (0,100)
 end-if
 if #CountSolid > 0
  print #CountSolid      (0,120)
 end-if

  let #cntgender = 0
  let #Countind = 0
  let #Countdet = 0
  let #CountForm = 0
  let #CountAppr = 0
  let #CountSolid = 0
else
  if $Sex = 'M'

         if #Countind > 0
          print #Countind        (0,40)
         end-if
         if #Countdet > 0
          print #Countdet        (0,60)
         end-if
         if #CountForm > 0
          print #CountForm       (0,80)
         end-if
         if #CountAppr > 0
          print #CountAppr       (0,100)
         end-if
         if #CountSolid > 0
          print #CountSolid      (0,120)
         end-if

    let #cntgender = 0
    let #Countind = 0
    let #Countdet = 0
    let #CountForm = 0
    let #CountAppr = 0
    let #CountSolid = 0
  end-if
end-if
let #Countind = 0
let #Countdet = 0
let #cntgender = #cntgender + 1
end-procedure


!******************************************************************************
! Heading for Table6
!******************************************************************************

begin-procedure Heading_table6

print 'TABELLA 6'                               (+1,1)


print 'Comune di  '                             (0,40)
print $City                                     (0,50)

if $Unita <> '%'
  print 'Unita Produttiva '                     (+1,40)
  print $Unita                                  (0,60)
end-if


print 'Entrate e uscite e trasformazioni dei contratti'     (+2,1)

print 'Maschi'                                  (+2,70)
print 'Femmine'                                 (0,80)

end-procedure


!************************************
! Create Table 6
!************************************

begin-procedure Create-Table6


print 'ENTRATE:'       (+1,1)
let #CountEntryM = 0
let #CountEntryF = 0

begin-select
MD6.ACTION_ITA
MD6.SETID_LBR_AGRMNT
MD6.LABOR_AGREEMENT
MD6.EMPL_CTG           () On-Break Level = 1 Before = PrintCategory6  Print=Never
MD6.ACTION_REASON_ITA  () On-Break Level = 2 Before = PrintReasonITA  Print=Never
MD6.SEX                () On-Break Level = 3 After = PrintGender6  Print=Never
  if &MD6.SEX = 'M'
    let #CountEntryM = #CountEntryM + 1
  else
    if &MD6.SEX = 'F'
      let #CountEntryF = #CountEntryF +1
    end-if
  end-if
  let $MD6B.SEX = &MD6.SEX
MD6.EFFDT
FROM PS_R_PER053 MD6
WHERE MD6.ACTION_ITA = 'HIR'
ORDER BY MD6.EMPL_CTG, MD6.ACTION_REASON_ITA,MD6.SEX
end-SELECT


print 'USCITE:'       (+2,1)
let #CountEntryM = 0
let #CountEntryF = 0

begin-select
MD6B.ACTION_ITA
MD6B.SETID_LBR_AGRMNT
MD6B.LABOR_AGREEMENT
MD6B.EMPL_CTG           () On-Break Level = 1 Before = PrintCategory6B  Print=Never
MD6B.ACTION_REASON_ITA  () On-Break Level = 2 Before = PrintReasonITAB  Print=Never
MD6B.SEX                () On-Break Level = 3 After = PrintGender6  Print=Never
  if &MD6B.SEX = 'M'
    let #CountEntryM = #CountEntryM + 1
  else
    if &MD6B.SEX = 'F'
      let #CountEntryF = #CountEntryF +1
    end-if
  end-if
  let $MD6B.SEX = &MD6B.SEX
MD6B.EFFDT
FROM PS_R_PER053 MD6B
WHERE MD6B.ACTION_ITA = 'LAY' or MD6B.ACTION_ITA = 'TER' or MD6B.ACTION_ITA = 'LEA'
ORDER BY ACTION_ITA, MD6B.EMPL_CTG, MD6B.ACTION_REASON_ITA,MD6B.SEX
end-SELECT

end-procedure


!************************************
 Begin-Procedure PrintCategory6
!************************************
begin-SELECT DISTINCT
CAT2.DESCR
  print &CAT2.DESCR           (+2,5)
  let #jump = 0
FROM PS_EMPL_CTG_L1 CAT2
where CAT2.EMPL_CTG = &MD6.EMPL_CTG
and CAT2.LABOR_AGREEMENT=&MD6.LABOR_AGREEMENT
and CAT2.SETID = &MD6.SETID_LBR_AGRMNT
and CAT2.EFFDT = (SELECT MAX(EFFDT) FROM PS_EMPL_CTG_L1 WHERE SETID = CAT2.SETID AND LABOR_AGREEMENT = CAT2.LABOR_AGREEMENT AND EMPL_CTG = CAT2.EMPL_CTG AND EFFDT <= &MD6.EFFDT)
and CAT2.EFF_STATUS = 'A'
end-SELECT
end-procedure

!************************************
 Begin-Procedure PrintCategory6B
!************************************
begin-SELECT DISTINCT
CAT2B.DESCR
  print &CAT2B.DESCR           (+2,5)
  let #jump = 0
FROM PS_EMPL_CTG_L1 CAT2B
where CAT2B.EMPL_CTG = &MD6B.EMPL_CTG
and CAT2B.LABOR_AGREEMENT=&MD6B.LABOR_AGREEMENT
and CAT2B.SETID = &MD6.SETID_LBR_AGRMNT
and CAT2B.EFFDT = (SELECT MAX(EFFDT) FROM PS_EMPL_CTG_L1 WHERE SETID = CAT2B.SETID AND LABOR_AGREEMENT = CAT2B.LABOR_AGREEMENT AND EMPL_CTG = CAT2B.EMPL_CTG AND EFFDT <= &MD6B.EFFDT)
and CAT2B.EFF_STATUS = 'A'
end-SELECT
end-procedure


!************************************
 Begin-Procedure PrintReasonITA
!************************************

begin-SELECT
REASB.DESCR
  print &REASB.DESCR           (+#jump,30)
  let #jump = 2
FROM PS_TRV_ACTRSN_ITA REASB
where REASB.ACTION_REASON_ITA = &MD6.ACTION_REASON_ITA
and REASB.ACTION_ITA = &MD6.ACTION_ITA
end-SELECT

end-procedure



!************************************
 Begin-Procedure PrintReasonITAB
!************************************

begin-SELECT
REAS.DESCR
  print &REAS.DESCR           (+#jump,30)
  let #jump = 2
FROM PS_TRV_ACTRSN_ITA REAS
where REAS.ACTION_REASON_ITA = &MD6B.ACTION_REASON_ITA
and REAS.ACTION_ITA = &MD6B.ACTION_ITA
end-SELECT

end-procedure

!************************************
 Begin-Procedure PrintGender6
!************************************

  if $MD6B.SEX = 'M'
    print #CountEntryM             (0,70)
    let #CountEntryM = 0
  else
    if $MD6B.SEX = 'F'
      print #CountEntryF             (0,80)
      let #CountEntryF = 0
    end-if
  end-if

end-procedure




!******************************************************************************
! Heading for Table7
!******************************************************************************

begin-procedure Heading_table7

print 'TABELLA 7'                               (+1,1)


print 'Comune di  '                            (0,40)
print $City                                    (0,50)

if $Unita <> '%'
  print 'Unita Produttiva '                    (+1,40)
  print $Unita                                 (0,60)
end-if


print 'Formazione del personale svolta nel corso del periodo' (+2,1)
print $FromDatePrint                            (0,60)
print $ThruDatePrint                            (0,80)

print 'Categoria'                               (+2,1)
print 'Num di partecipanti'                     (0,30)
print 'Totale ore di formazione'                (0,60)
print 'Maschi'                                  (+1,30)
print 'Femmine'                                 (0,40)
print 'Maschi'                                  (0,60)
print 'Femmine'                                 (0,70)

end-procedure



!************************************
! Create Table 7
!************************************

begin-procedure Create-Table7


begin-SELECT
PER.SETID_LBR_AGRMNT
PER.LABOR_AGREEMENT
PER.EMPL_CTG          ()  On-Break Level=1 Before=PrintCategory7 Print=Never
PER.SEX               ()  On-Break Level=2 After=PrintGender7  Print=Never

       let $per.sex = &PER.SEX
       let #ConutGender = #CountGender + 1

CO.DURATION_CONVERTED

       let #Duration = #Duration + &CO.DURATION_CONVERTED
PER.EFFDT
FROM PS_R_PER053 PER, PS_TRAINING TR , PS_COURSE_TBL CO
where PER.EMPLID = TR.EMPLID
  and TR.COURSE = CO.COURSE
  and PER.UNITA_PROD_CD like $Unita
  and TR.COURSE_START_DT >= $FromDate
  and TR.COURSE_START_DT <= $ThruDate
  and TR.ATTENDANCE = 'C'
ORDER BY PER.EMPL_CTG,PER.SEX,CO.DURATION_CONVERTED
end-SELECT

end-procedure

!************************************
 Begin-Procedure PrintCategory7
!************************************

begin-SELECT DISTINCT
CAT7.DESCR
  print &CAT7.DESCR           (+2,5)
FROM PS_EMPL_CTG_L1 CAT7
where CAT7.EMPL_CTG = &PER.EMPL_CTG
and CAT7.LABOR_AGREEMENT=&PER.LABOR_AGREEMENT
and CAT7.SETID = &PER.SETID_LBR_AGRMNT
and CAT7.EFFDT = (SELECT MAX(EFFDT) FROM PS_EMPL_CTG_L1 WHERE SETID = CAT7.SETID AND LABOR_AGREEMENT = CAT7.LABOR_AGREEMENT AND EMPL_CTG = CAT7.EMPL_CTG AND EFFDT <= &PER.EFFDT)
and CAT7.EFF_STATUS = 'A'
end-SELECT
end-procedure

!************************************
 Begin-Procedure PrintGender7
!************************************

if $per.sex = 'F'
   print #Duration             (0,70)
   print #ConutGender          (0,40)
end-if

if $per.sex = 'M'
   print #Duration             (0,60)
   print #ConutGender          (0,30)
end-if

let #CountGender = 0
let #Duration = 0

end-procedure


!******************************************************************************
! Heading for Table8
!******************************************************************************

begin-procedure Heading_table8

print 'TABELLA 8'  (+1,1)


print 'Comune di  '                            (0,40)
print $City                                    (0,50)

if $Unita <> '%'
  print 'Unita Produttiva '                    (+1,40)
  print $Unita                                 (0,60)
end-if


print 'Retribuzione annua per livello e categoria professionale'   (+2,1)
print 'CATEGORIA'  (+3,1)
print 'LIVELLO'    (0,30)

print 'RETRIBUZIONE LORDA ANNUA (in lire)'  (0,60)
print 'Maschi'      (+1,66)
print 'Femmine'     (0,87)

end-procedure



!************************************
! Create Table 8
!************************************

begin-procedure Create-Table8

let #SumSalaryF = 0
let #SumSalaryM = 0

begin-SELECT
MX8.SETID_LBR_AGRMNT
MX8.LABOR_AGREEMENT
MX8.EMPL_CTG     () On-Break Level = 1 Before = PrintCategory8  Print=Never
MX8.EMPL_CTG_L1  () On-Break Level = 2 After = PrintSalary   Print=Never

   let $SETID_LBR_AGRMNT = &MX8.SETID_LBR_AGRMNT
   let $Category = &MX8.EMPL_CTG
   let $Level = &MX8.EMPL_CTG_L1

MX8.SEX

   let $SexMX8 = &MX8.SEX

MX8.COMPRATE
  if &MX8.SEX = 'F'
    let #SumSalaryF = #SumSalaryF + &MX8.COMPRATE * 12
  else
    if &MX8.SEX = 'M'
      let #SumSalaryM = #SumSalaryM + &MX8.COMPRATE * 12
    end-if
  end-if
MX8.EFFDT
FROM PS_R_PER053_MAX MX8
ORDER BY MX8.EMPL_CTG, MX8.EMPL_CTG_L1, MX8.SEX, MX8.COMPRATE
end-SELECT

end-procedure

!************************************
 Begin-Procedure PrintCategory8
!************************************

begin-SELECT DISTINCT
CAT8.DESCR
  print &CAT8.DESCR           (+2,1)
  let #jump = 0
FROM PS_EMPL_CTG_L1 CAT8
where CAT8.EMPL_CTG = &MX8.EMPL_CTG
and CAT8.LABOR_AGREEMENT = &MX8.LABOR_AGREEMENT
and CAT8.SETID = &MX8.SETID_LBR_AGRMNT
and CAT8.EFFDT = (SELECT MAX(EFFDT) FROM PS_EMPL_CTG_L1 WHERE SETID = CAT8.SETID AND LABOR_AGREEMENT = CAT8.LABOR_AGREEMENT AND EMPL_CTG = CAT8.EMPL_CTG AND EFFDT <= &MX8.EFFDT)
end-SELECT
end-procedure

!************************************
Begin-Procedure PrintSalary
!************************************

begin-SELECT DISTINCT
SUB8.DESCR
  print &SUB8.DESCR           (+#jump,30)
  let #jump = 2

FROM PS_EMPL_CTG_L2 SUB8
where SUB8.EMPL_CTG = $Category
and SUB8.EMPL_CTG_L1 = $Level
and SUB8.LABOR_AGREEMENT = &MX8.LABOR_AGREEMENT
and SUB8.SETID = &MX8.SETID_LBR_AGRMNT
and SUB8.EFFDT = (SELECT MAX(SUB82.EFFDT) FROM PS_EMPL_CTG_L1 SUB82 WHERE SUB82.SETID = SUB8.SETID AND SUB82.LABOR_AGREEMENT = SUB8.LABOR_AGREEMENT AND SUB82.EMPL_CTG = SUB8.EMPL_CTG AND SUB82.EFFDT <= &MX8.EFFDT)
end-SELECT


if $SexMX8 = 'M'
  do Format-Number(#SumSalaryM, $out, '999,999,999,999,999')
  print $out (0,55)
end-if
if $SexMX8 = 'F'
  do Format-Number(#SumSalaryF, $out, '999,999,999,999,999')
  print $out (0,80)
end-if

end-procedure

!******************************************************************************
!Init Report
!******************************************************************************

begin-procedure Init-Report

  move 'PER053' to $ReportID

  do Stdapi-Init

  if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

  do Security-Param

  if $prcs_process_instance = ''
    do Ask-As-Of-Date
  else
    do Select-Parameters
  end-if

  do Init_Printer
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')
last1:
end-procedure

!************************************
!Get Values
!************************************
begin-procedure Get-Values

   let $language_cd = $PRCS_LANGUAGE_CD

begin-SELECT

R.FROMDATE
R.THRUDATE
R.COMPANY
R.CITY
R.PER053_TABLE1
R.PER053_TABLE2
R.PER053_TABLE3
R.PER053_TABLE4
R.PER053_TABLE5
R.PER053_TABLE6
R.PER053_TABLE7
R.PER053_TABLE8

  let $Table1 = &R.PER053_TABLE1
  let $Table2 = &R.PER053_TABLE2
  let $Table3 = &R.PER053_TABLE3
  let $Table4 = &R.PER053_TABLE4
  let $Table5 = &R.PER053_TABLE5
  let $Table6 = &R.PER053_TABLE6
  let $Table7 = &R.PER053_TABLE7
  let $Table8 = &R.PER053_TABLE8
  let $FromDate = &R.FROMDATE
  let $ThruDate = &R.THRUDATE
  let $Company = &R.COMPANY
  let $City = &R.CITY

from PS_RUN_CNTL_PER053 R

where R.OPRID = $prcs_oprid
and   R.RUN_CNTL_ID = $prcs_run_cntl_id

end-SELECT

let $Unita = '%'

begin-SELECT
R1.UNITA_PROD_CD

  if &R1.UNITA_PROD_CD <> '      '
    let $Unita = &R1.UNITA_PROD_CD
  else
    let $Unita = '%'
  end-if

from PS_RUN_CNTL_UNIT R1

where R1.OPRID = $prcs_oprid
and   R1.RUN_CNTL_ID = $prcs_run_cntl_id
end-SELECT

end-procedure

!************************************
!Get Employee Categorization Descr
!************************************

begin-procedure Get-Empl-Ctg-Descr

begin-SELECT

CTG.DESCR

  let $Category_Descr = &CTG.DESCR

FROM PS_EMPL_CTG_L1 CTG
WHERE CTG.LABOR_AGREEMENT = $Agreement
AND CTG.EMPL_CTG = $Category
AND CTG.SETID = $SETID_LBR_AGRMNT
AND CTG.EFFDT =
                  (SELECT MAX(CTG_L1.EFFDT)
                   FROM PS_EMPL_CTG_L1 CTG_L1
                  WHERE CTG_L1.SETID = CTG.SETID
                  AND CTG_L1.LABOR_AGREEMENT = CTG.LABOR_AGREEMENT
                  AND CTG_L1.EMPL_CTG = CTG.EMPL_CTG
                  AND CTG_L1.EFFDT <=  $ThruDate)
AND CTG.EFF_STATUS = 'A'
end-SELECT
end-procedure

!************************************
!  Process-Main
!************************************
begin-procedure Process-Main

let $sql-statement = 'PER053.SQR,Delete-Worktable,Delete,PS_R_PER053'
begin-SQL On-Error=SQL-Error
  DELETE FROM PS_R_PER053;
end-SQL

begin-SQL On-Error=SQL-Error
  DELETE FROM PS_R_PER053_MAX;
end-SQL

begin-SQL On-Error=SQL-Error
  DELETE FROM PS_R_PER053_MIN;
end-SQL

begin-SQL On-Error=SQL-Error
  DELETE FROM PS_R_PER053_ALL;
end-SQL


  do Get-Values

  do Format-DateTime($ThruDate, $ThruDatePrint, {DEFDATE}, '', '')
  do Format-DateTime($FromDate, $FromDatePrint, {DEFDATE}, '', '')

  do Data-Selection
  do Create-Reports

end-procedure

!************************************
! Data Selection
!************************************
begin-procedure Data-Selection


If $Unita <> '%'

 begin-SQL On-Error=SQL-Error

 INSERT INTO PS_R_PER053
  (EMPLID,SEX,EFFDT,UNITA_PROD_CD,LABOR_AGREEMENT,EMPL_CTG,EMPL_CTG_L1,ACTION,ACTION_ITA,ACTION_REASON_ITA,SETID_LBR_AGRMNT)
  SELECT
  A.EMPLID,
  A.SEX,
  B.EFFDT,
  K1.UNITA_PROD_CD,
  B.LABOR_AGREEMENT,
  B.EMPL_CTG,
  B.EMPL_CTG_L1,
  B.ACTION,
  BJ.ACTION_ITA,
  BJ.ACTION_REASON_ITA,
  B.SETID_LBR_AGRMNT
  FROM PS_PERS_DATA_EFFDT A, PS_JOB B ,PS_JOB_JR BJ, PS_COMPANY_TBL C, PS_UNITA_PROD_TBL K1
  WHERE BJ.UNITA_PROD_CD = K1.UNITA_PROD_CD
  AND BJ.EMPLID = B.EMPLID AND BJ.EMPL_RCD = B.EMPL_RCD AND BJ.EFFDT = B.EFFDT AND BJ.EFFSEQ = B.EFFSEQ
  AND A.EMPLID = B.EMPLID
  AND A.EFFDT = (SELECT MAX(A1.EFFDT) FROM PS_PERS_DATA_EFFDT A1 WHERE A.EMPLID = A1.EMPLID AND A1.EFFDT <= $ThruDate)
  AND B.COMPANY = $Company
  AND B.EFFDT < $ThruDate
  AND B.EFFDT > $FromDate
  AND B.EFFSEQ = (SELECT MAX(I.EFFSEQ) FROM PS_JOB I WHERE I.EMPLID = B.EMPLID AND I.EMPL_RCD = B.EMPL_RCD AND I.EFFDT = B.EFFDT)
  AND C.COMPANY = B.COMPANY
  AND C.EFFDT = (SELECT MAX(F.EFFDT) FROM PS_COMPANY_TBL F WHERE F.COMPANY = C.COMPANY AND F.EFFDT <= $ThruDate)
  AND K1.COMPANY = $Company
  AND K1.CITY = $City
  AND K1.EFFDT = (SELECT MAX(KK1.EFFDT) FROM PS_UNITA_PROD_TBL KK1 WHERE KK1.COMPANY = $Company AND KK1.EFFDT <= $ThruDate AND KK1.CITY = $City)
 end-SQL


 begin-SQL On-Error=SQL-Error

 INSERT INTO PS_R_PER053_MAX
  (EMPLID,SEX,EFFDT,UNITA_PROD_CD,LABOR_AGREEMENT,EMPL_CTG,EMPL_CTG_L1,COMPRATE,SETID_LBR_AGRMNT)
  SELECT DISTINCT
  A.EMPLID,
  A.SEX,
  B.EFFDT,
  K1.UNITA_PROD_CD,
  B.LABOR_AGREEMENT,
  B.EMPL_CTG,
  B.EMPL_CTG_L1,
  B.COMPRATE,
  B.SETID_LBR_AGRMNT
  FROM PS_PERS_DATA_EFFDT A, PS_JOB B, PS_JOB_JR BJ, PS_COMPANY_TBL C, PS_UNITA_PROD_TBL K1
  WHERE B.HR_STATUS = 'A'
  AND BJ.EMPLID = B.EMPLID AND BJ.EMPL_RCD = B.EMPL_RCD AND BJ.EFFDT = B.EFFDT AND BJ.EFFSEQ = B.EFFSEQ
  AND BJ.UNITA_PROD_CD like $Unita
  AND A.EMPLID = B.EMPLID
  AND A.EFFDT = (SELECT MAX(A1.EFFDT) FROM PS_PERS_DATA_EFFDT A1 WHERE A.EMPLID = A1.EMPLID AND A1.EFFDT <= $ThruDate)
  AND B.COMPANY = $Company
  AND C.COMPANY = B.COMPANY
  AND C.EFFDT =
      (SELECT MAX(F.EFFDT)
       FROM PS_COMPANY_TBL F
       WHERE F.COMPANY = C.COMPANY
         AND F.EFFDT <= $ThruDate)
  AND B.EFFDT =
      (SELECT MAX(H.EFFDT)
       FROM PS_JOB H
       WHERE H.EMPLID = B.EMPLID
         AND H.EMPL_RCD = B.EMPL_RCD
         AND H.EFFDT <= $ThruDate)
  AND B.EFFSEQ =
      (SELECT MAX(I.EFFSEQ)
       FROM PS_JOB I
       WHERE I.EMPLID = B.EMPLID
         AND I.EMPL_RCD = B.EMPL_RCD
         AND I.EFFDT = B.EFFDT)
  AND K1.UNITA_PROD_CD = (SELECT BJ.UNITA_PROD_CD FROM PS_JOB_JR BJ WHERE BJ.EMPLID = B.EMPLID AND BJ.EMPL_RCD = B.EMPL_RCD AND BJ.EFFDT = B.EFFDT AND BJ.EFFSEQ = B.EFFSEQ)
  AND K1.COMPANY = $Company
  AND K1.CITY = $City
  AND K1.EFFDT =
    (SELECT MAX(KK1.EFFDT)
     FROM PS_UNITA_PROD_TBL KK1
     WHERE KK1.COMPANY = $Company
     AND KK1.EFFDT <= $ThruDate
     AND KK1.CITY = $City)
 end-SQL

 begin-SQL On-Error=SQL-Error

 INSERT INTO PS_R_PER053_MIN
  (EMPLID,SEX,EFFDT,UNITA_PROD_CD,LABOR_AGREEMENT,EMPL_CTG,EMPL_CTG_L1,SETID_LBR_AGRMNT)
  SELECT
  A.EMPLID,
  A.SEX,
  B.EFFDT,
  K1.UNITA_PROD_CD,
  B.LABOR_AGREEMENT,
  B.EMPL_CTG,
  B.EMPL_CTG_L1,
  B.SETID_LBR_AGRMNT
  FROM PS_PERS_DATA_EFFDT A, PS_JOB B, PS_JOB_JR BJ, PS_COMPANY_TBL C, PS_UNITA_PROD_TBL K1
  WHERE B.HR_STATUS = 'A'
  AND BJ.EMPLID = B.EMPLID AND BJ.EMPL_RCD = B.EMPL_RCD AND BJ.EFFDT = B.EFFDT AND BJ.EFFSEQ = B.EFFSEQ
  AND A.EMPLID = B.EMPLID
  AND B.COMPANY = $Company
  AND C.COMPANY = B.COMPANY
  AND C.EFFDT =
      (SELECT MAX(F.EFFDT)
       FROM PS_COMPANY_TBL F
       WHERE F.COMPANY = C.COMPANY
         AND F.EFFDT <= $FromDate)
  AND B.EFFDT =
      (SELECT MAX(H.EFFDT)
       FROM PS_JOB H
       WHERE H.EMPLID = B.EMPLID
         AND H.EMPL_RCD = B.EMPL_RCD
         AND H.EFFDT <= $FromDate)
  AND B.EFFSEQ =
      (SELECT MAX(I.EFFSEQ)
       FROM PS_JOB I
       WHERE I.EMPLID = B.EMPLID
         AND I.EMPL_RCD = B.EMPL_RCD
         AND I.EFFDT = B.EFFDT)
  AND K1.UNITA_PROD_CD = (SELECT BJ.UNITA_PROD_CD FROM PS_JOB_JR BJ WHERE BJ.EMPLID = B.EMPLID AND BJ.EMPL_RCD = B.EMPL_RCD AND BJ.EFFDT = B.EFFDT AND BJ.EFFSEQ = B.EFFSEQ)
  AND K1.COMPANY = $Company
  AND K1.CITY = $City
  AND K1.EFFDT =
    (SELECT MAX(KK1.EFFDT)
     FROM PS_UNITA_PROD_TBL KK1
     WHERE KK1.COMPANY = $Company
     AND KK1.EFFDT <= $ThruDate
     AND KK1.CITY = $City)
  AND BJ.UNITA_PROD_CD like $Unita
 end-SQL

 begin-SQL On-Error=SQL-Error

 INSERT INTO PS_R_PER053_ALL
  (EMPLID,SEX,EFFDT,UNITA_PROD_CD,LABOR_AGREEMENT,EMPL_CTG,EMPL_CTG_L1,ACTION,ACTION_ITA,ACTION_REASON_ITA,COMPRATE,FLAG,SETID_LBR_AGRMNT)
  SELECT
  A.EMPLID,
  A.SEX,
  B.EFFDT,
  K1.UNITA_PROD_CD,
  B.LABOR_AGREEMENT,
  B.EMPL_CTG,
  B.EMPL_CTG_L1,
  B.ACTION,
  BJ.ACTION_ITA,
  BJ.ACTION_REASON_ITA
  ,0
  ,'2'
  ,B.SETID_LBR_AGRMNT
  FROM PS_PERS_DATA_EFFDT A, PS_JOB B, PS_JOB_JR BJ, PS_COMPANY_TBL C, PS_UNITA_PROD_TBL K1
  WHERE A.EMPLID = B.EMPLID
  AND BJ.EMPLID = B.EMPLID AND BJ.EMPL_RCD = B.EMPL_RCD AND BJ.EFFDT = B.EFFDT AND BJ.EFFSEQ = B.EFFSEQ
  AND B.COMPANY = $Company
  AND C.COMPANY = B.COMPANY
  AND B.EFFDT <= $ThruDate
  AND B.EFFDT >= $FromDate
  AND C.EFFDT =
      (SELECT MAX(F.EFFDT)
       FROM PS_COMPANY_TBL F
       WHERE F.COMPANY = C.COMPANY
         AND F.EFFDT <= $ThruDate)
  AND B.EFFSEQ =
      (SELECT MAX(I.EFFSEQ)
       FROM PS_JOB I
       WHERE I.EMPLID = B.EMPLID
         AND I.EMPL_RCD = B.EMPL_RCD
         AND I.EFFDT = B.EFFDT)
  AND K1.UNITA_PROD_CD = (SELECT BJ.UNITA_PROD_CD FROM PS_JOB_JR BJ WHERE BJ.EMPLID = B.EMPLID AND BJ.EMPL_RCD = B.EMPL_RCD AND BJ.EFFDT = B.EFFDT AND BJ.EFFSEQ = B.EFFSEQ)
  AND K1.COMPANY = $Company
  AND K1.CITY = $City
  AND K1.EFFDT =
    (SELECT MAX(KK1.EFFDT)
     FROM PS_UNITA_PROD_TBL KK1
     WHERE KK1.COMPANY = $Company
     AND KK1.EFFDT <= $ThruDate
     AND KK1.CITY = $City)
  AND BJ.UNITA_PROD_CD like $Unita
 end-SQL


 begin-SQL On-Error=SQL-Error

 INSERT INTO PS_R_PER053_ALL
  (EMPLID,SEX,EFFDT,UNITA_PROD_CD,LABOR_AGREEMENT,EMPL_CTG,EMPL_CTG_L1,ACTION,ACTION_ITA,ACTION_REASON_ITA,COMPRATE,FLAG,SETID_LBR_AGRMNT)
  SELECT
  A2.EMPLID,
  A2.SEX,
  A2.EFFDT,
  A2.UNITA_PROD_CD,
  A2.LABOR_AGREEMENT,
  A2.EMPL_CTG,
  A2.EMPL_CTG_L1,
  ' ',
  ' ',
  ' '
  ,0
  ,'1'
  ,A2.SETID_LBR_AGRMNT
  FROM PS_R_PER053_MIN A2
 end-SQL


 begin-SQL On-Error=SQL-Error

 INSERT INTO PS_R_PER053_ALL
  (EMPLID,SEX,EFFDT,UNITA_PROD_CD,LABOR_AGREEMENT,EMPL_CTG,EMPL_CTG_L1,ACTION,ACTION_ITA,ACTION_REASON_ITA,COMPRATE,FLAG,SETID_LBR_AGRMNT)
  SELECT
  A3.EMPLID,
  A3.SEX,
  A3.EFFDT,
  A3.UNITA_PROD_CD,
  A3.LABOR_AGREEMENT,
  A3.EMPL_CTG,
  A3.EMPL_CTG_L1,
  ' ',
  ' ',
  ' '
  ,A3.COMPRATE
  ,'3'
  ,A3.SETID_LBR_AGRMNT
  FROM PS_R_PER053_MAX A3
 end-SQL

!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  ELSE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
else

 begin-SQL On-Error=SQL-Error

 INSERT INTO PS_R_PER053
  (EMPLID,SEX,EFFDT,UNITA_PROD_CD,LABOR_AGREEMENT,EMPL_CTG,EMPL_CTG_L1,ACTION,ACTION_ITA,ACTION_REASON_ITA,SETID_LBR_AGRMNT)
  SELECT
  A.EMPLID,
  A.SEX,
  B.EFFDT,
  BJ.UNITA_PROD_CD,
  B.LABOR_AGREEMENT,
  B.EMPL_CTG,
  B.EMPL_CTG_L1,
  B.ACTION,
  BJ.ACTION_ITA,
  BJ.ACTION_REASON_ITA,
  B.SETID_LBR_AGRMNT
  FROM PS_PERS_DATA_EFFDT A, PS_JOB B, PS_JOB_JR BJ, PS_COMPANY_TBL C
  WHERE A.EMPLID = B.EMPLID
  AND BJ.EMPLID = B.EMPLID AND BJ.EMPL_RCD = B.EMPL_RCD AND BJ.EFFDT = B.EFFDT AND BJ.EFFSEQ = B.EFFSEQ
  AND B.COMPANY = $Company
  AND C.COMPANY = B.COMPANY
  AND B.EFFDT < $ThruDate
  AND B.EFFDT > $FromDate
  AND C.EFFDT =
      (SELECT MAX(F.EFFDT)
       FROM PS_COMPANY_TBL F
       WHERE F.COMPANY = C.COMPANY
         AND F.EFFDT <= $ThruDate)
  AND B.EFFSEQ =
      (SELECT MAX(I.EFFSEQ)
       FROM PS_JOB I
       WHERE I.EMPLID = B.EMPLID
         AND I.EMPL_RCD = B.EMPL_RCD
         AND I.EFFDT = B.EFFDT)
 end-SQL


 begin-SQL On-Error=SQL-Error

 INSERT INTO PS_R_PER053_MAX
  (EMPLID,SEX,EFFDT,UNITA_PROD_CD,LABOR_AGREEMENT,EMPL_CTG,EMPL_CTG_L1,COMPRATE,SETID_LBR_AGRMNT)
  SELECT DISTINCT
  A.EMPLID,
  A.SEX,
  B.EFFDT,
  BJ.UNITA_PROD_CD,
  B.LABOR_AGREEMENT,
  B.EMPL_CTG,
  B.EMPL_CTG_L1,
  B.COMPRATE,
  B.SETID_LBR_AGRMNT
  FROM PS_PERS_DATA_EFFDT A, PS_JOB B, PS_JOB_JR BJ, PS_COMPANY_TBL C
  WHERE B.HR_STATUS = 'A'
  AND BJ.EMPLID = B.EMPLID AND BJ.EMPL_RCD = B.EMPL_RCD AND BJ.EFFDT = B.EFFDT AND BJ.EFFSEQ = B.EFFSEQ
  AND A.EMPLID = B.EMPLID
  AND B.COMPANY = $Company
  AND C.COMPANY = B.COMPANY
  AND C.EFFDT =
      (SELECT MAX(F.EFFDT)
       FROM PS_COMPANY_TBL F
       WHERE F.COMPANY = C.COMPANY
         AND F.EFFDT <= $ThruDate)
  AND B.EFFDT =
      (SELECT MAX(H.EFFDT)
       FROM PS_JOB H
       WHERE H.EMPLID = B.EMPLID
         AND H.EMPL_RCD = B.EMPL_RCD
         AND H.EFFDT <= $ThruDate)
  AND B.EFFSEQ =
      (SELECT MAX(I.EFFSEQ)
       FROM PS_JOB I
       WHERE I.EMPLID = B.EMPLID
         AND I.EMPL_RCD = B.EMPL_RCD
         AND I.EFFDT = B.EFFDT)
 end-SQL

 begin-SQL On-Error=SQL-Error

 INSERT INTO PS_R_PER053_MIN
  (EMPLID,SEX,EFFDT,UNITA_PROD_CD,LABOR_AGREEMENT,EMPL_CTG,EMPL_CTG_L1,SETID_LBR_AGRMNT)
  SELECT
  A.EMPLID,
  A.SEX,
  B.EFFDT,
  BJ.UNITA_PROD_CD,
  B.LABOR_AGREEMENT,
  B.EMPL_CTG,
  B.EMPL_CTG_L1,
  B.SETID_LBR_AGRMNT
  FROM PS_PERS_DATA_EFFDT A, PS_JOB B, PS_JOB_JR BJ, PS_COMPANY_TBL C
  WHERE B.HR_STATUS = 'A'
  AND BJ.EMPLID = B.EMPLID AND BJ.EMPL_RCD = B.EMPL_RCD AND BJ.EFFDT = B.EFFDT AND BJ.EFFSEQ = B.EFFSEQ
  AND A.EMPLID = B.EMPLID
  AND B.COMPANY = $Company
  AND C.COMPANY = B.COMPANY
  AND C.EFFDT =
      (SELECT MAX(F.EFFDT)
       FROM PS_COMPANY_TBL F
       WHERE F.COMPANY = C.COMPANY
         AND F.EFFDT <= $FromDate)
  AND B.EFFDT =
      (SELECT MAX(H.EFFDT)
       FROM PS_JOB H
       WHERE H.EMPLID = B.EMPLID
         AND H.EMPL_RCD = B.EMPL_RCD
         AND H.EFFDT <= $FromDate)
  AND B.EFFSEQ =
      (SELECT MAX(I.EFFSEQ)
       FROM PS_JOB I
       WHERE I.EMPLID = B.EMPLID
         AND I.EMPL_RCD = B.EMPL_RCD
         AND I.EFFDT = B.EFFDT)
 end-SQL

 begin-SQL On-Error=SQL-Error

 INSERT INTO PS_R_PER053_ALL
  (EMPLID,SEX,EFFDT,UNITA_PROD_CD,LABOR_AGREEMENT,EMPL_CTG,EMPL_CTG_L1,ACTION,ACTION_ITA,ACTION_REASON_ITA,COMPRATE,FLAG,SETID_LBR_AGRMNT)
  SELECT
  A.EMPLID,
  A.SEX,
  B.EFFDT,
  BJ.UNITA_PROD_CD,
  B.LABOR_AGREEMENT,
  B.EMPL_CTG,
  B.EMPL_CTG_L1,
  B.ACTION,
  BJ.ACTION_ITA,
  BJ.ACTION_REASON_ITA
  ,0
  ,'2'
  ,B.SETID_LBR_AGRMNT
  FROM PS_PERS_DATA_EFFDT A, PS_JOB B, PS_JOB_JR BJ, PS_COMPANY_TBL C
  WHERE A.EMPLID = B.EMPLID
  AND BJ.EMPLID = B.EMPLID AND BJ.EMPL_RCD = B.EMPL_RCD AND BJ.EFFDT = B.EFFDT AND BJ.EFFSEQ = B.EFFSEQ
  AND B.COMPANY = $Company
  AND C.COMPANY = B.COMPANY
  AND B.EFFDT <= $ThruDate
  AND B.EFFDT >= $FromDate
  AND C.EFFDT =
      (SELECT MAX(F.EFFDT)
       FROM PS_COMPANY_TBL F
       WHERE F.COMPANY = C.COMPANY
         AND F.EFFDT <= $ThruDate)
  AND B.EFFSEQ =
      (SELECT MAX(I.EFFSEQ)
       FROM PS_JOB I
       WHERE I.EMPLID = B.EMPLID
         AND I.EMPL_RCD = B.EMPL_RCD
         AND I.EFFDT = B.EFFDT)
 end-SQL


 begin-SQL On-Error=SQL-Error

 INSERT INTO PS_R_PER053_ALL
  (EMPLID,SEX,EFFDT,UNITA_PROD_CD,LABOR_AGREEMENT,EMPL_CTG,EMPL_CTG_L1,ACTION,ACTION_ITA,ACTION_REASON_ITA,COMPRATE,FLAG,SETID_LBR_AGRMNT)
  SELECT
  A2.EMPLID,
  A2.SEX,
  A2.EFFDT,
  A2.UNITA_PROD_CD,
  A2.LABOR_AGREEMENT,
  A2.EMPL_CTG,
  A2.EMPL_CTG_L1,
  ' ',
  ' ',
  ' '
  ,0
  ,'1'
  ,A2.SETID_LBR_AGRMNT
  FROM PS_R_PER053_MIN A2
 end-SQL


 begin-SQL On-Error=SQL-Error

 INSERT INTO PS_R_PER053_ALL
  (EMPLID,SEX,EFFDT,UNITA_PROD_CD,LABOR_AGREEMENT,EMPL_CTG,EMPL_CTG_L1,ACTION,ACTION_ITA,ACTION_REASON_ITA,COMPRATE,FLAG,SETID_LBR_AGRMNT)
  SELECT
  A3.EMPLID,
  A3.SEX,
  A3.EFFDT,
  A3.UNITA_PROD_CD,
  A3.LABOR_AGREEMENT,
  A3.EMPL_CTG,
  A3.EMPL_CTG_L1,
  ' ',
  ' ',
  ' '
  ,A3.COMPRATE
  ,'3'
  ,A3.SETID_LBR_AGRMNT
  FROM PS_R_PER053_MAX A3
 end-SQL

end-if

end-procedure

!************************************
! Create Reports
!************************************
begin-procedure Create-Reports

if $Table1 = 'Y'
 do Heading_table1
 do Create-Table1
end-if
if $Table2 = 'Y'
 new-page
 do Heading_table2
 do Create-Table2
end-if
if $Table3 = 'Y'
 new-page
 do Heading_table3
 do Create-Table3
end-if
if $Table4 = 'Y'
 new-page
 do Heading_table4
 do Create-Table4
end-if
if $Table5 = 'Y'
 new-page
 do Heading_table5
 do Create-Table5
end-if
if $Table6 = 'Y'
 new-page
 do Heading_table6
 do Create-Table6
end-if
if $Table7 = 'Y'
 new-page
 do Heading_table7
 do Create-Table7
end-if
if $Table8 = 'Y'
 new-page
 do Heading_table8
 do Create-Table8
end-if

end-procedure



#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askaod.sqc'    !Ask As Of Date input
#include 'asksrvyr.sqc'  !Years Of Service input
#include 'hrsecty.sqc'   !Get SQR Security parameters
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
!#include 'rellang.sqc'

#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'currency.sqc'  !Recalc-Job-Comprate procedure
                         !Includes 'number.sqc' and 'frquency.sqc'
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'

