! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
! SYSFIELD: PS DBField Definition Edits report                         *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************

!----------------------------------------------------------------------!
! Procedure: SYSFIELD-Field-Main                                       !
! Descr:     System table audit against PSPNLDEFN table:               !
!----------------------------------------------------------------------!
begin-procedure SYSFIELD-Field-Main

        let $ErrorFound = 'N'

        let $AuditTitle = 'Field Definition Audit'

     !   do SYSFIELD-01    Moved to PKGAudit!
     !   do SYSFIELD-02    Moved to PKGAudit!
        do SYSFIELD-03
        do SYSFIELD-04
        do SYSFIELD-05
        do SYSFIELD-06
        do SYSFIELD-07
        if $ErrorFound = 'N'
            do PrintSummaryRecord
        end-if

end-procedure

!-----------------------------------------------------------------------!
! Procedure: SYSFIELD-03                        !
! Descr:     System table audit against PSREFIELD table:                !
!            Field-3 Invalid Default Fields                             !
!-----------------------------------------------------------------------!
begin-procedure SYSFIELD-03

   let $AuditDescr = '(FIELD-3) The Following Default Fields are Invalid: '

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if   let $DetailErrFound = 'N'


   let $DetailErrFound  = 'N'
   let #rows            =  0
   let #numofhdr        =  4
   let #Start1          =  1
   let #Start2          =  24
   let #Start3          =  49
   let #Start4          =  74
   put 'Record Name'    #Start1 21 into printarray(0)
   put 'Field Name'     #Start2 21 into printarray(1)
   put 'Default Record' #Start3 21 into printarray(2)
   put 'Invalid Field'  #Start4 21 into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Field03_RecName
A.FIELDNAME        &Field03_FieldName
A.DEFRECNAME       &Field03_DefRecName
A.DEFFIELDNAME     &Field03_DefaultName

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Field03_RecName        (+1,#Start1)
   print &Field03_FieldName      (0 ,#Start2)
   print &Field03_DefRecName     (0 ,#Start3)
   print &Field03_DefaultName    (0 ,#Start4)
FROM PSRECFIELD A
WHERE A.DEFRECNAME <> ' ' AND
        NOT EXISTS (SELECT 'X' FROM PSRECFIELD B
                      WHERE A.DEFRECNAME = B.RECNAME AND
                            A.DEFFIELDNAME = B.FIELDNAME) AND
        NOT EXISTS (SELECT 'X' FROM PSRECFIELD C, PSRECDEFN D
                      WHERE C.FIELDNAME = A.DEFFIELDNAME AND
                            C.RECNAME = D.RECNAME AND
                            D.RECTYPE = 3)
ORDER BY 1, 2
end-SELECT


   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure

!-----------------------------------------------------------------------!
! Procedure: SYSFIELD-04                                                !
! Descr:     System table audit against PSRECFIELD table:               !
!            Field-4 Invalid Fields being used in Records               !
!-----------------------------------------------------------------------!
begin-procedure SYSFIELD-04

   let $AuditDescr = '(FIELD-4) Fields being used in Record Definitions '
                     || 'that do not exist in PSDBFIELD: '

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if   let $DetailErrFound = 'N'


   let $DetailErrFound  = 'N'
   let #rows            =  0
   let #numofhdr        =  2
   let #Start1          =  1
   let #Start2          =  24
   put 'Record Name'    #Start1 21 into printarray(0)
   put 'Field Name'     #Start2 21 into printarray(1)

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Field04_RecName
A.FIELDNAME        &Field04_FieldName

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Field04_RecName        (+1,#Start1)
   print &Field04_FieldName      (0 ,#Start2)

FROM PSRECFIELD A
WHERE A.FIELDNAME NOT IN (
    SELECT B.FIELDNAME
    FROM PSDBFIELD B
    WHERE B.FIELDNAME = A.FIELDNAME)
  AND A.SUBRECORD='N'
ORDER BY 1, 2
end-SELECT


   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!-----------------------------------------------------------------------!
! Procedure: SYSFIELD-05                                                !
! Descr:     System table audit against PSDBFLDLABL table:              !
!            Field-5 Avoid multiple default field labels                !
!-----------------------------------------------------------------------!
begin-procedure SYSFIELD-05

   let $AuditDescr = '(FIELD-5) Fields have multiple default field labels '
                     || 'in PSDBFLDLABL: '

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if   let $DetailErrFound = 'N'


   let $DetailErrFound  = 'N'
   let #rows            =  0
   let #numofhdr        =  2
   let #Start1          =  1
   let #Start2          =  24
   put 'Field Name'    #Start1 21 into printarray(0)

begin-SELECT on-Error=Rpt-SQL-Error
A.FIELDNAME        &Field05_FieldName

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Field05_FieldName        (+1,#Start1)

FROM PSDBFLDLABL A 
WHERE A.DEFAULT_LABEL = 1 
AND A.FIELDNAME IN (
        SELECT B.FIELDNAME 
        FROM PSDBFLDLABL B 
        WHERE B.LABEL_ID <> A.LABEL_ID 
                AND B.FIELDNAME = A.FIELDNAME 
                AND B.DEFAULT_LABEL = 1)
end-SELECT


   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!-----------------------------------------------------------------------!
! Procedure: SYSFIELD-06                                                !
! Descr:     System table audit against PSDBFLDLABL table:              !
!            Field-6 Avoid orphaned labels                              !
!-----------------------------------------------------------------------!
begin-procedure SYSFIELD-06

   let $AuditDescr = '(FIELD-6) Deleted Fields have orphaned field labels '
                     || 'in PSDBFLDLABL: '

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if   let $DetailErrFound = 'N'


   let $DetailErrFound  = 'N'
   let #rows            =  0
   let #numofhdr        =  2
   let #Start1          =  1
   let #Start2          =  24
   put 'Field Name'    #Start1 21 into printarray(0)

begin-SELECT on-Error=Rpt-SQL-Error
A.FIELDNAME        &Field06_FieldName

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Field06_FieldName        (+1,#Start1)

FROM PSDBFLDLABL A 
WHERE NOT EXISTS (
        SELECT 'X' FROM PSDBFIELD B 
        WHERE A.FIELDNAME = B.FIELDNAME)
end-SELECT


   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!-----------------------------------------------------------------------!
! Procedure: SYSFIELD-07                                                !
! Descr:     System table audit against PSDBFLDLABL table:              !
!            Field-7 Avoid blank labels                                 !
!-----------------------------------------------------------------------!
begin-procedure SYSFIELD-07

   let $AuditDescr = '(FIELD-7) Fields having blank labels '
                     || 'in PSDBFLDLABL: '

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if   let $DetailErrFound = 'N'


   let $DetailErrFound  = 'N'
   let #rows            =  0
   let #numofhdr        =  1
   let #Start1          =  1

   put 'Field Name'    #Start1 21 into printarray(0)

begin-SELECT on-Error=Rpt-SQL-Error
A.FIELDNAME        &Field07_FieldName

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Field07_FieldName        (+1,#Start1)

FROM PSDBFLDLABL A 
WHERE A.LABEL_ID like ' '
end-SELECT


   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure