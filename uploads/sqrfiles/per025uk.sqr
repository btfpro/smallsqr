!******************************************
!  PER025UK:  Work Force Analysis         *
!******************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:34:46                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'PER025UK' to $ReportID
  move 'Work Force Analysis' to $ReportTitle
  display $ReportTitle

  do Init-Array

  do Stdapi-Init

  if $prcs_process_instance = ''
    do Ask-As-Of-date
  else
    do Select-Parameters
  end-if
  if $companyruncnt = ''
     let $wherecompany = ''
  else
     let $wherecompany = 'AND C.COMPANY = '||''''||$companyruncnt||''''
  end-if

end-procedure

begin-procedure Get-Values
  do Get-As-Of-Date
  do Get-Per025-Parm
end-procedure

begin-procedure Init-Array
  create-array name=Totals size=4 -
    field=total:number:16 field=startCol:number:16
  put  52 into Totals(0) startCol(0)
  put  61 into Totals(0) startCol(15)

  put  72 into Totals(0) startCol(13)
  put  79 into Totals(0) startCol(1)
  put  86 into Totals(0) startCol(2)
  put  93 into Totals(0) startCol(3)
  put 100 into Totals(0) startCol(4)
  put 107 into Totals(0) startCol(5)
  put 114 into Totals(0) startCol(6)

  put 122 into Totals(0) startCol(14)
  put 129 into Totals(0) startCol(7)
  put 136 into Totals(0) startCol(8)
  put 143 into Totals(0) startCol(9)
  put 150 into Totals(0) startCol(10)
  put 157 into Totals(0) startCol(11)
  put 164 into Totals(0) startCol(12)
end-procedure


begin-heading 7
  #Include 'stdhdg03.sqc'
  print 'Company : '    (+1,1)
  print $compdescr         (,+2)
  print '                                 Job    Salary    Total  ' (+1,1)
  print '       Total   <----------------- M A L E ----------------->  <----------------- F E M A L E --------------->'      ()
  print 'Job Title                       Group   Grade   Employees' (+1,1)
  print '     Minorities' ()
  print '  Total   EU    EU   African Afro  Asian  Other  Total  EU    EU   African Afro   Asian  Other'   ()
  print '          UK   Other         Carib                      UK   Other         carib'                 (+1,73)

end-heading

begin-procedure Process-Main
begin-SELECT
C.COMPANY () on-break print=never level=1 procedure=company-change
  let $company = rtrim(&C.COMPANY,' ')
C.DESCR
  let $compdescr = rtrim(&C.DESCR,' ')
J.BUSINESS_UNIT
  LET $BU = RTRIM(&J.BUSINESS_UNIT,' ')
J.DEPTID    () on-break print=never level=1 skiplines=2 procedure=Department-Change
   if RTRIM($firstRec, ' ') = ''
    POSITION (-1)
    do Print-SubHeading
    POSITION (+2)
    move 'N' to $firstRec
  end-if
JT.DESCR          (0,1,35) on-break    level=2 skiplines=1 procedure=JobTitle-Change
JT.EEO_JOB_GROUP  (0,37,6)
J.SAL_ADMIN_PLAN (0,44) EDIT XXX/
S.MID_RT_ANNUAL
J.GRADE          ()
P.SEX,
DVR.ETHNIC_GRP_CD_UK,
COUNT(*)
  move &P.Sex           to $Sex
  move &DVR.Ethnic_Grp_cd_uk  to $EthnicGroup
  do Analyze-Sex-EthnicGroup  !returns a value of 1 - 12 in #EEOcol

  ARRAY-ADD &COUNT(*) &COUNT(*) to TOTALS(3) TOTAL(0) TOTAL(#EEOCOL)
  if &P.Sex = 'F'
    ARRAY-ADD &COUNT(*) to TOTALS(3) TOTAL(14)
  else
    ARRAY-ADD &COUNT(*) to TOTALS(3) TOTAL(13)
  end-if
  if &DVR.Ethnic_Grp_cd_uk > '1' !Minority groups
    ARRAY-ADD &COUNT(*) to TOTALS(3) TOTAL(15)
  end-if
FROM  PS_PERSONAL_DT_FST P, PS_PER_ORG_ASGN P1, PS_EMPLOYMENT E, PS_JOB J,
      PS_JOBCODE_TBL JT, PS_SAL_GRADE_TBL S,PS_DIVERSITY DVR,PS_COMPANY_TBL C
WHERE P1.PER_ORG = 'EMP'
  AND E.EMPLID     = P.EMPLID
  AND DVR.EMPLID = P.EMPLID
  AND P1.EMPL_RCD = E.EMPL_RCD
  AND J.EMPLID     = E.EMPLID
  AND P1.EMPLID   = P.EMPLID
  AND J.EMPL_RCD  = E.EMPL_RCD
  AND J.EFFDT =
      (SELECT MAX(J1.EFFDT)
       FROM   PS_JOB J1
       WHERE J1.EMPLID    = J.EMPLID
         AND J1.EMPL_RCD = J.EMPL_RCD
         AND J1.EFFDT    <= $AsOfDate)
  AND J.EFFSEQ =
      (SELECT MAX(J2.EFFSEQ)
       FROM   PS_JOB J2
       WHERE J2.EMPLID    = J.EMPLID
         AND J2.EMPL_RCD = J.EMPL_RCD
         AND J2.EFFDT     = J.EFFDT)
  AND JT.JOBCODE   = J.JOBCODE
  AND JT.SETID = J.SETID_JOBCODE
  AND JT.EFFDT =
      (SELECT MAX(JT1.EFFDT)
       FROM   PS_JOBCODE_TBL JT1
       WHERE  JT1.JOBCODE = JT.JOBCODE
         AND JT1.SETID = JT.SETID
         AND  JT1.EFFDT  <= J.EFFDT)
  AND S.SAL_ADMIN_PLAN = J.SAL_ADMIN_PLAN
  AND S.GRADE          = J.GRADE
  AND S.SETID = (SELECT SETID
                 FROM PS_SET_CNTRL_REC
                 WHERE RECNAME = 'SAL_GRADE_TBL'
                  AND SETCNTRLVALUE = J.BUSINESS_UNIT)
  AND S.EFFDT =
      (SELECT MAX(S1.EFFDT)
         FROM PS_SAL_GRADE_TBL S1
        WHERE S1.SAL_ADMIN_PLAN = S.SAL_ADMIN_PLAN
          AND S1.GRADE          = S.GRADE
          AND S1.SETID = S.SETID)
  AND J.HR_STATUS = 'A'
  AND J.EEO_CLASS    <> 'E'  !Exclude from counts
  AND J.COMPANY = C.COMPANY
  [$wherecompany]
GROUP BY C.COMPANY,C.DESCR,J.BUSINESS_UNIT,J.DEPTID, JT.EEO_JOB_GROUP, J.SAL_ADMIN_PLAN, S.MID_RT_ANNUAL,
         J.GRADE, JT.DESCR, P.SEX, DVR.ETHNIC_GRP_CD_UK
ORDER BY C.COMPANY,C.DESCR,J.DEPTID, JT.EEO_JOB_GROUP, J.SAL_ADMIN_PLAN, S.MID_RT_ANNUAL,
         J.GRADE, JT.DESCR, P.SEX, DVR.ETHNIC_GRP_CD_UK
end-SELECT
  move 1 to #changeLevel
  do Print-Totals
end-procedure

begin-procedure Department-Change
  move 2 to #changeLevel
  do Print-Totals
  do Print-SubHeading
end-procedure

begin-procedure company-change
  new-page
end-procedure

begin-procedure Print-SubHeading
  if #current-line > 51  !allow for subheading and 3 detail lines
    new-page
    position (-1)
  end-if
  print 'Department: ' (+2,1,1)

  let $DeptID = Rtrim(&J.DeptID, ' ')
  print $DeptID        ()
  do Get-Department-Name
  print $DeptName      (0,+2)
end-procedure

begin-procedure JobTitle-Change
  move 3 to #changeLevel
  do Print-Totals
end-procedure

begin-procedure Print-Totals
  move 3 to #totalRow
  while #totalRow >= #changeLevel
    move #totalRow to #rollRow
    subtract 1 from #rollRow
    evaluate #totalRow
      when = 2
        print 'TOTAL'       (+2,44)
      when = 1
        print 'FINAL TOTAL' (+3,38)
    end-evaluate
    move 0 to #i
    while #i <= 15
      get #total from Totals(#totalRow) total(#i)
      get #startCol from Totals(0) startCol(#i)
      do Format-Number(#total, $out, '999,999')
      print $out (0,#startCol)
      array-add #total to Totals(#rollRow) total(#i)
      if #totalRow = 3
        put 0 into Totals(#totalRow) total(#i)  !values needed for % calculation
      end-if
      add 1 to #i
    end-while
    if #totalRow < 3
      print '% OF TOTAL' (+2,39)
      get #TotalEmployees from Totals(#totalRow) total(0)
      move 0 to #i
      while #i <= 15
        get #total from Totals(#totalRow) total(#i)
        multiply 100 times #total
        divide #TotalEmployees into #total
        get #startCol from Totals(0) startCol(#i)
        do Format-Number(#total, $out, '9999.99')
        print $out (0,#startCol)
        put 0 into Totals(#totalRow) total(#i)
        add 1 to #i
      end-while
    end-if
    subtract 1 from #totalRow
  end-while
end-procedure

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askaod.sqc'    !Ask As Of Date input

#Include 'eeogrpuk.sqc'  !Analyze-Sex-EthnicGroup procedure
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status

