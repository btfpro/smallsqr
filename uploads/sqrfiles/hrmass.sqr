!***********************************************************************
!  HRMASS:  Mass Change                                            *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!
!----------------------------------------------------------------------
!
!          $Date:  2006/09/19:02:34:13                                 !
!       $Release:  HR9                                                 !
!      $Revision:  109                                                 !
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'
#include 'setup32.sqc'

begin-REPORT

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Term
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term

end-REPORT


begin-PROCEDURE Init-Report

  move 'HRMASS' to $ReportID
  do Stdapi-Init

  do Get-Current-DateTime
  let $language_cd = $CURR_LANGUAGE_CD
  do Init_Report_Translation($ReportID, $language_cd)
  do Append_Report_Translation($ReportID)

  !display #sqr-max-lines
  !display #sqr-max-columns

  do Report-Translation

  if $prcs_process_instance = ''
    !No Prompt
  else
    do Get-Run-Parameters
  end-if

end-PROCEDURE


begin-procedure Process-Main

   do Read-Temporary-Table

end-procedure


begin-heading 7
  #Include 'stdhdgtr.sqc'

  print $report_mu_id            (+2,1,15) bold
  print $mu_id                   (,20,15)

  print $mu_id_descr             (,50,50)

  print $report_mu_status        (,140,15) bold
  print $status_description1     (,155,10)

end-heading

!----------------------------------------------------------------------
! Procedure: Get-Run-Parameters
! Desc:      Get Operator ID, Run Controll and Language Code
!----------------------------------------------------------------------
begin-procedure Get-Run-Parameters

let $mu_id = ' '
let $prev_mu_id = ' '
let #cnt0 = 0

do Delete-Temporary-Table

begin-SELECT
B.MU_ID
A.MU_EXEC_STATUS_FLG
A.MU_PRINT_DTL_FLG
A.LANGUAGE_CD

    let $mu_id                 = &B.MU_ID
    let $mu_exec_status_flg    = &A.MU_EXEC_STATUS_FLG
    let $mu_print_dtl_flg      = &A.MU_PRINT_DTL_FLG
    let $language_cd           = &A.LANGUAGE_CD

    do Population-Selection-Criteria
    do Individuals
    do Data-Changes
    let $prev_mu_id = $mu_id

FROM PS_RUNCTL_MU A
,PS_RUNCTL_MU_DTL B

WHERE A.OPRID = $prcs_oprid
AND A.RUN_CNTL_ID = $prcs_run_cntl_id
AND B.OPRID = A.OPRID
AND B.RUN_CNTL_ID = A.RUN_CNTL_ID

ORDER BY SEQ_NUM
, B.MU_ID

end-SELECT

end-PROCEDURE

!------------------------------------------------------------------------------------
! Procedure: Population-Selection-Criteria
! Desc:      Get all 'Population Selection Criteria' at common and additional changes 
!            for a mass update id.
!------------------------------------------------------------------------------------
begin-procedure Population-Selection-Criteria

begin-SELECT
T1.MU_CHG_NUM 
T1.MU_SELECTION_TYPE
T1.BUSINESS_UNIT
T1.REG_REGION
T1.LABOR_AGREEMENT
T1.MILITARY_SERVICE
T1.MU_VALUE_CHAR
T1.MU_VALUE_FROM_DT
T1.MU_VALUE_TO_DT
T1.MU_VALUE_BOOL
T1.MU_PRCS_POP_FLG

    let #mu_chg_num         = &T1.MU_CHG_NUM
    let $mu_selection_type  = rtrim(&T1.MU_SELECTION_TYPE,' ')
    let $business_unit      = rtrim(&T1.BUSINESS_UNIT,' ')
    let $reg_region         = rtrim(&T1.REG_REGION,' ')
    let $labor_agreement    = rtrim(&T1.LABOR_AGREEMENT,' ')
    let $military_service   = rtrim(&T1.MILITARY_SERVICE,' ')
    let $mu_value_char1     = rtrim(&T1.MU_VALUE_CHAR,' ')
    let $mu_value_from_dt   = rtrim(&T1.MU_VALUE_FROM_DT,' ')
    let $mu_value_to_dt     = rtrim(&T1.MU_VALUE_TO_DT,' ')
    let $mu_value_bool1     = rtrim(&T1.MU_VALUE_BOOL,' ')
    let $mu_prcs_pop_flg    = rtrim(&T1.MU_PRCS_POP_FLG,' ')

    move 'MU_SELECTION_TYPE' to $FieldName
    move $mu_selection_type to $FieldValue
    let $XlatLongName = ''
    do Read-Translate-Table
    let $long_xlat = rtrim($XlatLongName, ' ')

    Evaluate $mu_selection_type
      ! Active Employee
      When = 'A'
         let $pop_string = $long_xlat || '=' || $mu_value_bool1
         break
      ! Business Unit
      When = 'B'
         let $pop_string = $long_xlat || '=' || $business_unit
         break
      ! Company
      When = 'C'
         let $pop_string = $long_xlat || '=' || $mu_value_char1
         break
      !  Department
      When = 'D'
         let $pop_string = $long_xlat || '=' || $business_unit
         let $pop_string = $pop_string || ',' || $mu_value_char1
         break
      ! Establishment
      When = 'E'
         let $pop_string = $long_xlat || '=' || $mu_value_char1
         break
      ! Job Effective Date
      When = 'F'
         let $pop_string = $long_xlat || '=' || $mu_value_from_dt
         let $pop_string = $pop_string || ',' || $mu_value_to_dt
         break
      ! Group Build
      When = 'G'
         let $pop_string = $long_xlat || '=' || $mu_value_char1
         break
      ! Assignment Departure
      When = 'I'
         let $pop_string = $long_xlat || '=' || $mu_value_from_dt
         let $pop_string = $pop_string || ',' || $mu_value_to_dt
         break
      ! Job Code
      When = 'J'
         let $pop_string = $long_xlat || '=' || $business_unit
         let $pop_string = $pop_string || ',' || $mu_value_char1
         break
      ! Location
      When = 'L'
         let $pop_string = $long_xlat || '=' || $business_unit
         let $pop_string = $pop_string || ',' || $mu_value_char1
         break
      ! Labor Agreement
      When = 'M'
         let $pop_string = $long_xlat || '=' || $reg_region
         let $pop_string = $pop_string || ',' || $labor_agreement
         break
      ! Job Assignment End
      When = 'N'
         let $pop_string = $long_xlat || '=' || $mu_value_from_dt
         let $pop_string = $pop_string || ',' || $mu_value_to_dt
         break
      ! Position Number
      When = 'P'
         let $pop_string = $long_xlat || '=' || $mu_value_char1
         break
      ! Rank
      When = 'R'
         let $pop_string = $long_xlat || '=' || $military_service
         let $pop_string = $pop_string || ',' || $mu_value_char1
         break
      ! Job Assignment Start
      When = 'S'
         let $pop_string = $long_xlat || '=' || $mu_value_from_dt
         let $pop_string = $pop_string || ',' || $mu_value_to_dt
         break
      ! Organizational Relationship
      When = 'T'
         let $pop_string = $long_xlat || '=' || $mu_value_char1
         break
      ! Union Code
      When = 'U'
         let $pop_string = $long_xlat || '=' || $mu_value_char1
         break
      ! Assignment Arrival
      When = 'V'
         let $pop_string = $long_xlat || '=' || $mu_value_from_dt
         let $pop_string = $pop_string || ',' || $mu_value_to_dt
         break
      ! Labor Facility
      When = 'Y'
         let $pop_string = $long_xlat || '=' || $reg_region
         let $pop_string = $pop_string || ',' || $mu_value_char1
         break
    End-Evaluate

    if $mu_prcs_pop_flg = 'E'
       let $message_text = ''
       do Get_MessageCatalog(18160, 95,$message_text)
       let $message_text = ltrim(rtrim($message_text,' '),' ')
       let $pop_string = $pop_string || $message_text
    end-if

    let #mu_trans_id = 0   
    let $text = $pop_string
    do Insert-Temporary-Table
    
FROM PS_MU_SETUP_POP T1

WHERE T1.MU_ID = $mu_id

ORDER BY T1.MU_CHG_NUM
,T1.MU_SELECTION_TYPE

end-SELECT

end-procedure

!----------------------------------------------------------------------------------------
! Procedure: Individuals
! Desc:      Get all 'Individuals' at common and additional changes for a mass update id.
!----------------------------------------------------------------------------------------
begin-procedure Individuals

begin-SELECT
T2.EMPLID
T2.EMPL_RCD
T2.MU_CHG_NUM
T2.MU_PRCS_POP_FLG

    let $emplid           = rtrim(&T2.EMPLID,' ')
    let $empl_rcd         = to_char(&T2.EMPL_RCD)
    let #mu_chg_num       = &T2.MU_CHG_NUM
    let $mu_prcs_pop_flg  = &T2.MU_PRCS_POP_FLG

    let $message_text = ''
    if $mu_prcs_pop_flg = 'E'
       do Get_MessageCatalog(18160,95,$message_text)
       let $message_text = ltrim(rtrim($message_text,' '),' ')
       let $emp_string = $emplid || ',' || $empl_rcd || '(' || $message_text || ')'
    Else
       do Get_MessageCatalog(18160,96,$message_text)
       let $message_text = ltrim(rtrim($message_text,' '),' ')
       let $emp_string = $emplid || ',' || $empl_rcd || '(' || $message_text || ')'
    end-If

    let #mu_trans_id = 0
    let $text = $emp_string
    do Insert-Temporary-Table

FROM PS_MU_SETUP_EMP T2

WHERE T2.MU_ID = $mu_id

ORDER BY T2.MU_CHG_NUM 
,T2.EMPLID
,T2.EMPL_RCD
end-SELECT

end-procedure

!-------------------------------------------------------------------------------------------
! Procedure: Data-Changes
! Desc:      Get all 'Data Changes' at common and additional changes for a mass update id.
!-------------------------------------------------------------------------------------------
begin-procedure Data-Changes

begin-SELECT
T3.SEQ_NUM
T3.MU_SECTION
T3.MU_ELEMENT
T3.MU_CHG_NUM
T3.MU_VALUE_CHAR
T3.MU_VALUE_DT
T3.MU_VALUE_NUM
T3.MU_VALUE_BOOL
T3.MU_COPY_FWD_IND

    let $mu_section = rtrim(&T3.MU_SECTION,' ')
    let $description1 = ''
    do Get_SectionDescription($mu_section,$description1)
    let $section_descr = rtrim($description1,' ') || ':'

    let $mu_element = rtrim(&T3.MU_ELEMENT,' ')
    let $description2 = ''
    do Get_ElementDescription($mu_section,$mu_element,$description2)
    let $element_descr = rtrim($description2,' ')

    let #mu_chg_num         = &T3.MU_CHG_NUM
    let $mu_value_char2     = rtrim(&T3.MU_VALUE_CHAR,' ')
    let $mu_value_dt        = rtrim(&T3.MU_VALUE_DT,' ')
    let #mu_value_num       = &T3.MU_VALUE_NUM
    let $mu_value_bool2     = rtrim(&T3.MU_VALUE_BOOL,' ')
    let $mu_copy_fwd_ind    = rtrim(&T3.MU_COPY_FWD_IND,' ')

    let $chg_string = $section_descr || $element_descr
    if $mu_value_char2 > ' '
       let $chg_string = $section_descr || $element_descr || ' = ' || $mu_value_char2
    end-if

    if $mu_value_dt > ' '
       let $chg_string = $section_descr || $element_descr || ' = ' || $mu_value_dt
    end-if

    if #mu_value_num > 0
       let $chg_string = $section_descr || $element_descr || ' = ' || to_char(#mu_value_num)
    end-if

    let $prompt = ''
    do Get_Prompt($mu_section,$mu_element,$prompt)
    let $prompt = rtrim($prompt,' ')
    if $mu_value_bool2 > ' ' And $prompt = 'C'
       let $chg_string = $section_descr || $element_descr || ' = ' || $mu_value_bool2
    end-if

    let $message_text = ''
    if $mu_copy_fwd_ind = 'Y'
      do Get_MessageCatalog(18160, 98,$message_text)
      let $message_text = ltrim(rtrim($message_text,' '),' ')
      let $chg_string = $chg_string || '(' || $message_text || ')'
    end-if

    let #mu_trans_id = 1
    let $text = $chg_string
    do Insert-Temporary-Table

FROM PS_MU_SETUP_CHG T3
WHERE T3.MU_ID = $mu_id

ORDER BY T3.SEQ_NUM

end-SELECT

end-procedure

!------------------------------------------------------------------------------------
! Procedure: Get_SectionDescription
! Descr:     Retrieves the description from MU_TP_SETUP_TBL.
!------------------------------------------------------------------------------------
begin-procedure Get_SectionDescription ($section,:$section_descr)

begin-SELECT
G11.DESCR

  let $section_descr = rtrim(&G11.DESCR,' ')

FROM PS_MU_TP_SETUP_LNG G11

WHERE G11.MU_SECTION = $section
AND G11.LANGUAGE_CD = $language_cd

end-SELECT

if $section_descr = ''
begin-SELECT
G12.DESCR

  let $section_descr = rtrim(&G12.DESCR,' ')

FROM PS_MU_TP_SETUP_TBL G12

WHERE G12.MU_SECTION = $section

end-SELECT
end-if

end-procedure


!------------------------------------------------------------------------------------
! Procedure: Get_ElementDescription
! Descr:     Retrieves the description from MU_TP_SETUP_DTL.
!------------------------------------------------------------------------------------
begin-procedure Get_ElementDescription($section,$element,:$element_descr)

begin-SELECT
G21.DESCR

  let $element_descr = rtrim(&G21.DESCR,' ')

FROM PS_MU_TP_ELEM_LNG G21

WHERE G21.MU_SECTION = $section
AND G21.MU_ELEMENT = $element
AND G21.LANGUAGE_CD = $language_cd

end-SELECT

if $element_descr = ''
begin-SELECT
G22.DESCR

  let $element_descr = rtrim(&G22.DESCR,' ')

FROM PS_MU_TP_SETUP_DTL G22

WHERE G22.MU_SECTION = $section
AND G22.MU_ELEMENT = $element

end-SELECT
end-if

end-procedure

!------------------------------------------------------------------------------------
! Procedure: Get_Prompt
! Descr:     Retrieves the description from MU_TP_SETUP_TBL.
!------------------------------------------------------------------------------------
begin-procedure Get_Prompt($section,$element,:$prompt)

begin-SELECT
G3.MU_PROMPT_IND

  let $mu_prompt_ind = &G3.MU_PROMPT_IND

FROM PS_MU_TP_SETUP_DTL G3

WHERE G3.MU_SECTION = $section
AND G3.MU_ELEMENT = $element

end-SELECT

end-procedure


!------------------------------------------------------------------------------------
! Procedure: Get_MassUpdateIDDescription
! Descr:     Retrieves the status and description from MU_SETUP_TBL.
!------------------------------------------------------------------------------------
begin-procedure Get_MassUpdateIDData($mu_id,:$status,:$descr)

begin-SELECT
G41.DESCR50

  let $descr  = rtrim(&G41.DESCR50,' ')

FROM PS_MU_SETUP_LNG G41
WHERE G41.MU_ID = $mu_id
AND G41.LANGUAGE_CD = $language_cd

end-SELECT

if $descr = '' 
begin-SELECT
G42.MU_STATUS
G42.DESCR50

  let $status = &G42.MU_STATUS
  let $descr  = &G42.DESCR50

FROM PS_MU_SETUP_TBL G42
WHERE G42.MU_ID = $mu_id

end-SELECT
else
begin-SELECT
G43.MU_STATUS

  let $status = &G43.MU_STATUS

FROM PS_MU_SETUP_TBL G43
WHERE G43.MU_ID = $mu_id

end-SELECT
end-if

end-procedure


!------------------------------------------------------------------------------------
! Procedure: Get_MessageCatalog
! Descr:     Retrieves the description from MU_SETUP_TBL.
!------------------------------------------------------------------------------------
begin-procedure Get_MessageCatalog (#message_set_nbr,#message_nbr,:$message_text)

  let #_MessageSetNbr = #message_set_nbr
  let #_MessageNbr    = #message_nbr

  do Read-MsgCatalog-Table

  let $message_key = '(' || $_MessageLangCd         || ','  ||
                         to_char(#message_set_nbr)   || ','  ||
                         to_char(#message_nbr)       || ') '

  let $message_text = ' ' || rtrim($_MessageText, ' ') || ' '

end-procedure


!------------------------------------------------------------------------------------
! Procedure: Get_MessagesExceptions 
! Descr:     Retrieves the description from MU_TP_SETUP_LOG.
!------------------------------------------------------------------------------------
begin-procedure Get_MessagesExceptions
let #print_line0 = 0
let #mu_trans_id = $mu_trans_id

begin-SELECT 
D2.LASTUPDDTTM
D2.DESCRLONG

    let $lastupddttim          = edit(&D2.LASTUPDDTTM, 'MM/DD/YYYY HH24:MI:SS')
    let $descrlong             = &D2.DESCRLONG

    if #print_line0 = 0
       print $lastupddttim        (,106,30)
       print $descrlong           (,136,0) wrap 45 2
       let #print_line0 = #print_line0 + 1
    else
       print $lastupddttim        (+1,106,30)
       print $descrlong           (,136,0) wrap 45 2
    end-if

FROM PS_MU_TP_TRANS_LOG D2

WHERE D2.MU_TRANS_SRC = 'MASSUPDATE' 
AND D2.MU_TRANS_REF = $mu_trans_ref
AND D2.MU_TRANS_ID = #mu_trans_id

ORDER BY 
D2.SEQ_NUM5
end-SELECT

end-procedure


!------------------------------------------------------------------------------------
! Procedure: Insert-Temporary-Table
!------------------------------------------------------------------------------------
begin-procedure Insert-Temporary-Table

begin-sql

INSERT INTO PS_HR_MASS_TMP (
MU_ID
,MU_CHG_NUM
,SEQ_NBR
,MU_TRANS_ID
,DESCR100)
Values (
 $mu_id
,#mu_chg_num
,#cnt0
,#mu_trans_id
,$text
)
end-sql

 let #cnt0 = #cnt0+1

end-procedure


!------------------------------------------------------------------------------------
! Procedure: Delete-Temporary-Table
!------------------------------------------------------------------------------------
begin-procedure Delete-Temporary-Table
begin-sql

DELETE FROM PS_HR_MASS_TMP

end-sql

end-procedure


!------------------------------------------------------------------------------------
! Procedure: MU_Page_Break
!------------------------------------------------------------------------------------
begin-procedure MU_Page_Break
   let $old_mu_id       = &TMP.MU_ID
   let #old_mu_chg_num  = &TMP.MU_CHG_NUM
   let $overwrite = 'N'
end-procedure


!------------------------------------------------------------------------------------
! Procedure: Read-Temporary-Table
!------------------------------------------------------------------------------------
begin-procedure Read-Temporary-Table

let #print_line1 = 0
let #print_line2 = 0
let #prev_mu_chg_num = 0
let #mu_chg_num = 0
let #cnt1 = 0
let $overwrite = 'Y'

begin-SELECT
TMP.MU_ID                 () on-break print=never level=1 after=New_Page before=MU_Page_Break
TMP.MU_CHG_NUM
TMP.SEQ_NBR
TMP.MU_TRANS_ID
TMP.DESCR100

   if $overwrite = 'Y'
      let $old_mu_id       = $mu_id
      let #old_mu_chg_num  = #mu_chg_num
   end-if

   let $mu_id       = &TMP.MU_ID
   let #mu_chg_num  = &TMP.MU_CHG_NUM
   let #mu_trans_id = &TMP.MU_TRANS_ID
   let $descr100    = &TMP.DESCR100

   if #prev_mu_chg_num <> #mu_chg_num and #cnt1 <> 0
      do New_Page
      let #cnt1 = 0
      let $old_mu_id       = $mu_id
      let #old_mu_chg_num  = #mu_chg_num
      let $overwrite = 'Y'
   end-if

   if #mu_trans_id = 0
      ! Print Population Selection Criteria and Individuals 
      if #print_line1 = 0 
         let $message_text1 = ''
         do Get_MessageCatalog(18160,69,$message_text1)
         let $message_text1 = ltrim(rtrim($message_text1,' '),' ') || ':'

         do Total-Transaction-Per-Status

         print $message_text1                        (+2,1,30) bold
         print $descr100                             (,50) 
         let #print_line1 = #print_line1 +1
     else
         print $descr100                             (+1,50)
     end-if
   else
     ! Print Data Changes 
     if #print_line2 = 0 
        let $message_text2 = ''
        do Get_MessageCatalog(18160,71,$message_text2)
        let $message_text2 = ltrim(rtrim($message_text2,' '),' ') || ':'

        print $message_text2                        (+2,1,30) bold
        print $descr100                             (,50) 
        let #print_line2 = #print_line2 +1
     else
        print $descr100                             (+1,50)
     end-if
   end-if

   let #prev_mu_chg_num = #mu_chg_num
   let #cnt1 = #cnt1 + 1

FROM PS_HR_MASS_TMP TMP

ORDER BY TMP.MU_ID
,TMP.MU_CHG_NUM
,TMP.SEQ_NBR
,TMP.MU_TRANS_ID

end-select

end-procedure

!----------------------------------------------------------------------
! Procedure: Total-Transaction-Per-Status
! Desc:      Get total transactions per status.
!----------------------------------------------------------------------
begin-procedure Total-Transaction-Per-Status
let #print_line3 = 0

begin-SELECT
B.MU_EXEC_STATUS_FLG
count(*) &cnt2

    let $mu_exec_status_flg            = &B.MU_EXEC_STATUS_FLG
    let #total_transactions_per_status = &cnt2
    let $total_transactions_per_status = ''
    do Format-Number(#total_transactions_per_status,$total_transactions_per_status,'99999')

    move 'MU_EXEC_STATUS_FLG' to $FieldName
    move $mu_exec_status_flg to $FieldValue
    let $XlatLongName = ''
    do Read-Translate-Table
    let $status_description2 = rtrim($XlatLongName, ' ') || ':'

    let $message_text3 = ''
    do Get_MessageCatalog(18160,79,$message_text3)
    let $message_text3 = ltrim(rtrim($message_text3,' '),' ') || ':'

    if #print_line3 = 0
       print $message_text3                        (,1,30) bold
       print $status_description2                  (,50,20)
       print $total_transactions_per_status        (,71,20)
       let #print_line3 = #print_line3 + 1
    else
       print $status_description2                  (+1,50,20)
       print $total_transactions_per_status        (,71,20)
    end-if

FROM PS_FAST_SQR_SEC_VW A
,PS_MU_CHANGE_TBL B
,PS_MU_TP_TRANS_TBL C

WHERE A.OPRID = $prcs_oprid
AND B.EMPLID = A.EMPLID 
AND B.EMPL_RCD = A.EMPL_RCD
AND B.MU_ID = $mu_id
AND C.MU_TRANS_SRC = 'MASSUPDATE' 
AND C.MU_TRANS_REF = B.MU_ID 
AND C.MU_TRANS_ID = B.MU_TRANS_ID

GROUP BY B.MU_EXEC_STATUS_FLG

ORDER BY B.MU_EXEC_STATUS_FLG

end-SELECT

end-procedure

!------------------------------------------------------------------------------------
! Procedure: New_Page
!------------------------------------------------------------------------------------
begin-procedure New_Page

let $status = ''
let $descr = ''
do Get_MassUpdateIDData($mu_id,$status,$descr)
let $mu_id_status = $status
let $mu_id_descr = $descr

move 'MU_STATUS' to $FieldName
move $mu_id_status to $FieldValue
let $XlatLongName = ''
do Read-Translate-Table
let $status_description1 = rtrim($XlatLongName, ' ')

let #print_line1 = 0
let #print_line2 = 0

do Mass-Update-Transactions
new-page

end-procedure

!----------------------------------------------------------------------
! Procedure: Mass-Update-Transactions
! Desc:      Get detailed employee information for main processing.
!----------------------------------------------------------------------
begin-procedure Mass-Update-Transactions
let $emplid = ''
let $empl_rcd = ''
let $prev_emplid = ''
let $prev_empl_rcd = ''

print $report_emplid                 (+4,1,15) bold
print $report_name                   (,16,40)  bold
print $report_mu_from_effdt          (,56,15)  bold
print $report_mu_to_effdt            (,71,15)  bold
print $report_mu_exec_status_flg     (,86,20)  bold

if $mu_print_dtl_flg = 'Y'
   print $report_lastupddttm         (,106,30) bold
   print $report_descrlong           (,136,0)  bold
end-if

begin-SELECT
C1.EMPLID
C1.EMPL_RCD
E1.MU_FROM_EFFDT
E1.MU_TO_EFFDT
C1.MU_EXEC_STATUS_FLG
D1.MU_TRANS_REF
D1.MU_TRANS_ID

    let $emplid                = &C1.EMPLID
    let $empl_rcd              = to_char(&C1.EMPL_RCD)
    do Format-DateTime(&E1.MU_FROM_EFFDT, $mu_from_effdt, {DEFDATE}, '', '')
    do Format-DateTime(&E1.MU_TO_EFFDT, $mu_to_effdt, {DEFDATE}, '', '')
    let $mu_exec_status_flg    = &C1.MU_EXEC_STATUS_FLG

    move 'MU_EXEC_STATUS_FLG'  to $FieldName
    move $mu_exec_status_flg to $FieldValue
    do Read-Translate-Table
    let $status_description3 = rtrim($XlatLongName, ' ')

    let $mu_trans_ref         = &D1.MU_TRANS_REF
    let $mu_trans_id          = to_char(&D1.MU_TRANS_ID)

    do Get-Employee-Name

    let $employee = substr($emplid,1,11) || '-' || $empl_rcd
    print $employee            (+2,1,15)
    print $Name                (,16,40)
    print $mu_from_effdt       (,56,15)
    print $mu_to_effdt         (,71,15)
    print $status_description3 (,86,20)

    if $mu_print_dtl_flg = 'Y'
        do Get_MessagesExceptions
    end-if

FROM PS_MU_CHANGE_TBL C1
, PS_MU_TP_TRANS_TBL D1
, PS_MU_TP_DATES E1

WHERE C1.MU_ID = $old_mu_id
AND C1.MU_CHG_NUM = #old_mu_chg_num
AND D1.MU_TRANS_SRC = 'MASSUPDATE' 
AND D1.MU_TRANS_REF = C1.MU_ID 
AND D1.MU_TRANS_ID = C1.MU_TRANS_ID
AND E1.MU_TRANS_SRC = D1.MU_TRANS_SRC
AND E1.MU_TRANS_REF = D1.MU_TRANS_REF
AND E1.MU_TRANS_ID = D1.MU_TRANS_ID

ORDER BY C1.EMPLID
, C1.EMPL_RCD

end-SELECT

end-procedure

!------------------------------------------------------------------------------------
! Procedure: Report-Translation
!------------------------------------------------------------------------------------
begin-procedure Report-Translation

  do Get_Field_Information ('HRMASS', 'DESCRLONG',         $report_descrlong,         #CW)
  do Get_Field_Information ('HRMASS', 'EMPLID',            $report_emplid,            #CW)
  do Get_Field_Information ('HRMASS', 'LASTUPDDTTM',       $report_lastupddttm,       #CW)
  do Get_Field_Information ('HRMASS', 'MU_EXEC_STATUS_FLG',$report_mu_exec_status_flg,#CW)
  do Get_Field_Information ('HRMASS', 'MU_FROM_EFFDT',     $report_mu_from_effdt,     #CW)
  do Get_Field_Information ('HRMASS', 'MU_ID',             $report_mu_id,             #CW)
  do Get_Field_Information ('HRMASS', 'MU_STATUS',         $report_mu_status,         #CW)
  do Get_Field_Information ('HRMASS', 'MU_TO_EFFDT',       $report_mu_to_effdt,       #CW)
  do Get_Field_Information ('HRMASS', 'NAME',              $report_name,              #CW)

end-procedure

!----------------------------------------------------------------------!
! Called SQC Procedures
!----------------------------------------------------------------------!
#include 'stdapi.sqc'
#include 'hrsecty.sqc'
#include 'useprntr.sqc'
#include 'prcsapi.sqc'      ! Update Process Request API
#include 'prcsdef.sqc'      ! Update Process Request variable declaration


#include 'tranctrl.sqc'     ! Procedures: Commit-Transaction
                ! Procedures: Rollback-Transaction
                ! Procedures: Begin-Transaction


#include 'reset.sqc'            ! Reset printer procedure

#include 'curdttim.sqc'         ! Get-Current-DateTime procedure
                ! Procedures: Get-Current-DateTime

#include 'datetime.sqc'         ! Routines for date and time formatting
                ! Procedures: Init-Datetime
                ! Procedures: Format-DateTime
                ! Procedures: Diff-Date
                ! Procedures: many others.

#include 'number.sqc'           ! Routines to format numbers
                ! Procedures: Init-Number
                ! Procedures: Select-Default-Curr
                ! Procedures: Format-Number
                ! Procedures: Format-Amt
                ! Procedures: ConvertCurrency
                ! Procedures: Get-Currency-Rate
#include 'readxlat.sqc'  ! read translate table

#include 'getempnm.sqc'  ! read person's name
#include 'readmsgc.sqc'  ! read the Message Catalog Table
#include 'sqrtrans.sqc'
#include 'validdt.sqc'
