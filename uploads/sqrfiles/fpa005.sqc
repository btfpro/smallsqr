!***********************************************************************
!  FPA005.SQC calculation of the foreseen date for the step change     *
!                                                                      *
! Parameter : $Emplid must have been populate                          *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2006/07/19:12:24:47                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************


!***************************************************************
!
!
!     FPA005-Main
!
!
!***************************************************************

BEGIN-PROCEDURE FPA005-Main

!Calendar or Thirtieth
!-----------------------------------------------------------------
do Get-Cal-Thirtieth($Cal-Thirtieth,$Termdt-cd)

#IFDEF DEBUGI
    Display 'Calendar/Thirtieth : '     noline
    Display $Cal-Thirtieth
    display ' FPA005-Main ; EMPLID : '  noline
    display $Emplid
    Display '$Termdt-cd : '             noline     !Expiration date (birthdate, next month start date or in progress )
    Display $Termdt-cd
#ENDIF

!Select last step of all employee having :
!        promotion date change = 'N'
!        open career position
!--------------------------------------------------------------

!Build of the dynamic where clause
!---------------------------------------------

let $select-where =
             'E0.FP_MATRIX_TYP = M0.FP_MATRIX_TYP
        and   E0.FP_MATRIX_CD  = M0.FP_MATRIX_CD
        and   M0.EFF_STATUS    = ''A''
        and   E0.FP_SCALE_CD   = M0.FP_SCALE_CD
        and   E0.FP_STEP_CD    = CC0.FP_STEP_CD
        and   E0.FP_AUTO_PROM  = ''Y''
        and   E0.EFFDT         =  ' ||
             '(select max(EE0.EFFDT) from PS_FPMSALSTEP_TBL EE0
               where EE0.FP_MATRIX_TYP = M0.FP_MATRIX_TYP
               and   EE0.FP_MATRIX_CD  = M0.FP_MATRIX_CD
               and   EE0.FP_SCALE_CD   = M0.FP_SCALE_CD
               and   EE0.FP_STEP_CD    = CC0.FP_STEP_CD
               and    EE0.EFFDT    <= CC0.EFFDT)   ' ||
       'and   K0.FP_MATRIX_TYP = M0.FP_MATRIX_TYP
        and   K0.EFF_STATUS    = ''A''
        and   K0.FP_MATRIX_CD  = M0.FP_MATRIX_CD
        and   K0.FP_SCALE_CD   = M0.FP_SCALE_CD
        and   K0.SETID         = CC0.FP_SETID_RANK
        and   K0.FP_RANK_CD    = CC0.FP_RANK_CD
        and   K0.EFFDT         =  ' ||
             '(select max(KK0.EFFDT) from PS_FPMRANK_TBL KK0
        where KK0.FP_MATRIX_TYP = M0.FP_MATRIX_TYP
        and   KK0.FP_MATRIX_CD  = M0.FP_MATRIX_CD
        and   KK0.FP_SCALE_CD   = M0.FP_SCALE_CD
        and   KK0.SETID         = CC0.FP_SETID_RANK
        and   KK0.FP_RANK_CD    = CC0.FP_RANK_CD
        and   KK0.EFFDT    <= CC0.EFFDT) ' ||
       'and   CC0.FP_UPDT_PR_DT = ''N''                     ! Promotion date change = 'N'
        and   CC0.FP_CLD_INST   = ''N''                     ! Instance not Terminated
        and   CC0.FP_TRAINEE    = ''N'' ' ||                ! Is not a rank trainee
       'and   S0.EMPLID        = CC0.EMPLID
        and   S0.EMPL_RCD     = CC0.EMPL_RCD
        and   S0.EFFDT         =
             (select max(EFFDT) from PS_FPAEESTATUS
               where  EMPLID    = CC0.EMPLID
               and    EMPL_RCD = CC0.EMPL_RCD
               and    EFFDT    <= CC0.EFFDT)   ' ||
       !'and   T0.FP_STATUSEE_CD = S0.FP_STATUSEE_CD
       ! and   T0.FP_TRNE_SVT_CD != ''S''                   ! Is not a trainee
       ! and   T0.EFF_STATUS     = ''A''
       ! and   T0.EFFDT          =
       !      (select max(EFFDT) from PS_FPMSTATUSEE_TBL
       !         where  FP_STATUSEE_CD  = S0.FP_STATUSEE_CD
       !         and    EFFDT          <= S0.EFFDT) ' ||
       'and  M0.EFFDT          =   E0.EFFDT                 ! Grid effdt
        and  CC0.FP_INST_STAT  =   ''R'' '  ||              ! Real
       'and  CC0.FP_SANCTION   =   ''N''                    ! Sanctions excluded
        and  CC0.FP_DOWN_GRA   =   ''N'' '                  ! Excluded when demote


if $Emplid  != ''
        let $select-where =   $select-where ||
       ' and   CC0.EMPLID  = ''' || $Emplid  || ''''
end-if

! Fetch the empl_rcd
!-------------------
if $Empl_rcd != ''
        let $select-where =   $select-where ||
        ' and   CC0.EMPL_RCD  = ' || $Empl_rcd
end-if


! RETRO career instance prior to the end of retractivity date
!------------------------------------------------------------
#IFDEF RETRO
    move #empl_rcd to $empl_rcd
    let $select-where =   $select-where ||
            ' and CC0.EMPL_RCD  = ' || $Empl_rcd
    let $select-where =   $select-where ||
            ' and CC0.EFFDT <= {DATEIN-PREFIX}''' || $date-fin-retro  || ''''
    let $select-where =   $select-where || '{DYN-DateIn-Suffix}'
#ENDIF

#IFDEF DEBUGi
    display $select-where
#ENDIF

let $sql-statement = 'FPA005.SQC,Select,FPA005-Main'
BEGIN-SELECT On-Error=SQL-Error

CC0.EMPLID              &CC0.Emplid
CC0.EMPL_RCD            &CC0.Empl_rcd
CC0.FP_SETID_RANK       &CC0.Setid
CC0.FP_RANK_CD          &CC0.Rank
CC0.FP_STEP_CD          &CC0.Step
{DATEOUT-PREFIX}CC0.EFFDT{DATEOUT-SUFFIX} &CC0.StepBeg_dt
CC0.EFFSEQ              &CC0.Sequence
CC0.FP_SENKEPT_DY       &CC0.SENKEPT_DY
CC0.FP_SENKEPT_MN       &CC0.SENKEPT_MN
CC0.FP_SENKEPT_YR       &CC0.SENKEPT_YR

        ! Variables Init
        !-----------------
        let $Emplid =       rtrim(&CC0.Emplid,' ')
        let #Empl_rcd =     &CC0.Empl_rcd
        let #Sequence =     &CC0.Sequence
        Do Convert-To-DTU-Date(&CC0.StepBeg_dt,$StepBeg_dt)
        let $StepBeg2_dt =  &CC0.StepBeg_dt
        let $Setid =        rtrim(&CC0.Setid,' ')
        let $Rank =         rtrim(&CC0.Rank,' ')
        let $step =         rtrim(&CC0.STEP,' ')

        #IFDEF DEBUGi
            display  'no agent : '      noline
            display  $Emplid
            display  'echelon : '       noline
            display  $Step
            display  'debut echelon : ' noline
            display  $StepBeg_dt
        #ENDIF

        print $Emplid     (+1,1,9)
        print #Empl_rcd   (0,+3,14)
        print $Rank       (0,+3,5)
        print $step       (0,+3,3)
        print $StepBeg_dt (0,+2,10)
        print #Sequence   (0,+3,3)

        ! Length for step access and legal length
        !----------------------------------------
        do Get-Dur-Step ($StepBeg2_dt,$Setid,$Rank,$Step,#AccesAn,#AccesMn,#AccesDy,
                         #LegalAn,#LegalMn,#LegalDy)

        #IFDEF DEBUGi
            display 'Legal length DD/MM/YY :'
            display #LegalDy
            display #LegalMn
            display #LegalAn
        #ENDIF

        print #LegalAn    (0,+6,3)
        print '/'         (0,,1)
        print #LegalMn    (0,,3)
        print '/'         (0,,1)
        print #LegalDy    (0,,3)

        ! Step legal average length - String conversion
        !----------------------------------------------
        do Change-Char (#LegalAn, #LegalMn, #LegalDy, $Legal-Step)

        #IFDEF DEBUGi
            Display 'Legal Length Y/M/D : ' noline
            Display $Legal-Step
        #ENDIF

        Let #SENKEPT_DY = &CC0.SENKEPT_DY                   !Retained Seniority
        Let #SENKEPT_MN = &CC0.SENKEPT_MN
        Let #SENKEPT_YR = &CC0.SENKEPT_YR

        #IFDEF DEBUGi
            display  'Retained Seniority DD/MM/YY : '
            display  #SENKEPT_DY
            display  #SENKEPT_MN
            display  #SENKEPT_YR
        #ENDIF

        print #SENKEPT_YR (0,+6,3)
        print '/'         (0,,1)
        print #SENKEPT_MN (0,,3)
        print '/'         (0,,1)
        print #SENKEPT_DY (0,,3)

        ! Retained Seniority - String conversion
        !---------------------------------------
        do Change-Char (#SENKEPT_YR, #SENKEPT_MN, #SENKEPT_DY, $Anc-Con)

        #IFDEF DEBUGi
            Display 'Retained Length Y/M/D: ' noline
            Display $Anc-Con                                    !Retained Seniority
        #ENDIF

        !----------------------------------------------------------------------------------
        ! Retained Seniority < Legal Seniority
        !----------------------------------------------------------------------------------
        if $Anc-Con < $Legal-Step

            !------------------------------------------------------------------------------
            ! Fetch the previous step data
            !------------------------------------------------------------------------------
            do Get-PrStp-Data

            !------------------------------------------------------------------------------
            ! If previous step is terminated : fetch bonus
            !------------------------------------------------------------------------------
            if $Cld-Step-Pre != 'N'

                #IFDEF DEBUGi
                    display '************ bonus fetching *************'
                #ENDIF

                ! 'Q' bonus
                !-----------
                do Get-Bonif ($Emplid,#Empl_rcd,$StepBeg2_dt,$Rank,$Step,
                              #Bonus-An,#Bonus-Mn,#Bonus-Dy)

                #IFDEF DEBUGi
                    display '$Emplid : '        noline
                    display $Emplid
                    display '#Empl_rcd : '      noline
                    display #Empl_rcd
                    display '$StepBeg_dt : '    noline
                    display $StepBeg_dt
                    display '$Rank : '          noline
                    display $Rank
                    display '$Step : '          noline
                    display $Step
                    display '#Bonus-An : '      noline
                    display #Bonus-An
                    display '#Bonus-Mn : '      noline
                    display #Bonus-Mn
                #ENDIF

            !------------------------------------------------------------------------------
            ! If previous step is not terminated
            !------------------------------------------------------------------------------
            else

                let #Bonus-An = 0
                let #Bonus-Mn = 0
                let #Bonus-Dy = 0

            end-if

            !-------------------------------------------------------------------------------
            ! Reinit of variables for each employee
            !-------------------------------------------------------------------------------
            do Va-Reinit

            !-------------------------------------------------------------------------------
            ! Fetch the last civil service position links to the previous step
            !-------------------------------------------------------------------------------
            do Search-First-Pos-Stat

            !-------------------------------------------------------------------------------
            ! Fetch the next civil service position
            !-------------------------------------------------------------------------------
            if $Promotion = 'N'

                do Search-Pos-Stat

            end-if

            if $Promotion = 'N'

                let #Coeff = 100

                #IFDEF DEBUGi
                    Display '$Posit-End : ' noline
                    Display $Posit-End
                #ENDIF

                if $Posit-End != ''

                    IF #i = 0

                        Do dtu-add-days ($Posit-End,1,$Calc-Beg-dt) !Begining in the position
                        let #Anc-Dy-Last = #Anc-Dy                  !Seniority in the previous position
                        let #Anc-Mn-Last = #Anc-Mn
                        let #Anc-Yr-Last = #Anc-Yr

                    end-if

                    let $Auto-Prom = 'Y'                            !Tenure is authorized

                    !--------------------------------------------------------------------------
                    ! Calcul of the foreseen promotion date
                    !--------------------------------------------------------------------------
                    do Calc-Promotion

                    print $Prom-dt    (0,+3,19)                     !Promotion date writing

                else

                    do Get_Field_Information($ReportID, 'ERROR1', $ERROR1_LBL, #DW)

                    #IFDEF DEBUGI
                        display $ERROR1_LBL                         !'Error : update civil service positions'
                    #ENDIF

                    print $ERROR1_LBL    (+2,1,55)

                end-if

            end-if

        else                                                        ! Retained Seniority > Legal Seniority

            do Get_Field_Information($ReportID, 'ERROR2', $ERROR2_LBL, #DW)

            #IFDEF DEBUGI
                display $ERROR2_LBL                                 !'Error : seniority kept > legal seniority'
            #ENDIF

            print $ERROR2_LBL    (+2,1,47)

        end-if

from  PS_FPMSALSTEP_TBL E0, PS_FPMSALMATRX_TBL M0, PS_FPMRANK_TBL K0,
      PS_FPAEECAREER  CC0, PS_FPAEESTATUS S0, PS_FPMSTATUSEE_TBL T0
      ,PS_FPFAST_PERS_VW2 SCRTY                  !SQR security

where [$select-where]
      and CC0.EMPLID = SCRTY.EMPLID             !
  and CC0.EMPL_RCD = SCRTY.EMPL_RCD             !SQR security
      [$SecurityClause]                         !

order by CC0.EMPLID, CC0.EMPL_RCD, CC0.EFFDT, CC0.EFFSEQ

END-SELECT

END-PROCEDURE  FPA005-Main



!***************************************************************
!
!       Get-PrStp-Data :
!       Select of Previous Step data :
!               Grade, Body
!               Seniority Grade and Seniority Body
!               Seniority to be Carried Over
!
!***************************************************************

BEGIN-PROCEDURE Get-PrStp-Data

#IFDEF DEBUGI
    Display 'Get-PrStp-Data debut'
#ENDIF

! Select of Grade and Body from Previous Step
! Get back the Seniority to be Carried Over
!-----------------------------------------------------

let $sql-statement = 'FPA005.SQC, Select, Get-PrStp-Data'
BEGIN-SELECT On-Error=SQL-Error

! Select step terminated code from previous step
!---------------------------------------------------------
C1.FP_CLD_STEP           &Cld-Step-Pre

         Let $Cld-Step-Pre = rtrim(&Cld-Step-Pre,' ')

from    PS_FPAEECAREER C1
        ,PS_FPFAST_PERS_VW2 SCRTY                  !SQR security

Where   C1.EMPLID =         $Emplid
and     C1.EMPL_RCD =       #Empl_rcd
and     C1.FP_INST_STAT =   'R'
and     C1.EFFDT =
                (Select MAX(CC1.EFFDT) from PS_FPAEECAREER CC1
                where CC1.EMPLID =      $Emplid
                and CC1.EMPL_RCD =      #Empl_rcd
                and CC1.FP_INST_STAT =  'R'
                and CC1.EFFDT <         {DATEIN-PREFIX}$StepBeg2_dt{DATEIN-SUFFIX})
and     C1.EFFSEQ =
                (Select MAX(CCC1.EFFSEQ) from PS_FPAEECAREER CCC1
                where CCC1.EMPLID =     $Emplid
                and CCC1.EMPL_RCD =     #Empl_rcd
                and CCC1.FP_INST_STAT = 'R'
                and CCC1.EFFDT =        C1.EFFDT )

and     C1.EMPLID = SCRTY.EMPLID                !
and     C1.EMPL_RCD = SCRTY.EMPL_RCD            !SQR security
        [$SecurityClause]                       !

END-SELECT

END-PROCEDURE Get-PrStp-Data



!***************************************************************
!
!
!       Va-Reinit
!       Initializing variables for each agent
!
!
!***************************************************************

BEGIN-PROCEDURE Va-Reinit

        ! Calendar or Thirtieth for the end of the Civil Service Position
        !-------------------------------------------------------------------
        IF $Cal-Thirtieth ='T'  !Calendar
                let #Days-Number=30
        else                    !Thirtieth
                Do Days-Number($Posit-End,#Days-Number )
        end-if


        let #Anc-Dy = #Bonus-Dy+#SENKEPT_DY     !Seniority = bonus + Seniority to be Carried Over
        let #Anc-Mn = #Bonus-Mn+#SENKEPT_MN
        let #Anc-Yr = #Bonus-An+#SENKEPT_YR

        let #Anc-Dy-Last = 0                    !Previous Seniority
        let #Anc-Mn-Last = 0
        let #Anc-Yr-Last = 0
        let $Promotion = 'N'                    !Advancement done Flag

        Let #i = 0                              !Civil Service Position 100% Activity indicator
        Let #Days-Num-Calc = 0
        Let $Posit-End = ''

        let #Compl-Jr = 0
        let #Compl-Mn = 0
        let #Compl-An = 0

END-PROCEDURE  Va-Reinit



!***************************************************************
!
!       Search-First-Pos-Stat
!       Select last Civil Service Position from previous step
!       if active after the current step
!
!***************************************************************
BEGIN-PROCEDURE Search-First-Pos-Stat

#IFDEF DEBUGI
    display 'Search-First-Pos-Stat'
#ENDIF

let $sql-statement = 'FPA005.SQC,Select,Search-First-Pos-Stat'
BEGIN-SELECT On-Error=SQL-Error

{DATEOUT-PREFIX}L0.EFFDT{DATEOUT-SUFFIX}        &L0.Posit-Beg1
{DATEOUT-PREFIX}L0.FP_FOREND_DT{DATEOUT-SUFFIX} &L0.ForEnd-dt1
{DATEOUT-PREFIX}L0.FP_END_DT{DATEOUT-SUFFIX}    &L0.End-dt1
G0.FP_PROM_STEP                                 &G0.Auto-Prom1
G0.FP_CAREFRZPCT                                &G0.Coeff1

 !Start position = Start step
 !----------------------------------
        ! Variables
        !-------------------------
        Let $Posit-Beg = $StepBeg_dt
        do Convert-To-DTU-Date(&L0.ForEnd-dt1,$ForEnd-dt)
        do Convert-To-DTU-Date(&L0.End-dt1,$End-dt)
        let $Auto-Prom = rtrim(&G0.Auto-Prom1,' ')
        let #Coeff = &G0.Coeff1

        #IFDEF DEBUGi
            Display '&L0.Posit-Beg1 :'  noline
            Display &L0.Posit-Beg1
            Display '&L0.ForEnd-dt1 :'  noline
            Display &L0.ForEnd-dt1
            Display '&L0.End-dt1 :'     noline
            Display &L0.End-dt1
            Display '&G0.Auto-Prom1 :'  noline
            Display &G0.Auto-Prom1
            Display '&G0.Coeff1 :'      noline
            Display &G0.Coeff1
        #ENDIF

        IF #Coeff = 100
            Let #i = #i + 1

            IF #i = 1
                Let $Calc-Beg-dt = $Posit-Beg
            end-if

        Else
            Let #i = 0
            Let $Calc-Beg-dt = $Posit-Beg
        end-if

        !End Civil Servant Position Date calculation
        !----------------------------------------------
        do Calc-Posit-End ($Posit-Beg,$End-dt,$ForEnd-dt,$Posit-End)

        #IFDEF DEBUGI
            Display 'Calc-Beg-dt1 :' noline
            Display $Calc-Beg-dt
        #ENDIF

 !If end position > start step
 !Seniority calculation
 !---------------------------------
        if $Posit-End > $StepBeg_dt
            do Calc-Anc
        else
            if $End-dt = ''

                Let $Calc-Beg-dt = $Posit-Beg

                #IFDEF DEBUGI
                    Display 'Calc-Beg-dt2 :' noline
                    Display $Calc-Beg-dt
                #ENDIF

                let $Auto-Prom = 'Y'    !Promotion Authorized
                do Calc-Promotion       !Expected Promotion date calculation
            end-if
        end-if

from  PS_FPAEELEGALSTAT L0, PS_FPMLEGALSTA_TBL G0
      ,PS_FPFAST_PERS_VW2 SCRTY                    !SQR security

where L0.EMPLID = $Emplid
and   L0.EMPL_RCD = #Empl_rcd

! EFFDT can be the same than StepBeg2_dt
!----------------------------------------
and   L0.EFFDT =
        (select max(EFFDT)
         from  PS_FPAEELEGALSTAT
         where EMPLID    = $Emplid
         and   EMPL_RCD = #Empl_rcd
         and   EFFDT     <= {DATEIN-PREFIX}$StepBeg2_dt{DATEIN-SUFFIX})
and   L0.FP_LEGALSTAT_CD  = G0.FP_LEGALSTAT_CD
and   G0.EFF_STATUS       = 'A'
and   L0.FP_INST_STAT     = 'R'                     !Real
and   G0.EFFDT =
        (select max(EFFDT)
         from  PS_FPMLEGALSTA_TBL
         where FP_LEGALSTAT_CD = L0.FP_LEGALSTAT_CD
         and   EFFDT           <= L0.EFFDT)

and     L0.EMPLID = SCRTY.EMPLID                            !
and     L0.EMPL_RCD = SCRTY.EMPL_RCD                        !SQR security
        [$SecurityClause]                                   !

END-SELECT

#IFDEF DEBUGI
    display 'END-PROCEDURE Search-First-Pos-Stat'
#ENDIF

END-PROCEDURE  Search-First-Pos-Stat



!***************************************************************
!
!       Search-Pos-Stat
!
!       Select all Civil Service Position from current step
!
!***************************************************************
BEGIN-PROCEDURE Search-Pos-Stat

#IFDEF DEBUGI
    display 'Search-Pos-Stat'
#ENDIF

let $sql-statement = 'FPA005.SQC,Select,Search-Pos-Stat'
BEGIN-SELECT On-Error=SQL-Error

{DATEOUT-PREFIX}L00.EFFDT{DATEOUT-SUFFIX}           &L00.Posit-Beg2
{DATEOUT-PREFIX}L00.FP_FOREND_DT{DATEOUT-SUFFIX}    &L00.ForEnd-dt2
{DATEOUT-PREFIX}L00.FP_END_DT{DATEOUT-SUFFIX}       &L00.End-dt2
G00.FP_PROM_STEP                                    &G00.Auto-Prom2
G00.FP_CAREFRZPCT                                   &G00.Coeff2

    if $Promotion = 'N'

        do Convert-To-DTU-Date(&L00.Posit-Beg2,$Posit-Beg)
        do Convert-To-DTU-Date(&L00.ForEnd-dt2,$ForEnd-dt)
        do Convert-To-DTU-Date(&L00.End-dt2,$End-dt)
        let $Auto-Prom = rtrim(&G00.Auto-Prom2,' ')

        #IFDEF DEBUGI
            display '$Auto-Prom : ' noline
            display $Auto-Prom
        #ENDIF

        let #Coeff = &G00.Coeff2

        IF #Coeff = 100
                Let #i = #i + 1
                IF #i = 1
                        Let $Calc-Beg-dt = $Posit-Beg
                end-if
        Else
                Let #i = 0
                Let $Calc-Beg-dt = $Posit-Beg
        end-if

        #IFDEF DEBUGi
            Display 'Calc-Beg-dt3 :' noline
            Display $Calc-Beg-dt
        #ENDIF

        !End Civil Servant Position Date calculation
        !Display 'Calcul Posit end2'
        !-------------------------------------------
        do Calc-Posit-End ($Posit-Beg,$End-dt,$ForEnd-dt,$Posit-End)

        #IFDEF DEBUGI
            Display $Posit-End
        #ENDIF

        do Calc-Anc             !Seniority calculation

   end-if

from    PS_FPAEELEGALSTAT L00, PS_FPMLEGALSTA_TBL G00
        ,PS_FPFAST_PERS_VW2 SCRTY                      !SQR security

where L00.EMPLID = $Emplid
and   L00.EMPL_RCD = #Empl_rcd

!EFFDT must be strictly higher than StepBeg2_dt
!---------------------------------------------------
and   L00.EFFDT > {DATEIN-PREFIX}$StepBeg2_dt{DATEIN-SUFFIX}
and   L00.FP_LEGALSTAT_CD  = G00.FP_LEGALSTAT_CD
and   G00.EFF_STATUS   = 'A'
and   L00.FP_INST_STAT = 'R'                        !Instance status : actual
and   G00.EFFDT =
        (select max(EFFDT)
         from  PS_FPMLEGALSTA_TBL
         where FP_LEGALSTAT_CD = L00.FP_LEGALSTAT_CD
         and   EFFDT <= L00.EFFDT)
and   L00.EMPLID = SCRTY.EMPLID                         !
and  L00.EMPL_RCD = SCRTY.EMPL_RCD                      !SQR security
      [$SecurityClause]                                 !

order by L00.EFFDT

END-SELECT

#IFDEF DEBUGI
    display 'END-PROCEDURE Search-Pos-Stat'
#ENDIF

END-PROCEDURE Search-Pos-Stat



!***************************************************************
!
!    Calc-Anc : For every Civil Servant position :
!               * Civil Servant Position lenght calculation
!               * Total Period suspension calculation
!
!***************************************************************
BEGIN-PROCEDURE Calc-Anc

#IFDEF DEBUGi
    display 'Posit-Beg : '  noline
    display $Posit-Beg
    display 'Posit-End :'   noline
    display $Posit-End
    display 'Coeff : '      noline
    display #Coeff
#ENDIF

! Calendar or Thirtieth for the end of the Civil Service Position
!-----------------------------------------------------------------
IF $Cal-Thirtieth ='T'  !Thirtieth
        let #Days-Number=30
else                    !Calendar
        Do Days-Number($Posit-End,#Days-Number )
end-if


!Civil Servant Position lenght calculation
!------------------------------------------
do FP-Calc-Dur($Cal-Thirtieth,$Posit-Beg,$Posit-End,#A,#M,#J)

#IFDEF DEBUGi
    display 'diff entre debut et fin en A/M/J'
    display #A
    display #M
    display #J

    Display '#i= ' noline
    Display #i
#ENDIF

!Seniority during the previous position
!---------------------------------------
IF #i = 0 or #i = 1

        let #Anc-Dy-Last = #Anc-Dy
        let #Anc-Mn-Last = #Anc-Mn
        let #Anc-Yr-Last = #Anc-Yr

end-if

IF #i = 0
  Let #Days-Num-Calc = #Days-Number
end-if
IF #i = 1 and #Days-Num-Calc = 0
  Let #Days-Num-Calc = #Days-Number
end-if

#IFDEF DEBUGi
    Display 'Previous seniority A/M/J'
    Display #Anc-Yr-Last
    Display #Anc-Mn-Last
    Display #Anc-Dy-Last
    Display '#Days-Num-Calc : ' noline
    Display #Days-Num-Calc
#ENDIF

! Variables for Advancement % Career calculation
!-------------------------------------------------
let #Anc-Dy-calc = 0
let #Anc-Mn-calc = 0
let #Anc-Yr-calc = 0


! Seniority Total with % Career calculation
!-------------------------------------------------------------------
let #Anc-Dy-calc = #Anc-Dy-calc + #J*(#Coeff/100)
let #Anc-Mn-calc = #Anc-Mn-calc + #M*(#Coeff/100)
let #Anc-Yr-calc = #Anc-Yr-calc + #A*(#Coeff/100)


!Result updating with %
!------------------------
let #AA = round(#Anc-Yr-calc,0) - #Anc-Yr-calc
let #Anc-Yr-calc = #Anc-Yr-calc - #AA
let #Anc-Mn-calc = #Anc-Mn-calc + (#AA * 12)

let #AM = round(#Anc-Mn-calc,0) - #Anc-Mn-calc
let #Anc-Mn-calc = #Anc-Mn-calc - #AM
!let #Anc-Dy-calc = #Anc-Dy-calc + (#AM * #Days-Num-Calc)
let #Anc-Dy-calc = #Anc-Dy-calc + (#AM * 30)

let #Anc-Dy-calc = round(#Anc-Dy-calc,0)


While #Anc-Dy-calc >= #Days-Num-Calc
        let #Anc-Mn-calc = #Anc-Mn-calc + 1
        let #Anc-Dy-calc = #Anc-Dy-calc - #Days-Num-Calc
End-While

While #Anc-Mn-calc >= 12
        let #Anc-Yr-calc = #Anc-Yr-calc + 1
        let #Anc-Mn-calc = #Anc-Mn-calc - 12
End-While


let #Anc-Dy = #Anc-Dy + #Anc-Dy-calc
let #Anc-Mn = #Anc-Mn + #Anc-Mn-calc
let #Anc-Yr = #Anc-Yr + #Anc-Yr-calc


While #Anc-Dy >= #Days-Number
        let #Anc-Mn = #Anc-Mn + 1
        let #Anc-Dy = #Anc-Dy - #Days-Number
End-While

While #Anc-Mn >= 12
        let #Anc-Yr = #Anc-Yr + 1
        let #Anc-Mn = #Anc-Mn - 12
End-While

do Change-Char (#Anc-Yr  , #Anc-Mn , #Anc-Dy , $Anc-Ech )


#IFDEF DEBUGI
    display '#Anc-Yr : '    noline
    display #Anc-Yr
    display '#Anc-Mn : '    noline
    display #Anc-Mn
    display '#Anc-Dy : '    noline
    display #Anc-Dy
    display 'Anc-Ech : '    noline
    display $Anc-Ech
#ENDIF

! For every Civil Servant Position
!
! If Seniority Total (with bonus) >= Legal lenght
! then Expected promotion date calculation
!
!-----------------------------------------------------------------------
If $Anc-Ech  >= $Legal-Step
        do Calc-Promotion
End-if


#IFDEF DEBUGI
    display 'END-PROCEDURE Calc-Anc'
#ENDIF

END-PROCEDURE Calc-Anc



!***************************************************************
!
! Calc-Promotion : Expected promotion date calculation
!
!***************************************************************

BEGIN-PROCEDURE Calc-Promotion

let $Promotion ='Y'

#IFDEF DEBUGI
    display 'Calc-Promotion'
    display 'Auto-Prom : ' noline
    display $Auto-Prom
#ENDIF

if $Auto-Prom = 'Y'                                             ! If authorised promotion

        #IFDEF DEBUGI
            Display 'Anciennete A/M/J'
            Display #Anc-Yr-Last
            Display #Anc-Mn-Last
            Display #Anc-Dy-Last

            Display '#Days-Num-Calc: ' noline
            Display #Days-Num-Calc
        #ENDIF

        ! 'To do' calculation
        ! 'to do' = Legal length - Seniority from previous position
        !-----------------------------------------------------------
        let #RAFDy = #LegalDy - #Anc-Dy-Last
        let #RAFMn = #LegalMn - #Anc-Mn-Last
        let #RAFAn = #LegalAn - #Anc-Yr-Last

        if #RAFDy < 0
                let #RAFDy = 30 + #RAFDy
                !let #RAFDy = #Days-Num-Calc + #RAFDy
                let #RAFMn = #RAFMn - 1
        end-if

        if #RAFMn < 0
                let #RAFMn = 12 + #RAFMn
                let #RAFAn   = #RAFAn - 1
        end-if

        #IFDEF DEBUGi
            display 'RAF-An : ' noline
            display #RAFAn
            display 'RAF-Mn : ' noline
            display #RAFMn
            display 'RAF-Jr : ' noline
            display #RAFDy

            display '#Coeff : ' noline
            display #Coeff
        #ENDIF

        ! Seniority Total with % Career calculation
        !--------------------------------------------------

        let #Compl-Jr = #Compl-Jr + #RAFDy*(100/#Coeff)
        let #Compl-Mn = #Compl-Mn + #RAFMn*(100/#Coeff)
        let #Compl-An = #Compl-An + #RAFAn*(100/#Coeff)

        #IFDEF DEBUGi
            display '#Compl-Jr : ' noline
            display #Compl-Jr
            display '#Compl-Mn : ' noline
            display #Compl-Mn
            display '#Compl-An : ' noline
            display #Compl-An
        #ENDIF

        !% Result upgrading
        !-------------------
        let #AAA = round(#Compl-An,0) - #Compl-An
        let #Compl-An = #Compl-An - #AAA
        let #Compl-Mn = #Compl-Mn + (#AAA * 12)

        let #AMM = round(#Compl-Mn,0) - #Compl-Mn
        let #Compl-Mn = #Compl-Mn - #AMM
        let #Compl-Jr = #Compl-Jr + (#AMM * 30)

        let #Compl-Jr = round(#Compl-Jr,0)


        While #Compl-Jr >= #Days-Number
                let #Compl-Mn = #Compl-Mn + 1
                let #Compl-Jr = #Compl-Jr - #Days-Number
        End-While

        While #Compl-Mn >= 12
                let #Compl-An = #Compl-An + 1
                let #Compl-Mn = #Compl-Mn - 12
        End-While

        #IFDEF DEBUGi
            display '#Compl-An: ' noline
            display #Compl-An
            display '#Compl-Mn: ' noline
            display #Compl-Mn
            display '#Compl-Jr: ' noline
            display #Compl-Jr
        #ENDIF


        IF $Cal-Thirtieth ='T'  !Thirtieth

            let #Days-Number=30

            do Dtu-Parse-Date($Calc-Beg-dt,#Calc-Beg-An,#Calc-Beg-Mn,#Calc-Beg-Jr)

            let #Calc-Beg-An = #Calc-Beg-An + #Compl-An
            let #Calc-Beg-Mn = #Calc-Beg-Mn + #Compl-Mn
            let #Calc-Beg-Jr = #Calc-Beg-Jr + #Compl-Jr

            While #Calc-Beg-Jr > #Days-Number
                    let #Calc-Beg-Mn = #Calc-Beg-Mn + 1
                    let #Calc-Beg-Jr = #Calc-Beg-Jr - #Days-Number
            End-While

            While #Calc-Beg-Mn > 12
                    let #Calc-Beg-An = #Calc-Beg-An + 1
                    let #Calc-Beg-Mn = #Calc-Beg-Mn - 12
            End-While


            do Dtu-format-Date (#Calc-Beg-An ,#Calc-Beg-Mn ,#Calc-Beg-Jr,$Prom-dt)

            If #Calc-Beg-Mn = 2 and (#Calc-Beg-Jr = 29 or #Calc-Beg-Jr = 30)
                     do dtu-month-end($Prom-dt,$Prom-dt)
            end-if

        else                    !Calendar

            do Add-Date($Calc-Beg-dt,#Compl-An,#Compl-Mn,#Compl-Jr,$Prom-dt)

        end-if

        #IFDEF DEBUGI
            Display '$Calc-Beg-dt : '   noline
            Display $Calc-Beg-dt
            display '$Prom-dt : '       noline
            display $Prom-dt
        #ENDIF

        ! Select day field from $Prom-dt
        !---------------------------------------
        do Dtu-Parse-Date ($Prom-dt,#Prom_Yr,#Prom_Mn,#Prom_Dy)

        #IFDEF DEBUGI
            display '#Prom_Dy : ' noline
            display #Prom_Dy
        #ENDIF

        ! $Prom_Dy != First month day
        !-------------------------------------
        if #Prom_Dy != 1

            do Trans-Termdt ($Termdt-cd, $Prom-dt, $Prom-dt-Tra)
            Let $Prom-dt = $Prom-dt-Tra

        end-if

        do Fpa005-Updt-Career

                ! If no retro
                !--------------------------------------------------
                 #IFNDEF RETRO
                        do Insert-Fpaeeupdrow($Emplid,#Empl_rcd,$StepBeg2_dt,$AsOfToday)
                        #IFDEF DEBUGI
                            display 'Update of FPAEEUPDROW'
                        #ENDIF
                 #END-IF
else                                                            !If promotion is not authorised

!If promotion is not authorised for the current Civil Servant Position then
!the expected promotion date is at the end of the Position.
!If no position end, no expected promotion date
!-------------------------------------------------------------------------

        IF $Posit-End != '' or $ForEnd-dt != ''

            !Promotion at the end of the civil servant position
            !---------------------------------------------------
            do Add-Date($Posit-End,0,0,1, $Prom-dt )


            do Fpa005-Updt-Career
                ! If no retro updating FPAEEUPDROW table
                !----------------------------------------
                 #IFNDEF RETRO
                        do Insert-Fpaeeupdrow($Emplid,#Empl_rcd,$StepBeg2_dt,$AsOfToday)
                        #IFDEF DEBUGI
                            display 'Maj de la table FPAEEUPDROW'
                        #ENDIF
                 #END-IF
        end-if

end-if

print $Prom-dt    (0,+3,19)


#IFDEF DEBUGI
    Display '$Prom-dt: ' noline
    Display $Prom-dt
    display 'END-PROCEDURE Calc-Promotion'
#ENDIF

END-PROCEDURE Calc-Promotion



!***************************************************************
!
!
!   Fpa005-Updt-Career : Updating PS_FPAEECAREER table
!
!
!***************************************************************
BEGIN-PROCEDURE  Fpa005-Updt-Career

#IFDEF DEBUGI
    display 'Update of CAREER'
#ENDIF

do convert-from-DTU-Date($Prom-dt,$Prom-dt-nat)


#IFDEF DEBUGI
    display '$Prom-dt-nat : ' noline
    display $Prom-dt-nat
    display '$StepBeg2_dt : ' noline
    display $StepBeg2_dt
#ENDIF


let $sql-statement = 'FPA005.SQC,Fpa005-Updt-Career,Update,PS_FPAEECAREER'
BEGIN-SQL On-Error=SQL-Error

update  PS_FPAEECAREER
set
        FP_PROM_OK = 'N',
        FP_FOR_PROM_DT = {DATEIN-PREFIX}$Prom-dt-nat{DATEIN-SUFFIX},
        LAST_UPDATE_DATE = {DATEIN-PREFIX}$AsOfToday{DATEIN-SUFFIX}

where EMPLID = $Emplid
and   EMPL_RCD = #Empl_rcd
and   EFFDT = {DATEIN-PREFIX}$StepBeg2_dt{DATEIN-SUFFIX}
and   EFFSEQ = #Sequence

END-SQL

#IFDEF DEBUGI
    display 'END-PROCEDURE Fpa005-Updt-Career'
#ENDIF

END-PROCEDURE Fpa005-Updt-Career



! SQR using this SQC must have the following includes
! ***************************************************

!#include 'setenv.sqc'          ! Set environment
!#include 'curdttim.sqc'        ! Get-Current-DateTime procedure
!#include 'stdapi.sqc'          ! Routines to update run status
!#Include 'number.sqc'          ! Routines to format numbers
!#Include 'fptestdt.sqc'      ! Routines for date and time formatting (FPS)
!#include 'fpjob.sqc'           ! Insert-Fpaeeupdrow procedure (FPS)
!#Include 'fpparam.sqc'         ! Routines for  Parameters Tables (FPS)
!#include 'hrsecty.sqc'         ! Get SQR Security parameters
