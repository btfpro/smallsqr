!***********************************************************************
!  FGHR005:  Print Individual Pay Tables in Hourly, Biweekly,         *
!             Monthly, and Annual Formats                              *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      
!          $Date:  2006/07/19:11:50:59                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment

begin-setup
#include 'setupdb.sqc'
end-setup

!Edit Mask
#define salary_mask        999,999
#define others_mask        99,999.99

!Printer
#define Laser Postscript

!Point Size
#define SMALL           '8'     !Small
#define NORM            '10'    !Normal
#define BIG             '12'    !Large
#define NORM_LNSIZE     '10'    !Normal Line
#define BIG_LNSIZE      '20'    !Large Line

begin-report

  do Init-DateTime
  do Init-Number
  do Init-Report
  do Report
  do Reset
  do Stdapi-Term

end-report

begin-Setup

page-size 58 100

#ifdef SQLSERVER
  Ask dbname 'Database Name'
  Use {dbname}
#end-if

 declare Printer          !Declare printer characteristics.
    type=HPLASERJET       !Types are POSTSCRIPT, HPLASERJET.
    orientation=Landscape !Orientations are PORTRAIT or LANDSCAPE.
    top-margin= .4
    left-margin= .60      !
    font=5                !Font Number
    point-size=12
    char-size=7.2

end-Setup

!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from EEOGRP program ids
  do Init_Report_Translation($ReportID, $Language_Cd)

  do Get_Field_Information ('FGHR005','REPORT_TITLE',   $FGHR005-REPORTTITLE, #CW)
  do Get_Field_Information ('FGHR005','HEADER1',        $FGHR005-HEADER1,     #CW)
  do Get_Field_Information ('FGHR005','EFFECTIVE',      $FGHR005-EFFECTIVE,   #CW)
  do Get_Field_Information ('FGHR005','ANNUAL',         $FGHR005-ANNUAL,      #CW)
  do Get_Field_Information ('FGHR005','RATES',          $FGHR005-RATES,       #CW)
  do Get_Field_Information ('FGHR005','USDOLLARS',      $FGHR005-USDOLLARS,   #CW)
  do Get_Field_Information ('FGHR005','WITHIN',         $FGHR005-WITHIN,      #CW)
  do Get_Field_Information ('FGHR005','GRADE',          $FGHR005-GRADE,       #CW)
  do Get_Field_Information ('FGHR005','INCREASE',       $FGHR005-INCREASE,    #CW)
  do Get_Field_Information ('FGHR005','AMOUNTS',        $FGHR005-AMOUNTS,     #CW)

  do Get_Field_Information ('FGHR005','HOURLY',         $FGHR005-HOURLY,      #CW)
  do Get_Field_Information ('FGHR005','WEEKLY',         $FGHR005-WEEKLY,      #CW)
  do Get_Field_Information ('FGHR005','BIWEEKLY',       $FGHR005-BIWEEKLY,    #CW)
  do Get_Field_Information ('FGHR005','MONTHLY',        $FGHR005-MONTHLY,     #CW)
  do Get_Field_Information ('FGHR005','VARIES',         $FGHR005-VARIES,      #CW)

End-Procedure

begin-procedure Init-Report

  do Stdapi-Init

  let $ReportID = 'FGHR005'
  do Get-Report-Language
  let $ReportTitle = $FGHR005-REPORTTITLE
  display $ReportTitle

  if $prcs_process_instance = ''
    Do Ask-Pay-Table-Parms
  else
    Do Select-Parameters
  end-if

  do Get-Current-DateTime
  do Get-Values

end-procedure

begin-procedure Get-Values

  do Get-FGHR005-Parameters
end-procedure

begin-procedure Report

Do Get-Currency

if $gvthourlyrpt = 'Y'
  move $FGHR005-HOURLY to $Report-type
  Do Format-Page
  Do Get-Data
end-if

if $gvtbiweeklyrpt = 'Y'
  move $FGHR005-BIWEEKLY to $Report-type
  Do Format-Page
  Do Get-Data
end-if

if $gvtmonthlyrpt = 'Y'
  move $FGHR005-MONTHLY to $Report-type
  Do Format-Page
  Do Get-Data
end-if

if $gvtannualrpt = 'Y'
  move $FGHR005-ANNUAL to $Report-type
  Do Format-Page
  Do Get-Data
end-if


end-procedure

begin-procedure Get-Currency
begin-select
Z.EXCHNG_TO_CURRENCY
Y.DESCR
from PS_INSTALLATION Z, PS_CURRENCY_CD_TBL Y
where Y.CURRENCY_CD = Z.EXCHNG_TO_CURRENCY
and   Y.EFF_STATUS  = 'A'
and   Y.EFFDT       = (SELECT MAX(YY.EFFDT)
                       from PS_CURRENCY_CD_TBL YY
                       where YY.CURRENCY_CD = Y.CURRENCY_CD
                       and   YY.EFF_STATUS  = 'A'
                       and   YY.EFFDT      <= $effdt)
end-select
end-procedure


begin-procedure Format-Page

graphic (1,3,90) box 47 5
graphic (2,4,88) box 45 2
graphic (11,12,69) box 1 0 5

let $print-title = $FGHR005-HEADER1 ||$saladminplan ||$gvtpayplan
print $print-title (4,0) center
let $EffDate = $FGHR005-EFFECTIVE ||'01-01-1995'
print $EffDate   (+2,0) center
print $Report-type  (+2,45)

graphic () font 5  {norm}
if &z.exchng_to_currency = 'USD'
  let $Head1 =  $FGHR005-RATES ||' '||$FGHR005-USDOLLARS
  print $Head1  (+1,38)
else
  let $Head1 =  $FGHR005-RATES ||' '||rtrim(&y.descr,' ')
  print $Head1  (+1,0) center
end-if

if $Report-type = $FGHR005-ANNUAL
  print $FGHR005-WITHIN   (8,82)
  print $FGHR005-GRADE    (9,82)
  print $FGHR005-INCREASE (10,82)
  print $FGHR005-AMOUNTS  (11,82)
end-if

print '          1               2              3               4               5               6               7               8               9               10'  (11,12)

end-procedure

begin-procedure Get-Data

move 1 to #cnt-grades
move 1 to #cnt-steps

begin-select
A.GRADE
A.STEP
A.HOURLY_RT
A.GVT_BIWEEKLY_RT
A.MONTHLY_RT
A.ANNUAL_RT
B.MIN_RT_HOURLY
B.MAX_RT_HOURLY
B.GVT_MIN_RT_BIWK
B.GVT_MAX_RT_BIWK
B.MIN_RT_MONTHLY
B.MAX_RT_MONTHLY
B.MIN_RT_ANNUAL
B.MAX_RT_ANNUAL

  evaluate $Report-type
    when = $FGHR005-HOURLY
      move &a.hourly_rt to $prt-rate
      move &b.min_rt_hourly to #min-rate
      move &b.max_rt_hourly to #max-rate
      break
    when = $FGHR005-BIWEEKLY
      move &a.gvt_biweekly_rt to $prt-rate
      move &b.gvt_min_rt_biwk to #min-rate
      move &b.gvt_max_rt_biwk to #max-rate
      break
    when = $FGHR005-MONTHLY
      move &a.monthly_rt to $prt-rate
      move &b.min_rt_monthly to #min-rate
      move &b.max_rt_monthly to #max-rate
      break
    when = $FGHR005-ANNUAL
      move &a.annual_rt to $prt-rate
      move &b.min_rt_annual to #min-rate
      move &b.max_rt_annual to #max-rate
  end-evaluate


  if &a.grade <> $save-grade
    POSITION (+2,0)
    if $Report-type = 'ANNUAL'
      GRAPHIC () FONT 5  {SMALL}
      if &a.grade = '01' or &a.grade = '02'
        print $FGHR005-VARIES   (0,82)
      else
        let $prt-varies = round(((#max-rate-#min-rate) / 9),0)
        print $prt-varies (0,82) edit {salary_mask}
      end-if
    end-if
    GRAPHIC () FONT 5  {NORM}
    if #cnt-grades = 1
      let $prt-grade = $gvtpayplan||'-'||&a.grade
    else
      if length(&a.grade) < 2
        let $prt-grade = '      '||&a.grade
      else
        let $prt-grade = '     '||&a.grade
      end-if
    end-if
    print $prt-grade (0,7)
    move 1 to #cnt-steps
    add  1 to #cnt-grades
    move &a.grade to $save-grade
  end-if
  GRAPHIC () FONT 5  {SMALL}

  if $Report-type = $FGHR005-ANNUAL
    Do Print-Salary
  else
    Do Print-Others
  end-if
  add 1 to #cnt-steps

from PS_SAL_STEP_TBL A, PS_SAL_GRADE_TBL B
where B.SETID   = $gvtpayplan
and   B.SAL_ADMIN_PLAN = $saladminplan
and   B.EFFDT          = (SELECT MAX(BB.EFFDT)
                          from PS_SAL_GRADE_TBL BB
                          where BB.SETID    = B.SETID
                          and   BB.SAL_ADMIN_PLAN = B.SAL_ADMIN_PLAN
                          and   BB.GRADE          = B.GRADE
                          and   BB.EFFDT         <= $effdt)
and   A.SETID   = B.SETID
and   A.SAL_ADMIN_PLAN = B.SAL_ADMIN_PLAN
and   A.GRADE          = B.GRADE
and   A.EFFDT          = B.EFFDT
order by A.GRADE,A.STEP
end-select

NEW-PAGE
graphic () font 5  {big}

end-procedure


begin-procedure Print-Salary

  evaluate #cnt-steps
    when = 1
      print $prt-rate (0,14) edit {salary_mask}
    when = 2
      print $prt-rate (0,21) edit {salary_mask}
    when = 3
      print $prt-rate (0,27) edit {salary_mask}
    when = 4
      print $prt-rate (0,34) edit {salary_mask}
    when = 5
      print $prt-rate (0,41) edit {salary_mask}
    when = 6
      print $prt-rate (0,47) edit {salary_mask}
    when = 7
      print $prt-rate (0,54) edit {salary_mask}
    when = 8
      print $prt-rate (0,61) edit {salary_mask}
    when = 9
      print $prt-rate (0,68) edit {salary_mask}
    when = 10
      print $prt-rate (0,75) edit {salary_mask}
  end-evaluate
end-procedure

begin-procedure Print-Others

  evaluate #cnt-steps
    when = 1
      print $prt-rate (0,14) edit {others_mask}
    when = 2
      print $prt-rate (0,21) edit {others_mask}
    when = 3
      print $prt-rate (0,27) edit {others_mask}
    when = 4
      print $prt-rate (0,34) edit {others_mask}
    when = 5
      print $prt-rate (0,41) edit {others_mask}
    when = 6
      print $prt-rate (0,47) edit {others_mask}
    when = 7
      print $prt-rate (0,54) edit {others_mask}
    when = 8
      print $prt-rate (0,61) edit {others_mask}
    when = 9
      print $prt-rate (0,68) edit {others_mask}
    when = 10
      print $prt-rate (0,75) edit {others_mask}
  end-evaluate
end-procedure

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'number.sqc'    !Routines to format numbers
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'fgaskpti.sqc'  !Get Pay Table and Print Formats procedure
#Include 'fggetval.sqc'  !Get values mask routines
#Include 'fgrunctl.sqc'  !Get-Run-Control procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'reset.sqc'     !Reset printer

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
