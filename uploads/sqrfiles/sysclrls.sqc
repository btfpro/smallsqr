! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
! SYSCLRLS: PS Clear List Integrity Report                             *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************

!----------------------------------------------------------------------!
! Procedure: SYSCLRLS-Main                                             !
!----------------------------------------------------------------------!
begin-procedure SYSCLRLS-Main
    let $ErrorFound = 'N'
    let $AuditTitle = 'Clear List Audits'

       do SYSCLRLIST-ActvtyDel-ActvtyDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-AEApplDel-AEApplDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-ColorDel-ColorDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-FmtDel-FmtDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-HolidayDel-HolidayDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-ImpDel-ImpDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-MenuDel-MenuDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-PcmProgDel-PcmProgDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-PnlDel-PnlDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-PnlGrpDel-PnlGrpDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-PrcsRunDel-PrcsRunDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-ProjectDel-ProjectDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-QryDel-QryDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-RecDel-RecDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-RecurDel-RecurDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-StyleDel-StyleDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-ToolBarDel-ToolBarDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-TreeBraDel-TreeBranch-NOT-Mutually-Exclusive
       do SYSCLRLIST-TreeDel-TreeDefn-NOT-Mutually-Exclusive
       do SYSCLRLIST-TreeStrDel-TreeStrct-NOT-Mutually-Exclusive
       do SYSCLRLIST-XlatDel-Xlatdefn-NOT-Mutually-Exclusive

    if $ErrorFound = 'N'
        do PrintSummaryRecord
    end-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-ActvtyDel-ActvtyDefn-NOT-Mutually-Exclusive    !
!                                                                      !
! Descr:     System table audit against PSACTIVITYDEFN table:          !
!                                                                      !
!            SYSCLRLIST-1: Verify that the entries in PSACTIVITYDEL    !
!                          and PSACTIVITYDEFN are mutually exclusive.  !
!----------------------------------------------------------------------!


begin-procedure SYSCLRLIST-ActvtyDel-ActvtyDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-1) Entries in PSACTIVITYDEL and '
        || 'PSACTIVITYDEFN are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Activity Name'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'PSACTIVITYDEL Version'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PSACTIVITYDEFN Version'
    let #Column3len = lengthp($Column3Name)
        let $Column4Name = 'Ownerid'
    let #Column4len = lengthp($Column4Name)

    do RetrieveColumnLength('PSACTIVITYDEFN','ACTIVITYNAME',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSACTIVITYDEFN','VERSION',#Field2Len,$FieldType)
        do RetrieveColumnLength('PSACTIVITYDEFN','OBJECTOWNERID',#Field4Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field2len > #Column3len
        let #Column3len = #Field2len
    end-if

        if #Field4len > #Column4len
        let #Column4len = #Field4len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
        let #start4                      = (#Column3len + 4 + #Start3)
    let #numofhdr        = 4

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
        put $Column4Name #Start4 #Column4len into printarray(3)

#ifdef debugm
                move 'Y' to $DetailErrFound
        do PrintSectionHeadings
#end-if

begin-SELECT on-Error=Rpt-SQL-Error
A.ACTIVITYNAME          &Activityname_Del
A.VERSION               &ActivityVersion_Del
B.VERSION               &ActivityVersion_Defn
B.OBJECTOWNERID         &ObjectOwnerid_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Activityname_Del          (+1,#Start1)
   print &ActivityVersion_Del       (0, #Start2)
   print &ActivityVersion_Defn      (0, #Start3)
   print &ObjectOwnerid_Defn            (0, #Start4)

FROM PSACTIVITYDEL A, PSACTIVITYDEFN B
WHERE A.ACTIVITYNAME = B.ACTIVITYNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-AEApplDel-AEApplDefn-NOT-Mutually-Exclusive    !
!                                                                      !
! Descr:     System table audit against PSAEAPPLDEFN table:            !
!                                                                      !
!            SYSCLRLIST-2: Verify that the entries in PSAEAPPLDEL      !
!                          and PSAEAPPLDEFN are mutually exclusive.    !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-AEApplDel-AEApplDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-2) Entries in PSAEAPPLDEL and '
        || 'PSAEAPPLDEFN are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Application ID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'PSAEAPPLDEL Version'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PSAEAPPLDEFN Version'
    let #Column3len = lengthp($Column3Name)
        let $Column4Name = 'Ownerid'
    let #Column4len = lengthp($Column4Name)

    do RetrieveColumnLength('PSAEAPPLDEFN','AE_APPLID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSAEAPPLDEFN','VERSION',#Field2Len,$FieldType)
        do RetrieveColumnLength('PSAEAPPLDEFN','OBJECTOWNERID',#Field4Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field2len > #Column3len
        let #Column3len = #Field2len
    end-if

        if #Field4len > #Column4len
        let #Column4len = #Field4len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
        let #Start4          = (#Column3len + 4 + #Start3)
    let #numofhdr        = 4

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
        put $Column4Name #Start4 #Column4len into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.AE_APPLID             &AEApplID_Del
A.VERSION               &AEApplIDVersion_Del
B.VERSION               &AEApplIDVersion_Defn
B.OBJECTOWNERID         &AEApplID_ObjectOwnerid

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &AEApplID_Del              (+1,#Start1)
   print &AEApplIDVersion_Del       (0, #Start2)
   print &AEApplIDVersion_Defn      (0, #Start3)
   print &AEApplID_ObjectOwnerid    (0, #Start4)

FROM PSAEAPPLDEL A, PSAEAPPLDEFN B
WHERE A.AE_APPLID = B.AE_APPLID
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-ColorDel-ColorDefn-NOT-Mutually-Exclusive      !
!                                                                      !
! Descr:     System table audit against PSCOLORDEFN table:             !
!                                                                      !
!            SYSCLRLIST-5: Verify that the entries in PSCOLORDEL       !
!                          and PSCOLORDEFN are mutually exclusive.     !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-ColorDel-ColorDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-5) Entries in PSCOLORDEL and '
        || 'PSCOLORDEFN are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'OperID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Color Name'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PSCOLORDEL Version'
    let #Column3len = lengthp($Column3Name)
    let $Column4Name = 'PSCOLORDEFN Version'
    let #Column4len = lengthp($Column4Name)

    do RetrieveColumnLength('PSCOLORDEFN','OPRID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSCOLORDEFN','COLORNAME',#Field2Len,$FieldType)
    do RetrieveColumnLength('PSCOLORDEFN','VERSION',#Field3Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field3len > #Column3len
        let #Column3len = #Field3len
    end-if

    if #Field3len > #Column4len
        let #Column4len = #Field3len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #Start4          = (#Column3len + 4 + #Start3)
    let #numofhdr        = 4

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
    put $Column4Name #Start4 #Column4len into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID                   &ColorOprID_Del
A.COLORNAME               &ColorName_Del
A.VERSION                 &ColorVersion_Del
B.VERSION                 &ColorVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &ColorOprID_Del          (+1,#Start1)
   print &ColorName_Del           (0, #Start2)
   print &ColorVersion_Del        (0, #Start3)
   print &ColorVersion_Defn       (0, #Start4)

FROM PSCOLORDEL A, PSCOLORDEFN B
WHERE A.OPRID = B.OPRID
AND A.COLORNAME = B.COLORNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-FmtDel-FmtDefn-NOT-Mutually-Exclusive          !
!                                                                      !
! Descr:     System table audit against PSFMTDEFN table:               !
!                                                                      !
!            SYSCLRLIST-6: Verify that the entries in PSFMTDEL         !
!                          and PSFMTDEFN are mutually exclusive.       !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-FmtDel-FmtDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-6) Entries in PSFMTDEL and '
        || 'PSFMTDEFN are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Format Family'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'PSFMTDEL Version'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PSFMTDEFN Version'
    let #Column3len = lengthp($Column3Name)

    do RetrieveColumnLength('PSFMTDEFN','FORMATFAMILY',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSFMTDEFN','VERSION',#Field2Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field2len > #Column3len
        let #Column3len = #Field2len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #numofhdr        = 3

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.FORMATFAMILY          &FormatFamily_Del
A.VERSION               &FmtVersion_Del
B.VERSION               &FmtVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &FormatFamily_Del           (+1,#Start1)
   print &FmtVersion_Del             (0, #Start2)
   print &FmtVersion_Defn            (0, #Start3)

FROM PSFMTDEL A, PSFMTDEFN B
WHERE A.FORMATFAMILY = B.FORMATFAMILY
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-HolidayDel-HolidayDefn-NOT-Mutually-Exclusive  !
!                                                                      !
! Descr:     System table audit against PSHOLIDAYDEFN table:           !
!                                                                      !
!            SYSCLRLIST-7: Verify that the entries in PSHOLIDAYDEL     !
!                          and PSHOLIDAYDEFN are mutually exclusive.   !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-HolidayDel-HolidayDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-7) Entries in PSHOLIDAYDEL and '
        || 'PSHOLIDAYDEFN are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Holiday Name'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'PSHOLIDAYDEL Version'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PSHOLIDAYDEFN Version'
    let #Column3len = lengthp($Column3Name)

    do RetrieveColumnLength('PSHOLIDAYDEFN','HOLIDAYNAME',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSHOLIDAYDEFN','VERSION',#Field2Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field2len > #Column3len
        let #Column3len = #Field2len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #numofhdr        = 3

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.HOLIDAYNAME           &HolidayName_Del
A.VERSION               &HolidayVersion_Del
B.VERSION               &HolidayVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &HolidayName_Del           (+1,#Start1)
   print &HolidayVersion_Del        (0, #Start2)
   print &HolidayVersion_Defn       (0, #Start3)

FROM PSHOLIDAYDEL A, PSHOLIDAYDEFN B
WHERE A.HOLIDAYNAME = B.HOLIDAYNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-ImpDel-ImpDefn-NOT-Mutually-Exclusive          !
!                                                                      !
! Descr:     System table audit against PSIMPDEFN table:               !
!                                                                      !
!            SYSCLRLIST-9: Verify that the entries in PSIMPDEL         !
!                          and PSIMPDEFN are mutually exclusive.       !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-ImpDel-ImpDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-9) Entries in PSIMPDEL and '
        || 'PSIMPDEFN are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Import Name'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'PSIMPDEL Version'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PSIMPDEFN Version'
    let #Column3len = lengthp($Column3Name)

    do RetrieveColumnLength('PSIMPDEFN','IMPNAME',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSIMPDEFN','VERSION',#Field2Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field2len > #Column3len
        let #Column3len = #Field2len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #numofhdr        = 3

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.IMPNAME               &ImpName_Del
A.VERSION               &ImpVersion_Del
B.VERSION               &ImpVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &ImpName_Del           (+1,#Start1)
   print &ImpVersion_Del        (0, #Start2)
   print &ImpVersion_Defn       (0, #Start3)

FROM PSIMPDEL A, PSIMPDEFN B
WHERE A.IMPNAME = B.IMPNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-MenuDel-MenuDefn-NOT-Mutually-Exclusive        !
!                                                                      !
! Descr:     System table audit against PSMENUDEFN table:              !
!                                                                      !
!            SYSCLRLIST-10:Verify that the entries in PSMENUDEL        !
!                          and PSMENUDEFN are mutually exclusive.      !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-MenuDel-MenuDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-10) Entries in PSMENUDEL and '
        || 'PSMENUDEFN are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Menu Name'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'PSMENUDEL Version'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PSMENUDEFN Version'
    let #Column3len = lengthp($Column3Name)

    do RetrieveColumnLength('PSMENUDEFN','MENUNAME',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSMENUDEFN','VERSION',#Field2Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field2len > #Column3len
        let #Column3len = #Field2len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #numofhdr        = 3

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.MENUNAME              &MenuName_Del
A.VERSION               &MenuVersion_Del
B.VERSION               &MenuVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &MenuName_Del           (+1,#Start1)
   print &MenuVersion_Del        (0, #Start2)
   print &MenuVersion_Defn       (0, #Start4)

FROM PSMENUDEL A, PSMENUDEFN B
WHERE A.MENUNAME = B.MENUNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-PcmProgDel-PcmProgDefn-NOT-Mutually-Exclusive  !
!                                                                      !
! Descr:     System table audit against PSPCMPROG table:               !
!                                                                      !
!            SYSCLRLIST-11:Verify that the entries in PSPCMPROGDEL     !
!                          and PSPCMPROG are mutually exclusive.       !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-PcmProgDel-PcmProgDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-11) Entries in PSPCMPROGDEL and '
        || 'PSPCMPROG are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'ObjectID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'ObjectValue'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PSPCMPROGDEL Version'
    let #Column3len = lengthp($Column3Name)
    let $Column4Name = 'PSPCMPROG Version'
    let #Column4len = lengthp($Column4Name)

    do RetrieveColumnLength('PSPCMPROG','OBJECTID1',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSPCMPROG','OBJECTVALUE1',#Field2Len,$FieldType)
    do RetrieveColumnLength('PSPCMPROG','VERSION',#Field3Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field3len > #Column3len
        let #Column3len = #Field3len
    end-if

    if #Field3len > #Column4len
        let #Column4len = #Field3len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #Start4          = (#Column3len + 4 + #Start3)
    let #numofhdr        = 4

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
    put $Column4Name #Start4 #Column4len into printarray(3)

begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.OBJECTID1             &ObjectId1_Del
A.OBJECTVALUE1          &ObjectValue1_Del
A.OBJECTID2             &ObjectId2_Del
A.OBJECTVALUE2          &ObjectValue2_Del
A.OBJECTID3             &ObjectId3_Del
A.OBJECTVALUE3          &ObjectValue3_Del
A.OBJECTID4             &ObjectId4_Del
A.OBJECTVALUE4          &ObjectValue4_Del
A.OBJECTID5             &ObjectId5_Del
A.OBJECTVALUE5          &ObjectValue5_Del
A.OBJECTID6             &ObjectId6_Del
A.OBJECTVALUE6          &ObjectValue6_Del
A.OBJECTID7             &ObjectId7_Del
A.OBJECTVALUE7          &ObjectValue7_Del
A.VERSION               &ProgVersion_Del
B.VERSION               &ProgVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &ObjectId1_Del          (+1,#Start1)
   print &ObjectValue1_Del       (0, #Start2)
   print &ProgVersion_Del        (0, #Start3)
   print &ProgVersion_Defn       (0, #Start4)

   print &ObjectId2_Del          (+1,#Start1)
   print &ObjectValue2_Del       (0, #Start2)

   print &ObjectId3_Del          (+1,#Start1)
   print &ObjectValue3_Del       (0, #Start2)

   if &ObjectId4_Del != 0
      print &ObjectId4_Del       (+1,#Start1)
      print &ObjectValue4_Del    (0, #Start2)
   end-if

   if &ObjectId5_Del != 0
      print &ObjectId5_Del       (+1,#Start1)
      print &ObjectValue5_Del    (0, #Start2)
   end-if

   if &ObjectId6_Del != 0
      print &ObjectId6_Del       (+1,#Start1)
      print &ObjectValue6_Del    (0, #Start2)
   end-if

   if &ObjectId7_Del != 0
      print &ObjectId7_Del       (+1,#Start1)
      print &ObjectValue7_Del    (0, #Start2)
   end-if

   print ' '                     (+1,1)

FROM PSPCMPROGDEL A, PSPCMPROG B
WHERE A.OBJECTID1    = B.OBJECTID1
  AND A.OBJECTVALUE1 = B.OBJECTVALUE1
  AND A.OBJECTID2    = B.OBJECTID2
  AND A.OBJECTVALUE2 = B.OBJECTVALUE2
  AND A.OBJECTID3    = B.OBJECTID3
  AND A.OBJECTVALUE3 = B.OBJECTVALUE3
  AND A.OBJECTID4    = B.OBJECTID4
  AND A.OBJECTVALUE4 = B.OBJECTVALUE4
  AND A.OBJECTID5    = B.OBJECTID5
  AND A.OBJECTVALUE5 = B.OBJECTVALUE5
  AND A.OBJECTID6    = B.OBJECTID6
  AND A.OBJECTVALUE6 = B.OBJECTVALUE6
  AND A.OBJECTID7    = B.OBJECTID7
  AND A.OBJECTVALUE7 = B.OBJECTVALUE7

end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-PnlDel-PnlDefn-NOT-Mutually-Exclusive          !
!                                                                      !
! Descr:     System table audit against PSPNLDEFN table:               !
!                                                                      !
!            SYSCLRLIST-12:Verify that the entries in PSPNLDEL         !
!                          and PSPNLDEFN are mutually exclusive.       !
!----------------------------------------------------------------------!


begin-procedure SYSCLRLIST-PnlDel-PnlDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-12) Entries in PSPNLDEL and '
        || 'PSPNLDEFN are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Page Name'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'PSPNLDEL Version'
    let #Column2len = lengthp($Column3Name)
    let $Column3Name = 'PSPNLDEFN Version'
    let #Column3len = lengthp($Column4Name)
        let $Column4Name = 'Ownerid'
    let #Column4len = lengthp($Column5Name)

    do RetrieveColumnLength('PSPNLDEFN','PNLNAME',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSPNLDEFN','VERSION',#Field2Len,$FieldType)
        do RetrieveColumnLength('PSPNLDEFN','OBJECTOWNERID',#Field4Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field3len > #Column3len
        let #Column3len = #Field3len
    end-if

    if #Field3len > #Column4len
        let #Column4len = #Field3len
    end-if


    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #Start4          = (#Column3len + 4 + #Start3)
    let #numofhdr        = 4

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
    put $Column4Name #Start4 #Column4len into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.PNLNAME               &PnlName_Del
A.VERSION               &PnlVersion_Del
B.VERSION               &PnlVersion_Defn
B.OBJECTOWNERID         &PnlVersion_ObjectOwnerid

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &PnlName_Del                   (+1,#Start1)
   print &PnlVersion_Del                (0, #Start2)
   print &PnlVersion_Defn               (0, #Start3)
   print &PnlVersion_ObjectOwnerid      (0, #Start4)

FROM PSPNLDEL A, PSPNLDEFN B
WHERE A.PNLNAME = B.PNLNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-PnlGrpDel-PnlGrpDefn-NOT-Mutually-Exclusive    !
!                                                                      !
! Descr:     System table audit against PSPNLGRPDEFN table:            !
!                                                                      !
!            SYSCLRLIST-13:Verify that the entries in PSPNLGRPDEL      !
!                          and PSPNLGRPDEFN are mutually exclusive.    !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-PnlGrpDel-PnlGrpDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-13) Entries in PSPNLGRPDEL and '
        || 'PSPNLGRPDEFN are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Page Group'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Market'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PSPNLGRPDEL Version'
    let #Column3len = lengthp($Column3Name)
    let $Column4Name = 'PSPNLGRPDEFN Version'
    let #Column4len = lengthp($Column4Name)

    do RetrieveColumnLength('PSPNLGRPDEFN','PNLGRPNAME',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSPNLGRPDEFN','MARKET',#Field2Len,$FieldType)
    do RetrieveColumnLength('PSPNLGRPDEFN','VERSION',#Field3Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field3len > #Column3len
        let #Column3len = #Field3len
    end-if

    if #Field3len > #Column4len
        let #Column4len = #Field3len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #Start4          = (#Column3len + 4 + #Start3)
    let #numofhdr        = 4

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
    put $Column4Name #Start4 #Column4len into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.PNLGRPNAME            &PnlGrpName_Del
A.MARKET                &PnlGrpMarket_Del
A.VERSION               &PnlGrpVersion_Del
B.VERSION               &PnlGrpVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &PnlGrpName_Del           (+1,#Start1)
   print &PnlGrpMarket_Del         (0, #Start2)
   print &PnlGrpVersion_Del        (0, #Start3)
   print &PnlGrpVersion_Defn       (0, #Start4)

FROM PSPNLGRPDEL A, PSPNLGRPDEFN B
WHERE A.PNLGRPNAME = B.PNLGRPNAME
AND A.MARKET = B.MARKET
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-PrcsRunDel-PrcsRunDefn-NOT-Mutually-Exclusive  !
!                                                                      !
! Descr:     System table audit against PSPRCSRUNCNTL table:           !
!                                                                      !
!            SYSCLRLIST-14: Verify that the entries in PSPRCSRUNCDEL   !
!                          and PSPRCSRUNCNTL are mutually exclusive.   !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-PrcsRunDel-PrcsRunDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-14) Entries in PSPRCSRUNCDEL and '
        || 'PSPRCSRUNCNTL are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'OprID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Run Control'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PSPRCSRUNCDEL Version'
    let #Column3len = lengthp($Column3Name)
    let $Column4Name = 'PSPRCSRUNCNTL Version'
    let #Column4len = lengthp($Column4Name)

    do RetrieveColumnLength('PSPRCSRUNCNTL','OPRID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSPRCSRUNCNTL','RUNCNTLID',#Field2Len,$FieldType)
    do RetrieveColumnLength('PSPRCSRUNCNTL','VERSION',#Field3Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field3len > #Column3len
        let #Column3len = #Field3len
    end-if

    if #Field3len > #Column4len
        let #Column4len = #Field3len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #Start4          = (#Column3len + 4 + #Start3)
    let #numofhdr        = 4

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
    put $Column4Name #Start4 #Column4len into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID                   &PrcsOprID_Del
A.RUNCNTLID               &PrcsRunCntlId_Del
A.VERSION                 &PrcsRunCntlVersion_Del
B.VERSION                 &PrcsRunCntlVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &PrcsOprID_Del               (+1,#Start1)
   print &PrcsRunCntlId_Del           (0, #Start2)
   print &PrcsRunCntlVersion_Del      (0, #Start3)
   print &PrcsRunCntlVersion_Defn     (0, #Start4)

FROM PSPRCSRUNCDEL A, PSPRCSRUNCNTL B
WHERE A.OPRID = B.OPRID
AND A.RUNCNTLID = B.RUNCNTLID
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-ProjectDel-ProjectDefn-NOT-Mutually-Exclusive  !
!                                                                      !
! Descr:     System table audit against PSPROJECTDEFN table:           !
!                                                                      !
!            SYSCLRLIST-15: Verify that the entries in PSPROJECTDEL    !
!                           and PSPROJECTDEFN are mutually exclusive.  !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-ProjectDel-ProjectDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-15) Entries in PSPROJECTDEL and '
        || 'PSPROJECTDEFN are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Project Name'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'PSPROJECTDEL Version'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PSPROJECTDEFN Version'
    let #Column3len = lengthp($Column3Name)

    do RetrieveColumnLength('PSPROJECTDEFN','PROJECTNAME',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSPROJECTDEFN','VERSION',#Field2Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field2len > #Column3len
        let #Column3len = #Field2len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #numofhdr        = 3

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.PROJECTNAME           &ProjectName_Del
A.VERSION               &ProjectVersion_Del
B.VERSION               &ProjectVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &ProjectName_Del           (+1,#Start1)
   print &ProjectVersion_Del        (0, #Start2)
   print &ProjectVersion_Defn       (0, #Start3)

FROM PSPROJECTDEL A, PSPROJECTDEFN B
WHERE A.PROJECTNAME = B.PROJECTNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-QryDel-QryDefn-NOT-Mutually-Exclusive          !
!                                                                      !
! Descr:     System table audit against PSQRYDEFN table:               !
!                                                                      !
!            SYSCLRLIST-16: Verify that the entries in PSQRYDEL        !
!                          and PSQRYDEFN are mutually exclusive.       !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-QryDel-QryDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-16) Entries in PSQRYDEL and '
        || 'PSQRYDEFN are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'OprID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Query Name'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PSQRYDEL Version'
    let #Column3len = lengthp($Column3Name)
    let $Column4Name = 'PSQRYDEFN Version'
    let #Column4len = lengthp($Column4Name)

    do RetrieveColumnLength('PSQRYDEFN','OPRID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSQRYDEFN','QRYNAME',#Field2Len,$FieldType)
    do RetrieveColumnLength('PSQRYDEFN','VERSION',#Field3Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field3len > #Column3len
        let #Column3len = #Field3len
    end-if

    if #Field3len > #Column4len
        let #Column4len = #Field3len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #Start4          = (#Column3len + 4 + #Start3)
    let #numofhdr        = 4

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
    put $Column4Name #Start4 #Column4len into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID                   &QryOprID_Del
A.QRYNAME                 &QryName_Del
A.VERSION                 &QryVersion_Del
B.VERSION                 &QryVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &QryOprID_Del            (+1,#Start1)
   print &QryName_Del             (0, #Start2)
   print &QryVersion_Del          (0, #Start3)
   print &QryVersion_Defn         (0, #Start4)

FROM PSQRYDEL A, PSQRYDEFN B
WHERE A.OPRID = B.OPRID
AND A.QRYNAME = B.QRYNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-RecDel-RecDefn-NOT-Mutually-Exclusive          !
!                                                                      !
! Descr:     System table audit against PSRECDEFN table:               !
!                                                                      !
!            SYSCLRLIST-17: Verify that the entries in PSRECDEL        !
!                           and PSRECDEFN are mutually exclusive.      !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-RecDel-RecDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-17) Entries in PSRECDEL and '
        || 'PSRECDEFN are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Record Name'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'PSRECDEL Version'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PSRECDEFN Version'
    let #Column3len = lengthp($Column3Name)
        let $Column4Name = 'Ownerid'
        let #Column4len = lengthp($Column4Name)

    do RetrieveColumnLength('PSRECDEFN','RECNAME',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSRECDEFN','VERSION',#Field2Len,$FieldType)
        do RetrieveColumnLength('PSRECDEFN','OBJECTOWNERID',#Field4Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field2len > #Column3len
        let #Column3len = #Field2len
    end-if

        if #Field4len > #Column4len
        let #Column4len = #Field4len
    end-if


    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
        let #Start4                      = (#Column3len + 4 + #Start3)
    let #numofhdr        = 4

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
        put $Column4name #Start4 #Column4len into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME               &RecName_Del
A.VERSION               &RecVersion_Del
B.VERSION               &RecVersion_Defn
B.OBJECTOWNERID             &RecVersion_ObjectOwnerid

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &RecName_Del           (+1,#Start1)
   print &RecVersion_Del        (0, #Start2)
   print &RecVersion_Defn       (0, #Start3)
   print &RecVersion_ObjectOwnerid (0, #Start4)

FROM PSRECDEL A, PSRECDEFN B
WHERE A.RECNAME = B.RECNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-RecurDel-RecurDefn-NOT-Mutually-Exclusive      !
!                                                                      !
! Descr:     System table audit against PS_PRCSRECUR table:            !
!                                                                      !
!            SYSCLRLIST-18: Verify that the entries in PSRECURDEL      !
!                           and PS_PRCSRECUR are mutually exclusive.   !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-RecurDel-RecurDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-18) Entries in PSRECURDEL and '
        || 'PS_PRCSRECUR are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Record Name'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'PSRECURDEL Version'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PS_PRCSRECUR Version'
    let #Column3len = lengthp($Column3Name)

    do RetrieveColumnLength('PS_PRCSRECUR','RECURNAME',#Field1Len,$FieldType)
    do RetrieveColumnLength('PS_PRCSRECUR','VERSION',#Field2Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field2len > #Column3len
        let #Column3len = #Field2len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #numofhdr        = 3

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.RECURNAME             &RecurName_Del
A.VERSION               &RecurVersion_Del
B.VERSION               &RecurVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &RecurName_Del           (+1,#Start1)
   print &RecurVersion_Del        (0, #Start2)
   print &RecurVersion_Defn       (0, #Start3)

FROM PSRECURDEL A, PS_PRCSRECUR B
WHERE A.RECURNAME = B.RECURNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-StyleDel-StyleDefn-NOT-Mutually-Exclusive      !
!                                                                      !
! Descr:     System table audit against PSSTYLEDEFN table:             !
!                                                                      !
!            SYSCLRLIST-19: Verify that the entries in PSSTYLEDEL      !
!                           and PSSTYLEDEFN are mutually exclusive.    !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-StyleDel-StyleDefn-NOT-Mutually-Exclusive
   move 0 to #rows
   let $AuditDescr = '(SYSCLRLIST-19) Entries in PSSTYLEDEL and '
        || 'PSSTYLEDEFN are not mutually exclusive:'


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Style Name'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'PSSTYLEDEL Version'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PSSTYLEDEFN Version'
    let #Column3len = lengthp($Column3Name)

    do RetrieveColumnLength('PSSTYLEDEFN','STYLENAME',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSSTYLEDEFN','VERSION',#Field2Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field2len > #Column3len
        let #Column3len = #Field2len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #numofhdr        = 3

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.STYLENAME             &StyleName_Del
A.VERSION               &StyleVersion_Del
B.VERSION               &StyleVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &StyleName_Del           (+1,#Start1)
   print &StyleVersion_Del        (0, #Start2)
   print &StyleVersion_Defn       (0, #Start3)

FROM PSSTYLEDEL A, PSSTYLEDEFN B
WHERE A.STYLENAME = B.STYLENAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-ToolBarDel-ToolBarDefn-NOT-Mutually-Exclusive  !
!                                                                      !
! Descr:     System table audit against PSTOOLBARDEFN table:           !
!                                                                      !
!            SYSCLRLIST-20: Verify that the entries in PSTOOLBARDEL    !
!                          and PSTOOLBARDEFN are mutually exclusive.   !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-ToolBarDel-ToolBarDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-20) Entries in PSTOOLBARDEL and '
        || 'PSTOOLBARDEFN are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'OperID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'PSTOOLBARDEL Version'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PSTOOLBARDEFN Version'
    let #Column3len = lengthp($Column3Name)

    do RetrieveColumnLength('PSTOOLBARDEFN','OPRID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSTOOLBARDEFN','VERSION',#Field2Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field2len > #Column3len
        let #Column3len = #Field2len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #numofhdr        = 3

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID                   &ToolOprID_Del
A.VERSION                 &ToolBarVersion_Del
B.VERSION                 &ToolBarVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &ToolOprID_Del           (+1,#Start1)
   print &ToolBarVersion_Del      (0, #Start2)
   print &ToolBarVersion_Defn     (0, #Start3)

FROM PSTOOLBARDEL A, PSTOOLBARDEFN B
WHERE A.OPRID = B.OPRID
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-TreeBraDel-TreeBranch-NOT-Mutually-Exclusive   !
!                                                                      !
! Descr:     System table audit against PSTREEBRANCH table:            !
!                                                                      !
!            SYSCLRLIST-21: Verify that the entries in PSTREEBRADEL    !
!                          and PSTREEBRANCH are mutually exclusive.    !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-TreeBraDel-TreeBranch-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-21) Entries in PSTREEBRADEL and '
        || 'PSTREEBRANCH are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'SetID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Tree Name'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'EffDate'
    let #Column3len = lengthp($Column3Name)
    let $Column4Name = 'PSTREEBRADEL Version'
    let #Column4len = lengthp($Column4Name)
    let $Column5Name = 'PSTREEBRANCH Version'
    let #Column5len = lengthp($Column5Name)


    do RetrieveColumnLength('PSTREEBRANCH','SETID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSTREEBRANCH','TREE_NAME',#Field2Len,$FieldType)
    do RetrieveColumnLength('PSTREEBRANCH','EFFDT',#Field3Len,$FieldType)
    do RetrieveColumnLength('PSTREEBRANCH','VERSION',#Field4Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field3len > #Column3len
        let #Column3len = #Field3len
    end-if

    if #Field4len > #Column4len
        let #Column4len = #Field4len
    end-if

    if #Field4len > #Column5len
        let #Column5len = #Field4len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #Start4          = (#Column3len + 4 + #Start3)
    let #Start5          = (#Column4len + 4 + #Start4)
    let #numofhdr        = 5

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
    put $Column4Name #Start4 #Column4len into printarray(3)
    put $Column5Name #Start5 #Column5len into printarray(4)


begin-SELECT on-Error=Rpt-SQL-Error
A.SETID                   &TreeBraSetID_Del
A.TREE_NAME               &TreeBraName_Del
A.EFFDT                   &TreeBraEffDt_Del
A.VERSION                 &TreeBraVersion_Del
B.VERSION                 &TreeBraVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &TreeBraSetID_Del               (+1,#Start1)
   print &TreeBraName_Del                (0, #Start2)
   print &TreeBraEffDt_Del               (0, #Start3) edit {PTRPTDATE}
   print &TreeBraVersion_Del             (0, #Start4)
   print &TreeBraVersion_Defn            (0, #Start5)

FROM PSTREEBRADEL A, PSTREEBRANCH B
WHERE A.SETID = B.SETID
  AND A.SETCNTRLVALUE = B.SETCNTRLVALUE
  AND A.TREE_NAME = B.TREE_NAME
  AND A.EFFDT = B.EFFDT
  AND A.TREE_BRANCH = B.TREE_BRANCH
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-TreeBraDel-TreeDefn-NOT-Mutually-Exclusive     !
!                                                                      !
! Descr:     System table audit against PSTREEDEFN table:              !
!                                                                      !
!            SYSCLRLIST-22: Verify that the entries in PSTREEDEL       !
!                          and PSTREEDEFN are mutually exclusive.      !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-TreeDel-TreeDefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-22) Entries in PSTREEDEL and '
        || 'PSTREEDEFN are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Set ID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Tree Name'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'EffDate'
    let #Column3len = lengthp($Column3Name)
    let $Column4Name = 'PSTREEDEL Version'
    let #Column4len = lengthp($Column4Name)
    let $Column5Name = 'PSTREEDEFN Version'
    let #Column5len = lengthp($Column5Name)

    do RetrieveColumnLength('PSTREEDEFN','SETID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSTREEDEFN','TREE_NAME',#Field2Len,$FieldType)
    do RetrieveColumnLength('PSTREEDEFN','EFFDT',#Field3Len,$FieldType)
    do RetrieveColumnLength('PSTREEDEFN','VERSION',#Field4Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field3len > #Column3len
        let #Column3len = #Field3len
    end-if

    if #Field4len > #Column4len
        let #Column4len = #Field4len
    end-if

    if #Field4len > #Column5len
        let #Column5len = #Field4len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #Start4          = (#Column3len + 4 + #Start3)
    let #Start5          = (#Column4len + 4 + #Start4)
    let #numofhdr        = 5

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
    put $Column4Name #Start4 #Column4len into printarray(3)
    put $Column5Name #Start5 #Column5len into printarray(4)


begin-SELECT on-Error=Rpt-SQL-Error
A.SETID                   &TreeDefSetID_Del
A.TREE_NAME               &TreeDefName_Del
A.EFFDT                   &TreeDefEffDt_Del
A.VERSION                 &TreeDefVersion_Del
B.VERSION                 &TreeDefVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &TreeDefSetID_Del               (+1,#Start1)
   print &TreeDefName_Del                (0, #Start2)
   print &TreeDefEffDt_Del               (0, #Start3) edit {PTRPTDATE}
   print &TreeDefVersion_Del             (0, #Start4)
   print &TreeDefVersion_Defn            (0, #Start5)

FROM PSTREEDEL A, PSTREEDEFN B
WHERE A.SETID = B.SETID
  AND A.SETCNTRLVALUE = B.SETCNTRLVALUE
  AND A.TREE_NAME = B.TREE_NAME
  AND A.EFFDT = B.EFFDT
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-TreeStrDel-TreeStrct-NOT-Mutually-Exclusive    !
!                                                                      !
! Descr:     System table audit against PSTREESTRCT table:             !
!                                                                      !
!            SYSCLRLIST-23: Verify that the entries in PSTREESTRDEL    !
!                          and PSTREESTRCT are mutually exclusive.     !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-TreeStrDel-TreeStrct-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-23) Entries in PSTREESTRDEL and '
        || 'PSTREESTRCT are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Structure ID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'PSTREESTRDEL Version'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'PSTREESTRCT Version'
    let #Column3len = lengthp($Column3Name)

    do RetrieveColumnLength('PSTREESTRCT','TREE_STRCT_ID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSTREESTRCT','VERSION',#Field2Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field2len > #Column3len
        let #Column3len = #Field2len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #numofhdr        = 3

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.TREE_STRCT_ID         &TreeStrctId_Del
A.VERSION               &TreeStrctVersion_Del
B.VERSION               &TreeStrctVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &TreeStrctId_Del           (+1,#Start1)
   print &TreeStrctVersion_Del      (0, #Start2)
   print &TreeStrctVersion_Defn     (0, #Start3)

FROM PSTREESTRDEL A, PSTREESTRCT B
WHERE A.TREE_STRCT_ID = B.TREE_STRCT_ID
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSCLRLIST-XlatDel-Xlatdefn-NOT-Mutually-Exclusive        !
!                                                                      !
! Descr:     System table audit against PSXLATDEFN table:              !
!                                                                      !
!            SYSCLRLIST-24:Verify that the entries in PSXLATDEFNDEL    !
!                          and PSXLATDEFN are mutually exclusive.      !
!----------------------------------------------------------------------!

begin-procedure SYSCLRLIST-XlatDel-Xlatdefn-NOT-Mutually-Exclusive

   let $AuditDescr = '(SYSCLRLIST-24) Entries in PSXLATDEFNDEL and '
        || 'PSXLATDEFN are not mutually exclusive:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Field Name'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'PSXLATDEFNDEL Version'
    let #Column2len = lengthp($Column3Name)
    let $Column3Name = 'PSXLATDEFN Version'
    let #Column3len = lengthp($Column4Name)

    do RetrieveColumnLength('PSXLATDEFN','FIELDNAME',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSXLATDEFNDEL','VERSION',#Field2Len,$FieldType)
    do RetrieveColumnLength('PSXLATDEFN','VERSION',#Field3Len,$FieldType)

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    if #Field3len > #Column3len
        let #Column3len = #Field3len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Column2len + 4 + #Start2)
    let #numofhdr        = 3

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.FIELDNAME             &FieldName_Del
A.VERSION               &FieldVersion_Del
B.VERSION               &FieldVersion_Defn

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &FieldName_Del           (+1,#Start1)
   print &FieldVersion_Del        (0, #Start2)
   print &FieldVersion_Defn       (0, #Start3)

FROM PSXLATDEFNDEL A, PSXLATDEFN B
WHERE A.FIELDNAME = B.FIELDNAME
ORDER BY A.FIELDNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure
