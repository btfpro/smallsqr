!***********************************************************************
!  BEN707: Savings Plans/Investments Tables
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:08:47:07                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment

Begin-Setup
  #Include 'ptpsl177.sqc'
End-Setup

#define col_all    166  !Column Separator

!**********************************
begin-program
!**********************************
  do Init-Report

  do Process-Main

  do Reset
  do StdAPI-Term
end-program

!**************************
begin-procedure Init-Report
!**************************

 #Define col-sep              1        !Column Separator
 #Define col-sep5             5        !Column Separator
 #Define col-sep11            11       !Column Separator
 #Define col-A                3        !Column Separator
 #Define col-b                4        !Column Separator
 #Define col-emplid           12       !Emplid
 #Define col-plan             4        !Plan Type
 #Define col-benefit-plan     7        !Benefit Plan
 #Define col-effdt            10       !EFFDT
 #Define col-spcl             5        !Spcl
 #Define col-dedcd-c          6        !DedCode
 #Define col-dedclass-c       1        !DedClass
 #Define col-dedcd-t          8        !DedCode
 #Define col-dedclass-t       9        !DedClass
 #Define col-mode             11       !Mode
 #Define col-max              7        !Max
 #Define col-plan-contrib     8        !Dependent ID
 #Define col-inv-options      19       !Inevesment Options
 #Define col-inv-id           2        !Inv. ID
 #Define col-descr            30       !Descr
 #Define col-EECL-und-b-tax   7        !Employee Contrib. Limits Under b-tax
 #Define col-EECL-und-a-tax   6        !Employee Contrib. Limits Under a-tax
 #Define col-EECL-und-pct     7        !Employee Contrib. Limits Under PCT
 #Define col-EECL-ern-thres   11       !Employee Contrib. Limits Earnings Threshold
 #Define col-ERMC-amount      11       !ER Matching/Contrib Amount
 #Define col-amount-pct       17       !Amount Pct
 #Define col-EECL-ovr-b-tax   6        !Employee Contrib. Limits Over b-tax
 #Define col-EECL-ovr-a-tax   6        !Employee Contrib. Limits Over a-tax
 #Define col-EECL-ovr-pct     7        !Employee Contrib. Limits Over PCT
 #Define col-HCE-pct-b-tax    6        !Employee Contrib. Limits HCE pct b-tax
 #Define col-HCE-pct-a-tax    6        !Employee Contrib. Limits HCE pct a-tax
 #Define col-HCE-pct-pct      7        !Employee Contrib. Limits HCE pct PCT
 #Define col-HCE-red-b-tax    6        !Employee Contrib. Limits HCE red b-tax
 #Define col-HCE-red-a-tax    6        !Employee Contrib. Limits HCE red a-tax
 #Define col-INVEST-MATCH     10       !EMployeer Invest Match



  do Init-DateTime
  do Init-Number

  do Get-Current-DateTime
  do StdAPI-Init

  let $ReportID =  'BEN707'
  do Get-Report-Language
  let $ReportTitle  = $BEN707-REPORTTITLE
  display $ReportID
  display $ReportTitle
  display ' '
end-procedure

!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from BEN707 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation('BEN1')

  do Get_Field_Information ('BEN707','REPORT_TITLE',    $BEN707-REPORTTITLE, #CW)
  do Get_Field_Information ('BEN707','ECL',             $BEN707-ECL,         #CW)
  do Get_Field_Information ('BEN707','HCE',             $BEN707-HCE,         #CW)
  do Get_Field_Information ('BEN707','EMC',             $BEN707-EMC,         #CW)
  do Get_Field_Information ('BEN707','ERIL',            $BEN707-ERIL,        #CW)

  do Get_Field_Information ('BEN707','PLAN',            $BEN707-PLAN,        #CW)
  do Get_Field_Information ('BEN707','TYPE',            $BEN707-TYPE,        #CW)
  do Get_Field_Information ('BEN707','BENEFIT',         $BEN707-BENEFIT,     #CW)
  do Get_Field_Information ('BEN707','SPCL',            $BEN707-SPCL,        #CW)
  do Get_Field_Information ('BEN707','ACCUM',           $BEN707-ACCUM,       #CW)
  do Get_Field_Information ('BEN707','CONTRIB',         $BEN707-CONTRIB,       #CW)

  do Get_Field_Information ('BEN707','BEF_TAX',         $BEN707-BEF-TAX,     #CW)
  do Get_Field_Information ('BEN707','AFT_TAX',         $BEN707-AFT-TAX,     #CW)
  do Get_Field_Information ('BEN707','MAX_PCT',         $BEN707-MAX-PCT,     #CW)
  do Get_Field_Information ('BEN707','UNDER',           $BEN707-UNDER,       #CW)
  do Get_Field_Information ('BEN707','MODE',            $BEN707-MODE,        #CW)
  do Get_Field_Information ('BEN707','AMOUNT_PCT',      $BEN707-AMOUNT-PCT,  #CW)
  do Get_Field_Information ('BEN707','MAX',             $BEN707-MAX,         #CW)
  do Get_Field_Information ('BEN707','PERCENT',         $BEN707-PERCENT,     #CW)
  do Get_Field_Information ('BEN707','AMOUNT',          $BEN707-AMOUNT,      #CW)

  do Get_Field_Information ('BEN707','EARNINGS',        $BEN707-EARNINGS,    #CW)
  do Get_Field_Information ('BEN707','THRESHOLD',       $BEN707-THRESHOLD,   #CW)
  do Get_Field_Information ('BEN707','OVER',            $BEN707-OVER,        #CW)


  do Get_Field_Information ('BEN707','INV_OPTNS',       $BEN707-INV-OPTNS,   #CW)

  do Get_Field_Information ('BEN1',  'PLAN',           $BEN1-PLAN,          #CW)
  do Get_Field_Information ('BEN1',  'BENEFIT',        $BEN1-BENEFIT,       #CW)
  do Get_Field_Information ('BEN1',  'DATE',           $BEN1-DATE,          #CW)
  do Get_Field_Information ('BEN1',  'TYPE',           $BEN1-TYPE,          #CW)
  do Get_Field_Information ('BEN1',  'AMT',            $BEN1-AMT,           #CW)
  do Get_Field_Information ('BEN1',  'BENEFIT',        $BEN1-BENEFIT,       #CW)
  do Get_Field_Information ('BEN1',  'EFFECTIVE',      $BEN1-EFFECTIVE,     #CW)


End-Procedure

!**********************************
begin-HEADING 7
!**********************************
  #Include 'stdhdgtr.sqc'

! Heading line 1
  print $BEN707-ECL                          (+2,40,43)
  print $BEN707-HCE                          (+0,84,22)
  print $BEN707-EMC                          (+0,108,29)
  print $BEN707-ERIL                         (+0,138,23)

! Heading line 2
  print $BEN1-PLAN                           (+1,1,{col-plan})
  print $BEN1-BENEFIT                        (+0,+{col-sep},{col-benefit-plan})
  print $BEN1-EFFECTIVE                      (+0,+{col-sep},{col-effdt})
  print $BEN707-SPCL                         (+0,+{col-sep},{col-spcl})
  print $BEN1-PLAN                           (+0,+{col-sep},{col-plan-contrib})

  print $BEN707-BEF-TAX                      (+0,+{col-sep},{col-EECL-und-b-tax})
  print $BEN707-MAX-PCT                      (+0,+{col-sep},{col-EECL-und-pct})
  print $BEN707-EARNINGS                     (+0,+{col-sep},{col-EECL-ern-thres})
  print $BEN707-BEF-TAX                      (+0,+{col-sep},{col-EECL-und-b-tax})
  print $BEN707-MAX-PCT                      (+0,+{col-sep},{col-EECL-und-pct})

  print $BEN707-BEF-TAX                      (+0,+{col-sep},{col-EECL-und-b-tax})
  print $BEN707-MAX-PCT                      (+0,+{col-sep},{col-EECL-und-pct})
  print $BEN707-BEF-TAX                      (+0,+{col-sep},{col-EECL-und-b-tax})

  print $BEN707-MODE                         (+0,+{col-sep},{col-mode})
  print $BEN707-AMOUNT-PCT                   (+0,+{col-sep},{col-amount-pct})

  print $BEN707-BEF-TAX                      (+0,+{col-sep},{col-EECL-und-b-tax})
  print $BEN707-MAX                          (+0,+{col-sep},{col-MAX})
  print $BEN707-MAX                          (+0,+{col-sep},{col-MAX})

! Heading line 3
  print $BEN1-TYPE                           (+1,1,{col-plan})
  print $BEN1-PLAN                           (+0,+{col-sep},{col-benefit-plan})
  print $BEN1-DATE                           (+0,+{col-sep},{col-effdt})
  print $BEN707-ACCUM                        (+0,+{col-sep},{col-spcl})
  print $BEN707-CONTRIB                      (+0,+{col-sep},{col-plan-contrib})

  print $BEN707-AFT-TAX                      (+0,+{col-sep},{col-EECL-und-b-tax})
  print $BEN707-UNDER                        (+0,+{col-sep},{col-EECL-und-pct})
  print $BEN707-THRESHOLD                    (+0,+{col-sep},{col-EECL-ern-thres})
  print $BEN707-AFT-TAX                      (+0,+{col-sep},{col-EECL-und-b-tax})
  print $BEN707-OVER                         (+0,+{col-sep},{col-EECL-und-pct})

  print $BEN707-AFT-TAX                      (+0,+{col-sep},{col-EECL-und-b-tax})
  print ''                                   (+0,+{col-sep},{col-EECL-und-pct})
  print $BEN707-AFT-TAX                      (+0,+{col-sep},{col-EECL-und-b-tax})

  print $BEN707-AFT-TAX                      (+0,+{col-sep5},{col-EECL-und-b-tax})
  print $BEN707-AFT-TAX                      (+0,+{col-sep11},{col-EECL-und-b-tax})

  print $BEN707-AFT-TAX                      (+0,+{col-sep},{col-EECL-und-b-tax})
  print $BEN707-PERCENT                      (+0,+{col-sep},{col-MAX})
  print $BEN707-AMOUNT                       (+0,+{col-sep},{col-MAX})

!Column Heading line 4

  print '='                                  (+1,1,{col-plan})                    FILL
  print '='                                  (+0,+{col-sep},{col-benefit-plan})   FILL
  print '='                                  (+0,+{col-sep},{col-effdt})          FILL
  print '='                                  (+0,+{col-sep},{col-spcl})           FILL
  print '='                                  (+0,+{col-sep},{col-plan-contrib})   FILL

  print '='                                  (+0,+{col-sep},{col-EECL-und-b-tax}) FILL
  print '='                                  (+0,+{col-sep},{col-EECL-und-pct})   FILL
  print '='                                  (+0,+{col-sep},{col-EECL-ern-thres}) FILL
  print '='                                  (+0,+{col-sep},{col-EECL-und-b-tax}) FILL
  print '='                                  (+0,+{col-sep},{col-EECL-und-pct})   FILL

  print '='                                  (+0,+{col-sep},{col-EECL-und-b-tax}) FILL
  print '='                                  (+0,+{col-sep},{col-EECL-und-pct})   FILL
  print '='                                  (+0,+{col-sep},{col-EECL-und-b-tax}) FILL

  print '='                                  (+0,+{col-sep},{col-mode})           FILL
  print '='                                  (+0,+{col-sep},{col-amount-pct})     FILL

  print '='                                  (+0,+{col-sep},{col-EECL-und-b-tax}) FILL
  print '='                                  (+0,+{col-sep},{col-MAX})            FILL
  print '='                                  (+0,+{col-sep},{col-MAX})            FILL


end-HEADING

!**********************************
BEGIN-PROCEDURE Process-Main
!**********************************


BEGIN-SELECT

  NEXT-LISTING SKIPLINES=1

A.PLAN_TYPE                    (3,1,{col-plan})

A.BENEFIT_PLAN                 (3,6,{col-benefit-plan})

A.EFFDT  &A.EffDt
  move &A.EffDt to $AsOfdate
  do Format-DateTime(&A.EffDt, $out, {DEFDATE}, '', '')
  print $out                   (3,14,{col-effdt})

A.ERNCD_SPCL                   (3,25,{col-spcl})

A.PLAN_CONTRIBUTION
  move 'PLAN_CONTRIBUTION' to $FieldName
  move &A.PLAN_CONTRIBUTION   to $FieldValue
  do Read-Translate-Table
  print $XlatShortName         (3,31,{col-plan-contrib})

A.EE_LMT_UND_BTAX
  do Format-Number(&A.EE_LMT_UND_BTAX, $out, 'b99.999')
  print $out                   (3,40,{col-EECL-und-b-tax})

A.EE_LMT_UND_ATAX
  do Format-Number(&A.EE_LMT_UND_ATAX, $out, 'b99.999')
  print $out                   (4,40,{col-EECL-und-b-tax})

A.EE_LMT_UND_PCT
  do Format-Number(&A.EE_LMT_UND_PCT, $out, 'b99.999')
  print $out                   (3,48,{col-amount-pct})

A.SAVINGS_ERN_THRESH
  do Format-Number(&A.SAVINGS_ERN_THRESH, $out, 'b9999999.99')
  print $out                   (3,56,{col-EECL-ern-thres})


A.EE_LMT_OVR_BTAX
  do Format-Number(&A.EE_LMT_OVR_BTAX, $out, 'b99.999')
  print $out                   (3,68,{col-EECL-und-b-tax})

A.EE_LMT_OVR_ATAX
  do Format-Number(&A.EE_LMT_OVR_ATAX, $out, 'b99.999')
  print $out                   (4,68,{col-EECL-und-b-tax})

A.EE_LMT_OVR_PCT
  do Format-Number(&A.EE_LMT_OVR_PCT, $out, 'b99.999')
  print $out                   (3,76,{col-amount-pct})

A.HCE_PCT_BTAX
  do Format-Number(&A.HCE_PCT_BTAX, $out, 'b99.999')
  print $out                   (3,84,{col-EECL-und-b-tax})

A.HCE_PCT_ATAX
  do Format-Number(&A.HCE_PCT_ATAX, $out, 'b99.999')
  print $out                   (4,84,{col-EECL-und-b-tax})

A.HCE_LIMIT_PCT
  do Format-Number(&A.HCE_LIMIT_PCT, $out, 'b99.999')
  print $out                   (3,92,{col-EECL-und-b-tax})

A.HCE_RED_BTAX
  do Format-Number(&A.HCE_RED_BTAX, $out, 'b99.999')
  print $out                   (3,100,{col-EECL-und-b-tax})

A.HCE_RED_ATAX
  do Format-Number(&A.HCE_RED_ATAX, $out, 'b99.999')
  print $out                   (4,100,{col-EECL-und-b-tax})

A.EMPLR_INVEST_MATCH
  move 'EMPLR_INVEST_MATCH' to $FieldName
  move &A.Emplr_Invest_Match to $FieldValue
  do Read-Translate-Table
  print $XlatShortName         (3,108,{col-mode})
  
A.ER_INV_MATCH_ATAX
  move 'ER_INV_MATCH_ATAX' to $FieldName
  move &A.ER_INV_MATCH_ATAX to $FieldValue
  do Read-Translate-Table
  print $XlatShortName         (4,108,{col-mode})

A.FLAT_DED_AMT

A.PCT_EMPL_INVESTMNT

A.PCT_EE_INV_AB_TH

A.SVC_STEP_TBL_ID

A.FLAT_DED_AMT_ATAX

A.PCT_EMPL_INV_ATAX

A.PCT_EE_INV_AT_AB_T

A.ER_LMT_PCT_BTAX
  do Format-Number(&A.er_lmt_pct_btax, $out, 'b99.999')
  print $out                   (3,138,{col-EECL-und-b-tax})

A.ER_LMT_PCT_ATAX
  do Format-Number(&A.er_lmt_pct_Atax, $out, 'b99.999')
  print $out                   (4,138,{col-EECL-und-b-tax})

A.EMPLR_LIMIT_PCT
  do Format-Number(&A.emplr_limit_pct, $out, 'b99.999')
  print $out                   (3,146,{col-EECL-und-b-tax})

A.ER_LIMIT_AMT
  do Format-Number(&A.ER_LIMIT_AMT, $out, 'b99.99')
  print $out                   (3,155,{col-plan-contrib})


A.ROLLOVER_OPT

A.PLAN_TYPE_RB
A.BENEFIT_PLAN_RB
A.DEDCD_RB
A.DED_CLASS_RB

A.PLAN_TYPE_RA
A.BENEFIT_PLAN_RA
A.DEDCD_RA
A.DED_CLASS_RA

     evaluate &A.Emplr_Invest_Match
     
     when = '1'
       do Format-Number(&A.FLAT_DED_AMT, $out, 'b99999.99')
       print $out         (3,120,{col-ERMC-amount})
       break
     when = '2'
       do Format-Number(&A.PCT_EMPL_INVESTMNT, $out, 'b99.999')
       print $out         (3,120,{col-EECL-und-b-tax})
       break
     when = '3'
       print ''           (3,120,{col-amount-pct})
       break
     when = '4'
       print ''           (3,120,{col-amount-pct})
       break
     when = '5'
       print &A.SVC_STEP_TBL_ID        (3,120,{col-EECL-und-b-tax})
       break
     when = '6'
       do Format-Number(&A.PCT_EMPL_INVESTMNT, $out, 'b99.999')
       print $out         (3,120,{col-EECL-und-b-tax})
       print '/'          (3,+{col-sep},1)
       do Format-Number(&A.PCT_EE_INV_AB_TH, $out, 'b99.999')
       print $out         (3,+{col-sep},{col-EECL-und-b-tax})
       break
     
     end-evaluate

     evaluate &A.ER_INV_MATCH_ATAX
     when = '1'
       do Format-Number(&A.FLAT_DED_AMT_ATAX, $out, 'b99999.99')
       print $out         (4,120,{col-ERMC-amount})
       break
     when = '2'
       do Format-Number(&A.PCT_EMPL_INV_ATAX, $out, 'b99999.999')
       print $out         (4,119,{col-EECL-und-b-tax})
       break
     when = '3'
       print ''         (4,120,{col-amount-pct})
       break
     when = '4'
       print ''         (4,120,{col-amount-pct})
       break
     when = '5'
       print &A.SVC_STEP_TBL_ID   (4,120,{col-EECL-und-b-tax})
       break
     when = '6'
       do Format-Number(&A.PCT_EMPL_INV_ATAX, $out, 'b99.999')
       print $out         (4,120,{col-EECL-und-b-tax})
       print '/'          (4,+{col-sep},1)
       do Format-Number(&A.PCT_EE_INV_AT_AB_T, $out, 'b99.999')
       print $out         (4,+{col-sep},{col-EECL-und-b-tax})
       break
     
     end-evaluate

     move 'ROLLOVER_OPT' to $FieldName
     move &A.ROLLOVER_OPT   to $FieldValue
     do Read-Translate-Table

     if &A.ROLLOVER_OPT = 'R' or &A.ROLLOVER_OPT = 'E'
       print 'Rollover Option :'   (+3,10,17)
       print $XlatLongName         (+0,+{col-sep},27)
     end-if
     if &A.ROLLOVER_OPT = 'P'

       if LTRIM(&A.PLAN_TYPE_RB,' ') <> '' or LTRIM(&A.BENEFIT_PLAN_RB,' ') <> '' or LTRIM(&A.DEDCD_RB,' ') <> '' or LTRIM(&A.DED_CLASS_RB,' ') <> ''
         print 'Rollover Option :'   (+3,10,17)
         print $BEN707-BEF-TAX                      (+0,+{col-sep},{col-EECL-und-b-tax})
         print 'Plan:'                              (+0,+{col-sep},5)
         print &A.PLAN_TYPE_RB                      (+0,+{col-sep},{col-plan})
         print 'BenPlan:'                           (+0,+{col-sep},{col-dedcd-t})
         print &A.BENEFIT_PLAN_RB                   (+0,+{col-sep},{col-benefit-plan})
         print 'DedCode:'                           (+0,+{col-sep},{col-dedcd-t})
         print &A.DEDCD_RB                          (+0,+{col-sep},{col-dedcd-c})
         print 'DedClass:'                          (+0,+{col-sep},{col-dedclass-t})
         print &A.DED_CLASS_RB                      (+0,+{col-sep},{col-sep})
         move 'S' to $v_btax
       End-if
       if LTRIM(&A.PLAN_TYPE_RA,' ') <> '' or LTRIM(&A.BENEFIT_PLAN_RA,' ') <> '' or LTRIM(&A.DEDCD_RA,' ') <> '' or LTRIM(&A.DED_CLASS_RA,' ') <> ''
         if $v_btax = 'S'
            print 'Rollover Option :'   (+1,10,17)
         else
            print 'Rollover Option :'   (+3,10,17)
         end-if


         print $BEN707-AFT-TAX                      (+0,+{col-sep},{col-EECL-und-b-tax})
         print 'Plan:'                              (+0,+{col-sep},5)
         print &A.PLAN_TYPE_RA                      (+0,+{col-sep},{col-plan})
         print 'BenPlan:'                           (+0,+{col-sep},{col-dedcd-t})
         print &A.BENEFIT_PLAN_RA                   (+0,+{col-sep},{col-benefit-plan})
         print 'DedCode:'                           (+0,+{col-sep},{col-dedcd-t})
         print &A.DEDCD_RA                          (+0,+{col-sep},{col-dedcd-c})
         print 'DedClass:'                          (+0,+{col-sep},{col-dedclass-t})
         print &A.DED_CLASS_RA                      (+0,+{col-sep},{col-sep})
       End-if


     end-if


  move &A.plan_type    to $plan_type
  move &A.benefit_plan to $benefit_plan
  move &A.EffDt        to $AsOfdate
  do Get-Investment-Options

FROM PS_SAVINGS_PLN_TBL A

ORDER BY A.PLAN_TYPE, A.BENEFIT_PLAN, A.EFFDT DESC

END-SELECT
END-PROCEDURE

!**********************************
BEGIN-PROCEDURE Get-Investment-Options
!**********************************

  move +3 to #line
  move 'Y' to  $first
  move +1 to #lline

BEGIN-SELECT

B.PLAN_TYPE
B.BENEFIT_PLAN
B.EFFDT
B.INVESTMENT_OPT
  move &B.INVESTMENT_OPT to $Option_ID
B.DESCR
  move &B.DESCR to $SvgsInvtDescr

  do Get-Svgs-Invt-Name-Lang

  add 1 to #line
  if $first = 'Y'
    print $BEN707-INV-OPTNS               (+2,10,{col-inv-options})
    print &B.INVESTMENT_OPT               (+0,35,{col-inv-id})
    print $SvgsInvtDescr                  (+0,38,{col-Descr})
  else
    print &B.INVESTMENT_OPT               (+1,35,{col-inv-id})
    print $SvgsInvtDescr                  (+0,38,{col-Descr})
  end-if


  let $first = 'N'




FROM PS_SAVINGS_INV_TBL B

WHERE B.PLAN_TYPE    = &A.plan_type
  AND B.BENEFIT_PLAN = &A.benefit_plan
  AND B.EFFDT        = &A.effdt

END-SELECT
END-PROCEDURE

!***********************************************************************
#Include 'readxlat.sqc'  !get translates for fieldname, value
#Include 'getbennm.sqc'  !Get-Benefit-Name procedure
#Include 'getinvnm.sqc'  !Get-Svgs-Invt-Name-Lang procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
!********************************************************************
