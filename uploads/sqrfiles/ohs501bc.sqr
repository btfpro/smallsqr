!***********************************************************************
!  OHS501BC.SQR :  Moves data into staging tables for EDI              *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:13:27                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!***********************************************************************
! OHS501BC.SQR SQR to move data into staging tables for EDI
!***********************************************************************
! Description:
!  This SQR is used to stage the data required for EDI manager -WCB
!  related data
!  06/10/98 - added Code to fix problem with Informix not being able
!  to insert long fields
!***********************************************************************
#include 'setenv.sqc' !Set environment
begin-setup
  #Include 'ptset01.sqc'   !Printer and page-size initialization
end-setup

begin-report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Stdapi-Term
end-report


!***********************************************************************
BEGIN-PROCEDURE Init-Report
!***********************************************************************

do STDAPI-INIT
if $prcs_process_instance=''
  ! SQR prompting
else
  do select-parms
end-if
END-PROCEDURE Init-Report

!***********************************************************************
BEGIN-PROCEDURE select-parms
!***********************************************************************

let $sql-statement = 'OHS501.SQR,Select-parms,SELECT,PS_RUN_CNTL_OHS'
BEGIN-SELECT
RUN_CNTL_OHS.OPRID
RUN_CNTL_OHS.RUN_CNTL_ID
RUN_CNTL_OHS.LANGUAGE_CD
RUN_CNTL_OHS.FROMDATE
RUN_CNTL_OHS.THRUDATE
RUN_CNTL_OHS.INCIDENT_NBR
  let $FromDate=&RUN_CNTL_OHS.FROMDATE
  let $ThruDate=&RUN_CNTL_OHS.THRUDATE
  let $Incdnbr=&RUN_CNTL_OHS.INCIDENT_NBR

FROM PS_RUN_CNTL_OHS RUN_CNTL_OHS
WHERE RUN_CNTL_OHS.OPRID = $Prcs_OprID
AND RUN_CNTL_OHS.RUN_CNTL_ID= $Prcs_Run_Cntl_ID
END-SELECT
END-PROCEDURE select-parms


!***********************************************************************
BEGIN-PROCEDURE Process-Main
!***********************************************************************

 display 'Starting OHS501BC.sqr'
 let #totcount=0
 do Update-ECQUEUE-Record
 do Zap-Staging-Tables
 do Process-Primary-Control
 do Count-Records
 do Stage-MSG-Header-Record
 do Stage-MSG-Trailer-Record
 show 'Total records loaded to WCB staging Tables: '  #totcount
 display 'End of OHS501BC.sqr'
END-PROCEDURE Process-Main


!***********************************************************************
BEGIN-PROCEDURE Update-ECQUEUE-Record
!***********************************************************************

let $sql-statement = 'OHS501.SQR,Update-ECQUEUE-Record,UPDATE,PS_ECQUEUE'
BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_ECQUEUE SET ECQUEUESTATUS='L' WHERE ECTRANSID='EERE'
end-SQL
END-PROCEDURE Update-ECQUEUE-Record

!***********************************************************************
!This procedure zaps the staging tables clear of data so that new data staging can begin
!***********************************************************************
!***********************************************************************
BEGIN-PROCEDURE Zap-Staging-Tables
!***********************************************************************

let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_CCAD_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_CCAD_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_EDSR_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_EDSR_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_EERE_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_EERE_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_EMDE_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_EMDE_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_ERCA_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_ERCA_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_ERCF_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_ERCF_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_ERET_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_ERET_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_ERFA_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_ERFA_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_ERLC_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_ERLC_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_ERLO_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_ERLO_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_ERPA_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_ERPA_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_ERPT_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_ERPT_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_FATR_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_FATR_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_FATT_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_FATT_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_INWO_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_INWO_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_IWAW_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_IWAW_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_IWJA_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_IWJA_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_IWJO_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_IWJO_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_IWLE_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_IWLE_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_IWWA_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_IWWA_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_IWWD_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_IWWD_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_IWWI_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_IWWI_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_WICO_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_WICO_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_WODI_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_WODI_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_WODT_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_WODT_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_WOES_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_WOES_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_WOFA_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_WOFA_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_WOIN_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_WOIN_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_WOSO_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_WOSO_EC
end-SQL
let $sql-statement = 'OHS501.SQR,Zap-Staging-Tables,DELETE,PS_WCB_WOWS_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
  delete from PS_WCB_WOWS_EC
end-SQL

! COMMIT
END-PROCEDURE Zap-Staging-Tables

!***********************************************************************
!This procedure takes the first incident record, stores its contents into memory variables,
!and executes populating of various staging tables depending on the nature of the incident
!outcome
!***********************************************************************
!***********************************************************************
BEGIN-PROCEDURE Process-Primary-Control
!***********************************************************************

begin-SELECT
ZZZZ.INCIDENT_NBR
ZZZZ.INCIDENT_TYPE
ZZZZ.REG_REGION
ZZZZ.DANGER_OCC_CD
ZZZZ.INCIDENT_DT
ZZZZ.INCIDENT_TIME
ZZZZ.RECURRENCE
ZZZZ.RESULT_INJURY_ILL
ZZZZ.REPORTED_BY_EMPL
ZZZZ.REPORTED_BY_NONEMP
ZZZZ.REPORTED_TO
ZZZZ.DT_REPORTED
ZZZZ.TIME_REPORTED
ZZZZ.DT_RECORDED
ZZZZ.TIME_RECORDED
ZZZZ.INVESTIGATED
ZZZZ.EMPLOYER_PREMISES
ZZZZ.LOCATION
ZZZZ.LOCATION_NAME
ZZZZ.COUNTRY
ZZZZ.ADDRESS1
ZZZZ.ADDRESS2
ZZZZ.ADDRESS3
ZZZZ.ADDRESS4
ZZZZ.CITY
ZZZZ.NUM1
ZZZZ.NUM2
ZZZZ.HOUSE_TYPE
ZZZZ.COUNTY
ZZZZ.STATE
ZZZZ.POSTAL
ZZZZ.GEO_CODE
ZZZZ.IN_CITY_LIMIT
ZZZZ.EXACT_LOCATION
ZZZZ.ROAD_CONDITION
ZZZZ.WEATHER_CONDITION
ZZZZ.INC_OUTCOME_CAN
ZZZZ.WCB_JURISDICT_SW
ZZZZ.CLASS_SUBCLASS
ZZZZ.EXPOSURE_ST_DT
ZZZZ.EXPOSURE_ST_TM
ZZZZ.EXPOSURE_END_DT
ZZZZ.EXPOSURE_END_TM
ZZZZ.BUSINESS_TYPE
ZZZZ.OCCURRENCE_TYPE
ZZZZ.DATE_TIME_EXACT_SW
ZZZZ.INCDNT_OP_LOCN_SW
ZZZZ.SCENE_DESCR
ZZZZ.INCDNT_TMP_SITE_SW
ZZZZ.CLAIM_CONTACT_ID
ZZZZ.HS_CONTACT_EMPLID
ZZZZ.LOCN_SIZE_CD
ZZZZ.DISABLED_PROG_SW
ZZZZ.DIS_PROG_EMPLID
ZZZZ.RTW_AVAILABLE_SW
ZZZZ.STREET_NBR
ZZZZ.STREET_NAME
ZZZZ.STREET_UNIT_NBR
ZZZZ.WCB_PO_BOX
ZZZZ.WCB_RR_NBR
ZZZZ.DESCRLONG

 Let $incd=&ZZZZ.INCIDENT_NBR
 Let $intp=&ZZZZ.INCIDENT_TYPE
 Let $regreg=&ZZZZ.REG_REGION
 Let $docd= substr(&ZZZZ.DANGER_OCC_CD,1,2)
 Let $incdt=&ZZZZ.INCIDENT_DT
 !---Added for Resolution 618855 Begins
 Let $incdtx=&ZZZZ.INCIDENT_DT
 !---Added for Resolution 618855 Ends
 do Format-DateTime(&ZZZZ.INCIDENT_DT,$incdt, {DEFCMP},'','')


 Let $inctm=&ZZZZ.INCIDENT_TIME
 Let $recur=&ZZZZ.RECURRENCE
 Let $rsinjill=&ZZZZ.RESULT_INJURY_ILL
 Let $repbye=&ZZZZ.REPORTED_BY_EMPL
 Let $repbyne=&ZZZZ.REPORTED_BY_NONEMP
 Let $repto=&ZZZZ.REPORTED_TO
   do Format-DateTime(&ZZZZ.DT_REPORTED,$repdt, {DEFCMP},'','')
 If $repdt=''
  Let $repdt=' '
 End-if
 Let $reptm=&ZZZZ.TIME_REPORTED
 If $reptm=''
  Let $reptm=' '
 End-if
   do Format-DateTime(&ZZZZ.DT_RECORDED,$recdt, {DEFCMP},'','')
 If $recdt=''
  Let $recdt=' '
 End-if
 Let $rectm=&ZZZZ.TIME_RECORDED
 If $rectm=''
  Let $rectm=' '
 End-if
 Let $empprem=&ZZZZ.EMPLOYER_PREMISES
 If $empprem='' or $empprem='N'
  Let $onroad='Y'
 Else
   Let $onroad='N'
 End-if


 Let $loc=&ZZZZ.LOCATION
 Let $locnm=&ZZZZ.LOCATION_NAME
 Let $country=&ZZZZ.COUNTRY
 Let $add1=&ZZZZ.ADDRESS1
  Let $add2=&ZZZZ.ADDRESS2
 Let $add3=&ZZZZ.ADDRESS3
 Let $add4=&ZZZZ.ADDRESS4
 Let $city=&ZZZZ.CITY
 Let $num1=&ZZZZ.NUM1
 Let $num2=&ZZZZ.NUM2
 Let $houstp=&ZZZZ.HOUSE_TYPE
 Let $county=&ZZZZ.COUNTY
 Let $state=&ZZZZ.STATE
 Let $postal=&ZZZZ.POSTAL
 Let $geo=&ZZZZ.GEO_CODE
 Let $inlim=&ZZZZ.IN_CITY_LIMIT
 Let $exloc=&ZZZZ.EXACT_LOCATION
    let $targstr=$exloc
    Let $outstr=''
    Do StripCR($targstr,$outstr)
    let $targstr=$outstr
    Let $exloc={ps-substr}($targstr,1,90)

 Let $roadcnd=&ZZZZ.ROAD_CONDITION
 Let $wthcnd=&ZZZZ.WEATHER_CONDITION
 Let $incout=&ZZZZ.INC_OUTCOME_CAN
 Let $wcbjur=&ZZZZ.WCB_JURISDICT_SW
 Let #clssub=&ZZZZ.CLASS_SUBCLASS
 Let $expstdt=&ZZZZ.EXPOSURE_ST_DT
 Let $expstm=&ZZZZ.EXPOSURE_ST_TM
 If $expstm=''
  Let $expstm='  '
 End-if
 Let $expnddt=&ZZZZ.EXPOSURE_END_DT
 Let $expetm=&ZZZZ.EXPOSURE_END_TM
 If $expetm=''
  Let $expetm='  '
 End-if
 If $expstdt=''
  Let $expstdt='  '
 End-if
 If $expnddt=''
  Let $expnddt='  '
 End-if
 Let $bustyp=&ZZZZ.BUSINESS_TYPE
 Let $occtyp=&ZZZZ.OCCURRENCE_TYPE
 Let $dtesw=&ZZZZ.DATE_TIME_EXACT_SW
 Let $incoplc=&ZZZZ.INCDNT_OP_LOCN_SW
 Let $scendes=&ZZZZ.SCENE_DESCR
 Let $inctmp=&ZZZZ.INCDNT_TMP_SITE_SW
 Let $ccid=&ZZZZ.CLAIM_CONTACT_ID
 Let $hscon=&ZZZZ.HS_CONTACT_EMPLID
 Let $lscd=&ZZZZ.LOCN_SIZE_CD
 Let $dissw=&ZZZZ.DISABLED_PROG_SW
 Let $discon=&ZZZZ.DIS_PROG_EMPLID
 Let $rtwsw=&ZZZZ.RTW_AVAILABLE_SW
 Let $strtnum=&ZZZZ.STREET_NBR
 Let $strtnm=&ZZZZ.STREET_NAME
 Let $strtunum=&ZZZZ.STREET_UNIT_NBR
 Let $wcbbox=&ZZZZ.WCB_PO_BOX
 Let $wcbrrn=&ZZZZ.WCB_RR_NBR
 Let $deslng=&ZZZZ.DESCRLONG

 If &ZZZZ.INCIDENT_TIME <>''
  Let $inctm=edit (&ZZZZ.INCIDENT_TIME,'HH:MI')
 end-if


 if &ZZZZ.EXPOSURE_ST_DT <>''
    do Format-DateTime(&ZZZZ.EXPOSURE_ST_DT ,$expstdt, {DEFCMP},'','')
 end-if
 if &ZZZZ.EXPOSURE_ST_TM <>''
  Let $expstm=edit (&ZZZZ.EXPOSURE_ST_TM,'HH:MI')
 end-if

  if &ZZZZ.EXPOSURE_END_DT <>''
    do Format-DateTime(&ZZZZ.EXPOSURE_END_DT ,$expnddt, {DEFCMP},'','')
  end-if

 if &ZZZZ.EXPOSURE_END_TM <>''
  Let $expetm=edit (&ZZZZ.EXPOSURE_END_TM,'HH:MI')
 end-if

 If &ZZZZ.TIME_RECORDED <>''
  Let $rectm=edit (&ZZZZ.TIME_RECORDED,'HH:MI')
 end-if

 do Update-Report-History-File($incd,$Prcs_Run_Cntl_ID,$Prcs_OprID)

  let $incout1 = rtrim($incout,' ')
 EVALUATE $incout1
  WHEN='DO'
    do Stage-EDSR-Table($incd,$rectm,$incout,$recdt)
    do Stage-EERE-Table($incd,$incdt,$inctm,#clssub,$expstdt,$expstm,$expnddt,$expetm,$bustyp,$occtyp,$dtesw,$docd)
    do Stage-ERLC-Table($incd,$hscon,$discon,$dissw,$lscd,$rtwsw)
    do Stage-ERLO-Table($incd,$incoplc, $scendes,$inctmp,$onroad,$strtnum,$strtnm,$strtunum,$wcbbox,$wcbrrn,$city,$state,$postal,$country,$exloc)
    do Stage-ERET-Table($incd,$deslng)
    do Stage-ERCA-Table($incd)
    do Stage-ERCF-Table($incd)
    do Stage-ERFA-Table($incd)
    do Stage-ERPA-Table($incd)
    do Stage-ERPT-Table($incd)
    BREAK
  WHEN='RPO'
    do Stage-EDSR-Table($incd,$rectm,$incout,$recdt)
    do Stage-EERE-Table($incd,$incdt,$inctm,#clssub,$expstdt,$expstm,$expnddt,$expetm,$bustyp,$occtyp,$dtesw,$docd)
    do Stage-ERLC-Table($incd,$hscon,$discon,$dissw,$lscd,$rtwsw)
    do Stage-ERLO-Table($incd,$incoplc, $scendes,$inctmp,$onroad,$strtnum,$strtnm,$strtunum,$wcbbox,$wcbrrn,$city,$state,$postal,$country,$exloc)
    do Stage-ERET-Table($incd,$deslng)
    do Stage-ERCA-Table($incd)
    do Stage-ERCF-Table($incd)
    do Stage-ERFA-Table($incd)
    do Stage-ERPA-Table($incd)
    do Stage-CCAD-Table($incd)
    do Stage-WODI-Table($incd)
    do Stage-WODT-Table($incd)
    do Stage-WOSO-Table($incd)
    do Stage-EMDE-Table($incd)
    do Stage-WOWS-Table($incd)
    do Stage-WOES-Table($incd)
    do Stage-IWJO-Table($incd)
    do Stage-ERPT-Table($incd)
    do Stage-WOIN-Table($incd)
    do Stage-INWO-Table($incd)
    do Stage-WOFA-Table($incd)
    do Stage-FATR-Table($incd)
    do Stage-FATT-Table($incd)
    BREAK
  WHEN='HCO'
    do Stage-EDSR-Table($incd,$rectm,$incout,$recdt)
    do Stage-EERE-Table($incd,$incdt,$inctm,#clssub,$expstdt,$expstm,$expnddt,$expetm,$bustyp,$occtyp,$dtesw,$docd)
    do Stage-ERLC-Table($incd,$hscon,$discon,$dissw,$lscd,$rtwsw)
    do Stage-ERLO-Table($incd,$incoplc, $scendes,$inctmp,$onroad,$strtnum,$strtnm,$strtunum,$wcbbox,$wcbrrn,$city,$state,$postal,$country,$exloc)
    do Stage-ERET-Table($incd,$deslng)
    do Stage-ERCA-Table($incd)
    do Stage-ERCF-Table($incd)
    do Stage-ERFA-Table($incd)
    do Stage-ERPA-Table($incd)
    do Stage-CCAD-Table($incd)
    do Stage-WODI-Table($incd)
    do Stage-WODT-Table($incd)
    do Stage-WOSO-Table($incd)
    do Stage-EMDE-Table($incd)
    do Stage-WOWS-Table($incd)
    do Stage-WOES-Table($incd)
    do Stage-WICO-Table($incd)
    do Stage-IWJO-Table($incd)
    do Stage-ERPT-Table($incd)
    do Stage-WOIN-Table($incd)
    do Stage-INWO-Table($incd)
    do Stage-WOFA-Table($incd)
    do Stage-FATR-Table($incd)
    do Stage-FATT-Table($incd)
    BREAK
  WHEN-OTHER
    do Stage-EERE-Table($incd,$incdt,$inctm,#clssub,$expstdt,$expstm,$expnddt,$expetm,$bustyp,$occtyp,$dtesw,$docd)
    do Stage-EDSR-Table($incd,$rectm,$incout,$recdt)
    do Stage-ERLC-Table($incd,$hscon,$discon,$dissw,$lscd,$rtwsw)
    do Stage-ERLO-Table($incd,$incoplc, $scendes,$inctmp,$onroad,$strtnum,$strtnm,$strtunum,$wcbbox,$wcbrrn,$city,$state,$postal,$country,$exloc)
    do Stage-ERCA-Table($incd)
    do Stage-ERCF-Table($incd)
    do Stage-ERPT-Table($incd)
    do Stage-ERPA-Table($incd)
    do Stage-ERFA-Table($incd)
    do Stage-CCAD-Table($incd)
    do Stage-WOIN-Table($incd)
    do Stage-INWO-Table($incd)
    do Stage-WODT-Table($incd)
    do Stage-WOSO-Table($incd)
    do Stage-EMDE-Table($incd)
    do Stage-IWJO-Table($incd)
    do Stage-WOFA-Table($incd)
    do Stage-FATR-Table($incd)
    do Stage-IWWA-Table($incd)
    do Stage-IWWD-Table($incd)
    do Stage-IWLE-Table($incd)
    do Stage-IWWI-Table($incd)
    do Stage-IWAW-Table($incd)
    do Stage-IWJA-Table($incd)
    do Stage-WICO-Table($incd)
    do Stage-ERET-Table($incd,$deslng)
    do Stage-WODI-Table($incd)
    do Stage-FATT-Table($incd)
    do Stage-WOES-Table($incd)
    do Stage-WOWS-Table($incd)
    BREAK
 End-EVALUATE
FROM PS_INCIDENT_DATA ZZZZ
WHERE (ZZZZ.INCIDENT_NBR = $Incdnbr
        OR (ZZZZ.INCIDENT_DT >= $FromDate AND ZZZZ.INCIDENT_DT <= $ThruDate)
      )
  AND ZZZZ.REG_REGION = 'CANBC'
end-SELECT

END-PROCEDURE Process-Primary-Control


!*******************************************************************************
BEGIN-PROCEDURE Update-Report-History-File($incd,$Prcs_Run_Cntl_ID,$Prcs_OprID)
!*******************************************************************************

begin-SELECT
XXX.INCIDENT_NBR
FROM PS_HS_RPT_HIST_CAN XXX
WHERE XXX.INCIDENT_NBR = $incd
end-SELECT

begin-SELECT
PPP.FIRM_NBR_XMIT_CAN
PPP.OP_LOCN_XMIT_CAN
PPP.NAME_TRANS,
PPP.PHONE_TRANS
PPP.DATE_TRANS
PPP.TIME_TRANS
PPP.RUN_CNTL_ID
PPP.OPRID
 let #ftrns=&PPP.FIRM_NBR_XMIT_CAN
 let #oplctrn=&PPP.OP_LOCN_XMIT_CAN
 let $ntrns=&PPP.NAME_TRANS
 let $ptrns=&PPP.PHONE_TRANS
 let $dtrns=&PPP.DATE_TRANS
 let $ttrns=&PPP.TIME_TRANS
 let $rcid=&PPP.RUN_CNTL_ID
 let $opid=&PPP.OPRID
FROM PS_RUN_CNTL_OHS PPP
WHERE PPP.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
  AND PPP.OPRID       = $Prcs_OprID
end-SELECT

! Replaced $ttrns as &PPP.RUN_CNTL_ID  because Informix was giving problem.
let $sql-statement = 'OHS501BC.SQR,Update-Report-History-File,INSERT,PS_RPT_HIST_CAN'
#IFDEF  INFORMIX
 IF &XXX.INCIDENT_NBR=''
   BEGIN-SQL ON-ERROR=SQL-ERROR
      INSERT INTO  PS_HS_RPT_HIST_CAN (INCIDENT_NBR,FIRM_TRANS,OP_LOCN_TRANS,NAME_TRANS,PHONE_TRANS,DATE_TRANS,TIME_TRANS)
      VALUES($incd,#ftrns,#oplctrn,$ntrns,$ptrns,$dtrns,&PPP.TIME_TRANS )
    end-SQL
 ELSE
   let $sql-statement = 'OHS501BC.SQR,Update-Report-History-File,UPDATE,PS_RPT_HIST_CAN'
   BEGIN-SQL ON-ERROR=SQL-ERROR
     UPDATE PS_HS_RPT_HIST_CAN  SET FIRM_TRANS=#ftrns,
      OP_LOCN_TRANS=#oplctrn,NAME_TRANS=$ntrns,PHONE_TRANS=$ptrns,
      DATE_TRANS=$dtrns,TIME_TRANS=&PPP.TIME_TRANS
      WHERE INCIDENT_NBR=$incd
   end-SQL
 end-IF
#ELSE
 IF &XXX.INCIDENT_NBR=''
   BEGIN-SQL ON-ERROR=SQL-ERROR
    INSERT INTO  PS_HS_RPT_HIST_CAN (INCIDENT_NBR,FIRM_TRANS,OP_LOCN_TRANS,NAME_TRANS,PHONE_TRANS,DATE_TRANS,TIME_TRANS)
    VALUES($incd,#ftrns,#oplctrn,$ntrns,$ptrns,$dtrns,$ttrns )
   end-SQL
 ELSE
    BEGIN-SQL ON-ERROR=SQL-ERROR
      UPDATE PS_HS_RPT_HIST_CAN  SET FIRM_TRANS=#ftrns,
      OP_LOCN_TRANS=#oplctrn,NAME_TRANS=$ntrns,PHONE_TRANS=$ptrns,
      DATE_TRANS=$dtrns,TIME_TRANS= $ttrns
    WHERE INCIDENT_NBR=$incd
   end-SQL
 END-IF
#ENDIF

END-PROCEDURE Update-Report-History-File


!**********************************************************************************************
BEGIN-PROCEDURE Stage-EERE-Table($incd,$incdt,$inctm,#clssub,$expstdt,$expstm,$expnddt,$expetm,$bustyp,$occtyp,$dtesw,$docd)
!**********************************************************************************************

 if $expstdt > '19000101'                 ! Basically any value
    Let $incdt=' '
    Let $inctm=' '
End-if
 do Insert-EERE-Record($incd,$incdt,$inctm,#clssub,$expstdt,$expstm,$expnddt,$expetm,$bustyp,$docd,$dtesw)
let $sql-statement = 'OHS501BC.SQR,Stage-EERE-Table,update,PS_WCB_EERE_EC'

BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_EERE_EC
SET WITNESS_INDICATOR ='Y'
WHERE INCIDENT_NBR IN (SELECT INCIDENT_NBR FROM PS_INCIDENT_PEOPLE
                       WHERE INCIDENT_NBR = $incd AND INCIDENT_ROLE = 'IW')
end-SQL

BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_EERE_EC
SET WITNESS_INDICATOR ='Y'
WHERE INCIDENT_NBR IN (SELECT INCIDENT_NBR FROM PS_INJ_PEOPLE_CAN
                       WHERE INCIDENT_NBR = $incd AND INJURY_ROLE_CAN = 'IW')
end-SQL

END-PROCEDURE Stage-EERE-Table



!**********************************************************************************************
BEGIN-PROCEDURE Insert-EERE-Record($incd,$incdt,$inctm,#clssub,$expstdt,$expstm,$expnddt,$expetm,$bustyp,$docd,$dtesw)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Insert-EERE-Record,INSERT,PS_WCB_EERE_EC'

BEGIN-SQL ON-ERROR=SQL-ERROR
INSERT INTO PS_WCB_EERE_EC (ECTRANSID,ECQUEUEINSTANCE,ECTRANSINOUTSW,INCIDENT_NBR,
                          INCIDENT_DT_C,INCIDENT_TIME4,CLASS_SUBCLASS,EXPOSURE_ST_DT_C,
                          EXPOSURE_ST_TM4, EXPOSURE_END_DT_C,EXPOSURE_END_TM4,BUSINESS_TYPE,
                               OCCURRENCE_TYPE,EXP_DTTM_EXACT_SW,WITNESS_INDICATOR)
VALUES('EERE',0,'O', $incd, $incdt, $inctm,
 #clssub, $expstdt, $expstm, $expnddt,
 $expetm, $bustyp, $docd, $dtesw,
 'N')
end-SQL
END-PROCEDURE Insert-EERE-Record


!**********************************************************************************************
BEGIN-PROCEDURE Stage-EDSR-Table($incd,$rectm,$incout,$recdt)
!**********************************************************************************************

begin-SELECT
AA.INCIDENT_NBR
AA.TIME_TRANS
AA.NAME_TRANS
AA.FIRM_TRANS
AA.OP_LOCN_TRANS
AA.PHONE_TRANS
AA.DATE_TRANS
EDSR.FIRM_NBR_RPT_CAN,
EDSR.OP_LOCN_RPT_CAN,
EDSR.RPT_STATUS_CAN
 Let $trnstm='    '
 if &AA.TIME_TRANS <>''
  Let $trnstm=edit (&AA.TIME_TRANS,'HH:MI')
 end-if
    let $lname={ps-substr}(&AA.NAME_TRANS,1,(instr(&AA.NAME_TRANS,',',1))-1 )
    Let $fname=rtrim({ps-substr}(&AA.NAME_TRANS,(instr(&AA.NAME_TRANS,',',1)+1),length(&AA.NAME_TRANS)),' ')
    let $hname=$fname||' '||$lname
    let #ftrn=&AA.FIRM_TRANS
    Let #oltrn=&AA.OP_LOCN_TRANS
    Let $phtrn=&AA.PHONE_TRANS
    do Format-DateTime(&AA.DATE_TRANS ,$dttrn, {DEFCMP},'','')
    Let #fnrc=&EDSR.FIRM_NBR_RPT_CAN
    Let #olrc=&EDSR.OP_LOCN_RPT_CAN
    Let $rsc=&EDSR.RPT_STATUS_CAN


    do Insert-EDSR-Record($incd,$rectm,$trnstm,$incout,$recdt,$hname,#ftrn,#oltrn,$phtrn,$dttrn,#fnrc,#olrc,$rsc)

FROM PS_HS_RPT_HIST_CAN AA,
     PS_INCIDENT_REPORT EDSR
WHERE AA.INCIDENT_NBR = EDSR.INCIDENT_NBR
  AND AA.INCIDENT_NBR = $incd
  AND EDSR.REG_REGION = 'CANBC'
  AND EDSR.REPORT_DATE = (SELECT MAX(REPORT_DATE) FROM PS_INCIDENT_REPORT
                          WHERE INCIDENT_NBR = $incd
                            AND REG_REGION   = 'CANBC')
end-SELECT
END-PROCEDURE Stage-EDSR-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-EDSR-Record($incd,$rectm,$trnstm,$incout,$recdt,$hname,#ftrn,#oltrn,$phtrn,$dttrn,#fnrc,#olrc,$rsc)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Insert-EDSR-Record,INSERT,PS_WCB_EDSR_EC'

begin-SQL ON-ERROR=SQL-ERROR
INSERT INTO PS_WCB_EDSR_EC (ECTRANSID,INCIDENT_NBR,SRCE_SFTWR_ID,INTERCHNG_SPEC_VER,
                            FIRM_TRANS,OP_LOCN_TRANS,NAME_TRANS,PHONE_TRANS,FIRM_RPT,OP_LOCN_RPT,
                            REPORT_STATUS,EVENT_OUTCOME,DT_RECORDED_C,TIME_RECORD5,DATE_TRANS_C,TIME_TRANSMIT5_CAN,
                             TEST_PROD_INDCTR)
VALUES ('EERE',$incd,'PS','2.0     ',#ftrn, #oltrn, $hname,$phtrn,#fnrc,#olrc,$rsc, $incout,
$recdt, $rectm, $dttrn, $trnstm,'P')
end-SQL

END-PROCEDURE Insert-EDSR-Record


!**********************************************************************************************
BEGIN-PROCEDURE Stage-ERLC-Table($incd,$hscon,$discon,$dissw,$lscd,$rtwsw)
!**********************************************************************************************

 Do Insert-ERLC-Record($incd,$dissw,$lscd,$rtwsw)
 Do Update-ERLC-HSContact-Info($hscon,$incd)
 Do Update-ERLC-Disability-Contact-Info($discon,$incd)
 Do Update-ERLC-Claim-Contact-Info($incd)
 Do Update-ERLC-Disability-Program-Info3($incd,$dissw)
END-PROCEDURE Stage-ERLC-Table

!**********************************************************************************************
BEGIN-PROCEDURE Insert-ERLC-Record($incd,$dissw,$lscd,$rtwsw)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Insert-ERLC-Record,INSERT,PS_WCB_ERLC_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
insert into PS_WCB_ERLC_EC (ECTRANSID,INCIDENT_NBR,CLAIM_CNTCT_NAME,CLAIM_CNTCT_PHONE,HS_CNTCT_NAME,HS_CONTACT_PHONE,
                             DISABLED_PROG_SW,DISABLD_CNTCT_NAME,DISABLD_CNTCT_PHON,LOCN_SIZE_CD,
                             DISABLED_PGM_DESC,RTW_AVAILABLE_SW)
VALUES( 'EERE',$incd, ' ', ' ', ' ',' ',$dissw, ' ', ' ',  $lscd,' ',$rtwsw)
end-SQL

END-PROCEDURE Insert-ERLC-Record


!**********************************************************************************************
BEGIN-PROCEDURE Update-ERLC-HSContact-Info($hscon,$incd)
!**********************************************************************************************

do Get-Primary-Job($hscon, '', #emplrcd)

begin-SELECT
RRR.EMPLID
RRR.NAME
SSS.POSITION_PHONE

   if &SSS.POSITION_PHONE <>' '
    let $wphone=&SSS.POSITION_PHONE
!----Commented for fix 597175 Starts
!    let $lname={ps-substr}(&RRR.NAME,1,(instr(&RRR.NAME,',',1))-1 )
!    Let $fname=rtrim({ps-substr}(&RRR.NAME,(instr(&RRR.NAME,',',1)+1),length(&RRR.NAME)),' ')
!----Commented for fix 597175 Ends

!----Added for fix 597175 Starts
     let $lname={ps-substr}(&RRR.NAME,1,(instr(&RRR.NAME,' ',1))-1 )
     Let $fname=rtrim({ps-substr}(&RRR.NAME,(instr(&RRR.NAME,' ',1)+1),length(&RRR.NAME)),' ')
!----Added for fix 597175 Ends

    let $hname=$fname||' '||$lname
  Else
   let $wphone='     '
!----Commented for fix 597175 Starts
!    let $lname={ps-substr}(&RRR.NAME,1,(instr(&RRR.NAME,',',1))-1 )
!    Let $fname=rtrim({ps-substr}(&RRR.NAME,(instr(&RRR.NAME,',',1)+1),length(&RRR.NAME)),' ')
!----Commented for fix 597175 Ends

!----Added for fix 597175 Starts
     let $lname={ps-substr}(&RRR.NAME,1,(instr(&RRR.NAME,' ',1))-1 )
     Let $fname=rtrim({ps-substr}(&RRR.NAME,(instr(&RRR.NAME,' ',1)+1),length(&RRR.NAME)),' ')
!----Added for fix 597175 Ends

    let $hname=$fname||' '||$lname
  end-If
  Do Update-ERLC-HSContact-Info2($wphone,$hname,$incd)

FROM PS_PERSON_NAME  RRR ,
     PS_EMPLOYMENT     SSS
WHERE RRR.EMPLID    = SSS.EMPLID
  AND SSS.EMPL_RCD = #emplrcd
  AND RRR.EMPLID    = $hscon
end-SELECT

END-PROCEDURE Update-ERLC-HSContact-Info


!**********************************************************************************************
BEGIN-PROCEDURE Update-ERLC-HSContact-Info2($wphone,$hname,$incd)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Update-ERLC-HSContact-Info2,UPDATE,PS_WCB_ERLC_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_ERLC_EC SET HS_CNTCT_NAME=$hname,HS_CONTACT_PHONE=$wphone
WHERE INCIDENT_NBR=$incd
end-SQL
END-PROCEDURE Update-ERLC-HSContact-Info2


!**********************************************************************************************
BEGIN-PROCEDURE Update-ERLC-Disability-Contact-Info($discon,$incd)
!**********************************************************************************************

do Get-Primary-Job($discon, '', #emplrcd)

begin-SELECT
UUU.EMPLID
UUU.NAME
UUUU.POSITION_PHONE

  If &UUUU.POSITION_PHONE <>' '
   let $wphone=&UUUU.POSITION_PHONE
!----Commented for fix 597175 Starts
!    let $lname={ps-substr}(&UUU.NAME,1,(instr(&UUU.NAME,',',1))-1 )
!    Let $fname=rtrim({ps-substr}(&UUU.NAME,(instr(&UUU.NAME,',',1)+1),length(&UUU.NAME)),' ')
!----Commented for fix 597175 Ends

!----Added for fix 597175 Starts
    let $lname={ps-substr}(&UUU.NAME,1,(instr(&UUU.NAME,' ',1))-1 )
    Let $fname=rtrim({ps-substr}(&UUU.NAME,(instr(&UUU.NAME,' ',1)+1),length(&UUU.NAME)),' ')
!----Added for fix 597175 Ends

    let $hname=$fname||' '||$lname
  Else
   let $wphone='     '
!----Commented for fix 597175 Starts
!    let $lname={ps-substr}(&UUU.NAME,1,(instr(&UUU.NAME,',',1))-1 )
!    Let $fname=rtrim({ps-substr}(&UUU.NAME,(instr(&UUU.NAME,',',1)+1),length(&UUU.NAME)),' ')
!----Commented for fix 597175 Ends

!----Added for fix 597175 Starts
    let $lname={ps-substr}(&UUU.NAME,1,(instr(&UUU.NAME,' ',1))-1 )
    Let $fname=rtrim({ps-substr}(&UUU.NAME,(instr(&UUU.NAME,' ',1)+1),length(&UUU.NAME)),' ')
!----Added for fix 597175 Ends

    let $hname=$fname||' '||$lname
  end-If
   Do Update-ERLC-Disability-Contact-Info2($wphone,$hname,$incd)

FROM PS_PERSON_NAME  UUU ,
     PS_EMPLOYMENT     UUUU

WHERE  UUU.EMPLID    = UUUU.EMPLID
  AND UUUU.EMPL_RCD = #emplrcd
  AND UUU.EMPLID     = $discon
end-SELECT


END-PROCEDURE Update-ERLC-Disability-Contact-Info


!**********************************************************************************************
BEGIN-PROCEDURE Update-ERLC-Disability-Contact-Info2($wphone,$hname,$incd)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Update-ERLC-Disability-Contact-Info2,UPDATE'
BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_ERLC_EC SET DISABLD_CNTCT_NAME=$hname,DISABLD_CNTCT_PHON=$wphone
WHERE INCIDENT_NBR=$incd
end-SQL
END-PROCEDURE Update-ERLC-Disability-Contact-Info2


!**********************************************************************************************
BEGIN-PROCEDURE Update-ERLC-Claim-Contact-Info($incd)
!**********************************************************************************************

begin-SELECT
SSS.CONTACT_ID
SSS.INCIDENT_NBR
SSS.CLAIM_NBR
 Let $ccid=&SSS.CONTACT_ID
 Do Update-ERLC-Claim-Contact-Info2($ccid,$incd)
FROM PS_INJURY_CLM_MGMT SSS
WHERE SSS.CLAIM_NBR= (SELECT MIN(CLAIM_NBR) FROM PS_INJURY_CLM_MGMT
                      WHERE INCIDENT_NBR = $incd)
end-SELECT
END-PROCEDURE Update-ERLC-Claim-Contact-Info


!**********************************************************************************************
BEGIN-PROCEDURE Update-ERLC-Claim-Contact-Info2($ccid,$incd)
!**********************************************************************************************

do Get-Primary-Job($ccid, '', #emplrcd)

begin-SELECT
VVV.EMPLID
VVV.NAME
VVVV.POSITION_PHONE

  If &VVVV.POSITION_PHONE <>' '
   let $wphone=&VVVV.POSITION_PHONE
!----Commented for fix 597175 Starts
!    let $lname={ps-substr}(&VVV.NAME,1,(instr(&VVV.NAME,',',1))-1 )
!    Let $fname=rtrim({ps-substr}(&VVV.NAME,(instr(&VVV.NAME,',',1)+1),length(&VVV.NAME)),' ')
!----Commented for fix 597175 Ends

!----Added for fix 597175 Starts
    let $lname={ps-substr}(&VVV.NAME,1,(instr(&VVV.NAME,' ',1))-1 )
    Let $fname=rtrim({ps-substr}(&VVV.NAME,(instr(&VVV.NAME,' ',1)+1),length(&VVV.NAME)),' ')
!----Added for fix 597175 Ends

    let $hname=$fname||' '||$lname
  Else
   let $wphone='     '
!----Commented for fix 597175 Starts
!    let $lname={ps-substr}(&VVV.NAME,1,(instr(&VVV.NAME,',',1))-1 )
!    Let $fname=rtrim({ps-substr}(&VVV.NAME,(instr(&VVV.NAME,',',1)+1),length(&VVV.NAME)),' ')
!----Commented for fix 597175 Ends

!----Added for fix 597175 Starts
    let $lname={ps-substr}(&VVV.NAME,1,(instr(&VVV.NAME,' ',1))-1 )
    Let $fname=rtrim({ps-substr}(&VVV.NAME,(instr(&VVV.NAME,' ',1)+1),length(&VVV.NAME)),' ')
!----Added for fix 597175 Ends

    let $hname=$fname||' '||$lname
  end-If
  Do Update-ERLC-Claim-Contact-Info3($wphone,$hname,$incd)

FROM PS_PERSON_NAME  VVV ,
     PS_EMPLOYMENT     VVVV
WHERE VVV.EMPLID     = VVVV.EMPLID
  AND VVVV.EMPL_RCD = #emplrcd
  AND VVV.EMPLID     = $ccid
end-SELECT

END-PROCEDURE Update-ERLC-Claim-Contact-Info2


!**********************************************************************************************
BEGIN-PROCEDURE Update-ERLC-Claim-Contact-Info3($wphone,$hname,$incd)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Update-ERLC-Claim-Contact-Info3,UPDATE'
BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_ERLC_EC SET CLAIM_CNTCT_NAME=$hname,CLAIM_CNTCT_PHONE=$wphone
WHERE INCIDENT_NBR=$incd
end-SQL
END-PROCEDURE Update-ERLC-Claim-Contact-Info3


!**********************************************************************************************
BEGIN-PROCEDURE Update-ERLC-Disability-Program-Info3($incd,$dissw)
!**********************************************************************************************

begin-SELECT
EEEEE.INCIDENT_NBR
EEEEE.DESCRLONG
 Let $targstr=&EEEEE.DESCRLONG
 Let $outstr=''
  Do StripCR($targstr,$outstr)
  let $targstr=$outstr

 Let $disabdes={ps-substr}($targstr,1,250)
 IF $dissw='N'
  let $disabdes=' '
 End-If
 Do Update-ERLC-Disability-Program-Info-upd($incd,$disabdes)
FROM PS_INC_DISAB_CAN  EEEEE
WHERE EEEEE.INCIDENT_NBR = $incd
end-SELECT
END-PROCEDURE Update-ERLC-Disability-Program-Info3


!**********************************************************************************************
BEGIN-PROCEDURE Update-ERLC-Disability-Program-Info-upd($incd,$disabdes)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Update-ERLC-Disability-Program-Info-upd,UPDATE'
BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_ERLC_EC
SET DISABLED_PGM_DESC=$disabdes
WHERE INCIDENT_NBR = $incd
end-SQL
END-PROCEDURE Update-ERLC-Disability-Program-Info-upd



!**********************************************************************************************
BEGIN-PROCEDURE Stage-ERLO-Table($incd,$incoplc, $scendes,$inctmp,$onroad,
$strtnum,$strtnm,$strtunum,$wcbbox,$wcbrrn,$city,$state,$postal,$country,$exloc)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Stage-ERLO-Table,INSERT'
BEGIN-SQL ON-ERROR=SQL-ERROR
  insert into PS_WCB_ERLO_EC (ECTRANSID,INCIDENT_NBR,INCDNT_OP_LOCN_SW,SCENE_DESCR,INCDNT_TMP_SITE_SW,
                             EMPLOYER_PREMISES,STREET_NBR,STREET_NAME,STREET_UNIT_NBR,WCB_PO_BOX,WCB_RR_NBR,CITY,
                             STATE,POSTAL,COUNTRY,EXACT_LOCATION)
VALUES('EERE',$incd,$incoplc, $scendes,$inctmp,$onroad,
$strtnum,$strtnm,$strtunum,$wcbbox,$wcbrrn,$city,$state,$postal,$country,$exloc)
end-SQL
END-PROCEDURE Stage-ERLO-Table


!**********************************************************************************************
BEGIN-PROCEDURE Stage-ERCA-Table($incd)
!**********************************************************************************************

begin-SELECT
YYYY.HAZARD_ID
YYYY.INCIDENT_CAUSE
 Let $hazid=&YYYY.HAZARD_ID
 If $hazid='00996'
  Let $incz=&YYYY.INCIDENT_CAUSE
 else
  Let $incz=' '
 End-If
 Do ERCA-ins($incd,$hazid,$incz)
FROM PS_INCIDENT_CAUSE YYYY
WHERE YYYY.INCIDENT_NBR = $incd
end-SELECT
END-PROCEDURE Stage-ERCA-Table

BEGIN-PROCEDURE ERCA-ins($incd,$hazid,$incz)

let $sql-statement = 'OHS501BC.SQR,ERCA-ins,INSERT'
BEGIN-SQL ON-ERROR=SQL-ERROR
  insert into PS_WCB_ERCA_EC (ECTRANSID,INCIDENT_NBR,HAZARD_ID,INCIDENT_CAUSE)
VALUES('EERE',$incd,$hazid,$incz)
end-SQL
END-PROCEDURE ERCA-ins

!**********************************************************************************************
BEGIN-PROCEDURE Stage-ERCF-Table($incd)
!**********************************************************************************************

BEGIN-SELECT
ERCF.CONTRIB_FACTOR_CAN
ERCF.OTHER_CF_DESC_CAN
 let $cfcode=&ERCF.CONTRIB_FACTOR_CAN
 let $cfdesc=&ERCF.OTHER_CF_DESC_CAN
 Do Insert-ERCF-Record($incd,$cfcode,$cfdesc)

FROM PS_INC_CONTFAC_CAN ERCF
WHERE ERCF.INCIDENT_NBR = $incd
End-SELECT
END-PROCEDURE Stage-ERCF-Table

!**********************************************************************************************
BEGIN-PROCEDURE Insert-ERCF-Record($incd,$cfcode,$cfdesc)
!*********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Insert-ERCF-Record,INSERT'
begin-SQL ON-ERROR=SQL-ERROR
  insert into PS_WCB_ERCF_EC (ECTRANSID,INCIDENT_NBR,CONTRIB_FACTOR_CAN,OTHER_CF_DESC_CAN)
   VALUES('EERE',$incd, $cfcode,$cfdesc)
end-SQL
END-PROCEDURE Insert-ERCF-Record


!**********************************************************************************************
BEGIN-PROCEDURE Stage-ERPT-Table($incd)
!**********************************************************************************************

begin-SELECT
O.EMPLID
O.NON_EMPLOYEE_ID
O.INCIDENT_NBR
O.COMMENTS
Q.NAME
RRR.EXTRA_ADDRESS_INFO
O.INCIDENT_ROLE
RRR.STREET_NBR
RRR.STREET_NAME
RRR.STREET_UNIT_NBR
RRR.WCB_PO_BOX
RRR.WCB_RR_NBR
Q.CITY
Q.STATE
Q.POSTAL
Q.COUNTRY
O.MGMNT_REP_SW_CAN
O.LABOR_REP_SW_CAN
  Let $nempl=&O.NON_EMPLOYEE_ID
  Let $lname={ps-substr}(&Q.NAME,1,(instr(&Q.NAME,',',1))-1 )
  Let $fname=rtrim({ps-substr}(&Q.NAME,(instr(&Q.NAME,',',1)+1),length(&Q.NAME)),' ')
  if $lname=''
     Let $lname=' '
  end-if
  if $fname=''
     Let $fname=' '
  end-if

  let $targstr=&RRR.EXTRA_ADDRESS_INFO
    Let $outstr=''
    Do StripCR($targstr,$outstr)
    let $targstr=$outstr
    Let $paddinf={ps-substr}($targstr,1,90)
    if $paddinf=''
      Let $paddinf=' '
    end-if

  Let $targstr=&O.COMMENTS
    Let $outstr=''
    Do StripCR($targstr,$outstr)
    let $targstr=$outstr
    Let $nempr={ps-substr}($targstr,1,100)
    if $nempr=''
       Let $nempr=' '
    end-if

  Let $pstrtnum=&RRR.STREET_NBR
  Let $pstrtname=&RRR.STREET_NAME
  Let $pstrtunum=&RRR.STREET_UNIT_NBR
  Let $pwcbbox=&RRR.WCB_PO_BOX
  Let $pwcbrrn=&RRR.WCB_RR_NBR
  Let $pcity=&Q.CITY
  Let $pstate=&Q.STATE
  Let $ppostal=&Q.POSTAL
  Let $pcountry=&Q.COUNTRY
  Let $pphone='   '
  Let $mrep=&O.MGMNT_REP_SW_CAN
  Let $lrep=&O.LABOR_REP_SW_CAN
  Let $irole=&O.INCIDENT_ROLE
  If $irole='IW'
     Let $irole='EW'
  End-If

  if $nempl <>' '
     Do Update-NE-Phone($nempl,$rphone)
     Let $pphone=$rphone
  end-if

    Do Insert-ERPT-Record1($incd,$nempl,$lname,$fname,$paddinf,$nempr,$pstrtnum,$pstrtname,$pstrtunum,$pwcbbox,$pwcbrrn,$pcity,$pstate,$ppostal,$pcountry,$pphone,$mrep,$lrep,$irole)
FROM PS_NE_PERSONAL_DTA Q,
     PS_INCIDENT_PEOPLE O ,
     PS_HS_NE_PERS_DATA RRR
WHERE Q.NON_EMPLOYEE_ID = O.NON_EMPLOYEE_ID
  AND O.EMPLID          = ' '
  AND Q.NON_EMPLOYEE_ID = RRR.NON_EMPLOYEE_ID
  AND O.INCIDENT_ROLE IN ('EW','IN','IW')
  AND O.INCIDENT_NBR = $incd
end-SELECT

begin-SELECT
DDD.EMPLID
   move &DDD.EMPLID to $Emplid
DDD.NON_EMPLOYEE_ID
DDD.INCIDENT_NBR
CCC.NAME
SSS.EXTRA_ADDRESS_INFO
SSS.STREET_NBR
SSS.STREET_NAME
SSS.STREET_UNIT_NBR
SSS.WCB_PO_BOX
SSS.WCB_RR_NBR

     Do Get-Phone-Data ($Emplid, $PersPhone)
DDD.MGMNT_REP_SW_CAN
DDD.LABOR_REP_SW_CAN
DDD.INCIDENT_ROLE

  Let $empl=&DDD.EMPLID
!----Commented for fix 597175 Starts
!  Let $lname={ps-substr}(&CCC.NAME,1,(instr(&CCC.NAME,',',1))-1 )
!  Let $fname=rtrim({ps-substr}(&CCC.NAME,(instr(&CCC.NAME,',',1)+1),length(&CCC.NAME)),' ')
!----Commented for fix 597175 Ends

!----Added for fix 597175 Starts
  Let $lname={ps-substr}(&CCC.NAME,1,(instr(&CCC.NAME,' ',1))-1 )
  Let $fname=rtrim({ps-substr}(&CCC.NAME,(instr(&CCC.NAME,' ',1)+1),length(&CCC.NAME)),' ')
!----Added for fix 597175 Ends

  if $lname=''
     Let $lname=' '
  end-if
  if $fname=''
     Let $fname=' '
  end-if
  IF &SSS.EXTRA_ADDRESS_INFO <> ''
    let $targstr=&SSS.EXTRA_ADDRESS_INFO
    Let $outstr=''
    Do StripCR($targstr,$outstr)
    let $targstr=$outstr
    Let $paddinf={ps-substr}($targstr,1,90)
  ELSE
    let $paddinf=' '
  end-IF
  Let $pstrtnum=&SSS.STREET_NBR
  Let $pstrtname=&SSS.STREET_NAME
  Let $pstrtunum=&SSS.STREET_UNIT_NBR
  Let $pwcbbox=&SSS.WCB_PO_BOX
  Let $pwcbrrn=&SSS.WCB_RR_NBR

     Do Get-Empl-Address ($empl,'HOME', $AddressFound)

   Let $COUNTRY  = $_GETADDR_Country
   let $ADDRESS1 = $_GETADDR_Address1
   let $ADDRESS2 = $_GETADDR_Address2
   let $ADDRESS3 = $_GETADDR_Address3
   let $ADDRESS4 = $_GETADDR_Address4
   let $HOUSE_TYPE = $_GETADDR_HOUSE_TYPE
   let $ADDR_FIELD1 = $_GETADDR_ADDR_FIELD1
   let $ADDR_FIELD2 = $_GETADDR_ADDR_FIELD2
   let $ADDR_FIELD3 = $_GETADDR_ADDR_FIELD3
   let $NUM1 = $_GETADDR_NUM1
   let $NUM2 =$_GETADDR_NUM2
   let $CITY = $_GETADDR_CITY
   let $STATE =$_GETADDR_State
   let $POSTAL = $_GETADDR_POSTAL
   let $COUNTY = $_GETADDR_COUNTY
   let $GEO_CODE =$_GETADDR_GEO_CODE
   let $IN_CITY_LIMIT =$_GETADDR_IN_CITY_LIMIT
  Let $pcity=$CITY
  Let $pstate=$STATE
  Let $ppostal=$POSTAL
  Let $pcountry=$COUNTRY
  Let $pphone=$PersPhone
  Let $mrep=&DDD.MGMNT_REP_SW_CAN
  Let $lrep=&DDD.LABOR_REP_SW_CAN
  Let $irole=&DDD.INCIDENT_ROLE

  If $irole='IW'
     Let $irole='EW'
  End-If

  if $irole <> 'IN'
     Let $lrep=' '
     Let $mrep=' '
  End-if

  Do Insert-ERPT-Record2($incd,$empl,$lname,$fname,$paddinf,$pstrtnum,$pstrtname,$pstrtunum,$pwcbbox,$pwcbrrn,$pcity,$pstate,$ppostal,$pcountry,$pphone,$mrep,$lrep,$irole)
FROM PS_INCIDENT_PEOPLE DDD ,
     PS_PERSON_NAME   CCC,
     PS_HS_PERS_DATA    SSS
WHERE CCC.EMPLID          = DDD.EMPLID
  AND DDD.NON_EMPLOYEE_ID = ' '
  AND CCC.EMPLID          = SSS.EMPLID
  AND DDD.INCIDENT_ROLE   IN ('EW','IN','IW')
  AND DDD.INCIDENT_NBR    = $incd
end-SELECT

begin-SELECT
EEEE.EMPLID
    move &EEEE.EMPLID to $Emplid
EEEE.NON_EMPLOYEE_ID
EEEE.IP_EMPLID_CAN
EEEE.IP_NON_EMPLID_CAN
EEEE.INCIDENT_NBR
FFFF.NAME
GGGG.EXTRA_ADDRESS_INFO
GGGG.STREET_NBR
GGGG.STREET_NAME
GGGG.STREET_UNIT_NBR
GGGG.WCB_PO_BOX
GGGG.WCB_RR_NBR

     Do Get-Phone-Data  ($Emplid, $PersPhone)
EEEE.INJURY_ROLE_CAN
  Let $empl=&EEEE.EMPLID
  Let $ipempl=&EEEE.IP_EMPLID_CAN

!----Commented for fix 597175 Starts
!  Let $lname={ps-substr}(&FFFF.NAME,1,(instr(&FFFF.NAME,',',1))-1 )
!  Let $fname=rtrim({ps-substr}(&FFFF.NAME,(instr(&FFFF.NAME,',',1)+1),length(&FFFF.NAME)),' ')
!----Commented for fix 597175 Ends

!----Added for fix 597175 Starts
  Let $lname={ps-substr}(&FFFF.NAME,1,(instr(&FFFF.NAME,' ',1))-1 )
  Let $fname=rtrim({ps-substr}(&FFFF.NAME,(instr(&FFFF.NAME,' ',1)+1),length(&FFFF.NAME)),' ')
!----Added for fix 597175 Ends

  if $lname=''
     Let $lname=' '
  end-if
  if $fname=''
     Let $fname=' '
  end-if

  IF &GGGG.EXTRA_ADDRESS_INFO <> ''
     let $targstr=&GGGG.EXTRA_ADDRESS_INFO
     Let $outstr=''
     Do StripCR($targstr,$outstr)
     let $targstr=$outstr
     Let $paddinf={ps-substr}($targstr,1,90)
  ELSE
     let $paddinf=' '
  end-IF

  Let $pstrtnum=&GGGG.STREET_NBR
  Let $pstrtname=&GGGG.STREET_NAME
  Let $pstrtunum=&GGGG.STREET_UNIT_NBR
  Let $pwcbbox=&GGGG.WCB_PO_BOX
  Let $pwcbrrn=&GGGG.WCB_RR_NBR

     Do Get-Empl-Address ($Emplid,'HOME', $AddressFound)
   Let $COUNTRY  = $_GETADDR_Country
   let $ADDRESS1 = $_GETADDR_Address1
   let $ADDRESS2 = $_GETADDR_Address2
   let $ADDRESS3 = $_GETADDR_Address3
   let $ADDRESS4 = $_GETADDR_Address4
   let $HOUSE_TYPE = $_GETADDR_HOUSE_TYPE
   let $ADDR_FIELD1 = $_GETADDR_ADDR_FIELD1
   let $ADDR_FIELD2 = $_GETADDR_ADDR_FIELD2
   let $ADDR_FIELD3 = $_GETADDR_ADDR_FIELD3
   let $NUM1 = $_GETADDR_NUM1
   let $NUM2 =$_GETADDR_NUM2
   let $CITY = $_GETADDR_CITY
   let $STATE =$_GETADDR_STATE
   let $POSTAL = $_GETADDR_POSTAL
   let $COUNTY = $_GETADDR_COUNTY
   let $GEO_CODE =$_GETADDR_GEO_CODE
   let $IN_CITY_LIMIT =$_GETADDR_IN_CITY_LIMIT

  Let $pcity=$CITY
  Let $pstate=$State
  Let $ppostal=$Postal
  Let $pcountry=$Country

  Let $pphone=$PersPhone
  Let $irole=&EEEE.INJURY_ROLE_CAN

  if $irole <> 'IN'
     Let $lrep=' '
     Let $mrep=' '
  End-if

  Do Insert-ERPT-Record3($incd,$empl,$lname,$fname,$paddinf,$pstrtnum,$pstrtname,$pstrtunum,$pwcbbox,$pwcbrrn,$pcity,$pstate,$ppostal,$pcountry,$pphone,$mrep,$lrep,$irole,$ipempl)
FROM PS_INJ_PEOPLE_CAN EEEE,
     PS_PERSON_NAME  FFFF,
     PS_HS_PERS_DATA   GGGG
WHERE FFFF.EMPLID            = EEEE.IP_EMPLID_CAN
  AND EEEE.IP_NON_EMPLID_CAN = ' '
  AND EEEE.IP_EMPLID_CAN     = GGGG.EMPLID
  AND EEEE.INJURY_ROLE_CAN   <>'OP'
  AND EEEE.INCIDENT_NBR      = $incd
end-SELECT



begin-SELECT
IIII.EMPLID
IIII.NON_EMPLOYEE_ID
IIII.IP_EMPLID_CAN
IIII.IP_NON_EMPLID_CAN
IIII.INCIDENT_NBR
JJJJ.NAME
KKKK.EXTRA_ADDRESS_INFO
KKKK.STREET_NBR
KKKK.STREET_NAME
KKKK.STREET_UNIT_NBR
KKKK.WCB_PO_BOX
KKKK.WCB_RR_NBR
JJJJ.CITY
JJJJ.STATE
JJJJ.POSTAL
JJJJ.COUNTRY
IIII.INJURY_ROLE_CAN
  Let $empl=&IIII.EMPLID
  Let $ipempl=&IIII.IP_NON_EMPLID_CAN
  Let $lname={ps-substr}(&JJJJ.NAME,1,(instr(&JJJJ.NAME,',',1))-1 )
  Let $fname=rtrim({ps-substr}(&JJJJ.NAME,(instr(&JJJJ.NAME,',',1)+1),length(&JJJJ.NAME)),' ')
  if $lname=''
   Let $lname=' '
  end-if
  if $fname=''
   Let $fname=' '
  end-if
  IF &KKKK.EXTRA_ADDRESS_INFO <> ''
     let $targstr=&KKKK.EXTRA_ADDRESS_INFO
     Let $outstr=''
     Do StripCR($targstr,$outstr)
     let $targstr=$outstr
     Let $paddinf={ps-substr}($targstr,1,90)
  ELSE
     let $paddinf=' '
  end-IF
  Let $pstrtnum=&KKKK.STREET_NBR
  Let $pstrtname=&KKKK.STREET_NAME
  Let $pstrtunum=&KKKK.STREET_UNIT_NBR
  Let $pwcbbox=&KKKK.WCB_PO_BOX
  Let $pwcbrrn=&KKKK.WCB_RR_NBR
  Let $pcity=&JJJJ.CITY
  Let $pstate=&JJJJ.STATE
  Let $ppostal=&JJJJ.POSTAL
  Let $pcountry=&JJJJ.COUNTRY
  Let $pphone='   '
  Let $irole=&IIII.INJURY_ROLE_CAN


  if $ipempl <>' ' or $ipempl <> ''
     Let $nempl=$ipempl
     Do Update-NE-Phone($nempl,$rphone)
     Let $pphone=$rphone
  end-if

  if $irole <> 'IN'
     Let $lrep=' '
     Let $mrep=' '
  End-if

  Do Insert-ERPT-Record4($incd,$empl,$lname,$fname,$paddinf,$pstrtnum,$pstrtname,$pstrtunum,$pwcbbox,$pwcbrrn,$pcity,$pstate,$ppostal,$pcountry,$pphone,$mrep,$lrep,$irole,$ipempl)
FROM PS_INJ_PEOPLE_CAN  IIII ,
     PS_NE_PERSONAL_DTA JJJJ,
     PS_HS_NE_PERS_DATA KKKK
WHERE JJJJ.NON_EMPLOYEE_ID   = IIII.IP_NON_EMPLID_CAN
  AND IIII.IP_EMPLID_CAN     = ' '
  AND IIII.IP_NON_EMPLID_CAN = KKKK.NON_EMPLOYEE_ID
  AND IIII.INCIDENT_NBR      = $incd
end-SELECT


begin-SELECT
IIIII.EMPLID
IIIII.PHYSICIAN_ID
IIIII.INCIDENT_NBR
JJJJJ.NAME
KKKKK.EXTRA_ADDRESS_INFO
KKKKK.STREET_NBR
KKKKK.STREET_NAME
KKKKK.STREET_UNIT_NBR
KKKKK.WCB_PO_BOX
KKKKK.WCB_RR_NBR
JJJJJ.CITY
JJJJJ.STATE
JJJJJ.POSTAL
JJJJJ.COUNTRY
  Let $empl=&IIIII.EMPLID
  Let $ipempl=&IIIII.PHYSICIAN_ID
  Let $lname={ps-substr}(&JJJJJ.NAME,1,(instr(&JJJJJ.NAME,',',1))-1 )
  Let $fname=rtrim({ps-substr}(&JJJJJ.NAME,(instr(&JJJJJ.NAME,',',1)+1),length(&JJJJJ.NAME)),' ')
  if $lname=''
   Let $lname=' '
  end-if
  if $fname=''
   Let $fname=' '
  end-if

  IF &KKKKK.EXTRA_ADDRESS_INFO <> ''
     let $targstr=&KKKKK.EXTRA_ADDRESS_INFO
     Let $outstr=''
     Do StripCR($targstr,$outstr)
     let $targstr=$outstr
     Let $paddinf={ps-substr}($targstr,1,90)
  ELSE
     let $paddinf=' '
  end-IF

  Let $pstrtnum=&KKKKK.STREET_NBR
  Let $pstrtname=&KKKKK.STREET_NAME
  Let $pstrtunum=&KKKKK.STREET_UNIT_NBR
  Let $pwcbbox=&KKKKK.WCB_PO_BOX
  Let $pwcbrrn=&KKKKK.WCB_RR_NBR
  Let $pcity=&JJJJJ.CITY
  Let $pstate=&JJJJJ.STATE
  Let $ppostal=&JJJJJ.POSTAL
  Let $pcountry=&JJJJJ.COUNTRY
  Let $pphone='   '
  Let $irole='HP'
  Let $nempl=' '

  if $irole <> 'IN'
     Let $lrep=' '
     Let $mrep=' '
  End-if

  Do Insert-ERPT-Record5($incd,$empl,$lname,$fname,$paddinf,$pstrtnum,$pstrtname,$pstrtunum,$pwcbbox,$pwcbrrn,$pcity,$pstate,$ppostal,$pcountry,$pphone,$mrep,$lrep,$irole,$ipempl)
FROM PS_INJURY_ILL_ADDR IIIII ,
     PS_NE_PERSONAL_DTA JJJJJ,
     PS_HS_NE_PERS_DATA KKKKK
WHERE JJJJJ.NON_EMPLOYEE_ID = IIIII.PHYSICIAN_ID
  AND JJJJJ.NAME           <> ' '
  AND IIIII.PHYSICIAN_ID    = KKKKK.NON_EMPLOYEE_ID
  AND IIIII.INCIDENT_NBR    = $incd
end-SELECT

END-PROCEDURE Stage-ERPT-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-ERPT-Record1($incd,$nempl,$lname,$fname,$paddinf,$nempr,$pstrtnum,$pstrtname,$pstrtunum,$pwcbbox,$pwcbrrn,$pcity,$pstate,$ppostal,$pcountry,$pphone,$mrep,$lrep,$irole)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Insert-ERPT-Record1,INSERT'

BEGIN-SQL ON-ERROR=SQL-ERROR
insert into PS_WCB_ERPT_EC (ECTRANSID,INCIDENT_NBR, PARTCPNT_TYPE_CD,
EMPLID,PARTICIPANT_ID,LAST_NAME,FIRST_NAME,STREET_NBR,STREET_NAME,STREET_UNIT_NBR,
 WCB_PO_BOX,WCB_RR_NBR,CITY,STATE,POSTAL,COUNTRY,OTHER_ADDR_TXT,
PHONE,INVSTG_LAB_REP,INVSTG_MGMT_REP,NON_EMPL_RESP_TXT)
VALUES ('EERE',$incd,$irole,' ',$nempl,$lname,
$fname,$pstrtnum,$pstrtname,$pstrtunum, $pwcbbox, $pwcbrrn,
 $pcity,$pstate,$ppostal,$pcountry,$paddinf, $pphone,$mrep,
$lrep,$nempr)
end-SQL
END-PROCEDURE Insert-ERPT-Record1


!**********************************************************************************************
BEGIN-PROCEDURE Insert-ERPT-Record2($incd,$empl,$lname,$fname,$paddinf,$pstrtnum,$pstrtname,$pstrtunum,$pwcbbox,$pwcbrrn,$pcity,$pstate,$ppostal,$pcountry,$pphone,$mrep,$lrep,$irole)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Insert-ERPT-Record2,INSERT'

BEGIN-SQL ON-ERROR=SQL-ERROR
  insert into PS_WCB_ERPT_EC (ECTRANSID,INCIDENT_NBR, PARTCPNT_TYPE_CD,
                              EMPLID,PARTICIPANT_ID,LAST_NAME,FIRST_NAME,STREET_NBR,STREET_NAME,STREET_UNIT_NBR,
                              WCB_PO_BOX,WCB_RR_NBR,CITY,STATE,POSTAL,COUNTRY,OTHER_ADDR_TXT,
                              PHONE,INVSTG_LAB_REP,INVSTG_MGMT_REP,NON_EMPL_RESP_TXT)
      VALUES('EERE',$incd,$irole,' ',$empl,$lname,
$fname,$pstrtnum,$pstrtname,$pstrtunum, $pwcbbox, $pwcbrrn,
 $pcity,$pstate,$ppostal,$pcountry,$paddinf,$pphone,$mrep,$lrep,' ')
end-SQL
END-PROCEDURE Insert-ERPT-Record2


!**********************************************************************************************
BEGIN-PROCEDURE Insert-ERPT-Record3($incd,$empl,$lname,$fname,$paddinf,$pstrtnum,$pstrtname,$pstrtunum,$pwcbbox,$pwcbrrn,$pcity,$pstate,$ppostal,$pcountry,$pphone,$mrep,$lrep,$irole,$ipempl)
!**********************************************************************************************

if $irole='IW'
   let $irole='WW'
end-if

let $sql-statement = 'OHS501BC.SQR,Insert-ERPT-Record3,INSERT'

BEGIN-SQL ON-ERROR=SQL-ERROR
  insert into PS_WCB_ERPT_EC (ECTRANSID,INCIDENT_NBR, PARTCPNT_TYPE_CD,
                              EMPLID,PARTICIPANT_ID,LAST_NAME,FIRST_NAME,STREET_NBR,STREET_NAME,STREET_UNIT_NBR,
                              WCB_PO_BOX,WCB_RR_NBR,CITY,STATE,POSTAL,COUNTRY,OTHER_ADDR_TXT,
                              PHONE,INVSTG_LAB_REP,INVSTG_MGMT_REP,NON_EMPL_RESP_TXT)
VALUES('EERE',$incd,$irole,$empl,$ipempl,$lname,
$fname,$pstrtnum,$pstrtname,$pstrtunum, $pwcbbox, $pwcbrrn,
 $pcity,$pstate,$ppostal,$pcountry,$paddinf,$pphone,' ',
' ',' ')
end-SQL

END-PROCEDURE Insert-ERPT-Record3


!**********************************************************************************************
BEGIN-PROCEDURE Insert-ERPT-Record4($incd,$empl,$lname,$fname,$paddinf,$pstrtnum,$pstrtname,$pstrtunum,$pwcbbox,$pwcbrrn,$pcity,$pstate,$ppostal,$pcountry,$pphone,$mrep,$lrep,$irole,$ipempl)
!**********************************************************************************************

if $irole='IW'
   let $irole='WW'
end-if
let $sql-statement = 'OHS501BC.SQR,Insert-ERPT-Record4,INSERT'

BEGIN-SQL ON-ERROR=SQL-ERROR
  insert into PS_WCB_ERPT_EC (ECTRANSID,INCIDENT_NBR, PARTCPNT_TYPE_CD,
                              EMPLID,PARTICIPANT_ID,LAST_NAME,FIRST_NAME,STREET_NBR,STREET_NAME,STREET_UNIT_NBR,
                              WCB_PO_BOX,WCB_RR_NBR,CITY,STATE,POSTAL,COUNTRY,OTHER_ADDR_TXT,
                              PHONE,INVSTG_LAB_REP,INVSTG_MGMT_REP,NON_EMPL_RESP_TXT)
 VALUES('EERE',$incd,$irole,$empl,$ipempl,$lname,
$fname,$pstrtnum,$pstrtname,$pstrtunum, $pwcbbox, $pwcbrrn,
 $pcity,$pstate,$ppostal,$pcountry,$paddinf,$pphone,' ',
' ',' ')
end-SQL
END-PROCEDURE Insert-ERPT-Record4


!**********************************************************************************************
BEGIN-PROCEDURE Insert-EventWitness-Record($incd,$empl,$lname,$fname,$paddinf,$pstrtnum,$pstrtname,$pstrtunum,$pwcbbox,$pwcbrrn,$pcity,$pstate,$ppostal,$pcountry,$pphone,$mrep,$lrep,$irole,$ipempl)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Insert-EventWitness-Record,INSERT'

 BEGIN-SQL ON-ERROR=SQL-ERROR
   insert into PS_WCB_ERPT_EC (ECTRANSID,INCIDENT_NBR, PARTCPNT_TYPE_CD,
                              EMPLID,PARTICIPANT_ID,LAST_NAME,FIRST_NAME,STREET_NBR,STREET_NAME,STREET_UNIT_NBR,
                              WCB_PO_BOX,WCB_RR_NBR,CITY,STATE,POSTAL,COUNTRY,OTHER_ADDR_TXT,
                              PHONE,INVSTG_LAB_REP,INVSTG_MGMT_REP,NON_EMPL_RESP_TXT)
VALUES('EERE',$incd,'EW',' ',$ipempl,$lname,
 $fname,$pstrtnum,$pstrtname,$pstrtunum, $pwcbbox, $pwcbrrn,
  $pcity,$pstate,$ppostal,$pcountry,$paddinf,$pphone,' ',
 ' ',' ')
 end-SQL
End-PROCEDURE Insert-EventWitness-Record
!**********************************************************************************************
BEGIN-PROCEDURE Insert-ERPT-Record5($incd,$empl,$lname,$fname,$paddinf,$pstrtnum,$pstrtname,$pstrtunum,$pwcbbox,$pwcbrrn,$pcity,$pstate,$ppostal,$pcountry,$pphone,$mrep,$lrep,$irole,$ipempl)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Insert-ERPT-Record5,INSERT'

BEGIN-SQL ON-ERROR=SQL-ERROR
  insert into PS_WCB_ERPT_EC (ECTRANSID,INCIDENT_NBR, PARTCPNT_TYPE_CD,
                              EMPLID,PARTICIPANT_ID,LAST_NAME,FIRST_NAME,STREET_NBR,STREET_NAME,STREET_UNIT_NBR,
                              WCB_PO_BOX,WCB_RR_NBR,CITY,STATE,POSTAL,COUNTRY,OTHER_ADDR_TXT,
                              PHONE,INVSTG_LAB_REP,INVSTG_MGMT_REP,NON_EMPL_RESP_TXT)
VALUES('EERE',$incd,$irole,$empl,$ipempl,$lname,
$fname,$pstrtnum,$pstrtname,$pstrtunum, $pwcbbox, $pwcbrrn,
 $pcity,$pstate,$ppostal,$pcountry,$paddinf,$pphone,' ',
' ',' ')
end-SQL
END-PROCEDURE Insert-ERPT-Record5


!**********************************************************************************************
BEGIN-PROCEDURE Update-NE-Phone($nempl,:$rphone)

let $phtype=' '
let $nphone=' '

begin-SELECT LOOPS=1
UNEP.NON_EMPLOYEE_ID
UNEP.PHONE_TYPE
UNEP.PHONE
 Let $phtype=&UNEP.PHONE_TYPE
 Let $nphone=&UNEP.PHONE
FROM  PS_NE_PERS_PHONE UNEP
WHERE UNEP.NON_EMPLOYEE_ID = $nempl
ORDER BY UNEP.PHONE_TYPE
End-SELECT

If $nphone <>''
 Let $rphone=$nphone
Else
 Let $rphone=' '
End-if
END-PROCEDURE Update-NE-Phone

!**********************************************************************************************
BEGIN-PROCEDURE Stage-ERPA-Table($incd)
!**********************************************************************************************

BEGIN-SELECT
ERPA.PREVENT_ACT_CD_CAN
ERPA.OTHER_PREV_DESCR
 let $pacc=&ERPA.PREVENT_ACT_CD_CAN
 let $pacd=&ERPA.OTHER_PREV_DESCR
 Do Insert-ERPA-Record($incd,$pacc,$pacd)
FROM PS_INC_ACTION_P_VW ERPA
WHERE ERPA.PREVENT_ACT_CD_CAN <> ' '
  AND ERPA.INCIDENT_NBR        = $incd
end-SELECT
END-PROCEDURE Stage-ERPA-Table

!**********************************************************************************************
BEGIN-PROCEDURE Insert-ERPA-Record($incd,$pacc,$pacd)
!**********************************************************************************************

begin-SQL ON-ERROR=SQL-ERROR
  insert into PS_WCB_ERPA_EC (ECTRANSID,INCIDENT_NBR,PREVENT_ACTN_CD,OTHER_PREV_DESCR)
                     VALUES('EERE',$incd,$pacc,$pacd)
end-SQL
END-PROCEDURE Insert-ERPA-Record


!**********************************************************************************************
BEGIN-PROCEDURE Stage-ERFA-Table($incd)
!**********************************************************************************************

Let #acsq=0
let $coracc = ' '

BEGIN-SELECT
AB.ACTION_SEQUENCE
AB.CORRECTIVE_ACTION
  let $targstr=&AB.CORRECTIVE_ACTION
  Let $outstr=''
  Do StripCR($targstr,$outstr)
  let $targstr=$outstr
  Let $coracc=$targstr
  Let #acsq=#acsq+1
  Do Insert_ERFA_Record($incd,#acsq,$coracc)
FROM PS_INC_ACTION_C_VW AB
WHERE AB.INCIDENT_NBR = $incd
End-Select
END-PROCEDURE Stage-ERFA-Table

!**********************************************************************************************
Begin-Procedure Insert_ERFA_Record($incd,#acsq,$coracc)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Insert_ERFA_Record,INSERT'
BEGIN-SQL ON-ERROR=SQL-ERROR
INSERT INTO PS_WCB_ERFA_EC (ECTRANSID,INCIDENT_NBR,ACTION_SEQUENCE,CORRECTIVE_ACTION)
                  VALUES('EERE',$incd,#acsq,$coracc)
END-SQL

End-Procedure Insert_ERFA_Record


!**********************************************************************************************
BEGIN-PROCEDURE Stage-INWO-Table($incd)
!**********************************************************************************************

begin-SELECT
C.INCIDENT_NBR
D.EMPLID
D.NAME

 !----Commented for fix 597175 Starts
 !Let $lname={ps-substr}(&D.NAME,1,(instr(&D.NAME,',',1))-1 )
 !Let $fname=rtrim({ps-substr}(&D.NAME,(instr(&D.NAME,',',1)+1),length(&D.NAME)),' ')
 !----Commented for fix 597175 Ends

 !----Added for fix 597175 Starts
  Let $lname={ps-substr}(&D.NAME,1,(instr(&D.NAME,' ',1))-1 )
  Let $fname=rtrim({ps-substr}(&D.NAME,(instr(&D.NAME,' ',1)+1),length(&D.NAME)),' ')
 !----Added for fix 597175 Ends

 Let $mname='  '
 Let $empl=&D.EMPLID

 do Insert-INWO-Record($empl,$incd,$lname,$fname,$mname)
FROM  PS_INJURY_ILL C,
      PS_PERSON_NAME D
WHERE C.EMPLID       = D.EMPLID
  AND C.INCIDENT_NBR = $incd
end-SELECT

END-PROCEDURE Stage-INWO-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-INWO-Record($empl,$incd,$lname,$fname,$mname)
!**********************************************************************************************

Begin-SELECT
CA.INCIDENT_NBR
CA.EMPLID
     move &CA.EMPLID to $Emplid
C2.STREET_NBR
C2.STREET_NAME
C2.STREET_UNIT_NBR
C2.WCB_PO_BOX
C2.WCB_RR_NBR
      Do Get-Empl-Address ($Emplid,'HOME', $AddressFound)

   Let $COUNTRY  = $_GETADDR_Country
   let $ADDRESS1 = $_GETADDR_Address1
   let $ADDRESS2 = $_GETADDR_Address2
   let $ADDRESS3 = $_GETADDR_Address3
   let $ADDRESS4 = $_GETADDR_Address4
   let $HOUSE_TYPE = $_GETADDR_HOUSE_TYPE
   let $ADDR_FIELD1 = $_GETADDR_ADDR_FIELD1
   let $ADDR_FIELD2 = $_GETADDR_ADDR_FIELD2
   let $ADDR_FIELD3 = $_GETADDR_ADDR_FIELD3
   let $NUM1 = $_GETADDR_NUM1
   let $NUM2 =$_GETADDR_NUM2
   let $CITY = $_GETADDR_CITY
   let $STATE =$_GETADDR_STATE
   let $POSTAL = $_GETADDR_POSTAL
   let $COUNTY = $_GETADDR_COUNTY
   let $GEO_CODE =$_GETADDR_GEO_CODE
   let $IN_CITY_LIMIT =$_GETADDR_IN_CITY_LIMIT

       Do Get-Phone-Data  ($Emplid, $PersPhone)
       Do Get-Person
       Do Get-Pers_Data_Effdt  ($Emplid, $Pers_Data_Sex, $Pers_Data_Health_Care_Nbr)
CE.NATIONAL_ID,
C2.EXTRA_ADDRESS_INFO

 Let $stnum=&C2.STREET_NBR
 Let $stnam=&C2.STREET_NAME
 Let $sunum=&C2.STREET_UNIT_NBR
 Let $wcbbox=&C2.WCB_PO_BOX
 Let $wcbrr=&C2.WCB_RR_NBR
 Let $phone=$PersPhone
!---Commented for resolution 618855 Starts
 !Let $sex=$_Pers_Data_Sex
!---Commented for resolution 618855 Ends

!---Added for Resolution 618855 Starts
 Let $sex=$Pers_Data_Sex
!---Added for Resolution 618855 Ends

    do Format-DateTime($Pers_BirthDate,$birthdate, {DEFCMP},'','')
    do Format-DateTime($Pers_Dt_Of_Death,$deathdt, {DEFCMP},'','')

 Let $natid=&CE.NATIONAL_ID,
!---Commented for resolution 618855 Starts
 !Let $hcnum=$_Pers_Data_Health_Care_Nbr
!---Commented for resolution 618855 Ends

!---Added for Resolution 618855 Starts
 Let $hcnum=$Pers_Data_Health_Care_Nbr
!---Added for Resolution 618855 Ends

 if &C2.EXTRA_ADDRESS_INFO > ''
   Let $targstr=&C2.EXTRA_ADDRESS_INFO
      Let $outstr=''
      Do StripCR($targstr,$outstr)
      let $targstr=$outstr
      Let $paddinf=$targstr
 else
   let $paddinf = ' '
 end-if

  Do Insert-INWO-Record2($incd,$empl,$lname,$fname,$mname ,$stnum,$stnam,$sunum,$wcbbox,$wcbrr,$city,$state,$postal,$country,$phone,$sex,$birthdate,$deathdt,$natid,$hcnum,$paddinf)

FROM PS_INJURY_ILL    CA,
     PS_HS_PERS_DATA  C2,
     PS_PERS_NID      CE
WHERE C2.EMPLID       = CA.EMPLID
  AND CE.EMPLID       = CA.EMPLID
  AND CE.COUNTRY      = 'CAN'
  AND CA.INCIDENT_NBR = $incd
  AND CA.EMPLID       = $empl
End-Select
END-PROCEDURE Insert-INWO-Record


!**********************************************************************************************
Begin-Procedure Insert-INWO-Record2($incd,$empl,$lname,$fname,$mname ,$stnum,$stnam,$sunum,$wcbbox,$wcbrr,$city,$state,$postal,$country,$phone,$sex,$birthdate,$deathdt,$natid,$hcnum,$paddinf)
!**********************************************************************************************

if $birthdate=''
 let $birthdate=' '
end-if
Do Search-WOIN-Injury-Type($incd,$empl,$outtyp)
if $outtyp <>'FAT'
 Let $deathdt=''
end-if
if $deathdt=''
 let $deathdt=' '
end-if

   let $sql-statement = 'OHS501BC.SQR,Insert-INWO-Record2,INSERT'
#ifdef INFORMIX
  let $long = $paddinf
  let $paddinf = ''
#endif

   BEGIN-SQL ON-ERROR=SQL-ERROR
   INSERT INTO PS_WCB_INWO_EC (ECTRANSID,INCIDENT_NBR,EMPLID,LAST_NAME,FIRST_NAME,MIDDLE_NAME,STREET_NBR,STREET_NAME,
                            STREET_UNIT_NBR,WCB_PO_BOX,WCB_RR_NBR,CITY,STATE,POSTAL,COUNTRY,PHONE,SEX,BIRTHDATE_C,
                            DT_OF_DEATH_C,SIN,HEALTH_CARE_NBR,EXTRA_ADDRESS_INFO)
   VALUES('EERE',$incd,$empl,$lname,$fname,$mname ,$stnum,$stnam,
   $sunum,$wcbbox,$wcbrr,$city,$state,$postal,$country,$phone,$sex,
   $birthdate,$deathdt,$natid,$hcnum,$paddinf)
   End-SQL

#ifdef INFORMIX
  if $long > ' '
     let $sql-statement = 'OHS501BC.SQR,Insert-INWO-Record2,UPDATE,PS_WCB_INWO_EC'
     Begin-SQL ON-ERROR=SQL-ERROR
     UPDATE PS_WCB_INWO_EC
     SET  EXTRA_ADDRESS_INFO  = (( SELECT EXTRA_ADDRESS_INFO FROM PS_HS_PERS_DATA
                              WHERE EMPLID = $empl ))
     WHERE INCIDENT_NBR = $Incd
     AND  EMPLID = $empl
     END-SQL
   end-if
  let $long = ''
#endif


End-Procedure Insert-INWO-Record2


!**********************************************************************************************
BEGIN-PROCEDURE Stage-CCAD-Table($incd)
!**********************************************************************************************

begin-SELECT
KKKKK.INCIDENT_NBR
LLLLL.STREET_NBR
LLLLL.STREET_NAME
LLLLL.STREET_UNIT_NBR
LLLLL.WCB_PO_BOX
LLLLL.WCB_RR_NBR
LLLLL.CITY
LLLLL.STATE
LLLLL.POSTAL
LLLLL.COUNTRY
LLLLL.MAIL_DROP
KKKKK.EMPLID
 let $strtnm=&LLLLL.STREET_NBR
 let $strtnme=&LLLLL.STREET_NAME
 let $stunum=&LLLLL.STREET_UNIT_NBR
 let $wcbpo=&LLLLL.WCB_PO_BOX
 let $wcbrr=&LLLLL.WCB_RR_NBR
 let $city=&LLLLL.CITY
 let $state=&LLLLL.STATE
 let $postal=&LLLLL.POSTAL
 let $country=&LLLLL.COUNTRY

    let $maildrop=&LLLLL.MAIL_DROP


 let $empl=&KKKKK.EMPLID
 DO Insert-CCAD-Record($incd,$empl,$strtnm,$strtnme,$stunum,$wcbpo,$wcbrr,$city,$state,$postal,$country,$maildrop)
FROM PS_INJ_CLMADDR_CAN LLLLL,
     PS_INJURY_CLM_MGMT KKKKK
WHERE KKKKK.CONTACT_ID   = LLLLL.CONTACT_ID AND
      KKKKK.INCIDENT_NBR = $incd
end-SELECT
END-PROCEDURE Stage-CCAD-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-CCAD-Record($incd,$empl,$strtnm,$strtnme,$stunum,$wcbpo,$wcbrr,$city,$state,$postal,$country,$maildrop)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Insert-CCAD-Record,INSERT'

BEGIN-SQL ON-ERROR=SQL-ERROR
  insert into PS_WCB_CCAD_EC (ECTRANSID,INCIDENT_NBR,EMPLID,STREET_NBR,STREET_NAME,
                            STREET_UNIT_NBR,WCB_PO_BOX,WCB_RR_NBR,CITY,STATE,POSTAL,COUNTRY,MAIL_DROP,EXTRA_ADDRESS_INFO)
VALUES('EERE',$incd,$empl,$strtnm,$strtnme,$stunum,$wcbpo,
$wcbrr,$city,$state,$postal,$country,$maildrop, null)
end-SQL




END-PROCEDURE Insert-CCAD-Record


!**********************************************************************************************
BEGIN-PROCEDURE Stage-WOIN-Table($incd)
!**********************************************************************************************

begin-SELECT
FF.INCIDENT_NBR
FF.EMPLID
FF.INJURY_TIME
FF.EXPOSURE_ST_TM
FF.EXPOSURE_END_TM
FF.INJURY_DATE
FF.PRIOR_DISAB_SW
FF.EMPLOYER_OBJECT_SW
FF.EXPOSURE_ST_DT
FF.EXPOSURE_END_DT
FF.NEAREST_HOSP_DIST
FF.NEAREST_HOSP_NAME
FF.NEAREST_PRACT_DIST
FF.PRIOR_HLTH_COND_SW
FF.CLASS_SUBCLASS
FF.INJ_OUTCOME_CAN
FF.SCENE_DESCR
FF.BUSINESS_TYPE
FF.DATE_TIME_EXACT_SW
FF.WITNESS_CONFIRM_SW
FF.COST_CENTER_CAN
 Let $empl=&FF.EMPLID
 Let $injtime=Edit(&FF.INJURY_TIME,'HH:MI')
 Let $xsttime=Edit(&FF.EXPOSURE_ST_TM,'HH:MI')
 Let $xndtime=Edit(&FF.EXPOSURE_END_TM,'HH:MI')
 Let $injdate=&FF.INJURY_DATE
 If $injdate <>''
    do Format-DateTime(&FF.INJURY_DATE,$injdatec, {DEFCMP},'','')
 Else
   Let $injdatec=' '
 end-if
 Let $pdsw=&FF.PRIOR_DISAB_SW
 Let $eosw=&FF.EMPLOYER_OBJECT_SW
 If &FF.EXPOSURE_ST_DT <>''
    do Format-DateTime(&FF.EXPOSURE_ST_DT ,$xstdt, {DEFCMP},'','')
 else
   let $xstdt=' '
 end-if
 If &FF.EXPOSURE_END_DT <>''
    do Format-DateTime(&FF.EXPOSURE_END_DT ,$xenddt, {DEFCMP},'','')
 else
    Let $xenddt=' '
 end-if
 Let #nhospd=&FF.NEAREST_HOSP_DIST*100
 Let $nhospn=&FF.NEAREST_HOSP_NAME
 Let #npracd=&FF.NEAREST_PRACT_DIST*100
 Let $phsw=&FF.PRIOR_HLTH_COND_SW
 Let #clsub=&FF.CLASS_SUBCLASS
 Let $eoutc=&FF.INJ_OUTCOME_CAN
 If rtrim($eoutc,' ')='RPO'
  Let $eosw='N'
 End-if
 Let $dtesw=&FF.DATE_TIME_EXACT_SW
 Let $scendes=&FF.SCENE_DESCR
 Let $bustp=&FF.BUSINESS_TYPE
 Let $witconsw=&FF.WITNESS_CONFIRM_SW
 Let $cccan=&FF.COST_CENTER_CAN
 If $xstdt > '1900-01-01' and $injdatec >'1900-01-01'
  Let $injdate=''
  let $injdatec=' '
  Let $injtime=''
 End-if
 Do Insert-WOIN-Record($incd,$empl,$injtime,$xsttime,$xndtime,$injdate,$pdsw,$eosw,$xstdt,$xenddt,#nhospd,$nhospn,#npracd,$phsw,$dtesw,#clsub,$scendes,$eoutc,$bustp,$witconsw,$cccan,$injdatec)
 Do Update-WOIN-Aid-Info($incd,$empl)
 Do Update-WOIN-Accident-Type-Info($incd,$empl)
 Do Update-WOIN-Hospital-Name-Info($incd,$empl)
 DO Update-WOIN-Non-Emp-Resp-Info($incd,$empl)
 Do Update-WOIN-Witness-Info($incd,$empl)
 DO Update-WOIN-Claim-Info($incd,$empl)
FROM PS_INJURY_ILL_VW FF
WHERE FF.INCIDENT_NBR = $incd
end-Select

begin-SELECT
J.INCIDENT_NBR
J.EMPLID
J.DESCRLONG
  if &J.DESCRLONG > ''
     let $targstr=&J.DESCRLONG
     Let $outstr=''
     Do StripCR($targstr,$outstr)
     let $targstr=$outstr
     Let $prevdis={ps-substr}($targstr,1,250)
  else
     let $prevdis = ' '
  end-if

 Let $incd=&J.INCIDENT_NBR
 Let $empl=&J.EMPLID
 Do Insert-WOIN-Record1($incd,$empl,$prevdis)
FROM PS_INJ_ILL_PDS_CAN J
end-SELECT

begin-SELECT
E.INCIDENT_NBR
E.EMPLID
E.DESCRLONG
  if &E.DESCRLONG > ''
    let $targstr=&E.DESCRLONG
    Let $outstr=''
    Do StripCR($targstr,$outstr)
    let $targstr=$outstr
    Let $prevhlth={ps-substr}($targstr,1,250)
  else
    let $prevhlth = ' '
  end-if
 Let $incd=&E.INCIDENT_NBR
 Let $empl=&E.EMPLID
 Do Insert-WOIN-Record2($incd,$empl,$prevhlth)
FROM PS_INJ_ILL_PHC_CAN E
end-SELECT
END-PROCEDURE Stage-WOIN-Table


!**********************************************************************************************
BEGIN-PROCEDURE Update-WOIN-Accident-Type-Info($incd,$empl)
!**********************************************************************************************

begin-SELECT
CCCC.INCIDENT_NBR
CCCC.EMPLID
CCCC.ACCIDENT_TYPE_CD
 If &CCCC.ACCIDENT_TYPE_CD <>' '
  Let $acctpcd=&CCCC.ACCIDENT_TYPE_CD
  do Update-WOIN-Accident-Type-Info2($incd,$empl,$acctpcd)
 End-if
FROM PS_INJURY_ILL_ACC CCCC
WHERE CCCC.INCIDENT_NBR = $incd
  AND CCCC.EMPLID       = $empl
end-SELECT
END-PROCEDURE Update-WOIN-Accident-Type-Info


!**********************************************************************************************
BEGIN-PROCEDURE Update-WOIN-Accident-Type-Info2($incd,$empl,$acctpcd)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Update-WOIN-Accident-Type-Info2,UPDATE'
BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_WOIN_EC
SET ACCIDENT_TYPE_CD=$acctpcd
WHERE INCIDENT_NBR = $incd
  AND EMPLID       = $empl
end-SQL
END-PROCEDURE Update-WOIN-Accident-Type-Info2


!**********************************************************************************************
BEGIN-PROCEDURE Update-WOIN-Non-Emp-Resp-Info($incd,$empl)
!**********************************************************************************************

begin-SELECT
FFFFF.INCIDENT_NBR
FFFFF.EMPLID
FFFFF.PARTICIPANT_ID
FFFFF.PARTCPNT_TYPE_CD
GGGGG.NON_EMPLOYEE_ID
 do update_nonemp_flag($incd,$empl)
FROM PS_WCB_ERPT_EC     FFFFF,
     PS_NE_PERSONAL_DTA GGGGG
WHERE FFFFF.PARTICIPANT_ID   = GGGGG.NON_EMPLOYEE_ID AND
      FFFFF.PARTCPNT_TYPE_CD = 'OP' AND
      FFFFF.INCIDENT_NBR     = $incd AND
      FFFFF.EMPLID           = $empl
end-SELECT
END-PROCEDURE Update-WOIN-Non-Emp-Resp-Info


!**********************************************************************************************
BEGIN-PROCEDURE Update-WOIN-Witness-Info($incd,$empl)
!**********************************************************************************************

begin-SELECT
HHHHH.INCIDENT_NBR
HHHHH.EMPLID
HHHHH.PARTICIPANT_ID
HHHHH.PARTCPNT_TYPE_CD
 do update_witness_flag($incd,$empl)

FROM PS_WCB_ERPT_EC HHHHH
WHERE HHHHH.PARTCPNT_TYPE_CD = 'WW' AND
      HHHHH.INCIDENT_NBR     = $incd AND
      HHHHH.EMPLID           = $empl
end-SELECT
END-PROCEDURE Update-WOIN-Witness-Info



!**********************************************************************************************
BEGIN-PROCEDURE Update-WOIN-Claim-Info($incd,$empl)
!**********************************************************************************************

begin-SELECT
GGGGG.INCIDENT_NBR
GGGGG.EMPLID
GGGGG.CLAIM_NBR_CAN

 let #clmnbrcan=&GGGGG.CLAIM_NBR_CAN
 if #clmnbrcan <> 0
  do Insert-WOIN-Claim-Info($incd,$empl,#clmnbrcan)
 end-if

FROM PS_INJURY_CLM_MGMT GGGGG
WHERE GGGGG.INCIDENT_NBR = $incd
  AND GGGGG.EMPLID       = $empl
end-SELECT
END-PROCEDURE Update-WOIN-Claim-Info


!**********************************************************************************************
BEGIN-PROCEDURE Insert-WOIN-Claim-Info($incd,$empl,#clmnbrcan)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Insert-WOIN-Claim-Info,UPDATE'
BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_WOIN_EC
SET WCB_CLAIM_NBR = #clmnbrcan
WHERE INCIDENT_NBR = $incd
  AND EMPLID       = $empl
end-sql
END-PROCEDURE Insert-WOIN-Claim-Info


!**********************************************************************************************
BEGIN-PROCEDURE update_nonemp_flag($incd,$empl)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,update_nonemp_flag,UPDATE'
BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_WOIN_EC
SET NONEMPL_RESP_IND='Y'
WHERE INCIDENT_NBR = $incd
  AND EMPLID       = $empl
end-SQL
END-PROCEDURE update_nonemp_flag


!**********************************************************************************************
BEGIN-PROCEDURE update_witness_flag($incd,$empl)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,update_witness_flag,UPDATE'
BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_WOIN_EC
SET INJURY_WITNESS='Y'
WHERE INCIDENT_NBR = $incd
  AND EMPLID       = $empl
end-SQL
END-PROCEDURE update_nonemp_flag


!**********************************************************************************************
BEGIN-PROCEDURE Insert-WOIN-Record($incd,$empl,$injtime,$xsttime,$xndtime,$injdate,$pdsw,$eosw,$xstdt,$xenddt,#nhospd,$nhospn,#npracd,$phsw,$dtesw,#clsub,$scendes,$eoutc,$bustp,$witconsw,$cccan,$injdatec)
!**********************************************************************************************

if $injtime=''
 let $injtime=' '
end-if
if $xsttime=''
 let $xsttime=' '
end-if
if $xndtime=''
 let $xndtime=' '
end-if
let $sql-statement = 'OHS501BC.SQR,Insert-WOIN-Record,INSERT'
BEGIN-SQL ON-ERROR=SQL-ERROR
INSERT into PS_WCB_WOIN_EC (ECTRANSID,INCIDENT_NBR,EMPLID,WRKR_INJ_DT,WRKR_INJ_DT_C,
WRKR_INJ_TM5,DT_TIME_EXACT_SW,
CLASS_SUBCLASS,
SCENE_DESCR,
CUST_COST_CENTRE,
DISAB_PRIOR_INJ,
DISAB_DESCR,
EMPR_OBJECT,
EVENT_OUTCOME,
WRKR_EXP_ST_DT_C,
WRKR_EXP_ST_TM5,
WRKR_EXP_END_DT_C,
WRKR_EXP_END_TM5,
HOSPITAL,
NEAR_HOSP_DIS_WCB,
NEAREST_HOSP_NAME,
NEAR_PRACT_DIS_WCB,
NONEMPL_RESP_IND,
WRKR_PRE_HEALTH,
WRKR_PRE_DESCR,
WRKR_MED_ATTN,
TREATMENT_DT_CH,
TREATMENT_TM5,
WITNESS_CONF_STMT,
INJURY_WITNESS,
WCB_CLAIM_NBR,
ACCIDENT_TYPE_CD,
BUS_INJ_DESCR_CAN,
FIRST_AID)
VALUES('EERE',$incd,$empl,$injdate,$injdatec,$injtime,$dtesw,
#clsub,$scendes,$cccan,$pdsw,' ',$eosw,$eoutc,$xstdt,$xsttime,
$xenddt,$xndtime,' ',#nhospd,$nhospn,#npracd,'N',$phsw,' ','N',
' ',' ',$witconsw,'N',0,' ',$bustp,'N')
end-SQL
END-PROCEDURE Insert-WOIN-Record


!**********************************************************************************************
BEGIN-PROCEDURE Insert-WOIN-Record1($incd,$empl,$prevdis)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Insert-WOIN-Record1,INSERT'
BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_WOIN_EC
SET DISAB_DESCR = $prevdis
WHERE INCIDENT_NBR = $incd
  AND EMPLID       = $empl
end-SQL
END-PROCEDURE Insert-WOIN-Record1


!**********************************************************************************************
BEGIN-PROCEDURE Insert-WOIN-Record2($incd,$empl,$prevhlth)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Insert-WOIN-Record2,INSERT'
BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_WOIN_EC
SET WRKR_PRE_DESCR = $prevhlth
WHERE INCIDENT_NBR = $incd
  AND EMPLID       = $empl
end-SQL
END-PROCEDURE Insert-WOIN-Record2


!**********************************************************************************************
BEGIN-PROCEDURE Update-WOIN-Medical-Aid-Info($incd,$empl,$trtdt,$trttime)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Update-WOIN-Medical-Aid-Info,UPDATE'
if $trtdt=' '
 let $trtdt=''
end-if
BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_WOIN_EC
SET WRKR_MED_ATTN = 'Y',
    TREATMENT_DT_CH = $trtdt,
    TREATMENT_TM5   = $trttime
WHERE INCIDENT_NBR = $incd
  AND EMPLID       = $empl
end-SQL
END-PROCEDURE Update-WOIN-Medical-Aid-Info


!**********************************************************************************************
BEGIN-PROCEDURE Update-WOIN-Aid-Info($incd,$empl)
!**********************************************************************************************

Let #f_aid_cntr=0
Begin-SELECT
TTT.INCIDENT_NBR
TTT.EMPLID
TTT.TREATMENT_TYPE
  Let #f_aid_cntr=#f_aid_cntr+1
FROM PS_INJURY_ILL_AID TTT
WHERE TTT.INCIDENT_NBR   = $incd
  AND TTT.EMPLID         = $empl
  AND TTT.TREATMENT_TYPE ='FA'
End-SELECT

If #f_aid_cntr>0
 Do Update-WOIN-First-Aid-Info($incd,$empl)
End-if

Begin-SELECT
BBBB.INCIDENT_NBR
BBBB.EMPLID
BBBB.TREATMENT_TYPE
BBBB.TREATMENT_DT
BBBB.TREATMENT_TM
 If &BBBB.TREATMENT_TM=''
  Let $trttime='   '
 else
  Let $trttime=Edit(&BBBB.TREATMENT_TM,'HH:MI')
 end-if
 If &BBBB.TREATMENT_DT <>''
    do Format-DateTime(&BBBB.TREATMENT_DT ,$trtdt, {DEFCMP},'','')
   If $trtdt=''
     let $trtdt=' '
    End-if
   Do Update-WOIN-Medical-Aid-Info($incd,$empl,$trtdt,$trttime)
 End-if

FROM PS_INJURY_ILL_AID BBBB
WHERE BBBB.INCIDENT_NBR   = $incd
  AND BBBB.EMPLID         = $empl
  AND BBBB.TREATMENT_TYPE = 'MD'
  AND BBBB.TREATMENT_DT   =
      (SELECT MAX(TREATMENT_DT)
       FROM PS_INJURY_ILL_AID
       WHERE BBBB.INCIDENT_NBR=INCIDENT_NBR AND
             BBBB.EMPLID=EMPLID AND
             BBBB.TREATMENT_TM=
                  (SELECT MAX(TREATMENT_TM)
                   FROM PS_INJURY_ILL_AID
                   WHERE BBBB.INCIDENT_NBR = INCIDENT_NBR
                     AND BBBB.EMPLID       = EMPLID )
       )
end-SELECT
END-PROCEDURE Update-WOIN-Aid-Info


!**********************************************************************************************
BEGIN-PROCEDURE Update-WOIN-First-Aid-Info($incd,$empl)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Update-WOIN-First-Aid-Info,UPDATE'
BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_WOIN_EC
SET FIRST_AID='Y'
WHERE INCIDENT_NBR = $incd
  AND EMPLID       = $empl
end-SQL
END-PROCEDURE Update-WOIN-First-Aid-Info


!**********************************************************************************************
BEGIN-PROCEDURE Update-WOIN-Hospital-Name-Info($incd,$empl)
!**********************************************************************************************

begin-SELECT
DDDD.INCIDENT_NBR
DDDD.EMPLID
DDDD.HOSPITAL

 Let $hospname=&DDDD.HOSPITAL
 If $hospname <>' '
  Do Update-WOIN-Hospital-Name-Info2($incd,$empl,$hospname)
 End-if

FROM PS_INJURY_ILL_ADDR DDDD
WHERE DDDD.INCIDENT_NBR = $incd
  and DDDD.EMPLID       = $empl
end-SELECT
END-PROCEDURE Update-WOIN-Hospital-Name-Info


!**********************************************************************************************
BEGIN-PROCEDURE Update-WOIN-Hospital-Name-Info2($incd,$empl,$hospname)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Update-WOIN-Hospital-Name-Info2,UPDATE'
BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_WOIN_EC
SET HOSPITAL=$hospname
WHERE INCIDENT_NBR = $incd
  AND EMPLID       = $empl
end-SQL
END-PROCEDURE Update-WOIN-Hospital-Name-Info2


!**********************************************************************************************
BEGIN-PROCEDURE Stage-WODT-Table($incd)
!**********************************************************************************************

Let #sqnm=1
Let $oemp=' '

begin-SELECT
PPPP.INCIDENT_NBR
PPPP.EMPLID
PPPP.INJURY_NATURE_CD
PPPP.BODY_PART_CD
OOOO.SIDE_OF_BODY

 Let $empl=&PPPP.EMPLID
 If $empl=$oemp
  let #sqnm=#sqnm+1
 else
  Let $oemp=$empl
  Let #sqnm=1
 End-if
 Let $injcd=&PPPP.INJURY_NATURE_CD
 Let $bpcd=&PPPP.BODY_PART_CD
 Let $sob=&OOOO.SIDE_OF_BODY
 Do Insert-WODT-Record($incd,$empl,#sqnm,$injcd,$bpcd,$sob)

FROM PS_INJ_ILL_BPI_CAN PPPP,
     PS_INJURY_ILL_BP   OOOO
WHERE PPPP.EMPLID          = OOOO.EMPLID
  AND PPPP.EMPL_RCD       = OOOO.EMPL_RCD
  AND PPPP.NON_EMPLOYEE_ID = OOOO.NON_EMPLOYEE_ID
  AND PPPP.INCIDENT_NBR    = OOOO.INCIDENT_NBR
  AND PPPP.BODY_PART_CD    = OOOO.BODY_PART_CD
  AND PPPP.INCIDENT_NBR    = $incd
end-SELECT
END-PROCEDURE Stage-WODT-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-WODT-Record($incd,$empl,#sqnm,$injcd,$bpcd,$sob)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Insert-WODT-Record,INSERT'
BEGIN-SQL ON-ERROR=SQL-ERROR
INSERT INTO PS_WCB_WODT_EC  (ECTRANSID,
INCIDENT_NBR,
EMPLID,
SEQNUM_WODT_WCB,
WCB_INJ_NATURE,
WCB_BODY_PART,
SIDE_OF_BODY)
VALUES('EERE',$incd,$empl,#sqnm,$injcd,$bpcd,$sob)
end-SQL
END-PROCEDURE Insert-WODT-Record


!**********************************************************************************************
BEGIN-PROCEDURE Stage-WOSO-Table($incd)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Stage-WOSO-Table,INSERT'
BEGIN-SQL ON-ERROR=SQL-ERROR
INSERT INTO PS_WCB_WOSO_EC  (ECTRANSID,
INCIDENT_NBR,
EMPLID,INJURY_SOURCE_CD,
WCB_FILR1,
WCB_FILR2,
PRIMARY_INJURY)
SELECT 'EERE',A.INCIDENT_NBR, A.EMPLID, A.INJURY_SOURCE_CD, ' ',' ',A.PRIMARY_INJURY
FROM PS_INJURY_ILL_SOI A
WHERE A.INCIDENT_NBR = $incd
end-SQL
END-PROCEDURE Stage-WOSO-Table


!**********************************************************************************************
BEGIN-PROCEDURE Stage-EMDE-Table($incd)
!**********************************************************************************************

Let $lname='    '
Let $fname='    '
Let $rpttm='     '

BEGIN-SELECT
M.INCIDENT_NBR
M.TM_REPORTED
M.DT_REPORTED
M.DESIG_POSTYP_CD
M.FIRST_DESIGNATE_SW
M.OTHER_DESIG_DESCR
M.FIRST_AID_CERT_NBR
M.SEQUENCE_NBR
M.EMPLID
L.EMPLID
L.NAME
!----Commented for fix 597175 Starts
! Let $lname={ps-substr}(&L.NAME,1,(instr(&L.NAME,',',1))-1 )
! Let $fname=rtrim({ps-substr}(&L.NAME,(instr(&L.NAME,',',1)+1),length(&L.NAME)),' ')
!----Commented for fix 597175 Ends

!----Added for fix 597175 Starts
 Let $lname={ps-substr}(&L.NAME,1,(instr(&L.NAME,' ',1))-1 )
 Let $fname=rtrim({ps-substr}(&L.NAME,(instr(&L.NAME,' ',1)+1),length(&L.NAME)),' ')
!----Added for fix 597175 Ends

 Let $rpttm=edit(&M.TM_REPORTED,'HH:MI')
 Let $empl=&M.EMPLID
 do Format-DateTime(&M.DT_REPORTED,$rptdt, {DEFCMP},'','')

 Let $dspstp=&M.DESIG_POSTYP_CD
 Let $fdsw=&M.FIRST_DESIGNATE_SW
 Let $oddes=&M.OTHER_DESIG_DESCR
 Let $facn=&M.FIRST_AID_CERT_NBR
 Let #sqnm=&M.SEQUENCE_NBR
 If $rpttm <>''
  Do Insert-EMDE-Record($empl,$incd,$lname,$fname,$rpttm,$rptdt,$dspstp,$fdsw,$oddes,$facn,#sqnm)
 end-if

FROM PS_PERSON_NAME L,
     PS_INJURY_ILL_DESG M
WHERE L.EMPLID       = M.DESIGNATE_EMPLID
  AND M.INCIDENT_NBR = $incd
end-SELECT
END-PROCEDURE Stage-EMDE-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-EMDE-Record($empl,$incd,$lname,$fname,$rpttm,$rptdt,$dspstp,$fdsw,$oddes,$facn,#sqnm)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Insert-EMDE-Record,INSERT'
BEGIN-SQL ON-ERROR=SQL-ERROR
INSERT INTO PS_WCB_EMDE_EC (ECTRANSID,
INCIDENT_NBR,
EMPLID,DESIGNATE_SEQNUM,
DT_REPORTED_C,
 TIME_REPORTED5,
LAST_NAME,
FIRST_NAME,
DESIG_POSTYP_CD,
FIRST_DESIGNATE_SW,
OTHER_DESIG_DESCR,
FIRST_AID_CERT_NBR)
VALUES('EERE',$incd,$empl,#sqnm,$rptdt,$rpttm, $lname,$fname,$dspstp,$fdsw,$oddes,$facn)
END-SQL
END-PROCEDURE Insert-EMDE-Record


!**********************************************************************************************
BEGIN-PROCEDURE Stage-IWJO-Table($incd)
!**********************************************************************************************

begin-SELECT
OO.INCIDENT_NBR
OO.EMPLID
OO.HOLIDAY_PAY_RT
OO.LAST_DAY_WAGES
OO.RTW_CONTACT_CAN
OO.LAST_DAY_SCHED_ST
OO.LAST_DAY_SCHED_END
OO.LAST_WORKED_TM
OO.RETURN_TM
OO.RETURN_DT
OO.LAST_FULL_WORK_DAY
OO.FIXED_ROTN_ST_DT
OO.EMPR_BENEFITS_DESC
PP.HIRE_DT
PP.REHIRE_DT
PP.TERMINATION_DT
QQ.JOB_ENTRY_DT
RR.DESCR
RR.DESCRLONG
 Let $ldss=' '
 Let $ldse=' '
 Let $lwtm=' '
 Let $rtwcan=' '
 If &OO.LAST_DAY_SCHED_ST <> ''
   Let $ldss=edit(&OO.LAST_DAY_SCHED_ST,'HH:MI')
 End-if
 If &OO.LAST_DAY_SCHED_END <> ''
   Let $ldse=edit(&OO.LAST_DAY_SCHED_END,'HH:MI')
 End-if
 If &OO.LAST_FULL_WORK_DAY <> ''
   do Format-DateTime(&OO.LAST_FULL_WORK_DAY,$lwdt, {DEFCMP},'','')
 Else
   Let $lwdt=' '
 End-if
 If &OO.LAST_WORKED_TM <> ''
   Let $lwtm=edit(&OO.LAST_WORKED_TM,'HH:MI')
 End-if
 If &OO.RETURN_DT <>''
    do Format-DateTime(&OO.RETURN_DT ,$rtwdcan, {DEFCMP},'','')
 else
   let $rtwdcan=' '
 End-if
 If &OO.RETURN_TM <>''
   Let $rtwcan=edit(&OO.RETURN_TM,'HH:MI')
 End-if
 If &OO.FIXED_ROTN_ST_DT <>''
    do Format-DateTime(&OO.FIXED_ROTN_ST_DT ,$fxrtstdt, {DEFCMP},'','')
 else
   Let $fxrtstdt=' '
 End-if
 Let $emprbend=&OO.EMPR_BENEFITS_DESC
 if $emprbend=''
   Let $emprbend=' '
 else
   let $targstr=$emprbend
   let $ouststr=''
   Do StripCR($targstr,$outstr)
   let $targstr=$outstr
   Let $emprbend={ps-substr}($targstr,1,250)
 end-if
 Let $rtwconid=&OO.RTW_CONTACT_CAN
 let $targstr=&RR.DESCRLONG
   Let $outstr=''
   Do StripCR($targstr,$outstr)
   let $targstr=$outstr
   Let $jobdut={ps-substr}($targstr,1,250)
 if $jobdut = ''
    let $jobdut = ' '
 end-if

 Let $empl=&OO.EMPLID
 IF &PP.REHIRE_DT=''
    do Format-DateTime(&PP.HIRE_DT,$ohdt, {DEFCMP},'','')
 else
    do Format-DateTime(&PP.REHIRE_DT,$ohdt, {DEFCMP},'','')
 end-IF
 if &QQ.JOB_ENTRY_DT <> ''
    do Format-DateTime(&QQ.JOB_ENTRY_DT,$jedt, {DEFCMP},'','')
 else
    let $jedt = ' '
 end-if
 IF &PP.TERMINATION_DT <>''
    do Format-DateTime(&PP.TERMINATION_DT ,$jxdt, {DEFCMP},'','')
 else
   Let $jxdt=' '
 end-IF
 let $jtitl=&RR.DESCR
 Let #hprt=&OO.HOLIDAY_PAY_RT * 100
 Let #ldwg=&OO.LAST_DAY_WAGES * 100
 do Insert-IWJO-Record($incd,$empl,$ohdt,$jedt,$jxdt,$jtitl,$jobdut,#hprt,#ldwg,$ldss,$ldse,$lwtm,$rtwcan,$lwdt,$rtwdcan,$fxrtstdt,$emprbend)
 Do Update-IWJO-Non-Business-Related-Info($incd)
 Do Update-IWJO-Non-Routine-Related-Info($incd)
 Do Update-IWJO-Emp-Type-Info($empl,$jxdt)
 Do Update-IWJO-Subcontracting-Info($empl)
 Do Update-IWJO-Employee-Relationship-Info($empl)
 Do Search-RTW-Contact-Name-Info($incd,$empl,$rtwconid)

FROM PS_INJURY_ILL    OO,
     PS_EMPLOYMENT    PP,
     PS_JOB           QQ,
     PS_JOBCODE_TBL   RR
WHERE OO.INCIDENT_NBR = $incd
  AND RR.SETID        = QQ.SETID_JOBCODE
  AND PP.EMPLID       = OO.EMPLID
  AND PP.EMPL_RCD    = OO.EMPL_RCD
  AND QQ.EMPLID       = PP.EMPLID
  AND QQ.EMPL_RCD    = OO.EMPL_RCD
  AND RR.JOBCODE      = QQ.JOBCODE
  AND QQ.EFFDT =
       (SELECT MAX(EFFDT)  FROM PS_JOB
        WHERE QQ.EMPLID     = EMPLID
          AND QQ.EMPL_RCD  = EMPL_RCD
                  AND EFFDT <= OO.INJURY_DATE)
  AND QQ.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE QQ.EMPLID    = EMPLID
          AND QQ.EMPL_RCD = EMPL_RCD
          AND QQ.EFFDT     = EFFDT)
  AND RR.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOBCODE_TBL
        WHERE RR.SETID   = SETID
          AND RR.JOBCODE = JOBCODE
          AND EFFDT      <= QQ.EFFDT)

end-SELECT

let $sql-statement = 'OHS501BC.SQR,Stage-IWJO-Table,UPDATE,PS_WCB_IWJO_EC'
BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_IWJO_EC   SET ACTIONS_ROUTINE_SW='N'
WHERE NON_ROUTINE_DESC <>''
end-SQL

BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_IWJO_EC   SET ACTIONS_BUSREL_SW='N'
WHERE NON_BUS_WRK_DESCR <>''
end-SQL

END-PROCEDURE Stage-IWJO-Table


!**********************************************************************************************
BEGIN-PROCEDURE Update-IWJO-Emp-Type-Info($empl,$jxdt)
!**********************************************************************************************

begin-SELECT
BBBBB.EMPLID
BBBBB.REL_PARTNER_SW_CAN
BBBBB.REL_PRNCPL_SW_CAN
BBBBB.REL_RLTV_SW_CAN
BBBBB.EMPL_SECURE_SW_CAN
BBBBB.JOB_AVL_MONTHS_CAN
BBBBB.EMPTYP_FTW_SW_CAN
BBBBB.EMPTYP_PER_SW_CAN
BBBBB.EMPTYP_SNL_SW_CAN
BBBBB.EMPTYP_CSL_SW_CAN
BBBBB.EMPTYP_VLN_SW_CAN
BBBBB.EMPTYP_STU_SW_CAN
BBBBB.EMPTYP_SUB_SW_CAN
BBBBB.OCCUPATION_CD_CAN
BBBBB.IND_START_DT_CAN
BBBBB.SNL_END_DT_CAN
 Let $partner=&BBBBB.REL_PARTNER_SW_CAN
 Let $prncp=&BBBBB.REL_PRNCPL_SW_CAN
 Let $reltive=&BBBBB.REL_RLTV_SW_CAN
 Let $empscre=&BBBBB.EMPL_SECURE_SW_CAN
 Let #jobavl=&BBBBB.JOB_AVL_MONTHS_CAN
 Let $fulltime=&BBBBB.EMPTYP_FTW_SW_CAN
 Let $parttime=&BBBBB.EMPTYP_PER_SW_CAN
 Let $season=&BBBBB.EMPTYP_SNL_SW_CAN
 Let $casual=&BBBBB.EMPTYP_CSL_SW_CAN
 Let $volun=&BBBBB.EMPTYP_VLN_SW_CAN
 Let $student=&BBBBB.EMPTYP_STU_SW_CAN
 Let $contrct=&BBBBB.EMPTYP_SUB_SW_CAN
 Let $canoccd=&BBBBB.OCCUPATION_CD_CAN
 do Format-DateTime(&BBBBB.IND_START_DT_CAN,$indstdt, {DEFCMP},'','')
 do Format-DateTime(&BBBBB.SNL_END_DT_CAN,$seasndt, {DEFCMP},'','')

 If $seasndt <>''
   Let $jxdt=$seasndt
 end-if

 DO Update-IWJO-Emp-Type-Info2($empl,$partner,$prncp,$reltive,$empscre,#jobavl,$fulltime,$parttime,$season,$casual,$volun,$student,$contrct,$canoccd,$indstdt,$jxdt)

FROM PS_WCB_IWJO_EC   AAAAA,
     PS_HS_EMPLOYMENT BBBBB
WHERE AAAAA.EMPLID = BBBBB.EMPLID
  and AAAAA.EMPLID = $empl
end-SELECT
END-PROCEDURE


!**********************************************************************************************
BEGIN-PROCEDURE Update-IWJO-Non-Business-Related-Info($incd)
!**********************************************************************************************

begin-SELECT
AAA.INCIDENT_NBR
AAA.EMPLID
AAA.DESCRLONG
 Let $emplid=&AAA.EMPLID
  if &AAA.DESCRLONG <> ''
     let $targstr=&AAA.DESCRLONG
     Let $outstr=''
     Do StripCR($targstr,$outstr)
     let $targstr=$outstr
     Let $nbwd={ps-substr}($targstr,1,250)
     Do Update-IWJO-Non-Business-Related-Info2($incd,$emplid,$nbwd)

 end-if


FROM PS_INJ_ILL_NBD_CAN AAA ,
     PS_INJURY_ILL      BBB
WHERE AAA.INCIDENT_NBR = BBB.INCIDENT_NBR
  AND AAA.EMPLID       = BBB.EMPLID
  AND AAA.INCIDENT_NBR = $incd
end-SELECT
END-PROCEDURE


!**********************************************************************************************
BEGIN-PROCEDURE Update-IWJO-Non-Routine-Related-Info($incd)
!**********************************************************************************************

begin-SELECT
CCC.INCIDENT_NBR
CCC.EMPLID
CCC.DESCRLONG
  Let $emplid=&CCC.EMPLID
  if &CCC.DESCRLONG <> ''
    let $targstr=&CCC.DESCRLONG
    Let $outstr=''
    Do StripCR($targstr,$outstr)
    let $targstr=$outstr
    Let $nrd={ps-substr}($targstr,1,250)
    Do Update-IWJO-Non-Routine-Related-Info2($incd,$emplid,$nrd)
  end-if
FROM PS_INJ_ILL_NRD_CAN CCC ,
     PS_INJURY_ILL      DDD
WHERE CCC.INCIDENT_NBR = DDD.INCIDENT_NBR
  AND CCC.EMPLID       = DDD.EMPLID
  AND CCC.INCIDENT_NBR = $incd
end-SELECT
END-PROCEDURE


!**********************************************************************************************
BEGIN-PROCEDURE Update-IWJO-Subcontracting-Info($empl)
!**********************************************************************************************

begin-SELECT
TT.EMPLID
TT.EMPL_RCD
TT.SUBCON_DESCR_CAN
  if &TT.SUBCON_DESCR_CAN <> ''
    let #emrcd=&TT.EMPL_RCD
    let $targstr=&TT.SUBCON_DESCR_CAN
    Let $outstr=''
    Do StripCR($targstr,$outstr)
    let $targstr=$outstr
    let $subdes={ps-substr}($targstr,1,50)
    do Update-IWJO-Subcontracting-Info-update($empl,#emrcd,$subdes)
  end-if
FROM PS_HS_EMPL_SUB_CAN TT
WHERE TT.EMPLID = $empl
end-SELECT
END-PROCEDURE


!**********************************************************************************************
BEGIN-PROCEDURE Update-IWJO-Employee-Relationship-Info($empl)
!**********************************************************************************************

begin-SELECT
UU.EMPLID
UU.EMPL_RCD
UU.REL_DESCR_CAN
  if &UU.REL_DESCR_CAN <> ''
    let #emrcd=&UU.EMPL_RCD
    let $targstr=&UU.REL_DESCR_CAN
    Let $outstr=''
    Do StripCR($targstr,$outstr)
    let $targstr=$outstr
    let $reldes={ps-substr}($targstr,1,25)
    do Update-IWJO-Employee-Relationship-Info2($empl,#emrcd,$reldes)
   end-if
FROM PS_HS_EMPL_REL_CAN UU
WHERE UU.EMPLID = $empl
end-SELECT
END-PROCEDURE


!**********************************************************************************************
BEGIN-PROCEDURE Update-IWJO-Non-Business-Related-Info2($incd,$emplid,$nbwd)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Update-IWJO-Non-Business-Related-Info2,UPDATE'
begin-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_IWJO_EC
SET NON_BUS_WRK_DESCR=$nbwd
WHERE EMPLID       = $emplid
  AND INCIDENT_NBR = $incd
end-SQL
END-PROCEDURE Update-IWJO-Non-Business-Related-Info2


!**********************************************************************************************
BEGIN-PROCEDURE Update-IWJO-Emp-Type-Info2($empl,$partner,$prncp,$reltive,$empscre,#jobavl,$fulltime,$parttime,$season,$casual,$volun,$student,$contrct,$canoccd,$indstdt,$jxdt)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Update-IWJO-Emp-Type-Info2,UPDATE'
if $indstdt=''
 let $indstdt=' '
end-if
begin-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_IWJO_EC
SET
 REL_PARTNER_SW_CAN =$partner,
 REL_PRNCPL_SW_CAN  =$prncp,
 REL_RLTV_SW_CAN    =$reltive,
 EMPL_SECURE_SW_CAN =$empscre,
 JOB_AVL_MONTHS_CAN =#jobavl,
 EMPTYP_FTW_SW_CAN  =$fulltime,
 EMPTYP_PER_SW_CAN  =$parttime,
 EMPTYP_SNL_SW_CAN  =$season,
 EMPTYP_CSL_SW_CAN  =$casual,
 EMPTYP_VLN_SW_CAN  =$volun,
 EMPTYP_STU_SW_CAN  =$student,
 EMPTYP_SUB_SW_CAN  =$contrct,
 OCCUPATION_CD_CAN  =$canoccd ,
 IND_START_DT_CANC  =$indstdt,
 JOB_EXIT_DT_C      =$jxdt
WHERE EMPLID        =$empl
end-SQL
END-PROCEDURE


!**********************************************************************************************
BEGIN-PROCEDURE Update-IWJO-Non-Routine-Related-Info2($incd,$emplid,$nrd)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Update-IWJO-Non-Routine-Related-Info2,UPDATE'
begin-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_IWJO_EC
SET NON_ROUTINE_DESC=$nrd
WHERE EMPLID       = $emplid
  AND INCIDENT_NBR = $incd
end-SQL
END-PROCEDURE Update-IWJO-Non-Business-Related-Info2

!**********************************************************************************************
BEGIN-PROCEDURE Update-IWJO-Subcontracting-Info-update($empl,#emrcd,$subdes)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Update-IWJO-Subcontracting-Info-update,UPDATE'
if $subdes=''
 let $subdes=' '
end-if
begin-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_IWJO_EC
SET EMPLOYMENT_DESCR = $subdes
WHERE EMPLID         = $empl
end-SQL
END-PROCEDURE Update-IWJO-Subcontracting-Info-update

BEGIN-PROCEDURE Search-RTW-Contact-Name-Info($incd,$empl,$rtwconid)
begin-SELECT
RTW1.NAME
  Let $rtwstcon={ps-substr}(&RTW1.NAME,1,40)
!----Commented for fix 597175 Starts
!  let $lname={ps-substr}($rtwstcon,1,(instr($rtwstcon,',',1))-1 )
!  Let $fname=rtrim({ps-substr}($rtwstcon,(instr($rtwstcon,',',1)+1),length($rtwstcon)),' ')
!----Commented for fix 597175 Ends

!----Added for fix 597175 Starts
  let $lname={ps-substr}($rtwstcon,1,(instr($rtwstcon,' ',1))-1 )
  Let $fname=rtrim({ps-substr}($rtwstcon,(instr($rtwstcon,' ',1)+1),length($rtwstcon)),' ')
!----Added for fix 597175 Ends

  let $rtwcon=$fname||' '||$lname
  Do Update-RTW-Contact-Name-Info($incd,$empl,$rtwcon)
FROM PS_PERSON_NAME RTW1
WHERE RTW1.EMPLID = $rtwconid
end-SELECT
END-PROCEDURE Search-RTW-Contact-Name-Info

BEGIN-PROCEDURE Update-RTW-Contact-Name-Info($incd,$empl,$rtwcon)
let $sql-statement = 'OHS501BC.SQR,Update-RTW-Contact-Name-Info,UPDATE'
begin-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_IWJO_EC
SET RTW_CONTACT_NAME = $rtwcon
WHERE INCIDENT_NBR = $incd
  AND EMPLID = $empl
end-SQL
END-PROCEDURE Update-RTW-Contact-Name-Info


!**********************************************************************************************
BEGIN-PROCEDURE Update-IWJO-Employee-Relationship-Info2($empl,#emrcd,$reldes)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Update-IWJO-Employee-Relationship-Info2,UPDATE'
IF $reldes=''
 Let $reldes=' '
end-IF
begin-SQL ON-ERROR=SQL-ERROR
UPDATE PS_WCB_IWJO_EC
 SET
RELATIONSHIP_TEXT=$reldes
WHERE EMPLID = $empl
end-SQL
END-PROCEDURE Update-IWJO-Employee-Relationship-Info2


!**********************************************************************************************
BEGIN-PROCEDURE Insert-IWJO-Record($incd,$empl,$ohdt,$jedt,$jxdt,$jtitl,$jobdut,#hprt,#ldwg,$ldss,$ldse,$lwtm,$rtwcan,$lwdt,$rtwdcan,$fxrtstdt,$emprbend)
!**********************************************************************************************
IF $jobdut=''
 Let $jobdut=' '
End-IF

Begin-SELECT
IWJO.ACTIONS_BUSREL_SW
IWJO.ACTIONS_ROUTINE_SW
IWJO.EMPL_RETURN_WORK
IWJO.PAYMENTS_DURING
IWJO.VAR_SHIFT_ROTATION
IWJO.RTW_EMPLCNS_SW_CAN
IWJO.RTW_MODWORK_SW_CAN
IWJO.LUMP_SUM_HOL_RCVD

 Let $absw=&IWJO.ACTIONS_BUSREL_SW
 Let $arsw=&IWJO.ACTIONS_ROUTINE_SW
 Let $resc=&IWJO.EMPL_RETURN_WORK
 Let $pdsw=&IWJO.PAYMENTS_DURING
 Let $vssw=&IWJO.VAR_SHIFT_ROTATION
 Let $resw=&IWJO.RTW_EMPLCNS_SW_CAN
 Let $rmsw=&IWJO.RTW_MODWORK_SW_CAN
 Let $lssw=&IWJO.LUMP_SUM_HOL_RCVD
 Do Insert-IWJO-Record2($incd,$empl,$ohdt,$jedt,$jxdt,$jtitl,$jobdut,#hprt,#ldwg,$ldss,$ldse,$lwtm,$rtwcan,$lwdt,$rtwdcan,$fxrtstdt,$emprbend,$absw,$arsw,$resc,$pdsw,$vssw,$resw,$rmsw,$lssw)
FROM PS_INJURY_ILL IWJO
WHERE IWJO.INCIDENT_NBR = $incd
  AND IWJO.EMPLID       = $empl
end-SELECT
END-PROCEDURE Insert-IWJO-Record

!**********************************************************************************************
BEGIN-PROCEDURE Insert-IWJO-Record2($incd,$empl,$ohdt,$jedt,$jxdt,$jtitl,$jobdut,#hprt,#ldwg,$ldss,$ldse,$lwtm,$rtwcan,$lwdt,$rtwdcan,$fxrtstdt,$emprbend,$absw,$arsw,$resc,$pdsw,$vssw,$resw,$rmsw,$lssw)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Insert-IWJO-Record2,INSERT'
begin-SQL ON-ERROR=SQL-ERROR
 INSERT INTO PS_WCB_IWJO_EC (ECTRANSID,INCIDENT_NBR,EMPLID,OCCUPATION_CD_CAN,ORIG_HIRE_DT_C,JOB_ENTRY_DT_C,
   JOB_EXIT_DT_C,IND_START_DT_CANC,DESCR,JOB_DUTIES_DESCR,ACTIONS_BUSREL_SW,NON_BUS_WRK_DESCR,ACTIONS_ROUTINE_SW,
   NON_ROUTINE_DESC,REL_PARTNER_SW_CAN,REL_PRNCPL_SW_CAN,REL_RLTV_SW_CAN,RELATIONSHIP_TEXT,RTW_EMPLRTN_SW_CAN,
   RTW_EMPRTN_DT_C,RTW_TIME5,RTW_CONTACT_NAME,PAYMENTS_DURING,EMPR_BENEFITS_DESC,VAR_SHIFT_ROTATION,LAST_DAY_START_TM5,
   LAST_DAY_END_TM5,LAST_WORKED_DT_C,LAST_DAY_WORK_TM5,EMPL_SECURE_SW_CAN,JOB_AVL_MONTHS_CAN,FIXED_ROTN_ST_DT_C,EMPTYP_FTW_SW_CAN,EMPTYP_PER_SW_CAN,EMPTYP_SNL_SW_CAN,
   EMPTYP_CSL_SW_CAN,EMPTYP_VLN_SW_CAN,EMPTYP_STU_SW_CAN,EMPTYP_SUB_SW_CAN,EMPLOYMENT_DESCR,RTW_EMPLCNS_SW_CAN,
   RTW_MODWORK_SW_CAN,LUMP_SUM_HOL_RCVD,HOLIDAY_PAY_RT_WCB,LAST_DAY_WAGES_WCB)
VALUES ('EERE',$incd,$empl,' ',$ohdt,$jedt,$jxdt,' ',$jtitl,$jobdut,$absw,
' ',$arsw,' ',' ',' ',' ',' ',$resc,
$rtwdcan,$rtwcan,' ',
$pdsw,$emprbend,$vssw,$ldss,
$ldse,$lwdt,$lwtm,' ',0,$fxrtstdt,
' ',' ',' ',' ',' ',' ',' ',' ',$resw,$rmsw,
$lssw,#hprt,#ldwg)
end-SQL
END-PROCEDURE Insert-IWJO-Record2

!**********************************************************************************************
BEGIN-PROCEDURE Stage-WOFA-Table($incd)
!**********************************************************************************************
Let $actm='     '
Let $aatm='     '
Let $injtm='     '
Let $winj5='     '
begin-SELECT
BB.INCIDENT_NBR
BB.EMPLID
BB.AMBULANCE_SW
BB.AMBULANCE_CNTCT_DT
BB.AMBULANCE_ARRVL_DT
BB.AMBULANCE_CNTCT_TM
BB.AMBULANCE_ARRVL_TM
BB.INJURY_TIME
 Let $empl=&BB.EMPLID
 If &BB.AMBULANCE_CNTCT_TM <>''
  Let $actm=edit(&BB.AMBULANCE_CNTCT_TM,'HH:MI')
 End-if
 If &BB.AMBULANCE_CNTCT_DT <>'' AND &BB.AMBULANCE_SW='Y'
    do Format-DateTime(&BB.AMBULANCE_CNTCT_DT ,$acdt, {DEFCMP},'','')
 ELSE
   let $acdt=' '
 End-if
 If &BB.AMBULANCE_ARRVL_TM <>''
  Let $aatm=edit(&BB.AMBULANCE_ARRVL_TM,'HH:MI')
 End-if
 If &BB.AMBULANCE_ARRVL_DT <>'' AND &BB.AMBULANCE_SW='Y'
    do Format-DateTime(&BB.AMBULANCE_ARRVL_DT,$aadt, {DEFCMP},'','')
 else
   let $aadt=' '
 End-if
 If &BB.INJURY_TIME <>''
  Let $injtm=rtrim(edit(&BB.INJURY_TIME,'HH:MI'),' ')
 End-if
 Do Insert-WOFA-Record($incd,$empl,$actm,$aatm,$acdt,$aadt)
FROM PS_INJURY_ILL_VW BB ,
     PS_WCB_WOIN_EC   DD
WHERE BB.INCIDENT_NBR = $incd
  AND DD.INCIDENT_NBR = BB.INCIDENT_NBR
  AND DD.EMPLID       = BB.EMPLID
  AND DD.WRKR_INJ_DT  = BB.INJURY_DATE
  AND DD.FIRST_AID    = 'Y'
end-SELECT
END-PROCEDURE Stage-WOFA-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-WOFA-Record($incd,$empl,$actm,$aatm,$acdt,$aadt)
!**********************************************************************************************
Begin-SELECT
WOFA.FA_DESIG_SEQNUM
WOFA.UNCONSCIOUS_SW
WOFA.UNCONSCIOUS_HRS
WOFA.UNCONSCIOUS_MINS
WOFA.TRANSPORT_HRS
WOFA.TRANSPORT_MIN
WOFA.ATTENDANT_OBS_SW
WOFA.WRKR_ARRIVE_FA
WOFA.WRKR_LEAVE_FA
 Let #fdsn=&WOFA.FA_DESIG_SEQNUM
 Let $unsw=&WOFA.UNCONSCIOUS_SW,
 Let #uhrs=&WOFA.UNCONSCIOUS_HRS
 Let #umin=&WOFA.UNCONSCIOUS_MINS
 Let #thrs=&WOFA.TRANSPORT_HRS
 Let #tmin=&WOFA.TRANSPORT_MIN,
 Let $aosw=&WOFA.ATTENDANT_OBS_SW
 Let $wafa=&WOFA.WRKR_ARRIVE_FA
 Let $wlfa=&WOFA.WRKR_LEAVE_FA
 Do Insert-WOFA-Record2($incd,$empl,$actm,$aatm,$acdt,$aadt,#fdsn,$unsw,#uhrs,#umin,#thrs,#tmin,$aosw,$wafa,$wlfa)
FROM PS_INJURY_ILL_VW WOFA ,
     PS_INCIDENT_DATA  B
WHERE WOFA.INCIDENT_NBR = B.INCIDENT_NBR
  AND WOFA.INCIDENT_NBR = $incd
  AND WOFA.EMPLID       = $empl
end-SELECT
END-PROCEDURE Insert-WOFA-Record

!**********************************************************************************************
BEGIN-PROCEDURE Insert-WOFA-Record2($incd,$empl,$actm,$aatm,$acdt,$aadt,#fdsn,$unsw,#uhrs,#umin,#thrs,#tmin,$aosw,$wafa,$wlfa)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Insert-WOFA-Record2,INSERT'
begin-SQL ON-ERROR=SQL-ERROR
insert into PS_WCB_WOFA_EC (ECTRANSID,INCIDENT_NBR,EMPLID,FA_DESIG_SEQNUM,UNCONSCIOUS_SW,UNCONSCIOUS_HRS,
 UNCONSCIOUS_MINS,TRANSPORT_HRS,TRANSPORT_MIN,AMBULANCE_CNTC_DTC,AMBULANCE_CNTCT5,AMBULANCE_ARRIVE5,
 AMBULANCE_ARRV_DTC,ATTENDANT_OBS_SW,WRKR_ARRIVE_FA,WRKR_LEAVE_FA)
VALUES( 'EERE',$incd, $empl, #fdsn, $unsw,
#uhrs, #umin, #thrs, #tmin,
$acdt, $actm,$aatm, $aadt,
$aosw, $wafa, $wlfa)
end-SQL
END-PROCEDURE


!**********************************************************************************************
BEGIN-PROCEDURE Stage-FATR-Table($incd)
!**********************************************************************************************
Let #faseqnum=1
Let $empl='           '
begin-SELECT
G.INCIDENT_NBR
G.EMPLID
G.TREATMENT_DT
G.TREATMENT_TM
 if &G.INCIDENT_NBR =$incd and &G.EMPLID = $empl
  let #faseqnum=#faseqnum+1
 else
  let #faseqnum=1
  let $empl=&G.EMPLID
 end-if
    do Format-DateTime(&G.TREATMENT_DT,$tdate, {DEFCMP},'','')
 let $ttime=edit(&G.TREATMENT_TM,'HH:MI')
 do Insert-FATR-Record($incd,$empl,#faseqnum,$tdate,$ttime)
FROM PS_INJURY_ILL_AID G
WHERE G.TREATMENT_TYPE = 'FA'
  AND G.INCIDENT_NBR   = $incd
end-SELECT
END-PROCEDURE Stage-FATR-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-FATR-Record($incd,$empl,#faseqnum,$tdate,$ttime)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Insert-FATR-Record,INSERT'
begin-SQL ON-ERROR=SQL-ERROR
INSERT INTO PS_WCB_FATR_EC (ECTRANSID,INCIDENT_NBR,EMPLID,FRST_AID_SEQNUM,TREATMENT_DT_C,TREATMENT_TM5)
 VALUES ('EERE',$incd,$empl,#faseqnum,$tdate,$ttime)
end-SQL
END-PROCEDURE Insert-FATR-Record


!**********************************************************************************************
BEGIN-PROCEDURE Stage-IWWA-Table($incd)
!**********************************************************************************************
begin-SELECT
WW.INCIDENT_NBR
WW.EMPLID
WW.INJURY_DATE
XX.COMPRATE
XX.COMP_FREQUENCY
 Let $empl=&WW.EMPLID
 Let #wrate=&XX.COMPRATE*100000
 Let $comp_freq=&XX.COMP_FREQUENCY
 do Det-Annual-Factor($comp_freq,&WW.INJURY_DATE,$dummy1,$tpcd,#dummy2,$dummy3)
 IF $tpcd='A'
  Let $tpcd='Y'
 end-IF
 Do Insert-IWWA-Record($incd,$empl,#wrate,$tpcd)
FROM PS_INJURY_ILL WW,
     PS_JOB        XX
WHERE XX.EMPLID    = WW.EMPLID
  and XX.EMPL_RCD = WW.EMPL_RCD
  AND WW.INCIDENT_NBR = $incd
  and XX.EFFDT    = (SELECT MAX(EFFDT) FROM PS_JOB
                     WHERE XX.EMPLID = EMPLID
                       AND XX.EMPL_RCD = EMPL_RCD
                       AND EFFDT <= WW.INJURY_DATE)
  AND XX.EFFSEQ    = (SELECT MIN(EFFSEQ) FROM PS_JOB
                      WHERE XX.EMPLID    = EMPLID
                       AND XX.EMPL_RCD = EMPL_RCD
                       AND XX.EFFDT     = EFFDT)
 end-SELECT
END-PROCEDURE Stage-IWWA-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-IWWA-Record($incd,$empl,#wrate,$tpcd)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Insert-IWWA-Record,INSERT'
begin-SQL ON-ERROR=SQL-ERROR
  INSERT INTO PS_WCB_IWWA_EC (ECTRANSID,INCIDENT_NBR,EMPLID,WAGE_RT_AMOUNT,TIME_PERIOD_CD ) VALUES('EERE',$incd,$empl,#wrate,$tpcd)
end-SQL
END-PROCEDURE Insert-IWWA-Record


!**********************************************************************************************
BEGIN-PROCEDURE Stage-IWWD-Table($incd)
!**********************************************************************************************
Let $sempl='           '
begin-SELECT
RRRR.INCIDENT_NBR
RRRR.EMPLID
SSSS.ABSW_DAY_NO
SSSS.DURATION_HOURS

 Let $empl=&RRRR.EMPLID
 If $empl <> $sempl
   Let #ssqnm=1
   Let $sempl=$empl
 Else
   Let #ssqnm=#ssqnm+1
 End-if
 Let $daynum={ps-substr}(to_char(&SSSS.ABSW_DAY_NO),1,1)
 Let #durhrs=&SSSS.DURATION_HOURS * 100
 DO Insert-IWWD-Record($incd,$empl,#ssqnm,#durhrs,$daynum)
FROM PS_INJURY_ILL_VW RRRR,
     PS_ABSW_SCHD_VW  SSSS
WHERE RRRR.EMPLID       = SSSS.EMPLID
  AND RRRR.EMPL_RCD    = SSSS.EMPL_RCD
  AND RRRR.INCIDENT_NBR = $incd
end-SELECT
END-PROCEDURE Stage-IWWD-Table

BEGIN-PROCEDURE Insert-IWWD-Record($incd,$empl,#ssqnm,#durhrs,$daynum)
let $sql-statement = 'OHS501BC.SQR,Insert-IWWD-Record,INSERT'
begin-SQL ON-ERROR=SQL-ERROR
  insert into PS_WCB_IWWD_EC (ECTRANSID,INCIDENT_NBR,EMPLID,SCHEDULE_SEQNUM,
  HRS_PER_DAY,DAY_OF_WK,TIME_PERIOD_CD,SHIFT_DIFF_PCT)
VALUES('EERE',$incd,$empl,#ssqnm,#durhrs,$daynum,' ',0)
end-SQL
END-PROCEDURE Insert-IWWD-Record


!**********************************************************************************************
BEGIN-PROCEDURE Stage-IWLE-Table($incd)
!**********************************************************************************************
begin-SELECT
VVVV.INCIDENT_NBR
VVVV.EMPLID
VVVV.SEQUENCE_NBR
VVVV.LTE_AMOUNT_CAN
VVVV.PERIOD_START_DT
VVVV.PERIOD_END_DATE
VVVV.DT_CHG_REASON_CAN
 Let $empl=&VVVV.EMPLID
 Let #ltseq=&VVVV.SEQUENCE_NBR
 Let #lteamt=&VVVV.LTE_AMOUNT_CAN * 100
 if &VVVV.PERIOD_START_DT <> ''
    do Format-DateTime(&VVVV.PERIOD_START_DT,$prstdtc, {DEFCMP},'','')
 else
    let $prstdtc=' '
 end-if
 if &VVVV.PERIOD_END_DATE <> ''
    do Format-DateTime(&VVVV.PERIOD_END_DATE,$prnddtc, {DEFCMP},'','')
 else
    let $prnddtc=' '
 end-if

 Let $dcreas=&VVVV.DT_CHG_REASON_CAN
 If $dcreas=''
  Let $dcreas=' '
 End-if
 Do Insert-IWLE-Record($incd,$empl,#ltseq,#lteamt,&VVVV.PERIOD_START_DT,&VVVV.PERIOD_END_DATE,$prstdtc,$prnddtc,$dcreas)
FROM PS_LONG_EARNS_CAN VVVV
WHERE VVVV.INCIDENT_NBR = $incd
end-SELECT
END-PROCEDURE Stage-IWLE-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-IWLE-Record($incd,$empl,#ltseq,#lteamt,$prstdt,$prnddt,$prstdtc,$prnddtc,$dcreas)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Insert-IWLE-Record,INSERT'
begin-SQL ON-ERROR=SQL-ERROR
  insert into PS_WCB_IWLE_EC (ECTRANSID,INCIDENT_NBR,EMPLID,LONG_TERM_SEQNUM,LONG_TRM_ERNS_WCB,PERIOD_START_DT,
PERIOD_END_DATE,PERIOD_START_DT_C,PERIOD_END_DATE_C,DATE_CHG_REASON) VALUES('EERE',$incd,$empl,#ltseq,#lteamt,$prstdt,$prnddt,$prstdtc,$prnddtc,$dcreas)
end-SQL
END-PROCEDURE Insert-IWLE-Record



!**********************************************************************************************
BEGIN-PROCEDURE Stage-IWWI-Table($incd)
!**********************************************************************************************
begin-SELECT
TTTT.INCIDENT_NBR
TTTT.EMPLID
TTTT.WAGE_INCLS_CD
TTTT.TIME_PERIOD_CD
TTTT.INCLS_AMOUNT
TTTT.DESCRLONG
 Let $empl=&TTTT.EMPLID
 Let $wginc=&TTTT.WAGE_INCLS_CD
 Let $tmpcd=&TTTT.TIME_PERIOD_CD
 Let #incamt=&TTTT.INCLS_AMOUNT * 100
  let $targstr=&TTTT.DESCRLONG
  Let $outstr=''
  Do StripCR($targstr,$outstr)
  let $targstr=$outstr
 Let $dlong=$targstr
 If $dlong=''
  Let $dlong=' '
 End-if
 Do Insert-IWWI-Record($incd,$empl,$wginc,$tmpcd,#incamt,$dlong)
FROM PS_INJ_ILL_WI_CAN TTTT
WHERE TTTT.INCIDENT_NBR = $incd
end-SELECT
END-PROCEDURE Stage-IWWI-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-IWWI-Record($incd,$empl,$wginc,$tmpcd,#incamt,$dlong)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Insert-IWWI-Record,INSERT'
#ifdef INFORMIX
  let $long = $dlong
  let $dlong = ''
#endif

begin-SQL ON-ERROR=SQL-ERROR
  insert into PS_WCB_IWWI_EC (ECTRANSID,INCIDENT_NBR,EMPLID,WAGE_INCLS_CD,TIME_PERIOD_CD,INCLS_AMOUNT,DESCRLONG)
 VALUES ( 'EERE',$incd,$empl,$wginc,$tmpcd,#incamt,$dlong)
end-SQL

#ifdef INFORMIX
  if $long > ' '
     let $sql-statement = 'OHS501BC.SQR,Insert-IWWI-Record,UPDATE,PS_WCB_IWWI_EC'
     Begin-SQL ON-ERROR=SQL-ERROR
     UPDATE PS_WCB_IWWI_EC
     SET  DESCRLONG  = (( SELECT DESCRLONG FROM PS_INJ_ILL_WI_CAN
                              WHERE EMPLID = $empl AND INCIDENT_NBR = $incd
                               AND  WAGE_INCLS_CD = $wginc))
     WHERE INCIDENT_NBR = $Incd
     AND  EMPLID = $empl
     AND  WAGE_INCLS_CD = $wginc
     END-SQL
  end-if
  let $long = ''
#endif


END-PROCEDURE Insert-IWWI-Record


!**********************************************************************************************
BEGIN-PROCEDURE Stage-IWAW-Table($incd)
!**********************************************************************************************
begin-SELECT
WWWW.INCIDENT_NBR
WWWW.EMPLID
WWWW.WAGE_ADDN_CD
WWWW.TIME_PERIOD_CD
WWWW.ADDN_AMOUNT
WWWW.DESCRLONG
 Let $empl=&WWWW.EMPLID
 Let $wgacd=&WWWW.WAGE_ADDN_CD
 Let $tmpcd=&WWWW.TIME_PERIOD_CD
 Let #adamt=&WWWW.ADDN_AMOUNT * 100
  let $targstr=&WWWW.DESCRLONG
  Let $outstr=''
  Do StripCR($targstr,$outstr)
  let $targstr=$outstr
 Let $dlong=$targstr
 If $dlong=''
  Let $dlong=' '
 End-if
 Do Insert-IWAW-Record($incd,$empl,$wgacd,$tmpcd,#adamt,$dlong)
FROM PS_INJ_ILL_WA_CAN WWWW
WHERE WWWW.INCIDENT_NBR = $incd
end-SELECT
END-PROCEDURE Stage-IWAW-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-IWAW-Record($incd,$empl,$wgacd,$tmpcd,#adamt,$dlong)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Insert-IWAW-Record,INSERT'
#ifdef INFORMIX
  let $long = $dlong
  let $dlong = ''
#endif

begin-SQL ON-ERROR=SQL-ERROR
  insert into PS_WCB_IWAW_EC  (ECTRANSID,INCIDENT_NBR,EMPLID,ADDN_TYPE,TIME_PERIOD_CD,ADDN_AMOUNT,DESCRLONG)
 VALUES ( 'EERE',$incd,$empl,$wgacd,$tmpcd,#adamt,$dlong)
end-SQL

#ifdef INFORMIX
  if $long > ' '
     let $sql-statement = 'OHS501BC.SQR,Insert-IWAW-Record,UPDATE,PS_WCB_IWAW_EC'
     Begin-SQL ON-ERROR=SQL-ERROR
     UPDATE PS_WCB_IWAW_EC
     SET  DESCRLONG  = (( SELECT DESCRLONG FROM PS_INJ_ILL_WA_CAN
                              WHERE EMPLID = $empl AND INCIDENT_NBR = $incd
                               AND  WAGE_ADDN_CD = $wgacd))
     WHERE INCIDENT_NBR = $Incd
     AND  EMPLID = $empl
     AND  ADDN_TYPE = $wgacd
     END-SQL
  end-if
  let $long = ''
#endif

END-PROCEDURE Insert-IWAW-Record


!**********************************************************************************************
BEGIN-PROCEDURE Stage-IWJA-Table($incd)
!**********************************************************************************************
Begin-SELECT
IWJ1.INCIDENT_NBR
IWJ1.EMPLID
IWJ2.ABSENCE_TYPE
IWJ2.BEGIN_DT
IWJ2.RETURN_DT
IWJ2.REASON
 let $empl=&IWJ1.EMPLID
 let $iwat=&IWJ2.ABSENCE_TYPE
 If &IWJ2.BEGIN_DT=''
  Let $iwbdt=' '
 else
    do Format-DateTime(&IWJ2.BEGIN_DT,$iwbdt, {DEFCMP},'','')
 end-if
 If &IWJ2.RETURN_DT=''
  Let $iwrdt=' '
 else
    do Format-DateTime(&IWJ2.RETURN_DT,$iwrdt, {DEFCMP},'','')
   let $iwrdt=edit(&IWJ2.RETURN_DT,'YYYY-MM-DD')
 end-if
 let $iwreas=&IWJ2.REASON
 Do Insert-IWJA-Record($incd,$empl,$iwat,$iwbdt,$iwrdt,$iwreas)
FROM  PS_INJURY_ILL_VW IWJ1,
      PS_ABSENCE_HIST  IWJ2,
      PS_WCB_IWLE_EC   IWJ3
WHERE IWJ1.EMPLID       = IWJ2.EMPLID
  AND IWJ1.INCIDENT_NBR = $incd
  AND IWJ1.INCIDENT_NBR = IWJ3.INCIDENT_NBR
  AND IWJ1.EMPLID       = IWJ3.EMPLID
  AND IWJ2.BEGIN_DT     >= IWJ3.PERIOD_START_DT
  AND IWJ2.BEGIN_DT     <= IWJ3.PERIOD_END_DATE
  AND IWJ3.LONG_TERM_SEQNUM=
                   (SELECT MAX(LONG_TERM_SEQNUM) FROM PS_WCB_IWLE_EC IWJ3B
                    WHERE IWJ3B.EMPLID       = IWJ1.EMPLID
                      AND IWJ3B.INCIDENT_NBR = IWJ1.INCIDENT_NBR)
End-SELECT
End-Procedure Stage-IWJA-Table


!**********************************************************************************************
Begin-Procedure Insert-IWJA-Record($incd,$empl,$iwat,$iwbdt,$iwrdt,$iwreas)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Insert-IWJA-Record,INSERT'
begin-SQL ON-ERROR=SQL-ERROR
INSERT INTO PS_WCB_IWJA_EC (ECTRANSID,INCIDENT_NBR,EMPLID,ABSENCE_TYPE,BEGIN_DT_C,RETURN_DT_C,REASON)
VALUES('EERE',$incd,$empl,$iwat,$iwbdt,$iwrdt,$iwreas)
End-SQL
End-Procedure Insert-IWJA-Record

!**********************************************************************************************
BEGIN-PROCEDURE Stage-WICO-Table($incd)
!**********************************************************************************************
begin-SELECT
A.INCIDENT_NBR
A.EMPLID
A.STATEMENT
 if &A.STATEMENT <>''
  let $targstr=&A.STATEMENT
  Let $outstr=''
  Do StripCR($targstr,$outstr)
  let $targstr=$outstr
  let #strlngth=length($targstr)

!----Commented for fix 597175 Starts
!  let #numnewrc=trunc(#strlngth/75,0)+1
!----Commented for fix 597175 Ends

!---Added for Fix 597175 Starts
  if mod(#strlngth, 75) = 0
     let #numnewrc=trunc(#strlngth/75,0)
  else
     let #numnewrc=trunc(#strlngth/75,0)+1
  end-if
!----Added for Fix 597175 Ends

  let #reccnter=1
  let #strposn=1
  let $empl=&A.EMPLID
  WHILE #reccnter <= #numnewrc and $targstr <> ' '
   let $stagetxt={ps-substr}($targstr,#strposn,75)
   if $stagetxt <> ' '
    EVALUATE #reccnter
     WHEN <=9
      let $stageseq='00'||to_char(#reccnter)
     WHEN > 99
      let $stageseq=to_char(#reccnter)
     WHEN-OTHER
      let $stageseq='0'||to_char(#reccnter)
    END-EVALUATE

    do Insert-WICO-Record($incd,$empl,$stageseq,$stagetxt)
    let #strposn=#strposn+75
    let #reccnter=#reccnter+1
   end-if
  END-WHILE
 END-if
FROM PS_INJ_ILL_OBJSTMT A
WHERE A.INCIDENT_NBR = $incd
end-SELECT
END-PROCEDURE Stage-WICO-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-WICO-Record($incd,$empl,$stageseq,$stagetxt)
!**********************************************************************************************

let $sql-statement = 'OHS501BC.SQR,Insert-WICO-Record,INSERT'
begin-SQL ON-ERROR=SQL-ERROR
INSERT INTO PS_WCB_WICO_EC (ECTRANSID,INCIDENT_NBR,EMPLID,WCB_WICO_SEQNUM,WCB_WICO_TXT)
VALUES ('EERE',$incd,$empl,$stageseq,$stagetxt)
end-SQL
END-PROCEDURE Insert-WICO-Record




!**********************************************************************************************
BEGIN-PROCEDURE Stage-ERET-Table($incd,$deslng)
!**********************************************************************************************
Let $outstr=''
Do StripCR($deslng,$outstr)
let $targstr=$outstr
 let #strlngth=length($targstr)

!---Commented for fix 597175 Starts
! let #numnewrc=trunc(#strlngth/75,0)+1
!---Commented  for fix 597175 Ends

!---Added for fix 597175 Starts
  if mod(#strlngth, 75) = 0
     let #numnewrc=trunc(#strlngth/75,0)
  else
     let #numnewrc=trunc(#strlngth/75,0)+1
  end-if
!---Added for fix 597175 Ends

 let #reccnter=1
 let #strposn=1
 WHILE #reccnter <= #numnewrc and $targstr <> ' '
   let $stagetxt={ps-substr}($targstr,#strposn,75)
   if $stagetxt <> ' '
    EVALUATE #reccnter
      WHEN <=9
        let $stageseq='00'||to_char(#reccnter)
      WHEN > 99
        let $stageseq=to_char(#reccnter)
      WHEN-OTHER
        let $stageseq='0'||to_char(#reccnter)
    END-EVALUATE
    do Insert-ERET-Record($incd,$stageseq,$stagetxt)
    let #strposn=#strposn+75
    let #reccnter=#reccnter+1
  end-if
 END-WHILE

END-PROCEDURE Stage-ERET-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-ERET-Record($incd,$stageseq,$stagetxt)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Insert-ERET-Record,INSERT'
begin-SQL ON-ERROR=SQL-ERROR
INSERT INTO PS_WCB_ERET_EC (ECTRANSID,INCIDENT_NBR,WCB_ERET_SEQNUM,ERET_DESC_TXT)
VALUES ('EERE',$incd,$stageseq,$stagetxt)
end-SQL
END-PROCEDURE Insert-ERET-Record


!**********************************************************************************************
BEGIN-PROCEDURE Stage-FATT-Table($incd)
!**********************************************************************************************
 Let $itrttm='     '
begin-SELECT
K.INCIDENT_NBR
K.EMPLID
K.DESCRLONG
K.TREATMENT_TM
K.TREATMENT_DT

 let $itime=edit(&K.TREATMENT_TM,'HH:MI')
 IF &K.DESCRLONG <>''
  let $targstr=&K.DESCRLONG
  Let $outstr=''
  Do StripCR($targstr,$outstr)
  let $targstr=$outstr
  let #strlngth=length($targstr)

!---Commented for fix 597175 Starts
! let #numnewrc=trunc(#strlngth/75,0)+1
!---Commented for fix 597175 Ends

!---Added for fix 597175 Starts
  if mod(#strlngth, 75) = 0
     let #numnewrc=trunc(#strlngth/75,0)
  else
     let #numnewrc=trunc(#strlngth/75,0)+1
  end-if
!---Added for fix 597175 Ends

  let #reccnter=1
  let #strposn=1
  let $empl=&K.EMPLID
    do Format-DateTime(&K.TREATMENT_DT,$ftdate, {DEFCMP},'','')

   do Get-Frst-Aid-Seq($incd,$empl,$ftdate,#fatrseq)


  WHILE #reccnter <= #numnewrc and $targstr <> ' '
   let $stagetxt={ps-substr}($targstr,#strposn,75)
   if $stagetxt <> ' '
    EVALUATE #reccnter
     WHEN <=9
      let $stageseq='0'||to_char(#reccnter)
     WHEN-OTHER
      let $stageseq=to_char(#reccnter)
    END-EVALUATE
    do Insert-FATT-Record($incd,$empl,#fatrseq,$stageseq,$stagetxt)
    let #strposn=#strposn+75
    let #reccnter=#reccnter+1
   end-if
  END-WHILE
 END-IF

FROM PS_INJURY_ILL_AID K
WHERE K.TREATMENT_TYPE = 'FA'
  AND K.INCIDENT_NBR   = $incd
end-SELECT
END-PROCEDURE Stage-FATT-Table

BEGIN-PROCEDURE Get-Frst-Aid-Seq($incd,$empl,$ftdate,:#fatrseq)
BEGIN-SELECT
HF.FRST_AID_SEQNUM  &HF.FRST_AID
   let #fatrseq = &HF.FRST_AID
FROM PS_WCB_FATR_EC HF
WHERE HF.INCIDENT_NBR = $incd
  AND HF.EMPLID       = $empl
  AND HF.TREATMENT_DT_C = $ftdate
END-SELECT
END-PROCEDURE Get-Frst-Aid-Seq

!**********************************************************************************************
BEGIN-PROCEDURE Insert-FATT-Record($incd,$empl,#fatrseq,$stageseq,$stagetxt)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Insert-FATT-Record,INSERT'
begin-SQL ON-ERROR=SQL-ERROR
INSERT INTO PS_WCB_FATT_EC (ECTRANSID,INCIDENT_NBR,EMPLID,FRST_AID_SEQNUM,WCB_FATT_SEQNUM,WCB_FATT_TXT)
VALUES('EERE',$incd,$empl,#fatrseq,$stageseq,$stagetxt)
end-SQL
END-PROCEDURE Insert-FATT-Record




!**********************************************************************************************
BEGIN-PROCEDURE Stage-WODI-Table($incd)
!**********************************************************************************************
begin-SELECT
Y.INCIDENT_NBR
Y.EMPLID
Y.COMMENTS
  IF &Y.COMMENTS <>''
    let $targstr=&Y.COMMENTS
    Let $outstr=''
    Do StripCR($targstr,$outstr)
    let $targstr=$outstr
    let #strlngth=length($targstr)


!---Commented for fix 597175 Starts
! let #numnewrc=trunc(#strlngth/75,0)+1
!---Commented for fix 597175 Ends

!---Added for fix 597175 Starts
      if mod(#strlngth, 75) = 0
         let #numnewrc=trunc(#strlngth/75,0)
      else
         let #numnewrc=trunc(#strlngth/75,0)+1
      end-if
!---Added for fix 597175 Ends

    let #reccnter=1
    let #strposn=1
    while #reccnter <= #numnewrc and $targstr <> ' '
      let $stagetxt={ps-substr}($targstr,#strposn,75)
      if $stagetxt <> ' '
         let $empl=&Y.EMPLID
         EVALUATE #reccnter
         WHEN <=9
              let $stageseq='00'||to_char(#reccnter)
         WHEN > 99
              let $stageseq=to_char(#reccnter)
         WHEN-OTHER
              let $stageseq='0'||to_char(#reccnter)
         END-EVALUATE
         do Insert-WODI-Record($incd,$empl,$stageseq,$stagetxt)
         let #strposn=#strposn+75
         let #reccnter=#reccnter+1
       end-if
     END-WHILE
  END-IF
FROM PS_INJURY_ILL Y
WHERE Y.INCIDENT_NBR = $incd
end-SELECT

END-PROCEDURE Stage-WODI-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-WODI-Record($incd,$empl,$stageseq,$stagetxt)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Insert-WODI-Record,INSERT'
begin-SQL ON-ERROR=SQL-ERROR
 INSERT INTO PS_WCB_WODI_EC (ECTRANSID,INCIDENT_NBR,EMPLID,WCB_WODI_SEQNUM,WCB_WODI_TXT)
VALUES ('EERE',$incd,$empl,$stageseq,$stagetxt)
end-SQL
END-PROCEDURE Insert-WODI-Record



!**********************************************************************************************
BEGIN-PROCEDURE Stage-WOES-Table($incd)
!**********************************************************************************************
begin-SELECT
I.INCIDENT_NBR
I.EMPLID
I.STATEMENT
 IF &I.STATEMENT <> ''
   let $targstr=&I.STATEMENT
   Let $outstr=''
   Do StripCR($targstr,$outstr)
   let $targstr=$outstr
   let #strlngth=length($targstr)

!---Commented for fix 597175 Starts
! let #numnewrc=trunc(#strlngth/75,0)+1
!---Commented for fix 597175 Ends

!---Added for fix 597175 Starts
      if mod(#strlngth, 75) = 0
         let #numnewrc=trunc(#strlngth/75,0)
      else
         let #numnewrc=trunc(#strlngth/75,0)+1
      end-if
!---Added for fix 597175 Ends

   let #reccnter=1
   let #strposn=1
   let $empl=&I.EMPLID
   while #reccnter <= #numnewrc and $targstr <> ' '

      let $stagetxt={ps-substr}($targstr,#strposn,75)
      if $stagetxt <> ' '
         EVALUATE #reccnter
         WHEN <=9
              let $stageseq='00'||to_char(#reccnter)
         WHEN > 99
              let $stageseq=to_char(#reccnter)
         WHEN-OTHER
              let $stageseq='0'||to_char(#reccnter)
         END-EVALUATE
         Do Insert-WOES-Record($incd,$empl,$stageseq,$stagetxt)
         let #strposn=#strposn+75
         let #reccnter=#reccnter+1
      end-if
   END-WHILE
 END-IF
FROM PS_INJ_ILL_EMPSTMT I
WHERE I.INCIDENT_NBR = $incd
end-SELECT

END-PROCEDURE Stage-WOES-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-WOES-Record($incd,$empl,$stageseq,$stagetxt)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Insert-WOES-Record,INSERT'
begin-SQL ON-ERROR=SQL-ERROR
 INSERT INTO PS_WCB_WOES_EC (ECTRANSID,INCIDENT_NBR,EMPLID,WCB_WOES_SEQNUM,WCB_WOES_TXT)
VALUES ('EERE',$incd,$empl,$stageseq,$stagetxt)
end-SQL
END-PROCEDURE Insert-WOES-Record


!**********************************************************************************************
BEGIN-PROCEDURE Stage-WOWS-Table($incd)
!**********************************************************************************************
begin-SELECT
F.INCIDENT_NBR
F.EMPLID
F.STATEMENT
 IF &F.STATEMENT <> ''
    let $targstr=&F.STATEMENT
    Let $outstr=''
    Do StripCR($targstr,$outstr)
    let $targstr=$outstr
    let #strlngth=length($targstr)


!---Commented for fix 597175 Starts
! let #numnewrc=trunc(#strlngth/75,0)+1
!---Commented for fix 597175 Ends

!---Added for fix 597175 Starts
      if mod(#strlngth, 75) = 0
         let #numnewrc=trunc(#strlngth/75,0)
      else
         let #numnewrc=trunc(#strlngth/75,0)+1
      end-if
!---Added for fix 597175 Ends

    let #reccnter=1
    let #strposn=1
    let $empl=&F.EMPLID
    while #reccnter <= #numnewrc and $targstr <> ' '
      let $stagetxt={ps-substr}($targstr,#strposn,75)
      if $stagetxt <> ' '
         EVALUATE #reccnter
         WHEN <=9
              let $stageseq='00'||to_char(#reccnter)
         WHEN > 99
              let $stageseq=to_char(#reccnter)
         WHEN-OTHER
              let $stageseq='0'||to_char(#reccnter)
         END-EVALUATE
         Do Insert-WOWS-Record($incd,$empl,$stageseq,$stagetxt)
         let #strposn=#strposn+75
         let #reccnter=#reccnter+1
      end-if
    END-WHILE
 END-IF
FROM PS_INJ_ILL_STMT F
WHERE F.INCIDENT_NBR = $incd
end-SELECT
END-PROCEDURE Stage-WOWS-Table


!**********************************************************************************************
BEGIN-PROCEDURE Insert-WOWS-Record($incd,$empl,$stageseq,$stagetxt)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Insert-WOWS-Record,INSERT'
begin-SQL ON-ERROR=SQL-ERROR
 INSERT INTO PS_WCB_WOWS_EC (ECTRANSID,INCIDENT_NBR,EMPLID,WCB_WOWS_SEQNUM,WCB_WOWS_TXT)
VALUES ('EERE',$incd,$empl,$stageseq,$stagetxt)
end-SQL
END-PROCEDURE Insert-WOWS-Record


!**********************************************************************************************
BEGIN-PROCEDURE Count-Records
!**********************************************************************************************
begin-SELECT
Count(*)  &CCAD_CT
FROM PS_WCB_CCAD_EC
end-SELECT
Let #totcount=#totcount + &CCAD_CT


begin-SELECT
Count(*)  &EDSR_CT
FROM PS_WCB_EDSR_EC
end-SELECT
Let #totcount=#totcount + &EDSR_CT

begin-SELECT
Count(*)  &EERE_CT
FROM PS_WCB_EERE_EC
end-SELECT
Let #totcount=#totcount + &EERE_CT

begin-SELECT
Count(*)  &EMDE_CT
FROM PS_WCB_EMDE_EC
end-SELECT
Let #totcount=#totcount + &EMDE_CT

begin-SELECT
Count(*)  &ERCA_CT
FROM PS_WCB_ERCA_EC
end-SELECT
Let #totcount=#totcount + &ERCA_CT


begin-SELECT
Count(*)  &ERCF_CT
FROM PS_WCB_ERCF_EC
end-SELECT
Let #totcount=#totcount + &ERCF_CT

begin-SELECT
Count(*)  &ERET_CT
FROM PS_WCB_ERET_EC
end-SELECT
Let #totcount=#totcount + &ERET_CT

begin-SELECT
Count(*)  &ERFA_CT
FROM PS_WCB_ERFA_EC
end-SELECT
Let #totcount=#totcount + &ERFA_CT


begin-SELECT
Count(*)  &ERLC_CT
FROM PS_WCB_ERLC_EC
end-SELECT
Let #totcount=#totcount + &ERLC_CT

begin-SELECT
Count(*)  &ERLO_CT
FROM PS_WCB_ERLO_EC
end-SELECT
Let #totcount=#totcount + &ERLO_CT


begin-SELECT
Count(*)  &ERPA_CT
FROM PS_WCB_ERPA_EC
end-SELECT
Let #totcount=#totcount + &ERPA_CT


begin-SELECT
Count(*)  &ERPT_CT
FROM PS_WCB_ERPT_EC
end-SELECT
Let #totcount=#totcount + &ERPT_CT

begin-SELECT
Count(*)  &FATR_CT
FROM PS_WCB_FATR_EC
end-SELECT
Let #totcount=#totcount + &FATR_CT


begin-SELECT
Count(*)  &FATT_CT
FROM PS_WCB_FATT_EC
end-SELECT
Let #totcount=#totcount + &FATT_CT

begin-SELECT
Count(*)  &INWO_CT
FROM PS_WCB_INWO_EC
end-SELECT
Let #totcount=#totcount + &INWO_CT

begin-SELECT
Count(*)  &IWAW_CT
FROM PS_WCB_IWAW_EC
end-SELECT
Let #totcount=#totcount + &IWAW_CT

begin-SELECT
Count(*)  &IWJA_CT
FROM PS_WCB_IWJA_EC
end-SELECT
Let #totcount=#totcount + &IWJA_CT

begin-SELECT
Count(*)  &IWJO_CT
FROM PS_WCB_IWJO_EC
end-SELECT
Let #totcount=#totcount + &IWJO_CT

begin-SELECT
Count(*)  &IWLE_CT
FROM PS_WCB_IWLE_EC
end-SELECT
Let #totcount=#totcount + &IWLE_CT

begin-SELECT
Count(*)  &IWWA_CT
FROM PS_WCB_IWWA_EC
end-SELECT
Let #totcount=#totcount + &IWWA_CT


begin-SELECT
Count(*)  &IWWD_CT
FROM PS_WCB_IWWD_EC
end-SELECT
Let #totcount=#totcount + &IWWD_CT


begin-SELECT
Count(*)  &IWWI_CT
FROM PS_WCB_IWWI_EC
end-SELECT
Let #totcount=#totcount + &IWWI_CT

begin-SELECT
Count(*)  &WICO_CT
FROM PS_WCB_WICO_EC
end-SELECT
Let #totcount=#totcount + &WICO_CT


begin-SELECT
Count(*)  &WODI_CT
FROM PS_WCB_WODI_EC
end-SELECT
Let #totcount=#totcount + &WODI_CT

begin-SELECT
Count(*)  &WODT_CT
FROM PS_WCB_WODT_EC
end-SELECT
Let #totcount=#totcount + &WODT_CT

begin-SELECT
Count(*)  &WOES_CT
FROM PS_WCB_WOES_EC
end-SELECT
Let #totcount=#totcount + &WOES_CT


begin-SELECT
Count(*)  &WOFA_CT
FROM PS_WCB_WOFA_EC
end-SELECT
Let #totcount=#totcount + &WOFA_CT


begin-SELECT
Count(*)  &WOIN_CT
FROM PS_WCB_WOIN_EC
end-SELECT
Let #totcount=#totcount + &WOIN_CT

begin-SELECT
Count(*)  &WOSO_CT
FROM PS_WCB_WOSO_EC
end-SELECT
Let #totcount=#totcount + &WOSO_CT

begin-SELECT
Count(*)  &WOWS_CT
FROM PS_WCB_WOWS_EC
end-SELECT
Let #totcount=#totcount + &WOWS_CT
END-PROCEDURE Count-Records


!**********************************************************************************************
BEGIN-PROCEDURE Stage-MSG-Header-Record
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Stage-MSG-Header-Record,DELETE,PS_WCB_MSGHD_EC'
begin-SQL ON-ERROR=SQL-ERROR
 DELETE FROM PS_WCB_MSGHD_EC
end-SQL

begin-SELECT
JJ.DATE_TRANS
JJ.TIME_TRANS
JJ.SENDER_ID_BC_CAN
JJ.MSG_ID_BC_CAN
JJ.RECEIVER_ID_BC_CAN
JJ.SRCE_EMAIL_BC_CAN
JJ.SRCE_MBOX_BC_CAN
JJ.DEST_EMAIL_BC_CAN
JJ.DEST_MBOX_BC_CAN


    do Format-DateTime(&JJ.DATE_TRANS,$dttran, {DEFCMP},'','')
 let $tmtran=EDIT(&JJ.TIME_TRANS,'HH:MI:SS')
 let $msgpart1=&JJ.SENDER_ID_BC_CAN
 let $msgpart2={ps-substr}(&JJ.MSG_ID_BC_CAN,5,3)
 let $msgpart3='.'
 let $msgpart4={ps-substr}(&JJ.MSG_ID_BC_CAN,8,2)
 let $msgpart5='B'
 let $filenm=$msgpart1 || $msgpart2 || $msgpart3 || $msgpart4 || $msgpart5
 let $sibc=&JJ.SENDER_ID_BC_CAN
 let $mibc=&JJ.MSG_ID_BC_CAN
 let $ribc=&JJ.RECEIVER_ID_BC_CAN
 Let $sebc=&JJ.SRCE_EMAIL_BC_CAN
 Let $smbc=&JJ.SRCE_MBOX_BC_CAN
 Let $debc=&JJ.DEST_EMAIL_BC_CAN
 Let $dmbc=&JJ.DEST_MBOX_BC_CAN

 do Insert-MSGHD-Record($dttran,$tmtran,#totcount,$filenm,$Prcs_OprID,$Prcs_Run_Cntl_ID,$sibc,$mibc,$ribc,$sebc,$smbc,$debc,$dmbc)
FROM  PS_RUN_CNTL_OHS JJ
WHERE JJ.OPRID       = $Prcs_OprID
AND   JJ.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-SELECT
END-PROCEDURE Stage-MSG-Header-Record


!**********************************************************************************************
BEGIN-PROCEDURE Insert-MSGHD-Record($dttran,$tmtran,#totcount,$filenm,$Prcs_OprID,$Prcs_Run_Cntl_ID,$sibc,$mibc,$ribc,$sebc,$smbc,$debc,$dmbc)
!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Insert-MSGHD-Record,INSERT,PS_WCB_MSGHD_EC'
begin-SQL ON-ERROR=SQL-ERROR
 INSERT INTO PS_WCB_MSGHD_EC (ECTRANSID,ECQUEUEINSTANCE,ECTRANSINOUTSW,WCB_REC_HDR,FV_IND_BC_CAN,WCB_REC_VERSION,
SENDER_ID_BC_CAN,MSG_ID_BC_CAN,RECEIVER_ID_BC_CAN,MESSAGE_SENT_DT_C,MESSAGE_SENT_TM5,ACKKNWLG_REQD_SW,SRCE_SFTWR_ID,
SRCE_SFTWR_VERS,SRCE_EMAIL_BC_CAN,SRCE_MBOX_BC_CAN,DEST_EMAIL_BC_CAN,DEST_MBOX_BC_CAN,TEST_PROD_INDCTR,NUM_REC_BC_CAN,
FILE_NAME_BC_CAN,FIELD_SEP_BC_CAN,WCB_FILR3,WCB_REC_TRLR,WCB_FILR4)
VALUES
('EERE',
0,
'O',
'MH#',
'F',
020,
$sibc,$mibc,$ribc,
$dttran,
$tmtran,
'Y',
'PS',
'1',
$sebc,
$smbc,
$debc,
$dmbc,
'P',
#totcount,
$filenm,
' ',
' ',
'#MH',
' ')
end-SQL
END-PROCEDURE Insert-MSGHD-Record

!**********************************************************************************************
BEGIN-PROCEDURE Stage-MSG-Trailer-Record

!**********************************************************************************************
let $sql-statement = 'OHS501BC.SQR,Stage-MSG-Trailer-Record,DELETE,PS_WCB_MSGTR_EC'
begin-SQL ON-ERROR=SQL-ERROR
 DELETE FROM PS_WCB_MSGTR_EC
end-SQL
let $sql-statement = 'OHS501BC.SQR,Stage-MSG-Trailer-Record,INSERT,PS_WCB_MSGTR_EC'
begin-SQL ON-ERROR=SQL-ERROR
 INSERT INTO PS_WCB_MSGTR_EC (ECTRANSID,WCB_REC_HDR,SENDER_ID_BC_CAN,MSG_ID_BC_CAN,
MSG_CHKSUM_BC_CAN,WCB_REC_TRLR,WCB_FILR4)
SELECT
'EERE',
'MT#',
SENDER_ID_BC_CAN,
MSG_ID_BC_CAN,
'  ',
'#MT',
' '
FROM PS_RUN_CNTL_OHS A
WHERE A.OPRID       = $Prcs_OprID
  AND A.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-SQL
END-PROCEDURE Stage-MSG-Trailer-Record


!**********************************************************************************************
Begin-Procedure StripCR($instr,:$outstr)
!**********************************************************************************************
Let $outstr=''
Let #instrl=length($instr)
Let #curstpos=1
While #curstpos <= #instrl
Let $curchar={ps-substr}($instr,#curstpos,1)
If $curchar=chr(13) or $curchar=chr(10)
 Let $outstr=$outstr||' '
else
 Let $outstr=$outstr||$curchar
End-if
Let #curstpos=#curstpos+1
End-While
End-Procedure


!**********************************************************************************************
Begin-Procedure Search-WOIN-Injury-Type($incd,$empl,:$outtyp)
!**********************************************************************************************
begin-SELECT
EO.EVENT_OUTCOME
 Let $outtyp= rtrim(&EO.EVENT_OUTCOME,' ')
FROM PS_WCB_WOIN_EC EO
WHERE EO.INCIDENT_NBR = $incd
  and EO.EMPLID       = $empl
end-SELECT
End-Procedure Search-WOIN-Injury-Type



!******************************************************************!
begin-procedure Get-Phone-Data ($Emplid, :$Phoneno)
!******************************************************************!
  if rtrim($Emplid,' ') = ''
    move '' to $Phoneno
    goto GetPhoneExit
  end-if

begin-SELECT
PP.PHONE
FROM  PS_PERSONAL_PHONE PP
WHERE PP.EMPLID = $Emplid
  AND PP.PHONE_TYPE = 'MAIN'
end-SELECT

         let $Phoneno      = rtrim(&PP.Phone,' ')
         if $Phoneno = ''
               let $Phoneno = ' '
        end-if

GetPhoneExit:

end-procedure

!******************************************************************!
begin-procedure Get-Person
!******************************************************************!
Let $Pers_BirthDate = ' '
Let $Pers_Dt_Of_Death = ' '

begin-select
PERSON.BIRTHDATE,
PERSON.DT_OF_DEATH

  Let $Pers_BirthDate = &PERSON.BIRTHDATE
  Let $Pers_Dt_Of_Death = &PERSON.DT_OF_DEATH


From PS_PERSON PERSON
Where PERSON.EMPLID = $EmplID

end-select

end-procedure !Get-Person

!******************************************************************!
begin-procedure Get-Pers_Data_Effdt ($Emplid, :$Pers_Data_Sex, :$Pers_Data_Health_Care_Nbr)
!******************************************************************!
Let $Pers_Data_Sex = ' '
Let $Pers_Data_Health_Care_Nbr = ' '

!---Commented for resolution 618855 Starts
!begin-select
!PDE.SEX
!PDECAN.HEALTH_CARE_NBR
!  Let $Pers_Data_Sex = &PDE.SEX
!  Let $Pers_Data_Health_Care_Nbr = &PDECAN.HEALTH_CARE_NBR
!
!From PS_PERS_DATA_EFFDT PDE,
!     PS_PERS_DATA_CAN PDECAN
!Where PDE.EMPLID = $Emplid
!and PDE.EFFDT =
!       (SELECT MAX(PDF.EFFDT)
!        from PS_PERS_DATA_EFFDT PDF
!        where PDF.EMPLID = PDE.EMPLID
!        and   PDF.EFFDT <= $ThruDate)
!and PDECAN.EMPLID = PDE.EMPLID
!and PDECAN.EFFDT = PDE.EFFDT
!end-select
!---Commented for resolution 618855 Ends

!---Added for Resolution 618855 Starts
begin-select
PDE.SEX
  Let $Pers_Data_Sex = &PDE.SEX
From PS_PERS_DATA_EFFDT PDE
Where PDE.EMPLID = $Emplid
and PDE.EFFDT =
       (SELECT MAX(PDF.EFFDT)
        from PS_PERS_DATA_EFFDT PDF
        where PDF.EMPLID = PDE.EMPLID
        and   PDF.EFFDT <= $_incdtx)
end-select

begin-select
PDECAN.HEALTH_CARE_NBR
    Let $Pers_Data_Health_Care_Nbr = &PDECAN.HEALTH_CARE_NBR
From PS_PERS_DATA_CAN PDECAN
Where PDECAN.EMPLID = $Emplid
and PDECAN.EFFDT =
       (SELECT MAX(PDF1.EFFDT)
        from PS_PERS_DATA_CAN PDF1
        where PDF1.EMPLID = PDECAN.EMPLID
        and   PDF1.EFFDT <= $_incdtx)
end-select
!---Added for Resolution 618855 Ends

end-procedure !Get-Pers_Data_Effdt

#include 'stdapi.sqc'
#include 'curdttim.sqc'
#include 'datetime.sqc'
#include 'number.sqc'
#include 'frquency.sqc'
#Include 'getprimj.sqc'  ! Routines for selecting EE's primary job
#Include 'datemath.sqc'
#Include 'getaddr.sqc'   !Routine to retrieve Home Address

