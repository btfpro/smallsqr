!***********************************************************************
!  BUD021.SQR:  Budget Load - Load Suspense Account                    *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2007/04/24:18:51:48                                 *
!       $Release:  HR9                                                 *
!    $Resolution:  689716                                              *
!                                                                      *
!***********************************************************************
! This program is specific to HRMS for Public Sector.                  *
!***********************************************************************

#include 'setenv.sqc'
#include 'setup07.sqc'
#define  daysinyear 365
#define  colr 5

!***********************************************************************
Begin-REPORT

  do Housekeeping
  do Mainline
  do Wrapup

End-REPORT

Begin-heading 6
       #include 'stdhdg08.sqc'  ! for standard heading and from/thru dates
       print '' (+1,,)
End-heading


!***********************************************************************
! HOUSEKEEPING                                                         *
! This procedure performs the application initializations.  Formats    *
! variables for use.  Calls the procedures to get input parameters.    *
!***********************************************************************
Begin-Procedure Housekeeping

        do INIT-DATETIME
        do INIT-NUMBER
        do GET-CURRENT-DATETIME
        do DEFINE-PRCS-VARS
        do GET-RUN-CONTROL-PARMS
        do SELECT-PARAMETERS

        move 'BUD021.SQR' to $ReportID
        move 'Load Suspense Account' to $ReportTitle
        show $ReportTitle ' ' $FromDate ' ' $ThruDate

End-Procedure


!***********************************************************************
! GET-VALUES                                                           *
! This procedure gets the necessary calls in the procedure             *
! Get-FiscalYear that will be used throughout the report.              *
!***********************************************************************
Begin-Procedure Get-Values

        do Get-From-Thru-Date
        do Get-FiscalYear
        do Get-Setid
        do Get-Suspense-Acct-cd
        do Get-Suspense-Assignment

! Convert dates to dtu format for date calculation as well as
! cmp format for comparison

        do Convert-To-DTU-Date($FromDate, $FromDate_Dtu)
        do Convert-To-DTU-Date($ThruDate, $ThruDate_Dtu)
        do Format-DateTime ($FromDate, $FromDate_Cmp, {DEFCMP},'','')
        do Format-DateTime ($ThruDate, $ThruDate_Cmp, {DEFCMP},'','')

! Calculate an adjusted 'ThruDate' which is one day later than user
! specified ThruDate.  This ensures that $ThruDate-Adj minus $FromDate
! = 365 (or 366)        [i.e. {daysinyear}  ]

        do dtu-add-days($ThruDate_Dtu, 1, $ThruDate_Adj_Dtu)
        do Convert-From-DTU-Date($ThruDate_Adj_Dtu, $ThruDate_Adj)

End-Procedure



!***********************************************************************
! MAINLINE                                                             *
! This procedure is the main processing paragraph.  For each department*
! in the run control table, it will process all EE job records         *
! associated with that department.  Following this, it will process all*
! vacant positions.                                                    *
!***********************************************************************
Begin-Procedure Mainline


  !Process all dept budgets in set before individual departments
  do Process-Budgets-in-Set


!Process individual departments.

Begin-SELECT distinct

RC.SETID
RC.DEPTID
RC.HP_ACCT_CD_SUSPNS

        let $SetID            = rtrim(&RC.SETID,  ' ')
        let $DeptID           = rtrim(&RC.DEPTID, ' ')
        let $Suspense_Acct    = rtrim(&RC.HP_ACCT_CD_SUSPNS, ' ')


        !Use these three variables for both modes
        let $global_setid      = rtrim(&RC.SETID,  ' ')
        Let $global_deptid     = rtrim(&RC.DEPTID,  ' ')
        if $Suspense_Acct = ''
            let $global_suspense_acct = $Suspense_Acct_cd
        else
            let $global_suspense_acct = $Suspense_Acct
        end-if

        do Check-Valid-Budgeting-Dept

        if $Valid_Bdgt_Dept = 'N'

            display '  --> not defined as Budgeting Department, department ignored'

        else

            display ' '


            do Find-Suspense-Acct-for-Update

        end-if

FROM PS_RUN_CNTL_BUDSPN RC
WHERE RC.OPRID        = $prcs_oprid
  AND RC.RUN_CNTL_ID  = $prcs_run_cntl_id
ORDER BY RC.SETID,
         RC.DEPTID

End-SELECT

End-Procedure


!***********************************************************************
! PROCESS-BUDGETS-IN-SET                                               *
! This procedure processes all budgets in the Setid. This is done first*
! before individual departments are processed.                         *
!***********************************************************************
Begin-Procedure Process-Budgets-In-Set


!Process budget dates.
Begin-SELECT

BDGTDT.SETID
BDGTDT.DEPTID
BDGTDT.BUDGET_BEGIN_DT


        let $GSetID            = rtrim(&BDGTDT.SETID,  ' ')
        let $GDeptID           = rtrim(&BDGTDT.DEPTID, ' ')
        let $GBegin-Dt         = &BDGTDT.BUDGET_BEGIN_DT

        !Use these three variables for both modes
        let $global_setid      = rtrim(&BDGTDT.SETID,  ' ')
        Let $global_deptid     = rtrim(&BDGTDT.DEPTID,  ' ')
        LET $global_suspense_acct = $Suspense_Acct_cd

        do Check-Valid-Budgeting-Dept

        if $Valid_Bdgt_Dept = 'N'

            display '  --> not defined as Budgeting Department, department ignored'

        else
            display ' '


            do Apply-Suspense-Acct

        end-if

FROM PS_DEPT_BUDGET_DT BDGTDT
WHERE BDGTDT.SETID = $RUNCTL_SETID
        AND BDGTDT.FISCAL_YEAR = #FiscalYear
        AND BDGTDT.BUDGET_BEGIN_DT <= $Fromdate
        AND BDGTDT.BUDGET_END_DT >= $Thrudate
        AND BDGTDT.DEPTID NOT IN
             (SELECT GBL.DEPTID
               FROM PS_RUN_CNTL_BUDSPN GBL
               WHERE GBL.OPRID = $prcs_oprid
               AND GBL.RUN_CNTL_ID  = $prcs_run_cntl_id)

ORDER BY BDGTDT.SETID,
         BDGTDT.DEPTID

End-SELECT

End-procedure Process-Budgets-In-Set


!***********************************************************************
! CHECK-VALID-BUDGETING-DEPT                                           *
! This procedure validate the specified DEPTID to determine if it is   *
! defined as a budgeting department. Setup the indicator accordingly.  *
!                                                                      *
!                                                                      *
!***********************************************************************
Begin-Procedure Check-Valid-Budgeting-Dept

     let $Valid_Bdgt_Dept = 'N'

Begin-SELECT
DPT.DEPTID
DPT.BUDGET_DEPTID

     if &DPT.DEPTID = &DPT.BUDGET_DEPTID
         let $Valid_Bdgt_Dept = 'Y'
     else
         let $Valid_Bdgt_Dept = 'N'
     end-if

FROM PS_DEPT_TBL DPT
WHERE DPT.SETID = $global_setid
  AND DPT.DEPTID = $global_deptid
  AND DPT.EFFDT = (SELECT MAX(DPT1.EFFDT) FROM PS_DEPT_TBL DPT1
                    WHERE DPT1.SETID = DPT.SETID
                      AND DPT1.DEPTID = DPT.DEPTID
                      AND DPT1.EFFDT <= $FromDate)
End-Select

End-Procedure Check-Valid-Budgeting-Dept


!***********************************************************************
! APPLY-SUSPENSE-ACCT                                                  *
! This procedure inserts or updates the suspense account to the        *
! specified general suspense account                                   *
!***********************************************************************

Begin-Procedure Apply-Suspense-Acct


! If there are no suspense account automatically enter the default
! suspense account

  LET #No-accounts = 0

Begin-SELECT

CHK.SETID
CHK.DEPTID


        LET #No-accounts = #No-accounts + 1


FROM PS_DEPTBDGT_SUSPNS CHK
WHERE CHK.SETID = $GSetID
  AND CHK.DEPTID = $GDeptID
  AND CHK.FISCAL_YEAR = #FiscalYear

End-Select

if #No-accounts = 0

   display 'Processing SetID/DeptID = ' noline
   display $GSetID                       noline
   display ' / '                        noline
   display $GDeptID                      noline
   display ' with Suspense Acct = '     noline
   display $Suspense_Acct_cd            noline

   do Insert-Suspense-Acct

else

   do Find-Suspense-Acct-for-Update

end-if


End-Procedure Apply-Suspense-Acct

!***********************************************************************
! INSERT-SUSPENSE-ACCT                                                 *
! Inserts the default suspense account because one did not exist       *
!                                                                      *
!***********************************************************************

Begin-Procedure Insert-Suspense-Acct

let $SQL-STATEMENT = 'BUD021.SQR, INSERT, PS_DEPTBDGT_SUSPNS'
begin-sql on-error=SQL-Error
INSERT INTO PS_DEPTBDGT_SUSPNS (
  SETID,
  DEPTID,
  FISCAL_YEAR,
  EFFDT,
  EFFSEQ,
  EFF_STATUS,
  HP_ACCT_CD_SUSPNS)
VALUES (
  $GSetID,
  $GDeptID,
  #FiscalYear,
  {DateIn-Prefix}$GBegin-Dt{DateIn-Suffix},
  0,
  'A',
  $Suspense_acct_cd
  )
end-sql


End-Procedure Insert-Suspense-Acct


!***********************************************************************
! FIND-SUSPENSE-ACCT-FOR-UPDATE                                        *
! This procedure will update any current suspense account with an      *
! account code of blank.  If the option to apply to all budgets it     *
! update those suspense account with valid codes                       *
!***********************************************************************

Begin-Procedure Find-Suspense-Acct-for-Update

let #processed = 0


Begin-SELECT

SUSPACCT.SETID
SUSPACCT.DEPTID
SUSPACCT.FISCAL_YEAR
SUSPACCT.EFFDT
SUSPACCT.EFFSEQ
SUSPACCT.HP_ACCT_CD_SUSPNS

    let #processed = 1
    LET $Update-acct  = &suspacct.hp_acct_cd_suspns
    LET $Update-effdt = &suspacct.effdt


    if rtrim($Update-acct, ' ') = ''

       display 'Processing SetID/DeptID = ' noline
       display $global_SetID                noline
       display ' / '                        noline
       display $global_deptID               noline
       display ' with Suspense Acct = '     noline
       display $global_suspense_acct        noline

       do update-suspense-acct

    else
       if $Suspense_assignment = 'Y'


          display 'Processing SetID/DeptID = ' noline
          display $global_SetID                noline
          display ' / '                        noline
          display $global_deptID               noline
          display ' with Suspense Acct = '     noline
          display $global_suspense_acct        noline
          let #new_effseq = &SUSPACCT.EFFSEQ + 1

          do insert-update-suspense-acct
       end-if

    end-if



FROM PS_DEPTBDGT_SUSPNS SUSPACCT
WHERE SUSPACCT.SETID = $global_SetID
  AND SUSPACCT.DEPTID = $global_deptID
  AND SUSPACCT.FISCAL_YEAR = #FiscalYear
  AND SUSPACCT.EFFDT = (SELECT MAX(EFFDT)
                 FROM PS_DEPTBDGT_SUSPNS DT
                 WHERE DT.SETID = SUSPACCT.SETID
                 AND DT.DEPTID = SUSPACCT.DEPTID
                 AND DT.FISCAL_YEAR = SUSPACCT.FISCAL_YEAR)
  AND SUSPACCT.EFFSEQ = (SELECT MAX(EFFSEQ)
                 FROM PS_DEPTBDGT_SUSPNS SEQ
                 WHERE SEQ.SETID = SUSPACCT.SETID
                 AND SEQ.DEPTID = SUSPACCT.DEPTID
                 AND SEQ.FISCAL_YEAR = SUSPACCT.FISCAL_YEAR
                 AND SEQ.EFFDT = SUSPACCT.EFFDT)


End-Select

if #processed = 0

  let #new_effseq = 0
  let $Update-effdt = $fromdate

  display 'Processing SetID/DeptID = ' noline
  display $global_SetID                noline
  display ' / '                        noline
  display $global_deptID               noline
  display ' with Suspense Acct = '     noline
  display $global_suspense_acct        noline
  let #new_effseq = &SUSPACCT.EFFSEQ + 1
  do insert-update-suspense-acct
end-if




End-procedure  Find-Suspense-Acct-for-Update

!***********************************************************************
! UPDATE-SUSPENSE-ACCT                                                 *
! This procedure will update the suspense account with the applicable  *
! account code.                                                        *
!                                                                      *
!***********************************************************************
Begin-Procedure Update-Suspense-Acct

let $SQL-STATEMENT = 'BUD021.SQR, UPDATE, PS_DEPTBDGT_SUSPNS'
begin-sql on-error=SQL-Error
UPDATE PS_DEPTBDGT_SUSPNS
  SET HP_ACCT_CD_SUSPNS = $global_suspense_acct
WHERE SETID                     = &SUSPACCT.SETID
  AND DEPTID                    = &SUSPACCT.DEPTID
  AND FISCAL_YEAR               = &SUSPACCT.FISCAL_YEAR
  AND EFFDT                     = &SUSPACCT.EFFDT
  AND EFFSEQ                    = &SUSPACCT.EFFSEQ
  AND HP_ACCT_CD_SUSPNS         = &SUSPACCT.HP_ACCT_CD_SUSPNS

end-sql
End-Procedure

!***********************************************************************
! INSERT-UPDATE-SUSPENSE-ACCT                                          *
! Inserts the default suspense account because one did not exist       *
!                                                                      *
!***********************************************************************

Begin-Procedure Insert-Update-Suspense-Acct


let $SQL-STATEMENT = 'BUD021.SQR, INSERT, PS_DEPTBDGT_SUSPNS'
begin-sql on-error=SQL-Error
INSERT INTO PS_DEPTBDGT_SUSPNS (
  SETID,
  DEPTID,
  FISCAL_YEAR,
  EFFDT,
  EFFSEQ,
  EFF_STATUS,
  HP_ACCT_CD_SUSPNS)
VALUES (
  $global_SetID,
  $global_DeptID,
  #FiscalYear,
  $Update-effdt,
  #new_effseq,
  'A',
  $global_suspense_acct
  )
end-sql

end-procedure Insert-Update-Suspense-Acct

!***********************************************************************
! WRAPUP                                                               *
! This paragraph ends the report process and updates the status of the *
! job in the process scheduler.                                        *
!***********************************************************************
Begin-Procedure Wrapup

  do Delete-Run-Control
  do Reset
  do Successful-EOJ

End-Procedure


!****************************************************************************
! DELETE-RUN-CONTROL                                                        *
! Deletes run control information from run control table.                   *
!****************************************************************************
Begin-Procedure Delete-Run-Control


let $SQL-STATEMENT = 'BUD021.SQR, DELETE, PS_RUN_CNTL_BLOAD'
begin-sql on-error=SQL-Error
DELETE FROM PS_RUN_CNTL_BLOAD
WHERE OPRID       = $Prcs_OprID
  AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-sql

let $SQL-STATEMENT = 'BUD021.SQR, DELETE, PS_RUN_CNTL_BUDSPN'
begin-sql on-error=SQL-Error
DELETE FROM PS_RUN_CNTL_BUDSPN
WHERE OPRID       = $Prcs_OprID
  AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-sql

End-Procedure

!***********************************************************************
! SQCs                                                                 *
!***********************************************************************
#include 'reset.sqc'     !Reset printer procedure
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'prcsapi.sqc'   !Update Process API
#include 'prcsdef.sqc'   !Update Process Request variable declare
#include 'blrnctl1.sqc'  !Get run control parameters.  This will change
#include 'blgetval.sqc'  !Formats run control parameters.  This will also
#include 'eoj.sqc'       !Updates process scheduler status
#include 'datemath.sqc'
#include 'askftd.sqc'
#include 'getactrs.sqc'
#include 'getdptnm.sqc'
