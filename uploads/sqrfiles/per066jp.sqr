!***********************************************************************
!  PER066JP:  Employee Summary showing Additional Appointment Statuses *
!***********************************************************************

!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!
!----------------------------------------------------------------------
!
!          $Date:  2006/07/19:14:54:11                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'   !Set environment

! !!!!!!!!!!!!!!!!!! Edit these as appropriate !!!!!!!!!!!!!!!!!!!!
#define COL1  1         ! Dept Name (length 30)
#define COL2  32        ! Dept ID   (length 10)
#define COL3  44        ! Supv Lvl  (length 30 - truncated)
#define COL4  59        ! Empl ID   (length 11)
#define COL4B 72        ! Empl Rcd (length 4)
#define COL5  78        ! Name      (length 50 - truncated)
#define COL6  101       ! w. Kenmu  (8 should do - 4 in japanese)
#define COL7  109       ! total     (8 should do - 4 in japanese)
#define COL8  117       ! w/o Kenmu (8 should do - 4 in japanese)
#define COL9  14        ! Company and As of Date
#define END   125       ! max width (for ptset01.sqc 125 columns fit)
#define LINES 79        ! number of lines on the page, taken from ptset01.sqc
#define MAX_ROWS1 200   ! Max rows for storing the supervisor level IDs.
                        ! Must be greater than total number of distinct Supervisor Levels
#define MAX_ROWS2 10000 ! Max rows for storing the department detailed info.
                        ! Must be greater than no. of employees in largest department processed.

!************************
! SETUP SECTION *********
!************************

begin-setup

  #DEFINE JapaneseDates

  !Printer and page-size information
  #include 'ptset01.sqc'

end-setup

!************************
! REPORT SECTION ********
!************************

begin-REPORT

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Delete-From-AE-Tables
  do Stdapi-Term

end-REPORT

!************************
! HEADING SECTION *******
!************************

begin-heading 9

  #include 'stdhdgtr.sqc'


  let $COMPANY_LBL1 = RTRIM($COMPANY_LBL, ' ') || ':'
  print  $COMPANY_LBL1    (+1,{COL1})
  print  $CompanyName    (0,{COL9})
  let $ASOFDATE_LBL1 = RTRIM($ASOFDATE_LBL, ' ') || ':'
  print  $ASOFDATE_LBL1 (+1,{COL1})
  do Format-DateTime($AsOfDate,$AsOfDate_Out, {DEFKAN}, '', '')
  print  $AsOfDate_Out   (0,{COL9})

  ! These two lines are not required in the japanese version since the
  ! text should fit in the $KENMU, $TOTAL_I and $TOTAL_NI vars.
  if $language_cd = 'ENG'
    print  $TOTAL    (+2,{COL7},)        !bold
  else
    position (+1)
  end-if

  ! Titles and heading bar
  print  $DEPARTMENT (+1,{COL1},#space1)  !bold
  print  $DEPTID      (0,{COL2},#space2)  !bold
  print  $SUPVLVL     (0,{COL3},#space3)  !bold
  print  $EMPL_ID     (0,{COL4},#space4)  !bold
  print  $EMPL_RCD_LBL (0,{COL4B},#space4b) !bold
  print  $NAME        (0,{COL5},#space5)  !bold
  print  $KENMU       (0,{COL6},#space6)  !bold
  print  $TOTAL_I     (0,{COL7},#space7)  !bold
  print  $TOTAL_NI    (0,{COL8},#space8)  !bold
  graphic (,{COL1},#titlew) horz-line 10

end-heading

!************************
! INIT-REPORT SECTION ***
!************************
begin-procedure Init-Report

  ! Standard processing
  move 'PER066JP' to $ReportID
  display $ReportTitle
  do Stdapi-Init

  ! Disable command line execution
  if $prcs_oprid = ''
    display ''
    display 'REPORT CANNOT BE EXECUTED OUTSIDE OF PEOPLESOFT, PLEASE USE PROCESS SCHEDULER'
    do Reset
    do Stdapi-Term
    STOP QUIET
  end-if

  ! Obtain values from run control
begin-select
ASOFDATE
SETID
COMPANY
TREE_NAME
TREE_NODE
PNLGRPNAME
 FROM PS_RUN_CNTL_HR_JPN
 WHERE RUN_CNTL_ID = $prcs_run_cntl_id AND
       OPRID = $prcs_oprid
end-select

  ! Obtain language code
Begin-Select
LANGUAGE_CD
 FROM PSOPTIONS
End-Select

  let $Company = &COMPANY
  let $AsOfDate = &ASOFDATE
  do Get-Company-Data

  ! Assign process and tree variables
  Let $AsOfDate = rtrim(&ASOFDATE,' ')
  Let $si = rtrim(&SETID, ' ')
  Let $tree_name = rtrim(&TREE_NAME,' ')
  Let $tree_node = rtrim(&TREE_NODE,' ')
  Let $language_cd = $prcs_language_cd
  Let $base_lng_cd = &LANGUAGE_CD

  ! String table-related
  do Init_Report_Translation($ReportID, $language_cd)
  do Append_Report_Translation('HR')

  ! Calculate available spaces from column definitions (to truncate long fields)
  let #space1 = {COL2} - {COL1} - 1
  let #space2 = {COL3} - {COL2} - 1
  let #space3 = {COL4} - {COL3} - 1
  let #space4 = {COL4B} - {COL4} - 1
  let #space4b = {COL5} - {COL4B} - 1
  let #space5 = {COL6} - {COL5} - 1
  let #space6 = {COL7} - {COL6} - 1
  let #space7 = {COL8} - {COL7} - 1
  let #space8 = {END}  - {COL8} - 1
  let #titlew = {END} - {COL1}         !width of title line = width of page
  let #subtw =  {END} - {COL5}         !width of subtotal line

  LET $PNLGRPNAME = &PNLGRPNAME

  DO Security-Param
  DO Security-Param-JPN2

end-procedure Init-Report

!************************
! PROCESS-MAIN SECTION **
!************************
begin-procedure Process-Main

  do Get-Labels
  do Process-Tree

end-procedure Process-Main

!********************************
! PROCESS-TREE SECTION **********
!********************************

begin-procedure Process-Tree

  ! Initialize variables
  let #GlblTotal = 0
  let #GlblAddAppt = 0
  Let #TotalSum = 0
  let $Old_Dept = ' '

  ! Select each department and call processing procedures
  Let $Select_Records = 'PS_PER066JP_DATA A, PS_PERSON_NAME P, ' || $Security_Record

Begin-Select
A.DEPTID
A.EMPLID
A.EMPL_RCD
A.BUSINESS_UNIT
A.SUPV_LVL_ID
A.MAIN_APPT_NUM_JPN
A.SETID
A.TREE_NODE_NUM
A.TREE_NODE_NUM_END
P.NAME


  If $Old_Dept <> &A.DEPTID
    If #TotalSum > 0
      let #Difference = #TotalSum - #AddApptSum
      print $TOTAL   (+1,{COL5},#space5)
      print #AddApptSum (,{COL6},#space6) EDIT 99999
      print #TotalSum   (,{COL7},#space7) EDIT 99999
      print #Difference (,{COL8},#space8) EDIT 99999
      graphic           (,{COL5},#subtw) horz-line 10
      position (+1)

      let #GlblTotal = #GlblTotal + #TotalSum
      let #GlblAddAppt = #GlblAddAppt + #AddApptSum

    end-if
      Let #AddApptSum = 0
      Let #TotalSum = 0
    do Write-Dept
  end-if
  Let $Old_Dept = &A.DEPTID
  Let #TotalSum = #TotalSum + 1

  If &A.EMPL_RCD <> &A.MAIN_APPT_NUM_JPN
    Let #AddApptSum = #AddApptSum + 1
  end-if

  do Get-Supv-Lvl-Info
  do Write-Dept-Details
 FROM   [PS_PER066JP_DATA A, PS_PERSON_NAME P, PS_FAST_SQR_SEC_VW SCRTY: $Select_Records]
 WHERE  P.EMPLID = A.EMPLID
  AND A.JOBINSTANCE = #prcs_job_instance
  [$SecurityClause]
  AND A.EMPLID = SCRTY.EMPLID
  And A.EMPL_RCD = SCRTY.EMPL_RCD

ORDER BY  A.SETID, A.TREE_NODE_NUM, A.DEPTID, A.TREE_NODE_NUM_END, A.SUPV_LVL_ID, A.EMPLID
End-Select

    If #TotalSum > 0
      let #Difference = #TotalSum - #AddApptSum
      print $TOTAL   (+1,{COL5},#space5)
      print #AddApptSum (,{COL6},#space6) EDIT 99999
      print #TotalSum   (,{COL7},#space7) EDIT 99999
      print #Difference (,{COL8},#space8) EDIT 99999
      graphic           (,{COL5},#subtw) horz-line 10
      position (+1)

      let #GlblTotal = #GlblTotal + #TotalSum
      let #GlblAddAppt = #GlblAddAppt + #AddApptSum

    end-if

  ! Write global totals
  let #GlblDiff = #GlblTotal - #GlblAddAppt
  print $TOTAL       (,{COL5},#space5)
  print #GlblAddAppt (,{COL6},#space6) EDIT 99999
  print #GlblTotal   (,{COL7},#space7) EDIT 99999
  print #GlblDiff    (,{COL8},#space8) EDIT 99999

end-procedure Process-Tree

!***************************
! WRITE-DEPT SECTION *******
!***************************

begin-procedure Write-Dept

  ! Ensure at least two lines for the last dept on a page
  if #_current-line >= {LINES} - 1
    new-page
  end-if

  ! $dept_descr is originally <null>
  let $dept_descr = ''

  ! ----- START IF -----
  ! If not base language, look for related language entry
  if $language_cd <> $base_lng_cd

Begin-Select
A3.DESCR
  let $dept_descr = &A3.DESCR
 FROM  PS_DEPT_TBL_LANG A3
 WHERE A3.DEPTID = &A.DEPTID AND
       A3.SETID = $SI AND
       A3.LANGUAGE_CD = $language_cd AND
       A3.EFFDT = (SELECT MAX(B3.EFFDT)
                   FROM PS_DEPT_TBL_LANG B3
                   WHERE B3.DEPTID = &A.DEPTID AND
                         B3.SETID = A3.SETID AND
                         B3.LANGUAGE_CD = $language_cd AND
                         B3.EFFDT <= $AsOfDate)
End-select

  end-if
  ! ------ END IF ------

  ! ----- START IF -----
  ! If $dept_descr still <null>, use the base language entry
  if $dept_descr = ''

Begin-Select
A4.DESCR
  let $dept_descr = &A4.DESCR
 FROM  PS_DEPT_TBL A4
 WHERE A4.DEPTID = &A.DEPTID AND
       A4.SETID = $SI AND
       A4.EFFDT = (SELECT MAX(B4.EFFDT)
                   FROM PS_DEPT_TBL B4
                   WHERE B4.DEPTID = &A.DEPTID AND
                         B4.SETID = A4.SETID AND
                         B4.EFFDT <= $AsOfDate)
End-select

  end-if
  ! ------ END IF ------

  ! Print the department description and ID
  print $dept_descr (+1,{COL1}, #space1)
  print &A.DEPTID  (,{COL2}, #space2)

end-procedure Write-Dept

!**********************************
! WRITE-DEPT-DETAILS SECTION ******
!**********************************

begin-procedure Write-Dept-Details

  print $SUPV_LVL (,{COL3},#space3)
  print &A.EMPLID (,{COL4},#space4)
  Let $E_Name = rtrim(substr(&P.NAME,1,30),' ')
  print &A.EMPL_RCD (,{COL4B},#space4b)
  print $E_Name (,{COL5})                 !name can go over end limit, so don't use #space5
  If &A.EMPL_RCD <> &A.MAIN_APPT_NUM_JPN
    print $ADDAPPTMK (,+1)
  end-if
  position (+1)

end-procedure Write-Dept-Details

!**********************************
! GET-SUPV-LVL-INFO PROCEDURE *****
!**********************************

Begin-procedure Get-Supv-Lvl-Info

  ! $supv_lvl is originally <null>
  let $supv_lvl = ''

  ! ----- START IF -----
  ! If not base language, look for related language entry
  if $language_cd <> $base_lng_cd

begin-select
A7.DESCRSHORT
  let $supv_lvl = &A7.DESCRSHORT
 FROM PS_SUPVSR_LVL_LANG A7
 WHERE A7.SETID = &A.SETID AND
       A7.SUPV_LVL_ID = &A.SUPV_LVL_ID AND
       A7.LANGUAGE_CD = $language_cd AND
       A7.EFFDT = (SELECT MAX(B7.EFFDT)
                   FROM PS_SUPVSR_LVL_LANG B7
                   WHERE B7.SETID = A7.SETID AND
                         B7.SUPV_LVL_ID = A7.SUPV_LVL_ID AND
                         B7.LANGUAGE_CD = A7.LANGUAGE_CD AND
                         B7.EFFDT <= $AsOfDate)
end-select

  end-if
  ! ------ END IF ------

  ! ----- START IF -----
  ! If $supv_lvl still <null>, use the base language entry
  if $supv_lvl = ''

begin-select
A8.DESCRSHORT
  let $supv_lvl = &A8.DESCRSHORT
 FROM PS_SUPVSR_LVL_TBL A8
 WHERE A8.SETID = &A.SETID AND
       A8.SUPV_LVL_ID = &A.SUPV_LVL_ID AND
       A8.EFFDT = (SELECT MAX(B8.EFFDT)
                   FROM PS_SUPVSR_LVL_TBL B8
                   WHERE B8.SETID = A8.SETID AND
                         B8.SUPV_LVL_ID = A8.SUPV_LVL_ID AND
                         B8.EFFDT <= $AsOfDate)
end-select

  end-if
  ! ------ END IF ------

end-procedure Get-Supv-Lvl-Info

!****************************
! GET-LABELS PROCEDURE ******
!****************************

begin-procedure Get-Labels

  do Get_Field_Information($ReportID,  'REPORT_TITLE',   $REPORTTITLE, #DW)
  do Get_Field_Information('HR',       'DEPARTMENT',     $DEPARTMENT,  #DW)
  do Get_Field_Information('HR',       'DEPTID',         $DEPTID,      #DW)
  do Get_Field_Information($ReportID,  'SUPV_LVL',       $SUPVLVL,     #DW)
  do Get_Field_Information('HR',       'EMPLID',         $EMPL_ID,     #DW)
  do Get_Field_Information('HR',       'NAME',           $NAME,        #DW)
  do Get_Field_Information($ReportID,  'KENMU',          $KENMU,       #DW)
  do Get_Field_Information($ReportID,  'TOTAL_NI',       $TOTAL_NI,    #DW)
  do Get_Field_Information($ReportID,  'TOTAL_I',        $TOTAL_I,     #DW)
  do Get_Field_Information($ReportID,  'TOTAL',          $TOTAL,       #DW)
  do Get_Field_Information($ReportID,  'ADDAPPTMK',      $ADDAPPTMK,   #DW)
  do Get_Field_Information('HR',       'COMPANY',        $COMPANY_LBL,   #DW)
  do Get_Field_Information($ReportID,  'ASOFDATE',       $ASOFDATE_LBL,  #DW)
  do Get_Field_Information($ReportID,  'EMPL_RCD',       $EMPL_RCD_LBL,  #DW)

end-procedure Get-Labels

!***********************************************************************
! Delete-From-AE-Tables                                                *
!                                                                      *
! Called By: begin-report                                              *
!***********************************************************************

begin-procedure Delete-From-AE-Tables

begin-sql
Delete from PS_PER066JP_DATA
Where JOBINSTANCE = #prcs_job_instance
end-sql

end-procedure !Delete-From-AE-Tables

#include 'prcsdef.sqc'   !Process Scheduler variables
#include 'prcsapi.sqc'   !Get run control parameters
#include 'reset.sqc'     !Reset printer procedure
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'stdapi.sqc'    !Routines to Update Run Status
#include 'sqrtrans.sqc'  !For accessing the strings table
#include 'hrsecty.sqc'   !Get SQR Security parameters
#include 'hrsectjp.sqc'   !Get SQR Security parameters
#include 'getcodta.sqc'   !Get Company Description


