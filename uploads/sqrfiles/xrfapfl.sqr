! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
! XRFAPFL: Cross-Reference -- Applications and Fields                  *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment

#define Field_Type_Sign 3
#define C_MenuName     1
#define C_FieldName    32
#define C_RecName      51
#define C_PnlName      67
#define C_Type         87
#define C_Length       95
#define C_Format       103

begin-setup
#include 'ptset01.sqc'         ! Init printer and page size
end-setup

begin-report
    do Initialize
    do Report
    do Terminate
    do Commit-Transaction
end-report

begin-procedure Initialize            ! Get Source Database Information
    do Init-DateTime
    do Init-Number
    do Define-Prcs-Vars
    do Get-Run-Control-Parms
    move 'XRFAPFL' to $ReportID
    move 'Cross Reference -- Applications and Fields' to $ReportTitle
#ifdef debugx
    SHOW 'Report Title: ' $ReportTitle
#endif
    do Get-Current-DateTime
    do Create_Code_Arrays
end-procedure

begin-procedure Terminate
    if #prcs_process_instance > 0
        do Update-Prcs-Run-Status
    end-if
    do Reset
end-procedure

begin-heading 8
   #include 'stdhdg01.sqc'
   print 'Application'                     (7,{C_MenuName})
   print 'Field Name'                      (7,{C_FieldName})
   print 'Record Name'                     (7,{C_RecName})
   print 'Panel Name'                      (7,{C_PnlName})
   print 'Type'                            (7,{C_Type})
   print 'Length'                          (7,{C_Length})
   print 'Format'                          (7,{C_Format})
   print '------------------------------'  (8,{C_MenuName})
   print '------------------'              (8,{C_FieldName})
   print '---------------'                 (8,{C_RecName})
   print '------------------'              (8,{C_PnlName})
   print '----'                            (8,{C_Type})
   print '------'                          (8,{C_Length})
   print '------'                          (8,{C_Format})
end-heading

!***********************************************************************
! Function:    Create_Code_Arrays                                      *
!                                                                      *
! Description: Load translation values into the arrays used to         *
!              interpret codes for reporting.                          *
!                                                                      *
!***********************************************************************
begin-procedure Create_Code_Arrays
   create-array  NAME=Type_Codes  SIZE=10  FIELD=Type_Name:char
   put 'Char'  into Type_Codes(0)
   put 'Long'  into Type_Codes(1)
   put 'Nbr '  into Type_Codes(2)
   put 'Sign'  into Type_Codes(3)
   put 'Date'  into Type_Codes(4)
   put 'Time'  into Type_Codes(5)
   put 'Dttm'  into Type_Codes(6)
   put 'Sub'   into Type_Codes(7)
   put 'Img'   into Type_Codes(8)
   put 'Vers'  into Type_Codes(9)

   create-array  NAME=Format_Codes  SIZE=17  FIELD=Format_Name:char
   put '    '  into Format_Codes(0)
   put 'Name'  into Format_Codes(1)
   put 'Phone' into Format_Codes(2)
   put 'ZipPC' into Format_Codes(3)
   put 'SSN'   into Format_Codes(4)
   put 'Routn' into Format_Codes(5)
   put 'Mixed' into Format_Codes(6)
   put 'Cent'  into Format_Codes(7)
   put 'Nbr'   into Format_Codes(8)
   put 'SIN'   into Format_Codes(9)
   put 'PhnIn' into Format_Codes(10)
   put 'ZPCIn' into Format_Codes(11)
   put 'Scnds' into Format_Codes(12)
   put 'McroS' into Format_Codes(13)
   put 'CtSec' into Format_Codes(14)
   put 'CmSec' into Format_Codes(15)
   put 'Upper' into Format_Codes(16)
end-procedure

begin-procedure Report          ! Main report processing
begin-SELECT DISTINCT
D.MENUNAME                     (+1,{C_MENUNAME})    on-break PRINT=CHANGE/TOP-PAGE LEVEL=1 SKIPLINES=1
B.FIELDNAME                    (0,{C_FIELDNAME})    on-break PRINT=CHANGE/TOP-PAGE LEVEL=2 SKIPLINES=1
B.RECNAME                      (0,{C_RECNAME})      on-break PRINT=CHANGE/TOP-PAGE LEVEL=3 SKIPLINES=1
B.PNLNAME                      (0,{C_PNLNAME})
C.FIELDTYPE
   move &C.FieldType to #FieldType
   GET $Type_Name from TYPE_CODES(#FIELDTYPE) TYPE_NAME
   print $Type_Name            (0,{C_Type})         on-break print=change/top-page level=2 skiplines=1
C.FORMAT
   move &C.Format to #Format
   GET $Format_Name from FORMAT_CODES(#FORMAT) FORMAT_NAME
   if #Format = 0 and #FieldType = 0
    move 'Upper'    to $Format_Name
   end-if
   print $Format_Name          (0,{C_Format})       on-break print=change/top-page level=2 skiplines=1
C.LENGTH
   move &C.Length to #Length
C.DECIMALPOS
   move &C.DecimalPos to #DecimalPos
   move #Length     to #Prt_Length
   if &C.FieldType = {Field_Type_Sign}
       SUBTRACT 1          from #Prt_Length
   end-if
   if #DecimalPos > 0
       SUBTRACT 1          from #Prt_Length
       SUBTRACT #DecimalPos from #Prt_Length
       if #DecimalPos > 9
       MULTIPLY 100    TIMES #Prt_Length
       ADD #DecimalPos to #Prt_Length
       DIVIDE 100      INTO #Prt_Length
       do Format-Number(#Prt_Length, $Prt_Length, '999.99')
       print $Prt_Length   (0,{C_Length})       on-break print=change/top-page level=2 skiplines=1
!dbg        print #Prt_Length   (0,{C_Length}) edit 999.99 on-break print=change/top-page level=2 skiplines=1
       else
       MULTIPLY 10     TIMES #Prt_Length
       ADD #DecimalPos to #Prt_Length
       DIVIDE 10       INTO #Prt_Length
       do Format-Number(#Prt_Length, $Prt_Length, '999.9')
       print $Prt_Length   (0,{C_Length})       on-break print=change/top-page level=2 skiplines=1
!dbg        print #Prt_Length   (0,{C_Length}) edit 999.9 on-break level=2 skiplines=1 print=change/top-page
       end-if
   else
       do Format-Number(#Prt_Length, $Prt_Length, '999')
       print $Prt_Length   (0,{C_Length})           on-break print=change/top-page level=2 skiplines=1
   end-if

FROM PSPNLGROUP A, PSPNLFIELD B, PSDBFIELD C, PSMENUITEM D
WHERE A.PNLNAME <> ' '
  AND A.PNLNAME = B.PNLNAME
  AND B.RECNAME <> ' '
  AND B.FIELDNAME <> ' '
  AND B.FIELDNAME = C.FIELDNAME
  AND A.PNLGRPNAME = D.PNLGRPNAME
  AND A.MARKET = D.MARKET
ORDER BY D.MENUNAME, B.FIELDNAME, B.RECNAME, B.PNLNAME
end-SELECT
end-procedure

#include 'reset.sqc'            ! Reset printer
#include 'curdttim.sqc'         ! Current Date and Time
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#include 'prcsapi.sqc'   !Update Process Request API
#include 'prcsdef.sqc'   !Update Process Request variable declaration
#include 'tranctrl.sqc'     !Transaction control
