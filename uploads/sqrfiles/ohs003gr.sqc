!***************************************************************************
!  OHS003GR :  Gets common data for the report OHS001GR.sqr and OHS004GR.sqr
!***************************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:08:50                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************


!******************************************************
!Get the Berufsgenossenschaft Data
!******************************************************

Begin-Procedure Get-BG-Data

move ' ' to $BGAdd1
move ' ' to $BGAdd2
move ' ' to $BGAdd3
move ' ' to $BGCity
move ' ' to $BGZip
Move ' ' to $BGdescr

Begin-Select

AI.DESCRSHORT
AI.ADDRESS1
AI.ADDRESS2
AI.ADDRESS3
AI.CITY
AI.POSTAL

 Move &AI.ADDRESS1   to $BGAdd1
 Move &AI.ADDRESS2   to $BGAdd2
 Move &AI.ADDRESS3   to $BGAdd3
 Move &AI.POSTAL     to $BGZip
 Move &AI.CITY       to $BGCity
 Move &AI.DESCRSHORT to $BGdescr

From PS_ACCDT_INS_TBL AI

Where AI.ACCIDENT_INS = $BGName
AND   AI.EFFDT = (SELECT MAX(EFFDT)
                  FROM PS_ACCDT_INS_TBL AI1
                  WHERE AI1.ACCIDENT_INS = AI.ACCIDENT_INS
                  AND AI1.EFFDT <= $Asoftoday)
End-Select


End-Procedure

!******************************************************
!Get Employee Data
!******************************************************
begin-procedure Get-Emplid-Data

  do Get-Personal-Data

 ! Sex
   move 'SEX'     to $FieldName
   move $Sex      to $FieldValue
   do Read-Translate-Table
   move $XlatLongName to $SexDescr

 ! Birthdate
   do Format-DateTime($Birthdate, $Birthdate1, {DEFDATE}, '', '')

 ! Marital Status
   move 'MAR_STATUS'     to $FieldName
   move $MarStatus       to $FieldValue
   do Read-Translate-Table
   move $XlatLongName to $MarStDescr

 ! Nationality
   do Get-Nationality
   do Get-Nation
   move $Nationality to $NatDescr

 ! Date Of Death
   do Format-DateTime($DtOfDeath, $DtOfDeath1, {DEFDATE}, '', '')

end-procedure

!******************************************************
begin-procedure Get-Non-Empl-Data
!******************************************************

    let $Name = ''
    let $Address = ''
    let $Postal = ''
    let $City = ''
    let $SexNe = ''
    let $SexNeDescr = ''
    let $NeBirthdate = ''
    let $NeBirthdate1 = ''
    let $NeDtOfdeath = ''
    let $NeDtOfdeath1 = ''
    let $FirstName = ''
    let $LastName = ''

begin-SELECT

NPD.NAME
NPD.ADDRESS1
NPD.POSTAL
NPD.CITY
NPD.SEX
NPD.BIRTHDATE
NPD.DT_OF_DEATH
NPD.FIRST_NAME
NPD.LAST_NAME

    let $Name = rtrim(&NPD.NAME,' ') || ', '
    let $Address = rtrim(&NPD.ADDRESS1,' ') || ', '
    let $Postal = rtrim(&NPD.POSTAL,' ') || ' '
    let $City = rtrim(&NPD.CITY,' ') || ' '
    let $FirstName = rtrim(&NPD.FIRST_NAME,' ')
    let $LastName = rtrim(&NPD.LAST_NAME, ' ')

 ! Sex
   move &NPD.SEX  to $SexNe
   move 'SEX'     to $FieldName
   move $SexNe    to $FieldValue
   do Read-Translate-Table
   move $XlatLongName to $SexNeDescr

 ! Birthdate
   move &NPD.BIRTHDATE to $NeBirthdate
   move &NPD.BIRTHDATE to $Birthdate
   do Format-DateTime($NeBirthdate, $NeBirthdate1, {DEFDATE}, '', '')

 ! date of death
   move &NPD.DT_OF_DEATH to $NeDtOfdeath
   do Format-DateTime($NeDtOfdeath, $NeDtOfDeath1, {DEFDATE}, '', '')

FROM PS_NE_PERSONAL_DTA NPD
WHERE NON_EMPLOYEE_ID = $NonEmplid

end-SELECT

end-procedure

!******************************************************
!Get Children
!******************************************************
begin-procedure Get-Children-Data

Let #kids = 0
Let #train = 0
do format-datetime($AsofToday,$todate,{DEFCMP}, '', '')

begin-SELECT
CH.EMPLID
CH.BIRTHDATE
CH.TRAINING_SW_GER
CH.IN_SCHOOL_SW_GER

 do format-datetime(&CH.Birthdate,$bday,{DEFCMP}, '', '')

 let $today = {ps-substr}($todate,5,2)||{ps-substr}($todate,7,2)||{ps-substr}($todate,3,2)

 let #current_yr = {ps-substr}($todate,1,4)
 let #current_mo = {ps-substr}($todate,5,2)
 let #current_day = {ps-substr}($todate,7,2)

 let #birth_yr = {ps-substr}($bday,1,4)
 let #birth_mo = {ps-substr}($bday,5,2)
 let #birth_day = {ps-substr}($bday,7,2)

 let #age_yr = (#current_yr - #birth_yr)

 Evaluate #age_yr
 when < 18
 let #kids = #kids + 1
 when = 18
   evaluate #birth_mo
     when < #current_mo
     let #kids = #kids + 1
     when = #current_mo
       evaluate #birth_day
         when < #current_day
         let #kids = #kids + 1
       end-evaluate
   end-evaluate
  end-evaluate

 If &CH.TRAINING_SW_GER = 'Y' or &CH.IN_SCHOOL_SW_GER = 'Y'
      Let #train = #train + 1
 end-if

FROM  PS_HS_FAMILY_CHILD CH
WHERE CH.EMPLID = $Emplid
AND   CH.NON_EMPLOYEE_ID = $NonEmplid
end-select

Move #kids to $11Kids
Move #train to $11Train

end-procedure

!***********************************************
!Get Company Address
!***********************************************

begin-procedure Get-Company-Data
    let $Codescr = ''
    let $Coadd1 = ''
    let $Postal = ''
    let $City = ''
begin-SELECT
S.DESCR
 move &S.DESCR to $Codescr
S.ADDRESS1
 move &S.ADDRESS1 to $Coadd1
S.POSTAL
 move &S.POSTAL to $Cozip
S.CITY
 move &S.CITY to $Cocity
From  PS_COMPANY_TBL S
WHERE S.COMPANY = $Company
AND   S.EFFDT = (SELECT MAX(EFFDT) FROM PS_COMPANY_TBL S1
                 WHERE S1.COMPANY = S.COMPANY
                 AND S1.EFFDT <= $Job_Effdt)

end-SELECT
end-Procedure

!***********************************************
!Get Health Insurance Provider
!***********************************************
begin-procedure Get-Health-Ins-Data
    let $DescrIns = ''
    let $City = ''
    let $postal = ''

begin-select
INSTALLED_GP_DEU
from PS_INSTALLATION
end-select

if &INSTALLED_GP_DEU = 'Y'
begin-select
AP.DESCR
  move &AP.DESCR to $DescrIns
FROM PS_GPDE_SI_PROV AP, PS_HS_PERS_DATA A1
WHERE A1.EMPLID = $Emplid and
      AP.GPDE_SI_PROV = A1.SI_PROVIDER_GER and
      AP.EFFDT = (select max(EFFDT) from PS_GPDE_SI_PROV AP1
         where AP1.GPDE_SI_PROV = AP.GPDE_SI_PROV and
         AP1.EFFDT <= $AsOfToday)
end-select

begin-select
ADR.POSTAL
ADR.CITY
  move &ADR.POSTAL to $postal
  move &ADR.CITY to $City
FROM PS_GPDE_SI_PRV_ADR ADR, PS_HS_PERS_DATA A2
WHERE A2.EMPLID = $Emplid and
      ADR.GPDE_SI_PROV = A2.SI_PROVIDER_GER and
      ADR.EFFDT = (select max(EFFDT) from PS_GPDE_SI_PROV AP2
         where AP2.GPDE_SI_PROV = ADR.GPDE_SI_PROV and
         AP2.EFFDT <= $AsOfToday)
end-select

else

begin-SELECT

B.NAME1
  move &B.NAME1 to $DescrIns
C.CITY
  move &C.CITY to $City
C.POSTAL
  move &C.POSTAL to $postal
FROM  PS_HS_PERS_DATA A, PS_VENDOR B, PS_VENDOR_ADDR C
WHERE A.EMPLID = $Emplid
AND   B.VENDOR_STATUS = 'A'
AND   C.ADDRESS_SEQ_NUM = 1
AND   A.SI_PROVIDER_GER = B.VENDOR_ID
AND   B.SETID = C.SETID
AND   B.VENDOR_ID = C.VENDOR_ID
AND   C.EFFDT = (SELECT MAX(D.EFFDT)
                 FROM   PS_VENDOR_ADDR D
                 WHERE  D.SETID = C.SETID
                 AND    D.VENDOR_ID = C.VENDOR_ID
                 AND    D.ADDRESS_SEQ_NUM = C.ADDRESS_SEQ_NUM
                 AND    D.EFFDT <= $AsOfToday)

end-SELECT
end-if
end-procedure

!***********************************************
!Get Mitgliedsnummer
!***********************************************
begin-procedure Get-Mit-Nbr-Data
    let $AccNum = ''
    let $AccIns = ''
begin-SELECT
PK.SI_ACCIDENT_NUM
  move &PK.SI_ACCIDENT_NUM to $AccNum
PK.ACCIDENT_INS
   move &PK.ACCIDENT_INS to $AccIns
from PS_DEPT_TBL  PK
WHERE PK.DEPTID = $DeptID and 
PK.SETID = $setID_Dept
AND PK.EFFDT = (SELECT MAX(EFFDT)
                FROM PS_DEPT_TBL PK1
                WHERE PK1.DEPTID = PK.DEPTID
                AND PK1.SETID = PK.SETID
                AND PK1.EFFDT <= $AsOfToday)
End-Select
End-Procedure

!***********************************************
!Get Numbers
!***********************************************
begin-procedure Get-Numbers-Data
    let $GewerbCd = ''
    let $GewerDescr = ''
    let $GewerbCity = ''

begin-SELECT
LOC.INDUST_INSP_ID_GER
INS.DESCR
INS.CITY
 move &LOC.INDUST_INSP_ID_GER to $GewerbCd
 move &INS.DESCR to $GewerDescr
 move &INS.CITY to $GewerbCity
FROM PS_LOCATION_TBL LOC,
     PS_INDUST_INSP_GER INS
WHERE LOC.SETID = $SetId
and LOC.LOCATION = $Loc
and LOC.EFFDT in (select max(LOC2.EFFDT)
              FROM PS_LOCATION_TBL LOC2
              WHERE LOC2.SETID = LOC.SETID
              and LOC2.LOCATION = LOC.LOCATION
              AND LOC2.EFFDT <= $AsOfToday)
AND LOC.INDUST_INSP_ID_GER = INS.INDUST_INSP_ID_GER
end-SELECT
end-procedure

!***********************************************
!Get Corrective Action
!***********************************************
begin-procedure Get-Correct-Action
    let $CorrectCd = ''
    let $CorrectDescr = ''
begin-SELECT
IAT.CORRECT_ACT_CD_GER
ASDT.DESCR100

 move &IAT.CORRECT_ACT_CD_GER to $CorrectCd
 move &ASDT.DESCR100 to $CorrectDescr

FROM PS_ILL_ACTGER_C_VW IAT, PS_CORRECT_ACT_GER ASDT

WHERE IAT.EMPLID = $Emplid
AND   IAT.EMPL_RCD = #Inj_Empl_Rcd_Nbr
AND   IAT.NON_EMPLOYEE_ID = $NonEmplid
AND   ASDT.CORRECT_ACT_CD_GER = IAT.CORRECT_ACT_CD_GER
AND   ASDT.EFFDT = (SELECT MAX(EFFDT) FROM PS_CORRECT_ACT_GER ASDT1
                WHERE ASDT1.CORRECT_ACT_CD_GER = ASDT.CORRECT_ACT_CD_GER
                AND ASDT1.EFFDT <= $AsOfToday)
AND   IAT.ACTION_SEQUENCE = (SELECT MIN(ACTION_SEQUENCE)
                   FROM PS_ILL_ACTGER_C_VW IAT2
                   WHERE IAT2.EMPLID = IAT.EMPLID
                   AND IAT2.EMPL_RCD = IAT.EMPL_RCD
                   AND IAT2.HAZARD_ID = IAT.HAZARD_ID
                   AND IAT2.NON_EMPLOYEE_ID = IAT.NON_EMPLOYEE_ID)
AND IAT.ACTION_STATUS = 'V'

end-SELECT
end-procedure


!***********************************************
!Get SI_PROVIDER_GER code
!***********************************************
begin-procedure Get-SI_PROVIDER_GER

begin-SELECT

SOC.SI_PROVIDER_GER

 move &SOC.SI_PROVIDER_GER to $3Betarb

FROM    PS_INJURY_ILL SOC
WHERE   SOC.EMPLID = $Emplid
AND     SOC.EMPL_RCD = #Inj_Empl_Rcd_Nbr
AND     SOC.INCIDENT_NBR = $Incident-Nbr

end-SELECT

end-procedure

