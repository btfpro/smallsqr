!***********************************************************************
!  VC005:  Variable Compensation - Employee History Report             *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:52:22                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
!
!***********************************************************************
!                                                                      *
! HP99999       Release 8                                              *
!***********************************************************************

#include 'setenv.sqc'    !Set environment

#define VC_PLAN_TBL

#Include 'rellang.sqc'

Begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report

  if $start-error <> 'Y'
    do Report
  end-if
  do Stdapi-Term
  do Reset
end-report

!********************************************
begin-procedure Init-Report
  move 'VCREPS' to $ReportID
  move 'Employee History Report' to $ReportTitle
  display $ReportTitle
  display ' '
  do Stdapi-init
  do Get-Report-Language   ! Procedure that decides the report language
                           ! and then calls 'Report-Translation' procedure
                           ! that reads the language dep. text.


  if $prcs_process_instance = ''
     display 'This process cannot be run outside the Process scheduler'
     let $start_error = 'Y'
  else
     let $start_error = 'N'
     do Select-Parameters
  end-if
end-procedure

!*********************************************************************
begin-procedure select-parameters

BEGIN-SELECT
A.OPRID
A.RUN_CNTL_ID
A.VC_PLAN_ID
A.VC_PAYOUT_PRD_ID
A.PRD_END_DT
A.TREE_NAME
A.VC_TREE_DT
A.VC_REPORT_TYPE

  move &A.PRD_END_DT to $prd_end_dt
  do Format-DateTime($prd_end_dt, $prd_dt, {DEFYMD}, '', '')

from PS_RC_VC_REPORTS A
where A.OPRID       = $prcs_oprid
AND   A.RUN_CNTL_ID = $prcs_run_cntl_id
end-select

end-procedure

!**************************************************************************
! Main Report procedure
!**************************************************************************
begin-procedure Report
BEGIN-SELECT
AA.FROMDATE
AA.THRUDATE
AA.EMPLID

  move &AA.FROMDATE to $fromdate
  move &AA.THRUDATE to $thrudate
  do Format-DateTime($fromdate, $fromdate, {DEFYMD}, '', '')
  do Format-DateTime($thrudate, $thrudate, {DEFYMD}, '', '')
  do ProcsEE
  new-page

from PS_RC_VC_REP_CHLD AA
where AA.OPRID       = $prcs_oprid
AND   AA.RUN_CNTL_ID = $prcs_run_cntl_id
end-select

end-procedure

!**************************************************************************
! Process Employee procedure
!**************************************************************************
begin-procedure ProcsEE
 Position (1,1)
 Move 0 To #empl_award
 Move 0 To #group_award
 Move 0 To #total_award
 Move 0 To #empl_target
 Move 0 to #group_target
 Move 0 to #total_target
 Move 0 To #empl_unit
 move 0 to #group_unit
 move 0 to #total_unit
 let $init_emplid = ''
 let $init_plan = ''
 if rtrim(&AA.EMPLID,' ') <> ''

   let $empstring = ' AND VA.EMPLID = '''||&AA.EMPLID||''''
 else
   let $empstring = ''
 end-if

Begin-Select
VA.VC_PLAN_ID
PT.DESCR50
VA.VC_PAYOUT_PRD_ID
VA.EMPLID
VA.EMPL_RCD
VA.VC_AWARD_VALUE
VA.CURRENCY_CD
PD.NAME
VA.VC_TARGET_VALUE
VA.VC_AWARD_DT
PP.PRD_BGN_DT
VA.VC_ACTUAL_AWD_UNIT

   ! if emplid or rcd# changed, print totals for previous emplid/rcd#
   ! and print header for next emplid/rcd#

   ! Get Related Language info for PS_VC_PLAN_TBL
  move &PT.DESCR50 to $VC_PLAN_TBL-DESCR50
  do Get_Related_VC_PLAN_TBL(&VA.VC_PLAN_ID)
  move  $VC_PLAN_TBL-DESCR50 to $PT_DESCR50

   if &VA.EMPLID <> $init_emplid or &VA.EMPL_RCD <> #init_empl_rcd

      if $init_emplid <> '' ! not the first time through

         do Print-Plan-Totals
         do Print-Empl-Totals

      end-if ! not the first time through

      ! print new emplid/rcd header line
      position (+2,)
      Print $emplidlbl (,1)
      Print &VA.EMPLID (,10)
      Print $empl_rcdlbl (,27)
      Print &VA.EMPL_RCD (,40)
      Print $name (,44)
      Print &PD.NAME (,52)

      ! save off emplid/rcd# and re-initialize plan
      let $init_emplid = &VA.EMPLID
      let #init_empl_rcd = &VA.EMPL_RCD
      let $init_plan = ''

   end-if ! emplid or rcd# changed

   ! if the plan changed, print totals for previous plan
   if (&VA.VC_PLAN_ID <> $init_plan) and ($init_plan <> '')

      do Print-Plan-Totals

   end-if ! plan changed

   ! begin normal row processing

   ! add amounts selected to running totals
   let #empl_award = #empl_award + &VA.VC_AWARD_VALUE
   let #group_award = #group_award + &VA.VC_AWARD_VALUE
   let #total_award = #total_award + &VA.VC_AWARD_VALUE
   let #empl_target = #empl_target + &VA.VC_TARGET_VALUE
   let #group_target = #group_target + &VA.VC_TARGET_VALUE
   let #total_target = #total_target + &VA.VC_TARGET_VALUE
   let #empl_unit = #empl_unit + &VA.VC_ACTUAL_AWD_UNIT
   let #group_unit = #group_unit + &VA.VC_ACTUAL_AWD_UNIT
   let #total_unit = #total_unit + &VA.VC_ACTUAL_AWD_UNIT

   move &VA.VC_AWARD_DT to $award_date
   let $init_plan = &VA.VC_PLAN_ID
   do Format-DateTime($award_date, $award_date, {DEFMDY}, '', '')

   !print row
   do printrow

From    PS_VC_AWARD VA,
        PS_PERSON_NAME PD,
        PS_VC_PAYPRD_TBL PP,
        PS_VC_PLAN_TBL PT

Where   VA.EMPLID = PD.EMPLID
        [$empstring] AND
        VA.VC_AWARD_DT >= &AA.FROMDATE AND
        VA.VC_AWARD_DT <= &AA.THRUDATE AND
        PP.VC_PLAN_ID = VA.VC_PLAN_ID AND
        PP.VC_PAYOUT_PRD_ID = VA.VC_PAYOUT_PRD_ID AND
        PT.VC_PLAN_ID = VA.VC_PLAN_ID

Order By VA.EMPLID,VA.EMPL_RCD,VA.VC_PLAN_ID,PP.PRD_BGN_DT
End-Select

   ! print final tallies
   do Print-Plan-Totals
   do Print-Empl-Totals

   ! print Grand Total
   position (+2,)
   Print $grand_total (,8)
   Print #total_award (,102) edit 999999999999.999999
   Print #total_target (,67) edit 999999999999.999999
   Print #total_unit (,124) edit b9999999.999999

end-procedure Report

!********************************************************
Begin-procedure PrintRow
   position (+1,)
   print &VA.VC_PLAN_ID (,8)
   print $PT_DESCR50 (,19, 30)
   print &VA.VC_PAYOUT_PRD_ID (,55)
   print &VA.VC_TARGET_VALUE (,67) edit 999999999999.999999
   print $award_date (,91)
   print &VA.VC_AWARD_VALUE (,102) edit 999999999999.999999
   print &VA.VC_ACTUAL_AWD_UNIT (,124) edit b9999999.999999
end-procedure PrintRow

!********************************************************
Begin-procedure Print-Plan-Totals

   ! print plan totals
   position (+2,)
   Print $total_plan (,8)
   Print #group_award (,102) edit 999999999999.999999
   Print #group_target (,67) edit 999999999999.999999
   Print #group_unit (,124) edit b9999999.999999
   position (+1,)

   ! re-initialize amounts
   move 0 to #group_award
   move 0 to #group_target
   move 0 to #group_unit
   let $init_plan = &VA.VC_PLAN_ID

end-procedure Print-Plan-Totals

!********************************************************
Begin-procedure Print-Empl-Totals

    ! print emplid totals
    position (+2,)
    Print $total_empl (,8)
    Print #init_empl_rcd (,45) edit 9
    Print ')' (,46)
    Print #empl_award (,102) edit 999999999999.999999
    Print #empl_target (,67) edit 999999999999.999999
    Print #empl_unit (,124) edit b9999999.999999

    ! re-initialize amounts
    move 0 to #empl_award
    move 0 to #empl_target
    move 0 to #empl_unit

end-procedure Print-Empl-Totals

Begin-heading 10

 Page-Number (1,130)
 Print $current-date (2,130) edit 'MM/DD/YYYY'
 Print $reportname (3,60)
 Print $fromdatelbl (6,8)
 Print $fromdate (6,30)
 Print $thrudatelbl (7,8)
 Print $thrudate (7,30)

 Print $emplidlblnc (8,8)
 Print &AA.EMPLID (8,30)

  print $plan_id (12,8)
  print $payout_prd_id (12,55)
  let #pos = 67+(19 - (length($target_value)))
  print $target_value (12,#pos)
  print $award_datelbl (12,91)
  let #pos = 102 +(19 - (length($award_value)))
  print $award_value (12,#pos)
  let #pos = 124+(16 - (length(rtrim($award_units,' '))))
  print $award_units (12,#pos)
  position (+2,)

End-Heading

!**************************************************************************
begin-procedure report-translation

do Init_Report_Translation($ReportID,$Language_Cd)

do Get_Field_Information ('VCREPS','ACTUAL_AWARD',$actual_award,#DW)
do Get_Field_Information ('VCREPS','ACTUAL_FUNDING',$actual_funding,#DW)
do Get_Field_Information ('VCREPS','ANNUAL_RATE',$annual_rate,#DW)
do Get_Field_Information ('VCREPS','ATTAINED',$attained,#DW)
do Get_Field_Information ('VCREPS','CARRYOVER_BALLANCE',$carryover_balance,#DW)
do Get_Field_Information ('VCREPS','EMPLID',$emplidlblnc,#DW)
do Get_Field_Information ('VCREPS','EMPL_RCD',$empl_rcdlbl,#DW)
do Get_Field_Information ('VCREPS','GROUP',$group,#DW)
do Get_Field_Information ('VCREPS','GROUP_GOALS',$group_goals,#DW)
do Get_Field_Information ('VCREPS','GUARANTEE',$guarantee,#DW)
do Get_Field_Information ('VCREPS','HIRE_DATE',$hire_date,#DW)
do Get_Field_Information ('VCREPS','JOB_CODE',$job_code,#DW)
do Get_Field_Information ('VCREPS','MAX_AWARD',$max_award,#DW)
do Get_Field_Information ('VCREPS','MIN/MAX',$minmax,#DW)
do Get_Field_Information ('VCREPS','MIN_AWARD',$min_award,#DW)
do Get_Field_Information ('VCREPS','NAME',$name,#DW)
do Get_Field_Information ('VCREPS','OVERALL_PERF_FACT',$overall_perf_factor,#DW)
do Get_Field_Information ('VCREPS','VC_PAYOUT_PRD_ID',$payout_prd_id,#DW)
do Get_Field_Information ('VCREPS','PERFORMACE_FACTOR',$parf_factor,#DW)
do Get_Field_Information ('VCREPS','PLAN ID',$plan_id,#DW)
do Get_Field_Information ('VCREPS','PROJECTED_PAYOUT',$projected_payout,#DW)
do Get_Field_Information ('VCREPS','VC_TARGET_AWARD',$target_award,#DW)
do Get_Field_Information ('VCREPS','VC_TARGET_VALUE',$target_value,#DW)
do Get_Field_Information ('VCREPS','TOTAL_EMPL',$total_empllbl,#DW)
do Get_Field_Information ('VCREPS','TOTAL_PLAN',$total_plan,#DW)
do Get_Field_Information ('VCREPS','TOTAL_GROUP',$total_group,#DW)
do Get_Field_Information ('VCREPS','UNALLOCATED_BAL',$unallocated_balance,#DW)
do Get_Field_Information ('VCREPS','VALUATION',$valuation,#DW)
do Get_Field_Information ('VCREPS','VARIANCE',$variance,#DW)
do Get_Field_Information ('VCREPS','WEIGHTING',$weighting,#DW)
do Get_Field_Information ('VCREPS','DETAIL',$detail;,#DW)
do Get_Field_Information ('VCREPS','SUMMARY',$summary,#DW)
do Get_Field_Information ('VCREPS','CURR_CD',$curr_cd,#DW)
do Get_Field_Information ('VCREPS','VC_AWARD_VALUE',$award_value,#DW)
do Get_Field_Information ('VCREPS','AWARD_UNITS',$award_units,#DW)
do Get_Field_Information ('VCREPS','GRAND_TOTAL',$grand_total,#DW)
do Get_Field_Information ('VCREPS','AWARD_DATE',$award_datelbl,#DW)
do Get_Field_Information ('VCREPS','FROM_DATE',$fromdatelbl,#DW)
do Get_Field_Information ('VCREPS','THRU_DATE',$thrudatelbl,#DW)
do Get_Field_Information ('VCREPS','VC005',$reportname,#DW)

let $emplidlbl = $emplidlblnc || ' :'
let $empl_rcdlbl = $empl_rcdlbl || ' :'
let $name = $name || ' :'
let $total_empl = $total_empllbl || ' (' || $empl_rcdlbl

end-procedure

!*****************************************************************
#include 'stdapi.sqc'    !Routine to update run Status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'
#include 'sqrtrans.sqc'
#Include 'getrplng.sqc'  !Get the report language
