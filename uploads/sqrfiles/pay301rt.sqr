!*********************************************************
!  PAY301RT:  Retro Pay All Calculated Report            *
!*********************************************************
!***********************************************************************
!                                                                      *
!                Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:04:49:05                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!  History: 05/22/01 RLW -- Add Retropay Interest Column               *
!***********************************************************************

#include 'setenv.sqc' !Set environment

begin-report

    do Init-DateTime
    do Init-Number
    do Get-Current-Datetime
    do Init-Report
    do Process-Main
    do Reset
    do Stdapi-Term

end-report

!***********************************************************************



!******************** H E A D I N G      S E C T I O N  *****************

#include 'setup32.sqc'  !Printer and page-size initialization

begin-heading 12

#include 'stdhdg01.sqc'

    print $Pay301rt_Rqst_Type       (+4,1)
    print $Retropay-Rqst-Type       (0,15)
    print $Rqst-Descr               (0,17)
    print $Pay301rt_Mass_ID         (0,28)
    print $Mass-Retro-Rqst-ID       (0,40)

    print $Pay301rt_Pay_End_Dt1     (+2,3)
    print $Pay301rt_Rate_Code       (0,26)
    print $Pay301rt_Orig_Rate_Used1 (0,48)
    print $Pay301rt_Orig_Hr_Amt1    (0,65)
    print $Pay301rt_New_Rate_Used1  (0,79)
    print $Pay301rt_New_Ern_Amt1    (0,93)
    print $Pay301rt_Retropay1       (0,106)
    print $Pay301rt_Retropay1       (0,118)
    print $Pay301rt_OK_to_Pay1      (0,135)
    print $Pay301rt_Off_Cycle1      (0,147)
    print $Pay301rt_Pay_End_Dt2     (+1,1)
    print $Pay301rt_Earns_Desc2     (0,14)
    print $Pay301rt_Rate_Type       (0,26)
    print $Pay301rt_Hours2          (0,40)
    print $Pay301rt_Orig_Rate_Used2 (0,48)
    print $Pay301rt_Orig_Hr_Amt2    (0,65)
    print $Pay301rt_New_Rate_Used2  (0,77)
    print $Pay301rt_New_Ern_Amt2    (0,91)
    print $Pay301rt_Retropay2       (0,107)
    print $Pay301rt_Int             (0,118)
    print $Pay301rt_Ovrd2           (0,128)
    print $Pay301rt_OK_to_Pay2      (0,135)
    print $Pay301rt_Dupl2           (0,141)
    print $Pay301rt_Off_Cycle2      (0,147)
    print $Pay301rt_Exp2            (0,154)
    print $Pay301rt_Message2        (0,160)

end-heading

!******************  I N I T I A L I Z A T I O N   *********************

begin-procedure Init-Report

    move 'PAY301RT' to $ReportID

    do Stdapi-Init
    do Get-Report-Language
    move $Pay301rt_ReportTitle to $ReportTitle
    display $ReportTitle

    do Select-Parameters

    do Array-Initialization

end-procedure

! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation
! Read from PAY301RT program ids

  do Init_Report_Translation($ReportID,$language_cd)

  do Get_Field_Information ('PAY301RT', 'REPORTTITLE',     $Pay301rt_ReportTitle,     #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RQST_TYPE',       $Pay301rt_Rqst_Type,       #dummy_width)
  do Get_Field_Information ('PAY301RT', 'MASS_ID',         $Pay301rt_Mass_ID,         #dummy_width)
  do Get_Field_Information ('PAY301RT', 'PAY_END_DT1',     $Pay301rt_Pay_End_Dt1,     #dummy_width)
  do Get_Field_Information ('PAY301RT', 'ORIG_RATE_USED1', $Pay301rt_Orig_Rate_Used1, #dummy_width)
  do Get_Field_Information ('PAY301RT', 'ORIG_HR_AMT1',    $Pay301rt_Orig_Hr_Amt1,    #dummy_width)
  do Get_Field_Information ('PAY301RT', 'NEW_RATE_USED1',  $Pay301rt_New_Rate_Used1,  #dummy_width)
  do Get_Field_Information ('PAY301RT', 'NEW_ERN_AMT1',    $Pay301rt_New_Ern_Amt1,    #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RETROPAY1',       $Pay301rt_Retropay1,       #dummy_width)
  do Get_Field_Information ('PAY301RT', 'OK_TO_PAY1',      $Pay301rt_OK_to_Pay1,      #dummy_width)
  do Get_Field_Information ('PAY301RT', 'OFF_CYCLE1',      $Pay301rt_Off_Cycle1,      #dummy_width)

  do Get_Field_Information ('PAY301RT', 'EARNS_DESC2',     $Pay301rt_Earns_Desc2,     #dummy_width)
  do Get_Field_Information ('PAY301RT', 'PAY_END_DT2',     $Pay301rt_Pay_End_Dt2,     #dummy_width)
  do Get_Field_Information ('PAY301RT', 'HOURS2',          $Pay301rt_Hours2,          #dummy_width)
  do Get_Field_Information ('PAY301RT', 'ORIG_RATE_USED2', $Pay301rt_Orig_Rate_Used2, #dummy_width)
  do Get_Field_Information ('PAY301RT', 'ORIG_HR_AMT2',    $Pay301rt_Orig_Hr_Amt2,    #dummy_width)
  do Get_Field_Information ('PAY301RT', 'NEW_RATE_USED2',  $Pay301rt_New_Rate_Used2,  #dummy_width)
  do Get_Field_Information ('PAY301RT', 'NEW_ERN_AMT2',    $Pay301rt_New_Ern_Amt2,    #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RETROPAY2',       $Pay301rt_Retropay2,       #dummy_width)
  do Get_Field_Information ('PAY301RT', 'OVRD2',           $Pay301rt_Ovrd2,           #dummy_width)
  do Get_Field_Information ('PAY301RT', 'OK_TO_PAY2',      $Pay301rt_OK_to_Pay2,      #dummy_width)
  do Get_Field_Information ('PAY301RT', 'DUPL2',           $Pay301rt_Dupl2,           #dummy_width)
  do Get_Field_Information ('PAY301RT', 'OFF_CYCLE2',      $Pay301rt_Off_Cycle2,      #dummy_width)
  do Get_Field_Information ('PAY301RT', 'EXP2',            $Pay301rt_Exp2,            #dummy_width)
  do Get_Field_Information ('PAY301RT', 'MESSAGE2',        $Pay301rt_Message2,        #dummy_width)
  do Get_Field_Information ('PAY301RT', 'GRAND_TOT',       $Pay301rt_Grand_Tot,       #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RQST_TOT',        $Pay301rt_Rqst_Tot,        #dummy_width)
  do Get_Field_Information ('PAY301RT', 'EMPL_TOT',        $Pay301rt_Empl_Tot,        #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RETRO_DT',        $Pay301rt_Retro_Dt,        #dummy_width)
  do Get_Field_Information ('PAY301RT', 'DASH1',           $Pay301rt_Dash1,           #dummy_width)
  do Get_Field_Information ('PAY301RT', 'DASH2',           $Pay301rt_Dash2,           #dummy_width)
  do Get_Field_Information ('PAY301RT', 'EMPL_ID',         $Pay301rt_Empl_ID,         #dummy_width)
  do Get_Field_Information ('PAY301RT', 'EMPL_ID2',        $Pay301rt_Empl_ID2,        #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RETRO_SEQ',       $Pay301rt_Retro_Seq,       #dummy_width)
  do Get_Field_Information ('PAY301RT', 'EFFDT',           $Pay301rt_Effdt,           #dummy_width)
  do Get_Field_Information ('PAY301RT', 'BEGIN',           $Pay301rt_Begin,           #dummy_width)
  do Get_Field_Information ('PAY301RT', 'END',             $Pay301rt_End,             #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RATE_CODE',       $Pay301rt_Rate_Code,       #dummy_width)
  do Get_Field_Information ('PAY301RT', 'RATE_TYPE',       $Pay301rt_Rate_Type,       #dummy_width)
  do Get_Field_Information ('PAY301RT', 'INTEREST',        $Pay301rt_Int,             #dummy_width)

end-procedure

!**************************************************************
!                                                             *
!  Function:     Array-Initialization                         *
!                                                             *
!  Description:  Loads Amounts into the array to accumulate   *
!                  totals.                                    *
!                                                             *
!**************************************************************

begin-procedure Array-Initialization

   CREATE-ARRAY NAME=Totals                -
                 SIZE=4                     -
                 FIELD=TotalName:char       -
                 FIELD=Total:number:4       -
                 FIELD=startCol:number:4

    put $Pay301rt_Grand_Tot          into Totals(1) TotalName
    put $Pay301rt_Rqst_Tot           into Totals(2) TotalName
    put $Pay301rt_Empl_Tot           into Totals(3) TotalName

    put  67  into Totals(0) startCol(0)
    put  93  into Totals(0) startCol(1)
    put  108 into Totals(0) startCol(2)
    put  120 into Totals(0) startCol(3)

 end-procedure

!**************************  M A I N   P R O C E S S   ******************

begin-procedure Process-Main

begin-SELECT

A.RETROPAY_RQST_TYPE  () on-break print=never level=2 procedure=Rqst-Type-Change

    if &A.RETROPAY_RQST_TYPE = 'J'
        move 'J' to $Retropay-Rqst-Type
        move '- Job' to $Rqst-Descr
    else
        move 'A' to $Retropay-Rqst-Type
        move '- Add' to $Rqst-Descr
    end-if

A.EMPLID       () on-break print=never level=3 procedure=Emplid-Change
    move &A.EMPLID to $Emplid

A.EMPL_RCD
A.RETROPAY_EFFDT

  do Format-DateTime(&A.RETROPAY_EFFDT, $out, {DEFMDY}, '', '')
  let $Effdt = $out

A.RETROPAY_SEQ_NO
    move &A.RETROPAY_SEQ_NO to $Retropay-Seq-No
A.MASS_RETRO_RQST_ID

    if &A.RETROPAY_RQST_TYPE = 'M'
        move 'M' to $Retropay-Rqst-Type
        move $Mass_ID to $Mass-Retro-Rqst-ID
        move '- Mass' to $Rqst-Descr
    end-if

A.DUPLICATE_FLAG
    move &A.DUPLICATE_FLAG to $Dupl-Flag

    move 'Y' to $Prt-Empl-Heading
    do Get-RetroPay-Earns

A.RETROPAY_PRCS_FLAG

FROM PS_RETROPAY_RQST A

WHERE (A.RETROPAY_PRCS_FLAG = 'C') AND
      (A.RETROPAY_RQST_TYPE = $Rqst-TypeA  OR
       A.RETROPAY_RQST_TYPE = $Rqst-TypeJ  OR
      (A.RETROPAY_RQST_TYPE = $Rqst-TypeM AND
       A.MASS_RETRO_RQST_ID = $Mass_ID))

ORDER BY A.RETROPAY_RQST_TYPE,
         A.EMPLID,
         A.EMPL_RCD,
         A.RETROPAY_EFFDT

end-SELECT

move 1 to #changeLevel
move 'Y' to $End
do Print-Totals

end-procedure

!**********************  R E T R O P A Y    E A R N S   ******************

begin-procedure Get-RetroPay-Earns

begin-SELECT
B.RETROPAY_SEQ_NO
B.COMPANY
B.PAYGROUP
B.EMPL_RCD
B.RETROPAY_EFFDT
B.EARNS_BEGIN_DT

   do Format-DateTime(&B.EARNS_BEGIN_DT, $out, {DEFMDY}, '', '')
   let $Begindt = $out

B.EARNS_END_DT

  do Format-DateTime(&B.EARNS_END_DT, $out, {DEFMDY}, '', '')
  let $Enddt = $out

  if $Prt-Empl-Heading = 'Y'
        print $Pay301rt_Retro_Dt              (+3,131)
        print $Pay301rt_Dash1                 (+1,113)
        print $Pay301rt_Dash1                 (0,138)
        print $Pay301rt_Dash2                 (0,163)
        print $Pay301rt_Empl_ID               (+1,1)
        print $Emplid                         (0,20)
        do Get-Employee-Name
        print $Pay301rt_Retro_Seq             (0,89)
        print $Retropay-Seq-No                (0,102)
        print $Pay301rt_Effdt                 (0,113)
        print $Effdt                          (0,124)
        print $Pay301rt_Begin                 (0,138)
        print $Begindt                        (0,145)
        print $Pay301rt_End                   (0,159)
        print $Enddt                          (0,164)
        move 'N' to $Prt-Empl-Heading
    end-if

B.EMPLID                              !    (+2,1)
B.PAY_END_DT

  do Format-DateTime(&B.PAY_END_DT, $out1, {DEFMDY}, '', '')
  print $out1          (+2,1,11)

B.ERNCD
    do Get-Earnings-Descr

B.COMP_RATECD         (0,26,6)
B.EARNS_HRS           (0,38)     edit b999.99
B.EARNS_AMT           (0,60)     edit b99,999,999.99
B.NEW_EARNS_AMT       (0,86)     edit b99,999,999.99
B.EARNS_AMT_OVRD
B.RETROPAY_ERNCD
B.AMOUNT_DIFF

    do Check-Int-Earn

  if &B.EARNS_AMT_OVRD = 0
     if Not IsBlank($INT_ERNCD)
        print &B.AMOUNT_DIFF      (0,112)   edit 999,999,999.99
     else
        print &B.AMOUNT_DIFF      (0,100)   edit 999,999,999.99
     end-if
  else
     print &B.AMOUNT_DIFF         (0,100)   edit b99,999,999.99
     print 'Y'                    (0,130)
  end-if

B.OK_TO_PAY           (0,136)
    print $Dupl-Flag  (0,142)
B.OFF_CYCLE           (0,148)
B.EXCEPTION_FLAG      (0,155)
    if &B.EXCEPTION_FLAG = 'Y'
        do Get-Retropay-Msg
    end-if
B.RETRO_SEPCHK
B.PAGE_NUM
B.LINE_NUM

     print ' '(+1,1)
     do Get-Rate-Type
     do Get-Xlat-Desc

B.COMPRATE_USED
B.HOURLY_RT

     if &B.COMPRATE_USED <> 0
        print &B.COMPRATE_USED   (0,38)     edit b99,999,999,999.999999mi
     else
        print &B.HOURLY_RT       (0,38)     edit b99,999,999,999.999999mi
     end-if

B.NEW_COMPRATE_USED   (0,66)     edit b99,999,999,999.999999mi   ! the 12,6 format specification

! B.HOURLY_RT         (+1,43)    edit b99,999,999,999.999999mi   ! print on the next line to accomodate
! B.NEW_HOURLY_RT     (0,71)     edit b99,999,999,999.999999mi   ! the 12,6 format specification

    do Store-Totals

FROM PS_RETROPAY_EARNS B

WHERE B.RETROPAY_SEQ_NO  = &A.RETROPAY_SEQ_NO AND
      B.EMPLID           = &A.EMPLID AND
      B.EMPL_RCD        = &A.EMPL_RCD AND
      B.RETROPAY_EFFDT   = &A.RETROPAY_EFFDT AND
      B.RETROPAY_LOAD_SW = 'Y'

end-SELECT

end-procedure

!*************  G E T   P E R S O N A L  D A T A  ***************

begin-procedure Get-Employee-Name

begin-SELECT

E.NAME          (0,33)

FROM PS_PERSON_NAME E

WHERE E.EMPLID = &B.EMPLID

end-SELECT

end-procedure

!*************  G E T   E A R N I N G S   T B L   *****************

begin-procedure Get-Earnings-Descr

begin-SELECT

C.ERNCD
C.EFFDT
C.DESCRSHORT        ! (0,14)

        let $Prnt_Descrshort = &C.DESCRSHORT

        if $Curr_language_cd <> $Psoptions_Language_Cd
        do Lang-Record-Details-Earns
        end-if

      print $PRNT_DESCRSHORT              (0,14)

FROM PS_EARNINGS_TBL C

WHERE C.ERNCD = &B.ERNCD
  AND C.EFFDT =  (SELECT MAX(EFFDT)
                  FROM PS_EARNINGS_TBL
                  WHERE ERNCD   = C.ERNCD)

end-SELECT

end-procedure

!*************  C H E C K  I N T E R E S T   E A R N I N G S  *****************

begin-procedure Check-Int-Earn

begin-SELECT DISTINCT

C.GVT_ERNCD_INTEREST

    move &C.GVT_ERNCD_INTEREST to $INT_ERNCD

FROM PS_PAYGROUP_TBL C

WHERE C.GVT_ERNCD_INTEREST= &B.RETROPAY_ERNCD

end-SELECT

end-procedure

BEGIN-PROCEDURE Lang-Record-Details-Earns
BEGIN-SELECT
LC.DESCRSHORT

        let $Prnt_Descrshort = Cond(IsBlank(&LC.DESCRSHORT), &C.DESCRSHORT, &LC.DESCRSHORT)

FROM PS_EARNINGS_LANG LC
WHERE LC.ERNCD          = &C.ERNCD
  AND LC.LANGUAGE_CD    = $Curr_language_cd
  AND LC.EFFDT          = (SELECT MAX(EFFDT) FROM PS_EARNINGS_LANG
                                     WHERE ERNCD          = &C.ERNCD
                                         AND LANGUAGE_CD    = $Curr_language_cd
                                         AND EFFDT         <= &C.EFFDT)
END-SELECT
END-PROCEDURE


!**************    G E T   R A T E    T Y P E   ******************

begin-procedure Get-Rate-Type

begin-SELECT

CR.COMP_RATE_TYPE

FROM PS_COMP_RATECD_TBL CR

WHERE CR.COMP_RATECD = &B.COMP_RATECD
  AND CR.EFFDT       = (SELECT MAX (EFFDT)
                        FROM PS_COMP_RATECD_TBL
                        WHERE COMP_RATECD =  &B.COMP_RATECD
                          AND EFFDT       <= &B.EARNS_END_DT)

END-SELECT

   let $Rate_Type = &CR.COMP_RATE_TYPE

end-procedure



!**************    G E T    X L A T     D E S C   ********************

begin-procedure Get-Xlat-Desc


  move 'COMP_RATE_TYPE' to $FieldName
  move $Rate_Type to $FieldValue
  do Read-Translate-Table
  print $XLATSHORTNAME (0,26,10)

end-procedure


!**************  G E T   R E T R O P A Y    M S G   T B L   *************

begin-procedure Get-Retropay-Msg

Let #Retropay_Msg_Count = 0

begin-SELECT

D.MSGID

    do Get-Pay-Message-Tbl

FROM PS_RETROPAY_MSG D

WHERE D.RETROPAY_SEQ_NO = &B.RETROPAY_SEQ_NO
  AND D.COMPANY         = &B.COMPANY
  AND D.PAYGROUP        = &B.PAYGROUP
  AND D.PAY_END_DT      = &B.PAY_END_DT
  AND D.OFF_CYCLE       = &B.OFF_CYCLE
  AND D.PAGE_NUM           = &B.PAGE_NUM
  AND D.LINE_NUM           = &B.LINE_NUM
  AND D.SEPCHK          = &B.RETRO_SEPCHK

end-SELECT

end-procedure

!************  G E T   P A Y   M E S S A G E   T B L  ***************

begin-procedure Get-Pay-Message-Tbl

begin-SELECT

E.DESCR           ! (0,148)

    let $Prnt_Descr = &E.DESCR

    if $Curr_language_cd <> $Psoptions_Language_Cd
    do Lang-Record-Details-PayMsg
    end-if

    if #Retropay_Msg_Count > 0
        print $PRNT_DESCR              (+1,160,20)
    else
        print $PRNT_DESCR              (0,160,20)
    end-if
    Let #Retropay_Msg_Count = #Retropay_Msg_Count + 1

FROM PS_PAY_MESSAGE_TBL E

WHERE E.MSGID = &D.MSGID

end-SELECT

end-procedure



BEGIN-PROCEDURE Lang-Record-Details-PayMsg
BEGIN-SELECT
LE.DESCR

        let $PRNT_DESCR = Cond(IsBlank(&LE.DESCR), &E.DESCR, &LE.DESCR)

FROM PS_PAY_MESSAGE_LNG LE

WHERE LE.MSGID = &D.MSGID
  AND LE.LANGUAGE_CD = $Curr_language_cd

END-SELECT
END-PROCEDURE


!**************************  S T O R E  T O T A L S    ******************

begin-procedure Store-Totals

    move &B.EARNS_AMT      to #Earns
    move &B.NEW_EARNS_AMT  to #Newerns
    move &B.AMOUNT_DIFF    to #Diff

    array-add #Earns   to Totals(3) Total(0)
    array-add #Newerns to Totals(3) Total(1)
    if Not IsBlank($INT_ERNCD)
       array-add #Diff    to Totals(3) Total(3)
    else
       array-add #Diff    to Totals(3) Total(2)
    end-if

end-procedure

!*************************************************************************

begin-procedure Emplid-Change

    move 3 to #changeLevel
    move 'Y' to $Prt-Empl-Heading
    get #total from Totals(3) total(0)
    if #total > 0
       do Print-Totals
    end-if

end-procedure


begin-procedure Rqst-Type-Change

    move 2 to #changeLevel
    do Print-Totals

end-procedure

!*****************    P R I N T    T O T A L S  ***************************

begin-procedure Print-Totals

    move 3 to #totalRow
    while #totalRow >= #changeLevel

      get #total from Totals(#totalRow) total(0)
      if #total > 0

        move #totalRow to #rollRow
        subtract 1 from #rollRow
        get $TotalName from Totals(#totalRow) TotalName
        print $TotalName (+3,23)
        if #rollRow = 2
          print &B.EMPLID (0,42)
        end-if
        print ':'         (0,55)
        move 0 to #i

        while #i <= 3
           get #total from Totals(#totalRow) total(#i)
           get #startCol from Totals(0) startCol(#i)
           do Format-Number(#total, $out, '999,999,999.99mi')
           print #total (0,#startCol)
           array-add #total to Totals(#rollRow) total(#i)
           put 0 into Totals(#totalRow) total(#i)
           add 1 to #i
       end-while
     end-if
     subtract 1 from #totalRow

end-while

    if #changeLevel = 2    !skip to new page on change in Request Type
        new-page
    end-if

    if $End = 'Y'
        do Reset
    end-if

end-procedure

!********************************************************************

#Include 'pay301rt.sqc'  !Custom Run Control Parameters
#Include 'getpgdta.sqc'  !Get-PayGroup-Data procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'readxlat.sqc'  !Routines to retrieve XLATTABLE values
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
