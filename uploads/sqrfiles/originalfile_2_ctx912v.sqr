!***********************************************************************
!  CTX912V:    PRINT RL-2 Magnetic Media XML Audit Report              *
!***********************************************************************
!***********************************************************************
!                                                                      *
!Confidentiality Information:                                          *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/02/20:21:09:47                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  694792                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !printer and page-size init
#Include 'ctxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#define TAXFORM_BOX
#include 'rellang.sqc'

begin-heading 5
  #Include 'stdhdgtr.sqc'
  print $TaxYear   (3,,)      center
end-heading

begin-report

  do Init-Report

  do Process-Main

  close 10

#ifdef PRCSSCHD
  do StdAPI-Term
#endif

end-report

begin-procedure Init-Report

  do Init-DateTime
  #ifdef PRCSSCHD
    do StdAPI-Init
  #endif

 do Initialization

end-procedure

begin-procedure Initialization

  #define ColR 120

  move 'N' to $FileAtEnd

  do Get-Current-DateTime

  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($AsOfToday, $AsOfDateYMD, {DEFYMD},'','')
  move $AsOfDateYMD to $AsOfYear xxxx

  move $AsOfYear  to #AsOfYear
  subtract 1 from #AsOfYear

  do Get-Can-Tax-Processing-Params

  move &TX.Balance_Year to #TaxYear
  move #TaxYear to $TaxYear 9999

  let $AsOfDate = $TaxYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP},'','native')

  if &TX.Balance_Year <> #AsOfYear and $Prcs_Process_Instance = ''
    display ''
    display 'Current Year is not one greater than Tax Reporting Year.'
    input $Answer maxlen=1 'Current Year is not one greater than Tax Reporting Year. Do you want to continue? (Y/N)'
    uppercase $Answer

    if $Answer <> 'Y'
      stop
    end-if
  end-if

  do Open-Files

  do Array-Create
  do Load-Box-Arrays

  move 'CTX912V' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  move $Ctx912v_Title_rv2_audit to $ReportTitle
  display 'PRINTING RL-2 MAGNETIC MEDIA XML AUDIT REPORT'

  do Initialize-Transmitter
  do Initialize-Detail
  do Initialize-Totals

end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from CTX912V  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('CTX912V', 'TITLE_RV2_AUDIT' , $Ctx912v_Title_rv2_audit , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TRANS_REC'       , $Ctx912v_Trans_rec       , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TRANS_NUMBER'    , $Ctx912v_Trans_number    , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TAX_YEAR'        , $Ctx912v_Tax_year        , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TRANS_NAME'      , $Ctx912v_Trans_name      , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TRANS_ADDRESS1'  , $Ctx912v_Trans_address1  , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TRANS_ADDRESS2'  , $Ctx912v_Trans_address2  , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TRANS_CITY'      , $Ctx912v_Trans_city      , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TRANS_PROV'      , $Ctx912v_Trans_prov      , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TRANS_POST_CD'   , $Ctx912v_Trans_post_cd   , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TECH_RES_NAME'   , $Ctx912v_Trans_res_name  , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TECH_RES_AREA'   , $Ctx912v_Trans_res_area  , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TECH_RES_PHNE'   , $Ctx912v_Trans_res_phne  , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TECH_RES_EXT'    , $Ctx912v_Trans_res_ext   , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TECH_RES_LANG'   , $Ctx912v_Trans_res_lang  , #dummy_width)
   do Get_Field_Information ('CTX912V', 'ACCT_RES_NAME'   , $Ctx912v_Acct_res_name   , #dummy_width)
   do Get_Field_Information ('CTX912V', 'ACCT_RES_AREA'   , $Ctx912v_Acct_res_area   , #dummy_width)
   do Get_Field_Information ('CTX912V', 'ACCT_RES_PHNE'   , $Ctx912v_Acct_res_phne   , #dummy_width)
   do Get_Field_Information ('CTX912V', 'ACCT_RES_EXT'    , $Ctx912v_Acct_res_ext    , #dummy_width)
   do Get_Field_Information ('CTX912V', 'ACCT_RES_LANG'   , $Ctx912v_Acct_res_lang   , #dummy_width)
   do Get_Field_Information ('CTX912V', 'PACK_TYPE'       , $Ctx912v_Pack_type       , #dummy_width)
   do Get_Field_Information ('CTX912V', 'PACK_TYPE1'      , $Ctx912v_Pack_type1      , #dummy_width)
   do Get_Field_Information ('CTX912V', 'PACK_TYPE2'      , $Ctx912v_Pack_type2      , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TRANS_TYPE'      , $Ctx912v_Trans_type      , #dummy_width)
   do Get_Field_Information ('CTX912V', 'RELEVE_SRCE1'    , $Ctx912v_Releve_srce1    , #dummy_width)
   do Get_Field_Information ('CTX912V', 'RELEVE_SRCE2'    , $Ctx912v_Releve_srce2    , #dummy_width)
   do Get_Field_Information ('CTX912V', 'SIN'             , $Ctx912v_Sin             , #dummy_width)
   do Get_Field_Information ('CTX912V', 'EMPLID'          , $Ctx912v_Emplid          , #dummy_width)
   do Get_Field_Information ('CTX912V', 'REPORT_ID'       , $Ctx912v_Report_id       , #dummy_width)
   do Get_Field_Information ('CTX912V', 'RV2_BOX_DATA'    , $Ctx912v_Rv2_box_data    , #dummy_width)
   do Get_Field_Information ('CTX912V', 'PROVENANCE'      , $Ctx912v_Provenance      , #dummy_width)
   do Get_Field_Information ('CTX912V', 'PROVENANCE2'     , $Ctx912v_Provenance2     , #dummy_width)
   do Get_Field_Information ('CTX912V', 'PRINT_MSG'       , $Ctx912v_Print_msg       , #dummy_width)
   do Get_Field_Information ('CTX912V', 'SUMM_REC'        , $Ctx912v_Summ_rec        , #dummy_width)
   do Get_Field_Information ('CTX912V', 'REP_ID'          , $Ctx912v_Rep_id          , #dummy_width)
   do Get_Field_Information ('CTX912V', 'EMPLER_NAME'     , $Ctx912v_Empler_name     , #dummy_width)
   do Get_Field_Information ('CTX912V', 'ADDRESS1'        , $Ctx912v_Address1        , #dummy_width)
   do Get_Field_Information ('CTX912V', 'ADDRESS2'        , $Ctx912v_Address2        , #dummy_width)
   do Get_Field_Information ('CTX912V', 'CITY'            , $Ctx912v_City            , #dummy_width)
   do Get_Field_Information ('CTX912V', 'PROVINCE'        , $Ctx912v_Province        , #dummy_width)
   do Get_Field_Information ('CTX912V', 'POST_CODE'       , $Ctx912v_Post_code       , #dummy_width)
   do Get_Field_Information ('CTX912V', 'NEQ'             , $Ctx912v_NEQ             , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TAX_YR'          , $Ctx912v_Tax_yr          , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TOT_RV2_RECS'    , $Ctx912v_Tot_rv2_recs    , #dummy_width)
   do Get_Field_Information ('CTX912V', 'ACC_PRINT_MSG1'  , $Ctx912v_acc_print_msg1  , #dummy_width)
   do Get_Field_Information ('CTX912V', 'ACC_PRINT_MSG2'  , $Ctx912v_acc_print_msg2  , #dummy_width)
   do Get_Field_Information ('CTX912V', 'ACC_TOTALS'      , $Ctx912v_acc_totals      , #dummy_width)
   do Get_Field_Information ('CTX912V', 'RPRT_ID'         , $Ctx912v_rpt_id          , #dummy_width)
   do Get_Field_Information ('CTX912V', 'RV2_#SLIPS'      , $Ctx912v_rv2_#slips      , #dummy_width)
   do Get_Field_Information ('CTX912V', 'SLIP_NO'         , $Ctx912v_Slip_No         , #dummy_width)
   do Get_Field_Information ('CTX912V', 'LAST_TRANS_SLIP#' , $Ctx912v_LastTrans_SlipNo , #dummy_width)
   do Get_Field_Information ('CTX912V', 'TYPE_OF_DATA'    , $Ctx912v_TypeOfData      , #dummy_width)
   do Get_Field_Information ('CTX912V', 'APPROVAL_NUM'    , $Ctx912v_Approval_Num    , #dummy_width)


end-procedure

begin-procedure Open-Files

#ifdef MPE
    open 'CTXVM.DAT' as 10 for-reading record=200
#else
    open '{IMPORTPREFIX}CTXVM{IMPORTSUFFIX}' as 10 for-reading record=200
#endif

end-procedure

begin-procedure Array-Create

  create-array name=PrR2_Area size=30 -
    field=PR2_Box:char                -
    field=PR2_Descr:char

end-procedure

begin-procedure Load-Box-Arrays

    move 0 to #i

begin-SELECT
M.TAXFORM_ID
M.BOX
M.DESCR
M.EFFDT

   let $M.BOX = RTRIM(&M.BOX, ' ')
   let $TAXFORM_BOX-DESCR = &M.DESCR

   do Get_Related_TAXFORM_BOX(&M.BOX,&M.EFFDT,&M.TAXFORM_ID)

   put $M.Box $TAXFORM_BOX-DESCR into PrR2_Area(#i)
         PR2_Box PR2_Descr
       add 1 to #i
       move #i to #max_R2boxes


FROM PS_TAXFORM_BOX M
WHERE TAXFORM_ID = 'V' AND
      EFFDT = (SELECT MAX(EFFDT)
               FROM PS_TAXFORM_BOX
               WHERE TAXFORM_ID = 'V'
                 AND EFFDT <= $AsOfDate)
ORDER BY M.BOX ASC
end-SELECT

end-procedure

begin-procedure Process-Main

  let $Transmitter_rec = 'N'
  let $Detail_rec      = 'N'

  while 1 = 1

   if $FileAtEnd = 'Y'
       break
   else
      do Read-File
      if $FileAtEnd = 'Y'
        break
      else
         let $RV2Data_Full_Rec = ltrim($RV2Data, ' ')
         let $RV2Data_Full_Rec = rtrim($RV2Data, ' ')

         evaluate $RV2Data_Full_Rec
         when = '<P>'
           let $TypeOfData = 'P'
           let $Transmitter_rec = 'Y'
           break
         when = '<A>'
           let $Detail_rec = 'Y'
           let $TypeOfData = 'A'
           break
         when = '<R>'
           let $Detail_rec = 'Y'
           let $TypeOfData = 'R'
           break
         when = '<D>'
           let $Detail_rec = 'Y'
           let $TypeOfData = 'D'
           break
         when-other
           break
         end-evaluate

         do Process-RL2-XML-Records

      end-if
   end-if
  end-while

end-procedure

begin-procedure Read-File

  read 10 into $RV2Data:200

    if #end-file = 1
      move 'Y' to $FileAtEnd
    end-if

end-procedure


begin-procedure Process-RL2-XML-Records

  do Parse-XML
  if rtrim($Element, ' ') <> ''
    if $Transmitter_rec = 'Y'
      do Extract-Transmitter-Data
    else
      if $Detail_rec = 'Y'
        do Extract-EE-Detail-Data
      else
        do Extract-Totals-Data
      end-if
    end-if
  end-if

  evaluate $RV2Data_Full_Rec
  when = '</P>'
    do Print-Transmittal-Record
    do Initialize-Transmitter
    let $Transmitter_rec = 'N'
    let $Group_Tag =  ' '
    new-page
    break
  when = '</R>'
  when = '</A>'
    do Print-Detail
    do Initialize-Detail
    let $Detail_rec = 'N'
    let $Group_Tag  = ' '
    break
  when = '</D>'
    do Print-Detail-Cancelled
    do Initialize-Detail
    let $Detail_rec = 'N'
    let $Group_Tag  = ' '
    break
  when = '</T>'
    new-page
    do Print-Accumulated-Data
    new-page
    do Print-Summary
    new-page
    do Initialize-Totals
    break
  when-other
    break
  end-evaluate

end-procedure


begin-procedure Parse-XML

  let #RecLength           = 0
  let #BeginTagPosition    = 0
  let #EndTagPosition      = 0
  let #TagLength           = 0
  let #TagSlashPosition    = 0
  let $Tag                 = ' '
  let $Element_Tag         = ' '
  let $Element             = ' '

  let #RecLength = length($RV2Data_Full_Rec)

  while  instr ($RV2Data_Full_Rec , '<', 1) <> 0
    let #BeginTagPosition  = instr ($RV2Data_Full_Rec , '<', 1)

    while instr($RV2Data_Full_Rec , '>', 1)   <> 0
      let #EndTagPosition = instr($RV2Data_Full_Rec , '>', 1)

      if #RecLength =  #EndTagPosition        !No element found!
        let $Group_Tag = rtrim($RV2Data_Full_Rec , ' ')
        break
      else
        let #TagLength = (#EndTagPosition - #BeginTagPosition) + 1
        let $Tag = substr($RV2Data_Full_Rec , #BeginTagPosition, #TagLength)
        let #TagSlashPosition = instr($Tag, '/', 1)

        if #TagSlashPosition <> 2
          let $Element_Tag = $Tag
        end-if

        let $RV2Data_Full_Rec = ltrim (replace($RV2Data_Full_Rec , $Tag, ' '),' ')

        if instr($RV2Data_Full_Rec , '<',1) = 0
          let $Element = $RV2Data_Full_Rec    !Element left after tags removed!
        end-if
        break

      end-if

    end-while

    if #RecLength =  #EndTagPosition          !No element found!
      break
    end-if

  end-while

  let $Element = replace($Element, '&amp;'  , '&')
  let $Element = replace($Element, '&lt;'   , '<')
  let $Element = replace($Element, '&quot;' , '"')
  let $Element = replace($Element, '&gt; '  , '>')
  let $Element = replace($Element, '&apos;' , '''')

end-procedure


begin-procedure Extract-Transmitter-Data

  let $Element_Tag = replace($Element_Tag, '<', ' ')
  let $Element_Tag = replace($Element_Tag, '>', ' ')
  let $Element_Tag = ltrim($Element_Tag, ' ')
  let $Element_Tag = rtrim($Element_Tag, ' ')

  evaluate $Element_Tag
    when = 'Annee'
      let $TaxYear                     = $Element
      break
    when = 'TypeEnvoi'
      let $PackageType                 = $Element
      break
    when = 'Provenance'
      let $ReleveSource                = $Element
      break
    when = 'No'
      let $TransmitterNumber           = $Element
      break
    when = 'Type'
      let $TransmitterType             = $Element
      break
    when = 'Nom1'
      let $TransmitterNameLine1        = $Element
      break
    when = 'Ligne1'
      let $TransmitterAddrLine1        = $Element
      break
    when = 'Ligne2'
      let $TransmitterAddrLine2        = $Element
      break
    when = 'Ville'
      let $TransmitterCity             = $Element
      break
    when = 'Province'
      let $TransmitterProvince         = $Element
      break
    when = 'CodePostal'
      let $TransmitterPostalCode       = $Element
      break
    when = 'Nom'
      if $Group_Tag = '<Informatique>'
        let $TechResourceName          = $Element
      else
        if $Group_Tag = '<Comptabilite>'
          let $AcctingResourceName     = $Element
        end-if
      end-if
      break
    when = 'IndRegional'
      if $Group_Tag = '<Informatique>'
        let $TechResourceAreaCode      = $Element
      else
        if $Group_Tag = '<Comptabilite>'
          let $AcctingResourceAreaCode = $Element
        end-if
      end-if
      break
    when = 'Tel'
      if $Group_Tag = '<Informatique>'
        let $TechResourcePhone         = $Element
      else
        if $Group_Tag = '<Comptabilite>'
          let $AcctingResourcePhone    = $Element
        end-if
      end-if
      break
    when = 'PosteTel'
      if $Group_Tag = '<Informatique>'
        let $TechResourceExtNo         = $Element
      else
        if $Group_Tag = '<Comptabilite>'
          let $AcctingResourceExtNo    = $Element
        end-if
      end-if
      break
    when = 'Langue'
      if $Group_Tag = '<Informatique>'
        let $TechResourceLanguage      = $Element
      else
        if $Group_Tag = '<Comptabilite>'
          let $AcctingResourceLanguage = $Element
        end-if
      end-if
      break
    when = 'NoCertification'
      let $RL2ApprovalNum              = $Element
      break
    when-other
      break
  end-evaluate

end-procedure


begin-procedure Initialize-Transmitter

  let $TaxYear                     =  ' '
  let $PackageType                 =  ' '
  let $ReleveSource                =  ' '
  let $TransmitterNumber           =  ' '
  let $TransmitterType             =  ' '
  let $TransmitterNameLine1        =  ' '
  let $TransmitterAddrLine1        =  ' '
  let $TransmitterAddrLine2        =  ' '
  let $TransmitterCity             =  ' '
  let $TransmitterProvince         =  ' '
  let $TransmitterPostalCode       =  ' '
  let $TechResourceName            =  ' '
  let $AcctingResourceName         =  ' '
  let $TechResourceAreaCode        =  ' '
  let $AcctingResourceAreaCode     =  ' '
  let $TechResourcePhone           =  ' '
  let $AcctingResourcePhone        =  ' '
  let $TechResourceExtNo           =  ' '
  let $AcctingResourceExtNo        =  ' '
  let $TechResourceLanguage        =  ' '
  let $AcctingResourceLanguage     =  ' '
  let $RL2ApprovalNum              =  ' '

end-procedure


begin-procedure Extract-EE-Detail-Data

  let $Element_Tag = replace($Element_Tag, '<', ' ')
  let $Element_Tag = replace($Element_Tag, '>', ' ')
  let $Element_Tag = ltrim($Element_Tag, ' ')
  let $Element_Tag = rtrim($Element_Tag, ' ')

  evaluate $Element_Tag
    when = 'Annee'
      let $TaxYear                     = $Element
      break
    when = 'NoReleve'
      let $ReleveSlipNo                = $Element
      break
    when = 'NAS'
      let $E_SIN                       = $Element
      break
    when = 'No'
      let $EmplID                      = $Element
      break
    when = 'NomFamille'
      let $E_LastName                  = $Element
      break
    when = 'Prenom'
      let $E_FirstName                 = $Element
      break
    when = 'Initiale'
      let $E_Initial                   = $Element
      break
    when = 'Ligne1'
      let $E_AddrLine1                 = $Element
      break
    when = 'Ligne2'
      let $E_AddrLine2                 = $Element
      break
    when = 'Ville'
      let $E_City                      = $Element
      break
    when = 'Province'
      let $E_Province                  = $Element
      break
    when = 'CodePostal'
      let $E_PostalCode                = $Element
      break
    when = 'A_PrestRPA_RPNA'
      let $BoxA                        = $Element
      break
    when = 'B_PrestREER_FERR_RPDB'
      let $BoxB                        = $Element
      break
    when = 'C_AutrePaiement'
      let $BoxC                        = $Element
      break
    when = 'D_RembPrimeConjoint'
      let $BoxD                        = $Element
      break
    when = 'E_PrestDeces'
      let $BoxE                        = $Element
      break
    when = 'F_RembCotisInutilise'
      let $BoxF                        = $Element
      break
    when = 'G_RevocationREER_FERR'
      let $BoxG                        = $Element
      break
    when = 'H_AutreRevenu'
      let $BoxH                        = $Element
      break
    when = 'I_DroitDeduction'
      let $BoxI                        = $Element
      break
    when = 'J_ImpotQueRetenuSource'
      let $BoxJ                        = $Element
      break
    when = 'K_RevenuApresDeces'
      let $BoxK                        = $Element
      break
    when = 'L_RetraitREEP'
      let $BoxL                        = $Element
      break
    when = 'M_LibereImpot'
      let $BoxM                        = $Element
      break
    when = 'N_NASConjoint'
      let $SIN_Cntbtr_Spouse           = $Element
      break
    when = 'O_RetraitRAP'
      let $BoxO                        = $Element
      break
    when = 'Provenance1'
      let $Releve2_SrceofIncome        = $Element
      break
    when = 'Provenance2'
      let $Releve2_SrceofIncome2       = $Element
      break
    when = 'NoReleveDerniereTrans'
      let $LastTransSlipNo             = $Element
      break
    when-other
      break
  end-evaluate

end-procedure


begin-procedure Initialize-Detail

  let $TaxYear                     = ' '
  let $ReleveSlipNo                = ' '
  let $E_SIN                       = ' '
  let $EmplID                      = ' '
  let $E_LastName                  = ' '
  let $E_FirstName                 = ' '
  let $E_Initial                   = ' '
  let $E_AddrLine1                 = ' '
  let $E_AddrLine2                 = ' '
  let $E_City                      = ' '
  let $E_Province                  = ' '
  let $E_PostalCode                = ' '
  let $BoxA                        = ' '
  let $BoxB                        = ' '
  let $BoxC                        = ' '
  let $BoxD                        = ' '
  let $BoxE                        = ' '
  let $BoxF                        = ' '
  let $BoxG                        = ' '
  let $BoxH                        = ' '
  let $BoxI                        = ' '
  let $BoxJ                        = ' '
  let $BoxK                        = ' '
  let $BoxL                        = ' '
  let $BoxM                        = ' '
  let $SIN_Cntbtr_Spouse           = ' '
  let $BoxO                        = ' '
  let $Releve2_SrceofIncome        = ' '
  let $Releve2_SrceofIncome2       = ' '
  let $LastTransSlipNo             = ' '

end-procedure


begin-procedure Extract-Totals-Data

  let $Element_Tag = replace($Element_Tag, '<', ' ')
  let $Element_Tag = replace($Element_Tag, '>', ' ')
  let $Element_Tag = ltrim($Element_Tag, ' ')
  let $Element_Tag = rtrim($Element_Tag, ' ')

  evaluate $Element_Tag
    when = 'Annee'
      let $TaxYear                     = $Element
      break
    when = 'NbReleves'
      let $RV2Count                    = $Element
      break
    when = 'NoId'
      let $ReportingId                 = $Element
      break
    when = 'TypeDossier'
      let $ReportingId                 = rtrim($ReportingId, ' ') || $Element
      break
    when = 'NoDossier'
      let $ReportingId                 = rtrim($ReportingId, ' ') || $Element
      break
    when = 'NEQ'
      let $NEQ                         = $Element
      break
    when = 'Nom'
      let $CompanyName                 = $Element
      break
    when = 'Ligne1'
      let $C_Street1                   = $Element
      break
    when = 'Ligne2'
      let $C_Street2                   = $Element
      break
    when = 'Ville'
      let $C_City                      = $Element
      break
    when = 'Province'
      let $C_Province                  = $Element
      break
    when = 'CodePostal'
      let $C_PostalCode                = $Element
      break
    when = 'A_PrestRPA_RPNA'
      let $SumLifeAnnty                = $Element
      break
    when = 'B_PrestREER_FERR_RPDB'
      let $SumMiscBenefits             = $Element
      break
    when = 'C_AutrePaiement'
      let $SumOtherPayments            = $Element
      break
    when = 'D_RembPrimeConjoint'
      let $SumPremRefunded             = $Element
      break
    when = 'E_PrestDeces'
      let $SumFundsPriorDth            = $Element
      break
    when = 'F_RembCotisInutilise'
      let $SumRefundorUnded            = $Element
      break
    when = 'G_RevocationREER_FERR'
      let $SumAmtUponRevoc             = $Element
      break
    when = 'H_AutreRevenu'
      let $SumOthIncRRP                = $Element
      break
    when = 'I_DroitDeduction'
      let $SumAmtEntlmtDed             = $Element
      break
    when = 'J_ImpotQueRetenuSource'
      let $SumQITWithheldSource        = $Element
      break
    when = 'K_RevenuApresDeces'
      let $SumIncDth                   = $Element
      break
    when = 'L_RetraitREEP'
      let $SumWithdrwlLLP              = $Element
      break
    when = 'M_LibereImpot'
      let $SumAmtTaxPaid               = $Element
      break
    when = 'O_RetraitRAP'
      let $SumWithdrwlHBP              = $Element
      break
    when-other
      break
  end-evaluate

end-procedure


begin-procedure Initialize-Totals

  let $TaxYear                     = ' '
  let $RV2Count                    = ' '
  let $ReportingId                 = ' '
  let $ReportingId                 = ' '
  let $ReportingId                 = ' '
  let $NEQ                         = ' '
  let $CompanyName                 = ' '
  let $C_Street1                   = ' '
  let $C_Street2                   = ' '
  let $C_City                      = ' '
  let $C_Province                  = ' '
  let $C_PostalCode                = ' '
  let $SumLifeAnnty                = ' '
  let $SumMiscBenefits             = ' '
  let $SumOtherPayments            = ' '
  let $SumPremRefunded             = ' '
  let $SumFundsPriorDth            = ' '
  let $SumRefundorUnded            = ' '
  let $SumAmtUponRevoc             = ' '
  let $SumOthIncRRP                = ' '
  let $SumAmtEntlmtDed             = ' '
  let $SumQITWithheldSource        = ' '
  let $SumIncDth                   = ' '
  let $SumWithdrwlLLP              = ' '
  let $SumAmtTaxPaid               = ' '
  let $SumWithdrwlHBP              = ' '

end-procedure


begin-procedure Print-Transmittal-Record

   print $Ctx912v_Trans_rec              (+2,3)
   print $Ctx912v_Trans_number           (+2,3)
   print $TransmitterNumber              (0,50)
   print $Ctx912v_Tax_year               (+2,3)
   print $TaxYear                        (0,50)
   print $Ctx912v_Trans_name             (+2,3)
   print $TransmitterNameLine1           (0,50)
   print $Ctx912v_Trans_address1         (+1,3)
   print $TransmitterAddrLine1           (0,50)
   print $Ctx912v_Trans_address2         (+1,3)
   print $TransmitterAddrLine2           (0,50)
   print $Ctx912v_Trans_city             (+1,3)
   print $TransmitterCity                (0,50)
   print $Ctx912v_Trans_prov             (+1,3)
   print $TransmitterProvince            (0,50)
   print $Ctx912v_Trans_post_cd          (+1,3)
   print $TransmitterPostalCode          (0,50)
   print ''                              (+1,3)
   print $Ctx912v_Trans_res_name         (+1,3)
   print $TechResourceName               (0,50)
   print $Ctx912v_Trans_res_area         (+1,3)
   print $TechResourceAreaCode           (0,50)
   print $Ctx912v_Trans_res_phne         (+1,3)
   print $TechResourcePhone              (0,50)
   print $Ctx912v_Trans_res_ext          (+1,3)
   if rtrim($TechResourceExtNo, ' ') <> ''             !ext no exists
     print $TechResourceExtNo            (0,50)
   end-if
   print $Ctx912v_Trans_res_lang         (+1,3)
   print $TechResourceLanguage           (0,50)
   print ' '                             (+1,3)
   print  $Ctx912v_Acct_res_name         (+1,3)
   print $AcctingResourceName            (0,50)
   print $Ctx912v_Acct_res_area          (+1,3)
   print $AcctingResourceAreaCode        (0,50)
   print $Ctx912v_Acct_res_phne          (+1,3)
   print $AcctingResourcePhone           (0,50)
   print $Ctx912v_Acct_res_ext           (+1,3)
   if rtrim($AcctingResourceExtNo, ' ') <> ''          !ext no exists
     print $AcctingResourceExtNo         (0,50)
   end-if
   print $Ctx912v_Acct_res_lang          (+1,3)
   print $AcctingResourceLanguage        (0,50)
   if rtrim($RL2ApprovalNum, ' ') <> ''
     print $Ctx912v_Approval_Num         (+2,3)
     print $RL2ApprovalNum               (0,50)
   end-if
   print $Ctx912v_Pack_type              (+2,3)
   print $Ctx912v_Pack_type1             (0,+1)
   print $Ctx912v_Pack_type2             (+1,18)
   print $PackageType                    (0,50)
   print $Ctx912v_Trans_type             (+1,3)
   print $TransmitterType                (0,80)
   print $Ctx912v_Releve_srce1           (+1,3)
   print $Ctx912v_Releve_srce2           ()
   print $ReleveSource                   (0,+2)

end-procedure


begin-procedure Print-Detail

  next-listing need=7

  let $Surname = RTRIM($E_LastName, ' ')
  print $Surname (+3,3)
  print ',' (0,0)
  let $FirstName = RTRIM($E_FirstName, ' ')
  print $FirstName (0,+1)
  print $E_Initial (0,+1)
  print $Ctx912v_Sin    (0,40)
  print $E_SIN (0,46) edit xxx-xxx-xxx
  print $Ctx912v_Emplid (0,61)
  print $EmplID (0,70)

  print $Ctx912v_Slip_No (0,85)
  print $ReleveSlipNo (0,101)

  print $Ctx912v_TypeOfData (0,122)
  print $TypeOfData (0,137)

  if $TypeOfData = 'A'
    print $Ctx912v_LastTrans_SlipNo (+1,122)
    print $LastTransSlipNo      (0,151)
  end-if

  add 1 to #RV2PrintCount

  move 'Y' to $PrintAmount

  do Get-Box-Descr

  print $Ctx912v_Rv2_box_data   (+2,1)
  print ''                (+1,1)
  let #BoxAmt = $BoxA
  add 1 to #BoxCount
  let $Message = $MsgA
  add #BoxAmt to #AccumLifeAnn
  do Print-Box

  let #BoxAmt = $BoxB
  add 1 to #BoxCount
  let $Message = $MsgB
  add #BoxAmt to #AccumMiscBenefits
  do Print-Box

  let #BoxAmt = $BoxC
  add 1 to #BoxCount
  let $Message = $MsgC
  add #BoxAmt to #AccumOtherBenefits
  do Print-Box

  let #BoxAmt = $BoxD
  add 1 to #BoxCount
  let $Message = $MsgD
  add #BoxAmt to #AccumRefdPrem
  do Print-Box

  let #BoxAmt = $BoxE
  add 1 to #BoxCount
  let $Message = $MsgE
  add #BoxAmt to #AccumAmtRecdPDth
  do Print-Box

  let #BoxAmt = $BoxF
  add 1 to #BoxCount
  let $Message = $MsgF
  add #BoxAmt to #AccumRefdUndedContrib
  do Print-Box

  let #BoxAmt = $BoxG
  add 1 to #BoxCount
  let $Message = $MsgG
  add #BoxAmt to #AccumRevocPlan
  do Print-Box

  let #BoxAmt = $BoxH
  add 1 to #BoxCount
  let $Message = $MsgH
  add #BoxAmt to #AccumOtherIncDed
  do Print-Box


  let #BoxAmt = $BoxI
  add 1 to #BoxCount
  let $Message = $MsgI
  add #BoxAmt to #AccumEntlmtDed
  do Print-Box

  let #BoxAmt = $BoxJ
  add 1 to #BoxCount
  let $Message = $MsgJ
  add #BoxAmt to #AccumQITWSource
  do Print-Box

  let #BoxAmt = $BoxK
  add 1 to #BoxCount
  let $Message = $MsgK
  add #BoxAmt to #AccumIncDth
  do Print-Box

  let #BoxAmt = $BoxL
  add 1 to #BoxCount
  let $Message = $MsgL
  add #BoxAmt to #AccumWithDrwlLLP
  do Print-Box

  let #BoxAmt = $BoxM
  add 1 to #BoxCount
  let $Message = $MsgM
  add #BoxAmt to #AccumAmtTaxPd
  do Print-Box

  print $MsgN                 (+1,5)

  if rtrim($SIN_Cntbtr_Spouse, ' ') <> ''
    print $SIN_Cntbtr_Spouse    (0,60)    edit xxx-xxx-xxx
  end-if

  let #BoxAmt = $BoxO
  add 1 to #BoxCount
  let $Message = $MsgO
  add #BoxAmt to #AccumWithDrwlHBP
  do Print-Box

  print $Ctx912v_Provenance   (+1,5)
  print $Releve2_SrceofIncome (0,60)

  print $Ctx912v_Provenance2   (+1,5)
  print $Releve2_SrceofIncome2 (0,60)

end-procedure


begin-procedure Print-Box

   print $Message (+1,5)
   print #BoxAmt (0,60) edit 99999999.99

end-procedure


begin-procedure Print-Detail-Cancelled

   do Get-Box-Descr

   next-listing need=7

   let $Surname = RTRIM($E_LastName, ' ')
   print $Surname (+2,3)
   print ',' (0,0)
   let $FirstName = RTRIM($E_FirstName, ' ')
   print $FirstName (0,+1)
   print $E_Initial (0,+1)
   print $Ctx912v_Sin    (0,40)
   print $E_SIN (0,46) edit xxx-xxx-xxx

   print $Ctx912v_Slip_No (+1,3)
   print $ReleveSlipNo (0,+1)

   print $Ctx912v_TypeOfData (0,40)
   print $TypeOfData (0,+1)

   add 1 to #RV2PrintCount

end-procedure


begin-procedure Print-Summary

     print $Ctx912v_Print_msg             (+2,1)

     print    $Ctx912v_Summ_rec            (+2,3)
     print    $Ctx912v_Rep_id              (+2,3)
     print    $ReportingId                 (0,60)
     print    $Ctx912v_Empler_name         (+1,3)
     print    $CompanyName                 (0,60)
     print    $Ctx912v_Address1            (+1,3)
     print    $C_Street1                   (0,60)
     print    $Ctx912v_Address2            (+1,3)
     print    $C_Street2                   (0,60)
     print    $Ctx912v_City                (+1,3)
     print    $C_City                      (0,60)
     print    $Ctx912v_Province            (+1,3)
     print    $C_Province                  (0,60)
     print    $Ctx912v_Post_code           (+1,3)
     print    $C_PostalCode                (0,60)
     print    $Ctx912v_NEQ                 (+1,3)
     print    $NEQ                         (0,60)
     print    $Ctx912v_Tax_yr              (+1,3)
     print    $TaxYear                     (0,60)
     print    $Ctx912v_Tot_rv2_recs        (+2,3)
     let #RV2Count = $RV2Count
     print    #RV2Count   (0,60)  edit 9999999
     print    $SumA                        (+2,3)
     let #SumLifeAnnty = $SumLifeAnnty
     print    #SumLifeAnnty    (0,60)  edit 9,999,999,999.99
     print    $SumB                        (+2,3)
     let #SumMiscBenefits = $SumMiscBenefits
     print    #SumMiscBenefits    (0,60)  edit 9,999,999,999.99
     print    $SumC                        (+2,3)
     let #SumOtherPayments  = $SumOtherPayments
     print    #SumOtherPayments   (0,60)  edit 9,999,999,999.99
     print    $SumD                        (+2,3)
     let #SumPremRefunded  = $SumPremRefunded
     print    #SumPremRefunded    (0,60)  edit 9,999,999,999.99
     print    $SumE                        (+2,3)
     let #SumFundsPriorDth = $SumFundsPriorDth
     print    #SumFundsPriorDth   (0,60)  edit 9,999,999,999.99
     print    $SumF                        (+2,3)
     let #SumRefundorUnded   = $SumRefundorUnded
     print    #SumRefundorUnded     (0,60)  edit 9,999,999,999.99
     print    $SumG                        (+2,3)
     let #SumAmtUponRevoc         = $SumAmtUponRevoc
     print    #SumAmtUponRevoc    (0,60)  edit 9,999,999,999.99
     print    $SumH                        (+2,3)
     let #SumOthIncRRP     = $SumOthIncRRP
     print    #SumOthIncRRP       (0,60)  edit 9,999,999,999.99
     print    $SumI                        (+2,3)
     let #SumAmtEntlmtDed = $SumAmtEntlmtDed
     print    #SumAmtEntlmtDed   (0,60)  edit 9,999,999,999.99
     print    $SumJ                        (+2,3)
     let #SumQITWithheldSource    = $SumQITWithheldSource
     print    #SumQITWithheldSource      (0,60)  edit 9,999,999,999.99
     print    $SumK                        (+2,3)
     let #SumIncDth       =  $SumIncDth
     print    #SumIncDth                 (0,60)  edit 9,999,999,999.99
     print    $SumL                        (+2,3)
     let #SumWithdrwlLLP  =  $SumWithdrwlLLP
     print    #SumWithdrwlLLP            (0,60)  edit 9,999,999,999.99
     print    $SumM                        (+2,3)
     let #SumAmtTaxPaid    = $SumAmtTaxPaid
     print    #SumAmtTaxPaid      (0,60)  edit 9,999,999,999.99
     print    $SumO                        (+2,3)
     let #SumWithdrwlHBP  =  $SumWithdrwlHBP
     print    #SumWithdrwlHBP            (0,56)  edit 9,999,999,999,999.99

end-procedure


begin-procedure Print-Accumulated-Data

  print $Ctx912v_acc_print_msg1  (+1,1)
  print $Ctx912v_acc_print_msg2  (+1,1)

  print $Ctx912v_acc_totals       (+2,1)
  print $Ctx912v_rpt_id           (+2,1)
  print $ReportingId       (0,60)
  print $Ctx912v_rv2_#slips       (+2,1)
  print #RV2PrintCount    (0,60)  edit 9999999
  print $SumA                     (+2,1)
  print #AccumLifeAnn    (0,60)  edit 9,999,999,999.99
  print $SumB                     (+2,1)
  print #AccumMiscBenefits    (0,60)  edit 9,999,999,999.99
  print $SumC                     (+2,1)
  print #AccumOtherBenefits    (0,60)  edit 9,999,999,999.99
  print $SumD                     (+2,1)
  print #AccumRefdPrem    (0,60)  edit 9,999,999,999.99
  print $SumE                     (+2,1)
  print #AccumAmtRecdPDth    (0,60)  edit 9,999,999,999.99
  print $SumF                     (+2,1)
  print #AccumRefdUndedContrib   (0,60)  edit 9,999,999,999.99
  print $SumG                     (+2,1)
  print #AccumRevocPlan (0,60)  edit 9,999,999,999.99
  print $SumH                     (+2,1)
  print #AccumOtherIncDed  (0,60)  edit 9,999,999,999.99
  print $SumI                     (+2,1)
  print #AccumEntlmtDed  (0,60) edit 9,999,999,999.99
  print $SumJ                     (+2,1)
  print #AccumQITWSource (0,60) edit 9,999,999,999.99
  print $SumK                     (+2,1)
  print #AccumIncDth    (0,60) edit 9,999,999,999.99
  print $SumL                     (+2,1)
  print #AccumWithDrwlLLP (0,60) edit 9,999,999,999.99
  print $SumM                     (+2,1)
  print #AccumAmtTaxPd  (0,60) edit 9,999,999,999.99
  print $SumO                     (+2,1)
  print #AccumWithDrwlHBP (0,56) edit 9,999,999,999,999.99


  move 0 to #AccumLifeAnn
  move 0 to #AccumMiscBenefits
  move 0 to #AccumOtherBenefits
  move 0 to #AccumRefdPrem
  move 0 to #AccumAmtRecdPDth
  move 0 to #AccumRefdUndedContrib
  move 0 to #AccumRevocPlan
  move 0 to #AccumOtherIncDed
  move 0 to #AccumEntlmtDed
  move 0 to #AccumQITWSource
  move 0 to #AccumAmtTaxPd
  move 0 to #AccumIncDth
  move 0 to #AccumWithDrwlLLP
  move 0 to #RV2PrintCount
  move 0 to #AccumWithDrwlHBP



end-procedure


begin-procedure Get-Box-Descr

move 0 to #i

   while #i <= #max_R2boxes

        get $PrBox $PrDescr from PrR2_Area(#i)
                   PR2_Box PR2_Descr
        let $MsgBox = RTRIM($PrBox, ' ')
        let $MsgDescr = RTRIM($PrDescr, ' ') || ' (Box ' || RTRIM($PrBox, ' ') || ')'
        let $MsgSum   = RTRIM($PrDescr, ' ')

        evaluate $MsgBox
        when = 'A'
           let $MsgA = $MsgDescr
           let $SumA = $MsgSum
           break
        when = 'B'
           let $MsgB = $MsgDescr
           let $SumB = $MsgSum
           break
        when = 'C'
           let $MsgC = $MsgDescr
           let $SumC = $MsgSum
           break
        when = 'D'
           let $MsgD = $MsgDescr
           let $SumD = $MsgSum
           break
        when = 'E'
           let $MsgE = $MsgDescr
           let $SumE = $MsgSum
           break
        when = 'F'
           let $MsgF = $MsgDescr
           let $SumF = $MsgSum
           break
        when = 'G'
           let $MsgG = $MsgDescr
           let $SumG = $MsgSum
           break
        when = 'H'
           let $MsgH = $MsgDescr
           let $SumH = $MsgSum
           break
        when = 'I'
           let $MsgI = $MsgDescr
           let $SumI = $MsgSum
           break
        when = 'J'
           let $MsgJ = $MsgDescr
           let $SumJ = $MsgSum
           break
        when = 'K'
           let $MsgK = $MsgDescr
           let $SumK = $MsgSum
           break
        when = 'L'
           let $MsgL = $MsgDescr
           let $SumL = $MsgSum
           break
        when = 'M'
           let $MsgM = $MsgDescr
           let $SumM = $MsgSum
           break
        when = 'N'
           let $MsgN = $MsgDescr
           break
        when = 'O'
           let $MsgO = $MsgDescr
           let $SumO = $MsgSum
           break
        when-other
           break

        end-evaluate

        add 1 to #i

   end-while

end-procedure

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
!#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getdptnm.sqc'  !Get-Department-Name
#ifdef PRCSSCHD
#Include 'ctxrctl1.sqc'  ! Select-Canadian-YrEnd-Parameters
#Include 'stdapi.sqc'    !Update Process API
#Include 'txrnctl1.sqc'  !Process Scheduler Run Controls
#endif
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
