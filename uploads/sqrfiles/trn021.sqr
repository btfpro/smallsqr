!*********************************************************************
!  TRN021:  Course Attendances Status depending on Schoolprogram     *
!*********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:43:45                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup

#define JOBCODE_TBL
#define PERSON_NAME
#define TRN_PROGRM_TBL
#define COURSE_TBL
#include 'rellang.sqc'
#define RELLANG_PROG

!***********************************************************************

begin-REPORT
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Layout
  do Init-Report
!--ADDED FOR FIX 302027 STARTS
  do Find-Date-Format
!--ADDED FOR FIX 302027 ENDS
  do Process-Main
  do Stdapi-Term
end-REPORT

!***********************************************************************
! Init Report
!***********************************************************************

begin-procedure Init-Report

  move 'TRN021' to $ReportID
!-----Commented for Fix 590517 Starts  
!  move 'TRAINING PROGRAM' to $ReportTitle
!-----Commented for Fix 590517 Ends  

  do Stdapi-Init
  let $language_cd = $CURR_LANGUAGE_CD

  if $prcs_process_instance = ''
        !No Prompt
  else
    do select-parameters                           !in HRRNCTL1.SQC
  end-if

 do Init_Printer
   do Init_Report_Translation('TRAINING', $language_cd)
   
!-----Commented for Fix 590517 Starts
!   do Append_Report_Translation('TRAINING')
!-----Commented for Fix 590517 Ends

!-----Added for Fix 590517 Starts   
   do Append_Report_Translation('TRN021')
   do Get_Field_Information ('TRN021', 'REPORT_TITLE',   $ReportTitle,   #dummy_width)
!-----Added for Fix 590517 Ends

   print ' '  (1,40)

end-procedure

!--ADDED FOR FIX 302027 STARTS
begin-procedure Find-Date-Format

let $REC_FOUND = 'N'
begin-SELECT
A.USER_OPTION_VALUE
  let $REC_FOUND = 'Y'
FROM PSUSERPRSNLOPTN A

WHERE A.OPRID = $prcs_oprid
  AND A.USEROPTN = 'DFRMT'
end-SELECT

IF $REC_FOUND = 'N'
  let $DT_FMT = 'M'
ELSE
  LET $DT_FMT = &A.USER_OPTION_VALUE
  LET $DT_FMT = RTRIM($DT_FMT,' ')
END-If
 
end-procedure !Find-Date-Format
!--ADDED FOR FIX 302027 ENDS

!***********************************************************************
! Get Values
!***********************************************************************

begin-procedure Get-Values

let $language_cd = $PRCS_LANGUAGE_CD

!   do GET-TRN021-PARM
        let $Emplid = &RUN_CNTL_HR.EMPLID

end-procedure Get-Values

!***********************************************************************
! Layout
!***********************************************************************

begin-procedure Init-Layout

#define col0  1
#define col1a 60
#define col1  70
#define col2  78
#define col3  90
#define col4  102

end-procedure

!***********************************************************************
! Heading
!***********************************************************************

begin-heading  6

!--COMMENTED FOR FIX 302027 STARTS
!#include 'stdhdgtr.sqc'
!--COMMENTED FOR FIX 302027 ENDS
!--ADDED FOR FIX 302027 STARTS
  do Append_Report_Translation ('STDHDGTR')
  if $Program_Read = 'Y'
    do Get_Field_Information ('STDHDGTR', 'STDHDG_CO_NM',   $stdhdg_co_nm,   #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_REP_ID',  $stdhdg_rep_id,  #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_PAGE_NO', $stdhdg_page_no, #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_RUN_DT',  $stdhdg_run_dt,  #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_RUN_TM',  $stdhdg_run_tm,  #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_END_REP', $stdhdg_end_rep, #dummy_width)
  end-if

  print '            '    (1,1)
  print $stdhdg_co_nm     ()          center
  print $stdhdg_rep_id    (+1,1)
  print $ReportID         (0,+2)
!***********************************************************************
! T-MBOWDEN-5: not to uppercase due to languages other than English    *
!***********************************************************************
! uppercase $ReportTitle                                               *
  print $ReportTitle      ()          center
  let #RptCol = {ColR} - 2
  print $stdhdg_page_no   (0,#RptCol)
  print #page-count       (0,+2)      edit 88888888
  print $stdhdg_run_dt    (+1,#RptCol)
  let $RepDate = StrToDate($ReportDate,{PTRPTDATE})
    evaluate $DT_FMT
     when = 'M'
          do Format-DateTime($RepDate,$Rep_dt,{DEFMDY},'','')
          break
     when = 'D'
          do Format-DateTime($RepDate,$Rep_dt,{DEFDMY},'','')
          break
     when-Other
          do Format-DateTime($RepDate,$Rep_dt,{DEFYMD},'','')
          break
     end-evaluate
  print $Rep_dt           (0,+1) 
  print $stdhdg_run_tm    (+1,#RptCol)
  print $ReportTime       (0,+1)
!--ADDED FOR FIX 302027 ENDS

print $Emplid           (0,{col0})
print '/'               (0,0)
print #Empl_Rcd_Nbr     (0,0) edit 9
print $Name             (0,+1)

print $JobCode          (+1,{Col0})
print $JobCodeDescr     (0,+1)

print $LBL_COURSE       (+2,{col0})
print $LBL_REQUIRED     (0,{col1a})
print $LBL_SESS_NUM     (0,{col1})
print $LBL_BEGIN_DT     (0,{col2})
print $LBL_END_DT       (0,{col3})
print $LBL_ATTENDANCE   (0,{col4})

end-heading

!***********************************************************************
! Main
!***********************************************************************

begin-procedure Process-Main

   do Get-Translat-Info   ! Global

let $First-Select = 'Y'

begin-SELECT

PD.EMPLID
!****************BEGIN SQR NAME DISPLAY CHANGE***************************************
  !PD.NAME
PD.NAME_DISPLAY
!****************END SQR NAME DISPLAY CHANGE*****************************************
JOB.JOBCODE
JOB.EMPL_RCD
TPC.TRN_PROGRAM        () on-break print=never procedure = print-trn-program
TPC.COURSE_SEQUENCE
TPC.COURSE
TPC.REQUIRED_CRSE
!****************BEGIN SQR NAME DISPLAY CHANGE***************************************
    !let $PD.NAME = &PD.NAME
     let $PD.NAME = &PD.NAME_DISPLAY

!****************END SQR NAME DISPLAY CHANGE*****************************************
   
    if $First-Select = 'Y'
       do print-trn-program
       let $First-Select = 'N'
    end-if

    let $Name = $PD.NAME
    let #Empl_Rcd_Nbr = &JOB.EMPL_RCD
    let $JobCode = &JOB.JOBCODE
    let $Course = &TPC.COURSE

    do Get-JobCode-Data

    do Get-Course-Data

    print $Course                       (+1,{col0})
    print $CourseDescr                  (0,+1)
    if &TPC.REQUIRED_CRSE = 'Y'
      print $LBL_YES                   (0,{col1a})
    else
      print $LBL_NO                    (0,{col1a})
    end-if

    do Get-Training-Data

FROM PS_PERSON_NAME PD
    ,PS_JOB JOB
    ,PS_JOBCD_TRN_PROG JPD
    ,PS_TRN_PROGRM_CRSE TPC

WHERE PD.EMPLID = $Emplid
AND   JOB.EMPLID = PD.EMPLID
AND   JOB.EFFDT = (
                   SELECT MAX(EFFDT)
                   FROM PS_JOB JOB1
                   WHERE JOB1.EMPLID = JOB.EMPLID
                   AND   JOB1.EMPL_RCD = JOB.EMPL_RCD
                   AND   JOB1.EFFDT <= $AsOfToday
                  )
AND   JOB.EFFSEQ = (
                    SELECT MAX(EFFSEQ)
                    FROM PS_JOB JOB2
                    WHERE JOB2.EMPLID = JOB.EMPLID
                    AND   JOB2.EMPL_RCD = JOB.EMPL_RCD
                    AND   JOB2.EFFDT = JOB.EFFDT
                   )
AND   JPD.EFFDT = (
                   SELECT MAX(EFFDT)
                   FROM PS_JOBCD_TRN_PROG
                   WHERE SETID = JPD.SETID
                   AND   JOBCODE = JPD.JOBCODE
                             AND   TRN_PROGRAM = JPD.TRN_PROGRAM
                   AND   EFFDT <= $AsOfToday
                  )
AND   JPD.JOBCODE = JOB.JOBCODE
AND   TPC.TRN_PROGRAM = JPD.TRN_PROGRAM

ORDER BY JOB.EMPL_RCD,TPC.TRN_PROGRAM,TPC.COURSE_SEQUENCE

end-SELECT

end-procedure Process-Main

!***********************************************************************
! Retrieve training data
!***********************************************************************

begin-procedure Get-Training-Data
begin-SELECT

TRN.SESSION_NBR         (+1,{COL1})
TRN.COURSE_START_DT
TRN.COURSE_END_DT
TRN.ATTENDANCE

!--COMMENTED FOR FIX 302027 STARTS
!   do Format-DateTime(&TRN.COURSE_START_DT,$Start_Dt,{DEFDATE},'','')
!   do Format-DateTime(&TRN.COURSE_END_DT,$End_Dt,{DEFDATE},'','')
!--COMMENTED FOR FIX 302027 ENDS
!--ADDED FOR FIX 302027 ENDS
  evaluate $DT_FMT
     when = 'M'
          do Format-DateTime(&TRN.COURSE_START_DT,$Start_Dt,{DEFMDY},'','')
          do Format-DateTime(&TRN.COURSE_END_DT,$End_Dt,{DEFMDY},'','')
          break
     when = 'D'
          do Format-DateTime(&TRN.COURSE_START_DT,$Start_Dt,{DEFDMY},'','')
          do Format-DateTime(&TRN.COURSE_END_DT,$End_Dt,{DEFDMY},'','')
          break
     when-Other
          do Format-DateTime(&TRN.COURSE_START_DT,$Start_Dt,{DEFYMD},'','')
          do Format-DateTime(&TRN.COURSE_END_DT,$End_Dt,{DEFYMD},'','')
     end-evaluate
!--ADDED FOR FIX 302027 ENDS
   let $FieldName = 'ATTENDANCE'
   let $FieldValue = &TRN.ATTENDANCE
   do Read-Translate-Table
   print $Start_Dt      (0,{col2})
   print $End_Dt        (0,{Col3})
   print $XlatShortName  (0,{col4})

FROM PS_TRAINING TRN
WHERE TRN.EMPLID = $Emplid
AND   TRN.COURSE = $Course
AND   TRN.ATTENDANCE NOT IN ('N','I')

ORDER BY TRN.COURSE_START_DT

end-SELECT
end-procedure Get-Training-Data

!***********************************************************************
! Retreive JobCode Data
!***********************************************************************

begin-procedure Get-Jobcode-Data
begin-SELECT

JC.SETID
JC.JOBCODE
JC.EFFDT
JC.DESCR

   let $JOBCODE_TBL-DESCR = &JC.DESCR
   do Get_Related_JOBCODE_TBL(&JC.EFFDT, &JC.JOBCODE, &JC.SETID)
   let $JobCodeDescr = $JOBCODE_TBL-DESCR

FROM PS_JOBCODE_TBL JC
WHERE JC.JOBCODE = $Jobcode
AND   JC.EFFDT = (
                  SELECT MAX(EFFDT)
                  FROM PS_JOBCODE_TBL JC2
                  WHERE JC2.JOBCODE = JC.JOBCODE
                  AND   JC2.EFFDT <= $AsOfToday
                  AND   JC2.EFF_STATUS = 'A'
                 )
end-SELECT
end-procedure Get-Jobcode-Data

!***********************************************************************
! Retreive course data
!***********************************************************************

begin-procedure Get-Course-Data
begin-SELECT

CT.COURSE
CT.DESCR

   let $COURSE_TBL-DESCR = &CT.DESCR
   do Get_Related_COURSE_TBL(&CT.COURSE)
   let $CourseDescr = $COURSE_TBL-DESCR

FROM PS_COURSE_TBL CT
WHERE CT.COURSE = $Course

end-SELECT
end-procedure Get-Course-Data

!***********************************************************************
! Main
!***********************************************************************

begin-procedure Print-Trn-Program
begin-SELECT

TP.TRN_PROGRAM
TP.DESCR

   let $TRN_PROGRM_TBL-DESCR = &TP.DESCR
   do Get_Related_TRN_PROGRM_TBL(&TP.TRN_PROGRAM)
   let $TP.DESCR = $TRN_PROGRM_TBL-DESCR

   if $First-Select = 'Y'
      print 'Training Program: '  (+2,{col0})
   else
      print 'Training Program: '  (+4,{col0})
   end-if
   print &TP.TRN_PROGRAM        (0,0)
   print $TP.DESCR              (0,+1)
   print ' '                    (+1,0)

FROM PS_TRN_PROGRM_TBL TP

WHERE TP.TRN_PROGRAM = &TPC.TRN_PROGRAM

end-Select
end-procedure Print-Trn-Program

!***********************************************************************
!  Gets the strings printed in this report (Globalization)
!***********************************************************************

begin-procedure Get-Translat-Info

!-----Added for Fix 590517 Starts
   do Append_Report_Translation('TRAINING')
!-----Added for Fix 590517 Ends

   do Get_Field_Information('TRAINING', 'LBL_COURSE'     ,$LBL_COURSE     ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_SESS_NUM'   ,$LBL_SESS_NUM   ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_REQUIRED'   ,$LBL_REQUIRED   ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_BEGIN_DT'   ,$LBL_BEGIN_DT   ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_END_DT'     ,$LBL_END_DT     ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_ATTENDANCE' ,$LBL_ATTENDANCE ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_YES'        ,$LBL_YES        ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_NO'         ,$LBL_NO         ,#DW)

end-procedure

!***********************************************************************

#include 'hrrnctl1.sqc'  !Get run control parameter values

#include 'stdapi.sqc'    !Routines to update run status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'
#Include 'datemath.sqc'
