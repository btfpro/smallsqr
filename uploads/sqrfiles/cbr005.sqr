!****************************************
! CBR005: COBRA Event Report
!****************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                $Date:  2006/04/11:17:58:25                           !
!             $Release:  HR9                                           !
!            $Revision:  101                                           !
!                                                                      *
!***********************************************************************
!
! Function: Generate the COBRA Event Report
!
! Input:   PS_COBRA_EVENT         -  Event level
!          PS_PERSON_NAME         -  Get Participants Name 
!          PS_PERSON_ADDR         -  Get Participants Address
!          PS_PERSON_ADDROTH      -  Get Participants Address
!          PS_DEPENDENT_BENEF     -  Get Dependent/Benef Name & Address
!
! Output: The COBRA Event Report
!
!***********************************************************************

#Include 'setenv.sqc'
#Include 'cbrdefs.sqc'        !COBRA variables
#Include 'usarpt.sqc'         !Variables specific to USA

Begin-Setup
  #Include 'ptpsp125.sqc'
End-Setup

#Define PQB_TOTAL    99,999   !Participant edit mask

!******************************
Begin-Procedure Init-Variables
!******************************

  let #col1  = 1                 !Emplid
  let #col2  = 14                !Empl Name
  let #col3  = 46                !Empl Rcd#
  let #col4  = 52                !Event ID
  let #col5  = 59                !Event Class
  let #col6  = 66                !Event Date
  let #col7  = 78                !Event Status
  let #col8  = 87                !Qualified Status
  let #col9  = 98                !BAS Data Chg
  let #col10 = 106               !Event Conflict
  let #break_total = 0           !Break total
  let #total_PQB = 0             !Grand total

End-Procedure

!******************************
Begin-Program
!******************************

  do Init-Report

  display 'Report Began at: ' noLine
  do Display-Time

  do Main-Report

  display 'Report Ended at: ' noline
  do display-time

  do StdAPI-Term

End-Program

!******************************
Begin-Procedure Init-Report
!******************************

  let $ReportID = 'CBR005'
  let $ReportTitle = 'COBRA Event Report'

  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ''

  do Init-Datetime
  do Init-Number
  do Get-Current-DateTime
  do Init-Variables
  do StdAPI-Init

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-Values
  end-if

End-Procedure

!******************************
Begin-Procedure Ask-Values
!******************************

  do Ask-From-Thru-Date
  do Ask-Sort-Parm1

End-Procedure

!******************************
Begin-Procedure Get-Values
!******************************

  do Select-Parameters
  do Get-From-Thru-Date
  do Get-Sort-Parm1

End-Procedure

!******************************
Begin-Procedure Main-Report
!******************************

  Evaluate $SortParm1
    when = '1'
       let $SortBy = 'S1.EMPLID'
    when = '2'
       let $SortBy = 'S1.COBRA_EVENT_DT ASC, S1.EMPLID ASC'
    when = '3'
       let $SortBy = 'S1.COBRA_EVENT_CLASS ASC, S1.COBRA_EVENT_DT ASC, S1.EMPLID ASC'
    when = '4'
       let $SortBy = 'S1.CBR_QUALIFY_STATUS ASC, S1.EMPLID ASC'
    when = '5'
       let $SortBy = 'S2.NAME_PSFORMAT ASC'
    when = '6'
       let $SortBy = 'S1.COBRA_EVENT_DT ASC, S2.NAME_PSFORMAT ASC'
    when = '7'
       let $SortBy = 'S1.COBRA_EVENT_CLASS ASC, S1.COBRA_EVENT_DT, S2.NAME_PSFORMAT'
    when = '8'
       let $SortBy = 'S1.CBR_QUALIFY_STATUS ASC, S2.NAME_PSFORMAT ASC'
  End-Evaluate

  do Print-Report

  print 'The total number of COBRA participants is ' (+3,1)
  print #total_PQB                                   (+0,+1) edit {PQB_TOTAL}

End-Procedure

Begin-Procedure Print-Report

Begin-Select
S1.EMPLID
S2.NAME
S1.BENEFIT_RCD_NBR
S1.COBRA_EVENT_ID
S1.COBRA_EVENT_CLASS              () on-break print=never after=Print-Class-Count save=$prev_class
S1.COBRA_EVENT_DT
S1.CBR_PROCESS_STATUS
S1.CBR_QUALIFY_STATUS             () on-break print=never after=Print-Status-Count save=$prev_stat
S1.BAS_DATA_CHG
S1.CBR_EVENT_CONFLICT

  let #break_total = #break_total + 1
  let #total_PQB = #total_PQB + 1
  do Print-Event-Activity

S2.NAME_PSFORMAT

FROM PS_COBRA_EVENT S1,
     PS_PERSON_NAME S2
WHERE S1.COBRA_EVENT_DT BETWEEN $FromDate AND $ThruDate
  AND S2.EMPLID = S1.EMPLID
ORDER BY [$SortBy]
End-Select

End-Procedure

Begin-Procedure Print-Class-Count

  if $SortParm1 = '3' or $SortParm1 = '7'
     let $Tmp_Text = 'Number of COBRA participants for event class ' || $prev_class || ' is '
     print $Tmp_Text                            (+2,10)
     print #break_total                         (+0,+1) edit {PQB_TOTAL}
     let #break_total = 0
  end-if

End-Procedure

Begin-Procedure Print-Status-Count

  if $SortParm1 = '4' or $SortParm1 = '8'
     move 'CBR_QUALIFY_STATUS' to $FieldName
     move $prev_stat to $FieldValue
     do Read-Translate-Table
     let $qualify = RTRIM($XlatShortName, ' ')
     let $Tmp_Text = 'Number of COBRA participants for status ' || $qualify || ' is '
     print $Tmp_Text                            (+2,10)
     print #break_total                         (+0,+1) edit {PQB_TOTAL}
     let #break_total = 0
  end-if

End-Procedure

!******************************
Begin-Heading 8
!******************************

#Include 'stdhdg08.sqc'

  print 'COBRA'                          (+3,#col4)
  print 'COBRA'                          (+0,#col5)
  print 'COBRA'                          (+0,#col6)
  print 'COBRA'                          (+0,#col7)
  print 'COBRA'                          (+0,#col8)
  print 'BAS'                            (+0,#col9)
  print 'COBRA'                          (+0,#col10)

  print 'Ben'                            (+1,#col3)
  print 'Event'                          (+0,#col4)
  print 'Event'                          (+0,#col5)
  print 'Event'                          (+0,#col6)
  print 'Process'                        (+0,#col7)
  print 'Qualified'                      (+0,#col8)
  print 'Data'                           (+0,#col9)
  print 'Event'                          (+0,#col10)

  print 'Employee Id'                    (+1,#col1)
  print 'Name'                           (+0,#col2)
  print 'Rcd#'                           (+0,#col3)
  print 'ID'                             (+0,#col4)
  print 'Class'                          (+0,#col5)
  print 'Date'                           (+0,#col6)
  print 'Status'                         (+0,#col7)
  print 'Status'                         (+0,#col8)
  print 'Change'                         (+0,#col9)
  print 'Conflict'                       (+0,#col10)

  print '-'                              (+1,#col1,120) fill

End-Heading

!************************************
Begin-Procedure Print-Event-Activity
!************************************

  print &S1.EMPLID                         (+2,#col1)
  print &S2.NAME                           (+0,#col2)
  print &S1.BENEFIT_RCD_NBR                   (+0,#col3)
  print &S1.COBRA_EVENT_ID                 (+0,#col4)
  print &S1.COBRA_EVENT_CLASS              (+0,#col5)
  do Format-Datetime(&S1.COBRA_EVENT_DT, $cbrevtdt, {DEFMDY}, '', '')
  print $cbrevtdt                          (+0,#col6)

  move 'CBR_PROCESS_STATUS' to $FieldName
  move &S1.CBR_PROCESS_STATUS to $FieldValue
  do Read-Translate-Table
  let $status = RTRIM($XlatShortName, ' ')
  print $status                            (+0,#col7)

  move 'CBR_QUALIFY_STATUS' to $FieldName
  move &S1.CBR_QUALIFY_STATUS to $FieldValue
  do Read-Translate-Table
  let $qualify = RTRIM($XlatShortName, ' ')
  print $qualify                           (+0,#col8)

  print &S1.BAS_DATA_CHG                   (+0,#col9)
  print &S1.CBR_EVENT_CONFLICT             (+0,#col10)

End-Procedure

!*******************************
Begin-Procedure Display-Time
!*******************************

  do Get-Current-Datetime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsofNow
  display ''

End-Procedure

!****************************************************************
#Include 'readxlat.sqc' !Get translate Values
#Include 'askftd.sqc'   !Ask From-Thru Date
#Include 'number.sqc'   !Number formatting routines
#Include 'datetime.sqc' !Date formatting routines
#Include 'datemath.sqc' !Date Arithmetic
#Include 'cbraddr.sqc'  !COBRA Address
#Include 'curdttim.sqc' !Get-Current-DateTime procedure
#Include 'rotname1.sqc' !Rotates name field
#Include 'stdapi.sqc'   !Update Process API
#Include 'cbrncntl.sqc' !Get application run control parameters
#Include 'cbgetval.sqc' !Get BEN values
#Include 'cbaskval.sqc' !Ask CBR values
!**************************** End of Report *********************
