!***********************************************************************
!  VC009:  Variable Compensation - Plan History Report                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:54:39                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
!
!***********************************************************************
!                                                                      *
! HP99999       Release 8                                              *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
Begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

#define VC_PLAN_TBL
#define VC_VALUE_TBL

#Include 'rellang.sqc'

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report

  if $start-error <> 'Y'
    do Report
  end-if
  do Stdapi-Term
  do Reset
end-report

!********************************************
begin-procedure Init-Report
  move 'VCREPS' to $ReportID
  move 'Plan History Report' to $ReportTitle
  display $ReportTitle
  display ' '
  do Stdapi-init
  do Get-Report-Language   ! Procedure that decides the report language
                           ! and then calls 'Report-Translation' procedure
                           ! that reads the language dep. text.

  display $reportid
  display 'lang - '
  display $language_cd
  let $Curr_langauge_cd = $language_cd

  if $prcs_process_instance = ''
     display 'This process cannot be run outside the Process scheduler'
     let $start_error = 'Y'
  else
     let $start_error = 'N'
     do Select-Parameters
  end-if
end-procedure

!*********************************************************************
begin-procedure select-parameters

BEGIN-SELECT
A.OPRID
A.RUN_CNTL_ID
A.VC_PLAN_ID
A.VC_PAYOUT_PRD_ID
A.PRD_END_DT
A.TREE_NAME
A.VC_TREE_DT
A.VC_REPORT_TYPE
A.FROMDATE
A.THRUDATE

  move &A.PRD_END_DT to $prd_end_dt
  move &A.FROMDATE to $fromdate
  move &A.THRUDATE to $thrudate

  Show 'Period End Date: ' &A.PRD_END_DT
  Show 'From Date: '       &A.FROMDATE
  Show 'Thru Date: '       &A.THRUDATE

  do Format-DateTime($prd_end_dt, $prd_dt, {DEFYMD}, '', '')
  do Format-DateTime($fromdate, $fromdate, {DEFYMD}, '', '')
  do Format-DateTime($thrudate, $thrudate, {DEFYMD}, '', '')

  do getvaluation

from PS_RC_VC_REPORTS A
where A.OPRID       = $prcs_oprid and
      A.RUN_CNTL_ID = $prcs_run_cntl_id
end-select

end-procedure

!**************************************************************************
!    Report procedure
!**************************************************************************
begin-procedure Report

Begin-Select
VC_PLAN_ID,
DESCR50,
VC_PLAN_START_DT,
VC_PLAN_END_DT,
CURRENCY_CD,
VC_PLAN_TYPE,
VC_GOAL_TYPE
VC_PLAN_MEM_CRIT

! Get Related Language info for PS_VC_PLAN_TBL
  move &DESCR50 to $VC_PLAN_TBL-DESCR50
  do Get_Related_VC_PLAN_TBL(&VC_PLAN_ID)
  move  $VC_PLAN_TBL-DESCR50 to $DESCR50
  
  if rtrim(&VC_PLAN_MEM_CRIT,' ') = 'E' or rtrim(&VC_PLAN_MEM_CRIT,' ') = 'A'
     let $grp_flag = 'N'
     let $sec_where = '      VA.GB_GROUP_ID =''NOGROUP'' AND '
  else
     let $grp_flag = 'Y'
     let $sec_where = '      VA.GB_GROUP_ID = (SELECT TG.GB_GROUP_ID FROM PS_VC_TOP_GROUP_VW TG
                        WHERE TG.TREE_NAME = VE.TREE_NAME AND
                        TG.TREE_EFFDT = (SELECT MAX(TG2.TREE_EFFDT) FROM PS_VC_TOP_GROUP_VW TG2
                                         WHERE TG2.TREE_NAME = TG.TREE_NAME AND
                                         TG2.TREE_EFFDT <= PY.PRD_END_DT)
                        ) AND'
  end-if

  let $ASOFDATE = &A.THRUDATE
  let $fieldname = 'VC_PLAN_TYPE'
  let $fieldvalue = &VC_PLAN_TYPE


  do Read-Translate-Table
  let $plan_type = $xlatlongname

  let $fieldname = 'VC_GOAL_TYPE'
  let $fieldvalue = &VC_GOAL_TYPE
  do Read-Translate-Table
  let $goal_type = $xlatlongname

  Show 'Plan ID:   ' &A.VC_PLAN_ID
  Show 'Plan Type: ' &VC_PLAN_TYPE ' ' $plan_type 
  Show 'Goal Type: ' &VC_GOAL_TYPE ' ' $goal_type

  do getdetails
  if #cnt_row = 0
     print 'No detail data found for this report' (+5,10)
     display 'No detail data found for this report'
  end-if

From    PS_VC_PLAN_TBL
Where   VC_PLAN_ID = &A.VC_PLAN_ID

End-Select

End-Procedure

!********************************************************
Begin-procedure getname

Begin-select
NAME
 let $prt_name = &NAME
from PS_PERSON_NAME
where EMPLID = &VE.APPROVER_ID
end-select

end-procedure

!********************************************************
Begin-procedure getdetails
  let #cnt_row = 0
Begin-select
PY.VC_PAYOUT_PRD_ID,
PY.PRD_BGN_DT,
PY.PRD_END_DT,
sum(VA.VC_AWARD_VALUE) &award_sum,
VE.VC_VALUATION_ID,
VE.VC_PRORATION_IND,
VE.APPROVER_ID
   let #cnt_row = #cnt_row + 1
  let $prt_name = ''
  if rtrim(&VE.APPROVER_ID,' ') <> ''
        do getname
  end-if
  Do PrintRow
FROM PS_VC_PAYPRD_TBL PY,
     PS_VC_PLAN_EFFDT VE,
     PS_VC_AWARD VA
WHERE
        !get all payout periods within date range

      PY.VC_PLAN_ID = &A.VC_PLAN_ID AND
      PY.PRD_BGN_DT >= &A.fromdate AND
      PY.PRD_END_DT <= &A.thrudate AND

        !get max effdt row from plan_effdt for each payout period

      VE.VC_PLAN_ID = PY.VC_PLAN_ID AND
      VE.EFFDT = (select max(VE2.EFFDT) from PS_VC_PLAN_EFFDT VE2
                        where VE2.VC_PLAN_ID = VE.VC_PLAN_ID AND
                        VE2.EFFDT <= PY.PRD_END_DT) AND

        ! to get sum award for each payout prd

      VA.VC_PLAN_ID = PY.VC_PLAN_ID AND
      VA.VC_PAYOUT_PRD_ID = PY.VC_PAYOUT_PRD_ID

group by VA.VC_PLAN_ID, PY.VC_PAYOUT_PRD_ID, PY.PRD_BGN_DT, PY.PRD_END_DT,
        VE.VC_VALUATION_ID,VE.VC_PRORATION_IND,VE.APPROVER_ID
end-select
 
end-procedure

!********************************************************
Begin-procedure getvaluation
 
begin-select
VV.VC_VALUATION_ID
VV.DESCRSHORT
VV.VC_VALUE_AMOUNT
VV.CURRENCY_CD
VV.EFFDT
from    PS_VC_VALUE_TBL VV, PS_VC_PLAN_EFFDT  VE
where   VV.VC_VALUATION_ID = VE.VC_VALUATION_ID AND
        VE.VC_PLAN_ID = &A.VC_PLAN_ID AND
        VE.EFFDT = (SELECT MAX(EFFDT) FROM PS_VC_PLAN_EFFDT VE2
                    Where VE2.VC_PLAN_ID = VE.VC_PLAN_ID AND
                          VE2.EFFDT <= &A.prd_end_dt) AND
        VE.EFF_STATUS = 'A'
end-select

! Get Related Language info for PS_VC_VALUE_TBL
  move &VV.DESCRSHORT to $VC_VALUE_TBL-DESCR50
  do Get_Related_VC_VALUE_TBL(&VV.EFFDT,&VV.VC_VALUATION_ID)
  move  $VC_VALUE_TBL-DESCRSHORT to $VV_DESCRSHORT

let $valuation_str = ''
let $ValueAmt =  ltrim(edit(&VV.VC_VALUE_AMOUNT, '999999999999.999999'),' ')

if &VV.VC_VALUATION_ID <> ''
  let $valuation_str = &VV.VC_VALUATION_ID || $VV_DESCRSHORT  || ' (' || $ValueAmt || ' ' || &VV.CURRENCY_CD  || ')'
end-if

end-procedure

!********************************************************
Begin-procedure PrintRow
  Print &PY.VC_PAYOUT_PRD_ID (,1)
  Print &PY.PRD_BGN_DT (,16,10) edit yyyy/mm/dd
  Print &PY.PRD_END_DT (,27,10) edit yyyy/mm/dd
  Print &AWARD_SUM (,34) edit 999999999999.999999
!  Print &VE.VC_VALUATION_ID (,54)
  Print &VE.VC_PRORATION_IND (,54)
  Print &VE.APPROVER_ID (,60)
  Print $prt_name (,73,40)

 position (+1,)
end-procedure

!********************************************************
Begin-Heading 18
 Page-Number (1,100)
 Print $reportname (2,45)
 Print $current-date (2,90) edit 'MM/DD/YYYY'

 Print $plan_id (5,1)
 let $plan_info =  &VC_PLAN_ID || ' ' || $DESCR50
 Print $plan_info (5,14)

 Print $fromdatelbl (6,1)
 Print $fromdate (6,14)

 Print $thrudatelbl (7,1)
 Print $thrudate (7,14)

 Print $curr_cd (8,1)
 Print &CURRENCY_CD (8,14)

 if $valuation_str <> ''
   Print $valuation (9,1)
   Print $valuation_str (9,14)
 end-if

 Print $start_dt (12,48)
 Print &VC_PLAN_START_DT (12,60) edit yyyy/mm/dd

 Print $end_dt (13,48)
 Print &VC_PLAN_END_DT (13,60) edit yyyy/mm/dd

 Print $plan_type (12,1)
 Print $vc_plan_type (12,14)

 Print $Goal_Type (13,1)
 Print $vc_goal_type (13,14)

 Print $payout_prd_id (15,1)
 Print $start_dt (15,16)
 Print $end_dt (15,27)
 let #pos = 34+(19 - (length($award_value)))
 Print $award_value (15,#pos)
 Print $prorate (15,54) wrap 5 2
 Print $approver (15,60)
 Print $name (15,73)

End-Heading

!**************************************************************************
begin-procedure report-translation
!**************************************************************************
do Init_Report_Translation($ReportID,$Language_Cd)

do Get_Field_Information ('VCREPS','ACTUAL_AWARD',$actual_award,#DW)
do Get_Field_Information ('VCREPS','ACTUAL_FUNDING',$actual_funding,#DW)
do Get_Field_Information ('VCREPS','ANNUAL_RATE',$annual_rate,#DW)
do Get_Field_Information ('VCREPS','ATTAINED',$attained,#DW)
do Get_Field_Information ('VCREPS','CARRYOVER_BALLANCE',$carryover_balance,#DW)
do Get_Field_Information ('VCREPS','EMPLID',$emplid,#dw)
do Get_Field_Information ('VCREPS','EMPL_RCD',$empl_rcd,#DW)
do Get_Field_Information ('VCREPS','GROUP_GOALS',$group_goals,#DW)
do Get_Field_Information ('VCREPS','GUARANTEE',$guarantee,#DW)
do Get_Field_Information ('VCREPS','HIRE_DATE',$hire_date,#DW)
do Get_Field_Information ('VCREPS','JOB_CODE',$job_code,#DW)
do Get_Field_Information ('VCREPS','MAX_AWARD',$max_award,#DW)
do Get_Field_Information ('VCREPS','MIN/MAX',$minmax,#DW)
do Get_Field_Information ('VCREPS','MIN_AWARD',$min_award,#DW)
do Get_Field_Information ('VCREPS','NAME',$name,#DW)
do Get_Field_Information ('VCREPS','OVERALL_PERF_FACT',$overall_perf_factor,#DW)
do Get_Field_Information ('VCREPS','VC_PAYOUT_PRD_ID',$payout_prd_id,#DW)
do Get_Field_Information ('VCREPS','PERFORMACE_FACTOR',$parf_factor,#DW)
do Get_Field_Information ('VCREPS','PLAN ID',$plan_id,#DW)
do Get_Field_Information ('VCREPS','PROJECTED_PAYOUT',$projected_payout,#DW)
do Get_Field_Information ('VCREPS','VC_TARGET_AWARD',$target_award,#DW)
do Get_Field_Information ('VCREPS','VC_TARGET_VALUE',$target_value,#DW)
do Get_Field_Information ('VCREPS','TOTAL_PLAN',$total_plan,#DW)
do Get_Field_Information ('VCREPS','TOTAL_GROUP',$total_group,#DW)
do Get_Field_Information ('VCREPS','UNALLOCATED_BAL',$unallocated_balance,#DW)
do Get_Field_Information ('VCREPS','VALUATION',$valuation,#DW)
do Get_Field_Information ('VCREPS','VARIANCE',$variance,#DW)
do Get_Field_Information ('VCREPS','WEIGHTING',$weighting,#DW)
do Get_Field_Information ('VCREPS','DETAIL',$detail,#DW)
do Get_Field_Information ('VCREPS','SUMMARY',$summary,#DW)
do Get_Field_Information ('VCREPS','CURR_CD',$curr_cd,#DW)
do Get_Field_Information ('VCREPS','VC_AWARD_VALUE',$award_value,#DW)
do Get_Field_Information ('VCREPS','START_DATE',$start_dt,#DW)
do Get_Field_Information ('VCREPS','END_DATE',$end_dt,#DW)
do Get_Field_Information ('VCREPS','P_FREQ',$p_freq,#DW)
do Get_Field_Information ('VCREPS','ERN_CD',$ern_cd,#DW)
do Get_Field_Information ('VCREPS','PLAN_TYPE',$p_type,#DW)
do Get_Field_Information ('VCREPS','PLAN_MEM',$p_mem,#DW)
do Get_Field_Information ('VCREPS','VALUATION',$valuation,#DW)
do Get_Field_Information ('VCREPS','VC_GOAL_TYPE',$goal_type,#DW)
do Get_Field_Information ('VCREPS','CARRYOVER',$carryover,#DW)
do Get_Field_Information ('VCREPS','ORG',$org,#DW)
do Get_Field_Information ('VCREPS','IND',$ind,#DW)
do Get_Field_Information ('VCREPS','GROUP',$group,#DW)
do Get_Field_Information ('VCREPS','PRORATE',$prorate,#DW)
do Get_Field_Information ('VCREPS','APPROVER',$approver,#DW)
do Get_Field_Information ('VCREPS','AWARD_DATE',$award_datelbl,#DW)
do Get_Field_Information ('VCREPS','STATUS',$status,#DW)
do Get_Field_Information ('VCREPS','FROM_DATE',$fromdatelbl,#DW)
do Get_Field_Information ('VCREPS','THRU_DATE',$thrudatelbl,#DW)
do Get_Field_Information ('VCREPS','VC009',$reportname,#DW)

end-procedure

!*****************************************************************
#include 'stdapi.sqc'    !Routine to update run Status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'
#include 'sqrtrans.sqc'
#Include 'getrplng.sqc'  !Get the report language
#include 'readxlat.sqc'  !get xlat values
