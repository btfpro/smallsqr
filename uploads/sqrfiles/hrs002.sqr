!********************************************************
!  HRS002.SQR - Job Group Movement Analysis             !
!********************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------*
!                                                                      *
!          $Date:  2006/07/19:13:36:23                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************

! Uncomment the following line the have debug values put into the sqr.log
! #DEFINE DEBUGHRS002

#include 'setenv.sqc'   !Set environment
#include 'hrhl01.sqc'   !Landscape Confidential Header

!----------------------------------------------------------------------
!---------Program------------------------------------------------------
!----------------------------------------------------------------------
!----------------------------------------------------------------------
Begin-Program

#IFDEF DEBUGHRS002
  DISPLAY 'FLOW: Program '
#ENDIF

!*******************************************************************************
!Begin Resolution 574458
! A common string DB2ALL_INFORMIX is defined so that two consecutive statements
! #IFNDEF DB2ALL #IFNDEF INFORMIX can be replaced by #IFNDEF DB2ALL_INFORMIX 
#IFDEF DB2ALL
  #DEFINE DB2ALL_INFORMIX
#ENDIF

#IFDEF INFORMIX
  #DEFINE DB2ALL_INFORMIX
#ENDIF

!End Resolution 574458
!***************************************

  LET $Global_Prepped = 'FALSE'

  DO Init-DateTime
  DO Init-Number
  DO Get-Current-DateTime
  DO Init-Report
  DO Create-Arrays
  DO Use-Standard-Layout

  ! Set the confidential flag
  !------------------------------------------------------------
  LET $Confidential = 'YES'

  LET #i = 0

  ! Date Dynamic SQL
  !-----------------------------------------------------------

  IF $date-indicator = '2'
     !DO Format-DateTime($FromDate,$FromFormatted,{DEFCMP},'','')
     !DO Format-DateTime($ThruDate,$ThruFormatted,{DEFCMP},'','')
     LET $B-WHERE-CLAUSE = ' AND B.HRS_STATUS_DT BETWEEN ' || $QUOTE || $FromDate || $QUOTE || ' AND ' || $QUOTE || $ThruDate || $QUOTE
     LET $C-WHERE-CLAUSE = ' AND C1.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     LET $J-WHERE-CLAUSE = ' AND J.EFFDT BETWEEN ' || $QUOTE || $FromDate || $QUOTE || ' AND ' || $QUOTE || $ThruDate || $QUOTE
     !*************** Begin Resolution - 579137  ************************************
     !LET $H-WHERE-CLAUSE = ' AND J1.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     LET $H-WHERE-CLAUSE = ' AND J1.EFFDT BETWEEN ' || $QUOTE || $FromDate || $QUOTE || ' AND ' || $QUOTE || $ThruDate || $QUOTE
     !*************** End Resolution - 579137 ***************************************
     LET $ADE-WHERE-CLAUSE = ' AND ADE1.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     LET $PDE-WHERE-CLAUSE = ' AND PDE1.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     !Begin Resolution 574458
     !LET $PDE2-WHERE-CLAUSE = ' AND PDE1.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     LET $PDE3-WHERE-CLAUSE = ' AND PDE3.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     !End Resolution 574458
     LET $E2-WHERE-CLAUSE = ' AND E2.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     !Begin Resolution 574458
     !LET $E22-WHERE-CLAUSE = ' AND E2.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     LET $E22-WHERE-CLAUSE = ' AND E22.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     !End Resolution 574458
     LET $AsOfDate = $ThruDate
ELSE
     LET $B-WHERE-CLAUSE = ' AND B.HRS_STATUS_DT <= ' || $QUOTE || $AsOfDate || $QUOTE
     LET $C-WHERE-CLAUSE = ' AND C1.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     LET $J-WHERE-CLAUSE = ' AND J.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     LET $H-WHERE-CLAUSE = ' AND J1.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     LET $ADE-WHERE-CLAUSE = ' AND ADE1.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     LET $PDE-WHERE-CLAUSE = ' AND PDE1.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     !Begin Resolution 574458
     !LET $PDE2-WHERE-CLAUSE = ' AND PDE1.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     LET $PDE3-WHERE-CLAUSE = ' AND PDE3.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     !End Resolution 574458
     LET $E2-WHERE-CLAUSE = ' AND E2.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     !Begin Resolution 574458
     !LET $E22-WHERE-CLAUSE = ' AND E2.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     LET $E22-WHERE-CLAUSE = ' AND E22.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     !End Resolution 574458
  END-IF


  ! If they want it to run for a single establishment
  !------------------------------------------------------------
  IF $ReportChoice = '2'
     LET $Emp-Where-Clause = ' AND J.ESTABID = ' || $Quote || $Estab || $Quote
     LET $App-Where-Clause = ' AND B1.ESTABID = ' || $Quote || $Estab || $Quote
     LET $App-Pos-Clause = ' '
     LET $App-Jbcd-Clause = ' '
     DO Get-Establishment-Info
     DO Process-Main
  ELSE
     do Get-Number-Of-Establishments
     WHILE #i < #count
         LET $Estab = EstablishmentIDs.theEstab(#i)
         DO Get-Establishment-Info
         LET $Emp-Where-Clause =   'AND J.ESTABID = ' || $Quote || $Estab || $Quote
         LET $App-Where-Clause = ' AND B1.ESTABID = ' || $Quote || $Estab || $Quote
         LET $App-Pos-Clause = ' '
         LET $App-Jbcd-Clause = ' '
         DO Process-Main
         ADD 1 to #i
         IF #i < #count
             ! We want every establishment to print on a new page...
             !-----------------------------------------------------
             NEW-PAGE
         END-IF
     END-WHILE
  END-IF


  do Stdapi-Term
End-Program

!----------------------------------------------------------------------
!---------Init-Report--------------------------------------------------
!----------------------------------------------------------------------
! We need to either ask for the calendar year, or get the information
! from the process instance (run control panel)
!----------------------------------------------------------------------

begin-procedure Init-Report

#IFDEF DEBUGHRS002
  DISPLAY 'FLOW: Init-Report'
#ENDIF

  move 'HRS002' to $ReportID
  move 'Job Group Movement Analysis' to $ReportTitle

  display $ReportTitle

#IFDEF DEBUGHRS002
  display 'Report ID: ' NOLINE
  display $ReportID
#ENDIF

  do Stdapi-Init

  if $prcs_process_instance = ''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
     STOP QUIET
  else
     do Select-Parameters
  end-if

#IFDEF DEBUGHRS002
  DISPLAY '          Establishment from Run Control Panel:      ' NOLINE
  DISPLAY $Estab
  DISPLAY '          $ThruDate ' NOLINE
  DISPLAY $ThruDate
  DISPLAY '          $FromDate ' NOLINE
  DISPLAY $FromDate
#ENDIF

end-procedure

!----------------------------------------------------------------------
!---------Create-Arrays------------------------------------------------
!----------------------------------------------------------------------
! Creates the arrays
!----------------------------------------------------------------------
Begin-Procedure Create-Arrays
DISPLAY 'FLOW:Create-Arrays'

!****************************** Begin Resolution - 582203 ********************************
 !CREATE-ARRAY NAME=ForJobgroup  SIZE=14 FIELD=count:number:11 FIELD=label:char
  CREATE-ARRAY NAME=ForJobgroup  SIZE=14 FIELD=count:number:13 FIELD=label:char
 !CREATE-ARRAY NAME=Consolidated SIZE=14 FIELD=count:number:11 FIELD=label:char 
  CREATE-ARRAY NAME=Consolidated SIZE=14 FIELD=count:number:13 FIELD=label:char
!****************************** End Resolution - 582203 **********************************

  PUT '#Applicants             ' into ForJobgroup(1)  label
  PUT '% of Total Applicants   ' into ForJobgroup(2)  label
  PUT '#Hires                  ' into ForJobgroup(3)  label
  PUT '% of Total Hires        ' into ForJobgroup(4)  label
  PUT '#Promotions             ' into ForJobgroup(5)  label
  PUT '% of Total Promotions   ' into ForJobgroup(6)  label
  PUT '#Terminations           ' into ForJobgroup(7)  label
  PUT '% of Total Terminations ' into ForJobgroup(8)  label
  PUT 'Total # Employees       ' into ForJobgroup(9)  label
  PUT 'as of Thru Date         ' into ForJobgroup(10) label
  

  PUT '#Applicants             ' into Consolidated(1)  label
  PUT '% of Total Applicants   ' into Consolidated(2)  label
  PUT '#Hires                  ' into Consolidated(3)  label
  PUT '% of Total Hires        ' into Consolidated(4)  label
  PUT '#Promotions             ' into Consolidated(5)  label
  PUT '% of Total Promotions   ' into Consolidated(6)  label
  PUT '#Terminations           ' into Consolidated(7)  label
  PUT '% of Total Terminations ' into Consolidated(8)  label
  PUT 'Total # Employees       ' into Consolidated(9)  label
  PUT 'as of Thru Date         ' into Consolidated(10) label
  
End-Procedure Create-Arrays

!----------------------------------------------------------------------
!---------Get-Values---------------------------------------------------
!----------------------------------------------------------------------
! Fetch run control parameters
!----------------------------------------------------------------------
begin-procedure Get-Values
#IFDEF DEBUGHRS002
  DISPLAY 'FLOW: Get-Values'
#ENDIF

   do Get-Date-Indicator
   IF $date-indicator = '1'
      do Get-As-Of-Date
   ELSE
      do Get-From-Thru-Date
   END-IF

   do Get-Establishment
   do Get-Run-Scope
   do Get-Company
   do Get-CTL_ESTABID

   LET $Quote = ''''

   LET $EntityName = $Company

end-procedure Get-Values

!----------------------------------------------------------------------
!---------Process-Main-------------------------------------------------
!----------------------------------------------------------------------
! Main program flow
!----------------------------------------------------------------------
Begin-Procedure Process-Main
DISPLAY 'FLOW:Process-Main'

! SQL split into three simpler routines to reduce the chances of
! confusing the various platform optimizers - one for employees
! attached to a requisition, one for employees attached to a
! position directly, and one for employees attached to a jobcode/setid
! directly.
!
! Aggregate values are stored in a temp table and then the printouts
! are calculated from this table. The temp table is keyed off of
! process instance, so this report may be run in parallel with no
! danger of data corruption, although table locking issues no some
! platforms may prevent realization of large performance gains.
! ---------------------------------------------------------------------

IF $Global_Prepped = 'FALSE'
  DO Prep-Global
  LET $Global_Prepped = 'TRUE'
END-IF
  DO Process-Applicants-Requisition
  DO Process-Job
  DO Scrub-Temp-Table
  DO Calc-Total-Employees
  DO Print-Totals

! On break won't fire Print-Jobgroup for the last group (there's no
! 'break' at the end of the result set) - so we need to call it here
! --------------------------------------------------------------------
  DO Print-Jobgroup

! We'll copy the values from the consolidated
! array into the jobgroup array that way we can simply
! call the Print-Jobgroup function one more time to
! get our consolidated report to print out.
! ---------------------------------------------------------------------
  DO Copy-From-Consolidated
  LET $CONSOLIDATED = 'YES'
  LET $EEO_JOB_GROUP = 'All Job Groups (Consolidated Report)'
  DO Print-Jobgroup
  LET $CONSOLIDATED = 'NO'

  DO Cleanup-Temp-Table

End-Procedure

!----------------------------------------------------------------------
!---------Process-Applicants-Requisition-------------------------------
!----------------------------------------------------------------------
! Get applicants who are attached to a Requisition and insert aggregate
! totals into temp table
!----------------------------------------------------------------------
Begin-Procedure Process-Applicants-Requisition
DISPLAY 'FLOW:Process-Applicants-Requisition'
!Begin Resolution 574458
!#IFNDEF DB2ALL
!#IFNDEF INFORMIX
#IFNDEF DB2ALL_INFORMIX
!End Resolution 574458
BEGIN-SQL
INSERT INTO PS_R_APP002_TMP (
PROCESS_INSTANCE
,ACTION
,EEO_JOB_GROUP
,SEX
,ETHNIC_GROUP
,EE_COUNT)
SELECT
#prcs_process_instance
,'APP'
,C.EEO_JOB_GROUP
,A.SEX
,ETH.ETHNIC_GROUP
,COUNT(*)
FROM PS_HRS_APPLICANT A
,PS_HRS_APP_PROFILE G
,PS_HRS_RCMNT_JOB B
,PS_HRS_RCMNT_I B1
,PS_HRS_JO_I D
,PS_JOBCODE_TBL C
,PS_HRS_APP_DIV_ETH DVR
,PS_ETHNIC_GRP_TBL ETH
,PS_HRS_APP_USA ADE
WHERE A.HRS_PERSON_ID = G.HRS_PERSON_ID
AND G.HRS_PERSON_ID = DVR.HRS_PERSON_ID
AND A.HRS_PERSON_ID = ADE.HRS_PERSON_ID
[$B-WHERE-CLAUSE]
!  AND DVR.PRIMARY_INDICATOR = 'Y' 
  AND DVR.SETID = ETH.SETID 
  AND DVR.HRS_ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
  AND ETH.EFFDT = (SELECT MAX(E2.EFFDT) FROM PS_ETHNIC_GRP_TBL E2 
                  WHERE E2.SETID = ETH.SETID 
                  AND E2.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
                  [$E2-WHERE-CLAUSE])
  AND ETH.ETHNIC_GROUP   <> '6'
  AND (A.APP_PER_STATUS  = 'N' OR A.APP_PER_STATUS = 'A')
  AND ADE.US_WORK_ELIGIBILTY = 'Y'
  AND C.SETID = B.SETID
  AND C.JOBCODE = B.JOBCODE
  AND B1.HRS_PERSON_ID = B.HRS_PERSON_ID
  AND B1.HRS_RCMNT_ID = B.HRS_RCMNT_ID 
  AND D.HRS_JOB_OPENING_ID = B1.HRS_JOB_OPENING_ID
  AND A.STATUS_CODE <> '030'
  AND C.EFFDT = (SELECT MAX(C1.EFFDT)
                 FROM PS_JOBCODE_TBL C1
                 WHERE C1.JOBCODE = C.JOBCODE
                 AND C1.SETID = C.SETID
[$C-WHERE-CLAUSE]
)
  AND ADE.EFFDT = (SELECT MAX(ADE1.EFFDT)
                   FROM PS_HRS_APP_USA ADE1
                   WHERE ADE1.HRS_PERSON_ID = ADE.HRS_PERSON_ID
[$ADE-WHERE-CLAUSE]
)
  AND C.SETID = (SELECT XX.SETID
                 FROM PS_SET_CNTRL_REC XX
                 WHERE XX.SETCNTRLVALUE = G.BUSINESS_UNIT
                 AND XX.RECNAME = 'JOBCODE_TBL')
[$App-Where-Clause]
GROUP BY C.EEO_JOB_GROUP,A.EMPLID,A.SEX,ETH.ETHNIC_GROUP,A.STATUS_CODE
END-SQL

#ELSE
BEGIN-SELECT    
C.EEO_JOB_GROUP     &DB2_EEO_JOB_GROUP
A.SEX               &DB2_SEX
ETH2.ETHNIC_GROUP   &DB2_ETHNIC_GROUP
COUNT(*)            &DB2_COUNT

        DO DB2-Insert-Row(#prcs_process_instance, 'APP', &DB2_EEO_JOB_GROUP, &DB2_SEX, &DB2_ETHNIC_GROUP, &DB2_COUNT)

FROM PS_HRS_APPLICANT A
,PS_HRS_APP_PROFILE G
,PS_HRS_RCMNT_JOB B
,PS_HRS_RCMNT_I B1
,PS_HRS_JO_I D
,PS_JOBCODE_TBL C
,PS_HRS_APP_DIV_ETH DVR2
,PS_ETHNIC_GRP_TBL ETH2
,PS_HRS_APP_USA ADE
WHERE A.HRS_PERSON_ID = G.HRS_PERSON_ID
AND G.HRS_PERSON_ID = DVR2.HRS_PERSON_ID
AND A.HRS_PERSON_ID = ADE.HRS_PERSON_ID
[$B-WHERE-CLAUSE]
!  AND DVR2.PRIMARY_INDICATOR = 'Y' 
  AND DVR2.SETID = ETH2.SETID 
  AND DVR2.HRS_ETHNIC_GRP_CD = ETH2.ETHNIC_GRP_CD 
  AND ETH2.EFFDT = (SELECT MAX(E22.EFFDT) FROM PS_ETHNIC_GRP_TBL E22 
                  WHERE E22.SETID = ETH2.SETID 
                  AND E22.ETHNIC_GRP_CD = ETH2.ETHNIC_GRP_CD 
                  [$E22-WHERE-CLAUSE])
  AND ETH2.ETHNIC_GROUP   <> '6'
  AND (A.APP_PER_STATUS  = 'N' OR A.APP_PER_STATUS = 'A')
  AND ADE.US_WORK_ELIGIBILTY = 'Y'
  AND C.SETID = B.SETID
  AND C.JOBCODE = B.JOBCODE
  AND B1.HRS_PERSON_ID = B.HRS_PERSON_ID
  AND B1.HRS_RCMNT_ID = B.HRS_RCMNT_ID 
  AND D.HRS_JOB_OPENING_ID = B1.HRS_JOB_OPENING_ID
  AND A.STATUS_CODE <> '030'
  AND C.EFFDT = (SELECT MAX(C1.EFFDT)
                 FROM PS_JOBCODE_TBL C1
                 WHERE C1.JOBCODE = C.JOBCODE
                 AND C1.SETID = C.SETID
  [$C-WHERE-CLAUSE]
  )
  AND ADE.EFFDT = (SELECT MAX(ADE1.EFFDT)
                   FROM PS_HRS_APP_USA ADE1
                   WHERE ADE1.HRS_PERSON_ID = ADE.HRS_PERSON_ID
  [$ADE-WHERE-CLAUSE]
  )
  AND C.SETID = (SELECT XX.SETID
                 FROM PS_SET_CNTRL_REC XX
                 WHERE XX.SETCNTRLVALUE = G.BUSINESS_UNIT
                 AND XX.RECNAME = 'JOBCODE_TBL')
[$App-Where-Clause]
GROUP BY C.EEO_JOB_GROUP,A.SEX,ETH2.ETHNIC_GROUP,A.STATUS_CODE
END-SELECT
#ENDIF
!Begin Resolution 574458
!#ENDIF
!End Resolution 574458
End-Procedure Process-Applicants-Requisition

!----------------------------------------------------------------------
!---------DB2-Insert-Row-----------------------------------------------
!----------------------------------------------------------------------
! Used to get around platform limitation concerning INSERT statements
! with a nested SELECT
!----------------------------------------------------------------------

Begin-Procedure DB2-Insert-Row(#prcs_process_instance,$Action, $Jobgroup, $Sex, $EthnicGroup, #Count)
BEGIN-SQL
INSERT INTO PS_R_APP002_TMP(
PROCESS_INSTANCE
,ACTION
,EEO_JOB_GROUP
,SEX
,ETHNIC_GROUP
,EE_COUNT) 
VALUES(
#prcs_process_instance
,$Action
,$Jobgroup
,$Sex
,$EthnicGroup
,#Count)
END-SQL
End-Procedure DB2-Insert-Row

!----------------------------------------------------------------------
!---------Process-Job--------------------------------------------------
!----------------------------------------------------------------------
! Now pull aggregate data about hires, promotions, & terminations
!----------------------------------------------------------------------
Begin-Procedure Process-Job
DISPLAY 'FLOW:Process-Job'
!Begin Resolution 574458
!#IFNDEF DB2ALL
!#IFNDEF INFORMIX
#IFNDEF DB2ALL_INFORMIX
!End Resolution 574458

BEGIN-SQL
INSERT INTO PS_R_APP002_TMP (
PROCESS_INSTANCE
,ACTION
,EEO_JOB_GROUP
,SEX
,ETHNIC_GROUP
,EE_COUNT)
SELECT
#prcs_process_instance
,J.ACTION
,C.EEO_JOB_GROUP
,PDE.SEX
,ETH.ETHNIC_GROUP
,COUNT(*)
FROM PS_PERS_DATA_EFFDT PDE
,PS_PERS_DATA_USA PDE2
,PS_JOB J
,PS_JOBCODE_TBL C
,PS_DIVERS_ETHNIC DVR
,PS_ETHNIC_GRP_TBL ETH
WHERE PDE.EMPLID        = J.EMPLID
  AND PDE.EMPLID        = DVR.EMPLID
  AND PDE.EMPLID = PDE2.EMPLID
  AND J.JOBCODE         = C.JOBCODE
  AND J.SETID_JOBCODE   = C.SETID
  AND J.JOB_INDICATOR = 'P'
[$J-WHERE-CLAUSE]
  AND J.ACTION IN ('HIR','REH','TER','LOF','PRO','RET', 'TER', 'TWB', 'TWP', 'RWP')
  AND DVR.PRIMARY_INDICATOR = 'Y' 
  AND DVR.SETID = ETH.SETID 
  AND DVR.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
  AND ETH.EFFDT = (SELECT MAX(E2.EFFDT) FROM PS_ETHNIC_GRP_TBL E2 
                  WHERE E2.SETID = ETH.SETID 
                  AND E2.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
                  [$E2-WHERE-CLAUSE])
  AND ETH.ETHNIC_GROUP   <> '6'
  AND PDE2.US_WORK_ELIGIBILTY = 'Y'
  AND J.EEO_CLASS    <> 'E'  !Exclude from counts (Job record)
  AND C.EEO1CODE     <> 'N'  !Not counted for EEO reporting (JobCode Table)
  AND C.EFFDT = (SELECT MAX(C1.EFFDT)
                 FROM PS_JOBCODE_TBL C1
                 WHERE C1.JOBCODE = C.JOBCODE
                 AND C1.SETID = C.SETID
[$C-WHERE-CLAUSE]
)
  AND PDE.EFFDT = (SELECT MAX(PDE1.EFFDT)
                   FROM PS_PERS_DATA_EFFDT PDE1
                   WHERE PDE1.EMPLID = PDE.EMPLID
[$PDE-WHERE-CLAUSE]
)
AND PDE2.EFFDT = (SELECT MAX (PDE3.EFFDT)
                     FROM PS_PERS_DATA_USA PDE3
                     WHERE PDE3.EMPLID = PDE2.EMPLID
!Begin Resolution 574458
![$PDE1-WHERE-CLAUSE]
[$PDE3-WHERE-CLAUSE]
!End Resolution 574458

)
[$Emp-Where-Clause]
GROUP BY J.ACTION,C.EEO_JOB_GROUP,PDE.SEX,ETH.ETHNIC_GROUP
END-SQL

#ELSE
BEGIN-SELECT
J.ACTION           &J_ACTION
C.EEO_JOB_GROUP    &J_EEO_JOB_GROUP
PDE.SEX            &J_SEX
ETH2.ETHNIC_GROUP   &J_ETHNIC_GROUP
COUNT(*)           &J_COUNT

    DO DB2-Insert-Row(#prcs_process_instance, &J_ACTION, &J_EEO_JOB_GROUP, &J_SEX, &J_ETHNIC_GROUP, &J_COUNT)

FROM PS_PERS_DATA_EFFDT PDE
,PS_PERS_DATA_USA PDE2
,PS_JOB J
,PS_JOBCODE_TBL C
,PS_DIVERS_ETHNIC DVR2
,PS_ETHNIC_GRP_TBL ETH2
WHERE PDE.EMPLID        = J.EMPLID
  AND PDE.EMPLID        = DVR2.EMPLID
  AND PDE.EMPLID = PDE2.EMPLID
  AND J.JOBCODE         = C.JOBCODE
  AND J.SETID_JOBCODE   = C.SETID
  AND J.JOB_INDICATOR = 'P'
  [$J-WHERE-CLAUSE]
  AND J.ACTION IN ('HIR','REH','TER','LOF','PRO','RET', 'TER', 'TWB', 'TWP', 'RWP')
  AND DVR2.PRIMARY_INDICATOR = 'Y' 
  AND DVR2.SETID = ETH2.SETID 
  AND DVR2.ETHNIC_GRP_CD = ETH2.ETHNIC_GRP_CD 
  AND ETH2.EFFDT = (SELECT MAX(E22.EFFDT) FROM PS_ETHNIC_GRP_TBL E22 
                  WHERE E22.SETID = ETH2.SETID 
                  AND E22.ETHNIC_GRP_CD = ETH2.ETHNIC_GRP_CD 
                  [$E22-WHERE-CLAUSE])
  AND ETH2.ETHNIC_GROUP   <> '6'
  AND PDE2.US_WORK_ELIGIBILTY = 'Y'
  AND J.EEO_CLASS    <> 'E'  !Exclude from counts (Job record)
  AND C.EEO1CODE     <> 'N'  !Not counted for EEO reporting (JobCode Table)
  AND C.EFFDT = (SELECT MAX(C1.EFFDT)
                 FROM PS_JOBCODE_TBL C1
                 WHERE C1.JOBCODE = C.JOBCODE
                 AND C1.SETID = C.SETID
  [$C-WHERE-CLAUSE]
  )
  AND PDE.EFFDT = (SELECT MAX(PDE1.EFFDT)
                   FROM PS_PERS_DATA_EFFDT PDE1
                   WHERE PDE1.EMPLID = PDE.EMPLID
  [$PDE-WHERE-CLAUSE]
  )
  AND PDE2.EFFDT = (SELECT MAX (PDE3.EFFDT)
                       FROM PS_PERS_DATA_USA PDE3
                       WHERE PDE3.EMPLID = PDE2.EMPLID
!Begin Resolution 574458
      ![$PDE1-WHERE-CLAUSE]
      [$PDE3-WHERE-CLAUSE]
!End Resolution 574458
)
[$Emp-Where-Clause]
GROUP BY J.ACTION,C.EEO_JOB_GROUP,PDE.SEX,ETH2.ETHNIC_GROUP
END-SELECT
#ENDIF
!Begin Resolution 574458
!#ENDIF
!End Resolution 574458
End-Procedure Process-Job


!----------------------------------------------------------------------
!---------Calc-Total-Employees-----------------------------------------
!----------------------------------------------------------------------
! Calculates the total number of active employees as of the $ThruDate
!----------------------------------------------------------------------
Begin-Procedure Calc-Total-Employees
DISPLAY 'FLOW:Calc-Total-Employees'
!Begin Resolution 574458
!#IFNDEF DB2ALL
!#IFNDEF INFORMIX
#IFNDEF DB2ALL_INFORMIX
!End Resolution 574458

BEGIN-SQL
INSERT INTO PS_R_APP002_TMP (
PROCESS_INSTANCE
,ACTION
,EEO_JOB_GROUP
,SEX
,ETHNIC_GROUP
,EE_COUNT)
SELECT
#prcs_process_instance
,'TOT'
,C.EEO_JOB_GROUP
,PDE.SEX
,ETH.ETHNIC_GROUP
,COUNT(*)
FROM PS_PERS_DATA_EFFDT PDE
,PS_PERS_DATA_USA PDE2
,PS_JOB J
,PS_JOBCODE_TBL C
,PS_DIVERS_ETHNIC DVR
,PS_ETHNIC_GRP_TBL ETH
WHERE PDE.EMPLID        = J.EMPLID
  AND PDE.EMPLID        = DVR.EMPLID
  AND PDE.EMPLID = PDE2.EMPLID
  AND J.JOBCODE         = C.JOBCODE
  AND J.SETID_JOBCODE   = C.SETID
  AND J.EFFDT = (SELECT MAX(J1.EFFDT)
                 FROM PS_JOB J1
                 WHERE J1.EMPLID = J.EMPLID
                 AND J1.EMPL_RCD = J.EMPL_RCD
[$H-WHERE-CLAUSE]
)
  AND J.JOB_INDICATOR = 'P'
  AND J.HR_STATUS = 'A'
  AND PDE2.US_WORK_ELIGIBILTY = 'Y'
  AND DVR.PRIMARY_INDICATOR = 'Y' 
  AND DVR.SETID = ETH.SETID 
  AND DVR.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
  AND ETH.EFFDT = (SELECT MAX(E2.EFFDT) FROM PS_ETHNIC_GRP_TBL E2 
                  WHERE E2.SETID = ETH.SETID 
                  AND E2.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
                  [$E2-WHERE-CLAUSE])
  AND ETH.ETHNIC_GROUP <> '6'
  AND J.EEO_CLASS    <> 'E'  !Exclude from counts (Job record)
  AND C.EEO1CODE     <> 'N'  !Not countd for EEO reporting (JobCode Table)
  AND C.EFFDT = (SELECT MAX(C1.EFFDT)
                 FROM PS_JOBCODE_TBL C1
                 WHERE C1.JOBCODE = C.JOBCODE
                 AND C1.SETID = C.SETID
[$C-WHERE-CLAUSE]
)
  AND PDE.EFFDT = (SELECT MAX(PDE1.EFFDT)
                   FROM PS_PERS_DATA_EFFDT PDE1
                   WHERE PDE1.EMPLID = PDE.EMPLID
[$PDE-WHERE-CLAUSE]
)
 AND PDE2.EFFDT = (SELECT MAX (PDE3.EFFDT)
                       FROM PS_PERS_DATA_USA PDE3
                       WHERE PDE3.EMPLID = PDE2.EMPLID
!Begin Resolution 574458
      ![$PDE1-WHERE-CLAUSE]
      [$PDE3-WHERE-CLAUSE]
!End Resolution 574458
      
)
[$Emp-Where-Clause]
GROUP BY J.ACTION,C.EEO_JOB_GROUP,PDE.SEX,ETH.ETHNIC_GROUP
END-SQL

#ELSE
BEGIN-SELECT
C.EEO_JOB_GROUP    &TOT_EEO_JOB_GROUP
PDE.SEX            &TOT_SEX
ETH2.ETHNIC_GROUP  &TOT_ETHNIC_GROUP
COUNT(*)           &TOT_COUNT

        DO DB2-Insert-Row(#prcs_process_instance, 'TOT', &TOT_EEO_JOB_GROUP, &TOT_SEX, &TOT_ETHNIC_GROUP, &TOT_COUNT)

FROM PS_PERS_DATA_EFFDT PDE
,PS_PERS_DATA_USA PDE2
,PS_JOB J
,PS_JOBCODE_TBL C
,PS_DIVERS_ETHNIC DVR2
,PS_ETHNIC_GRP_TBL ETH2
WHERE PDE.EMPLID        = J.EMPLID
  AND PDE.EMPLID        = DVR2.EMPLID
  AND PDE.EMPLID = PDE2.EMPLID
  AND J.JOBCODE         = C.JOBCODE
  AND J.SETID_JOBCODE   = C.SETID
  AND J.EFFDT = (SELECT MAX(J1.EFFDT)
                 FROM PS_JOB J1
                 WHERE J1.EMPLID = J.EMPLID
                 AND J1.EMPL_RCD = J.EMPL_RCD
  [$H-WHERE-CLAUSE])
  AND J.JOB_INDICATOR = 'P'
  AND J.HR_STATUS = 'A'
  AND PDE2.US_WORK_ELIGIBILTY = 'Y'
  AND DVR2.PRIMARY_INDICATOR = 'Y' 
  AND DVR2.SETID = ETH2.SETID 
  AND DVR2.ETHNIC_GRP_CD = ETH2.ETHNIC_GRP_CD 
  AND ETH2.EFFDT = (SELECT MAX(E22.EFFDT) FROM PS_ETHNIC_GRP_TBL E22 
                  WHERE E22.SETID = ETH2.SETID 
                  AND E22.ETHNIC_GRP_CD = ETH2.ETHNIC_GRP_CD 
                  [$E22-WHERE-CLAUSE])
  AND ETH2.ETHNIC_GROUP <> '6'
  AND J.EEO_CLASS    <> 'E'  !Exclude from counts (Job record)
  AND C.EEO1CODE     <> 'N'  !Not countd for EEO reporting (JobCode Table)
  AND C.EFFDT = (SELECT MAX(C1.EFFDT)
                 FROM PS_JOBCODE_TBL C1
                 WHERE C1.JOBCODE = C.JOBCODE
                 AND C1.SETID = C.SETID
  [$C-WHERE-CLAUSE]
  )
  AND PDE.EFFDT = (SELECT MAX(PDE1.EFFDT)
                   FROM PS_PERS_DATA_EFFDT PDE1
                   WHERE PDE1.EMPLID = PDE.EMPLID
  [$PDE-WHERE-CLAUSE]
  )
   AND PDE2.EFFDT = (SELECT MAX (PDE3.EFFDT)
                         FROM PS_PERS_DATA_USA PDE3
                         WHERE PDE3.EMPLID = PDE2.EMPLID
!Begin Resolution 574458
        ![$PDE1-WHERE-CLAUSE]
        [$PDE3-WHERE-CLAUSE]
!End Resolution 574458
)
[$Emp-Where-Clause]
GROUP BY J.ACTION,C.EEO_JOB_GROUP,PDE.SEX,ETH2.ETHNIC_GROUP
END-SELECT
#ENDIF
!Begin Resolution 574458
!#ENDIF
!End Resolution 574458

End-Procedure Calc-Total-Employees

!----------------------------------------------------------------------
!---------Cleanup-Temp-Table-------------------------------------------
!----------------------------------------------------------------------
! Delete the values we inserted into the temp TBL
!----------------------------------------------------------------------
Begin-Procedure Cleanup-Temp-Table
DISPLAY 'FLOW:Cleanup-Temp-Table'
Begin-SQL
DELETE FROM PS_R_APP002_TMP
WHERE PROCESS_INSTANCE = #prcs_process_instance
End-SQL
End-Procedure Cleanup-Temp-Table

!----------------------------------------------------------------------
!---------Scrub-Temp-Table---------------------------------------------
!----------------------------------------------------------------------
! Reduce the ACTION field down to one of four possible values -
! APP, HIR, PRO, or TER
!----------------------------------------------------------------------
Begin-Procedure Scrub-Temp-Table
DISPLAY 'FLOW:Scrub-Temp-Table'

BEGIN-SQL
UPDATE PS_R_APP002_TMP
SET ACTION = 'HIR'
WHERE ACTION = 'REH'
  AND PROCESS_INSTANCE = #prcs_process_instance
END-SQL

BEGIN-SQL
UPDATE PS_R_APP002_TMP
SET ACTION = 'TER'
WHERE ACTION IN ('LOF','RET','TWB','TWP','RWP')
  AND PROCESS_INSTANCE = #prcs_process_instance
END-SQL

End-Procedure Scrub-Temp-Table

!----------------------------------------------------------------------
!--------Copy-From-Consolidated----------------------------------------
!----------------------------------------------------------------------
! Copies values from the consolidated array to the jobcode array so
! that we can reuse the jobcode printing routine for the consolidated
! routine
!----------------------------------------------------------------------
Begin-Procedure Copy-From-Consolidated
DISPLAY 'FLOW:Copy-From-Consolidated'
MOVE 0 TO #JRow
GET $Temp FROM Consolidated(#JRow) label
PUT $Temp INTO ForJobgroup(#JRow) label
WHILE #JRow <= 11
   MOVE 0 TO #JCol
 !******************************* Begin Resolution - 582203 *********************   
   !WHILE #JCol <= 10
    WHILE #JCol <= 12
 !******************************* End Resolution - 582203   *********************    
      GET #Temp FROM Consolidated(#JRow) count(#JCol)
      PUT #Temp INTO ForJobgroup(#JRow) count(#JCol)
      ADD 1 to #JCol
   END-WHILE
   ADD 1 to #JRow
END-WHILE
End-Procedure Copy-From-Consolidated

!----------------------------------------------------------------------
!---------Prep-Global-------------------------------------------------
!----------------------------------------------------------------------
! Get the correct labels for the language selected
!----------------------------------------------------------------------
Begin-Procedure Prep-Global

  do Init_Report_Translation ($ReportID, $language_cd)

  do Get_Field_Information ('HRS002',     'MALES',            $MALES,            #DW)
  do Get_Field_Information ('HRS002',     'FEMALES',          $FEMALES,          #DW)
  do Get_Field_Information ('HRS002',     'JOB_GROUP',        $JOB_GROUP,        #DW)
  do Get_Field_Information ('HRS002',     'INDIAN',           $INDIAN,           #DW)
  do Get_Field_Information ('HRS002',     'ASIAN',            $ASIAN,            #DW)
  do Get_Field_Information ('HRS002',     'BLACK',            $BLACK,            #DW)
  do Get_Field_Information ('HRS002',     'HISPANIC',         $HISPANIC,         #DW)
  do Get_Field_Information ('HRS002',     'WHITE',            $WHITE,            #DW)
  do Get_Field_Information ('HRS002',     'MALES2',           $MALES2,           #DW)
  do Get_Field_Information ('HRS002',     'FEMALES2',         $FEMALES2,         #DW)
  do Get_Field_Information ('HRS002',     'MINORITIES',       $MINORITIES,       #DW)
  do Get_Field_Information ('HRS002',     'APPLICANTS',       $APPLICANTS,       #DW)
  do Get_Field_Information ('HRS002',     'TOT_APPLICANTS',   $TOT_APPLICANTS,   #DW)
  do Get_Field_Information ('HRS002',     'HIRES',            $HIRES,            #DW)
  do Get_Field_Information ('HRS002',     'TOT_HIRES',        $TOT_HIRES,        #DW)
  do Get_Field_Information ('HRS002',     'PROMOTIONS',       $PROMOTIONS,       #DW)
  do Get_Field_Information ('HRS002',     'TOT_PROMOTIONS',   $TOT_PROMOTIONS,   #DW)
  do Get_Field_Information ('HRS002',     'TERMINATIONS',     $TERMINATIONS,     #DW)
  do Get_Field_Information ('HRS002',     'TOT_TERMINATIONS', $TOT_TERMINATIONS, #DW)
  do Get_Field_Information ('HRS002',     'TOT_EMPLOYEES',    $TOT_EMPLOYEES,    #DW)
  do Get_Field_Information ('HRS002',     'TOTAL',            $TOTAL,            #DW)
  !***************************** Begin Resolution - 582203 **************************
  do Get_Field_Information ('HRS002',     'PACIFIC ISLAND',   $PACILAND,         #DW)
  !***************************** End Resolution - 582203 ****************************
End-Procedure Prep-Global

!----------------------------------------------------------------------
!---------Print-Totals-------------------------------------------------
!----------------------------------------------------------------------
! Print the report from the values stored in the temp tables
!----------------------------------------------------------------------
Begin-Procedure Print-Totals
DISPLAY 'FLOW:Print-Totals'
!************************************Begin Resolution - 576677 ******************
   CLEAR-ARRAY NAME=Consolidated
!************************************End Resolution - 576677 ********************
! First, we'll load the values for the jobgroup into an array
!------------------------------------------------------------
BEGIN-SELECT
Z.EEO_JOB_GROUP  &Jobgroup () ON-BREAK PROCEDURE=Print-Jobgroup SAVE=$EEO_JOB_GROUP PRINT=NEVER
Z.ACTION
Z.SEX
Z.ETHNIC_GROUP
Z.EE_COUNT

   LET $Sex = Rtrim(&Z.SEX,' ')

   IF $Sex = 'M'
      LET #JG_Col = 0
   ELSE
      !*************************** Begin Resolution - 582203 ********************
      !LET #JG_Col = 5
       LET #JG_Col = 6
      !*************************** End Resolution - 582203 **********************
   END-IF
   !************************* Begin Resolution - 582203 ********************
   If (&Z.ETHNIC_GROUP < '6')  
   !*************************** End Resolution - 582203 **********************
    LET #JG_Col = #JG_Col + TO_NUMBER(&Z.ETHNIC_GROUP)
   !************************* Begin Resolution - 582203 ******************** 
   Else
    if (&Z.ETHNIC_GROUP = '7')
    LET #JG_Col = #JG_Col + 6
    
    End-If
   End-If 
   !*************************** End Resolution - 582203 **********************
     

   LET $Action = Rtrim(&Z.ACTION,' ')
   EVALUATE $Action
      WHEN = 'APP'
         LET #JG_Row = 1
         BREAK
      WHEN = 'HIR'
         LET #JG_Row = 3
         BREAK
      WHEN = 'PRO'
         LET #JG_Row = 5
         BREAK
      WHEN = 'TER'
         LET #JG_Row = 7
         BREAK
      WHEN = 'TOT'
         LET #JG_Row = 10
         BREAK
   END-EVALUATE

   DISPLAY '   #JG_Row: ' NOLINE
   DISPLAY #JG_Row
   DISPLAY '   #JG_Col: ' NOLINE
   DISPLAY #JG_Col

   ARRAY-ADD &Z.EE_COUNT TO ForJobgroup(#JG_Row) count(#JG_Col)
   ARRAY-ADD &Z.EE_COUNT TO Consolidated(#JG_ROW) count(#JG_Col)

FROM PS_R_APP002_TMP Z
WHERE Z.PROCESS_INSTANCE = #prcs_process_instance
ORDER BY Z.EEO_JOB_GROUP
END-SELECT
End-Procedure Print-Totals

!----------------------------------------------------------------------
!---------Print-JobGroup-----------------------------------------------
!----------------------------------------------------------------------
! Print the report for one JobGroup
!----------------------------------------------------------------------
Begin-Procedure Print-JobGroup
DISPLAY 'FLOW:Print-JobGroup'

 DO Calculate-Percents

   ALTER-PRINTER
      point-size=14
      font=4

   Print $JOB_GROUP  (+1,1)
   Print $EEO_JOB_GROUP  (,14)

   POSITION (+1,,)

   ALTER-PRINTER
      point-size=10

    Print $MALES (+1,32) BOLD
    Print $FEMALES (,83) BOLD

    ALTER-PRINTER
      point-size=7
 !************************* Begin Resolution - 582203 ******************** 
     !print $WHITE (+1, 18)
     !print $BLACK (,26)
     !print $HISPANIC (,34)
     !print $ASIAN (,42)
     !print $INDIAN (,50)
     !print $WHITE (,68)
     !print $BLACK (,76)
     !print $HISPANIC (,84)
     !print $ASIAN (,92)
     !print $INDIAN (,100)
     
     print $WHITE (+1, 17)
     print $BLACK (,24)
     print $HISPANIC (,31)
     print $ASIAN (,38)
     print $INDIAN (,45)
     print $PACILAND (,52)
     print $WHITE (,65)
     print $BLACK (,72)
     print $HISPANIC (,79)
     print $ASIAN (,86)
     print $INDIAN (,93)
     print $PACILAND (,100)
 !************************* End Resolution - 582203 ******************** 
     ALTER-PRINTER
         point-size=10

     GRAPHIC (,1,104) HORZ-LINE

! Print out the top portion - breakdown by race and sex
! -----------------------------------------------------
MOVE 1 TO #JRow
WHILE #JRow <= 10

   GET $Out FROM ForJobgroup(#JRow) label

ALTER-PRINTER
   point-size=7

   IF #Jrow = 3 OR #Jrow = 4 OR #Jrow = 7 OR #Jrow = 8
      GRAPHIC (+1,1,104) box 1 0 15
   ELSE
      POSITION (+1)
   END-IF

   PRINT $Out (, 5)

   IF #JRow != 9
      MOVE 1 TO #JCol
      !************************* Begin Resolution - 582203 ******************** 
      !WHILE #JCol <= 10
       WHILE #JCol <= 12
      !************************* End Resolution - 582203 ********************  
         GET #Out FROM ForJobgroup(#JRow) count(#JCol)
      !************************* Begin Resolution - 582203 ********************  
         !LET #PrintCol = 10 + (8 * #JCol)
         LET #PrintCol = 10 + (7 * #JCol)
         !IF #JCol > 5
         IF #JCol > 6
         !LET #PrintCol = #PrintCol + 10
         LET #PrintCol = #PrintCol + 6
      !************************* End Resolution - 582203 ********************       
         END-IF

         IF #Jrow%2 OR #Jrow = 10
            PRINT #Out (,#PrintCol,) EDIT 8888
         ELSE
            PRINT #Out (,#PrintCol,) EDIT 888.88
         END-IF
         ADD 1 to #JCol
      END-WHILE
   END-IF
   ADD 1 to #JRow
END-WHILE

GRAPHIC (,1,104) HORZ-LINE

ALTER-PRINTER
   point-size=10

DO Print-Totals-Header

! Print the Summary Information
!------------------------------

ALTER-PRINTER
   point-size=7

MOVE 1 TO #JRow
WHILE #JRow <= 10


   GET $Out FROM ForJobgroup(#JRow) label

   IF #Jrow = 3 OR #Jrow = 4 OR #Jrow = 7 OR #Jrow = 8
      GRAPHIC (+1,1,104) box 1 0 15
   ELSE
      POSITION (+1)
   END-IF

   PRINT $Out (, 5)


   IF #JRow != 9

      ! Calculate male totals
      !----------------------
      MOVE 1 TO #JCol
      MOVE 0 TO #Male_Total
      MOVE 0 TO #TEMP
     !******************************* Begin Resolution 582203 ******************************
     !WHILE #JCol <= 5
      WHILE #JCol <= 6
     !******************************* End Resolution   582203 ****************************** 
         GET #temp FROM ForJobgroup(#JRow) count(#JCol)
         LET #Male_Total = #Male_Total + #temp
         ADD 1 TO #JCol
      END-WHILE


      ! Print male total
      !-----------------
      IF #JRow%2 OR #JRow = 10
         PRINT #Male_Total (,36) EDIT 8888
      ELSE
         PRINT #Male_Total (,36) EDIT 888.88
      END-IF

      ! Calculate female totals
      !------------------------
      MOVE 0 TO #TEMP
      !******************************* Begin Resolution 582203 ******************************
      !MOVE 6 TO #JCol
       MOVE 7 TO #JCol
      !******************************* End  Resolution  582203******************************
      MOVE 0 TO #Female_Total
      !************************* Begin Resolution - 582203 ******************** 
      !WHILE #JCol <= 10
       WHILE #JCol <= 12
      !************************* End Resolution - 582203 ******************** 
         GET #temp FROM ForJobgroup(#JRow) count(#JCol)
         LET #Female_Total = #Female_Total + #temp
         ADD 1 TO #JCol
      END-WHILE

      ! Print female total
      ! ------------------
      IF #JRow%2 OR #JRow = 10
         PRINT #Female_Total (,59) EDIT 8888
      ELSE
         PRINT #Female_Total (,59) EDIT 888.88
      END-IF

      ! Calculate minority totals
      !------------------------
      MOVE 1 TO #JCol
      MOVE 0 TO #Minority_Total
      !************************* Begin Resolution - 582203 ******************** 
      !WHILE #JCol <= 10
      WHILE #JCol <= 12
      !************************* End Resolution - 582203 ******************** 
      !************************* Begin Resolution - 614126 ******************** 
         !IF #JCol != 1 AND #JCol != 6
         IF #JCol != 1 AND #JCol != 7
      !************************* End Resolution - 614126 ******************** 
            GET #temp FROM ForJobgroup(#JRow) count(#JCol)
            LET #Minority_Total = #Minority_Total + #temp
         END-IF
         ADD 1 TO #JCol
      END-WHILE

      ! Print minority total
      ! ------------------
      IF #JRow%2 OR #JRow = 10
         PRINT #Minority_Total (,79) EDIT 8888
      ELSE
         PRINT #Minority_Total (,79) EDIT 888.88
      END-IF

   END-IF

   ADD 1 to #JRow
END-WHILE

! Clear out the totals from the jobgroup array
! --------------------------------------------
MOVE 1 TO #JRow
WHILE #JRow <= 11
   MOVE 0 TO #JCol
   !************************* Begin Resolution - 582203 ******************** 
   !WHILE #JCol <= 10
   WHILE #JCol <= 12
   !************************* Begin Resolution - 582203 ******************** 
      PUT 0 INTO ForJobgroup(#JRow) count(#JCol)
      ADD 1 to #JCol
   END-WHILE
   ADD 1 to #JRow
END-WHILE

GRAPHIC (,1,104) HORZ-LINE

ALTER-PRINTER
   point-size=10

IF $CONSOLIDATED <> 'YES'
   NEW-PAGE
END-IF
!***********************Begin Resolution - 576677 ***********************
     LET $EEO_JOB_GROUP = ' '
!***********************End Resolution -  576677 *************************
End-Procedure Print-Jobgroup

!----------------------------------------------------------------------
!---------Calculate-Percents-------------------------------------------
!----------------------------------------------------------------------
! Calculates percentages
!----------------------------------------------------------------------
Begin-Procedure Calculate-Percents
DISPLAY 'FLOW:Calculate-Percents'
LET #Row_Total = 0
MOVE 1 TO #PRow
MOVE 2 to #PRowPlus
WHILE #PRow <=7

   MOVE 1 TO #PCol
   !************************* Begin Resolution - 582203 ******************** 
   !WHILE #PCol <= 10
   WHILE #PCol <= 12
   !************************* End Resolution - 582203 ******************** 
     GET #temp FROM ForJobgroup(#PRow) count (#PCol)
     LET #Row_Total = #Row_Total + #temp
     ADD 1 to #PCol
   END-WHILE
   LET #temp = 0
   MOVE 1 to #PCol
   !************************* Begin Resolution - 582203 ******************** 
   !WHILE #PCol <= 10
   WHILE #PCol <= 12
   !************************* End Resolution - 582203 ******************** 
      GET #temp FROM ForJobgroup(#PRow) count (#PCol)

      IF #Row_Total != 0
         LET #temp_pct = (#temp * 100) / #Row_Total
      ELSE
         LET #temp_pct = 0
      END-IF

      PUT #temp_pct INTO ForJobgroup(#PRowPlus) count (#PCol)
      LET #temp_pct = 0
      ADD 1 to #PCol
   END-WHILE

ADD 2 TO #PRow
ADD 2 to #PRowPlus
LET #Row_Total = 0
END-WHILE

End-Procedure Calculate-Percents

!----------------------------------------------------------------------
!--------Print-Totals-Header-------------------------------------------
!----------------------------------------------------------------------
! Prints the header for the totals chart
!----------------------------------------------------------------------
Begin-Procedure Print-Totals-Header
DISPLAY 'FLOW:Print-Totals-Header'
POSITION (+4,,)

PRINT 'TOTAL BY ALL'  (,35)   BOLD
PRINT 'TOTAL BY ALL'  (,57)   BOLD
PRINT 'TOTAL BY ALL'  (,78)   BOLD
PRINT 'MALES'         (+1,35) BOLD
PRINT 'FEMALES'       (,57)   BOLD
PRINT 'MINORITIES'    (,78)   BOLD
GRAPHIC (,1,104) HORZ-LINE

End-Procedure Print-Totals-Header

!----------------------------------------------------------------------
!---------SQCs---------------------------------------------------------
!----------------------------------------------------------------------
#include 'stdapi.sqc'      !Routine to update run status
#include 'rgrnctl1.sqc'    !Get run control parameter values
#include 'rggetval.sqc'    !Get values mask routines
#include 'askcalyr.sqc'    !Ask Calendar Year input
#Include 'curdttim.sqc'    !Get-Current-DateTime procedure
#Include 'datetime.sqc'    !Routines for date and time formatting
#Include 'number.sqc'      !Routines to format numbers
#include 'sqrtrans.sqc'    !Globalization
#include 'regutils.sqc'
