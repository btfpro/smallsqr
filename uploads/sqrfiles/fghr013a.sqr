!****************************************************************
!  FGHR013A:  VETS-100 Report -- Federally specified format   *
!****************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!
!          $Date:  2006/07/19:11:53:17                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
!#Include 'setup31.sqc'  !printer and page-size initialization
#Include 'setup32.sqc'   !Printer and page-size initialization (Landscape)

begin-setup

 declare-variable
    date $THRUDATE
    date $FROMDATE
 end-declare

end-setup


begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  DO Get-Auto-Actn-Parameters

  do Company-info
  do Get-Sub-Agency
  add 1 to #Heading
  do Agency-Totals
  do Reset
  do Stdapi-Term
end-report

begin-heading 26
  #Include 'stdhdgtr.sqc'

Evaluate #Heading
 When = 0

  print $VETS100-VETS100                    ()      center

  print $FGHR013A-SUB                       (+3,1)  center

  let $GCity   = rtrim(&G.City,' ')
  let $GCounty = rtrim(&G.County,' ')

  print &G.Descr                            (+2,1)
  print &G.Address1                         (+1,1)
  print $GCity                              (+1,1)
  print $GCounty                            (0,+4)
  print &G.State                            (0,+4)
  print &G.POSTAL                              (0,+2)

  print $VETS100-FEIN                       (+2,1)
  print &G.Federal_EIN                      ()      edit 099999999

  print $VETS100-PERIOD                     (+3,73)
  do Format-DateTime($FromDate, $out, {DEFDATE}, '', '')
  print $out                        ()

  print $VETS100-TO                         (0,+2)

  do Format-DateTime($ThruDate, $out, {DEFDATE}, '', '')
  print $out                        (0,+1)

  print $VETS100-SUBAGENCY                  (+2,1)

  print &E2.Descr                           (+1,1)

  print $VETS100-NOEMPS                     (+2,53)

  print $VETS100-NEWHIRES                                             (0,94)

  print $VETS100-PATCOB                     (+2,24)
  print $VETS100-VIETNAM                    (0,72)

  print $VETS100-VIETNAM                    (0,110)
  print $VETS100-TOTAL                      (0,129)

  print $VETS100-CATEGORY                   (+1,24)
  print $VETS100-DISABLED                   (0,53)
  print $VETS100-ERA                        (0,72)

  print $VETS100-DISABLED                   (0,91)
  print $VETS100-ERA                        (0,110)
  print $VETS100-VET2                       (0,129)

  print $VETS100-VET1                       (+1,53)
  print $VETS100-VET1                       (0,72)

  print $VETS100-VET1                       (0,91)
  print $VETS100-VET1                       (0,110)
  print $VETS100-NONVET                     (0,129)

 When = 1

  print $VETS100-VETS100                    ()      center

  print $VETS100-AGCYTOT                    (+2,)   center

  let $GCity   = rtrim(&G.City,' ')
  let $GCounty = rtrim(&G.County,' ')

  print &G.Descr                            (+2,1)
  print &G.Address1                         (+1,1)
  print $GCity                              (+1,1)
  print $GCounty                            (0,+4)
  print &G.State                            (0,+4)
  print &G.POSTAL                              (0,+2)

  print $VETS100-FEIN                       (+2,1)
  print &G.Federal_EIN                      ()      edit 099999999

  print $VETS100-PERIOD                     (+3,73)
  do Format-DateTime($FromDate, $out, {DEFDATE}, '', '')
  print $out                        ()

  print $VETS100-TO                         (0,+2)

  do Format-DateTime($ThruDate, $out, {DEFDATE}, '', '')
  print $out                        (0,+1)

  print $VETS100-NOEMPS                     (+4,53)

  print $VETS100-NEWHIRES                                             (0,94)

  print $VETS100-PATCOB                     (+2,24)
  print $VETS100-VIETNAM                    (0,72)

  print $VETS100-VIETNAM                    (0,110)
  print $VETS100-TOTAL                      (0,129)

  print $VETS100-CATEGORY                   (+1,24)
  print $VETS100-DISABLED                   (0,53)
  print $VETS100-ERA                        (0,72)

  print $VETS100-DISABLED                   (0,91)
  print $VETS100-ERA                        (0,110)
  print $VETS100-VET2                       (0,129)

  print $VETS100-VET1                       (+1,53)
  print $VETS100-VET1                       (0,72)

  print $VETS100-VET1                       (0,91)
  print $VETS100-VET1                       (0,110)
  print $VETS100-NONVET                     (0,129)

 end-Evaluate
end-heading

begin-procedure Init-Report
  do Stdapi-Init

  let $ReportID = 'FGHR013A'
  do Get-Report-Language
  let $ReportTitle  = $VETS100-TITLE

  display $ReportTitle

  if $prcs_process_instance = ''
    do Ask-Agency
  else
    do Select-Parameters
  end-if
  Show 'Report: ' $ReportID
  Show 'OPRID: '  $prcs_oprid
  Show 'Run ID: ' $Prcs_Run_Cntl_ID
  

  Let $Agency = &RUN_CNTL_FG.COMPANY
 
  Let $FromDate = &RUN_CNTL_FG.FROMDATE
  Let $ThruDate = &RUN_CNTL_FG.THRUDATE
  Show 'Company: ' $Agency
 
  show 'fromdate: ' $FromDate
  show 'ThruDate: ' $ThruDate
  do Init-Array

end-procedure

!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from VETS100 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation ('VETS100')

  do Get_Field_Information ('FGHR013A', 'SUB_TITLE',      $FGHR013A-SUB,           #CW)
  do Get_Field_Information ('VETS100',  'REPORT_TITLE',   $VETS100-TITLE,          #CW)
  do Get_Field_Information ('VETS100',  'VETS100',        $VETS100-VETS100,        #CW)
  do Get_Field_Information ('VETS100',  'FEIN',           $VETS100-FEIN,           #CW)
  do Get_Field_Information ('VETS100',  'PERIOD',         $VETS100-PERIOD,         #CW)
  do Get_Field_Information ('VETS100',  'TO',             $VETS100-TO,             #CW)
  do Get_Field_Information ('VETS100',  'SUBAGENCY',      $VETS100-SUBAGENCY,      #CW)
  do Get_Field_Information ('VETS100',  'NOEMPS',         $VETS100-NOEMPS,         #CW)
  do Get_Field_Information ('VETS100',  'NEWHIRES',       $VETS100-NEWHIRES,       #CW)
  do Get_Field_Information ('VETS100',  'PATCOB',         $VETS100-PATCOB,         #CW)
  do Get_Field_Information ('VETS100',  'VIETNAM',        $VETS100-VIETNAM,        #CW)
  do Get_Field_Information ('VETS100',  'TOTAL',          $VETS100-TOTAL,          #CW)
  do Get_Field_Information ('VETS100',  'CATEGORY',       $VETS100-CATEGORY,       #CW)
  do Get_Field_Information ('VETS100',  'DISABLED',       $VETS100-DISABLED,       #CW)
  do Get_Field_Information ('VETS100',  'VET1',           $VETS100-VET1,           #CW)
  do Get_Field_Information ('VETS100',  'VET2',           $VETS100-VET2,           #CW)
  do Get_Field_Information ('VETS100',  'ERA',            $VETS100-ERA,            #CW)
  do Get_Field_Information ('VETS100',  'NONVET',         $VETS100-NONVET,         #CW)
  do Get_Field_Information ('VETS100',  'AGCYTOT',        $VETS100-AGCYTOT,        #CW)

End-Procedure

begin-procedure Get-Values
  do Get-In-Agency
end-procedure

begin-procedure Init-Array

  create-array name=VETarray size=9 field=count:number:6 field=total:number:6
               field=label:char
  Do Read-translate-label
  move 53 to #startCol  !starting position of first column total
  move 19 to #len       !column width for printing each total
end-procedure


begin-procedure Read-translate-label

begin-SELECT
X.FIELDNAME
X.FIELDVALUE

  let $FieldName = &X.FIELDNAME
  let $FieldValue = &X.FIELDVALUE
  do Read-Translate-Table
  if ascii(&X.fieldvalue) < 58
    EXIT-SELECT
  else
    add 1 to #i
    PUT $XlatShortName INTO VETARRAY(#I) LABEL
  end-if
from  PSXLATITEM X
where X.FIELDNAME   = 'GVT_PATCOB_CD'
  and X.EFFDT =
      (SELECT MAX(X2.EFFDT)
       from   PSXLATITEM X2
       where  X2.FIELDNAME  = 'GVT_PATCOB_CD'
         and  X2.FIELDVALUE = X.FIELDVALUE
         and  X2.EFFDT     <= $ThruDate)
  and X.EFF_STATUS = 'A'
order by X.FIELDVALUE DESC
end-SELECT
put 'TOTAL' into VETarray(8) label
end-procedure

begin-procedure Company-info
begin-SELECT               !Retrieve Parent Agency/Company's descriptive data
G.COMPANY
  move &G.Company to $Agency
G.DESCR,
G.ADDRESS1,
G.CITY,
G.COUNTY,
G.STATE,
G.POSTAL,
G.FEDERAL_EIN

FROM  PS_COMPANY_TBL G
WHERE G.COMPANY    = $InAgency
  AND G.EFF_STATUS = 'A'
  AND G.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_COMPANY_TBL
       WHERE  COMPANY = G.COMPANY
         AND  EFFDT  <= $ThruDate)
end-SELECT
end-procedure


Begin-Procedure Get-Sub-Agency

begin-SELECT
DISTINCT(E.GVT_SUB_AGENCY)      &Gvt_Sub_Agency

   move &Gvt_Sub_Agency to $GVTSA
   do Employees
   do New-Hires
   do Print-Report              !Print last Establishment's report
   do Reset-Array

FROM  PS_GVT_SUBAGCY_TBL E
WHERE E.COMPANY  = $Agency
  AND E.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_GVT_SUBAGCY_TBL
       WHERE  COMPANY = E.COMPANY
       and    GVT_SUB_AGENCY = E.GVT_SUB_AGENCY
       AND  EFFDT  <= $ThruDate)
end-SELECT
end-procedure



Begin-Procedure Employees
begin-SELECT
B.GVT_PATCOB_CD
D.MILITARY_STATUS
D.DISABLED_VET
COUNT(*)

  Evaluate &B.Gvt_Patcob_Cd
    When = 'T'
      move 1 to #PATCOBrow
      break
    When = 'P'
      move 2 to #PATCOBrow
      break
    When = 'O'
      move 3 to #PATCOBrow
      break
    When = 'M'
      move 4 to #PATCOBrow
      break
    When = 'C'
      move 5 to #PATCOBrow
      break
    When = 'B'
      move 6 to #PATCOBrow
      break
    When = 'A'
      move 7 to #PATCOBrow
      break
  End-Evaluate

  if &D.DISABLED_VET = 'Y'
    ARRAY-ADD 1 to VETARRAY(#PATCOBROW) count (1)
    ARRAY-ADD 1 to VETARRAY(8) count (1)
    ARRAY-ADD 1 to VETARRAY(#PATCOBROW) TOTAL (1)
    ARRAY-ADD 1 to VETARRAY(8) TOTAL (1)
  end-if

  if &D.Military_Status = 'V'       !Viet Nam Veteran
     and &D.DISABLED_VET <> 'Y'
    ARRAY-ADD 1 to VETARRAY(#PATCOBROW) count (2)
    ARRAY-ADD 1 to VETARRAY(8) count (2)
    ARRAY-ADD 1 to VETARRAY(#PATCOBROW) TOTAL (2)
    ARRAY-ADD 1 to VETARRAY(8) TOTAL (2)
  end-if

FROM PS_PERSONAL_DT_FST A,
PS_JOBCODE_TBL   B,
PS_JOB           C,
PS_EMPLOYEES     D

WHERE C.REG_TEMP = 'R'
  AND (D.DISABLED_VET ='Y'
   OR  D.MILITARY_STATUS <> 'X')
  AND B.GVT_PATCOB_CD NOT BETWEEN '1' AND '8'
  AND A.EMPLID = C.EMPLID
  AND B.COMPANY = $Agency
  AND B.GVT_SUB_AGENCY = $GVTSA
  AND B.JOBCODE = C.JOBCODE
  AND D.EFFSEQ =
      (SELECT MAX(D2.EFFSEQ)
       FROM PS_EMPLOYEES D2
       WHERE D2.EMPLID = D.EMPLID
         AND D2.EMPL_RCD = D.EMPL_RCD
         AND D2.EFFDT = D.EFFDT)
  AND C.EFFSEQ =
      (SELECT MAX(C2.EFFSEQ)
       FROM PS_JOB C2
       WHERE C2.EMPLID = C.EMPLID
         AND C2.EMPL_RCD = C.EMPL_RCD
         AND C2.EFFDT = C.EFFDT)
  AND B.EFFDT =
      (SELECT MAX(B1.EFFDT)
       FROM PS_JOBCODE_TBL B1
       WHERE B1.JOBCODE = B.JOBCODE
       AND B1.EFFDT <= C.EFFDT)
  AND ((C.EMPL_STATUS = 'A'
          AND C.EFFDT <= $ThruDate)
        OR (C.EMPL_STATUS <> 'A'
          AND C.EFFDT BETWEEN $FromDate AND $ThruDate)
        OR (C.EMPL_STATUS IN ('L', 'S', 'P')
          AND C.EFFDT <= $FromDate))
GROUP BY B.GVT_PATCOB_CD, D.DISABLED_VET, D.MILITARY_STATUS
ORDER BY B.GVT_PATCOB_CD
end-SELECT
end-procedure

Begin-Procedure New-Hires

  move '1' to $Year4
  move '-' to $DDelimiter

  do Format-DateTime($ThruDate, $out, {DEFYMD}, '', '')
  Do Convert-To-DTU-Date($out,$dtu_out)
  do dtu-add-months($dtu_out, -12, $dtu_prev_12_mo)
  Do Convert-From-DTU-Date($dtu_prev_12_mo,$prev_12_mo)

  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($prev_12_mo, $prev_12_mo, {DEFYMD}, '', 'native')
begin-SELECT
BB.GVT_PATCOB_CD
DD.MILITARY_STATUS
DD.DISABLED_VET

  Evaluate &BB.Gvt_Patcob_Cd
    When = 'T'
      move 1 to #PATCOBrow
      break
    When = 'P'
      move 2 to #PATCOBrow
      break
    When = 'O'
      move 3 to #PATCOBrow
      break
    When = 'M'
      move 4 to #PATCOBrow
      break
    When = 'C'
      move 5 to #PATCOBrow
      break
    When = 'B'
      move 6 to #PATCOBrow
      break
    When = 'A'
      move 7 to #PATCOBrow
      break
  End-Evaluate

  if &DD.DISABLED_VET = 'Y'
    ARRAY-ADD 1 to VETARRAY(#PATCOBROW) count (3)
    ARRAY-ADD 1 to VETARRAY(8)      count (3)
    ARRAY-ADD 1 to VETARRAY(#PATCOBROW) TOTAL (3)
    ARRAY-ADD 1 to VETARRAY(8)      TOTAL (3)
  end-if

  if &DD.Military_Status = 'V'       !Viet Nam Veteran
    ARRAY-ADD 1 to VETARRAY(#PATCOBROW) count (4)
    ARRAY-ADD 1 to VETARRAY(8)      count (4)
    ARRAY-ADD 1 to VETARRAY(#PATCOBROW) TOTAL (4)
    ARRAY-ADD 1 to VETARRAY(8)      TOTAL (4)

  end-if

  ARRAY-ADD   1 to VETARRAY(#PATCOBROW) count (5)
  ARRAY-ADD   1 to VETARRAY(8)      count (5)
  ARRAY-ADD   1 to VETARRAY(#PATCOBROW) TOTAL (5)
  ARRAY-ADD   1 to VETARRAY(8)      TOTAL (5)


FROM PS_PERSONAL_DT_FST AA,
PS_JOBCODE_TBL   BB,
PS_JOB           CC,
PS_EMPLOYEES     DD


WHERE CC.REG_TEMP = 'R'
  AND BB.GVT_PATCOB_CD NOT BETWEEN '1' AND '8'
  AND AA.EMPLID = CC.EMPLID
  AND BB.COMPANY = $Agency
  AND BB.GVT_SUB_AGENCY = $GVTSA
  AND BB.JOBCODE = CC.JOBCODE
  AND CC.ACTION IN ('HIR','REH')
  AND DD.EFFDT =
          (SELECT MAX(EFFDT)
           FROM PS_EMPLOYEES DD1
           WHERE AA.EMPLID = DD1.EMPLID
           AND DD1.EFFDT BETWEEN $prev_12_mo AND $ThruDate)
  AND CC.EFFDT =
          (SELECT MAX(EFFDT)
           FROM PS_JOB
           WHERE EMPLID = CC.EMPLID
           AND EMPL_RCD = CC.EMPL_RCD
           AND EFFDT BETWEEN $prev_12_mo AND $ThruDate)
  AND BB.EFFDT =
      (SELECT MAX(BB1.EFFDT)
       FROM PS_JOBCODE_TBL BB1
       WHERE BB1.JOBCODE = BB.JOBCODE
       AND BB1.EFFDT <= CC.EFFDT)
  AND ((CC.EMPL_STATUS = 'A'
          AND CC.EFFDT <= $ThruDate)
        OR (CC.EMPL_STATUS <> 'A'
          AND CC.EFFDT BETWEEN $FromDate AND $ThruDate)
        OR (CC.EMPL_STATUS IN ('L', 'S', 'P')
          AND CC.EFFDT <= $FromDate))
end-SELECT

end-procedure

begin-procedure Print-Report

  do Sub-Agency-Info
  move 1 to #printrow
  while #printrow <= 8
    get $PCcatName from VETarray(#printrow) label
    print $PCcatName (+3,21)
    move #startCol to #col
    move 1 to #printcol
    while #printcol <= 5
      get #count from VETarray(#printrow) count(#printcol)
      do Format-Number(#count, $out, '999,999')
      print $out (0,#col)
      put 0 into VETarray(#printrow) count(#printcol)
      add #len to #col
      add 1 to #printcol
    end-while
    add 1 to #printrow
  end-while
  print ' ' (+1,)
  new-page
end-procedure

Begin-Procedure Sub-Agency-Info
begin-SELECT
E2.GVT_SUB_AGENCY
E2.DESCR

FROM  PS_GVT_SUBAGCY_TBL E2
WHERE E2.COMPANY = $Agency
  AND E2.GVT_SUB_AGENCY = $GVTSA
  AND E2.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_GVT_SUBAGCY_TBL
       WHERE COMPANY = E2.COMPANY
       AND   GVT_SUB_AGENCY  =  E2.GVT_SUB_AGENCY
       AND   EFFDT  <= $ThruDate)
end-SELECT
end-procedure

begin-procedure Reset-Array
  move 0 to #PATCOBrow            !Reset array
  while #PATCOBrow <= 8
    move 0 to #PATCOBcol
    while #PATCOBcol <= 5
      put 0 into VETarray(#PATCOBrow) count(#PATCOBcol)
      add 1 to #PATCOBcol
    end-while
    add 1 to #PATCOBrow
  end-while
end-procedure

begin-procedure Agency-Totals
  move 1 to #printrow
  while #printrow <= 8
    get $PCcatName from VETarray(#printrow) label
    print $PCcatName (+3,21)
    move #startCol to #col
    move 1 to #printcol
    while #printcol <= 5
      get #total from VETarray(#printrow) total(#printcol)
      do Format-Number(#total, $out, '999,999')
      print $out (0,#col)
      put 0 into VETarray(#printrow) total(#printcol)
      add #len to #col
      add 1 to #printcol
    end-while
    add 1 to #printrow
  end-while



end-procedure

#include 'stdapi.sqc'    !Routine to update run status
#include 'fgrunctl.sqc'  !Get run control parameter values
#include 'fggetval.sqc'  !Get values mask routines
#include 'datemath.sqc'  !Date Utilities
#include 'fgaskco.sqc'   !Ask Agency from User
#include 'reset.sqc'     !Reset printer procedure
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#Include 'readxlat.sqc'  !Read-Translate-Table procedure

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
