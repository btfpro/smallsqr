!**********************************************************************!
!  gpussttx:  Quarterly State Tax Report - Employee Detail (USA)       !
!**********************************************************************!
!                                                                      !
!               Confidentiality Information:                           !
!                                                                      !
!                                                                      !
! This module contains confidential and proprietary information        !
! of Oracle; it is not to be copied, reproduced, or transmitted        !
! in any form, by any means, in whole or in part, nor is it to         !
! be used for any purpose other than that for which it is              !
! expressly provided under the applicable license agreement.           !
!                                                                      !
! Copyright (C) 2006 Oracle. All Rights Reserved.                      !
!                                                                      !
!**********************************************************************!
!                                                                      !
!          $Date:  2006/07/21:01:59:11                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      !
!**********************************************************************!



#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !printer and page-size initialization
#Include 'usarpt.sqc' !USA-specific variables

begin-report
  do Init-Report
  do Process-Main
  do Stdapi-Term
  do delete-tmp
end-report

begin-procedure Init-Report
  move 'GPUSSTTX' to $ReportID
  move 'Quarterly State Tax Report - Employee Detail' to $ReportTitle
  display $ReportTitle

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init
  do Select-Parameters
  do Initialize

end-procedure

begin-procedure Initialize
  move $PeriodEndDate to $AsOfDate  !for included procedures
end-procedure


begin-heading 17
  let $tempState =  rtrim($State, ' ')
  if $tempState = $priorState
   if $Company <> $priorCompany
     let $Change = 'Y'
   end-if
  end-if
  #Include 'stdhdg02.sqc'  !standard heading 1
  if $Company <> $priorCompany
    do Get-Company-Data
    move $Company to $priorCompany
    move ''       to $priorState  !force change in State below
  end-if

  if rtrim($State, ' ') <> $priorState  or $Change = 'Y'
    do Get-State-Tax-Data  !Employer_ID_SWT, Employer_ID_SUT, State Name
    let $priorState = rtrim($State, ' ')

    move 0 to #PAGE_NUM
    let $Change = 'N'
  end-if

  add 1 to #PAGE_NUM
  print $StateName         (5,2)
  do Format-DateTime($PeriodEndDate, $out, {DEFDATE}, '', '')
  print $out       (0,53)
  unstring $RptQtrYr  by '.' into $year $zeros
  Let $year = Ltrim($year, '0')
  print $year     (0, 80)
  do Format-Number(#PAGE_NUM, $out, '999')
  print $CompanyName       (+3,12)
  print $CompnyAdd1       (+1,12)
  let $field = RTRIM($CompnyCity, ' ')
  print $field             (+1,12)                    !City
  print &CT.State          ()      edit ,bxx

  move &CT.Postal      to $Zip
  move $Zip            to $ZipExtsn ~~~~~~xxxx

  if instr($Zip,'-',6) = 0 and $ZipExtsn <> '    '
    let $Zip = substr($Zip,1,5) || '-' || substr($Zip,6,4)
  end-if

  move $Zip         to $ZipExtsn ~~~~~xxxxx

  print $Zip               (0,+2)
  print 'Employer ID'      (+2,12)
  if RTRIM(&GPUS_SUT_EIN, ' ') <> ''
    print &GPUS_SUT_EIN (+0,+2)
  else
    print &GPUS_SWT_EIN (+0,+2)
  end-if
  print &GPUS_SUT_EXP_RATE (+0,+2) edit b9.999
  print ' '                                    (+3,2)
  print ' '                                    (0,15)
  print '------- Withholding -------'          (0,40)
  print '----- Unemployment -------------------------'      (0,69)
  print '--------  Disability  --------'       (0,114)
  print '--------  VPDI / EIC  --------'       (0,145)
  print 'SSN'                                  (+1,2)
  print 'Name'                                 (0,15)
  print '    TxGrs QTD       Tax QTD'          (0,40)
  print '    TxGrs QTD NL  Gross QTD       Tax QTD'         (0,69)
  print '    TxGrs QTD       Tax QTD'          (0,114)
  print '    TxGrs QTD       Tax QTD'          (0,145)
end-heading


begin-footing 11
  let #PgLinePos = 1
  let #DetLinePos = 1
  print 'Page Total'       (#PgLinePos,22)
  do Format-Number(#PgTotTxGrsSWT, $out, '9999999999.99mi')
  print $out               (#PgLinePos,40)
  do Format-Number(#PgTotTaxSWT, $out, '9999999999.99mi')
  print $out               (#PgLinePos,54)
  do Format-Number(#PgTotTxGrsSUT, $out, '9999999999.99mi')
  print $out               (#PgLinePos,69)
  do Format-Number(#PgTotNlGrsSUT, $out, '9999999999.99mi')
  print $out               (#PgLinePos,83)
  do Format-Number(#PgTotTaxSUT, $out, '9999999999.99mi')
  print $out               (#PgLinePos,97)
  print 'ER'               (#PgLinePos,+0)
  add 1 to #PgLinePos
  if #PgTotTxGrsSUTEE <> 0 or #PgTotTaxSUTEE <> 0
    do Format-Number(#PgTotTxGrsSUTEE, $out, '9999999999.99mi')
    print $out             (#PgLinePos,69)
    do Format-Number(#PgTotNlGrsSUTEE, $out, '9999999999.99mi')
    print $out             (#PgLinePos,83)
    do Format-Number(#PgTotTaxSUTEE, $out, '9999999999.99mi')
    print $out             (#PgLinePos,97)
    print 'EE'             (#PgLinePos,+0)
    add 1 to #PgLinePos
  end-if
 if #PgTotTxGrsSUTSp <> 0 or #PgTotTaxSUTSp <> 0
    do Format-Number(#PgTotTxGrsSUTSp, $out, '9999999999.99mi')
    print $out               (#PgLinePos,69)
    do Format-Number(#PgTotNlGrsSUTSp, $out, '9999999999.99mi')
    print $out               (#PgLinePos,83)
    do Format-Number(#PgTotTaxSUTSp, $out, '9999999999.99mi')
    print $out               (#PgLinePos,97)
    print 'SP'               (#PgLinePos,+0)
    add 1 to #PgLinePos
  end-if
  do Format-Number(#PgTotTxGrsSDI, $out, '9999999999.99mi')
  print $out               (1,114)
  do Format-Number(#PgTotTaxSDI, $out, '9999999999.99mi')
  print $out               (1,128)
  do Format-Number(#PgTotTxGrsSDIE, $out, '9999999999.99mi')
  print $out               (2,114)
  do Format-Number(#PgTotTaxSDIE, $out, '9999999999.99mi')
  print $out               (2,128)
  print 'ER'               (2,+0)
  move #PgLinePos to #PgLineMax
  let #PgLinePos = 1
  if #PgTotTxGrsVPDIEE <> 0 or #PgTotTaxVPDIEE <> 0
    do Format-Number(#PgTotTxGrsVPDIEE, $out, '9999999999.99mi')
    print $out               (#PgLinePos,145)
    do Format-Number(#PgTotTaxVPDIEE, $out, '9999999999.99mi')
    print $out               (#PgLinePos,159)
    print 'EE V'             (#PgLinePos,+0)
    add 1 to #PgLinePos
  end-if
  if #PgTotTxGrsVPDI <> 0 or #PgTotTaxVPDI <> 0
    do Format-Number(#PgTotTxGrsVPDI, $out, '9999999999.99mi')
    print $out               (#PgLinePos,145)
    do Format-Number(#PgTotTaxVPDI, $out, '9999999999.99mi')
    print $out               (#PgLinePos,159)
    print 'ER V'             (#PgLinePos,+0)
    add 1 to #PgLinePos
  end-if
  if #PgTotTxGrsEIC <> 0 or #PgTotTaxEIC <> 0
    do Format-Number(#PgTotTxGrsEIC, $out, '9999999999.99mi')
    print $out               (#PgLinePos,145)
    do Format-Number(#PgTotTaxEIC, $out, '9999999999.99mi')
    print $out               (#PgLinePos,159)
    print 'EIC'              (#PgLinePos,+0)
    add 1 to #PgLinePos
  end-if

  if #PgLinePos > #PgLineMax
    move #PgLinePos to #PgLineMax
  end-if

  move 0 to #PgTotTxGrsSWT
  move 0 to #PgTotTaxSWT
  move 0 to #PgTotTxGrsSUT
  move 0 to #PgTotNlGrsSUT
  move 0 to #PgTotTaxSUT
  move 0 to #PgTotTxGrsSDI
  move 0 to #PgTotTaxSDI
  move 0 to #PgTotTxGrsSDIE
  move 0 to #PgTotTaxSDIE
  move 0 to #PgTotTxGrsSUTEE
  move 0 to #PgTotNlGrsSUTEE
  move 0 to #PgTotTaxSUTEE
  move 0 to #PgTotTxGrsSUTSp
  move 0 to #PgTotNlGrsSUTSp
  move 0 to #PgTotTaxSUTSp
  move 0 to #PgTotTxGrsVPDIEE
  move 0 to #PgTotTaxVPDIEE
  move 0 to #PgTotTxGrsVPDI
  move 0 to #PgTotTaxVPDI
  move 0 to #PgTotTxGrsEIC
  move 0 to #PgTotTaxEIC

  if $Print_State_Totals = 'Y'
    move #PgLineMax to #PgLinePos
    add 1 to #PgLinePos
    print 'State Total'      (#PgLinePos,21)
    do Format-Number(#StTotTxGrsSWT, $out, '9999999999.99mi')
    print $out               (#PgLinePos,40)
    do Format-Number(#StTotTaxSWT, $out, '9999999999.99mi')
    print $out               (#PgLinePos,54)
    do Format-Number(#StTotTxGrsSUT, $out, '9999999999.99mi')
    print $out               (#PgLinePos,69)
    do Format-Number(#StTotNlGrsSUT, $out, '9999999999.99mi')
    print $out               (#PgLinePos,83)
    do Format-Number(#StTotTaxSUT, $out, '9999999999.99mi')
    print $out               (#PgLinePos,97)
    print 'ER'               (#PgLinePos,+0)
    do Format-Number(#StTotTxGrsSDI, $out, '9999999999.99mi')
    print $out               (#PgLinePos,114)
    do Format-Number(#StTotTaxSDI, $out, '9999999999.99mi')
    print $out               (#PgLinePos,128)
    add 1 to #PgLinePos
    do Format-Number(#StTotTxGrsSDIE, $out, '9999999999.99mi')
    print $out               (#PgLinePos,114)
    do Format-Number(#StTotTaxSDIE, $out, '9999999999.99mi')
    print $out               (#PgLinePos,128)
    print 'ER'               (#PgLinePos,+0)
    if #StTotTxGrsSUTEE <> 0 or #StTotTaxSUTEE <> 0
      do Format-Number(#StTotTxGrsSUTEE, $out, '9999999999.99mi')
      print $out             (5,69)
      print $out             (#PgLinePos,69)
      do Format-Number(#StTotNlGrsSUTEE, $out, '9999999999.99mi')
      print $out             (#PgLinePos,83)
      do Format-Number(#StTotTaxSUTEE, $out, '9999999999.99mi')
      print $out             (#PgLinePos,97)
      print 'EE'             (#PgLinePos,+0)
      add 1 to #PgLinePos
    end-if
    if #StTotTxGrsSUTSp <> 0 or #StTotTaxSUTSp <> 0
      do Format-Number(#StTotTxGrsSUTSp, $out, '9999999999.99mi')
      print $out             (#PgLinePos,69)
      do Format-Number(#StTotNlGrsSUTSp, $out, '9999999999.99mi')
      print $out             (#PgLinePos,83)
      do Format-Number(#StTotTaxSUTSp, $out, '9999999999.99mi')
      print $out             (#PgLinePos,97)
      print 'SP'             (#PgLinePos,+0)
    end-if
    move #PgLineMax to #PgLinePos
    add 1 to #PgLinePos
    if #StTotTxGrsVPDIEE <> 0 or #StTotTaxVPDIEE <> 0
      do Format-Number(#StTotTxGrsVPDIEE, $out, '9999999999.99mi')
      print $out               (#PgLinePos,145)
      do Format-Number(#StTotTaxVPDIEE, $out, '9999999999.99mi')
      print $out               (#PgLinePos,159)
      print 'EE V'             (#PgLinePos,+0)
      add 1 to #PgLinePos
    end-if
    if #StTotTxGrsVPDI <> 0 or #StTotTaxVPDI <> 0
      do Format-Number(#StTotTxGrsVPDI, $out, '9999999999.99mi')
      print $out               (#PgLinePos,145)
      do Format-Number(#StTotTaxVPDI, $out, '9999999999.99mi')
      print $out               (#PgLinePos,159)
      print 'ER V'             (#PgLinePos,+0)
      add 1 to #PgLinePos
    end-if
    if #StTotTxGrsEIC <> 0 or #StTotTaxEIC <> 0
      do Format-Number(#StTotTxGrsEIC, $out, '9999999999.99mi')
      print $out               (#PgLinePos,145)
      do Format-Number(#StTotTaxEIC, $out, '9999999999.99mi')
      print $out               (#PgLinePos,159)
      print 'EIC'              (#PgLinePos,+0)
      add 1 to #PgLinePos
    end-if

    move 0 to #StTotTxGrsSWT
    move 0 to #StTotTaxSWT
    move 0 to #StTotTxGrsSUT
    move 0 to #StTotNlGrsSUT
    move 0 to #StTotTaxSUT
    move 0 to #StTotTxGrsSDI
    move 0 to #StTotTaxSDI
    move 0 to #StTotTxGrsSDIE
    move 0 to #StTotTaxSDIE
    move 0 to #StTotTxGrsSUTEE
    move 0 to #StTotNlGrsSUTEE
    move 0 to #StTotTaxSUTEE
    move 0 to #StTotTxGrsSUTSp
    move 0 to #StTotNlGrsSUTSp
    move 0 to #StTotTaxSUTSp
    move 0 to #StTotTxGrsVPDIEE
    move 0 to #StTotTaxVPDIEE
    move 0 to #StTotTxGrsVPDI
    move 0 to #StTotTaxVPDI
    move 0 to #StTotTxGrsEIC
    move 0 to #StTotTaxEIC
  end-if
end-footing

begin-procedure Process-Main
begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT


begin-SELECT
TMP.GPUS_YE_RPT_CO   () on-break print=never level=1
TMP.STATE     () on-break print=never level=2 after=After-State
TMP.EMPLID    () on-break print=never level=3 before=New-Employee
TMP.NATIONAL_ID
TMP.NAME
TMP.GPUS_TAX_CATEGORY
SUM(TMP.GPUS_TAX_GRS) &TMP.GPUS_TAX_GRS
SUM(TMP.GPUS_TAX_AMT)   &TMP.GPUS_TAX_AMT
SUM(TMP.GPUS_TAX_NL_GRS)  &TMP.GPUS_TAX_NL_GRS

  do Process-Tax-Balance

FROM  PS_GPUS_STTX_TMP TMP
 WHERE
   TMP.PROCESS_INSTANCE = #prcs_process_instance - 1
GROUP BY TMP.GPUS_YE_RPT_CO, TMP.STATE, TMP.NATIONAL_ID, TMP.NAME, TMP.EMPLID, TMP.GPUS_TAX_CATEGORY
ORDER BY TMP.GPUS_YE_RPT_CO, TMP.STATE, TMP.NATIONAL_ID, TMP.NAME, TMP.EMPLID, TMP.GPUS_TAX_CATEGORY
end-SELECT

  move 'Y' to $Print_State_Totals

end-procedure

begin-procedure New-Employee
  if &TMP.NATIONAL_ID <> $priorSSN
    next-listing need=2
    move &TMP.NATIONAL_ID  to $S123 xxx       !isolate first 3 digits
    if $S123 = &Temp_SSN_Mask or RTRIM(&TMP.NATIONAL_ID, ' ') = ''
      print 'Applied For' (1,2)
    else
      print &TMP.NATIONAL_ID       (1,2)  edit xxxbxxbxxxx
    end-if
    print &TMP.Name         (1,15,20)
    move &TMP.NATIONAL_ID to $priorSSN

    move &TMP.EmplID  to $EmplID
    move &TMP.Gpus_Ye_Rpt_Co to $Company
    let $State = rtrim(&TMP.State, ' ')
    let #DetLinePos = 1
    let #DetLinePos2 = 1
  else
    if &TMP.EmplID  <> $EmplID
     Let $sameSSN = 'Y'
    print &TMP.NATIONAL_ID       (+1,2)  edit xxxbxxbxxxx

    print &TMP.Name         (0,15,20)
        move &TMP.NATIONAL_ID to $priorSSN

        move &TMP.EmplID  to $EmplID
        move &TMP.Gpus_Ye_Rpt_Co to $Company
        let $State = rtrim(&TMP.State, ' ')
        let #DetLinePos = 1
    let #DetLinePos2 = 1
    end-if
  end-if
end-procedure

begin-procedure Process-Tax-Balance
  If $sameSSN <> 'Y'
  evaluate &TMP.GPUS_TAX_CATEGORY
    when = '02'                                         !Disability
      do Format-Number(&TMP.GPUS_TAX_GRS, $out, '9999999999.99mi')
      print $out             (1,114)
      do Format-Number(&TMP.GPUS_TAX_AMT, $out, '9999999999.99mi')
      print $out             (1,128)

      add &TMP.GPUS_TAX_GRS to #PgTotTxGrsSDI
      add &TMP.GPUS_TAX_GRS to #StTotTxGrsSDI
      add &TMP.GPUS_TAX_AMT to #PgTotTaxSDI
      add &TMP.GPUS_TAX_AMT to #StTotTaxSDI
    break

    when = '03'                                         !Disability Employer
      do Format-Number(&TMP.GPUS_TAX_GRS, $out, '9999999999.99mi')
      print $out             (1,114)
      do Format-Number(&TMP.GPUS_TAX_AMT, $out, '9999999999.99mi')
      print $out             (1,128)
      print 'ER'             (1,+0)

      add &TMP.GPUS_TAX_GRS to #PgTotTxGrsSDIE
      add &TMP.GPUS_TAX_GRS to #StTotTxGrsSDIE
      add &TMP.GPUS_TAX_AMT to #PgTotTaxSDIE
      add &TMP.GPUS_TAX_AMT to #StTotTaxSDIE
    break

    when = '01'                                                         !Withholding
      do Format-Number(&TMP.GPUS_TAX_GRS, $out, '9999999999.99mi')
      print $out             (1,40)
      do Format-Number(&TMP.GPUS_TAX_AMT, $out, '9999999999.99mi')
      print $out             (1,54)

      add &TMP.GPUS_TAX_GRS to #PgTotTxGrsSWT
      add &TMP.GPUS_TAX_GRS to #StTotTxGrsSWT
      add &TMP.GPUS_TAX_AMT   to #PgTotTaxSWT
      add &TMP.GPUS_TAX_AMT   to #StTotTaxSWT
    break


    when = '07'                                         !EIC IN
      do Format-Number(&TMP.GPUS_TAX_GRS, $out, '9999999999.99mi')
      print $out             (#DetLinePos2,145)
      do Format-Number(&TMP.GPUS_TAX_AMT, $out, '9999999999.99mi')
      print $out             (#DetLinePos2,159)
      print 'EIC'            (#DetLinePos2,+0)

      add &TMP.GPUS_TAX_GRS to #PgTotTxGrsEIC
      add &TMP.GPUS_TAX_GRS to #StTotTxGrsEIC
      add &TMP.GPUS_TAX_AMT   to #PgTotTaxEIC
      add &TMP.GPUS_TAX_AMT   to #StTotTaxEIC
      add 1            to #DetLinePos2

  end-evaluate
 else
  evaluate &TMP.GPUS_TAX_CATEGORY
         when = '02'                                         !Disability
           do Format-Number(&TMP.GPUS_TAX_GRS, $out, '9999999999.99mi')
           print $out             (+0,114)
           do Format-Number(&TMP.GPUS_TAX_AMT, $out, '9999999999.99mi')
           print $out             (0,128)

           add &TMP.GPUS_TAX_GRS to #PgTotTxGrsSDI
           add &TMP.GPUS_TAX_GRS to #StTotTxGrsSDI
           add &TMP.GPUS_TAX_AMT to #PgTotTaxSDI
           add &TMP.GPUS_TAX_AMT to #StTotTaxSDI
         break

         when = '03'                                         !Disability Employer
           do Format-Number(&TMP.GPUS_TAX_GRS, $out, '9999999999.99mi')
           print $out             (+0,114)
           do Format-Number(&TMP.GPUS_TAX_AMT, $out, '9999999999.99mi')
           print $out             (0,128)
           print 'ER'             (0,+0)

           add &TMP.GPUS_TAX_GRS to #PgTotTxGrsSDIE
           add &TMP.GPUS_TAX_GRS to #StTotTxGrsSDIE
           add &TMP.GPUS_TAX_AMT to #PgTotTaxSDIE
           add &TMP.GPUS_TAX_AMT to #StTotTaxSDIE
         break

         when = '01'                                                         !Withholding
           do Format-Number(&TMP.GPUS_TAX_GRS, $out, '9999999999.99mi')
           print $out             (+0,40)
           do Format-Number(&TMP.GPUS_TAX_AMT, $out, '9999999999.99mi')
           print $out             (0,54)

           add &TMP.GPUS_TAX_GRS to #PgTotTxGrsSWT
           add &TMP.GPUS_TAX_GRS to #StTotTxGrsSWT
           add &TMP.GPUS_TAX_AMT   to #PgTotTaxSWT
           add &TMP.GPUS_TAX_AMT   to #StTotTaxSWT
         break


         when = '07'                                         !EIC IN
           do Format-Number(&TMP.GPUS_TAX_GRS, $out, '9999999999.99mi')
           print $out             (+0,145)
           do Format-Number(&TMP.GPUS_TAX_AMT, $out, '9999999999.99mi')
           print $out             (0,159)
           print 'EIC'            (0,+0)

           add &TMP.GPUS_TAX_GRS to #PgTotTxGrsEIC
           add &TMP.GPUS_TAX_GRS to #StTotTxGrsEIC
           add &TMP.GPUS_TAX_AMT   to #PgTotTaxEIC
           add &TMP.GPUS_TAX_AMT   to #StTotTaxEIC
           add 1            to #DetLinePos2

   end-evaluate
   move 'N' to  $sameSSN
 end-if

end-procedure

begin-procedure After-State
  move 'Y' to $Print_State_Totals
  new-page
  move 'N' to $Print_State_Totals
  move '' to $priorSSN
  move '' to $priorState
end-procedure

begin-procedure delete-tmp
begin-Sql
delete from PS_GPUS_STTX_TMP
  WHERE PROCESS_INSTANCE   = #prcs_process_instance - 1
end-SQL
end-procedure

#Include 'gpuspctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'gpuscodt.sqc'  !Get-Company-Data procedure
#Include 'gpusstdt.sqc'  !Get-State-Tax-Data procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
