!***********************************************************************
! BAS703C: Event Rules - Benefits Billing
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:08:38:00                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'  !Set environment

Begin-Setup
  #Include 'ptpsp125.sqc'
End-Setup

#define  MAX_LINES   79     !Maximum print lines for portrait mode

#define col_sep            1   !Column Separator

#define col_col4           4   !positions
#define col_col6           6   !positions
#define col_col8           8   !positions
#define col_col10         10   !positions
#define col_col11         11   !positions
#define col_col19         19   !positions
#define col_col101       101   !positions

!**********************************
Begin-Program
!**********************************

  do Init-Report

  display 'Report Begin at: ' noline
  do display-time

  do Process-Main

  display 'Report Ended at: ' noline
  do display-time

  do Reset
  do StdAPI-Term

End-Program

!**********************************
Begin-Procedure Init-Report
!**********************************

  do Init-DateTime
  do Get-Current-DateTime
  do Init-Number
  do StdAPI-Init

  let $ReportID    = 'BAS703C'
  do Get-Report-Language
  move $BAS703C-REPORTTITLE TO $ReportTitle
  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ''

  let #CurRptLine     = {MAX_LINES} + 1
  let $FirstPageFlag  = 'YES'
  let $PriorEventRule = ''

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-Values
  end-if

End-Procedure

!***************************************
Begin-Procedure Ask-Values
!***************************************

  do Ask-As-Of-Date
  !We will need to manipulate $AsOfDate to control other std procedures such
  !as Read-Translate-Table, Get-Benefit-Name, and Get-Deduction-Name.
  !Therefore we will copy this into $UserAsOfDate for safekeeping...
  let $UserAsOfDate = $AsOfDate

  do Ask-Event-Rules

End-Procedure

!***************************************
Begin-Procedure Get-Values
!***************************************

  do Select-Parameters
  do Get-As-Of-Date
  let $UserAsOfDate = $AsOfDate

  do Get-Event-Rules

End-Procedure

!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from BAS703C program IDS
do Init_Report_Translation($ReportID, $Language_Cd)
do Append_Report_Translation('BEN1')

do Get_Field_Information ('BAS703C', 'REPORT_TITLE',    $BAS703C-REPORTTITLE,    #CW)
do Get_Field_Information ('BAS703C', 'EVENT_RULE_DEF',  $BAS703C-EVENT-RULE-DEF, #CW)
do Get_Field_Information ('BAS703C', 'BILLING_ACTN_DT', $BAS703C-BILLING-ACTN-DT,#CW)
do Get_Field_Information ('BAS703C', 'PCT',             $BAS703C-PCT,            #CW)
do Get_Field_Information ('BAS703C', 'USAGE',           $BAS703C-USAGE,          #CW)
do Get_Field_Information ('BAS703C', 'ACTION',          $BAS703C-ACTION,         #CW)
do Get_Field_Information ('BAS703C', 'DT_CD_DELAY_PD',  $BAS703C-DT-CD-DELAY-PD, #CW)
do Get_Field_Information ('BAS703C', 'CALC',            $BAS703C-CALC,           #CW)
do Get_Field_Information ('BAS703C', 'QUALIFIER',       $BAS703C-QUALIFIER,      #CW)
do Get_Field_Information ('BAS703C', 'OPEN',            $BAS703C-OPEN,           #CW)
do Get_Field_Information ('BAS703C', 'EFF_DATE',        $BAS703C-EFF-DATE,       #CW)
do Get_Field_Information ('BAS703C', 'EVENT_RULE',      $BAS703C-EVENT-RULE,     #CW)
do Get_Field_Information ('BAS703C', 'NONE',            $BAS703C-NONE,           #CW)
do Get_Field_Information ('BAS703C', 'DAY',             $BAS703C-DAY,            #CW)
do Get_Field_Information ('BAS703C', 'MOS',             $BAS703C-MOS,            #CW)

do Get_Field_Information ('BAS703C', 'OPEN',            $BAS703C-OPEN,           #CW)


do Get_Field_Information ('BEN1',    'EVENT',           $BEN1-EVENT,             #CW)
do Get_Field_Information ('BEN1',    'CLASS',           $BEN1-CLASS,             #CW)
do Get_Field_Information ('BEN1',    'BILLING',         $BEN1-BILLING,           #CW)
do Get_Field_Information ('BEN1',    'RATE',            $BEN1-RATE,              #CW)
do Get_Field_Information ('BEN1',    'FLAT',            $BEN1-FLAT,              #CW)
do Get_Field_Information ('BEN1',    'DESCR',           $BEN1-DESCR,             #CW)
do Get_Field_Information ('BEN1',    'AMT',             $BEN1-AMT,               #CW)

End-Procedure

!***************************************
Begin-Procedure Ask-Event-Rules
!***************************************

  input $Event_Rules_Id
    'Enter Event Rule ID to report (or leave blank for ALL Rules)'
  let $Event_Rules_Id = RTRIM(UPPER($Event_Rules_Id), ' ')

  if ($Event_Rules_Id = '')
    let $Event_Rules_Id = '%'
  end-if

End-Procedure

!***************************************
Begin-Procedure Print-Main-Heading
!***************************************

  if ($FirstPageFlag <> 'YES')
    new-page
  end-if

#Include 'stdhdgtr.sqc'     !Standard Report header

  let #CurRptLine = 5

!*** 'Event Rule Definitions as of: '
  print $BAS703C-EVENT-RULE-DEF       (+1,1)
  do Format-DateTime($UserAsOfDate, $OutDt, {DEFDATE}, '', '')
  print $OutDt                              ()

!----- Heading line 1
  print '|'                        (+2,1,{col_sep})
  print '-'                        (0,+{col_sep},{col_col101})    FILL
  print '|'                        (0,105)

!*** print '| Event  Class                  | Billing    Billing-Action-Date '  (+2,1)
!*** print '| Pct  Rate       Rate | Flat Rate     |'                           ()
!----- Heading line 2
  print '|'                        (+1,1,{col_sep})
  print $BEN1-EVENT                (0,+{col_sep},{col_col6})
  print $BEN1-CLASS                (0,+{col_sep},{col_col11})
  print ''                         (0,+{col_sep},{col_col10})
  print '|'                        (0,33)
  print $BEN1-BILLING              (0,+{col_sep},{col_col10})
  print $BAS703C-BILLING-ACTN-DT   (0,+{col_sep},{col_col19})
  print '|'                        (0,66)
  print $BAS703C-PCT               (0,+{col_sep},{col_col4})
  print $BEN1-RATE                 (0,+{col_sep},{col_col10})
  print $BEN1-RATE                 (0,+{col_sep},{col_col4})
  print '|'                        (0,89)
  print $BEN1-FLAT                 (0,+{col_sep},{col_col4})
  print $BEN1-RATE                 (0,+{col_sep},{col_col8})
  print '|'                        (0,105)

!*** print '| Class  Description Usage      | Action     Date-Code  Delay-Pd '  (+1,1)
!*** print '| Calc Qualifier  Pct  | Calc Amount   |'                           ()
!----- Heading line 3
  print '|'                        (+1,1,{col_sep})
  print $BEN1-CLASS                (0,+{col_sep},{col_col6})
  print $BEN1-DESCR                (0,+{col_sep},{col_col11})
  print $BAS703C-USAGE             (0,+{col_sep},{col_col10})
  print '|'                        (0,33)
  print $BAS703C-ACTION            (0,+{col_sep},{col_col10})
  print $BAS703C-DT-CD-DELAY-PD    (0,+{col_sep},{col_col19})
  print '|'                        (0,66)
  print $BAS703C-CALC              (0,+{col_sep},{col_col4})
  print $BAS703C-QUALIFIER         (0,+{col_sep},{col_col10})
  print $BAS703C-PCT               (0,+{col_sep},{col_col4})
  print '|'                        (0,89)
  print $BAS703C-CALC              (0,+{col_sep},{col_col4})
  print $BEN1-AMT                  (0,+{col_sep},{col_col8})
  print '|'                        (0,105)

!----- Heading line 4
  print '|'                        (+1,1,{col_sep})
  print '='                        (0,+{col_sep},{col_col6})    FILL
  print '='                        (0,+{col_sep},{col_col11})   FILL
  print '='                        (0,+{col_sep},{col_col10})   FILL
  print '|'                        (0,33)
  print '='                        (0,+{col_sep},{col_col10})   FILL
  print '='                        (0,+{col_sep},{col_col19})   FILL
  print '|'                        (0,66)
  print '='                        (0,+{col_sep},{col_col4})    FILL
  print '='                        (0,+{col_sep},{col_col10})   FILL
  print '='                        (0,+{col_sep},{col_col4})    FILL
  print '|'                        (0,89)
  print '='                        (0,+{col_sep},{col_col4})    FILL
  print '='                        (0,+{col_sep},{col_col8})    FILL
  print '|'                        (0,105)

  add 6 to #CurRptLine
  let $FirstPageFlag    = 'NO'

End-Procedure

!***************************************
Begin-Procedure Process-Main
!***************************************

#ifdef DB2ALL
   if $Event_Rules_Id <> '%'
     let $Event_Rules_Id = Edit($Event_Rules_Id,'XXXX')
   end-if
#endif

Begin-Select

  if (#CurRptLine >= ({MAX_LINES}-4))
    do Print-Main-Heading
  end-if

E.EVENT_RULES_ID                         () On-Break Print=Never Before=Event-Rule-Break
E.EFFDT
  !This sets the effective date for fetching from PSXLATITEM and other
  !supporting tables...
  let $AsOfDate = &E.EFFDT
E.EFF_STATUS
E.DESCRSHORT

C.EVENT_CLASS
  if (RTrim(&C.EVENT_CLASS, ' ') = '')
    print $BAS703C-OPEN       (+1,1,32)
  else
     do Get-Event-Class-Descr
  end-if

C.BILL_ACTION
  move 'BILL_ACTION'  to $FieldName
  move &C.BILL_ACTION to $FieldValue
  do Read-Translate-Table
  print $XlatShortName                   (0,+3,10)

C.BILL_DATE_CD
C.BILL_DELAY_DD
C.BILL_DELAY_MM

  if (&C.BILL_ACTION <> 'N')
    move 'BILL_DATE_CD'  to $FieldName
    move &C.BILL_DATE_CD to $FieldValue
    do Read-Translate-Table
    print $XlatShortName                 (0,+1,10)

    let $Delay = $BAS703C-NONE
    if (&C.BILL_DELAY_DD <> 0)
      let $Delay = EDIT(&C.BILL_DELAY_DD, '999') || $BAS703C-DAY
    end-if
    if (&C.BILL_DELAY_MM <> 0)
      let $Delay = EDIT(&C.BILL_DELAY_MM, '999') || $BAS703C-MOS
    end-if
    print $Delay                         (0,+1,8)
  else
    print ''                             (0,+1,19)
  end-if

C.PERCENT_CALC                           (0,+5,1)
C.RATE_QUALIFIER
C.RATE_PERCENT
  if (&C.PERCENT_CALC = 'Y')
    move 'RATE_QUALIFIER'  to $FieldName
    move &C.RATE_QUALIFIER to $FieldValue
    do Read-Translate-Table
    print $XlatShortName                 (0,+2,10)
    print &C.RATE_PERCENT                (0,+1) Edit 9999
  else
    print ''                             (0,+2,15)
  end-if

C.FLAT_CALC                              (0,+5,1)
C.RATE_AMOUNT
  if (&C.FLAT_CALC <> 'N')
    print &C.RATE_AMOUNT                 (0,+2) Edit 99999.99
  else
    print ''                             (0,+2,8)
  end-if

FROM  PS_BAS_EVENT_RULES E,
      PS_BAS_EVENT_CLASS C
WHERE E.EVENT_RULES_ID LIKE $Event_Rules_Id
  AND E.EFF_STATUS = 'A'
  AND E.EFFDT =
        (SELECT MAX(EFFDT)
           FROM PS_BAS_EVENT_RULES
          WHERE EVENT_RULES_ID = E.EVENT_RULES_ID
            AND EFF_STATUS     = 'A'
            AND EFFDT         <= $UserAsOfDate)
  AND C.EVENT_RULES_ID = E.EVENT_RULES_ID
  AND C.EFFDT          = E.EFFDT
ORDER BY E.EVENT_RULES_ID ASC, C.EVENT_CLASS ASC

End-Select
End-Procedure

!***************************************
Begin-Procedure Event-Rule-Break
!***************************************

  if (#CurRptLine >= ({MAX_LINES}-8))
    do Print-Main-Heading
  end-if

  print $BAS703C-EVENT-RULE                                   (+2,1)
  print &E.EVENT_RULES_ID                                     ()
  print $BAS703C-EFF-DATE                                     ()
  do Format-DateTime(&E.EFFDT, $OutDt, {DEFDATE}, '', '')
  print $OutDt                                                ()
  let $Descr = '  (' || RTrim(&E.DESCRSHORT, ' ') || ')'
  print $Descr                                                ()

  print '---------------------------------------------------' (+1,1)
  print ''                                                    (+1,1)

  add 4 to #CurRptLine

End-Procedure

!*************************************
Begin-Procedure Get-Event-Class-Descr
!*************************************

Begin-Select

T.EVENT_CLASS                        (+1,3,6)
T.DESCRSHORT
  let $EventClassNameAbbrv = Rtrim(&T.DESCRSHORT,' ')
  move &T.EVENT_CLASS   to $EventClass
  do Get-Evt-Class-Name-Lang
  print $EventClassNameAbbrv         (0,+1,11)

T.EVENT_CLASS_USE
  move 'EVENT_CLASS_USE'  to $FieldName
  move &T.EVENT_CLASS_USE to $FieldValue
  do Read-Translate-Table
  print $XlatShortName               (0,+1,10)

FROM PS_BAS_EVT_CLASS T
WHERE T.EVENT_CLASS = &C.EVENT_CLASS

End-Select
End-Procedure

!*************************************
Begin-Procedure Display-Time
!*************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

!*************************************

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'benasof.sqc'   !Ask-As-Of-Date procedure
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'readxlat.sqc'  !get translates for fieldname, value
#Include 'getevcls.sqc'  !Get-Evt-Class-Name-Lang      procedure

#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language

!****************************** End Of Report *************************
