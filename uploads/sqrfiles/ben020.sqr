!***********************************************************************
! BEN020: FMLA Status Report
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/09/04:21:29:34                                 !
!       $Release:  HR9                                                 !
!      $Revision:  102                                                 !
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'  !Set environment

Begin-Setup
  #Include 'ptpsl177.sqc'
  #Define PAGE_MAX_LINES  56
End-Setup

!**********************************
Begin-Program
!**********************************

  do Init-Report

  display 'Report Begin at: ' noline
  do display-time

  do Process-Main

  display 'Report Ended at: ' noline
  do display-time

  do StdAPI-Term

End-Program

!**********************************
Begin-Procedure Init-Report
!**********************************

  let $ReportID    = 'BEN020'
  let $ReportTitle = 'FMLA Status Report'

  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ''

  do Init-DateTime
  do Get-Current-DateTime
  let $ReportYear4 = 1

  do StdAPI-Init
  if ($PRCS_Process_Instance = '')
    do Ask-Values
  else
    do Get-Values
  end-if

  !Calculate the cutoff date for Completed leaves...
  do Convert-To-DTU-Date($AsOfDate, $WorkDate)
  Multiply -1 Times #FMLA_Rptg_Weeks
  do DTU-Add-Weeks($WorkDate, #FMLA_Rptg_Weeks, $WorkDate)
  !This optional code will adjust the cutoff to the first of the week...
  !do DTU-DayOfWeek#($WorkDate, #WeekDayAdj)
  !Subtract 1 From #WeekDayAdj
  !do DTU-Subtract-Days($WorkDate, #WeekDayAdj, $WorkDate)
  do Convert-From-DTU-Date($WorkDate, $CompletionDate)

  let #CurRptLine    = {PAGE_MAX_LINES} + 1
  let $FirstPageFlag = 'YES'

End-Procedure

!***************************************
Begin-Procedure Ask-Values
!***************************************

  do Ask-As-Of-Date
  do Ask-FMLA-Plan-ID
  do Ask-Completion-Period

End-Procedure

!***************************************
Begin-Procedure Get-Values
!***************************************

  do Select-Parameters
  do Get-As-Of-Date
  do Get-FMLA-Plan-ID
  do Get-Completion-Period

End-Procedure

!***************************************
Begin-Procedure Ask-FMLA-Plan-ID
!***************************************

  input $FMLA_Plan_ID 'Enter FMLA Plan ID (Leave blank for ALL Plans)'
  let $FMLA_Plan_ID = RTRIM(UPPER($FMLA_Plan_ID), ' ')
  if ($FMLA_Plan_ID = '')
    let $FMLA_Plan_ID = '%'
  end-if

End-Procedure

!***************************************
Begin-Procedure Ask-Completion-Period
!***************************************

  input $Temp 'Report leaves completed within last ?? weeks' type=integer
  let #FMLA_Rptg_Weeks = $Temp

End-Procedure

!***************************************
Begin-Procedure Print-Main-Heading
!***************************************

  if ($FirstPageFlag <> 'YES')
    new-page
  end-if
  let $FirstPageFlag = 'NO'

#Include 'stdhdg03.sqc'     !Standard Report header with AsOf Date

  print '  (Including leaves completed as of: ' ()
  do Format-DateTime($CompletionDate, $OutDt, {DEFDATE}, '', '')
  print $OutDt           ()
  print ')'              ()
  print 'FMLA Plan ID: ' (+1,1)
  print &F.FMLA_PLAN_ID  ()
  print ' ('             ()
  print &F.DESCRSHORT    ()
  print ')'              ()

  print '                                                 '         (+2,1)
  print '                                                     '     ()
  print '                                                    '      ()
  print 'Std  FMLA-Hrs-Taken'                                       ()

  print 'Employee ID and Name                             '         (+1,1)
  print 'Leave-Request   Begin-Date  Return-Date  Approval    '     ()
  print 'Reason-Denied  Follow-up Activities   FMLA-Balance  '      ()
  print 'Hrs  Paid    UnPaid'                                       ()

  print '===============================================  '         (+1,1)
  print '==============  ==========  ===========  ==========  '     ()
  print '=============  =====================  ============  '      ()
  print '===  ==============='                                      ()

  print '' (+1,1)

  let #CurRptLine = 9

End-Procedure

!***************************************
Begin-Procedure Process-Main
!***************************************

Begin-Select

F.FMLA_PLAN_ID
F.DESCRSHORT

  do Print-Main-Heading

  do Rpt-Approaching-Leaves
  do Rpt-Ongoing-Leaves
  do Rpt-Completed-Leaves
  do Rpt-Denied-Requests

FROM  PS_FMLA_PLAN_TBL F
WHERE F.FMLA_PLAN_ID LIKE $FMLA_Plan_ID
AND   F.EFFDT =
        (SELECT MAX(EFFDT)
           FROM PS_FMLA_PLAN_TBL
          WHERE FMLA_PLAN_ID = F.FMLA_PLAN_ID
            AND EFFDT       <= $AsOfDate)
AND   F.EFF_STATUS = 'A'
ORDER BY F.FMLA_PLAN_ID
End-Select

  do Reset
  New-Page

End-Procedure

!***************************************
Begin-Procedure Rpt-Approaching-Leaves
!***************************************

  let #ApproachCnt = 0

Begin-Select

  if (#CurRptLine >= {PAGE_MAX_LINES}-2)
    do Print-Main-Heading
  end-if
  add 1 to #CurRptLine

P1.EMPLID                            (+1,1,11)
  let $EmplID = &P1.EMPLID
P1.NAME                              (0,+1,35)
R1.EMPLID
R1.FMLA_REQUEST_ID                   (0,+2,3)
  let $RequestID = &R1.FMLA_REQUEST_ID
R1.REQUEST_DT
  do Format-DateTime(&R1.REQUEST_DT, $OutDt, {DEFDATE}, '', '')
  print $OutDt                       (0,+1,10)
R1.BEGIN_DT
  let $Leave_Begin_Dt = &R1.BEGIN_DT
  do Format-DateTime(&R1.BEGIN_DT, $OutDt, {DEFDATE}, '', '')
  print $OutDt                       (0,+2,10)
R1.RETURN_DT
  do Format-DateTime(&R1.RETURN_DT, $OutDt, {DEFDATE}, '', '')
  print $OutDt                       (0,+2,11)
R1.FMLA_LV_APPROVED
  move 'FMLA_LV_APPROVED'  to $FieldName
  move &R1.FMLA_LV_APPROVED to $FieldValue
  do Read-Translate-Table
  print $XlatShortName               (0,+2,10)
  !Placeholder for Reason-Denied...
  print ''                           (0,+2,13)

  let #ActivityCol = #Current-Column + 2
  !Placeholder for Followup Activity...
  print ''                           (0,+2,21)

R1.BEGIN_FMLA_WEEKS
  let #BeginWks = &R1.BEGIN_FMLA_WEEKS
R1.STD_HOURS
  let #StdHrs = &R1.STD_HOURS
R1.STD_HOURS_OVRD
  let #StdHrsOvrd = &R1.STD_HOURS_OVRD
  do Get-Entitlement-Bal
  print #Entitlement                 (0,+2,5) Edit 999.9
  print 'weeks '                     (0,+1)

  do Check-Std-Hrs-Change
  do Get-Followups
  Add 1 to #ApproachCnt

FROM PS_FMLA_LV_REQUEST R1,
     PS_PERSON_NAME     P1
WHERE R1.FMLA_PLAN_ID     = &F.FMLA_PLAN_ID
  AND R1.FMLA_LV_APPROVED IN ('A','O')
  AND R1.BEGIN_DT         > $AsOfDate
  AND R1.LEAVE_STATUS     = 'E'
  AND R1.LEAVE_CANCELLED_DT IS NULL
  AND P1.EMPLID           = R1.EMPLID
ORDER BY R1.FMLA_LV_APPROVED DESC,
         R1.EMPLID ASC

End-Select

  if (#CurRptLine >= {PAGE_MAX_LINES}-6)
    do Print-Main-Heading
  end-if
  add 4 to #CurRptLine

  print '------------------------------' (+1,1)
  print 'Total Approaching Leaves: '     (+1,1)
  print #ApproachCnt                     ()      Edit 0009
  print '------------------------------' (+1,1)
  print ''                               (+1,1)

End-Procedure

!***************************************
Begin-Procedure Rpt-Ongoing-Leaves
!***************************************

  let #OngoingCnt = 0

Begin-Select

  if (#CurRptLine >= {PAGE_MAX_LINES}-2)
    do Print-Main-Heading
  end-if
  add 1 to #CurRptLine

P2.EMPLID                            (+1,1,11)
  let $EmplID = &P2.EMPLID
P2.NAME                              (0,+1,35)
R2.EMPLID
R2.FMLA_REQUEST_ID                   (0,+2,3)
  let $RequestID = &R2.FMLA_REQUEST_ID
R2.REQUEST_DT
  do Format-DateTime(&R2.REQUEST_DT, $OutDt, {DEFDATE}, '', '')
  print $OutDt                       (0,+1,10)
R2.BEGIN_DT
  do Format-DateTime(&R2.BEGIN_DT, $OutDt, {DEFDATE}, '', '')
  print $OutDt                       (0,+2,10)
R2.RETURN_DT
  do Format-DateTime(&R2.RETURN_DT, $OutDt, {DEFDATE}, '', '')
  print $OutDt                       (0,+2,11)
R2.FMLA_LV_APPROVED
  move 'FMLA_LV_APPROVED'  to $FieldName
  move &R2.FMLA_LV_APPROVED to $FieldValue
  do Read-Translate-Table
  print $XlatShortName               (0,+2,10)
  !Placeholder for Reason-Denied...
  print ''                           (0,+2,13)

  let #ActivityCol = #Current-Column + 2
  !Placeholder for Followup Activity...
  print ''                           (0,+2,21)

R2.BEGIN_FMLA_WEEKS
  let #BeginWks = &R2.BEGIN_FMLA_WEEKS
R2.STD_HOURS
  let #StdHrs = &R2.STD_HOURS
R2.STD_HOURS_OVRD
  let #StdHrsOvrd = &R2.STD_HOURS_OVRD
  do Get-Entitlement-Bal
  print #Entitlement                 (0,+2,5) Edit 999.9
  print 'weeks '                     (0,+1)

  do Get-Followups
  Add 1 to #OngoingCnt

FROM PS_FMLA_LV_REQUEST R2,
     PS_PERSON_NAME     P2
WHERE R2.FMLA_PLAN_ID     = &F.FMLA_PLAN_ID
  AND R2.FMLA_LV_APPROVED = 'A'
  AND R2.BEGIN_DT        <= $AsOfDate
  AND R2.LEAVE_STATUS     = 'E'
  AND R2.LEAVE_CANCELLED_DT IS NULL
  AND P2.EMPLID           = R2.EMPLID
ORDER BY R2.EMPLID

End-Select

  if (#CurRptLine >= {PAGE_MAX_LINES}-6)
    do Print-Main-Heading
  end-if
  add 4 to #CurRptLine

  print '------------------------------' (+1,1)
  print 'Total Ongoing Leaves:     '     (+1,1)
  print #OngoingCnt                      ()      Edit 0009
  print '------------------------------' (+1,1)
  print ''                               (+1,1)

End-Procedure

!***************************************
Begin-Procedure Rpt-Completed-Leaves
!***************************************

  let #CompletedCnt = 0

Begin-Select

  if (#CurRptLine >= {PAGE_MAX_LINES}-2)
    do Print-Main-Heading
  end-if
  add 1 to #CurRptLine

P3.EMPLID                            (+1,1,11)
  let $EmplID = &P3.EMPLID
P3.NAME                              (0,+1,35)
R3.EMPLID
R3.FMLA_REQUEST_ID                   (0,+2,3)
  let $RequestID = &R3.FMLA_REQUEST_ID
R3.REQUEST_DT
  do Format-DateTime(&R3.REQUEST_DT, $OutDt, {DEFDATE}, '', '')
  print $OutDt                       (0,+1,10)
R3.BEGIN_DT
  do Format-DateTime(&R3.BEGIN_DT, $OutDt, {DEFDATE}, '', '')
  print $OutDt                       (0,+2,10)
R3.RETURN_DT
  do Format-DateTime(&R3.RETURN_DT, $OutDt, {DEFDATE}, '', '')
  print $OutDt                       (0,+2,11)
R3.FMLA_LV_APPROVED
  move 'FMLA_LV_APPROVED'  to $FieldName
  move &R3.FMLA_LV_APPROVED to $FieldValue
  do Read-Translate-Table
  print $XlatShortName               (0,+2,10)
  !Placeholder for Reason-Denied...
  print ''                           (0,+2,13)

  !Placeholder for Followup Activity...
  let #ActivityCol = #Current-Column + 2
  print ''                           (0,+2,21)

R3.BEGIN_FMLA_WEEKS
  let #BeginWks = &R3.BEGIN_FMLA_WEEKS
R3.STD_HOURS
  let #StdHrs = &R3.STD_HOURS
R3.STD_HOURS_OVRD
  let #StdHrsOvrd = &R3.STD_HOURS_OVRD
  do Get-Entitlement-Bal
  print #Entitlement                 (0,+2,5) Edit 999.9
  print 'weeks '                     (0,+1)

  !Placeholder for Std-Hrs Change...
  print ''                           (0,+2,3)

  do Get-Leave-Totals
  do Get-Followups
  Add 1 to #CompletedCnt

FROM PS_FMLA_LV_REQUEST R3,
     PS_PERSON_NAME     P3
WHERE R3.FMLA_PLAN_ID  = &F.FMLA_PLAN_ID
  AND R3.RETURN_DT    >= $CompletionDate
  AND R3.LEAVE_STATUS  = 'A'
  AND P3.EMPLID        = R3.EMPLID
ORDER BY R3.EMPLID

End-Select

  if (#CurRptLine >= {PAGE_MAX_LINES}-6)
    do Print-Main-Heading
  end-if
  add 4 to #CurRptLine

  print '------------------------------' (+1,1)
  print 'Total Completed Leaves:   '     (+1,1)
  print #CompletedCnt                    ()      Edit 0009
  print '------------------------------' (+1,1)
  print ''                               (+1,1)

End-Procedure

!***************************************
Begin-Procedure Rpt-Denied-Requests
!***************************************

  let #DeniedCnt = 0

Begin-Select

  if (#CurRptLine >= {PAGE_MAX_LINES}-2)
    do Print-Main-Heading
  end-if
  add 1 to #CurRptLine

P4.EMPLID                            (+1,1,11)
  let $EmplID = &P4.EMPLID
P4.NAME                              (0,+1,35)
R4.EMPLID
R4.FMLA_REQUEST_ID                   (0,+2,3)
  let $RequestID = &R4.FMLA_REQUEST_ID
R4.REQUEST_DT
  do Format-DateTime(&R4.REQUEST_DT, $OutDt, {DEFDATE}, '', '')
  print $OutDt                       (0,+1,10)
R4.BEGIN_DT
  do Format-DateTime(&R4.BEGIN_DT, $OutDt, {DEFDATE}, '', '')
  print $OutDt                       (0,+2,10)
R4.RETURN_DT
  do Format-DateTime(&R4.RETURN_DT, $OutDt, {DEFDATE}, '', '')
  print $OutDt                       (0,+2,11)
R4.FMLA_LV_APPROVED
  move 'FMLA_LV_APPROVED'  to $FieldName
  move &R4.FMLA_LV_APPROVED to $FieldValue
  do Read-Translate-Table
  print $XlatShortName               (0,+2,10)
R4.REASON_DENIED                     (0,+2,2)
  move 'REASON_DENIED'  to $FieldName
  move &R4.REASON_DENIED to $FieldValue
  do Read-Translate-Table
  print '-'                          ()
  print $XlatShortName               (0,0,10)

  let #ActivityCol = #Current-Column + 2
  !Placeholder for Followup Activity...
  print ''                           (0,+2,21)

  !Placeholder for FMLA Balance...
  print ''                           (0,+2,12)

  do Get-Followups
  Add 1 to #DeniedCnt

FROM PS_FMLA_LV_REQUEST R4,
     PS_PERSON_NAME     P4
WHERE R4.FMLA_PLAN_ID     = &F.FMLA_PLAN_ID
  AND R4.FMLA_LV_APPROVED = 'D'
  AND R4.APPRVL_DT       >= $AsOfDate
  AND P4.EMPLID           = R4.EMPLID
ORDER BY R4.EMPLID ASC

End-Select

  if (#CurRptLine >= {PAGE_MAX_LINES}-6)
    do Print-Main-Heading
  end-if
  add 4 to #CurRptLine

  print '------------------------------' (+1,1)
  print 'Total Requests Denied:    '     (+1,1)
  print #DeniedCnt                       ()      Edit 0009
  print '------------------------------' (+1,1)
  print ''                               (+1,1)

End-Procedure

!***************************************
Begin-Procedure Get-Entitlement-Bal
!***************************************

  let #Taken = 0
  do Convert-To-DTU-Date($AsOfToday, $CmpToday)

Begin-Select

H1.WEEK_BEGIN_DT
H1.SUN_HRS
H1.MON_HRS
H1.TUES_HRS
H1.WED_HRS
H1.THURS_HRS
H1.FRI_HRS
H1.SAT_HRS

  do Convert-To-DTU-Date(&H1.WEEK_BEGIN_DT, $CmpLeave)
  do DTU-Diff-Days($CmpLeave, $CmpToday, #Days)
  evaluate #Days
  when >= 0
    Add &H1.SUN_HRS   to #Taken
  when >= 1
    Add &H1.MON_HRS   to #Taken
  when >= 2
    Add &H1.TUES_HRS  to #Taken
  when >= 3
    Add &H1.WED_HRS   to #Taken
  when >= 4
    Add &H1.THURS_HRS to #Taken
  when >= 5
    Add &H1.FRI_HRS   to #Taken
  when >= 6
    Add &H1.SAT_HRS   to #Taken
  end-evaluate

FROM  PS_FMLA_LV_HISTORY H1
WHERE H1.EMPLID          = $EmplID
  AND H1.FMLA_REQUEST_ID = $RequestID
  AND H1.WEEK_BEGIN_DT  <= $AsOfToday
ORDER BY H1.WEEK_BEGIN_DT ASC
End-Select

  let #Convert = #StdHrsOvrd
  if (#Convert = 0)
    let #Convert = #StdHrs
  end-if
  if (#Convert > 0)
    Divide #Convert Into #Taken
    let #Entitlement = #BeginWks - #Taken
  else
    let #Entitlement = #BeginWks
  end-if

End-Procedure

!***************************************
Begin-Procedure Get-Followups
!***************************************

  let $FirstRow = 'Y'

Begin-Select

A.ACTIVITY_DT
  do Format-DateTime(&A.ACTIVITY_DT, $OutDt, {DEFDATE}, '', '')
  if ($FirstRow = 'Y')
    print $OutDt                    (0,#ActivityCol,10)
    let $FirstRow = 'N'
  else
    if (#CurRptLine >= {PAGE_MAX_LINES}-2)
      do Print-Main-Heading
    end-if
    add 1 to #CurRptLine
    print $OutDt                    (+1,#ActivityCol,10)
  end-if
A.FMLA_ACTIVITY_TYPE
  move 'FMLA_ACTIVITY_TYPE'  to $FieldName
  move &A.FMLA_ACTIVITY_TYPE to $FieldValue
  do Read-Translate-Table
  print $XlatShortName              (0,+1,10)

FROM PS_FMLA_LV_ACTVTY A
WHERE A.EMPLID          = $EmplID
  AND A.FMLA_REQUEST_ID = $RequestID
  AND A.FOLLOW_UP_FLAG  = 'Y'
ORDER BY A.ACTIVITY_DT ASC,
         A.FMLA_ACTIVITY_TYPE ASC

End-Select
End-Procedure

!***************************************
Begin-Procedure Get-Leave-Totals
!***************************************

  let #Paid   = 0
  let #Unpaid = 0

Begin-Select

H2.SUN_HRS
H2.SUN_PAID
  if (&H2.SUN_PAID = 'Y')
    Add &H2.SUN_HRS to #Paid
  else
    Add &H2.SUN_HRS to #Unpaid
  end-if
H2.MON_HRS
H2.MON_PAID
  if (&H2.MON_PAID = 'Y')
    Add &H2.MON_HRS to #Paid
  else
    Add &H2.MON_HRS to #Unpaid
  end-if
H2.TUES_HRS
H2.TUES_PAID
  if (&H2.TUES_PAID = 'Y')
    Add &H2.TUES_HRS to #Paid
  else
    Add &H2.TUES_HRS to #Unpaid
  end-if
H2.WED_HRS
H2.WED_PAID
  if (&H2.WED_PAID = 'Y')
    Add &H2.WED_HRS to #Paid
  else
    Add &H2.WED_HRS to #Unpaid
  end-if
H2.THURS_HRS
H2.THURS_PAID
  if (&H2.THURS_PAID = 'Y')
    Add &H2.THURS_HRS to #Paid
  else
    Add &H2.THURS_HRS to #Unpaid
  end-if
H2.FRI_HRS
H2.FRI_PAID
  if (&H2.FRI_PAID = 'Y')
    Add &H2.FRI_HRS to #Paid
  else
    Add &H2.FRI_HRS to #Unpaid
  end-if
H2.SAT_HRS
H2.SAT_PAID
  if (&H2.SAT_PAID = 'Y')
    Add &H2.SAT_HRS to #Paid
  else
    Add &H2.SAT_HRS to #Unpaid
  end-if

FROM  PS_FMLA_LV_HISTORY H2
WHERE H2.EMPLID          = $EmplID
  AND H2.FMLA_REQUEST_ID = $RequestID
End-Select

  print #Paid                       (0,+2,4) Edit 9999
  print 'hrs'                       ()
  print #Unpaid                     (0,+1,4) Edit 9999
  print 'hrs'                       ()

End-Procedure

!***************************************
Begin-Procedure Check-Std-Hrs-Change
!***************************************

Begin-Select

J.EMPLID
SUM(J.STD_HOURS)   &NewStdHrs

FROM PS_PER_ORG_ASGN E,
     PS_JOB J
WHERE E.EMPLID = $EmplID
  AND J.EMPLID = E.EMPLID
  AND J.EMPL_RCD = E.EMPL_RCD
  AND J.EFFDT =
        (SELECT MAX(J1.EFFDT)
           FROM PS_JOB J1
          WHERE J1.EMPLID = J.EMPLID
            AND J1.EMPL_RCD = J.EMPL_RCD
            AND J1.EFFDT <= $Leave_Begin_Dt)
  AND J.PER_ORG = 'EMP'
  AND J.HR_STATUS = 'A'
GROUP BY J.EMPLID
End-Select

  if (&NewStdHrs <> #StdHrs)
    print 'Chg'                     (0,+2,3)
  end-if

End-Procedure

!*************************************
Begin-Procedure Display-Time
!*************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

!*************************************

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datemath.sqc'  !Date math routines
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'benasof.sqc'   !Ask-As-Of-Date procedure
#Include 'readxlat.sqc'  !Read the Translate Table
#Include 'reset1.sqc'     !Reset printer procedure

#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines

!****************************** End Of Report *******************************

