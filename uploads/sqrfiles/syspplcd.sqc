! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
! SYSPPLCD: PS PeopleCode Program Manager Name report                  *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************

!----------------------------------------------------------------------!
! Procedure: SYSPPLCD-Main                                             !
! Descr:     System table audit against PSPCMNAME/PSPCMPROG tables     !
!----------------------------------------------------------------------!

begin-procedure SYSPPLCD-Main
    let $ErrorFound = 'N'
    let $AuditTitle = 'PeopleCode Definition Audit'

    move 9 to #rowstoadd

    do SYSPPLCD-1
    do SYSPPLCD-2
    do SYSPPLCD-3
    do SYSPPLCD-4
    do SYSPPLCD-5
    do SYSPPLCD-6
    do SYSPPLCD-7
    do SYSPPLCD-8
    do SYSPPLCD-9
!    do SYSPPLCD-10
!    do SYSPPLCD-11
!    do SYSPPLCD-12


    if $ErrorFound = 'N'
        do PrintSummaryRecord
    end-if

    move 1 to #rowstoadd      ! set back to default

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSPPLCD-PplCodeName-Program-Exist                        !
! Descr:     System table audit against PSPCMNAME table:               !
!            SYSPPLCD-1: Verify PeopleCode Program Name exists.        !
!----------------------------------------------------------------------!
begin-procedure SYSPPLCD-1

   let $AuditDescr = '(PEOPLECODE-1) PeopleCode Name table contains Program '
      || 'name that does not exist in PcmProgram table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 15
   let #Start3          = 48
   let #numofhdr        =  3

   put 'Object ID'      #Start1 10 into printarray(0)
   put 'Object Value'   #Start2 31 into printarray(1)
   put 'Name Number'    #Start3 12 into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.OBJECTID1        &PplCd1_ObjectId1
A.OBJECTVALUE1     &PplCd1_ObjectValue1
A.OBJECTID2        &PplCd1_ObjectId2
A.OBJECTVALUE2     &PplCd1_ObjectValue2
A.OBJECTID3        &PplCd1_ObjectId3
A.OBJECTVALUE3     &PplCd1_ObjectValue3
A.OBJECTID4        &PplCd1_ObjectId4
A.OBJECTVALUE4     &PplCd1_ObjectValue4
A.OBJECTID5        &PplCd1_ObjectId5
A.OBJECTVALUE5     &PplCd1_ObjectValue5
A.OBJECTID6        &PplCd1_ObjectId6
A.OBJECTVALUE6     &PplCd1_ObjectValue6
A.OBJECTID7        &PplCd1_ObjectId7
A.OBJECTVALUE7     &PplCd1_ObjectValue7
A.NAMENUM          &PplCd1_NameNum

 if (((#current-line + #rowstoadd) > #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &PplCd1_ObjectId1    (+1, #Start1)
   print &PplCd1_ObjectValue1 ( 0, #Start2)
   print &PplCd1_NameNum      (0,#Start3)      edit 99,999
   print &PplCd1_ObjectId2    (+1,#Start1)
   print &PplCd1_ObjectValue2 (0,#Start2)
   print &PplCd1_ObjectId3    (+1,#Start1)
   print &PplCd1_ObjectValue3 (0,#Start2)
   if &PplCd1_ObjectId4 != 0
      print &PplCd1_ObjectId4    (+1,#Start1)
      print &PplCd1_ObjectValue4 (0,#Start2)
   end-if
   if &PplCd1_ObjectId5 != 0
      print &PplCd1_ObjectId5    (+1,#Start1)
      print &PplCd1_ObjectValue5 (0,#Start2)
   end-if
   if &PplCd1_ObjectId6 != 0
      print &PplCd1_ObjectId6    (+1,#Start1)
      print &PplCd1_ObjectValue6 (0,#Start2)
   end-if
   if &PplCd1_ObjectId7 != 0
      print &PplCd1_ObjectId7    (+1,#Start1)
      print &PplCd1_ObjectValue7 (0,#Start2)
   end-if
   print ' '                  (+1,1)

FROM PSPCMNAME A
WHERE NOT EXISTS
  (SELECT
#ifdef ORACLE
  /*+ index(B, PS_PSPCMPROG) */
#endif
  'X'
    FROM PSPCMPROG B
  WHERE B.OBJECTID1    = A.OBJECTID1
    AND B.OBJECTVALUE1 = A.OBJECTVALUE1
    AND B.OBJECTID2    = A.OBJECTID2
    AND B.OBJECTVALUE2 = A.OBJECTVALUE2
    AND B.OBJECTID3    = A.OBJECTID3
    AND B.OBJECTVALUE3 = A.OBJECTVALUE3
    AND B.OBJECTID4    = A.OBJECTID4
    AND B.OBJECTVALUE4 = A.OBJECTVALUE4
    AND B.OBJECTID5    = A.OBJECTID5
    AND B.OBJECTVALUE5 = A.OBJECTVALUE5
    AND B.OBJECTID6    = A.OBJECTID6
    AND B.OBJECTVALUE6 = A.OBJECTVALUE6)

end-SELECT

   do End-Section
#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSPPLCD-PplCodeProg-Program-Exist                        !
! Descr:     System table audit against PSPCMPROG table:               !
!            SYSPPLCD-2: Verify PeopleCode Program Name exists.        !
!----------------------------------------------------------------------!
begin-procedure SYSPPLCD-2

   move 0 to #rows
   let $AuditDescr = '(PEOPLECODE-2) PeopleCode Program table contains Program '
      || 'name that does not exist in PcmName table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 15
   let #Start3          = 48
   let #numofhdr        =  3

   put 'Object ID'     #Start1 10 into printarray(0)
   put 'Object Value'  #Start2 31 into printarray(1)
   put 'Name Count'    #Start3 15 into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.OBJECTID1        &PplCd2_ObjectId1
A.OBJECTVALUE1     &PplCd2_ObjectValue1
A.OBJECTID2        &PplCd2_ObjectId2
A.OBJECTVALUE2     &PplCd2_ObjectValue2
A.OBJECTID3        &PplCd2_ObjectId3
A.OBJECTVALUE3     &PplCd2_ObjectValue3
A.OBJECTID4        &PplCd2_ObjectId4
A.OBJECTVALUE4     &PplCd2_ObjectValue4
A.OBJECTID5        &PplCd2_ObjectId5
A.OBJECTVALUE5     &PplCd2_ObjectValue5
A.OBJECTID6        &PplCd2_ObjectId6
A.OBJECTVALUE6     &PplCd2_ObjectValue6
A.OBJECTID7        &PplCd2_ObjectId7
A.OBJECTVALUE7     &PplCd2_ObjectValue7
A.NAMECOUNT        &PplCd2_NameCount


   if (((#current-line + #rowstoadd) > #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &PplCd2_ObjectId1    (+1, #Start1)
   print &PplCd2_ObjectValue1 (0 , #Start2)
   print &PplCd2_NameCount    (0 , #Start3)    edit 9,999
   print &PplCd2_ObjectId2    (+1, #Start1)
   print &PplCd2_ObjectValue2 (0 , #Start2)
   print &PplCd2_ObjectId3    (+1, #Start1)
   print &PplCd2_ObjectValue3 (0 , #Start2)
   if &PplCd2_ObjectId4 != 0
      print &PplCd2_ObjectId4    (+1, #Start1)
      print &PplCd2_ObjectValue4 ( 0, #Start2)
   end-if
   if &PplCd2_ObjectId5 != 0
      print &PplCd2_ObjectId5    (+1, #Start1)
      print &PplCd2_ObjectValue5 ( 0, #Start2)
   end-if
   if &PplCd2_ObjectId6 != 0
      print &PplCd2_ObjectId6    (+1, #Start1)
      print &PplCd2_ObjectValue6 ( 0, #Start2)
   end-if
   if &PplCd2_ObjectId7 != 0
      print &PplCd2_ObjectId7    (+1, #Start1)
      print &PplCd2_ObjectValue7 ( 0, #Start2)
   end-if
   print ' '                  (+1,1)

FROM PSPCMPROG A
WHERE A.NAMECOUNT <> 0
  AND NOT EXISTS
  (SELECT
#ifdef ORACLE
  /*+ index(B,PS_PSPCMNAME) */
#end-if
  'X'
  FROM PSPCMNAME B
  WHERE A.OBJECTID1    = B.OBJECTID1
    AND A.OBJECTVALUE1 = B.OBJECTVALUE1
    AND A.OBJECTID2    = B.OBJECTID2
    AND A.OBJECTVALUE2 = B.OBJECTVALUE2
    AND A.OBJECTID3    = B.OBJECTID3
    AND A.OBJECTVALUE3 = B.OBJECTVALUE3
    AND A.OBJECTID4    = B.OBJECTID4
    AND A.OBJECTVALUE4 = B.OBJECTVALUE4
    AND A.OBJECTID5    = B.OBJECTID5
    AND A.OBJECTVALUE5 = B.OBJECTVALUE5
    AND A.OBJECTID6    = B.OBJECTID6
    AND A.OBJECTVALUE6 = B.OBJECTVALUE6)
end-SELECT

   do End-Section


#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSPPLCD-PplCodeProg-Program-Count                        !
! Descr:     System table audit against PSPCMPROG table:               !
!            SYSPPLCD-3: Verify PeopleCode Program Name count.         !
!----------------------------------------------------------------------!
begin-procedure SYSPPLCD-3

   move 0 to #rows
   let $AuditDescr = '(PEOPLECODE-3) PeopleCode Program table Name count does '
      || 'not match record count in PcmName table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 15
   let #Start3          = 48
   let #Start4          = 56
   let #numofhdr        =  4

   put 'Object ID'      #Start1 10 into printarray(0)
   put 'Object Value'   #Start2 31 into printarray(1)
   put 'Name Count'     #Start3 4  into printarray(2)
   put 'Record Count'   #Start4 6  into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.OBJECTID1        &PplCd3_ObjectId1
A.OBJECTVALUE1     &PplCd3_ObjectValue1
A.OBJECTID2        &PplCd3_ObjectId2
A.OBJECTVALUE2     &PplCd3_ObjectValue2
A.OBJECTID3        &PplCd3_ObjectId3
A.OBJECTVALUE3     &PplCd3_ObjectValue3
A.OBJECTID4        &PplCd3_ObjectId4
A.OBJECTVALUE4     &PplCd3_ObjectValue4
A.OBJECTID5        &PplCd3_ObjectId5
A.OBJECTVALUE5     &PplCd3_ObjectValue5
A.OBJECTID6        &PplCd3_ObjectId6
A.OBJECTVALUE6     &PplCd3_ObjectValue6
A.OBJECTID7        &PplCd3_ObjectId7
A.OBJECTVALUE7     &PplCd3_ObjectValue7
A.NAMECOUNT        &PplCd3_NameCount
COUNT(*)           &PplCd3_Count

   if (((#current-line + #rowstoadd) > #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &PplCd3_ObjectId1    (+1,#Start1)
   print &PplCd3_ObjectValue1 ( 0,#Start2)
   print &PplCd3_NameCount    ( 0,#Start3)    edit  9,999
   print &PplCd3_Count        ( 0,#Start4)    edit 99,999
   print &PplCd3_ObjectId2    (+1,#Start1)
   print &PplCd3_ObjectValue2 ( 0,#Start2)
   print &PplCd3_ObjectId3    (+1,#Start1)
   print &PplCd3_ObjectValue3 ( 0,#Start2)
   if &PplCd3_ObjectId4 != 0
      print &PplCd3_ObjectId4    (+1,#Start1)
      print &PplCd3_ObjectValue4 ( 0,#Start2)
   end-if
   if &PplCd3_ObjectId5 != 0
      print &PplCd3_ObjectId5    (+1,#Start1)
      print &PplCd3_ObjectValue5 ( 0,#Start2)
   end-if
   if &PplCd3_ObjectId6 != 0
      print &PplCd3_ObjectId6    (+1,#Start1)
      print &PplCd3_ObjectValue6 ( 0,#Start2)
   end-if
   if &PplCd3_ObjectId7 != 0
      print &PplCd3_ObjectId7    (+1,#Start1)
      print &PplCd3_ObjectValue7 ( 0,#Start2)
   end-if

   print ' '                  (+1,1)

FROM PSPCMPROG A
GROUP BY A.OBJECTID1, A.OBJECTVALUE1,
         A.OBJECTID2, A.OBJECTVALUE2,
         A.OBJECTID3, A.OBJECTVALUE3,
         A.OBJECTID4, A.OBJECTVALUE4,
         A.OBJECTID5, A.OBJECTVALUE5,
         A.OBJECTID6, A.OBJECTVALUE6,
         A.OBJECTID7, A.OBJECTVALUE7,
         A.NAMECOUNT
HAVING A.NAMECOUNT <>
  (SELECT
#ifdef ORACLE
  /*+ index(C,PS_PSPCMNAME) */
#end-if
  COUNT(*)
  FROM PSPCMNAME C
  WHERE C.OBJECTID1    = A.OBJECTID1
    AND C.OBJECTVALUE1 = A.OBJECTVALUE1
    AND C.OBJECTID2    = A.OBJECTID2
    AND C.OBJECTVALUE2 = A.OBJECTVALUE2
    AND C.OBJECTID3    = A.OBJECTID3
    AND C.OBJECTVALUE3 = A.OBJECTVALUE3
    AND C.OBJECTID4    = A.OBJECTID4
    AND C.OBJECTVALUE4 = A.OBJECTVALUE4
    AND C.OBJECTID5    = A.OBJECTID5
    AND C.OBJECTVALUE5 = A.OBJECTVALUE5
    AND C.OBJECTID6    = A.OBJECTID6
    AND C.OBJECTVALUE6 = A.OBJECTVALUE6)


end-SELECT

   do End-Section


#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSPPLCD-PplCodeName-Invalid-FILELAYOUT                   !
! Descr:     System table audit against PSPCMNAME table:               !
!            SYSPPLCD-4: Verify Refname exists in PSREFFIELD when      !
!                        RecName = 'FILELAYOUT'
!----------------------------------------------------------------------!
begin-procedure SYSPPLCD-4

   let $AuditDescr = '(PEOPLECODE-4) PeopleCode contains Invalid FILELAYOUT References:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 15
   let #Start3          = 48
   let #numofhdr        =  3

   put 'Object ID'      #Start1 10 into printarray(0)
   put 'Object Value'   #Start2 31 into printarray(1)
   put 'REFNAME'        #Start3 12 into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.OBJECTID1        &PplCd4_ObjectId1
A.OBJECTVALUE1     &PplCd4_ObjectValue1
A.OBJECTID2        &PplCd4_ObjectId2
A.OBJECTVALUE2     &PplCd4_ObjectValue2
A.OBJECTID3        &PplCd4_ObjectId3
A.OBJECTVALUE3     &PplCd4_ObjectValue3
A.OBJECTID4        &PplCd4_ObjectId4
A.OBJECTVALUE4     &PplCd4_ObjectValue4
A.OBJECTID5        &PplCd4_ObjectId5
A.OBJECTVALUE5     &PplCd4_ObjectValue5
A.OBJECTID6        &PplCd4_ObjectId6
A.OBJECTVALUE6     &PplCd4_ObjectValue6
A.OBJECTID7        &PplCd4_ObjectId7
A.OBJECTVALUE7     &PplCd4_ObjectValue7
A.REFNAME          &PplCd4_RefName

 if (((#current-line + #rowstoadd) > #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &PplCd4_ObjectId1    (+1,#Start1)
   print &PplCd4_ObjectValue1 ( 0,#Start2)
   print &PplCd4_RefName      ( 0,#Start3)
   print &PplCd4_ObjectId2    (+1,#Start1)
   print &PplCd4_ObjectValue2 ( 0,#Start2)
   print &PplCd4_ObjectId3    (+1,#Start1)
   print &PplCd4_ObjectValue3 ( 0,#Start2)
   if &PplCd4_ObjectId4 != 0
      print &PplCd4_ObjectId4    (+1,#Start1)
      print &PplCd4_ObjectValue4 (0,#Start2)
   end-if
   if &PplCd4_ObjectId5 != 0
      print &PplCd4_ObjectId5    (+1,#Start1)
      print &PplCd4_ObjectValue5 (0,#Start2)
   end-if
   if &PplCd4_ObjectId6 != 0
      print &PplCd4_ObjectId6    (+1,#Start1)
      print &PplCd4_ObjectValue6 (0,#Start2)
   end-if
   if &PplCd4_ObjectId7 != 0
      print &PplCd4_ObjectId7    (+1,#Start1)
      print &PplCd4_ObjectValue7 (0,#Start2)
   end-if
   print ' '                  (+1,1)

FROM PSPCMNAME A
WHERE A.RECNAME = 'FILELAYOUT'
  AND A.REFNAME NOT IN (SELECT FLDDEFNNAME FROM PSFLDDEFN)
ORDER BY REFNAME
end-SELECT

   do End-Section
#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSPPLCD-PplCodeName-Invalid-Record/Field Reference       !
! Descr:     System table audit against PSPCMNAME table:               !
!            SYSPPLCD-5: Verify Refname exists in PSRECDEFN/PSDBFIELD !
!----------------------------------------------------------------------!
begin-procedure SYSPPLCD-5

   let $AuditDescr = '(PEOPLECODE-5) PeopleCode Reference to Invalid Record or Field:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 15
   let #numofhdr        =  2

   put 'Object ID'      #Start1 10 into printarray(0)
   put 'Object Value'   #Start2 31 into printarray(1)

begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.OBJECTVALUE1    &PplCd5_ObjectValue1
A.OBJECTVALUE2     &PplCd5_ObjectValue2
A.OBJECTVALUE3     &PplCd5_ObjectValue3
 if (((#current-line + #rowstoadd) > #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print '1'                  (+1,#Start1)
   print &PplCd5_ObjectValue1 ( 0,#Start2)
   print '2'                  (+1,#Start1)
   print &PplCd5_ObjectValue2 ( 0,#Start2)
   print '12'                 (+1,#Start1)
   print &PplCd5_ObjectValue3 ( 0,#Start2)
   print ' '                  (+1,1)

FROM PSPCMNAME A
WHERE A.OBJECTID1 = 1
AND A.OBJECTID2 = 2
AND A.OBJECTID3 = 12
AND NOT EXISTS (SELECT 'X' FROM PSRECFIELD B
                WHERE B.RECNAME = A.OBJECTVALUE1
                AND B.FIELDNAME = A.OBJECTVALUE2)
ORDER BY 1, 2, 3


end-SELECT


   do End-Section
#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSPPLCD-PplCodeName-Invalid-Field Reference              !
! Descr:     System table audit against PSPCMNAME table:               !
!            SYSPPLCD-6: Verify Refname exists in PSDBFIELD           !
!----------------------------------------------------------------------!
begin-procedure SYSPPLCD-6

   let $AuditDescr = '(PEOPLECODE-6) PeopleCode Reference to Invalid Field:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 15
   let #numofhdr        =  2

   put 'Object ID'      #Start1 10 into printarray(0)
   put 'Object Value'   #Start2 31 into printarray(1)

begin-SELECT on-Error=Rpt-SQL-Error
A.OBJECTID1        &PplCd6_ObjectId1
A.OBJECTVALUE1     &PplCd6_ObjectValue1
A.OBJECTID2        &PplCd6_ObjectId2
A.OBJECTVALUE2     &PplCd6_ObjectValue2
A.OBJECTID3        &PplCd6_ObjectId3
A.OBJECTVALUE3     &PplCd6_ObjectValue3
A.OBJECTID4        &PplCd6_ObjectId4
A.OBJECTVALUE4     &PplCd6_ObjectValue4
A.OBJECTID5        &PplCd6_ObjectId5
A.OBJECTVALUE5     &PplCd6_ObjectValue5
A.OBJECTID6        &PplCd6_ObjectId6
A.OBJECTVALUE6     &PplCd6_ObjectValue6
A.OBJECTID7        &PplCd6_ObjectId7
A.OBJECTVALUE7     &PplCd6_ObjectValue7

 if (((#current-line + #rowstoadd) > #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &PplCd6_ObjectId1    (+1,#Start1)
   print &PplCd6_ObjectValue1 ( 0,#Start2)
   print &PplCd6_ObjectId2    (+1,#Start1)
   print &PplCd6_ObjectValue2 ( 0,#Start2)
   print &PplCd6_ObjectId3    (+1,#Start1)
   print &PplCd6_ObjectValue3 ( 0,#Start2)
   if &PplCd6_ObjectId4 != 0
      print &PplCd6_ObjectId4    (+1,#Start1)
      print &PplCd6_ObjectValue4 (0,#Start2)
   end-if
   if &PplCd6_ObjectId5 != 0
      print &PplCd6_ObjectId5    (+1,#Start1)
      print &PplCd6_ObjectValue5 (0,#Start2)
   end-if
   if &PplCd6_ObjectId6 != 0
      print &PplCd6_ObjectId6    (+1,#Start1)
      print &PplCd6_ObjectValue6 (0,#Start2)
   end-if
   if &PplCd6_ObjectId7 != 0
      print &PplCd6_ObjectId7    (+1,#Start1)
      print &PplCd6_ObjectValue7 (0,#Start2)
   end-if
   print ' '                  (+1,1)

FROM PSPCMPROG A
WHERE A.OBJECTID1 = 1
AND A.OBJECTID2 = 2
AND A.OBJECTID3 = 12
AND NOT EXISTS (SELECT 'X' FROM PSRECFIELD B
                           WHERE B.RECNAME = A.OBJECTVALUE1
                           AND B.FIELDNAME = A.OBJECTVALUE2)
ORDER BY 1, 2, 3

end-SELECT


   do End-Section
#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSPPLCD-7                                                !
! Descr:     (PEOPLECODE-7) Orphan App Pkg PeopleCode - Level 2        !
!----------------------------------------------------------------------!
begin-procedure SYSPPLCD-7

   let $AuditDescr = '(PEOPLECODE-7) Orphan App Pkg PeopleCode - Level 1: '


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Object Value#'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Object Value'
    let #Column2len = lengthp($Column2Name)

    do RetrieveColumnLength('PSPCMPROG','OBJECTVALUE1',#Field2Len,$FieldType)

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)

    let #numofhdr        = 2

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)

begin-SELECT on-Error=Rpt-SQL-Error
P.OBJECTVALUE1    &OBJECT_VALUE11
P.OBJECTVALUE2    &OBJECT_VALUE21
P.OBJECTVALUE3    &OBJECT_VALUE31
P.OBJECTVALUE4    &OBJECT_VALUE41
P.OBJECTVALUE5    &OBJECT_VALUE51

 if (((#current-line + #rowstoadd) > #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1
   
   print '1'              (+1, #Start1)
   print &OBJECT_VALUE11   (0, #Start2)
   print '2'              (+1, #Start1)
   print &OBJECT_VALUE21   (0, #Start2)
   print '3'              (+1, #Start1)
   print &OBJECT_VALUE31   (0, #Start2)
   print '4'              (+1, #Start1)
   print &OBJECT_VALUE41   (0, #Start2)
   print '5'              (+1, #Start1)
   print &OBJECT_VALUE51   (0, #Start2)
   print ' '                  (+1,1)

FROM PSPCMPROG P
WHERE OBJECTID1 = 104
  AND OBJECTID2 = 107
  AND OBJECTVALUE2 NOT IN
     (SELECT APPCLASSID FROM PSAPPCLASSDEFN
      WHERE PACKAGEROOT = P.OBJECTVALUE1
         AND APPCLASSID = P.OBJECTVALUE2)

end-select

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSPPLCD-8                                                !
! Descr:     (PEOPLECODE-8) Orphan App Pkg PeopleCode - Level 2        !
!----------------------------------------------------------------------!
begin-procedure SYSPPLCD-8

   let $AuditDescr = '(PEOPLECODE-8) Orphan App Pkg PeopleCode - Level 2 '


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Object Value#'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Object Value'
    let #Column2len = lengthp($Column2Name)

    do RetrieveColumnLength('PSPCMPROG','OBJECTVALUE1',#Field2Len,$FieldType)

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)

    let #numofhdr        = 2

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)

begin-SELECT on-Error=Rpt-SQL-Error
P.OBJECTVALUE1    &OBJECT_VALUE12
P.OBJECTVALUE2    &OBJECT_VALUE22
P.OBJECTVALUE3    &OBJECT_VALUE32
P.OBJECTVALUE4    &OBJECT_VALUE42
P.OBJECTVALUE5    &OBJECT_VALUE52

 if (((#current-line + #rowstoadd) > #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1
   
   print '1'              (+1, #Start1)
   print &OBJECT_VALUE12   (0, #Start2)
   print '2'              (+1, #Start1)
   print &OBJECT_VALUE22   (0, #Start2)
   print '3'              (+1, #Start1)
   print &OBJECT_VALUE32   (0, #Start2)
   print '4'              (+1, #Start1)
   print &OBJECT_VALUE42   (0, #Start2)
   print '5'              (+1, #Start1)
   print &OBJECT_VALUE52   (0, #Start2)
   print ' '                  (+1,1)

FROM PSPCMPROG P
WHERE OBJECTID1 = 104
  AND OBJECTID2 = 105
  AND OBJECTID3 = 107
  AND OBJECTVALUE3 NOT IN
  (SELECT APPCLASSID FROM PSAPPCLASSDEFN
    WHERE PACKAGEROOT = P.OBJECTVALUE1
      AND QUALIFYPATH = P.OBJECTVALUE2
      AND APPCLASSID = P.OBJECTVALUE3)

end-select

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSPPLCD-9                                                !
! Descr:     (PEOPLECODE-9) Orphan App Pkg PeopleCode - Level 3        !
!----------------------------------------------------------------------!
begin-procedure SYSPPLCD-9

   let $AuditDescr = '(PEOPLECODE-9) Orphan App Pkg PeopleCode - Level 3 '


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Object Value#'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Object Value'
    let #Column2len = lengthp($Column2Name)

    do RetrieveColumnLength('PSPCMPROG','OBJECTVALUE1',#Field2Len,$FieldType)

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if

    let #Start1          = 1
    let #Start2          = (#Column1len + 4)

    let #numofhdr        = 2

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)

begin-SELECT on-Error=Rpt-SQL-Error
P.OBJECTVALUE1    &OBJECT_VALUE13
P.OBJECTVALUE2    &OBJECT_VALUE23
P.OBJECTVALUE3    &OBJECT_VALUE33
P.OBJECTVALUE4    &OBJECT_VALUE43
P.OBJECTVALUE5    &OBJECT_VALUE53

 if (((#current-line + #rowstoadd) > #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1
   
   print '1'              (+1, #Start1)
   print &OBJECT_VALUE13   (0, #Start2)
   print '2'              (+1, #Start1)
   print &OBJECT_VALUE23   (0, #Start2)
   print '3'              (+1, #Start1)
   print &OBJECT_VALUE33   (0, #Start2)
   print '4'              (+1, #Start1)
   print &OBJECT_VALUE43   (0, #Start2)
   print '5'              (+1, #Start1)
   print &OBJECT_VALUE53   (0, #Start2)
   print ' '                  (+1,1)

FROM PSPCMPROG P
WHERE P.OBJECTID1 = 104
  AND P.OBJECTID2 = 105
  AND P.OBJECTID3 = 106
  AND P.OBJECTID4 = 107
  AND P.OBJECTVALUE4 NOT IN
     (SELECT APPCLASSID FROM PSAPPCLASSDEFN
       WHERE PACKAGEROOT = P.OBJECTVALUE1
#ifdef MICROSOFT       
         AND QUALIFYPATH = RTRIM(P.OBJECTVALUE2)+':'+RTRIM(P.OBJECTVALUE3)
#else
#ifdef INFORMIX
         AND QUALIFYPATH = TRIM(P.OBJECTVALUE2) || ':' || TRIM(P.OBJECTVALUE3)
#else
         AND QUALIFYPATH = RTRIM(P.OBJECTVALUE2) || ':' || RTRIM(P.OBJECTVALUE3) 
#endif
#endif
         AND APPCLASSID = P.OBJECTVALUE4)

end-select

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure
