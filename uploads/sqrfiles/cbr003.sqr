!***********************************************
!  CBR003:  COBRA Coverage Termination Letters *
!***********************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                $Date:  2006/07/14:03:09:56                           !
!             $Release:  HR9                                           !
!            $Revision:  101                                           !
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'   !Set environment
#Include 'cbrdefs.sqc'
#Include 'usarpt.sqc'   !Variables specific to USA

Begin-Setup
  #Include 'setupdb.sqc'

  Declare-Printer THIS_REPORT
      Type=HPLASERJET
      Font=5
      Point-Size=12
      Pitch=17
      Symbol-Set=0U     ! ASCII symbol set
  End-Declare

  Declare-Layout THIS_REPORT
      Orientation=Portrait
      Top-Margin= .4
      Left-Margin=.60
      Max-Lines=63
      Max-Columns=130
      Char-Width=7.2
      Line-Height=12     ! 72/printer_point-size
  End-Declare

  Declare-Report THIS_REPORT
      Printer-Type=HPLASERJET
      LayOut=THIS_REPORT
  End-Declare

End-Setup

!******************************
Begin-Procedure Init-Variables
!******************************

  let #Page_Maximum  = 57         !Maximum physical rows before bottom line
  let #Page_Max_Last = 40         !Maximum physical rows before last page footer
  let #Start_Row     = 1          !1st row to Print Header
  let #Start_Footer  = 41         !Row to start footer (does not include header)
  let #plan_count  = 0
  let #plan_sub    = 0
  let #plan_depth = 1


#ifndef MVS
#ifndef OS400
  encode '<27>E<27>&l0O<27>&l1E' into $reset_cd
#else
  encode '<39>E<39>&l0O<39>&l1E' into $reset_cd
#endif
#else
  encode '<39>E<39>&l0O<39>&l1E' into $reset_cd
#endif

End-Procedure

!*****************************
Begin-Program
!*****************************

  do Init-Report

  display 'Report Began at: ' noLine
  do Display-Time

  do Main-Report

  display 'Report Ended at: ' noline
  do Display-Time

  let $Form_Cnt = EDIT(#Form_Cnt, '99999')
  let $Form_Cnt = LTRIM($Form_Cnt, ' ')
  display '**** '   NoLine
  display $Form_Cnt NoLine
  display ' COBRA Termination Letters Printed ****'
  display ''

  do StdAPI-Term

End-Program

!******************************
Begin-Procedure Init-Report
!******************************

  do Init-Datetime
  do Init-Number
  do Get-Current-DateTime
  do Format-Datetime($AsofToday, $out, {DEFMDY}, '', '')
  let $AsofMDY = $out

  display ''
  display 'CBR003: Termination Letters'

  do Init-Variables
  do StdAPI-Init

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-Values
  end-if

  Alter-Printer Font=5 Point-Size={NORM}   !Normal point size.

End-Procedure

!*******************************
Begin-Procedure Display-Time
!*******************************

  do Get-Current-Datetime
  do Format-DateTime($asofToday, $AsofMDY, {DEFMDY}, '', '')
  display $AsofToday NoLine
  display ', '       NoLine
  display $AsOfNow   NoLine
  display ''

End-Procedure

!*******************************************
Begin-Procedure Ask-Values
!*******************************************
  do Ask-From-Thru-Date
  do Ask-Reprint-Prompt

End-Procedure

!*******************************************
Begin-Procedure Get-Values
!*******************************************
  do Select-Parameters
  do Get-From-Thru-Date
  do Get-Reprint-Prompt

End-Procedure

!*******************************************
Begin-Procedure Main-Report
!*******************************************
  create-array name=plan_partic size={MAX_PLANS} field=pln_type:char
                                                 field=pln_cvg_end_dt:char

  if $Reprint = 'Y'
     if $ReprintAll = 'Y'
        do Reprint-All
        do Delete-Reprint-ID
     else
        do Reprint-Letter
        do Delete-Reprint-ID
     end-if
  else
     let $Where = ' AND CP.CBR_TERM_NOTIFY_DT IS NULL '
     let $Where2 = ' '
     do Select-Events
  end-if

End-Procedure

!**************************
Begin-Procedure Reprint-All
!**************************

  let $Where2 = ' RPP.CBR_TERM_NOTIFY_DT BETWEEN '
  let $quote = chr(39)
  let $Where2 = $Where2 || $quote || $FromDate || $quote
  let $Where2 = $Where2 || ' AND ' || $quote || $Thrudate || $quote
  let $Where2 = $Where2 || ' AND RPP.CBR_TERM_NOTIFY_DT IS NOT NULL '

  do Select-Reprint-Events

End-Procedure

!*****************************
Begin-Procedure Reprint-Letter
!*****************************

Begin-Select
PRN.PRINT_ID
PRNP.EMPLID
PRNP.BENEFIT_RCD_NBR
PRNP.COBRA_EVENT_ID
PRNP.DEPENDENT_BENEF

!  let $Where2 = ' AND (PP.EMPLID = '''  || &PRNP.EmplId || ''') And '
!  let $TempVal = edit(&PRNP.BENEFIT_RCD_NBR, '9')
!  let $Where2 = $Where || '(PP.BENEFIT_RCD_NBR = ' || $TempVal || ') And '
!  let $TempVal = LTRIM(edit(&PRNP.Cobra_Event_Id, '999'),' ')
!  let $Where2 = $Where || '(PP.COBRA_EVENT_ID = '  || $TempVal  || ') '

  let $Where = $Where || ' AND CP.CBR_TERM_NOTIFY_DT IS NOT NULL '

  let $emplid = &PRNP.EMPLID
  let #benrcd = &PRNP.BENEFIT_RCD_NBR
  let $ltr_getter = &PRNP.DEPENDENT_BENEF
  let #event_id = &PRNP.COBRA_EVENT_ID

  do Select-Data

FROM  PS_CBR_PRNT        PRN,
      PS_CBR_PRNT_PARTIC PRNP
WHERE PRN.PRINT_ID = $Reprint_Id
AND   PRN.PRINT_ID = PRNP.PRINT_ID
ORDER BY PRNP.EMPLID ASC,
         PRNP.BENEFIT_RCD_NBR ASC,
         PRNP.COBRA_EVENT_ID ASC
End-Select

End-Procedure

!******************************
Begin-Heading {HEADING_LINES}
!******************************

  let $Tmp_Text = ' TERMINATION LETTER'

  if (#page_number > 1)
     let $Tmp_Text = $Tmp_Text || ' CONTINUED'
  end-if

  add 1 to #Heading_Count

  Alter-Printer Font=5 Point-Size={NORM}
  let $head1 = UPPER($Tmp_Text)
  print $head1                                 (#Start_Row,1) bold

  if $PrintReprint = 'Y'
     print 'REPRINT'                           (+0,65) bold
  end-if

End-Heading

!************************************
Begin-Procedure Select-Reprint-Events
!************************************

Begin-Select Distinct
RPP.EMPLID
RPP.BENEFIT_RCD_NBR
RPP.DEPENDENT_BENEF
RPP.COBRA_EVENT_ID

  let $emplid = &RPP.EMPLID
  let #benrcd = &RPP.BENEFIT_RCD_NBR
  let $ltr_getter = &RPP.DEPENDENT_BENEF
  let #event_id = &RPP.COBRA_EVENT_ID

  do Select-Data

FROM PS_CBR_PARTIC RPP
WHERE RPP.CBR_PROCESS_STATUS <> 'V'
  AND [$Where2]
End-Select

End-Procedure

!*****************************
Begin-Procedure Select-Events
!*****************************

Begin-Select Distinct
PP.EMPLID
PP.BENEFIT_RCD_NBR
PP.DEPENDENT_BENEF
PP.COBRA_EVENT_ID

  let $emplid = &PP.EMPLID
  let #benrcd = &PP.BENEFIT_RCD_NBR
  let $ltr_getter = &PP.DEPENDENT_BENEF
  let #event_id = &PP.COBRA_EVENT_ID

  do Select-Data

FROM PS_CBR_PARTIC_PLAN PP
WHERE PP.CBR_SCND_EVENT_ID = 0
  AND (PP.COVERAGE_END_DT BETWEEN $FromDate AND $ThruDate
    OR (PP.COBRA_TERM_DT IS NOT NULL AND PP.COBRA_TERM_DT
          BETWEEN $FromDate AND $ThruDate))
  AND PP.CBR_PROCESS_STATUS <> 'V'
  AND PP.CBR_ENROLL_STATUS IN ('E','C')
  [$Where2]
End-Select

End-Procedure

!***************************
Begin-Procedure Select-Data
!***************************

Begin-Select
CP.BENEFIT_PROGRAM
CP.CBR_TERM_NOTIFY_DT
CP.COBRA_EMPLID
CP.COBRA_EVENT_DT

  let $benefit_program = &CP.benefit_program
  let $event_dt = &CP.COBRA_EVENT_DT
  let $cobra_emplid = &CP.COBRA_EMPLID
  if $Reprint = 'Y'
     move &CP.CBR_TERM_NOTIFY_DT to $notify_dt
  else
     move $AsofToday to $notify_dt
  end-if

  let #plan_count = 0
  do Get-Event-Plans

  do Print-Dep-Letter

  if $Reprint = 'N'
   do Update-Term-Notify-Date
  end-if

  if $Reprint = 'Y'
   do Update-Term-Print-Date
  end-if

FROM PS_CBR_PARTIC CP
WHERE CP.EMPLID = $emplid
  AND CP.DEPENDENT_BENEF = $ltr_getter
  AND CP.BENEFIT_RCD_NBR = #benrcd
  AND CP.COBRA_EVENT_ID = #event_id
  [$Where]
End-Select

End-Procedure

!******************************
Begin-Procedure Get-Event-Plans
!******************************
Begin-Select
EP.PLAN_TYPE
EP.COVERAGE_END_DT
EP.COBRA_TERM_DT
EP.COBRA_TERM_REASON

  do Store-Plan-Data

FROM  PS_CBR_PARTIC_PLAN EP
WHERE EP.EMPLID = $emplid
  AND EP.DEPENDENT_BENEF = $ltr_getter
  AND EP.COBRA_EVENT_ID = #event_id
  AND EP.CBR_SCND_EVENT_ID = 0
  AND EP.CBR_ENROLL_STATUS IN ('E','C')
ORDER BY EP.COVERAGE_END_DT
End-Select

End-Procedure

!************************************
Begin-Procedure Store-Plan-Data
!************************************
  move 'PLAN_TYPE' to $FieldName
  move &EP.PLAN_TYPE to $Plan_Type
  move $Plan_Type to $FieldValue
  do Read-Translate-Table
  let $pln = RTRIM($XlatShortName, ' ')

  move 'COBRA_TERM_REASON' to $FieldName
  move &EP.COBRA_TERM_REASON to $Term_Reason
  move $Term_Reason to $FieldValue
  do Read-Translate-Table
  let $Reason = RTRIM($XlatLongName, ' ')

  if &EP.COBRA_TERM_DT = ''
     do Format-Datetime(&EP.COVERAGE_END_DT, $endt, {DEFMDY}, '' , '')
  else
     do Format-Datetime(&EP.COBRA_TERM_DT, $endt, {DEFMDY}, '' , '')
  end-if

  put $pln $endt into plan_partic(#plan_count)
  let #plan_count = #plan_count + 1

End-Procedure

!*******************************
Begin-Procedure Print-Dep-Letter
!*******************************

  let $get_name_only = 'N'
  if $ltr_getter = '00'
     do Get-Empl-Name-Address
  else
     do Get-Dep-Name-Address
     if  $cobra_emplid <> ' '
           and $cobra_emplid <> $emplid
         do Get-Cobra-Emplid-Address
     end-if
  end-if

!------------------------------------------------
! Print Name and Address of employee or dependent
!------------------------------------------------

  if $Reprint = 'Y'
     do Format-Datetime($notify_dt, $notify_mdy, {DEFMDY}, '' , '')
     print $notify_mdy                    (+2,1)
  else
     print $AsofMDY                       (+2,1)
  end-if


  print $name                             (+2,1)
  print 'EmplID:'                          (+0,40)
  print $emplid                            (+0,50)

  let $addr1 = RTRIM($address1, ' ')
  let $addr2 = RTRIM($address2, ' ')
  if $addr1 = ''
     if $addr2 = ''
        print $city_state                  (+1,1)
     else
        print $address2                    (+1,1)
     end-if
  else
     print $address1                       (+1,1)
  end-if

  print 'Benefit Rcd#:'                    (+0,40)
  print #benrcd                            (+0,50) edit {INTGR_MASK}

  if $addr2 = ''
     if $addr1 = ''
        print ' '                          (+1,1)
     else
        print $city_state                  (+1,1)
     end-if
  else
     if $addr1 <> ''
        print $address2                    (+1,1)
     end-if
  end-if

  print 'Event ID:'                        (+0,40)
  print #event_id                          (+0,50) edit {INTGR_MASK}

  if $addr1 = '' or $addr2 = ''
  else
     print $city_state                     (+1,1)
  end-if

  print 'Related ID:'                      (+1,40)
  print $ltr_getter                        (0,50)

!---------------------------------------
! Print Body of Letter
!---------------------------------------

  let $Tmp_Text = 'To: '
  let $Tmp_Text = $Tmp_Text || $name || ','
  print $Tmp_Text                          (+2,1)

  let $lack_shade = 'N'
  let $volun_shade = 'N'
  let $other_shade = 'N'

  let $Tmp_Text = 'This is to notify you that your COBRA coverages listed below will'
  let $Tmp_Text = $Tmp_Text || ' terminate on '
  let $Tmp_Text = $Tmp_Text || $endt || ' for the following reason: '
  print $Tmp_Text                          (+2,1)

  if $Term_Reason = 'L'
    Alter-Printer Font=5 Point-Size={SMALL}  !Reduce font size
    graphic (+1,5,1) box 1 {SMAL_LNSIZE} 75
    Alter-Printer Font=5 Point-Size={NORM}   !Return font size to normal
    let $Tmp_Text = 'Your failure to pay the required premium on a timely basis.'
    print $Tmp_Text                        (+0,7)
    let $lack_shade = 'Y'
  end-if

  if $Term_Reason = 'V'
    Alter-Printer Font=5 Point-Size={SMALL}  !Reduce font size
    graphic (+1,5,1) box 1 {SMAL_LNSIZE} 75
    Alter-Printer Font=5 Point-Size={NORM}   !Return font size to normal
    let $Tmp_Text = 'We have terminated all group health care plans'
    print $Tmp_Text                        (+0,7)
    let $volun_shade = 'Y'
  end-if

  if $Term_Reason <> 'L' and $Term_Reason <> 'V'
    Alter-Printer Font=5 Point-Size={SMALL}  !Reduce font size
    graphic (+1,5,1) box 1 {SMAL_LNSIZE} 75
    Alter-Printer Font=5 Point-Size={NORM}   !Return font size to normal
    let $Tmp_Text = $Reason
    print $Tmp_Text                         (+0,7)
    let $other_shade = 'Y'
  end-if

  if $lack_shade = 'N'
    Alter-Printer Font=5 Point-Size={SMALL}  !Reduce font size
    graphic (+1,5,1) box 1 {SMAL_LNSIZE}
    Alter-Printer Font=5 Point-Size={NORM}   !Return font size to normal
    let $Tmp_Text = 'Your failure to pay the required premium on a timely basis.'
    print $Tmp_Text                          (+0,7)
  end-if

  if $volun_shade = 'N'
    Alter-Printer Font=5 Point-Size={SMALL}  !Reduce font size
    graphic (+1,5,1) box 1 {SMAL_LNSIZE}
    Alter-Printer Font=5 Point-Size={NORM}   !Return font size to normal
    let $Tmp_Text = 'We have terminated all group health care plans'
    print $Tmp_Text                          (+0,7)
  end-if


  if $other_shade = 'N'
    Alter-Printer Font=5 Point-Size={SMALL}  !Reduce font size
    graphic (+1,5,1) box 1 {SMAL_LNSIZE}
    Alter-Printer Font=5 Point-Size={NORM}   !Return font size to normal
    let $Tmp_Text = 'Others'
    print $Tmp_Text                           (+0,7)
  end-if

!---------------------------------------
! Print Expiring Plans box
!---------------------------------------

  let #Start_line = #Current-Line
  let #depth = #plan_count + 1
  print '    Plan Type'                    (+2,{COL1}) bold
  print ' Coverage End Date'               (+0,{COL2}) bold
  graphic (+0,{COL1}, 24) horz-line {SMAL_LNSIZE}

  let #plan_sub = 0
  While #plan_sub < #plan_count
     get $pln $endt from plan_partic(#plan_sub)
     let #tmp_col = {COL1} + 1
     print $pln                            (+1,#tmp_col)
     let #tmp_col = {COL2} + 1
     print $endt                           (+0,#tmp_col)
     let #plan_sub = #plan_sub + 1
  End-While

! Print Plan Type box
  graphic (#Start_line, {COL1}, {BOX_LEN}) box :#depth {SMAL_LNSIZE}

! Print Coverage End Date box
  graphic (#Start_line, {COL2}, {BOX_LEN}) box :#depth {SMAL_LNSIZE}

  move 0 to #i
  While #i < #plan_count
    graphic (+1, 10, 24) horz-line {SMAL_LNSIZE}
    add 1 to #i
  End-While

  let $Tmp_Text = 'Please review the enclosed material regarding your options for'
  let $Tmp_Text = $Tmp_Text || ' converting your health insurance.'
  print $Tmp_Text                          (+2,1)

  let $Tmp_Text = 'If you have any questions about this notice or COBRA continuation'
  let $Tmp_Text = $Tmp_Text || ' coverage, Please contact'
  print $Tmp_Text                          (+1,1)
  do Get-COBRA-Administrator

  print $admin_name                        (+2,1)
  print $admin_title                       (+1,1)
  print ' '                                (+1,1)

  let $addr = RTRIM($admin_address1, ' ')
  if $addr <> ''
     print $admin_address1                 (+1,1)
  end-if

  let $addr = RTRIM($admin_address2, ' ')
  if $addr <> ''
     print $admin_address2                 (+1,1)
  end-if

  let $addr = RTRIM($admin_address3, ' ')
  if $addr <> ''
     print $admin_address3                 (+1,1)
  end-if

  let $addr = RTRIM($admin_address4, ' ')
  if $addr <> ''
     print $admin_address4                 (+1,1)
  end-if

  let #form_cnt = #form_cnt + 1

  new-page

End-Procedure

!*******************************************
Begin-Procedure Update-Term-Notify-Date
!*******************************************

  let $sql-statement = 'CBR003.SQR,Update-COBRA-Status,UPDATE,PS_CBR_PARTIC'
Begin-SQL On-Error=SQL-Error
  UPDATE PS_CBR_PARTIC
  SET CBR_TERM_NOTIFY_DT = $AsOfToday,
  CBR_TERM_PRINT_DT = $AsOfToday
  WHERE EMPLID = $emplid
  AND DEPENDENT_BENEF = $ltr_getter
  AND COBRA_EVENT_ID = #event_id
End-SQL

End-Procedure

!*******************************************
Begin-Procedure Update-Term-Print-Date
!*******************************************

  let $sql-statement = 'CBR003.SQR,Update-COBRA-Status,UPDATE,PS_CBR_PARTIC'
Begin-SQL On-Error=SQL-Error
   UPDATE PS_CBR_PARTIC
   SET CBR_TERM_PRINT_DT = $AsOfToday
   WHERE EMPLID = $emplid
   AND DEPENDENT_BENEF = $ltr_getter
   AND COBRA_EVENT_ID = #event_id
End-SQL

End-Procedure

!*********************************
Begin-Procedure Delete-Reprint-Id
!*********************************

  let $Sql-Statement = 'CBR003: DELETE PS_CBR_PRNT'
  Begin-SQL On-Error=SQL-Error

    DELETE FROM PS_CBR_PRNT
    WHERE PRINT_ID = $Reprint_Id;

  End-SQL

  let $Sql-Statement = 'CBR003: DELETE PS_CBR_PRNT_PARTIC'
  Begin-SQL On-Error=SQL-Error

    DELETE FROM PS_CBR_PRNT_PARTIC
    WHERE PRINT_ID = $Reprint_Id;

  End-SQL

End-Procedure

!****************************************************************
#Include 'readxlat.sqc' !Get translate Values
#Include 'number.sqc'   !Number formatting routines
#Include 'datetime.sqc' !Date formatting routines
#Include 'datemath.sqc' !Date Arithmetic
#Include 'cbraddr.sqc'  !COBRA Address
#Include 'curdttim.sqc' !Get-Current-DateTime procedure
#Include 'rotname1.sqc' !Rotates name field

#Include 'stdapi.sqc'    !Update Process API
#Include 'cbrncntl.sqc'  !Get application run control parameters
#Include 'cbaskval.sqc'  !Ask application run control parameters
#Include 'cbgetval.sqc'  !Get BEN values mask routines
#Include 'askftd.sqc'    !Ask From Thru Date Procedure
!***************************************************************
