!*************************************************
!  PAY125CN:  Record of Employment (ROE) Summary *
!*************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2007 Oracle. All Rights Reserved.                    *
!***********************************************************************
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2007/02/20:21:42:49                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  694792                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup02.sqc'   ! Printer and page-size initialization
#Include 'canrpt.sqc'    !Get CAN variables

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  do Stdapi-Init
  move 'PAY125CN' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  move $Pay125cn_ROE_Summ  to $ReportTitle
  display $ReportTitle
  display ' '

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime

  do Select-Parameters
  move $RC_PAY.FromDate to $FromDate
  move $RC_PAY.ThruDate to $ThruDate
  move $RC_PAY.ThruDate to $AsOfDate

end-procedure


!*************************************************************************
!      REPORT-TRANSLATION   Read language-dependent text from the database
!*************************************************************************
begin-procedure Report-Translation

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('PAY125CN', 'ACTION'            , $Pay125cn_Action          , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'ACTION_REASON'     , $Pay125cn_Action_Reason   , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'COMMENTS'          , $Pay125cn_Comments        , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'DATE'              , $Pay125cn_Date            , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'EI_PAYABLE'        , $Pay125cn_EI_Payable      , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'EMPLID'            , $Pay125cn_Emplid          , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'EMPL_NAME'         , $Pay125cn_Empl_Name       , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'FROMDATE'          , $Pay125cn_FromDate        , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'PAYGROUP1'         , $Pay125cn_Paygroup1       , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'PAYGROUP2'         , $Pay125cn_Paygroup2       , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'REPORT_TITLE'      , $Pay125cn_ROE_Summ        , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'ROE_NBR'           , $Pay125cn_ROE_Nbr         , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'ROE_NBR_AMEND'     , $Pay125cn_ROE_Nbr_Amend   , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'ROE_PROCESS'       , $Pay125cn_ROE_Process     , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'ROE_SEQ'           , $Pay125cn_ROE_Seq         , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'SIN'               , $Pay125cn_SIN             , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'THRUDATE'          , $Pay125cn_ThruDate        , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'WAGE_LOSS_PLAN1'   , $Pay125cn_WLS_Plan1       , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'WAGE_LOSS_PLAN2'   , $Pay125cn_WLS_Plan2       , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'HRSD_ROE_SN'       , $Pay125cn_HRSD_Roe_SN     , #dummy_width)
   do Get_Field_Information ('PAY125CN', 'HRSD_ROE_AMEND_SN' , $Pay125cn_HRSD_Amend_SN   , #dummy_width)


end-procedure



begin-heading 7
  #Include 'stdhdg02.sqc'                       ! and also gets company data

  print $Pay125cn_ROE_Process           (+2,1)

  move $ROE_Process          to $FieldValue
  move 'ROE_PROCESS'         to $FieldName
  do Read-Translate-Table
  move $XlatLongName to $Pay_Freq_Name
  print $XlatLongName                   (0,10)

  print $Pay125cn_FromDate              (0,38)
  do Format-DateTime($RC_PAY.FROMDATE, $out, {DEFDATE}, '', '')
  print $out                            (0,50)
  print $Pay125cn_ThruDate              (0,68)
  do Format-DateTime($RC_PAY.THRUDATE, $out, {DEFDATE}, '', '')
  print $out                            (0,80)

  print $Pay125cn_Empl_Name             (+2,1)
  print $Pay125cn_WLS_Plan1             (0,27)
  print $Pay125cn_Paygroup1             (0,40)
  print $Pay125cn_Date                  (0,50)
  print $Pay125cn_HRSD_Roe_SN           (0, 59)
  print $Pay125cn_HRSD_Amend_SN         (0,69)
  print $Pay125cn_Action                (0,98)

  print $Pay125cn_Emplid                (+1,1)
  print $Pay125cn_SIN                   (0,14)
  print $Pay125cn_WLS_Plan2             (0,30)
  print $Pay125cn_Paygroup2             (0,39)
  print $Pay125cn_EI_Payable            (0,47)
  print $Pay125cn_ROE_Nbr               (0,59)
  print $Pay125cn_ROE_Nbr_Amend         (0,69)
  print $Pay125cn_ROE_Seq               (0,87)
  print $Pay125cn_Action_Reason         (0,98)
  print $Pay125cn_Comments              (0,130)


end-heading


begin-procedure Process-Main

 let $ROE_Process_Select = ' '
 if rtrim($RC_PAY.ROE_Stat_Select, ' ') <> 'A'
   let $ROE_Process_Select = 'AND R.ROE_PROCESS = ' || '''' || $RC_PAY.ROE_Stat_Select || ''''
 end-if

 let $ROE_Sort = ' '
 if rtrim($RC_PAY.ROE_Sort, ' ') = '1'
   let $ROE_Sort = 'R.COMPANY ASC, R.ROE_PROCESS, P.NAME ASC'
 else
   if rtrim($RC_PAY.ROE_Sort, ' ') = '2'
     let $ROE_Sort = 'R.COMPANY ASC, R.ROE_PROCESS, R.EMPLID ASC'
   end-if
 end-if

 do Process-ROE

 if $RC_PAY.ROE_Stat_Select = 'D' and
    $RC_PAY.ROE_Delete = 'Y'
   do Delete-ROE-Future-Pay
   do Delete-ROE
 end-if

end-procedure

begin-procedure Process-ROE
begin-SELECT
R.COMPANY        () on-break print=never level=1 procedure=Company-Change
R.EMPLID
PN.NATIONAL_ID
P.NAME
R.PAYGROUP
R.WAGE_LOSS_PLAN
R.ROE_PROCESS    () on-break print=never level=2 procedure=Process-Change
R.ROE_NBR
R.ROE_NBR_REPL
R.ROE_SEQ
R.UI_PAYABLE_DT
R.MULTIPLE_JOBS
R.ACTION
R.ACTION_REASON
R.COMMENTS
R.ROE_SERIAL_NUM
R.AMEND_ROE_SN


  move &R.COMPANY to $Company
  move &R.ROE_Process to $ROE_Process

  do Print-ROE-Summary


FROM  PS_NAMES         P,
      PS_PERS_NID      PN,
      PS_ROE           R
WHERE P.EMPLID            = R.EMPLID
  AND P.EMPLID            = PN.EMPLID
  AND P.NAME_TYPE = 'PRI'
  AND P.EFFDT =
      (SELECT MAX(PX.EFFDT)
       FROM   PS_NAMES PX
       WHERE  PX.EMPLID    = P.EMPLID
         AND  PX.NAME_TYPE = P.NAME_TYPE
         AND  PX.EFFDT    <= $AsOfDate)
  AND PN.COUNTRY          = {NID_COUNTRY}
  AND PN.NATIONAL_ID_TYPE = $PAYROLL_NID_TYPE
#ifdef MVS
  \$ROE_Process_Select\
#else
  [$ROE_Process_Select]
#endif
  AND UI_PAYABLE_DT BETWEEN $RC_PAY.FROMDATE AND $RC_PAY.THRUDATE
  ORDER BY
#ifdef MVS
  \$ROE_Sort\
#else
  [$ROE_Sort]
#endif
end-SELECT

end-procedure


begin-procedure Print-ROE-Summary

  move &P.Name to $Name
  do Rotate-Name
  move $Name to $EE_Name

  print $EE_Name                        (+2,1)

  print &R.ROE_SERIAL_NUM               (0,59)
  print &R.AMEND_ROE_SN                 (0,73)

  let $Action = &R.ACTION
  do Get-Action
  move $Action_Descr to $Pay_Freq_Name
  print $Action_Descr                   (0,98)


  print &R.EMPLID                       (+1,1)
  print &PN.NATIONAL_ID                 (0,14) edit xxx-xxx-xxx
  print &R.WAGE_LOSS_PLAN               (0,30)
  print &R.PAYGROUP                     (0,40)

  do Format-DateTime(&R.UI_PAYABLE_DT, $out, {DEFDATE}, '', '')
  print $out                            (0,47)

  print &R.ROE_NBR                         (0,59)
  print &R.ROE_NBR_REPL                    (0,73)
  print &R.ROE_SEQ                      (0,89)

  let $Action_Reason = &R.ACTION_REASON
  let $asofdate = &R.UI_PAYABLE_DT
  if rtrim($Action_Reason, ' ') <> ''
    do Get-Action-Reason
  end-if
  print $Action_Reason_Descr            (0,98)

  let $ROE_Comments = &R.COMMENTS

  while instr($ROE_Comments,'  ',1)
    let #locnblank = INSTR($ROE_Comments,'  ',1)
    let $ROE_Comments = {ps-substr}($ROE_Comments,1,#locnblank - 1)   ||
                    {ps-substr}($ROE_Comments,#locnblank + 1,2010)
  end-while

  if rtrim($ROE_Comments,' ') <> ''
    print $ROE_Comments                 (0,130) wrap 50 10 STRIP=<13> ON=<10>
  end-if


end-procedure


begin-procedure Company-Change
  NEW-PAGE

  let $Prev_Company = $Company
end-procedure


begin-procedure Process-Change
  NEW-PAGE

end-procedure


begin-procedure Delete-ROE-Future-Pay
begin-SELECT
A.EMPLID
A.COMPANY
A.WAGE_LOSS_PLAN
A.UI_PAYABLE_DT
A.ROE_SEQ

  do Delete-Future-Pay

FROM PS_ROE A
WHERE A.ROE_PROCESS = 'D'
  AND A.UI_PAYABLE_DT BETWEEN $RC_PAY.FROMDATE AND $RC_PAY.THRUDATE

end-SELECT
end-procedure


begin-procedure Delete-Future-Pay
begin-SQL
DELETE FROM PS_ROE_FUTURE_PAY
WHERE EMPLID = &A.EMPLID
  AND COMPANY = &A.COMPANY
  AND WAGE_LOSS_PLAN = &A.WAGE_LOSS_PLAN
  AND UI_PAYABLE_DT = &A.UI_PAYABLE_DT
  AND ROE_SEQ = &A.ROE_SEQ

end-SQL
end-procedure


begin-procedure Delete-ROE
begin-SQL
DELETE FROM PS_ROE
WHERE ROE_PROCESS = 'D'
  AND UI_PAYABLE_DT BETWEEN $RC_PAY.FROMDATE AND $RC_PAY.THRUDATE

end-SQL
end-procedure

#Include 'rotname1.sqc'  !Rotate-Name procedure
#Include 'getempnm.sqc'  !Get-Employee-Name procedure
#Include 'getactrs.sqc'  !Get-Action-Reason procedure
#Include 'getlocnm.sqc'  !Get-Location-Name procedure
#Include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date conversions
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrctl2.sqc'  !Get-Run-Control procedure
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
#Include 'getcodta.sqc'  !Get-Company-Data procedure
