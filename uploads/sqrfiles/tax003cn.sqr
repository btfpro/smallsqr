!**********************************************
!  TAX003CN:  Tax Submission Summary - Canada *
!**********************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2012, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2012/04/30:16:13:49                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  872522                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment

begin-report
  do Init-Report
  do StdAPI-Term
end-report


begin-procedure Init-Report
  do StdAPI-Init
  move 'TAX003CN' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  move $Tax003cn_Title_tax_sum to $ReportTitle

  do Init-DateTime
  do Init-Number
  do Array-Initialization
  do Payroll-Report-Initialization
end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from TAX003CN  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('TAX003CN', 'TITLE_TAX_SUM' , $Tax003cn_Title_tax_sum , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'GRAND_TOT'     , $Tax003cn_Grand_total   , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'COMP_TOT'      , $Tax003cn_Comp_total    , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'PAY_PER_TOTAL' , $Tax003cn_Pay_per_total , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'CHEQ_DATED'    , $Tax003cn_Cheq_dated    , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'BN'            , $Tax003cn_Bn            , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'INCOME'        , $Tax003cn_Income        , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'PAYROLL'       , $Tax003cn_Payroll       , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'PENSION_PLAN'  , $Tax003cn_Pension_plan  , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'EMP_INSURANCE' , $Tax003cn_Emp_insurance , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'TAX'           , $Tax003cn_Tax           , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'COMPANY'       , $Tax003cn_Company       , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'EMPLOYEE'      , $Tax003cn_Employee      , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'TOT_REMIT'     , $Tax003cn_Tot_remit     , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'CANADA'        , $Tax003cn_Canada        , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'CANADA_T4'     , $Tax003cn_Canada_T4     , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'CANADA_T4A'    , $Tax003cn_Canada_T4A    , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'QUEBEC'        , $Tax003cn_Quebec        , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'QUEBEC_RV2'    , $Tax003cn_Quebec_RV2    , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'PROVINCIAL'    , $Tax003cn_Provincial    , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'GROSS_PAYROLL' , $Tax003cn_Gross_payroll , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'EMPL_PAID'     , $Tax003cn_Empl_paid     , #dummy_width)
   do Get_Field_Information ('TAX003CN', 'QPIP'          , $Tax003cn_QPIP          , #dummy_width)


end-procedure


begin-procedure Array-Initialization
  move '**' to $priorProvince
  move '***********' to $prevEmplid

  create-array name=Totals size=10 field=TotalName:char     -
                                  field=total:number:20     -
                                  field=startCol:number:20  -
                                  field=line:number:20

  put $Tax003cn_Grand_total     into Totals(1) TotalName
  put $Tax003cn_Comp_total      into Totals(2) TotalName
  put $Tax003cn_Pay_per_total   into Totals(3) TotalName
  put 'Cheques Dated'           into Totals(4) TotalName
  put 'BN'                      into Totals(5) TotalName
  put 1  39                 into Totals(0) line(0)  startCol(0)
  put 2  39                 into Totals(0) line(1)  startCol(1)
  put 3  39                 into Totals(0) line(2)  startCol(2)
  put 4  39                 into Totals(0) line(3)  startCol(3)
  put 1  71                 into Totals(0) line(4)  startCol(4)  !  |
  put 3  71                 into Totals(0) line(5)  startCol(5)  !  |
  put 1  86                 into Totals(0) line(6)  startCol(6)  !  |
  put 3  86                 into Totals(0) line(7)  startCol(7)  !  |
  put 1 101                 into Totals(0) line(8)  startCol(8)  !  | n
  put 1 116                 into Totals(0) line(9)  startCol(9)  !  | n
  put 3 125                 into Totals(0) line(10) startCol(10) !  | n
  put 3 140                 into Totals(0) line(11) startCol(11) !  | n
  put 1 161                 into Totals(0) line(12) startCol(12) !  |
  put 2 161                 into Totals(0) line(13) startCol(13) !  |
  put 3 161                 into Totals(0) line(14) startCol(14) !  |
  put 4 161                 into Totals(0) line(15) startCol(15) !  |
  put 5 161                 into Totals(0) line(16) startCol(16) !  |
  put 5  55                 into Totals(0) line(17) startCol(17) !  |
  put 6 161                 into Totals(0) line(18) startCol(18) !  |
  put 7 168                 into Totals(0) line(19) startCol(19)
end-procedure


#Include 'setup32.sqc'  !Printer and page-size initialization


begin-heading 9
  #Include 'stdhtrpi.sqc'
  #Include 'stdhtr05.sqc'

  print $Tax003cn_Income                   (+2,47)
  print $Tax003cn_Payroll                  (0,62)
  print $Tax003cn_Pension_plan             (0,77)
  print $Tax003cn_Emp_insurance            (0,106)
  print $Tax003cn_QPIP                     (0,132)

  print $Tax003cn_Tax                      (+1,50)
  print $Tax003cn_Tax                      (0,66)
  print $Tax003cn_Company                  (0,78)
  print $Tax003cn_Employee                 (0,92)
  print $Tax003cn_Company                  (0,106)
  print $Tax003cn_Employee                 (0,120)
  print $Tax003cn_Company                  (0,132)
  print $Tax003cn_Employee                 (0,146)

  print $Tax003cn_Tot_remit                (0,159)

end-heading


begin-procedure Report

  do Init-Tax-Totals

begin-SELECT
A.COMPANY         () on-break print=never level=1 procedure=Company-Change
A.CHECK_DT        () on-break print=never level=2 procedure=CheckDate-Change
A.PAY_END_DT      () on-break print=never level=3 procedure=PayEndDate-Change
C.CANADA_BN       () on-break print=never level=4 procedure=BN-Change
B.PROVINCE        () on-break print=never level=5 procedure=Province-Change
D.EMPLID          () on-break print=never level=6 procedure=EmplId-Change
D.PAYCHECK_OPTION () on-break print=never level=7 procedure=Option-Change
B.TAX_CLASS_CAN

#ifdef DB2ALL
DECIMAL(SUM(B.TAX_CUR),15,3)       &TAX_CUR
DECIMAL(SUM(B.TXGRS_CUR),15,3)     &TXGRS_CUR
DECIMAL(SUM(B.NLGRS_CUR),15,3)     &NLGRS_CUR
#else
SUM(B.TAX_CUR)                     &TAX_CUR
SUM(B.TXGRS_CUR)                   &TXGRS_CUR
SUM(B.NLGRS_CUR)                   &NLGRS_CUR
#end-if

  do Process-Record

FROM  PS_PAY_CALENDAR A,
      PS_PAY_TAX_CAN B,
      PS_WAGELS_PLAN_TBL C,
      PS_PAY_CHECK D
WHERE
  #ifdef MVS
    \$SLCTCALENDAR\
  #else
    [$SlctCalendar]
  #endif
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY         = B.COMPANY
  AND A.PAYGROUP        = B.PAYGROUP
  AND A.PAY_END_DT      = B.PAY_END_DT
  AND C.COMPANY         = A.COMPANY
  AND C.WAGE_LOSS_PLAN  = B.WAGE_LOSS_PLAN
  AND C.EFFDT           =
      (SELECT MAX(EFFDT)
         FROM PS_WAGELS_PLAN_TBL
        WHERE COMPANY        =  C.COMPANY
          AND WAGE_LOSS_PLAN =  C.WAGE_LOSS_PLAN
          AND EFFDT         <=  A.PAY_END_DT)
  AND D.COMPANY         = B.COMPANY
  AND D.PAYGROUP        = B.PAYGROUP
  AND D.PAY_END_DT      = B.PAY_END_DT
  AND D.OFF_CYCLE       = B.OFF_CYCLE
  AND D.PAGE_NUM           = B.PAGE_NUM
  AND D.LINE_NUM           = B.LINE_NUM
  AND D.SEPCHK          = B.SEPCHK
  AND B.TAX_CLASS_CAN IN ('CIT','QIT','T4A','RV2','PYT','CPP','QPP','EIE','EIR','TT4','QIE','QIR')
GROUP BY A.COMPANY,
         A.PAY_END_DT,
         A.CHECK_DT,
         C.CANADA_BN,
         B.PROVINCE,
         D.EMPLID,
         D.PAYCHECK_OPTION,
         B.TAX_CLASS_CAN
ORDER BY A.COMPANY ASC,
         A.PAY_END_DT ASC,
         A.CHECK_DT ASC,
         C.CANADA_BN ASC,
         B.PROVINCE ASC,
         D.EMPLID ASC,
         D.PAYCHECK_OPTION ASC,
         B.TAX_CLASS_CAN ASC
END-SELECT

  move 1 to #changeLevel
  move 'Y' to $End
  do Province-Change
  do Print-Totals
  new-page
end-procedure


begin-procedure Process-Record

  if &A.COMPANY <> $priorCompany
    move &A.COMPANY to $Company
    move &A.COMPANY to $priorCompany
    do Get-Company-Data  !for Federal_EIN
  end-if

  if &D.PAYCHECK_OPTION <> 'R' and
     &D.EMPLID <> $prevEmplId
        add 1 to #E_Total_Count
        move &D.EMPLID to $prevEmplId
  end-if

  move &C.CANADA_BN         to $Canada_BN
  move &A.CHECK_DT          to $AsOfDate
  move &A.PAY_END_DT        to $PayEndDate

  let  $Province = rtrim(&B.PROVINCE, ' ')

  if &B.TAX_CLASS_CAN = 'CIT'
     move &TAX_CUR         to #CIT_Tax_Cur
     move &TXGRS_CUR       to #CIT_TxGrs_Cur
     add  &TAX_CUR         to #C_Total_Deposit  round=2
  else
   if &B.TAX_CLASS_CAN = 'T4A'
      move &TAX_CUR         to #T4A_Tax_Cur
      move &TXGRS_CUR       to #T4A_TxGrs_Cur
      add  &TAX_CUR         to #T_Total_Deposit  round=2
      add  &TXGRS_CUR       to #G_Total_Gross    round=2
   else
    if &B.TAX_CLASS_CAN = 'QIT'
       move &TAX_CUR         to #QIT_Tax_Cur
       move &TXGRS_CUR       to #QIT_TxGrs_Cur
       add  &TAX_CUR         to #Q_Total_Deposit round=2
    else
     if &B.TAX_CLASS_CAN = 'RV2'
        move &TAX_CUR             to #RV2_Tax_Cur
        move &TXGRS_CUR           to #RV2_TxGrs_Cur
        add  &TAX_CUR             to #V_Total_Deposit  round=2
     else
      if &B.TAX_CLASS_CAN = 'TT4'
         move &TXGRS_CUR   to #True_T4_TxGrs_Cur
         add  &TXGRS_CUR   to #G_Total_Gross  round=2
      else
       if &B.TAX_CLASS_CAN = 'PYT'
          move &TAX_CUR     to #Payroll_Tax_Cur
          move &TXGRS_CUR   to #Payroll_TxGrs_Cur
          add  &TAX_CUR     to #P_Total_Deposit round=2
       else
        if &B.TAX_CLASS_CAN = 'CPP'
           move &TXGRS_CUR       to #CPP_Earns_Cur
           move &TAX_CUR         to #CPP_Contrib_Cur
           move &NLGRS_CUR       to #CPP_NLGrs_Cur
           add  &TAX_CUR         to #C_Total_Deposit  round=2   !Employer share
           add  &TAX_CUR         to #C_Total_Deposit  round=2   !Employee share
        else
         if &B.TAX_CLASS_CAN = 'QPP'
            move &TXGRS_CUR       to #QPP_Earns_Cur
            move &TAX_CUR         to #QPP_Contrib_Cur
            move &NLGRS_CUR       to #QPP_NLGrs_Cur
            add  &TAX_CUR         to #Q_Total_Deposit  round=2   !Employer share
            add  &TAX_CUR         to #Q_Total_Deposit  round=2   !Employee share
         else
          if &B.TAX_CLASS_CAN = 'EIR'
             move &TAX_CUR     to #UI_ER_Premium_Cur
             add  &TAX_CUR     to #C_Total_Deposit  round=2
          else
           if &B.TAX_CLASS_CAN = 'EIE'
              move &TAX_CUR   to #UI_EE_Premium_Cur
              add  &TAX_CUR   to #C_Total_Deposit   round=2
           else
              if &B.TAX_CLASS_CAN = 'QIE'
                 move &TAX_CUR     to #QIE_Premium_Cur
                 add  &TAX_CUR     to #Q_Total_Deposit  round=2
              else
                 if &B.TAX_CLASS_CAN = 'QIR'
                    move &TAX_CUR     to #QIR_Premium_Cur
                    add  &TAX_CUR     to #Q_Total_Deposit  round=2
                 end-if
              end-if
           end-if
          end-if
         end-if
        end-if
       end-if
      end-if
     end-if
    end-if
   end-if
  end-if

end-procedure

begin-procedure Init-Tax-Totals

  move 0.00      to #CIT_Tax_Cur
  move 0.00      to #CIT_TxGrs_Cur
  move 0.00      to #T4A_Tax_Cur
  move 0.00      to #T4A_TxGrs_Cur
  move 0.00      to #QIT_Tax_Cur
  move 0.00      to #QIT_TxGrs_Cur
  move 0.00      to #RV2_Tax_Cur
  move 0.00      to #RV2_TxGrs_Cur
  move 0.00      to #True_T4_TxGrs_Cur
  move 0.00      to #Payroll_Tax_Cur
  move 0.00      to #Payroll_TxGrs_Cur
  move 0.00      to #CPP_Earns_Cur
  move 0.00      to #CPP_Contrib_Cur
  move 0.00      to #CPP_NLGrs_Cur
  move 0.00      to #QPP_Earns_Cur
  move 0.00      to #QPP_Contrib_Cur
  move 0.00      to #QPP_NLGrs_Cur
  move 0.00      to #UI_ER_Premium_Cur
  move 0.00      to #UI_EE_Premium_Cur
  move 0.00      to #QIE_Premium_Cur
  move 0.00      to #QIR_Premium_Cur

end-procedure

begin-procedure Company-Change
  move 2 to #changeLevel
  do Province-Change
  do Print-Totals
  new-page
end-procedure

begin-procedure PayEndDate-Change
  move 3 to #changeLevel
  do Province-Change
  do Print-Totals
  new-page
end-procedure

begin-procedure CheckDate-Change
  move 4 to #changeLevel
  do Province-Change
  do Print-Totals
  new-page
end-procedure

begin-procedure BN-Change
  move 5 to #changeLevel
  do Province-Change
  do Print-Totals
end-procedure

begin-procedure EmplId-Change
  move 6 to #changeLevel
  do Province-Change
end-procedure

begin-procedure Option-Change
  move 7 to #changeLevel
  do Province-Change
end-procedure

begin-procedure Province-Change

  if $Province <> $priorProvince
    move $Province to $priorProvince

    if $Province <> 'QC'
        move $Tax003cn_Canada  to $ProvinceName
    else
        move $Tax003cn_Quebec to $ProvinceName
    end-if
  end-if

  array-add #CIT_Tax_Cur        -
            #T4A_Tax_Cur        -
            #QIT_Tax_Cur        -
            #RV2_Tax_Cur        -
            #CPP_Contrib_Cur    -
            #QPP_Contrib_Cur    -
            #CPP_Contrib_Cur    -
            #QPP_Contrib_Cur    -
            #UI_ER_Premium_Cur  -
            #UI_EE_Premium_Cur  -
            #QIR_Premium_Cur    -
            #QIE_Premium_Cur    -
            #C_Total_Deposit    -
            #T_Total_Deposit    -
            #Q_Total_Deposit    -
            #V_Total_Deposit    -
            #P_Total_Deposit    -
            #Payroll_Tax_Cur    -
            #G_Total_Gross      -
            #E_Total_Count      -
            to Totals(5) total(0) total(1) total(2) total(3) total(4) -
                         total(5) total(6) total(7) total(8) total(9) -
                         total(10) total(11) total(12) total(13)      -
                         total(14) total(15) total(16) total(17)      -
                         total(18) total(19)

  move 0.00 to #C_Total_Deposit
  move 0.00 to #T_Total_Deposit
  move 0.00 to #Q_Total_Deposit
  move 0.00 to #V_Total_Deposit
  move 0.00 to #P_Total_Deposit
  move 0.00 to #G_Total_Gross
  move 0.00 to #E_Total_Count

  do Init-Tax-Totals

end-procedure


begin-procedure Print-Totals

  if #current-line > 50  !ensure enough lines for the tax authority
    new-page
  else
    next-listing
  end-if

  move 5 to #totalRow

  while #totalRow >= #changeLevel
    move #totalRow to #rollRow
    subtract 1 from #rollRow
    get $TotalName from Totals(#totalRow) TotalName

    if $TotalName = 'BN'
      move $Tax003cn_Bn to $TotalName
      concat ' ' with $TotalName
      concat $Canada_BN with $TotalName
    end-if

    if $TotalName = 'Cheques Dated'
      move $Tax003cn_Cheq_dated to $TotalName
      concat ' ' with $TotalName
      do Format-DateTime($AsOfDate, $out, {DEFDATE}, '', '')
      concat $out with $TotalName
    end-if

    print $TotalName           (1,1)
    print $Tax003cn_Canada_T4  (1,28)
    print $Tax003cn_Canada_T4A (2,28)
    print $Tax003cn_Quebec     (3,28)
    print $Tax003cn_Quebec_RV2 (4,28)
    print $Tax003cn_Provincial (5,28)
    print $Tax003cn_Gross_payroll (6,28)
    print $Tax003cn_Empl_paid     (7,28)
    move 0 to #i

    while #i <= 19
      get #total from Totals(#totalRow) total(#i)
      get #startCol #line from Totals(0) startCol(#i) line(#i)
      if #i = 18
        let #total = round(#total,0)
      end-if
      if #i = 19
        do Format-Number(#total, $out, '999,999')
      else
        if (#i = 8) or (#i = 9)
          do Format-Number(#total, $out, '99999,999.99mi')
        else
          do Format-Number(#total, $out, 'b99,999,999.99mi')
        end-if
      end-if
      print $out (#line,#startCol)
      array-add #total to Totals(#rollRow) total(#i)
      put 0 into Totals(#totalRow) total(#i)
      add 1 to #i
    end-while

    subtract 1 from #totalRow

    if #changeLevel = 5
        next-listing skiplines=2 need=8
    else
        next-listing skiplines=3 need=8
    end-if

  end-while

  if $End = 'Y'
    do Reset
  end-if

end-procedure


#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'payinit.sqc'   !Report Initialization and Timing
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
