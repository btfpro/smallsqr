!***********************************************************************
!  TAX109 : W4 - EMPLOYEE SOCIAL SECURITY NUMBER VERIFICATION RPT.     *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/10/23:13:13:00                                 !
!       $Release:  HR9                                                 !
!      $Revision:  103                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set Database Environment
#include 'setup31.sqc'   !Printer and page-size initialization
!#DEFINE TAXTEST

begin-report
  do Stdapi-Init
  move 'TAX109' to $ReportID
  move 'EMPLOYEE SSN VERIFICATION RPT' to $ReportTitle
  display $ReportTitle
  display ''

  do Get-Run-ID

  move ' ' to $SelectedDates
  if RTRIM($RC_PAY.FROMDATE, ' ') <> ''
     do Get-From-Thru-Date
  end-if
  do Init-DateTime
  do Get-Current-DateTime
  do Format-DateTime($AsOfToday, $out, {DEFMDY},'','')
  move $out to $ReportDate
  display 'Report Began: ' noline
  display $AsOfNow
  display ''

  do Format-DateTime($Fromdate, $FmDate, {DEFMDY},'','')
  do Format-DateTime($ThruDate, $TuDate, {DEFMDY},'','')

  do Check-Processing
  do  Pull-Selection-Criteria
  if $Media = 'D'
    let $ReportID2 = 'EVSREQ2K'
    do Calculate-Diskette-Capacity
    #ifdef TAXTEST
        move 50 to #MaxRecordsPerDiskette
    #endif

    do Open-File
  end-if

  if $Media = 'T'
    let $ReportID2 = 'VATPR2K'
    do Open-File
  end-if

  if $Reg_Select_Proc = 'H'
     do Get-EVS-Print-Hire
  else
     do Get-EVS-Print
  end-if

  do Get-Current-DateTime
  display ''
  display 'Report Ended: ' noline
  display $AsOfNow
  do Stdapi-Term
end-report

begin-heading 7

#include 'stdhdg01.sqc'

  do Format-DateTime($Fromdate, $FmDate, {DEFMDY},'','')
  do Format-DateTime($ThruDate, $TuDate, {DEFMDY},'','')

  if $Media = 'R'

    print 'List Of Social Security Numbers for Verification ' (+1,1)
    print ' Requester Identification Code - '                 ()
    print $Requester-ID-CD                                    ()
    if $Reg_Select_Proc = 'H'
      print ' From ' ()
      print $FmDate ()
      print '  to  '  ()
      print $TuDate ()
    end-if

    print 'Soc Sec Nbr Last Name                        First Name '    (+2,1)
    print '                     Middle Name                  Date o'     (0,57)
    print 'f Birth   Gender'                                             (0,113)
    print '----------- -------------------------------- -----------'    (+1,1)
    print '-------------------- ---------------------------- ------'     (0,57)
    print '--------  ------'                                             (0,113)
  end-if

end-heading

begin-procedure Get-Run-ID
  move ' ' to $FromDate
  move ' ' to $ThruDate
  if $Prcs_Process_Instance = ''
     do Prompt
  else

    do Select-Parameters
  end-if
end-procedure


Begin-Procedure Prompt

while 1 = 1
    input $RunID maxlen=3 'Enter Valid Run ID' type=char

    if RTRIM($RunID, ' ') = ''
      display 'Exiting....'
      Stop
    end-if

    do edit-Run

    if $Break_YN = 'Y'
      Break
    End-If
End-While

End-Procedure


begin-procedure Edit-Run

  move 0 to #Found


begin-select

Z.FROMDATE
Z.THRUDATE


  add 1 to #Found

FROM PS_RC_PAY Z
where Z.RUN_CNTL_ID = $RunID
end-select

  if #Found = 0
    display 'Error --  Not a Valid Run ID.'
    move 'N' to $Break_YN
  else

    if #Found = 1
    move 'Y' to $Break_YN

         Let $RC_PAY.FROMDATE = &Z.FROMDATE
         Let $RC_PAY.THRUDATE = &Z.THRUDATE

    end-if

  end-if



end-procedure

begin-procedure Pull-Selection-Criteria

if $Reg_Select_Proc = 'M'

  move 0 to #CompanyFound

  move 'AND J.COMPANY IN (''' to $SelectedCos
  move ' ' to $SelectedCompany

begin-select
A.COMPANY
    if rtrim(&A.COMPANY, ' ') > ''
      add 1 to #CompanyFound
      move &A.COMPANY     to $SelectedCompany
      let $SelectedCos = $SelectedCos || $SelectedCompany || ''','''
    end-if

FROM PS_RC_TAX109_CO A
     WHERE A.OPRID       = $Prcs_OprID
       AND A.RUN_CNTL_ID = $Prcs_Run_Cntl_ID

end-select
  if #CompanyFound > 0
    let $SelectedCos = SUBSTR($SelectedCos,1,LENGTH($SelectedCos) - 2)
    let $SelectedCos = $SelectedCos || ')'
  else
    move ' ' to $SelectedCos
  end-if

end-if


if $Reg_Select_Proc = 'P'

  move 0 to #CompanyFound

  move 'AND J.COMPANY IN (''' to $SelectedCos
  move ' ' to $SelectedCompany

  move 0 to #PayGrpFound

  move 'AND J.PAYGROUP IN (''' to $SelectedPGs
  move ' ' to $SelectedPayGroup

begin-select
B.COMPANY
B.PAYGROUP
    if rtrim(&B.PAYGROUP, ' ') > ''
       add 1 to #PayGrpFound
       move &B.PAYGROUP     to $SelectedPayGrp
       let $SelectedPGs = $SelectedPGs || $SelectedPayGrp || ''','''
    end-if
    if rtrim(&B.COMPANY, ' ') > ''
      add 1 to #CompanyFound
      move &B.COMPANY     to $SelectedCompany
      let $SelectedCos = $SelectedCos || $SelectedCompany || ''','''
    end-if

FROM PS_RC_TAX109_PG B
     WHERE B.OPRID       = $Prcs_OprID
       AND B.RUN_CNTL_ID = $Prcs_Run_Cntl_ID

end-select

  if #CompanyFound > 0
    let $SelectedCos = SUBSTR($SelectedCos,1,LENGTH($SelectedCos) - 2)
    let $SelectedCos = $SelectedCos || ')'
  else
    move ' ' to $SelectedCos
  end-if

  if #PayGrpFound > 0
    let $SelectedPGs = SUBSTR($SelectedPGs,1,LENGTH($SelectedPGs) - 2)
    let $SelectedPGs = $SelectedPGs || ')'
  else
    move ' ' to $SelectedPGs
  end-if

  if #CompanyFound = 0 and #PayGrpFound = 0
    move ' ' to $SelectedCos
  end-if

end-if

end-procedure

begin-procedure Get-EVS-Print
  display 'Generating report . . . '

begin-SELECT
NID.NATIONAL_ID
PERS.EMPLID
PERS.LAST_NAME
PERS.FIRST_NAME
PERS.MIDDLE_NAME
PERSDATA.SEX
PERSON.BIRTHDATE

  let $Remove_Hyphen = 'Y'
  let $name = &PERS.MIDDLE_NAME
  do Edit-Name
  let $MiddleName = $Name

  let $name = &PERS.FIRST_NAME
  do Edit-Name
  let $FirstName = $Name

  let $Remove_Hyphen = 'N'
  let $name = &PERS.LAST_NAME
  do Edit-Name
  let $LastName = $Name
  let $SSN = &NID.NATIONAL_ID
  let $DOB = &PERSON.BIRTHDATE
  let $Gender = rtrim(&PERSDATA.SEX, ' ')

  do Print-EVS-Print

FROM PS_PERS_NID NID, PS_PERSON PERSON, PS_PERSON_NAME PERS,  PS_PERS_DATA_MAX PERSDATA,
     PS_EMPLOYMENT EMPLOY, PS_JOB J
WHERE NID.EMPLID = PERS.EMPLID
  AND NID.EMPLID = PERSON.EMPLID
  AND NID.EMPLID = PERSDATA.EMPLID
  AND NID.EMPLID = EMPLOY.EMPLID
  AND NID.EMPLID = J.EMPLID
  AND J.EMPL_RCD = EMPLOY.EMPL_RCD
  AND NID.COUNTRY = 'USA'
  AND EMPLOY.HIRE_DT =
     (SELECT MAX(HIRE_DT)
        FROM PS_EMPLOYMENT EMPLOYA
        WHERE EMPLOY.EMPLID = EMPLOYA.EMPLID)
  AND J.EFFDT =
     (SELECT MAX (EFFDT)
          FROM PS_JOB JA
          WHERE  J.EMPLID    = JA.EMPLID
            AND  J.EMPL_RCD  = JA.EMPL_RCD)
  AND  J.EFFSEQ =
     (SELECT MAX(EFFSEQ)
          FROM    PS_JOB
          WHERE   J.EMPLID     = EMPLID
            AND   J.EMPL_RCD    = EMPL_RCD
            AND   J.EFFDT        = EFFDT)

  [$SelectedEEs]
  [$SelectedCos]
  [$SelectedPGs]

end-SELECT
  display 'Done'
  do Delete-Sel-Employees-Table
  do Delete-Sel-Company-Table
  do Delete-Sel-PayGroup-Table
end-procedure

begin-procedure Get-EVS-Print-Hire
  display 'Generating report . . . '

begin-SELECT
NID2.NATIONAL_ID
PERS2.EMPLID
PERS2.LAST_NAME
PERS2.FIRST_NAME
PERS2.MIDDLE_NAME
PERSDATA2.SEX
PERSON2.BIRTHDATE

  let $Remove_Hyphen = 'Y'
  let $name = &PERS2.MIDDLE_NAME
  do Edit-Name
  let $MiddleName = $Name
  let $name = &PERS2.FIRST_NAME
  do Edit-Name
  let $FirstName = $Name
  let $Remove_Hyphen = 'N'
  let $name = &PERS2.LAST_NAME
  do Edit-Name
  let $LastName = $Name
  let $SSN = &NID2.NATIONAL_ID
  let $DOB = &PERSON2.BIRTHDATE
  let $Gender = rtrim(&PERSDATA2.SEX, ' ')

  do Print-EVS-Print

FROM PS_PERS_NID NID2, PS_PERSON PERSON2, PS_PERSON_NAME PERS2,  PS_PERS_DATA_MAX PERSDATA2,
     PS_EMPLOYMENT EMPLOY2, PS_JOB J2
WHERE NID2.EMPLID = PERS2.EMPLID
  AND NID2.EMPLID = PERSON2.EMPLID
  AND NID2.EMPLID = PERSDATA2.EMPLID
  AND NID2.EMPLID = EMPLOY2.EMPLID
  AND NID2.EMPLID = J2.EMPLID
  AND J2.EMPL_RCD = EMPLOY2.EMPL_RCD
  AND NID2.COUNTRY = 'USA'
  AND EMPLOY2.HIRE_DT =
     (SELECT MAX(EMPLOY3.HIRE_DT)
        FROM PS_EMPLOYMENT EMPLOY3
        WHERE EMPLOY2.EMPLID = EMPLOY3.EMPLID)
  AND J2.EFFDT =
     (SELECT MAX (J3.EFFDT)
          FROM PS_JOB J3
          WHERE  J2.EMPLID    = J3.EMPLID
            AND  J2.EMPL_RCD  = J3.EMPL_RCD)
  AND  J2.EFFSEQ =
     (SELECT MAX(J4.EFFSEQ)
          FROM    PS_JOB J4
          WHERE   J2.EMPLID     = J4.EMPLID
            AND   J2.EMPL_RCD    = J4.EMPL_RCD
            AND   J2.EFFDT        = J4.EFFDT)
  AND EMPLOY2.HIRE_DT BETWEEN $FromDate AND $ThruDate

end-SELECT
  display 'Done'
  do Delete-Sel-Employees-Table
  do Delete-Sel-Company-Table
  do Delete-Sel-PayGroup-Table
end-procedure

Begin-Procedure Print-EVS-Print

  do Format-DateTime($DOB, $DOB, {DEFCMP},'','')
  let $DOB1 = SUBSTR($DOB,5,2) || SUBSTR($DOB,7,2) || SUBSTR($DOB,1,4)
  if $Media = 'R'

    print $SSN                   (+1,1)
    print $LastName               (0,14)
    print $FirstName              (0,47)
    print $MiddleName             (0,79)
    print $DOB1                   (0,108)
    print $Gender                 (0,124)
  end-if

  if $Media = 'D' or $Media = 'T'


    if $Media = 'D'
      if #RecordCount >= #MaxRecordsPerDiskette
        do Open-File
      end-if
    end-if

       let $Mult_Rqst_ID = '000'

       write 10 from  $SSN:9      ! 1 - 9
                     'TPV':3      ! 10-12
                     '214':3      ! 13-15
                 $LastName:13     ! 16 - 28
                $FirstName:10     ! 29 - 38
               $MiddleName:7      ! 39 - 45
                     $DOB1:8      ! 46 - 53
                   $Gender:1      ! 54 - 54
                       $Sp:35     ! 55 - 89
                       $Sp:14     ! 90 - 103
                       $Sp:20     ! 104 - 123
          $Requester-ID-CD:4      ! 124 - 127
             $Mult_Rqst_ID:3      ! 128 - 130

          Add 1 to #RecordCount

  end-if

End-Procedure

begin-procedure Open-File
if $Media = 'D'
   move 0 to #RecordCount
   if #FileExtension <> 0
      close 10
   end-if
   add 1 to #FileExtension
   move #FileExtension to $FileExtension 099
#ifdef OS400
   let $FileExtension = '(D' || $FileExtension || ')'
   let $FileID = '{IMPORTPREFIX}' || $ReportID2 || $FileExtension
#else
   let $FileID = '{IMPORTPREFIX}' || $ReportID2 || '.' || $FileExtension
#endif
   open $FileID as 10 for-writing record=130:fixed
else

  let $FileID = '{IMPORTPREFIX}' || $ReportID2 || '{IMPORTSUFFIX}'
  open $FileID as 10 for-writing record=130:fixed
end-if
end-procedure

begin-procedure Close-File

if #FileExtension <> 0
   close 10
   move 0 to #FileExtension
end-if
end-procedure

Begin-Procedure Check-Processing

begin-SELECT

RC_EVS.REG_SELECT_PROC
RC_EVS.MEDIA
RC_EVS.REQUESTER_ID_CD

FROM  PS_RC_TAX109_EVS RC_EVS

end-SELECT

  let $Reg_Select_Proc     = RTRIM(&RC_EVS.REG_SELECT_PROC, ' ')
  let $Media               = RTRIM(&RC_EVS.MEDIA, ' ')
  let $Requester-ID-Cd     = RTRIM(&RC_EVS.REQUESTER_ID_CD, ' ')

  if $Reg_Select_Proc = 'E'                                     !Load W-4 data for selected employees
    do Get-Selected-EEs
  end-if


End-Procedure

Begin-Procedure Get-Selected-EEs

move 'AND NID.EMPLID in (''' to $SelectedEEs
move ' ' to $SelectedEmplID

begin-SELECT
X.SELECTED_EE

  move &X.Selected_EE     to $SelectedEmplID

  let $SelectedEEs = $SelectedEEs || $SelectedEmplID || ''','''
  move 'Y' to $EE_Selected

FROM  PS_RC_TAX109_EE X
WHERE X.OPRID         = $Prcs_OprID
  AND X.RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
end-SELECT

let $SelectedEEs = SUBSTR($SelectedEEs,1,LENGTH($SelectedEEs) - 2)
let $SelectedEEs = $SelectedEEs || ')'

End-Procedure

Begin-Procedure Delete-Sel-Employees-Table
begin-SQL on-error=Ignore
  DELETE FROM PS_RC_TAX109_EE
  WHERE OPRID       = $Prcs_OprID
    AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID

end-SQL
End-Procedure

Begin-Procedure Delete-Sel-Company-Table
begin-SQL on-error=Ignore
  DELETE FROM PS_RC_TAX109_CO
  WHERE OPRID       = $Prcs_OprID
    AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID

end-SQL
End-Procedure

Begin-Procedure Delete-Sel-PayGroup-Table
begin-SQL on-error=Ignore
  DELETE FROM PS_RC_TAX109_PG
  WHERE OPRID       = $Prcs_OprID
    AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID

end-SQL

End-Procedure

Begin-Procedure Edit-Name

    let $Name = rtrim($Name, ' ')

    if $Remove_Hyphen = 'Y'

       while INSTR($Name,'-',1)
         let #locnhyphen = INSTR($Name,'-',1)
         let $Name = SUBSTR($Name,1,#locnhyphen - 1)   ||
                      SUBSTR($Name,#locnhyphen + 1,30)
       end-while
    end-if

    while INSTR($Name,' ',1)
      let #locnblank = INSTR($Name,' ',1)
      let $Name = SUBSTR($Name,1,#locnblank - 1)   ||
                      SUBSTR($Name,#locnblank + 1,30)
    end-while

    while INSTR($Name,'.',1)
      let #locnper = INSTR($Name,'.',1)
      let $Name = SUBSTR($Name,1,#locnper - 1)   ||
                      SUBSTR($Name,#locnper + 1,30)
    end-while

    while INSTR($Name,'''',1)
      let #locnhapost = INSTR($Name,'''',1)
      let $Name = SUBSTR($Name,1,#locnhapost - 1)   ||
                      SUBSTR($Name,#locnhapost + 1,30)
    end-while

End-Procedure
begin-procedure Ignore
! dummy procedure to avoid SQL error message on delete of empty table
end-procedure

#include 'getdatcd.sqc'  !Get Year from As of date
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'stdapi.sqc'    !Update Process API
#include 'payrctl2.sqc'  !Select Run Control Parameters
#include 'pygetval.sqc'  !To Get as Of date
#include 'number.sqc'    !Format numbers
#include 'getfrmat.sqc'  !Calculate MaxRecSize for diskettes.
