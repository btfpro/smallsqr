!***********************************************************************
!  PAY025CN:  Balance Adjustment Audit Report for Canada                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:04:33:52                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup32.sqc'     ! Init printer and page size


#Define C_EmplID                  1
#Define C_REASON                  1
#Define C_BAL_ADJ_SEQ_EI         13
#Define C_BAL_ADJ_SEQ            14
#Define C_DT_ENTERED_EI          17
#Define C_DT_ENTERED             18
#Define C_CALENDAR_YEAR          29
#Define C_QTRCD                  38
#Define C_EI_PERIOD_DT           41
#Define C_MONTHCD                43
#Define C_FIELD_NAME             53  !  51
#Define C_BEFORE_ADJ             74  !  72
#Define C_AMOUNT_ADJ             88  !  86
#Define C_AFTER_ADJ             102  ! 100
#Define C_PROVINCE              117  ! 115
#Define C_WAGE_LOSS_PLAN_EI     118
#Define C_WAGE_LOSS_PLAN        127  ! 125
#Define C_PLAN_TYPE             138  ! 136
#Define C_BENEFIT_PLAN          144  ! 142
#Define C_DED_CODE              153  ! 151
#Define C_DED_CLASS             164  ! 162
#Define C_GARN_PLAN_TYPE        117  ! 115
#Define C_GARN_BENEFIT_PLAN     123  ! 121
#Define C_GARN_DED_CODE         132  ! 130
#Define C_GARN_DED_CLASS        143  ! 141
#Define C_GARNISH_ID            156  ! 154
#Define C_SPECIAL_ACCUM         138  ! 136
#Define C_EARN_CODE             151  ! 145 ,147
#Define C_TAX_CLASS             140
#Define C_ARR_BEFORE_ADJ        35
#Define C_ARR_AMOUNT_ADJ        50
#Define C_ARR_AFTER_ADJ         65
#Define C_ARR_PLAN_TYPE         80
#Define C_ARR_BENEFIT_PLAN      86
#Define C_ARR_DED_CODE          95
#Define C_ARR_DED_CLASS         106

begin-report

  do Stdapi-Init
  move 'PAY025CN' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  move $Pay025cn_Title_bal_adjaud to $ReportTitle

  do Init

  if $Break_Prompt = 'N'
    do Main
  end-if

  do Stdapi-Term
  do Reset
end-report

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from PAY025CN  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('PAY025CN', 'TITLE_BAL_ADJ_AUD' , $Pay025cn_Title_bal_adjaud , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'CHECK_HDG'         , $Pay025cn_Cheque_heading   , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'EARN_HDG'          , $Pay025cn_Earnings_heading , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'DEDUC_HDG'         , $Pay025cn_Deduc_heading    , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'GARN_HDG'          , $Pay025cn_Garn_heading     , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TAX_HDG'           , $Pay025cn_Tax_heading      , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'EI_HDG'            , $Pay025cn_Ei_heading       , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'EMPLID'            , $Pay025cn_Emplid           , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'ADJ'               , $Pay025cn_Adj              , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'DATE'              , $Pay025cn_Date             , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'CALENDAR'          , $Pay025cn_Calendar         , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'QTR'               , $Pay025cn_Qtr              , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'MONTH'             , $Pay025cn_Month            , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'FIELD'             , $Pay025cn_Field            , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'BEFORE'            , $Pay025cn_Before           , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'AFTER'             , $Pay025cn_After            , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'ADJUSTMENT'        , $Pay025cn_Adjustment       , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'AMOUNT'            , $Pay025cn_Amount           , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'REASON'            , $Pay025cn_Reason           , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'SEQ'               , $Pay025cn_Seq              , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'ADJUSTED'          , $Pay025cn_Adjusted         , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'YEAR'              , $Pay025cn_Year             , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'CODE'              , $Pay025cn_Code             , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'CODE2'             , $Pay025cn_Code2            , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'CODE3'             , $Pay025cn_Code3            , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'NAME'              , $Pay025cn_Name             , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'WAGE'              , $Pay025cn_Wage             , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'PROVINCE'          , $Pay025cn_Province         , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'LOSS_PLAN'         , $Pay025cn_Loss_plan        , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'SPECIAL'           , $Pay025cn_Special          , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'EARN'              , $Pay025cn_Earn             , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'ACCUMULATOR'       , $Pay025cn_Accumulator      , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'PLAN'              , $Pay025cn_Plan             , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'PLAN2'             , $Pay025cn_Plan2            , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'BENEFIT'           , $Pay025cn_Benefit          , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'DEDUCTION'         , $Pay025cn_Deduction        , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'CLASS'             , $Pay025cn_Class            , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'ID'                , $Pay025cn_Id               , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TYPE'              , $Pay025cn_Type             , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TYPE2'             , $Pay025cn_Type2            , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'GARNISH'           , $Pay025cn_Garnish          , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'EI_PERIOD'         , $Pay025cn_Ei_period        , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'EARNINGS'          , $Pay025cn_Earnings         , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'END_DATE'          , $Pay025cn_End_date         , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'CHECK'             , $Pay025cn_Check            , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'GARNISHMENT'       , $Pay025cn_Garnishment      , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TAX'               , $Pay025cn_Tax              , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'ROE'               , $Pay025cn_Roe              , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'NO'                , $Pay025cn_No               , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'ADJUST_FOUND'      , $Pay025cn_Adjust_found     , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_HRS_YTD'       , $Pay025cn_Tot_hrs_ytd      , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_GRS_YTD'       , $Pay025cn_Tot_grs_ytd      , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_TAXES_YTD'     , $Pay025cn_Tot_taxes_ytd    , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'DED_YTD'           , $Pay025cn_ded_ytd          , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_NET_YTD'       , $Pay025cn_Tot_net_ytd      , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_HRS_QTD'       , $Pay025cn_Tot_hrs_qtd      , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_HRS_MTD'       , $Pay025cn_Tot_hrs_mtd      , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_GRS_QTD'       , $Pay025cn_Tot_grs_qtd      , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_GRS_MTD'       , $Pay025cn_Tot_grs_mtd      , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_DED_YTD'       , $Pay025cn_Tot_ded_ytd      , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_DED_QTD'       , $Pay025cn_Tot_ded_qtd      , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_DED_MTD'       , $Pay025cn_Tot_ded_mtd      , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_GARN_YTD'      , $Pay025cn_Tot_garn_ytd     , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_GARN_QTD'      , $Pay025cn_Tot_garn_qtd     , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_GARN_MTD'      , $Pay025cn_Tot_garn_mtd     , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_CO_FEE_YTD'    , $Pay025cn_Tot_co_fee_ytd   , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_CO_FEE_QTD'    , $Pay025cn_Tot_co_fee_qtd   , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_CO_FEE_MTD'    , $Pay025cn_Tot_co_fee_mtd   , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_PAY_FEE_YTD'   , $Pay025cn_Tot_pay_fee_ytd  , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_PAY_FEE_QTD'   , $Pay025cn_Tot_pay_fee_qtd  , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_PAY_FEE_MTD'   , $Pay025cn_Tot_pay_fee_mtd  , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'EI_WKLY_EARN'      , $Pay025cn_Ei_wkly_earn     , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'EI_WKLY_HRS'       , $Pay025cn_Ei_wkly_hrs      , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_TAXES_QTD'     , $Pay025cn_Tot_taxes_qtd    , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TOT_TAXES_MTD'     , $Pay025cn_Tot_taxes_mtd    , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TAX_GROSS_YTD'     , $Pay025cn_Tax_gross_ytd    , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TAX_GROSS_QTD'     , $Pay025cn_Tax_gross_qtd    , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'TAX_GROSS_MTD'     , $Pay025cn_Tax_gross_mtd    , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'NOLIM_GROSS_YTD'   , $Pay025cn_Nolim_gross_ytd  , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'NOLIM_GROSS_QTD'   , $Pay025cn_Nolim_gross_qtd  , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'NOLIM_GROSS_MTD'   , $Pay025cn_Nolim_gross_mtd  , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'ARREARS_HDG'       , $Pay025cn_Arrears_heading  , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'ARREARS_BAL_MSG1'  , $Pay025cn_Arr_Bal_Msg1     , #dummy_width)
   do Get_Field_Information ('PAY025CN', 'ARREARS_BAL_MSG2'  , $Pay025cn_Arr_Bal_Msg2     , #dummy_width)

end-procedure


begin-heading 9

#include 'stdhtr11.sqc'

if $Balance_Type = $Pay025cn_Check
    do Check-headings
end-if

if $Balance_Type = $Pay025cn_Earnings
    do Earnings-headings
end-if

if $Balance_Type = $Pay025cn_Deduction
    do Deduction-headings
end-if

if $Balance_Type = $Pay025cn_Garnishment
    do Garnishment-headings
end-if

if $Balance_Type = $Pay025cn_Tax
    do Tax-headings
end-if

if $Balance_Type = $Pay025cn_Roe
    do EI-headings
end-if

if $Balance_Type = $Pay025cn_Arrears
    do Arrears-headings
end-if

end-heading


begin-procedure Check-headings
    print $Pay025cn_Cheque_heading      (+2,1)
    do Common-headings-1
    do Canada-headings-1
    do Common-headings-2
    do Canada-headings-2
    do Common-headings-3
    do Canada-headings-3
end-procedure


begin-procedure Earnings-headings
    print $Pay025cn_Earnings_heading  (+2,1)
    do Common-headings-1
    do Canada-headings-1
    do Earnings-headings-1
    do Common-headings-2
    do Canada-headings-2
    do Earnings-headings-2
    do Common-headings-3
    do Canada-headings-3
    do Earnings-headings-3
end-procedure


begin-procedure Deduction-headings
    print $Pay025cn_Deduc_heading  (+2,1)
    do Common-headings-1
    do Canada-headings-1
    do Deduction-headings-1
    do Common-headings-2
    do Canada-headings-2
    do Deduction-headings-2
    do Common-headings-3
    do Canada-headings-3
    do Deduction-headings-3
end-procedure


begin-procedure Garnishment-headings
    print $Pay025cn_Garn_heading    (+2,1)
    do Common-headings-1
    do Garnishment-headings-1
    do Common-headings-2
    do Garnishment-headings-2
    do Common-headings-3
    do Garnishment-headings-3
end-procedure

begin-procedure Tax-headings
    print $Pay025cn_Tax_heading    (+2,1)
    do Common-headings-1
    do Canada-tax-headings-1
    do Common-headings-2
    do Canada-tax-headings-2
    do Common-headings-3
    do Canada-tax-headings-3
end-procedure


begin-procedure EI-headings
    print $Pay025cn_Ei_heading    (+2,1)
    do EI-headings-1
    do EI-headings-2
    do EI-headings-3

end-procedure

begin-procedure Arrears-headings
    print $Pay025cn_Arrears_heading  (+2,1)
    do Arrears-headings-1
    do Arrears-headings-2
    do Arrears-headings-3
end-procedure


begin-procedure Common-headings-1

    print $Pay025cn_Emplid                  (+2,{C_EmplID})
    print $Pay025cn_Adj                     (0,{C_BAL_ADJ_SEQ})
    print $Pay025cn_Date                    (0,{C_DT_ENTERED})
    print $Pay025cn_Calendar                (0,{C_CALENDAR_YEAR})
    print $Pay025cn_Qtr                     (0,{C_QTRCD})
    print $Pay025cn_Month                   (0,{C_MONTHCD})
    print $Pay025cn_Field                   (0,{C_FIELD_NAME})
    print $Pay025cn_Before                  (0,{C_BEFORE_ADJ})
    print $Pay025cn_After                   (0,{C_AFTER_ADJ})
    print $Pay025cn_Adjustment              (0,{C_AMOUNT_ADJ})
end-procedure


begin-procedure Common-headings-2

    print $Pay025cn_Reason                  (+1,{C_EmplID})
    print $Pay025cn_Seq                     (0,{C_BAL_ADJ_SEQ})
    print $Pay025cn_Adjusted                (0,{C_DT_ENTERED})
    print $Pay025cn_Year                    (0,{C_CALENDAR_YEAR})
    print $Pay025cn_Code                    (0,{C_QTRCD})
    print $Pay025cn_Code                    (0,{C_MONTHCD})
    print $Pay025cn_Name                    (0,{C_FIELD_NAME})
    print $Pay025cn_Adjustment              (0,{C_BEFORE_ADJ})
    print $Pay025cn_Adjustment              (0,{C_AFTER_ADJ})
    print $Pay025cn_Amount                  (0,{C_AMOUNT_ADJ})
end-procedure


begin-procedure Common-headings-3
    print '-----------'                    (+1,{C_EmplID})
    print '--------'                        (0,{C_CALENDAR_YEAR})
    print '---'                             (0,{C_BAL_ADJ_SEQ})
    print '----------'                      (0,{C_DT_ENTERED})
    print '----'                            (0,{C_QTRCD})
    print '-----'                           (0,{C_MONTHCD})
    print '----------------'                (0,{C_FIELD_NAME})
    print '-------------'                   (0,{C_BEFORE_ADJ})
    print '-------------'                   (0,{C_AFTER_ADJ})
    print '-------------'                   (0,{C_AMOUNT_ADJ})
end-procedure


begin-procedure Canada-headings-1

    print $Pay025cn_Wage                    (0,{C_WAGE_LOSS_PLAN})

end-procedure

begin-procedure Canada-tax-headings-1

    print $Pay025cn_Wage                    (0,{C_WAGE_LOSS_PLAN})
    print $Pay025cn_Tax                     (0,{C_TAX_CLASS})

end-procedure

begin-procedure Canada-headings-2

    print $Pay025cn_Province                (0,{C_PROVINCE})
    print $Pay025cn_Loss_plan               (0,{C_WAGE_LOSS_PLAN})

end-procedure

begin-procedure Canada-tax-headings-2

    print $Pay025cn_Province                (0,{C_PROVINCE})
    print $Pay025cn_Loss_plan               (0,{C_WAGE_LOSS_PLAN})
    print $Pay025cn_Type                    (0,{C_TAX_CLASS})

end-procedure

begin-procedure Canada-headings-3

    print '--------'                        (0,{C_PROVINCE})
    print '---------'                       (0,{C_WAGE_LOSS_PLAN})

end-procedure

begin-procedure Canada-tax-headings-3

    print '--------'                        (0,{C_PROVINCE})
    print '---------'                       (0,{C_WAGE_LOSS_PLAN})
    print '---------'                       (0,{C_TAX_CLASS})

end-procedure

begin-procedure Earnings-headings-1
    print $Pay025cn_Special                 (0,{C_SPECIAL_ACCUM})
    print $Pay025cn_Earn                    (0,{C_EARN_CODE})
end-procedure


begin-procedure Earnings-headings-2
    print $Pay025cn_Accumulator             (0,{C_SPECIAL_ACCUM})
    print $Pay025cn_Code                    (0,{C_EARN_CODE})
end-procedure


begin-procedure Earnings-headings-3
    print '-----------'                     (0,{C_SPECIAL_ACCUM})
    print '----'                            (0,{C_EARN_CODE})
end-procedure


begin-procedure Deduction-headings-1

    print $Pay025cn_Plan                    (0,{C_PLAN_TYPE})
    print $Pay025cn_Benefit                 (0,{C_BENEFIT_PLAN})
    print $Pay025cn_Deduction               (0,{C_DED_CODE})
!    print $Pay025cn_Deduction               (0,{C_DED_CLASS})

end-procedure


begin-procedure Deduction-headings-2

    print $Pay025cn_Type2                    (0,{C_PLAN_TYPE})
    print $Pay025cn_Plan2                   (0,{C_BENEFIT_PLAN})
    print $Pay025cn_Code3                   (0,{C_DED_CODE})
!    print $Pay025cn_Class                   (0,{C_DED_CLASS})

end-procedure


begin-procedure Deduction-headings-3

    print '----'                            (0,{C_PLAN_TYPE})
    print '-------'                         (0,{C_BENEFIT_PLAN})
    print '-----------------------'         (0,{C_DED_CODE})
!    print '----------'                      (0,{C_DED_CLASS})

end-procedure


begin-procedure Garnishment-headings-1
    print $Pay025cn_Plan                    (0,{C_GARN_PLAN_TYPE})
    print $Pay025cn_Benefit                 (0,{C_GARN_BENEFIT_PLAN})
    print $Pay025cn_Deduction               (0,{C_GARN_DED_CODE})
    print $Pay025cn_Deduction               (0,{C_GARN_DED_CLASS})
    print $Pay025cn_Garnish                 (0,{C_GARNISH_ID})
end-procedure


begin-procedure Garnishment-headings-2
    print $Pay025cn_Type                    (0,{C_GARN_PLAN_TYPE})
    print $Pay025cn_Plan2                   (0,{C_GARN_BENEFIT_PLAN})
    print $Pay025cn_Code2                   (0,{C_GARN_DED_CODE})
    print $Pay025cn_Class                   (0,{C_GARN_DED_CLASS})
    print $Pay025cn_Id                      (0,{C_GARNISH_ID})
end-procedure


begin-procedure Garnishment-headings-3
    print '----'                            (0,{C_GARN_PLAN_TYPE})
    print '-------'                         (0,{C_GARN_BENEFIT_PLAN})
    print '---------'                       (0,{C_GARN_DED_CODE})
    print '----------'                      (0,{C_GARN_DED_CLASS})
    print '-------'                         (0,{C_GARNISH_ID})
end-procedure


begin-procedure EI-headings-1
    print $Pay025cn_Emplid                  (+2,{C_EmplID})
    print $Pay025cn_Adj                     (0,{C_BAL_ADJ_SEQ_EI})
    print $Pay025cn_Date                    (0,{C_DT_ENTERED_EI})
    print $Pay025cn_Ei_period               (0,{C_CALENDAR_YEAR})
    print $Pay025cn_Earnings                (0,{C_EI_PERIOD_DT})
    print $Pay025cn_Field                   (0,{C_FIELD_NAME})
    print $Pay025cn_Before                  (0,{C_BEFORE_ADJ})
    print $Pay025cn_After                   (0,{C_AFTER_ADJ})
    print $Pay025cn_Adjustment              (0,{C_AMOUNT_ADJ})
    print $Pay025cn_Wage                    (0,{C_WAGE_LOSS_PLAN_EI})
end-procedure


begin-procedure EI-headings-2
    print $Pay025cn_Reason                  (+1,{C_EmplID})
    print $Pay025cn_Seq                     (0,{C_BAL_ADJ_SEQ_EI})
    print $Pay025cn_Adjusted                (0,{C_DT_ENTERED_EI})
    print $Pay025cn_Date                    (0,{C_CALENDAR_YEAR})
    print $Pay025cn_End_date                (0,{C_EI_PERIOD_DT})
    print $Pay025cn_Name                    (0,{C_FIELD_NAME})
    print $Pay025cn_Adjustment              (0,{C_BEFORE_ADJ})
    print $Pay025cn_Adjustment              (0,{C_AFTER_ADJ})
    print $Pay025cn_Amount                  (0,{C_AMOUNT_ADJ})
    print $Pay025cn_Loss_plan               (0,{C_WAGE_LOSS_PLAN_EI})

end-procedure



begin-procedure EI-headings-3
    print '-----------'                    (+1,{C_EmplID})
    print '----------'                      (0,{C_CALENDAR_YEAR})
    print '---'                             (0,{C_BAL_ADJ_SEQ_EI})
    print '----------'                      (0,{C_DT_ENTERED_EI})
    print '----------'                      (0,{C_EI_PERIOD_DT})
    print '------------------'              (0,{C_FIELD_NAME})
    print '-------------'                   (0,{C_BEFORE_ADJ})
    print '-------------'                   (0,{C_AFTER_ADJ})
    print '-------------'                   (0,{C_AMOUNT_ADJ})
    print '---------'                       (0,{C_WAGE_LOSS_PLAN_EI})

end-procedure


begin-procedure Arrears-headings-1
    print $Pay025cn_Emplid                  (+2,{C_EmplID})
    print $Pay025cn_Adj                     (0,{C_BAL_ADJ_SEQ})
    print $Pay025cn_Date                    (0,{C_DT_ENTERED})
    print $Pay025cn_Before                  (0,{C_ARR_BEFORE_ADJ})
    print $Pay025cn_Adjustment              (0,{C_ARR_AMOUNT_ADJ})
    print $Pay025cn_After                   (0,{C_ARR_AFTER_ADJ})
    print $Pay025cn_Plan                    (0,{C_ARR_PLAN_TYPE})
    print $Pay025cn_Benefit                 (0,{C_ARR_BENEFIT_PLAN})
    print $Pay025cn_Deduction               (0,{C_ARR_DED_CODE})
    print $Pay025cn_Deduction               (0,{C_ARR_DED_CLASS})
end-procedure


begin-procedure Arrears-headings-2
    print $Pay025cn_Reason                  (+1,{C_EmplID})
    print $Pay025cn_Seq                     (0,{C_BAL_ADJ_SEQ})
    print $Pay025cn_Adjusted                (0,{C_DT_ENTERED})
    print $Pay025cn_Adjustment              (0,{C_ARR_BEFORE_ADJ})
    print $Pay025cn_Amount                  (0,{C_ARR_AMOUNT_ADJ})
    print $Pay025cn_Adjustment              (0,{C_ARR_AFTER_ADJ})
    print $Pay025cn_Type                    (0,{C_ARR_PLAN_TYPE})
    print $Pay025cn_Plan2                   (0,{C_ARR_BENEFIT_PLAN})
    print $Pay025cn_Code2                   (0,{C_ARR_DED_CODE})
    print $Pay025cn_Class                   (0,{C_ARR_DED_CLASS})

end-procedure


begin-procedure Arrears-headings-3
    print '-----------'                    (+1,{C_EmplID})
    print '---'                             (0,{C_BAL_ADJ_SEQ})
    print '----------'                      (0,{C_DT_ENTERED})
    print '-------------'                   (0,{C_ARR_BEFORE_ADJ})
    print '-------------'                   (0,{C_ARR_AFTER_ADJ})
    print '-------------'                   (0,{C_ARR_AMOUNT_ADJ})
    print '----'                            (0,{C_ARR_PLAN_TYPE})
    print '-------'                         (0,{C_ARR_BENEFIT_PLAN})
    print '---------'                       (0,{C_ARR_DED_CODE})
    print '---------'                       (0,{C_ARR_DED_CLASS})

end-procedure


begin-procedure Init
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime

  display $ReportTitle
  display 'Current Date :' noline
  display $AsOfToday
  display 'Current Time :' noline
  display $AsOfNow
  display ' '


  do Get-Calendar-Year-Id
  move 'N' to $Break_Prompt

  if $Prcs_Process_Instance = ''
    do Get-From-Thru-Dates
    do Which-Date

    if $Break_Prompt = 'N'
      do Company-Where-Prompt
    end-if

  else
    do Select-Parameters
    move $RC_PAY.Company   to $SlctCompany
    move $RC_PAY.FromDate  to $FromDate
    move $RC_PAY.ThruDate  to $ThruDate
    move $RC_PAY.AsOfDate  to $AsOfDate
    move $RC_PAY.Which_Date to $Which_Date

  end-if

  if RTRIM($SlctCompany, ' ') = ''
    move '' to $Company_Where
  else
    let $Company_Where = 'AND CS.COMPANY = ' || '''' || $SlctCompany || ''''
  end-if

end-procedure


begin-procedure Which-Date

  while 1 = 1
    input $Which_Date maxlen=1 'Select Balance Date(B), Adjust Date(A) or blank to exit?' type=char
    uppercase $Which_Date

    if RTRIM($Which_Date, ' ') = 'B'
            or RTRIM($Which_Date, ' ') = 'A'
        break
    end-if

    if RTRIM($Which_Date, ' ') = ''
        move 'Y' to $Break_Prompt
        break
    end-if

  end-while

end-procedure


begin-procedure Company-Where-Prompt

  input $SlctCompany maxlen=3 'Enter Company ID (e.g. ccb) or blank for all' type=char
  uppercase $SlctCompany

end-procedure


begin-procedure Main           ! Main report processing

  do Company-Selection

end-procedure


begin-procedure Company-Selection

begin-SELECT
CS.COMPANY

  do Process-Adjustments

FROM PS_COMPANY_TBL CS
WHERE CS.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_COMPANY_TBL
       WHERE  COMPANY = CS.COMPANY
         AND  EFFDT  <= $AsOfDate)
  #ifdef MVS
    \$COMPANY_WHERE\
  #else
    [$Company_Where]
  #endif
end-SELECT

end-procedure


begin-procedure Process-Adjustments

  move &CS.Company to $Company

  let $Adjustments_Found = 'N'
  move $Pay025cn_Check to $Balance_Type
  do Check-Adjustments

  if $Adjustments_Found = 'N'
     print $Pay025cn_No                    (+3,10)
     print $Balance_Type                   (0,+2)
     print $Pay025cn_Adjust_found          (0,+2)
     print $Company                        (0,+2)
  end-if

  do page_break

  let $Adjustments_Found = 'N'
  move $Pay025cn_Earnings to $Balance_Type
  do Earnings-Adjustments

  if $Adjustments_Found = 'N'
     print $Pay025cn_No                    (+3,10)
     print $Balance_Type                   (0,+2)
     print $Pay025cn_Adjust_found          (0,+2)
     print $Company                        (0,+2)
  end-if

  do page_break

  let $Adjustments_Found = 'N'
  move $Pay025cn_Deduction to $Balance_Type
  do Deduction-Adjustments

  if $Adjustments_Found = 'N'
     print $Pay025cn_No                    (+3,10)
     print $Balance_Type                   (0,+2)
     print $Pay025cn_Adjust_found          (0,+2)
     print $Company                        (0,+2)
  end-if

  do page_break

  let $Adjustments_Found = 'N'
  move $Pay025cn_Garnishment to $Balance_Type
  do Garnishment-Adjustments

  if $Adjustments_Found = 'N'
     print $Pay025cn_No                    (+3,10)
     print $Balance_Type                   (0,+2)
     print $Pay025cn_Adjust_found          (0,+2)
     print $Company                        (0,+2)
  end-if

  do page_break

  let $Adjustments_Found = 'N'
  move $Pay025cn_Tax  to $Balance_Type
  do Tax-Adjustments

  if $Adjustments_Found = 'N'
     print $Pay025cn_No                    (+3,10)
     print $Balance_Type                   (0,+2)
     print $Pay025cn_Adjust_found          (0,+2)
     print $Company                        (0,+2)
  end-if

  do page_break


  let $Adjustments_Found = 'N'
  move $Pay025cn_Roe to $Balance_Type

  do EI-Adjustments

  if $Adjustments_Found = 'N'
     print $Pay025cn_No                    (+3,10)
     print $Balance_Type                   (0,+2)
     print $Pay025cn_Adjust_found          (0,+2)
     print $Company                        (0,+2)
  end-if

  do page_break


  let $Adjustments_Found = 'N'
  move $Pay025cn_Arrears to $Balance_Type

  if RTRIM($Which_Date, ' ') = 'A'
     do Arrears-Adjustments

     if $Adjustments_Found = 'N'
        print $Pay025cn_No                    (+3,10)
        print $Balance_Type                   (0,+2)
        print $Pay025cn_Adjust_found          (0,+2)
        print $Company                        (0,+2)
     end-if
  else
     print $Pay025cn_Arr_Bal_Msg1             (+3,10)
     print $Pay025cn_Arr_Bal_Msg2             (0,+1)
  end-if

  do page_break


end-procedure


begin-procedure Check-Adjustments
    let $Prefix = 'A'
    do Build-Where-Clause

begin-SELECT
A.EMPLID
A.COMPANY
A.BALANCE_YEAR
A.BAL_ADJ_SEQ
A.DT_ENTERED
A.BALANCE_QTR
A.BALANCE_PERIOD
A.WAGE_LOSS_PLAN
A.PROVINCE
A.TOTAL_GROSS_YTD
A.TOT_GRS_YTD_ADJ
A.TOT_GRS_ADJ
A.TOTAL_TAXES_YTD
A.TOT_TAX_YTD_ADJ
A.TOT_TAX_ADJ
A.TOTAL_DEDNS_YTD
A.TOT_DED_YTD_ADJ
A.TOT_DED_ADJ
A.NET_PAY_YTD
A.NET_PAY_YTD_ADJ
A.NET_PAY_ADJ
A.ADJ_REASON

  let $Adjustments_Found = 'Y'

  do Print-Check-Adjustments

FROM PS_BAL_ADJ_CN_CHK A
WHERE A.COMPANY = &CS.Company AND A.BALANCE_ID = $Calendar_Year_Id
#ifdef MVS
  \$DATE_WHERE_1\
  \$DATE_WHERE_2\
  \$DATE_WHERE_3\
  ORDER BY A.EMPLID ASC, \$DATE_ORDER_1\ \$DATE_ORDER_2\
#else
  [$Date_Where_1]
  [$Date_Where_2]
  [$Date_Where_3]
  ORDER BY A.EMPLID ASC, [$Date_Order_1] [$Date_Order_2]
#endif
end-SELECT

end-procedure


begin-procedure Earnings-Adjustments
    let $Prefix = 'C'
    do Build-Where-Clause

begin-SELECT
C.EMPLID
C.COMPANY
C.BALANCE_YEAR
C.SPCL_BALANCE
C.ERNCD
C.BAL_ADJ_SEQ
C.DT_ENTERED
C.BALANCE_QTR
C.BALANCE_PERIOD
C.WAGE_LOSS_PLAN
C.PROVINCE
C.HRS_YTD
C.HRS_QTD
C.HRS_MTD
C.HRS_YTD_ADJ
C.HRS_QTD_ADJ
C.HRS_MTD_ADJ
C.HRS_ADJ
C.GRS_YTD
C.GRS_QTD
C.GRS_MTD
C.GRS_YTD_ADJ
C.GRS_QTD_ADJ
C.GRS_MTD_ADJ
C.GRS_ADJ
C.ADJ_REASON

  let $Adjustments_Found = 'Y'
  do Print-Earnings-Adjustments

FROM PS_BAL_ADJ_CN_ERN C
WHERE C.COMPANY = &CS.Company AND C.BALANCE_ID = $Calendar_Year_Id
#ifdef MVS
  \$DATE_WHERE_1\
  \$DATE_WHERE_2\
  \$DATE_WHERE_3\
  ORDER BY C.EMPLID ASC, \$DATE_ORDER_1\ \$DATE_ORDER_2\
#else
  [$Date_Where_1]
  [$Date_Where_2]
  [$Date_Where_3]
  ORDER BY C.EMPLID ASC, [$Date_Order_1] [$Date_Order_2]
#endif
end-SELECT

end-procedure


begin-procedure Deduction-Adjustments
    let $Prefix = 'B'
    do Build-Where-Clause

begin-SELECT
B.EMPLID
B.COMPANY
B.BALANCE_YEAR
B.PLAN_TYPE
B.BENEFIT_PLAN
B.DEDCD
B.DED_CLASS
B.DED_SLSTX_CLASS
B.BAL_ADJ_SEQ
B.DT_ENTERED
B.BALANCE_QTR
B.BALANCE_PERIOD
B.WAGE_LOSS_PLAN
B.PROVINCE
B.DED_YTD
B.DED_QTD
B.DED_MTD
B.DED_YTD_ADJ
B.DED_QTD_ADJ
B.DED_MTD_ADJ
B.DED_ADJ
B.ADJ_REASON

  let $Adjustments_Found = 'Y'
  do Print-Deduction-Adjustments

FROM PS_BAL_ADJ_CN_DED B
WHERE B.COMPANY = &CS.Company AND B.BALANCE_ID = $Calendar_Year_Id
#ifdef MVS
  \$DATE_WHERE_1\
  \$DATE_WHERE_2\
  \$DATE_WHERE_3\
  ORDER BY B.EMPLID ASC, \$DATE_ORDER_1\ \$DATE_ORDER_2\
#else
  [$Date_Where_1]
  [$Date_Where_2]
  [$Date_Where_3]
  ORDER BY B.EMPLID ASC, [$Date_Order_1] [$Date_Order_2]
#endif
end-SELECT

end-procedure


begin-procedure Garnishment-Adjustments
    let $Prefix = 'D'
    do Build-Where-Clause

begin-SELECT
D.EMPLID
D.COMPANY
D.BALANCE_YEAR
D.PLAN_TYPE
D.BENEFIT_PLAN
D.DEDCD
D.DED_CLASS
D.GARNID
D.BAL_ADJ_SEQ
D.DT_ENTERED
D.BALANCE_QTR
D.BALANCE_PERIOD
D.DED_YTD
D.DED_QTD
D.DED_MTD
D.DED_YTD_ADJ
D.DED_QTD_ADJ
D.DED_MTD_ADJ
D.DED_ADJ
D.DED_GARN_YTD
D.DED_GARN_QTD
D.DED_GARN_MTD
D.DED_GARN_YTD_ADJ
D.DED_GARN_QTD_ADJ
D.DED_GARN_MTD_ADJ
D.DED_GARN_ADJ
D.DED_CFEE_YTD
D.DED_CFEE_QTD
D.DED_CFEE_MTD
D.DED_CFEE_YTD_ADJ
D.DED_CFEE_QTD_ADJ
D.DED_CFEE_MTD_ADJ
D.DED_CFEE_ADJ
D.DED_PFEE_YTD
D.DED_PFEE_QTD
D.DED_PFEE_MTD
D.DED_PFEE_YTD_ADJ
D.DED_PFEE_QTD_ADJ
D.DED_PFEE_MTD_ADJ
D.DED_PFEE_ADJ
D.ADJ_REASON

  let $Adjustments_Found = 'Y'
  do Print-Garnishment-Adjustments

FROM PS_BAL_ADJ_GRN D
WHERE D.COMPANY = &CS.Company AND D.BALANCE_ID = $Calendar_Year_Id
#ifdef MVS
  \$DATE_WHERE_1\
  \$DATE_WHERE_2\
  \$DATE_WHERE_3\
  ORDER BY D.EMPLID ASC, \$DATE_ORDER_1\ \$DATE_ORDER_2\
#else
  [$Date_Where_1]
  [$Date_Where_2]
  [$Date_Where_3]
  ORDER BY D.EMPLID ASC, [$Date_Order_1] [$Date_Order_2]
#endif
end-SELECT

end-procedure


begin-procedure Tax-Adjustments
    let $Prefix = 'E'
    do Build-Where-Clause

begin-SELECT
E.EMPLID
E.COMPANY
E.BALANCE_ID
E.BALANCE_YEAR
E.WAGE_LOSS_PLAN
E.PROVINCE
E.TAX_CLASS_CAN
E.BAL_ADJ_SEQ
E.DT_ENTERED
E.BALANCE_QTR
E.BALANCE_PERIOD
E.TAX_YTD
E.TAX_QTD
E.TAX_MTD
E.TAX_YTD_ADJ
E.TAX_QTD_ADJ
E.TAX_MTD_ADJ
E.TAX_ADJ
E.TXGRS_YTD
E.TXGRS_QTD
E.TXGRS_MTD
E.TXGRS_YTD_ADJ
E.TXGRS_QTD_ADJ
E.TXGRS_MTD_ADJ
E.TXGRS_ADJ
E.NLGRS_YTD
E.NLGRS_QTD
E.NLGRS_MTD
E.NLGRS_YTD_ADJ
E.NLGRS_QTD_ADJ
E.NLGRS_MTD_ADJ
E.NLGRS_ADJ
E.ADJ_REASON

  let $Adjustments_Found = 'Y'
  do Print-Tax-Adjustments

FROM PS_BAL_ADJ_CN_TAX E
WHERE E.COMPANY = &CS.Company AND E.BALANCE_ID = $Calendar_Year_Id
#ifdef MVS
  \$DATE_WHERE_1\
  \$DATE_WHERE_2\
  \$DATE_WHERE_3\
  ORDER BY E.EMPLID ASC, \$DATE_ORDER_1\ \$DATE_ORDER_2\
#else
  [$Date_Where_1]
  [$Date_Where_2]
  [$Date_Where_3]
  ORDER BY E.EMPLID ASC, [$Date_Order_1] [$Date_Order_2]
#endif
end-SELECT

end-procedure


begin-procedure EI-Adjustments
  let $Prefix = 'F'

  do Build-Where-Clause-EI

begin-SELECT
F.EMPLID
F.COMPANY
F.WAGE_LOSS_PLAN
F.UI_PERIOD_DT
F.EARNS_END_DT
F.BAL_ADJ_SEQ
F.DT_ENTERED
F.UI_WKLY_EARNS
F.UI_WK_EARN_ADJ
F.UI_EARN_ADJ
F.UI_WKLY_HOURS
F.UI_WK_HRS_ADJ
F.UI_HOURS_ADJ
F.ADJ_REASON

  let $Adjustments_Found = 'Y'
  do Print-EI-Adjustments


FROM PS_BAL_ADJ_UI_CAN F
WHERE F.COMPANY = &CS.Company
#ifdef MVS
  \$DATE_WHERE_1\
  \$DATE_WHERE_2\
  \$DATE_WHERE_3\
  ORDER BY F.EMPLID ASC, \$DATE_ORDER_1\  F.UI_PERIOD_DT ASC, F.EARNS_END_DT ASC, F.BAL_ADJ_SEQ ASC
#else
  [$Date_Where_1]
  [$Date_Where_2]
  [$Date_Where_3]
  [$Date_Where_3]
  ORDER BY F.EMPLID ASC, [$Date_Order_1]  F.UI_PERIOD_DT ASC, F.EARNS_END_DT ASC, F.BAL_ADJ_SEQ ASC
#endif
end-SELECT

end-procedure


begin-procedure Arrears-Adjustments
  let $Prefix = 'H'
  do Build-Where-Clause

begin-SELECT
H.EMPLID
H.COMPANY
H.BAL_ADJ_SEQ
H.DT_ENTERED
H.PLAN_TYPE
H.BENEFIT_PLAN
H.DEDCD
H.DED_CLASS
H.ARREARS_BAL
H.ARR_ADJ
H.ADJ_REASON

  let $Adjustments_Found = 'Y'
  do Print-Arrears-Adjustments

FROM PS_BAL_ADJ_ARR H
WHERE H.COMPANY = &CS.Company
#ifdef MVS
  \$DATE_WHERE_1\
  \$DATE_WHERE_2\
  \$DATE_WHERE_3\
  ORDER BY H.EMPLID ASC, \$DATE_ORDER_1\ \$DATE_ORDER_2\
#else
  [$Date_Where_1]
  [$Date_Where_2]
  [$Date_Where_3]
  ORDER BY H.EMPLID ASC, [$Date_Order_1] [$Date_Order_2]
#endif
end-SELECT

end-procedure


begin-procedure Build-Where-Clause-EI

  if RTRIM($Which_Date, ' ') = 'A'
    let $W1 = 'AND '
    let $W2 = $Prefix
    let $W3 = '.DT_ENTERED BETWEEN '''
    let $W4 =  $FromDate
    let $W5 =  ''' AND '''
    let $W6 =  $AsOfDate
    let $W7 =  ''''

    let $Date_Where_1 = $W1 || $W2 || $W3 || $W4 || $W5 || $W6 || $W7
    let $Date_Where_2 = ''
    let $Date_Where_3 = ''

    let $O1 = $Prefix
    let $O2 = '.DT_ENTERED ASC'
    let $O3 = ','
    let $Date_Order_1 = $O1 || $O2 || $O3
  end-if

  if RTRIM($Which_Date, ' ') = 'B'
    let $W1 = 'AND '
    let $W2 = $Prefix
    let $W3 = '.UI_PERIOD_DT BETWEEN '''
    let $W4 =  $FromDate
    let $W5 =  ''' AND '''
    let $W6 =  $AsOfDate
    let $W7 =  ''''

    let $Date_Where_1 = $W1 || $W2 || $W3 || $W4 || $W5 || $W6 || $W7
    let $Date_Where_2 = ''
    let $Date_Where_3 = ''

    let $O1 = ' '
    let $Date_Order_1 = $O1
  end-if

end-procedure


begin-procedure Print-Check-Adjustments
  next-listing need=5

  do Format-Number(&A.Total_Gross_YTD, $Total_Gross_YTD, 'b9,999,999.99')
  do Format-Number(&A.Tot_Grs_YTD_Adj, $Tot_Grs_YTD_Adj, 'b9,999,999.99')
  do Format-Number(&A.Tot_Grs_Adj, $Tot_Grs_Adj, 'b9,999,999.99')
  do Format-Number(&A.Total_Taxes_YTD, $Total_Taxes_YTD, 'b9,999,999.99')
  do Format-Number(&A.Tot_Tax_YTD_Adj, $Tot_Tax_YTD_Adj, 'b9,999,999.99')
  do Format-Number(&A.Tot_Tax_Adj, $Tot_Tax_Adj, 'b9,999,999.99')
  do Format-Number(&A.Total_Dedns_YTD, $Total_Dedns_YTD, 'b9,999,999.99')
  do Format-Number(&A.Tot_Ded_YTD_Adj, $Tot_Ded_YTD_Adj, 'b9,999,999.99')
  do Format-Number(&A.Tot_Ded_Adj, $Tot_Ded_Adj, 'b9,999,999.99')
  do Format-Number(&A.Net_Pay_YTD, $Net_Pay_YTD, 'b9,999,999.99')
  do Format-Number(&A.Net_Pay_YTD_Adj, $Net_Pay_YTD_Adj, 'b9,999,999.99')
  do Format-Number(&A.Net_Pay_Adj, $Net_Pay_Adj, 'b9,999,999.99')

  do Format-Number(&A.Balance_Year, $Calendar_Year, 'b9999999')

  print &A.EmplID               (+1,{C_EmplID})
  let $province_out = RTRIM(&A.Province, ' ')
  print $province_out              (0,{C_PROVINCE})
  print &A.Wage_Loss_Plan        (0,{C_WAGE_LOSS_PLAN})
  print &A.Bal_adj_Seq           (0,{C_BAL_ADJ_SEQ})
  print &A.Dt_Entered            (0,{C_DT_ENTERED},11)
  print $Calendar_Year           (0,{C_CALENDAR_YEAR})

  let $Balance_Qtr = to_char(&A.Balance_Qtr)
  let $QtrCd = ' ' || $Balance_Qtr
  print $QtrCd                   (0,{C_QTRCD})
  let $Balance_Period = to_char(&A.Balance_Period)
  let $MonthCd = ' ' || $Balance_Period
  print $MonthCd                 (0,{C_MONTHCD})

  print $Pay025cn_Tot_grs_ytd    (0,{C_FIELD_NAME})
  print $Total_Gross_YTD         (0,{C_BEFORE_ADJ})
  print $Tot_Grs_YTD_Adj         (0,{C_AFTER_ADJ})
  print $Tot_Grs_Adj             (0,{C_AMOUNT_ADJ})

  print &A.Adj_Reason           (+1,{C_REASON})
  print $Pay025cn_Tot_taxes_ytd  (0,{C_FIELD_NAME})
  print $Total_Taxes_YTD         (0,{C_BEFORE_ADJ})
  print $Tot_Tax_YTD_Adj         (0,{C_AFTER_ADJ})
  print $Tot_Tax_Adj             (0,{C_AMOUNT_ADJ})

  print $Pay025cn_ded_ytd        (+1,{C_FIELD_NAME})
  print $Total_Dedns_YTD         (0,{C_BEFORE_ADJ})
  print $Tot_Ded_YTD_Adj         (0,{C_AFTER_ADJ})
  print $Tot_Ded_Adj             (0,{C_AMOUNT_ADJ})

  print $Pay025cn_Tot_net_ytd    (+1,{C_FIELD_NAME})
  print $Net_Pay_YTD             (0,{C_BEFORE_ADJ})
  print $Net_Pay_YTD_Adj         (0,{C_AFTER_ADJ})
  print $Net_Pay_Adj             (0,{C_AMOUNT_ADJ})

end-procedure


begin-procedure Print-Earnings-Adjustments
  next-listing need=7

  do Format-Number(&C.HRS_YTD    , $HRS_YTD    , 'b9,999,999.99')
  do Format-Number(&C.HRS_YTD_ADJ, $HRS_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&C.HRS_ADJ    , $HRS_ADJ    , 'b9,999,999.99')
  do Format-Number(&C.HRS_QTD    , $HRS_QTD    , 'b9,999,999.99')
  do Format-Number(&C.HRS_QTD_ADJ, $HRS_QTD_ADJ, 'b9,999,999.99')
  do Format-Number(&C.HRS_MTD    , $HRS_MTD    , 'b9,999,999.99')
  do Format-Number(&C.HRS_MTD_ADJ, $HRS_MTD_ADJ, 'b9,999,999.99')
  do Format-Number(&C.GRS_YTD    , $GRS_YTD    , 'b9,999,999.99')
  do Format-Number(&C.GRS_YTD_ADJ, $GRS_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&C.GRS_ADJ    , $GRS_ADJ    , 'b9,999,999.99')
  do Format-Number(&C.GRS_QTD    , $GRS_QTD    , 'b9,999,999.99')
  do Format-Number(&C.GRS_QTD_ADJ, $GRS_QTD_ADJ, 'b9,999,999.99')
  do Format-Number(&C.GRS_MTD    , $GRS_MTD    , 'b9,999,999.99')
  do Format-Number(&C.GRS_MTD_ADJ, $GRS_MTD_ADJ, 'b9,999,999.99')

  do Format-Number(&C.Balance_Year, $Calendar_Year, 'b9999999')

  print &C.EmplID               (+1,{C_EmplID})
  let $province_out = RTRIM(&C.Province, ' ')
  print $province_out              (0,{C_PROVINCE})
  print &C.Wage_Loss_Plan        (0,{C_WAGE_LOSS_PLAN})
  print &C.Bal_adj_Seq           (0,{C_BAL_ADJ_SEQ})
  print &C.Dt_Entered            (0,{C_DT_ENTERED},11)
  print $Calendar_Year           (0,{C_CALENDAR_YEAR})


  let $Balance_Qtr = to_char(&C.Balance_Qtr)
  let $QtrCd = ' ' || $Balance_Qtr
  print $QtrCd                   (0,{C_QTRCD})
  let $Balance_Period = to_char(&C.Balance_Period)
  let $MonthCd = ' ' || $Balance_Period
  print $MonthCd                 (0,{C_MONTHCD})

  print $Pay025cn_Tot_hrs_ytd    (0,{C_FIELD_NAME})
  print $HRS_YTD                 (0,{C_BEFORE_ADJ})
  print $HRS_YTD_ADJ             (0,{C_AFTER_ADJ})
  print $HRS_ADJ                 (0,{C_AMOUNT_ADJ})

  if &C.SPCL_BALANCE = 'Y'
    print &C.ERNCD              (0,{C_SPECIAL_ACCUM})
  else
    print &C.ERNCD              (0,{C_EARN_CODE})
  end-if

  print &C.Adj_Reason           (+1,{C_REASON})
  print $Pay025cn_Tot_hrs_qtd    (0,{C_FIELD_NAME})
  print $HRS_QTD                 (0,{C_BEFORE_ADJ})
  print $HRS_QTD_ADJ             (0,{C_AFTER_ADJ})

  print $Pay025cn_Tot_hrs_mtd    (+1,{C_FIELD_NAME})
  print $HRS_MTD                 (0,{C_BEFORE_ADJ})
  print $HRS_MTD_ADJ             (0,{C_AFTER_ADJ})

  print $Pay025cn_Tot_grs_ytd    (+1,{C_FIELD_NAME})
  print $GRS_YTD                 (0,{C_BEFORE_ADJ})
  print $GRS_YTD_ADJ             (0,{C_AFTER_ADJ})
  print $GRS_ADJ                 (0,{C_AMOUNT_ADJ})

  print $Pay025cn_Tot_grs_qtd    (+1,{C_FIELD_NAME})
  print $GRS_QTD                 (0,{C_BEFORE_ADJ})
  print $GRS_QTD_ADJ             (0,{C_AFTER_ADJ})

  print $Pay025cn_Tot_grs_mtd    (+1,{C_FIELD_NAME})
  print $GRS_MTD                 (0,{C_BEFORE_ADJ})
  print $GRS_MTD_ADJ             (0,{C_AFTER_ADJ})

end-procedure


begin-procedure Print-Deduction-Adjustments
  next-listing need=4

  do Format-Number(&B.DED_YTD    , $DED_YTD    , 'b9,999,999.99')
  do Format-Number(&B.DED_YTD_ADJ, $DED_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&B.DED_QTD    , $DED_QTD    , 'b9,999,999.99')
  do Format-Number(&B.DED_QTD_ADJ, $DED_QTD_ADJ, 'b9,999,999.99')
  do Format-Number(&B.DED_MTD    , $DED_MTD    , 'b9,999,999.99')
  do Format-Number(&B.DED_MTD_ADJ, $DED_MTD_ADJ, 'b9,999,999.99')
  do Format-Number(&B.DED_ADJ    , $DED_ADJ    , 'b9,999,999.99')

  do Format-Number(&B.Balance_Year, $Calendar_Year, 'b9999999')

  print &B.EmplID               (+1,{C_EmplID})
  let $province_out = RTRIM(&B.Province, ' ')
  print $province_out              (0,{C_PROVINCE})
  print &B.Wage_Loss_Plan        (0,{C_WAGE_LOSS_PLAN})
  print &B.Bal_adj_Seq           (0,{C_BAL_ADJ_SEQ})
  print &B.Dt_Entered            (0,{C_DT_ENTERED},11)
  print $Calendar_Year           (0,{C_CALENDAR_YEAR})


  let $Balance_Qtr = to_char(&B.Balance_Qtr)
  let $QtrCd = ' ' || $Balance_Qtr
  print $QtrCd                   (0,{C_QTRCD})
  let $Balance_Period = to_char(&B.Balance_Period)
  let $MonthCd = ' ' || $Balance_Period
  print $MonthCd                 (0,{C_MONTHCD})

  print $Pay025cn_Tot_ded_ytd    (0,{C_FIELD_NAME})
  print $DED_YTD                 (0,{C_BEFORE_ADJ})
  print $DED_YTD_ADJ             (0,{C_AFTER_ADJ})
  print $DED_ADJ                 (0,{C_AMOUNT_ADJ})
  print &B.PLAN_TYPE             (0,{C_PLAN_TYPE})
  print &B.BENEFIT_PLAN          (0,{C_BENEFIT_PLAN})
!  print &B.DEDCD                 (0,{C_DED_CODE})

  let $DedCd = rtrim(&B.DEDCD, ' ')

  move 'DED_CLASS' to $FieldName
  move &B.Ded_Class to $FieldValue
  do Read-Translate-Table
  let $Ded_Class = rtrim($XlatShortName, ' ')
!  print $DED_CLASS               (0,{C_DED_CLASS})


  if &B.DED_SLSTX_CLASS <> 'B'
     move 'DED_SLSTX_CLASS' to $FieldName
     move &B.Ded_SlsTx_Class to $FieldValue
     do Read-Translate-Table
     let $Ded_SlsTax = rtrim($XlatShortName, ' ')
  else
     move ' ' to $Ded_SlsTax
  end-if

  let $code_class_tax = $DedCd || '/' || $Ded_Class || '/' || $Ded_SlsTax
  print $code_class_tax          (0,{C_DED_CODE})


  print &B.Adj_Reason           (+1,{C_REASON})
  print $Pay025cn_Tot_ded_qtd    (0,{C_FIELD_NAME})
  print $DED_QTD                 (0,{C_BEFORE_ADJ})
  print $DED_QTD_ADJ             (0,{C_AFTER_ADJ})

  print $Pay025cn_Tot_ded_mtd   (+1,{C_FIELD_NAME})
  print $DED_MTD                 (0,{C_BEFORE_ADJ})
  print $DED_MTD_ADJ             (0,{C_AFTER_ADJ})

end-procedure


begin-procedure Print-Garnishment-Adjustments
  next-listing need=13

  do Format-Number(&D.DED_YTD    , $DED_YTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_YTD_ADJ, $DED_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&D.DED_ADJ    , $DED_ADJ    , 'b9,999,999.99')
  do Format-Number(&D.DED_QTD    , $DED_QTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_QTD_ADJ, $DED_QTD_ADJ, 'b9,999,999.99')
  do Format-Number(&D.DED_MTD    , $DED_MTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_MTD_ADJ, $DED_MTD_ADJ, 'b9,999,999.99')

  do Format-Number(&D.DED_GARN_YTD    , $DED_GARN_YTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_GARN_YTD_ADJ, $DED_GARN_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&D.DED_GARN_ADJ    , $DED_GARN_ADJ    , 'b9,999,999.99')

  do Format-Number(&D.DED_GARN_QTD    , $DED_GARN_QTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_GARN_QTD_ADJ, $DED_GARN_QTD_ADJ, 'b9,999,999.99')

  do Format-Number(&D.DED_GARN_MTD    , $DED_GARN_MTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_GARN_MTD_ADJ, $DED_GARN_MTD_ADJ, 'b9,999,999.99')

  do Format-Number(&D.DED_CFEE_YTD    , $DED_CFEE_YTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_CFEE_YTD_ADJ, $DED_CFEE_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&D.DED_CFEE_ADJ    , $DED_CFEE_ADJ    , 'b9,999,999.99')

  do Format-Number(&D.DED_CFEE_QTD    , $DED_CFEE_QTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_CFEE_QTD_ADJ, $DED_CFEE_QTD_ADJ, 'b9,999,999.99')

  do Format-Number(&D.DED_CFEE_MTD    , $DED_CFEE_MTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_CFEE_MTD_ADJ, $DED_CFEE_MTD_ADJ, 'b9,999,999.99')

  do Format-Number(&D.DED_PFEE_YTD    , $DED_PFEE_YTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_PFEE_YTD_ADJ, $DED_PFEE_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&D.DED_PFEE_ADJ    , $DED_PFEE_ADJ    , 'b9,999,999.99')

  do Format-Number(&D.DED_PFEE_QTD    , $DED_PFEE_QTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_PFEE_QTD_ADJ, $DED_PFEE_QTD_ADJ, 'b9,999,999.99')

  do Format-Number(&D.DED_PFEE_MTD    , $DED_PFEE_MTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_PFEE_MTD_ADJ, $DED_PFEE_MTD_ADJ, 'b9,999,999.99')

  do Format-Number(&D.Balance_Year, $Calendar_Year, 'b9999999')

  print &D.EmplID               (+1,{C_EmplID})
  print &D.Bal_adj_Seq           (0,{C_BAL_ADJ_SEQ})
  print &D.Dt_Entered            (0,{C_DT_ENTERED},11)
  print $Calendar_Year           (0,{C_CALENDAR_YEAR})

  let $Balance_Qtr = to_char(&D.Balance_Qtr)
  let $QtrCd = ' ' || $Balance_Qtr
  print $QtrCd                   (0,{C_QTRCD})
  let $Balance_Period = to_char(&D.Balance_Period)
  let $MonthCd = ' ' || $Balance_Period
  print $MonthCd                 (0,{C_MONTHCD})

  print $Pay025cn_Tot_ded_ytd    (0,{C_FIELD_NAME})
  print $DED_YTD                 (0,{C_BEFORE_ADJ})
  print $DED_YTD_ADJ             (0,{C_AFTER_ADJ})
  print $DED_ADJ                 (0,{C_AMOUNT_ADJ})
  print &D.PLAN_TYPE             (0,{C_GARN_PLAN_TYPE})
  print &D.BENEFIT_PLAN          (0,{C_GARN_BENEFIT_PLAN})
  print &D.DEDCD                 (0,{C_GARN_DED_CODE})

  move 'DED_CLASS' to $FieldName
  move &D.Ded_Class to $FieldValue
  do Read-Translate-Table
  let $Ded_Class = $XlatShortName
  print $DED_CLASS               (0,{C_GARN_DED_CLASS})

  print &D.GARNID                (0,{C_GARNISH_ID})

  print &D.Adj_Reason           (+1,{C_REASON})
  print $Pay025cn_Tot_ded_qtd    (0,{C_FIELD_NAME})
  print $DED_QTD                 (0,{C_BEFORE_ADJ})
  print $DED_QTD_ADJ             (0,{C_AFTER_ADJ})

  print $Pay025cn_Tot_ded_mtd   (+1,{C_FIELD_NAME})
  print $DED_MTD                 (0,{C_BEFORE_ADJ})
  print $DED_MTD_ADJ             (0,{C_AFTER_ADJ})

  print $Pay025cn_Tot_garn_ytd   (+1,{C_FIELD_NAME})
  print $DED_GARN_YTD            (0,{C_BEFORE_ADJ})
  print $DED_GARN_YTD_ADJ        (0,{C_AFTER_ADJ})
  print $DED_GARN_ADJ            (0,{C_AMOUNT_ADJ})

  print $Pay025cn_Tot_garn_qtd   (+1,{C_FIELD_NAME})
  print $DED_GARN_QTD            (0,{C_BEFORE_ADJ}
  print $DED_GARN_QTD_ADJ        (0,{C_AFTER_ADJ})

  print $Pay025cn_Tot_garn_mtd   (+1,{C_FIELD_NAME})
  print $DED_GARN_MTD            (0,{C_BEFORE_ADJ}
  print $DED_GARN_MTD_ADJ        (0,{C_AFTER_ADJ})

  print $Pay025cn_Tot_co_fee_ytd (+1,{C_FIELD_NAME})
  print $DED_CFEE_YTD            (0,{C_BEFORE_ADJ})
  print $DED_CFEE_YTD_ADJ        (0,{C_AFTER_ADJ})
  print $DED_CFEE_ADJ            (0,{C_AMOUNT_ADJ})

  print $Pay025cn_Tot_co_fee_qtd (+1,{C_FIELD_NAME})
  print $DED_CFEE_QTD            (0,{C_BEFORE_ADJ}
  print $DED_CFEE_QTD_ADJ        (0,{C_AFTER_ADJ})

  print $Pay025cn_Tot_co_fee_mtd (+1,{C_FIELD_NAME})
  print $DED_CFEE_MTD            (0,{C_BEFORE_ADJ}
  print $DED_CFEE_MTD_ADJ        (0,{C_AFTER_ADJ})

  print $Pay025cn_Tot_pay_fee_ytd (+1,{C_FIELD_NAME})
  print $DED_PFEE_YTD            (0,{C_BEFORE_ADJ})
  print $DED_PFEE_YTD_ADJ        (0,{C_AFTER_ADJ})
  print $DED_PFEE_ADJ            (0,{C_AMOUNT_ADJ})

  print $Pay025cn_Tot_pay_fee_qtd (+1,{C_FIELD_NAME})
  print $DED_PFEE_QTD            (0,{C_BEFORE_ADJ}
  print $DED_PFEE_QTD_ADJ        (0,{C_AFTER_ADJ})

  print $Pay025cn_Tot_pay_fee_mtd (+1,{C_FIELD_NAME})
  print $DED_PFEE_MTD            (0,{C_BEFORE_ADJ}
  print $DED_PFEE_MTD_ADJ        (0,{C_AFTER_ADJ})

end-procedure


begin-procedure Print-Tax-Adjustments
  next-listing need=10

  do Format-Number(&E.TAX_YTD      ,$TAX_YTD      , 'b9,999,999.99')
  do Format-Number(&E.TAX_YTD_ADJ  ,$TAX_YTD_ADJ  , 'b9,999,999.99')
  do Format-Number(&E.TAX_ADJ      ,$TAX_ADJ      , 'b9,999,999.99')

  do Format-Number(&E.TAX_QTD      ,$TAX_QTD      , 'b9,999,999.99')
  do Format-Number(&E.TAX_QTD_ADJ  ,$TAX_QTD_ADJ  , 'b9,999,999.99')

  do Format-Number(&E.TAX_MTD      ,$TAX_MTD      , 'b9,999,999.99')
  do Format-Number(&E.TAX_MTD_ADJ  ,$TAX_MTD_ADJ  , 'b9,999,999.99')

  do Format-Number(&E.TXGRS_YTD    ,$TXGRS_YTD    , 'b9,999,999.99')
  do Format-Number(&E.TXGRS_YTD_ADJ,$TXGRS_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&E.TXGRS_ADJ    ,$TXGRS_ADJ    , 'b9,999,999.99')

  do Format-Number(&E.TXGRS_QTD    ,$TXGRS_QTD    , 'b9,999,999.99')
  do Format-Number(&E.TXGRS_QTD_ADJ,$TXGRS_QTD_ADJ, 'b9,999,999.99')
  do Format-Number(&E.TXGRS_MTD    ,$TXGRS_MTD    , 'b9,999,999.99')
  do Format-Number(&E.TXGRS_MTD_ADJ,$TXGRS_MTD_ADJ, 'b9,999,999.99')
  do Format-Number(&E.NLGRS_YTD    ,$NLGRS_YTD    , 'b9,999,999.99')
  do Format-Number(&E.NLGRS_YTD_ADJ,$NLGRS_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&E.NLGRS_ADJ    ,$NLGRS_ADJ    , 'b9,999,999.99')

  do Format-Number(&E.NLGRS_QTD    ,$NLGRS_QTD    , 'b9,999,999.99')
  do Format-Number(&E.NLGRS_QTD_ADJ,$NLGRS_QTD_ADJ, 'b9,999,999.99')

  do Format-Number(&E.NLGRS_MTD    ,$NLGRS_MTD    , 'b9,999,999.99')
  do Format-Number(&E.NLGRS_MTD_ADJ,$NLGRS_MTD_ADJ, 'b9,999,999.99')

  do Format-Number(&E.Balance_Year, $Calendar_Year, 'b9999999')

  move 'TAX_CLASS_CAN' to $FieldName
  move &E.Tax_Class_CAN to $FieldValue
  do Read-Translate-Table
  let $Tax_Class = $XlatShortName

  print &E.EmplID                (+1,{C_EmplID})
  print &E.Bal_adj_Seq           (0,{C_BAL_ADJ_SEQ})
  print &E.Dt_Entered            (0,{C_DT_ENTERED},11)
  print $Calendar_Year           (0,{C_CALENDAR_YEAR})

  let $Balance_Qtr = to_char(&E.Balance_Qtr)
  let $QtrCd = ' ' || $Balance_Qtr
  print $QtrCd                   (0,{C_QTRCD})
  let $Balance_Period = to_char(&E.Balance_Period)
  let $MonthCd = ' ' || $Balance_Period
  print $MonthCd                 (0,{C_MONTHCD})

  print $Pay025cn_Tot_taxes_ytd  (0,{C_FIELD_NAME})
  print $TAX_YTD                 (0,{C_BEFORE_ADJ})
  print $TAX_YTD_ADJ             (0,{C_AFTER_ADJ})
  print $TAX_ADJ                 (0,{C_AMOUNT_ADJ})

  let $province_out = RTRIM(&E.Province, ' ')
  print $province_out            (0,{C_PROVINCE})
  print &E.Wage_Loss_Plan        (0,{C_WAGE_LOSS_PLAN})

  print $TAX_CLASS               (0,{C_TAX_CLASS})

  print &E.Adj_Reason           (+1,{C_REASON})
  print $Pay025cn_Tot_taxes_qtd  (0,{C_FIELD_NAME})
  print $TAX_QTD                 (0,{C_BEFORE_ADJ})
  print $TAX_QTD_ADJ             (0,{C_AFTER_ADJ})

  print $Pay025cn_Tot_taxes_mtd  (+1,{C_FIELD_NAME})
  print $TAX_MTD                 (0,{C_BEFORE_ADJ})
  print $TAX_MTD_ADJ             (0,{C_AFTER_ADJ})


  print $Pay025cn_Tax_gross_ytd  (+1,{C_FIELD_NAME})
  print $TXGRS_YTD               (0,{C_BEFORE_ADJ})
  print $TXGRS_YTD_ADJ           (0,{C_AFTER_ADJ})
  print $TXGRS_ADJ               (0,{C_AMOUNT_ADJ})

  print $Pay025cn_Tax_gross_qtd  (+1,{C_FIELD_NAME})
  print $TXGRS_QTD               (0,{C_BEFORE_ADJ})
  print $TXGRS_QTD_ADJ           (0,{C_AFTER_ADJ})

  print $Pay025cn_Tax_gross_mtd  (+1,{C_FIELD_NAME})
  print $TXGRS_MTD               (0,{C_BEFORE_ADJ})
  print $TXGRS_MTD_ADJ           (0,{C_AFTER_ADJ})

  print $Pay025cn_Nolim_gross_ytd (+1,{C_FIELD_NAME})
  print $NLGRS_YTD               (0,{C_BEFORE_ADJ})
  print $NLGRS_YTD_ADJ           (0,{C_AFTER_ADJ})
  print $NLGRS_ADJ               (0,{C_AMOUNT_ADJ})

  print $Pay025cn_Nolim_gross_qtd (+1,{C_FIELD_NAME})
  print $NLGRS_QTD               (0,{C_BEFORE_ADJ})
  print $NLGRS_QTD_ADJ           (0,{C_AFTER_ADJ})

  print $Pay025cn_Nolim_gross_mtd (+1,{C_FIELD_NAME})
  print $NLGRS_MTD               (0,{C_BEFORE_ADJ})
  print $NLGRS_MTD_ADJ           (0,{C_AFTER_ADJ})

end-procedure


begin-procedure Print-EI-Adjustments
  next-listing need=3

  do Format-Number(&F.UI_WKLY_EARNS    ,  $UI_WKLY_EARNS    , 'b9,999,999.99')
  do Format-Number(&F.UI_WK_EARN_ADJ   ,  $UI_WK_EARN_ADJ   , 'b9,999,999.99')
  do Format-Number(&F.UI_EARN_ADJ      ,  $UI_EARN_ADJ      , 'b9,999,999.99')
  do Format-Number(&F.UI_WKLY_HOURS    ,  $UI_WKLY_HOURS    , 'b9,999,999.99')
  do Format-Number(&F.UI_WK_HRS_ADJ    ,  $UI_WK_HRS_ADJ    , 'b9,999,999.99')
  do Format-Number(&F.UI_HOURS_ADJ     ,  $UI_HOURS_ADJ     , 'b9,999,999.99')


  print &F.EmplID               (+1,{C_EmplID})
  print &F.Bal_adj_Seq           (0,{C_BAL_ADJ_SEQ_EI})
  print &F.Dt_Entered            (0,{C_DT_ENTERED_EI},11)
  print &F.UI_Period_Dt          (0,{C_CALENDAR_YEAR},11)
  print &F.Earns_End_Dt          (0,{C_EI_PERIOD_DT},11)
  print $Pay025cn_Ei_wkly_earn   (0,{C_FIELD_NAME})
  print $UI_WKLY_EARNS           (0,{C_BEFORE_ADJ})
  print $UI_WK_EARN_ADJ          (0,{C_AFTER_ADJ})
  print $UI_EARN_ADJ             (0,{C_AMOUNT_ADJ})
  print &F.Wage_Loss_Plan        (0,{C_WAGE_LOSS_PLAN_EI})


  print &F.Adj_Reason            (+1,{C_REASON})
  print $Pay025cn_Ei_wkly_hrs    (0, {C_FIELD_NAME})
  print $UI_WKLY_HOURS           (0, {C_BEFORE_ADJ})
  print $UI_WK_HRS_ADJ           (0, {C_AFTER_ADJ})
  print $UI_HOURS_ADJ            (0,{C_AMOUNT_ADJ})


end-procedure


begin-procedure Print-Arrears-Adjustments
  next-listing need=3

  let #ARR_BEFORE_ADJ = &H.ARREARS_BAL - &H.ARR_ADJ

  do Format-Number(#ARR_BEFORE_ADJ  , $ARR_BEFORE_ADJ, 'b9,999,999.99')
  do Format-Number(&H.ARREARS_BAL   , $ARR_YTD_BAL   , 'b9,999,999.99')
  do Format-Number(&H.ARR_ADJ       , $ARR_ADJ       , 'b9,999,999.99')

  print &H.EmplID               (+1,{C_EmplID})
  print &H.Bal_adj_Seq           (0,{C_BAL_ADJ_SEQ})
  print &H.Dt_Entered            (0,{C_DT_ENTERED},11)
  print $ARR_BEFORE_ADJ          (0,{C_ARR_BEFORE_ADJ})
  print $ARR_YTD_BAL             (0,{C_ARR_AFTER_ADJ})
  print $ARR_ADJ                 (0,{C_ARR_AMOUNT_ADJ})

  print &H.Plan_type             (0,{C_ARR_PLAN_TYPE})
  print &H.Benefit_plan          (0,{C_ARR_BENEFIT_PLAN})
  print &H.Dedcd                 (0,{C_ARR_DED_CODE})
  print &H.Ded_class             (0,{C_ARR_DED_CLASS})

  print &H.Adj_Reason           (+1,{C_REASON})

end-procedure


begin-procedure page_break

    if $End = 'Y'
      do Reset
    end-if

    new-page
end-procedure


begin-procedure Build-Where-Clause

    if RTRIM($Which_Date, ' ') = 'A'
        let $W1 = 'AND '
        let $W2 = $Prefix
        let $W3 = '.DT_ENTERED BETWEEN '''
        let $W4 =  $FromDate
        let $W5 =  ''' AND '''
        let $W6 =  $AsOfDate
        let $W7 =  ''''

        let $Date_Where_1 = $W1 || $W2 || $W3 || $W4 || $W5 || $W6 || $W7
        let $Date_Where_2 = ''
        let $Date_Where_3 = ''

        let $O1 = $Prefix
        let $O2 = '.DT_ENTERED ASC'
        let $Date_Order_1 = $O1 || $O2
        let $Date_Order_2 = ''
    end-if

    if RTRIM($Which_Date, ' ') = 'B'
        move $AsOfDate to $Save_AsOfDate
        move $FromDate to $AsOfDate
        do Get-Date-Codes
        let #From_Year   = to_number($AsOfYYYY)
        let #From_Month  = to_number($AsOfMonth)                        !HP99999

        move $Save_AsOfDate to $AsOfDate
        do Get-Date-Codes
        let #To_Year   = to_number($AsOfYYYY)
        let $AsOfMonth = ltrim($AsOfMonth, '0')                         !HP99999
        let #To_Month  = to_number($AsOfMonth)                          !HP99999

        let $W1 = 'AND (('
        let $W2 = $Prefix
        let $W3 = '.BALANCE_YEAR > '
        do Format-Number(#From_Year, $W4, '9999')
        let $W5 = ' AND '
        let $W6 = $Prefix
        let $W7 = '.BALANCE_YEAR < '
        do Format-Number(#To_Year, $W8, '9999')
        let $W9 = ')'
        let $Date_Where_1 = $W1 || $W2 || $W3 || $W4 || $W5 || $W6 || $W7 || $W8 ||  $W9

        let $W1 = ' OR ('
        let $W2 = $Prefix
        let $W3 = '.BALANCE_YEAR = '
        do Format-Number(#From_Year, $W4, '9999')
        let $W5 =  ' AND '
        let $W6 = $Prefix
        let $W7 = '.BALANCE_PERIOD >= '
        do Format-Number(#From_Month, $W8, '99')
        let $W9 = ')'
        let $Date_Where_2 = $W1 || $W2 || $W3 || $W4 || $W5 || $W6 || $W7 || $W8 || $W9

        if #From_Year = #To_Year
           let $W1 = ' AND ('
        else
           let $W1 = ' OR ('
        end-if

        let $W2 = $Prefix
        let $W3 = '.BALANCE_YEAR = '
        do Format-Number(#To_Year, $W4, '9999')
        let $W5 = ' AND '
        let $W6 = $Prefix
        let $W7 = '.BALANCE_PERIOD <= '
        do Format-Number(#To_Month, $W8, '99')
        let $W9 = '))'
        let $Date_Where_3 = $W1 || $W2 || $W3 || $W4 || $W5 || $W6 || $W7 || $W8 || $W9

        let $O1 = $Prefix
        let $O2 = '.BALANCE_YEAR ASC,'
        let $Date_Order_1 = $O1 || $O2
        let $O2 = '.BALANCE_PERIOD ASC'
        let $Date_Order_2 = $O1 || $O2
    end-if

end-procedure


#Include 'getcodta.sqc'  !Get-Company-Data procedure
#include 'curdttim.sqc'  !Current Date and Time
#include 'getftdts.sqc'  !Current Date and Time
#include 'getdatcd.sqc'  !Get Year, Quarter Month Codes from $AsOfDate
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#include 'reset.sqc'     !Reset Printer
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrctl2.sqc'  !Get-Run-Control procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
