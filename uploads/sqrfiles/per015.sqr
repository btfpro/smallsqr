!***************************************
!  PER015:  Personnel Actions History  *
!***************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/08/06:00:31:37                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689848                                              !
!                                                                      *
!***********************************************************************
!Procedures ending with "Scrty" and Record alias ending with "SC" are  *
!using SQR Security.                                                   *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
Begin-Setup
#Include 'ptset02.sqc'  !Printer and page-size initialization
End-Setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  if $prcs_oprid=''
    goto last2
  end-if
  Show 'Start Report PER015: ' $Reporttitle
  Show '  Selection Criteria'
  do Format-DateTime($FromDate, $out, {DEFDATE}, '', '')

  Show '    From Date: ' $out
  do Format-DateTime($ThruDate, $out, {DEFDATE}, '', '')
  Show '    Thru Date: ' $out
  Show '    Actions: ' $ACTIONSTRING
  do Process-Main
  If $FND_DETAILS = 'N' 
     
       PRINT 'No Data Found matching Selection Criteria'               (+3,1)
       Display 'No Data Found matching Selection criteria'
  end-if
  Show 'End Report PER015: ' $Reporttitle
  do Reset
  do Stdapi-Term
LAST2:
end-report

begin-heading 7
do Get_Field_Information ('PER015',     'REPORT_TITLE',         $REPORTTITLE,   #DW)
#Include 'stdhtr08.sqc'
do Get_Field_Information ('PER015',     'PERSONNEL',            $PERSONNEL,     #DW)
do Get_Field_Information ('PER015',     'YRS_SERVICE1',         $YRS_SERVICE1,  #DW)
do Get_Field_Information ('PER015',     'YRS_SERVICE2',         $YRS_SERVICE2,  #DW)
do Get_Field_Information ('HR',         'EMP_TYP1',             $EMPL_TYPE1,    #DW)
do Get_Field_Information ('HR',         'EMP_TYP2',             $EMPL_TYPE2,    #DW)
do Get_Field_Information ('HR',         'REG_TMP1',             $REG_TEMP1,     #DW)
do Get_Field_Information ('HR',         'REG_TMP2',             $REG_TEMP2,     #DW)
do Get_Field_Information ('HR',         'FULL_PART_TM1',        $FULL_PART_TM1, #DW)
do Get_Field_Information ('HR',         'FULL_PART_TM2',        $FULL_PART_TM2, #DW)
do Get_Field_Information ('HR',         'CURRENCY_CD1',         $CURRENCY_CD1,  #DW)
do Get_Field_Information ('HR',         'CURRENCY_CD2',         $CURRENCY_CD2,  #DW)
do Get_Field_Information ('HR',         'COMPRATE',             $COMPRATE,      #DW)
do Get_Field_Information ('HR',         'EFFDT1',               $EFFDT1,        #DW)
do Get_Field_Information ('HR',         'EFFDT2',               $EFFDT2,        #DW)
do Get_Field_Information ('HR',         'EMPLID',               $EMPLID,        #DW)
do Get_Field_Information ('HR',         'ACTION_REASON1',       $ACT_RSN1,      #DW)
do Get_Field_Information ('HR',         'ACTION_REASON2',       $ACT_RSN2,      #DW)
do Get_Field_Information ('HR',         'EMPL_NAME',            $NAME,          #DW)
do Get_Field_Information ('HR',         'HIRE_DT1',             $HIRE_DT1,      #DW)
do Get_Field_Information ('HR',         'HIRE_DT2',             $HIRE_DT2,      #DW)
do Get_Field_Information ('HR',         'JOBCODE1',             $JOBCODE1,      #DW)
do Get_Field_Information ('HR',         'JOBCODE2',             $JOBCODE2,      #DW)
do Get_Field_Information ('HR',         'JOBTITLE',             $JOBTITLE,      #DW)
do Get_Field_Information ('HR',         'GRADE1',               $GRADE1,        #DW)
do Get_Field_Information ('HR',         'GRADE2',               $GRADE2,        #DW)
do Get_Field_Information ('HR',         'SUPERVISOR_NAME',      $SUPER,         #DW)

  if $Action <> $priorAction
    move 'ACTION'  to $FieldName
    move $Action   to $FieldValue
    do Read-Translate-Table
    move $XlatLongName to $ActionName  !for use in Heading
    move $Action to $priorAction
  end-if

PRINT $PERSONNEL                (3,1)
  print $Action                 (0,+2) edit xxx--
  print $ActionName             ()
LET $REG1 = $REG_TEMP1 || '/'
LET $FULL1 = $FULL_PART_TM1 || '/'

PRINT $EFFDT1                   (+3,1,10)
PRINT $ACT_RSN1                 (0,12,59)
PRINT $HIRE_DT1                 (0,72,11)
PRINT $YRS_SERVICE1             (0,84,3)
PRINT $EMPL_TYPE1               (0,88,3)
PRINT $REG1                     (0,92,4)
PRINT $FULL1                    (0,97,5)
PRINT $JOBCODE1                 (0,103,17)

!************* BEGIN RESOLUTION 154903 ******************
!PRINT $GRADE1                   (0,121,7)
!PRINT $CURRENCY_CD1             (0,129)


!************* END RESOLUTION 154903 *********************


!************* BEGIN RESOLUTION 154903 ******************
PRINT $GRADE1                   (0,121,9)

if #MultiCurr
PRINT $CURRENCY_CD1             (0,131)

!************* END RESOLUTION 154903 *********************
end-if

PRINT $EFFDT2                   (+1,1,10)
PRINT $ACT_RSN2                 (0,12,10)
PRINT $NAME                     (0,23,36)
PRINT $EMPLID                   (0,60,11)
PRINT $HIRE_DT2                 (0,72,11)
PRINT $YRS_SERVICE2             (0,84,3)
PRINT $EMPL_TYPE2               (0,88,3)
PRINT $REG_TEMP2                (0,92,4)
PRINT $FULL_PART_TM2            (0,97,5)
PRINT $JOBCODE2                 (0,103,6)
PRINT $JOBTITLE                 (0,110,10)

!************* BEGIN RESOLUTION 154903 ******************
!HAVE MADE CHANGES IN THE GRADE FIELD THEREFORE NEXT FIELDS TOO HAVE BEEN CHANGED

!PRINT $GRADE2                  (0,121,7)
PRINT $GRADE2                   (0,121,9)

if #MultiCurr
!PRINT $CURRENCY_CD2            (0,129,10)
PRINT $CURRENCY_CD2             (0,131,10)

end-if

!PRINT $COMPRATE                (0,140,17)
PRINT $COMPRATE                 (0,142,17)

!PRINT $SUPER                    (0,158)
PRINT $SUPER                    (0,160)

!************* END RESOLUTION 154903 *********************

PRINT ' '                       (+2,1)
end-heading

begin-procedure Init-Report
  Let $_TableAlias = 'B' 
  move 'PER015' to $ReportID
  do Stdapi-Init
  if $prcs_oprid=''
    display ''
    display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
    display ''
    goto last1
  end-if

  do Security-Param

  if $prcs_process_instance = ''
    do Ask-From-Thru-Date
    do Ask-Actions
  else
    do Select-Parameters
  end-if
  do Init_Printer
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')
LAST1:
end-procedure

begin-procedure Get-Values
   let $language_cd = $prcs_language_cd
   do Get-From-Thru-Date
   do Get-Actions
   do Get-PER015-Parm

end-procedure

begin-procedure Process-Main
  let $FND_DETAILS = 'N'
begin-SELECT
C.BUSINESS_UNIT
  LET $BU = RTRIM(&C.BUSINESS_UNIT,' ')
C.SETID_DEPT
  Let $SetidDept = &C.SETID_DEPT
C.ACTION ()     on-break print=never level=1 procedure=Action-Change
  move &C.Action         to $Action
C.DEPTID ()     on-break print=never procedure=Dept-Change
  if $firstRec <> 'N'
    do Initialize-Subheading
    move 'N' to $firstRec
  end-if
  let $action_changed = 'N'
C.EFFDT
  do Format-DateTime(&C.EffDt, $effdate, {DEFDATE}, '', '')
  print $effdate                        (+1,1,10)
C.EFFSEQ
C.ACTION_REASON
  move &C.Action_Reason  to $Action_Reason
  move &C.EffDt          to $AsOfDate
  do Get-Action-Reason
  print $Action_Reason_DescrShort   (0,12,10)
!*************************BEGIN SQR NAME DISPLAY CHANGE***********************
   !A.NAME                              (0,23,36)
A.NAME_DISPLAY                       (0,23,36)
!*************************BEGIN SQR NAME DISPLAY CHANGE***********************
A.EMPLID                            (0,60,11)
B.EMPL_RCD
B.HIRE_DT
  do Format-DateTime(&B.Hire_Dt, $out, {DEFDATE}, '', '')
  print $out                        (0,72,10)

  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime(&B.Hire_Dt, $Hire_YMD, {DEFYMD}, '', '')
  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime(&C.EffDt, $Eff_YMD, {DEFYMD}, '', '')
  do Dtu-Diff-Months($Hire_YMD, $Eff_YMD, #Months)
  Let #YearsSvc = round((#Months / 12),1)
  do Format-Number(#YearsSvc, $out, '99.9')
  print $out                        (0,83,4)

C.EMPL_TYPE                         (0,88,3)
C.REG_TEMP                          (0,92,4)
C.FULL_PART_TIME                    (0,97,5)
C.JOBCODE                           (0,103,6)
C.SETID_JOBCODE
  move &C.SETID_JOBCODE to $SETID
  move &C.JobCode to $Jobcode
  do Get-Job-Title
  print $JobTitleAbbrv              (0,110,10)


!************* BEGIN RESOLUTION 154903 ******************
!HAVE MADE CHANGES IN THE SAL_ADMIN_PLAN FIELD THEREFORE NEXT FIELDS TOO HAVE BEEN CHANGED


!C.SAL_ADMIN_PLAN                   (0,121) EDIT XXX/
C.SAL_ADMIN_PLAN                    (0,121) EDIT XXXX/
C.GRADE                             ()
C.CURRENCY_CD
  if #MultiCurr
!    print &C.Currency_cd           (0,129,2)
     print &C.Currency_cd           (0,131,3)
  end-if
C.COMPRATE
  do Format-Number(&C.CompRate, $out, '999999999999.999999')
  
 !print $out                     (0,132)
  print $out                        (0,134)
!C.COMP_FREQUENCY                    (0,152,5)  
C.COMP_FREQUENCY                    (0,154,5)
C.SUPERVISOR_ID
  move &C.Supervisor_ID to $EmplID
  do Get-Employee-Name
  !print $Name                      (0,158,19)
  print $Name                       (0,160,19)


!************* END RESOLUTION 154903 ********************


  if $show_comp = 'Y'
    move 'Y' to $firstcomp
    do Get-Compensation-Components
    position (+1)
  end-if
  let $FND_DETAILS = 'Y'

FROM  PS_PERSON_NAME A,
      PS_EMPLOYMENT B,
      PS_JOB C
WHERE A.EMPLID = B.EMPLID
  AND B.EMPLID = C.EMPLID
  AND B.EMPL_RCD = C.EMPL_RCD
  AND C.EFFDT BETWEEN $FromDate AND $ThruDate
  AND C.ACTION IN ([$ACTIONSTRING])
  [$SecurityClausewithERN]
ORDER BY C.ACTION,C.DEPTID,C.EFFDT DESC
end-SELECT
end-procedure

begin-procedure Get-Compensation-Components
  do Get_Field_Information ('HR',         'COMP_COMPONENTS',      $COMPONENTS,    #DW)
  print $COMPONENTS                 (+1,90,30)
begin-SELECT
D.COMP_EFFSEQ
D.COMP_RATECD
  if $firstcomp <> 'N'
    print &D.COMP_RATECD            (0,121)
    move 'N' to $firstcomp
  else


!************* BEGIN RESOLUTION 154903 ******************
!HAVE MADE CHANGES IN THE COMP_RATECD FIELD THEREFORE NEXT FIELDS TOO HAVE BEEN CHANGED


 !print &D.COMP_RATECD            (+1,121,7)
  print &D.COMP_RATECD            (+1,121,9)
  end-if
!D.CURRENCY_CD                      (0,129,2)  
D.CURRENCY_CD                       (0,131,3)
D.COMPRATE
  do Format-Number(&D.CompRate, $out, '999999999999.999999')
 ! print $out                       (0,132,19) 
  print $out                        (0,134,19)
!D.COMP_FREQUENCY                   (0,152)  
D.COMP_FREQUENCY                    (0,154)


!************* END RESOLUTION 154903 ********************


FROM  PS_COMPENSATION D
WHERE D.EMPLID    = &A.EmplID
  AND D.EMPL_RCD = &B.EMPL_RCD
  AND D.EFFDT     = &C.Effdt
  AND D.EFFSEQ    = &C.Effseq
ORDER BY D.COMP_RATECD, D.COMP_EFFSEQ
end-SELECT
end-procedure

begin-procedure Action-Change
  new-page
  let $action_changed = 'Y'
end-procedure

begin-procedure Dept-Change
  if #current-line >= 51  !ensure a minimum of 2 employees is listed
    new-page
  else
    if $action_changed <> 'Y'
      position (+3)
    end-if
  end-if
  do Initialize-Subheading
end-procedure

begin-procedure Initialize-Subheading
  move &C.DeptID to $DeptID
  do Get-Department-Name
  do Print-Subheading
end-procedure

begin-procedure Print-Subheading

  do Get_Field_Information ('HR', 'DEPARTMENT', $Department, #DW)
  print $Department  (+1,1)
  print $DeptID      (0,+1)
  print $DeptName    (0,+2)

  do Get_Field_Information ('HR', 'SETID', $Setid, #DW)
  print $Setid       (+1,1)
  print '-'          (0,+1)
  print $SetidDept   (0,+1)
  position (+1,0)

end-procedure

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrrnctl2.sqc'  !Get Action values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askftd.sqc'    !From Thru Date input
#include 'askactn.sqc'   !Action input
#include 'hrsecty.sqc'   !Get SQR Security parameters

#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'getempnm.sqc'  !Get-Employee-Name procedure
#Include 'getactrs.sqc'  !Get-Action-Reason procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'


