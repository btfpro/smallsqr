!****************************
! BEN044: Calculation Errors
!****************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:08:44:14                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************


#Include 'setenv.sqc'  !Set Database Environment

Begin-Setup
  #Include 'ptpsl177.sqc'
End-Setup

#define col_bill_per_cd          6      !Calendar Code
#define col_emplid              11      !Employee Id
#define col_msg_id               6      !Message Id
#define col_msg_descr           90      !Message Description
#define col_msg_data            30      !Message Data

#define col_sep                  1      !Column Separator
#define gap_sep                  4      !Gap Separator


!*************************************
Begin-Program
!*************************************

  do Init-Report

  display 'Report Begin at: ' noline
  do display-time

  do Process-Main

  display 'Report Ended at: ' noline
  do display-time

  do Reset
  do StdAPI-Term

End-Program


!*************************************
Begin-Procedure Init-Report
!*************************************

  do Init-DateTime
  do StdAPI-Init

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-Values
  end-if

  let $ReportID    = 'BEN044'
  do Get-Report-Language
  let $ReportTitle  = $BEN044-REPORTTITLE
  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ''

End-Procedure

!**********************************
! This procedure is used to read language-dependent text from the database.
!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from BEN044 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation('BEN1')

  do Get_Field_Information ('BEN044', 'REPORT_TITLE', $BEN044-REPORTTITLE,  #CW)
  do Get_Field_Information ('BEN044', 'ERR_MSG_DESCR',$BEN044-ERR-MSG-DESCR,#CW)
  do Get_Field_Information ('BEN044', 'MSG_DATA',     $BEN044-MSG-DATA,     #CW)

  do Get_Field_Information ('BEN1',   'EMPLOYEE',     $BEN1-EMPLOYEE,       #CW)
  do Get_Field_Information ('BEN1',   'ID',           $BEN1-ID,             #CW)
  do Get_Field_Information ('BEN1',   'MSG',          $BEN1-MSG,            #CW)
  do Get_Field_Information ('BEN1',   'BILL',         $BEN1-BILL,           #CW)
  do Get_Field_Information ('BEN1',   'MSG_NOT_FOUND',$BEN1-NO-MSG-FOUND,   #CW)

End-Procedure

!*************************************
Begin-Procedure Ask-Values
!*************************************

  do Ask-Calendar-Cd

End-Procedure


!*************************************
Begin-Procedure Get-Values
!*************************************

  do Select-Parameters
  do Get-Calendar-Cd

End-Procedure

!*************************************
Begin-Heading 8
!*************************************

#include 'stdhdgtr.sqc'

  print $BEN1-BILL                      (+2,1,{col_bill_per_cd})
  print $BEN1-EMPLOYEE                  (0,+{col_sep},{col_emplid})
  print $BEN1-MSG                       (0,+{col_sep},{col_msg_id})

  print $BEN1-ID                        (+1,1,{col_bill_per_cd})
  print $BEN1-ID                        (0,+{col_sep},{col_emplid})
  print $BEN1-ID                        (0,+{col_sep},{col_msg_id})
  print $BEN044-ERR-MSG-DESCR           (0,+{gap_sep},{col_msg_descr})
  print $BEN044-MSG-DATA                (0,+{gap_sep},{col_msg_data})

  print '='                             (+1,1,{col_bill_per_cd})       Fill
  print '='                             (0,+{col_sep},{col_emplid})    Fill
  print '='                             (0,+{col_sep},{col_msg_id})    Fill
  print '='                             (0,+{gap_sep},{col_msg_descr}) Fill
  print '='                             (0,+{gap_sep},{col_msg_data})  Fill

End-Heading


!*************************************
Begin-Procedure Process-Main
!*************************************

  let #MsgOffset = {col_bill_per_cd} + {col_sep} + {col_emplid} + {col_sep} +
                   {col_msg_id} + {gap_sep} + {col_msg_descr} + {gap_sep} + 1

Begin-Select
A.BILL_PER_CD     (0,1,{COL_BILL_PER_CD})        On-Break
                                                 PRINT=CHANGE/TOP-PAGE
                                                 LEVEL=1
A.EMPLID          (0,+{COL_SEP},{COL_EMPLID})    On-Break
                                                 PRINT=CHANGE/TOP-PAGE
                                                 LEVEL=2
A.MSGID           (0,+{COL_SEP},{COL_MSG_ID})

  let $PayMsgID = &A.MSGID
  do Get-Pay-Message-Text
  if ($PayMsgLong = '')
    let $PayMsgLong = $BEN1-NO-MSG-FOUND
  end-if
  print $PayMsgLong   (0,+{gap_sep},{col_msg_descr}) WRAP {col_msg_descr} 6

A.MSGDATA1
  if (RTRIM(&A.MSGDATA1, ' ') <> '')
    let $MsgData = '1: ' || &A.MSGDATA1
    print $MsgData                 (1,+{gap_sep},{col_msg_data})
  end-if

A.MSGDATA2
  if (RTRIM(&A.MSGDATA2, ' ') <> '')
    let $MsgData = '2: ' || &A.MSGDATA2
    print $MsgData                 (+1,#MsgOffset,{col_msg_data})
  end-if

A.MSGDATA3
  if (RTRIM(&A.MSGDATA3, ' ') <> '')
    let $MsgData = '3: ' || &A.MSGDATA3
    print $MsgData                 (+1,#MsgOffset,{col_msg_data})
  end-if

  NEXT-LISTING SKIPLINES=1 NEED=6

FROM  PS_BEN_BI_MESSAGE A
WHERE A.BILL_PER_CD = $Bill_Per_Cd
ORDER BY A.BILL_PER_CD ASC,
         A.EMPLID ASC,
         A.MSGID ASC,
         A.MSGDATA1 ASC

End-Select
End-Procedure

!*************************************
Begin-Procedure Display-Time
!*************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

!***********************************************************************

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Format-DateTime
#Include 'getbical.sqc'  !Ask-Calendar-Cd routine
#Include 'getpymsg.sqc'  !Get-Pay-Message-Text Procedure

#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language

!****************************** End Of Report *******************************
