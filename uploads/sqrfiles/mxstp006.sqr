!***********************************************************************
! MXSTP006.SQR   STPS DC-3 Courses/Events Certificates List.           *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:13:50:34                                 *
!       $Release:  HR9                                                 *
!      $Revision:  101                                                 *
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'   !Set environment

Begin-Setup
#include 'setupdb.sqc'
 Declare-Printer   THIS_REPORT
  Type=HPLASERJET
  Font=5
  Point-Size=14
  Pitch=17
  Symbol-Set=19U     ! ASCII symbol set
 End-Declare
 
 Declare-Layout THIS_REPORT
  Orientation=Portrait
  Top-Margin= .35
  Left-Margin=.2
  Max-Lines=82
  Max-Columns=130
  Char-Width=6.5  ! 4.3    ! 7.2
  Line-Height=9     ! 72/printer_point-size
 End-Declare
 
 Declare-Report THIS_REPORT
  Printer-Type=HPLASERJET
  LayOut=THIS_REPORT
 End-Declare
End-Setup


begin-report
  move '1' to $ReportDateType
  move '1' to $Reportyear4
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
!  do Declare-Printer
  do Init-Report
  do Select-Parameters
  do Report
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do Stdapi-Term
  !do Reset
end-report


begin-procedure Init-Report
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  move 'MXSTP006' to $ReportID
  let $ReportTitle = 'STPS DC-3 Constancia de Habilidades Laborales'
  display $ReportTitle
end-procedure Init-Report

begin-heading 1
  position  (1)
end-heading

!begin-procedure Declare-Printer
!  let #fontstd  = 5
!  let #sizestd  = 6
!  let #fontsm   = 5
!  let #sizesm   = 8
!  let #fontmed  = 5
!  let #sizemed  = 10
!  let #fontgr   = 5
!  let #sizegr   = 12
!  let #fontxgr  = 5
!  let #sizexgr  = 14
!  declare printer
!    type          = HPLASERJET
!    orientation   = portrait
!    top-margin    = 0.35
!    left-margin   = 0.0   !0.5
!    symbol-set    = 19U
!    font          = 5
!    font-style    = fixed
!    point-size    = 14 !12
!    line-size     = 9
!end-procedure Declare-Printer


begin-procedure Report
  do Get-Report-Data
  do Get-ER-Locations
  do Get-Program-Data
  do Get-Employee-Data
  !do Print-Format
end-procedure Report


begin-procedure Select-Parameters
begin-select
RC.COMPANY
RC.ESTABID
RC.NAME_MEX
RC.FROM_EMPLID_MEX
RC.TO_EMPLID_MEX
RC.PLAN_TYPE_MEX
RC.TRN_PROGRAM
RC.ACCUM_HRS
RC.COURSE_START_DT
RC.COURSE_END_DT
RC.INSTRUCTOR_ID

  let $Company      = &RC.COMPANY
  let $ESTABID    = rtrim(&RC.ESTABID,' ')
  let $Emp_Rep_Name = &RC.NAME_MEX
  let $From_Emplid  = rtrim(&RC.FROM_EMPLID_MEX,' ')
  let $To_Emplid    = rtrim(&RC.TO_EMPLID_MEX,' ')
  let $Plan_Type    = &RC.PLAN_TYPE_MEX
  let $Train_Prog   = &RC.TRN_PROGRAM
  let #Accum_Hrs    = &RC.ACCUM_HRS
  let $Instr_Id     = &RC.INSTRUCTOR_ID
  let $Start_Dt     = &RC.COURSE_START_DT
  let $End_Dt       = &RC.COURSE_END_DT
  do Convert-To-Dtu-Date($Start_Dt,$Start_Dt)
  do Convert-To-Dtu-Date($End_Dt,$End_Dt)

  let $IMS_ER_S  = substr($ESTABID,1,11)
  let $IMS_ER_1  = substr($IMS_ER_S,1,1)
  let $IMS_ER_2  = substr($IMS_ER_S,2,1)
  let $IMS_ER_3  = substr($IMS_ER_S,3,1)
  let $IMS_ER_4  = substr($IMS_ER_S,4,1)
  let $IMS_ER_5  = substr($IMS_ER_S,5,1)
  let $IMS_ER_6  = substr($IMS_ER_S,6,1)
  let $IMS_ER_7  = substr($IMS_ER_S,7,1)
  let $IMS_ER_8  = substr($IMS_ER_S,8,1)
  let $IMS_ER_9  = substr($IMS_ER_S,9,1)
  let $IMS_ER_10 = substr($IMS_ER_S,10,1)
  let $IMS_ER_11 = substr($IMS_ER_S,11,1)

  let $Start_Dt_Y1 = substr($Start_Dt,3,1)
  let $Start_Dt_Y2 = substr($Start_Dt,4,1)
  let $Start_Dt_M1 = substr($Start_Dt,6,1)
  let $Start_Dt_M2 = substr($Start_Dt,7,1)
  let $Start_Dt_D1 = substr($Start_Dt,9,1)
  let $Start_Dt_D2 = substr($Start_Dt,10,1)

  let $End_Dt_Y1 = substr($End_Dt,3,1)
  let $End_Dt_Y2 = substr($End_Dt,4,1)
  let $End_Dt_M1 = substr($End_Dt,6,1)
  let $End_Dt_M2 = substr($End_Dt,7,1)
  let $End_Dt_D1 = substr($End_Dt,9,1)
  let $End_Dt_D2 = substr($End_Dt,10,1)

FROM PS_RUN_STPS_MEX RC
WHERE RC.OPRID       = $Prcs_OprID
  AND RC.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-select
end-procedure Select-Parameters


begin-procedure Get-Report-Data
begin-select
C.DESCR
CM.RFC_ER_ID_MEX
CM.COMP_ACTIVITY_MEX
CM.REP_NAME_MEX
  let $Comp_Descr = &C.DESCR
  let $RFC_ER_ID  = &CM.RFC_ER_ID_MEX
  let $RFC_ER_ID  = rtrim($RFC_ER_ID,' ')
  let $Comp_Act   = &CM.COMP_ACTIVITY_MEX
  let $Rep_Name   = &CM.REP_NAME_MEX
  let $RFC_ER_S   = substr($RFC_ER_ID,1,12)
  let $RFC_ER_1   = substr($RFC_ER_S,1,1)
  let $RFC_ER_2   = substr($RFC_ER_S,2,1)
  let $RFC_ER_3   = substr($RFC_ER_S,3,1)
  let $RFC_ER_4   = substr($RFC_ER_S,4,1)
  let $RFC_ER_5   = substr($RFC_ER_S,5,1)
  let $RFC_ER_6   = substr($RFC_ER_S,6,1)
  let $RFC_ER_7   = substr($RFC_ER_S,7,1)
  let $RFC_ER_8   = substr($RFC_ER_S,8,1)
  let $RFC_ER_9   = substr($RFC_ER_S,9,1)
  let $RFC_ER_10  = substr($RFC_ER_S,10,1)
  let $RFC_ER_11  = substr($RFC_ER_S,11,1)
  let $RFC_ER_12  = substr($RFC_ER_S,12,1)
  do Get-Comp-Descr-Lang

FROM PS_COMPANY_TBL     C,
     PS_COMPANY_TBL_MEX CM

WHERE C.COMPANY = $Company
and C.COMPANY = CM.COMPANY
and C.EFFDT = (SELECT MAX(EFFDT) FROM PS_COMPANY_TBL
               WHERE COMPANY = C.COMPANY
               AND EFFDT <= $AsofToday)
and CM.EFFDT = C.EFFDT
end-select
end-procedure Get-Report-Data


begin-procedure Get-Comp-Descr-Lang
begin-SELECT
CTL.DESCR
  if rtrim(&CTL.Descr,' ') <> ''
     let $Comp_Descr  = rtrim(&CTL.Descr,' ')
  end-if
FROM  PS_COMPNY_TBL_LANG CTL
WHERE CTL.COMPANY     = $Company
  AND CTL.LANGUAGE_CD = 'ESP'
  AND CTL.EFFDT       =
     (SELECT MAX(EFFDT)
      FROM   PS_COMPNY_TBL_LANG
      WHERE  COMPANY     = $Company
        AND  LANGUAGE_CD = CTL.LANGUAGE_CD
        AND  EFFDT      <= $AsofToday)
end-SELECT
end-procedure Get-Comp-Descr-Lang


begin-procedure Get-ER-Locations
  let $Where_Location = '('
begin-select
L.LOCATION
  let $Locat = rtrim(&L.LOCATION,' ')
  concat ''''   with $Where_Location
  concat $Locat with $Where_Location
  concat ''''   with $Where_Location
  concat ','   with $Where_Location
FROM PS_LOCATION_TBL L
WHERE L.ESTABID = $ESTABID
AND L.EFFDT = (SELECT MAX(EFFDT) FROM PS_LOCATION_TBL
              WHERE SETID = L.SETID
              AND LOCATION = L.LOCATION
              AND EFF_STATUS = 'A'
              AND EFFDT <= $AsOfToday)
end-select
  let #L-Locat = length($Where_Location)
  if #L-Locat > 1
    let $Where_Location = rtrim($Where_Location,',')
    concat ')' with $Where_Location
  else
     move '(' to $Where_Location
     concat '''' with $Where_Location
     concat '''' with $Where_Location
     concat ')' with $Where_Location
  end-if
  !show '$Where_Location ' $Where_Location
end-procedure Get-ER-Locations


begin-procedure Get-Employee-Data
begin-select
J.EMPLID
P.NAME
P.LAST_NAME
P.LAST_NAME_SRCH
P.SECOND_LAST_NAME
P.SECOND_LAST_SRCH
P.FIRST_NAME
P.FIRST_NAME_SRCH
J.JOBCODE
  let $Emplid = &J.EMPLID
  let $Empl_Name = upper(rtrim(&P.LAST_NAME,' ')) || ' ' || rtrim(&P.SECOND_LAST_SRCH,' ') || ' ' || rtrim(&P.FIRST_NAME_SRCH,' ')
  let $JobCode = &J.JOBCODE
  do Get-Empl-RFC
  do Get-Empl-JobCode
  if $Plan_Type = '0010'
     do Get-Courses
  else
     do Print-Format
     do Get-Instructor-Name
     do Print-Program-Detail
     new-page
  end-if
FROM PS_JOB J,
     PS_NAMES P
WHERE J.COMPANY = $Company
AND J.EMPLID = P.EMPLID
AND J.LOCATION IN [$Where_Location]
AND J.EMPLID BETWEEN $From_Emplid AND $To_Emplid
AND J.EMPL_STATUS = 'A'
AND J.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
        WHERE EMPLID = J.EMPLID
        AND EMPL_RCD = J.EMPL_RCD
        AND EFFDT <= $AsOfToday)
AND J.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE EMPLID = J.EMPLID
        AND EMPL_RCD = J.EMPL_RCD
        AND EFFDT = J.EFFDT)
AND J.EMPL_RCD = (SELECT MAX(EMPL_RCD) FROM PS_JOB
                  WHERE EMPLID = J.EMPLID
                                  AND   EFFDT  = J.EFFDT
                                  AND   EFFSEQ = J.EFFSEQ)
and   P.NAME_TYPE = 'PRI'
and   P.EFFDT     = (SELECT MAX(EFFDT) FROM PS_NAMES
                     WHERE EMPLID = P.EMPLID
                     AND   NAME_TYPE = P.NAME_TYPE
                     AND   EFFDT <= $AsOfToday)
end-select
end-procedure Get-Employee-Data


begin-procedure Print-Format
print $Empl_Name            (17,3)
print $Empl_RFC_1           (22,2)
print $Empl_RFC_2           (22,5)
print $Empl_RFC_3           (22,8)
print $Empl_RFC_4           (22,11)
print $Empl_RFC_5           (22,17)
print $Empl_RFC_6           (22,20)
print $Empl_RFC_7           (22,23)
print $Empl_RFC_8           (22,26)
print $Empl_RFC_9           (22,29)
print $Empl_RFC_10          (22,32)
print $Empl_RFC_11          (22,38)
print $Empl_RFC_12          (22,41)
print $Empl_RFC_13          (22,44)
print $JobCode_Descr        (22,47,34)

print $Comp_Descr           (29,3)
print $RFC_ER_1             (34,2)
print $RFC_ER_2             (34,5)
print $RFC_ER_3             (34,8)
print $RFC_ER_4             (34,17)
print $RFC_ER_5             (34,20)
print $RFC_ER_6             (34,23)
print $RFC_ER_7             (34,26)
print $RFC_ER_8             (34,29)
print $RFC_ER_9             (34,32)
print $RFC_ER_10            (34,38)
print $RFC_ER_11            (34,42)
print $RFC_ER_12            (34,45)

print $IMS_ER_1             (34,54)
print $IMS_ER_2             (34,57)
print $IMS_ER_3             (34,60)
print $IMS_ER_4             (34,63)
print $IMS_ER_5             (34,66)
print $IMS_ER_6             (34,69)
print $IMS_ER_7             (34,72)
print $IMS_ER_8             (34,75)
print $IMS_ER_9             (34,78)
print $IMS_ER_10            (34,81)
print $IMS_ER_11            (34,86)
print $Comp_Act             (38,3)
end-procedure Print-Format


begin-procedure Print-Program-Detail
print $Prog_Desc            (46,3)
print #Accum_Hrs            (50,07)
print $Start_Dt_Y1          (50,47)
print $Start_Dt_Y2          (50,50)
print $Start_Dt_M1          (50,53)
print $Start_Dt_M2          (50,56)
print $Start_Dt_D1          (50,59)
print $Start_Dt_D2          (50,62)
print $End_Dt_Y1            (50,71)
print $End_Dt_Y2            (50,74)
print $End_Dt_M1            (50,77)
print $End_Dt_M2            (50,80)
print $End_Dt_D1            (50,83)
print $End_Dt_D2            (50,86)
print $Comp_Descr           (53,3)
print $Instructor_Name      (58,3)

print $Emp_Rep_Name         (72,7,23)
print $Rep_Name             (72,50,25)
end-procedure Print-Program-Detail


begin-procedure Print-Course-Detail
print $Course_Descr         (45,3)
print #Course_Hrs           (50,07)
print $Course_Start_Dt_Y1   (50,47)
print $Course_Start_Dt_Y2   (50,50)
print $Course_Start_Dt_M1   (50,53)
print $Course_Start_Dt_M2   (50,56)
print $Course_Start_Dt_D1   (50,59)
print $Course_Start_Dt_D2   (50,62)
print $Course_End_Dt_Y1     (50,71)
print $Course_End_Dt_Y2     (50,74)
print $Course_End_Dt_M1     (50,77)
print $Course_End_Dt_M2     (50,80)
print $Course_End_Dt_D1     (50,83)
print $Course_End_Dt_D2     (50,86)
if $Int_Ext = 'E'
   print $Vendor_Name       (53,3)
else
print $Comp_Descr           (53,3)
end-if
print $Instructor_Name      (58,3)

print $Emp_Rep_Name         (72,5,23)
print $Rep_Name             (72,42,25)
end-procedure Print-Course-Detail


begin-procedure Get-Program-Data
begin-select
T.DESCR
  let $Prog_Desc = &T.DESCR
FROM PS_TRN_PROGRM_TBL T
WHERE T.TRN_PROGRAM = $Train_Prog
and T.COURSE_STATUS = 'A'
end-select
end-procedure Get-Program-Data


begin-procedure Get-Empl-RFC
  move '' to $Empl_RFC
begin-select
N.NATIONAL_ID
  let $Empl_RFC    = rtrim(&N.NATIONAL_ID,' ')
  let $Empl_RFC_S  = substr($Empl_RFC,1,13)
  let $Empl_RFC_1  = substr($Empl_RFC_S,1,1)
  let $Empl_RFC_2  = substr($Empl_RFC_S,2,1)
  let $Empl_RFC_3  = substr($Empl_RFC_S,3,1)
  let $Empl_RFC_4  = substr($Empl_RFC_S,4,1)
  let $Empl_RFC_5  = substr($Empl_RFC_S,5,1)
  let $Empl_RFC_6  = substr($Empl_RFC_S,6,1)
  let $Empl_RFC_7  = substr($Empl_RFC_S,7,1)
  let $Empl_RFC_8  = substr($Empl_RFC_S,8,1)
  let $Empl_RFC_9  = substr($Empl_RFC_S,9,1)
  let $Empl_RFC_10 = substr($Empl_RFC_S,10,1)
  let $Empl_RFC_11 = substr($Empl_RFC_S,11,1)
  let $Empl_RFC_12 = substr($Empl_RFC_S,12,1)
  let $Empl_RFC_13 = substr($Empl_RFC_S,13,1)
FROM PS_PERS_NID N
WHERE N.EMPLID = $Emplid
AND N.COUNTRY = 'MEX'
AND N.NATIONAL_ID_TYPE = 'RFC'
end-select
end-procedure Get-Empl-RFC


begin-procedure Get-Empl-JobCode
begin-select
JC.DESCR
  let $JobCode_Descr = &JC.DESCR
FROM PS_JOBCODE_TBL JC
WHERE JC.JOBCODE = $JobCode
AND JC.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOBCODE_TBL
        WHERE JOBCODE = $JobCode
        AND EFFDT <= $AsOfToday)
end-select
end-procedure Get-Empl-JobCode


begin-procedure Get-Courses
!show '* Get-Courses *'
begin-select
STPS.COURSE
STPS.HRS_UNITS
STPS.COURSE_START_DT
STPS.COURSE_END_DT
STPS.DESCR
STPS.INSTRUCTOR_ID
  let $Course_Descr    = &STPS.DESCR
  let #Course_Hrs      = &STPS.HRS_UNITS
  let $Instr_Id        = &STPS.INSTRUCTOR_ID
  let $Course_Start_Dt = &STPS.COURSE_START_DT
  let $Course_End_Dt   = &STPS.COURSE_END_DT
  
  !show 'Dates: ' $Course_Start_Dt ' ' $Course_End_Dt
  do Convert-To-Dtu-Date($Course_Start_Dt,$Course_Start_Dt)
  do Convert-To-Dtu-Date($Course_End_Dt,$Course_End_Dt)

  let $Course_Start_Dt_Y1 = substr($Course_Start_Dt,3,1)
  let $Course_Start_Dt_Y2 = substr($Course_Start_Dt,4,1)
  let $Course_Start_Dt_M1 = substr($Course_Start_Dt,6,1)
  let $Course_Start_Dt_M2 = substr($Course_Start_Dt,7,1)
  let $Course_Start_Dt_D1 = substr($Course_Start_Dt,9,1)
  let $Course_Start_Dt_D2 = substr($Course_Start_Dt,10,1)

  let $Course_End_Dt_Y1   = substr($Course_End_Dt,3,1)
  let $Course_End_Dt_Y2   = substr($Course_End_Dt,4,1)
  let $Course_End_Dt_M1   = substr($Course_End_Dt,6,1)
  let $Course_End_Dt_M2   = substr($Course_End_Dt,7,1)
  let $Course_End_Dt_D1   = substr($Course_End_Dt,9,1)
  let $Course_End_Dt_D2   = substr($Course_End_Dt,10,1)
  do Get-Training-Vendor
  do Get-Vendor-Name
  do Get-Instructor-Name
  do Print-Format
  do Print-Course-Detail
  new-page

FROM PS_RUN_STPS2_MEX STPS
WHERE STPS.OPRID       = $Prcs_OprID
  AND STPS.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-select
end-procedure Get-Courses


begin-procedure Get-Instructor-Name
begin-select
PD.NAME
PD.LAST_NAME
PD.LAST_NAME_SRCH
PD.SECOND_LAST_NAME
PD.SECOND_LAST_SRCH
PD.FIRST_NAME
PD.FIRST_NAME_SRCH
  let $Instructor_Name = rtrim(&PD.LAST_NAME_SRCH,' ') || ' ' || rtrim(&PD.SECOND_LAST_SRCH,' ') || ' ' || rtrim(&PD.FIRST_NAME_SRCH,' ')

FROM PS_NAMES PD
WHERE PD.EMPLID = $Instr_Id
and   PD.NAME_TYPE = 'PRI'
and   PD.EFFDT     = (SELECT MAX(EFFDT) FROM PS_NAMES
                     WHERE EMPLID = PD.EMPLID
                     AND   NAME_TYPE = PD.NAME_TYPE
                     AND   EFFDT <= $AsOfToday)
end-select
end-procedure Get-Instructor-Name


begin-procedure Get-Training-Vendor
begin-select
I.INTERNAL_EXTERNAL
I.VENDOR
  let $Int_Ext = rtrim(&I.INTERNAL_EXTERNAL,' ')
  let $Course_Vendor = &I.VENDOR
FROM PS_TRN_INSTRCT_TBL I
WHERE I.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_TRN_INSTRCT_TBL A_ED
                     WHERE I.INSTRUCTOR_ID = A_ED.INSTRUCTOR_ID
                     AND A_ED.EFF_STATUS = 'A'
                     AND A_ED.EFFDT <=$AsOfToday)
AND I.INSTRUCTOR_ID = $Instr_Id
end-select
end-procedure Get-Training-Vendor


begin-procedure Get-Vendor-Name
begin-select
V.DESCR
  let $Vendor_Name = &V.DESCR
FROM PS_TRN_VENDOR_TBL V
WHERE V.VENDOR = $Course_Vendor
end-select
end-procedure Get-Vendor-Name

!***************************************************************
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#include 'datemath.sqc'  !Date math routines
#include 'askcalyr.sqc'  !Ask-Calendar-Year
