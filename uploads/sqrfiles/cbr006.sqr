!**************************************
! CBR006: COBRA Enrollment Report
!**************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2007/02/23:05:00:35                                 
!       $Release:  HR9                                                 
!    $Resolution:  689716                                              
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'   !Set environment
#Include 'cbrdefs.sqc'  !COBRA variables
#Include 'usarpt.sqc'    !Variables specific to USA

Begin-Setup
  #Include 'ptpsl177.sqc'
End-Setup

!******************************
Begin-Procedure Init-Variables
!******************************

  let #col1  = 1                 !Emplid
  let #col2  = 13                !Emp Rcd#
  let #col3  = 20                !Event ID
  let #col4  = 27                !Dep ID
  let #col5  = 31                !Employee Name
  let #col6  = 63                !Plan Type
  let #col7  = 75                !Coverage Election
  let #col8  = 82                !Option Code
  let #col9  = 90                !Coverage Code
  let #col10 = 102               !Coverage Elect Date
  let #col11 = 114               !Coverage Begin Date
  let #col12 = 126               !Coverage End Date
  let #break_total = 0           !Break total
  let #total_PQB = 0             !Grand total
  let $AsOfDate = $ThruDate      !As of Date

End-Procedure

!************
Begin-Program
!************

  do Init-Report
  display 'Report Begin at: ' noline
  do Display-time
  do Process-Main
  display 'Report Ended at: ' noline
  do Display-Time
  do StdAPI-Term

End-Program

!******************************
Begin-Procedure Init-Report
!******************************

  do Init-DateTime
  do Init-Number
  do Init-Variables
  move 'CBR006' to $ReportID
  move 'COBRA Enrollment Report' to $ReportTitle
  display $ReportTitle

  do StdAPI-Init

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-Values
  end-if

  !Note: This cannot be in a Begin-Setup section...
  #Include 'ldplntyp.sqc' !Load-Lookup Table with Plan Types

End-Procedure

!****************
Begin-Heading 10
!****************

#Include 'stdhdg01.sqc'

  if $BenPgm <> $PriorBenPgm
    move $BenPgm to $PriorBenPgm
  end-if

  print 'From Date:'                     (3,1)
  print $FromDate                        (+0,#col2)
  print 'Thru Date:'                     (+1,1)
  print $ThruDate                        (+0,#col2)
  print 'Benefit Program:'               (+1,1)
  print $BenPgm                          (+0,+4)

  print 'COBRA'                          (+3,#col3)
  print 'Empl'                           (+1,#col2)
  print 'Event'                          (+0,#col3)
  print 'Dep'                            (+0,#col4)
  print 'Plan'                           (+0,#col6)
  print 'Covrg'                          (+0,#col7)
  print 'Benefit'                        (+0,#col8)
  print 'Coverage'                       (+0,#col10)
  print 'Coverage'                       (+0,#col11)
  print 'Coverage'                       (+0,#col12)

  print 'Employee ID'                    (+1,#col1)
  print 'Rcd#'                           (+0,#col2)
  print 'ID'                             (+0,#col3)
  print 'ID'                             (+0,#col4)
  print 'Participant Name'               (+0,#col5)
  print 'Type'                           (+0,#col6)
  print 'Elect'                          (+0,#col7)
  print 'Plan'                           (+0,#col8)
  print 'Coverage'                       (+0,#col9)
  print 'Elect Date'                     (+0,#col10)
  print 'Begin Date'                     (+0,#col11)
  print 'End Date'                       (+0,#col12)

  print '-'                              (+1,#col1,150) fill


End-Heading


!******************************
Begin-Procedure Ask-Values
!******************************

  do Ask-As-Of-Date
  do Ask-Sort-Parm2

End-Procedure

!******************************
Begin-Procedure Get-Values
!******************************

  do Select-Parameters
  do Get-As-Of-Date
  do Get-Sort-Parm2
  do Get-From-Thru-Date

End-Procedure

Begin-Procedure Process-Main

  Evaluate $SortParm2
  When = '1'
     let $SortParm = 'A.EMPLID ASC, A.EMPL_RCD ASC, A.PLAN_TYPE ASC'
  When = '2'
     let $SortParm = 'A.PLAN_TYPE ASC, A.EMPLID ASC, A.EMPL_RCD ASC'
  When = '3'
     let $SortParm = 'C.NAME_PSFORMAT ASC, A.EMPL_RCD ASC, A.PLAN_TYPE ASC'
  When = '4'
     let $SortParm = 'A.PLAN_TYPE ASC, C.NAME_PSFORMAT ASC, A.EMPL_RCD ASC'
  End-Evaluate

Begin-SELECT

B.BENEFIT_PROGRAM () On-Break Print=Never Level=1 Procedure=Ben-Prog-Change Save=$Prev_Pgm
  move &B.Benefit_Program  to $BenPgm

A.PLAN_TYPE      () On-Break Print=Never After=Plan-Type-Change Save=$Prev_Plan
  let $Plan_Type = &A.Plan_Type
  LOOKUP Plan-Types $Plan_Type $PlanDesc
  print $Plan_Type              (+2,#col6)

A.EMPLID                       (0,#col1)
  let $emplid = &A.EMPLID

C.NAME_PSFORMAT                (0,#col5,30)
A.EMPL_RCD                    (0,#col2)
  let #emplrcd = &A.EMPL_RCD

A.BENEFIT_NBR
  let #ben = &A.BENEFIT_NBR

A.COBRA_EVENT_ID               (0,#col3)
  let #eventid = &A.COBRA_EVENT_ID

  print '00'                   (0,#col4) !00 Designate employee coverage

A.COVERAGE_ELECT               (0,#col7)
A.BENEFIT_PLAN                 (0,#col8)
A.COVRG_CD
  let $CovrgCd = &A.COVRG_CD
  let $CovrgEffdt = &A.COVERAGE_ELECT_DT
  do Get-Covrg-Code-Descr
  print $CovrgDescrShort       (0,#col9)

A.COVERAGE_ELECT_DT
  do Format-Datetime(&A.COVERAGE_ELECT_DT, $Print_Date, {DEFDATE}, '', '')
  print $Print_Date            (0,#col10)


A.EFFDT
  let $effdt = &A.EFFDT

A.COVERAGE_BEGIN_DT
  do Format-Datetime(&A.COVERAGE_BEGIN_DT, $Print_Date, {DEFDATE}, '', '')
  print $Print_Date            (0,#col11)

  let $BeginDate = &A.COVERAGE_BEGIN_DT
  do Get-Covrg-End-Date
  do Format-Datetime($EndDate, $Print_Date, {DEFDATE}, '', '')
  print $Print_Date            (0,#col12)

  add 1 to #BenProgTotal
  add 1 to #PlanTypeTotal
  do Get-Health-Dependents

FROM  PS_HEALTH_BENEFIT  A,
      PS_BEN_PROG_PARTIC B,
      PS_PERSON_NAME     C

WHERE A.COVERAGE_ELECT <> 'W'
  AND A.COVERAGE_BEGIN_DT = (SELECT MAX(COVERAGE_BEGIN_DT)
                             FROM  PS_HEALTH_BENEFIT
                             WHERE EMPLID             = A.EMPLID
                               AND COBRA_EVENT_ID     = A.COBRA_EVENT_ID
                               AND EMPL_RCD          = A.EMPL_RCD
                               AND PLAN_TYPE          = A.PLAN_TYPE
                               AND BENEFIT_NBR           = A.BENEFIT_NBR
                               AND COVERAGE_BEGIN_DT <= $ThruDate
                               AND COVERAGE_ELECT = A.COVERAGE_ELECT)
  AND A.COVERAGE_ELECT <> 'T'
  AND A.COBRA_EVENT_ID <> 0
  AND B.EMPLID=A.EMPLID
  AND B.COBRA_EVENT_ID=A.COBRA_EVENT_ID
  AND B.EMPL_RCD=A.EMPL_RCD
  AND B.EFFDT= (SELECT MAX (C.EFFDT)
                FROM PS_BEN_PROG_PARTIC C
                WHERE C.EMPLID=B.EMPLID
                  AND C.EMPL_RCD=B.EMPL_RCD
                  AND C.COBRA_EVENT_ID=B.COBRA_EVENT_ID
                  AND C.EFFDT <= A.EFFDT)
  AND C.EMPLID = A.EMPLID
 AND NOT EXISTS
        (SELECT 'X'
        FROM PS_HEALTH_BENEFIT D
        WHERE D.EMPLID=A.EMPLID
         AND D.EMPL_RCD=A.EMPL_RCD
         AND D.COBRA_EVENT_ID=A.COBRA_EVENT_ID
         AND D.PLAN_TYPE=A.PLAN_TYPE
         AND D.BENEFIT_NBR=A.BENEFIT_NBR
         AND D.EFFDT>=A.EFFDT
         AND D.EFFDT <= $FromDate
         AND COVERAGE_ELECT = 'T')
ORDER BY B.BENEFIT_PROGRAM ASC,
[$SortParm]

End-Select

  move 'Y' to $End
  do Ben-Prog-Change

End-Procedure

!**********************************
Begin-Procedure Get-Covrg-End-Date
!**********************************

let $EndDate = ''
Begin-Select
CE.COVERAGE_BEGIN_DT

  do Convert-To-DTU-Date(&CE.COVERAGE_BEGIN_DT, $work_dt)
  do dtu-subtract-days($work_dt, 1, $EndDate)
  do Convert-From-DTU-Date($EndDate, $EndDate)

FROM PS_HEALTH_BENEFIT CE
WHERE CE.EMPLID = $emplid
  AND CE.EMPL_RCD = #emplrcd
  AND CE.BENEFIT_NBR = #ben
  AND CE.PLAN_TYPE = $Plan_Type
  AND CE.COBRA_EVENT_ID = #eventid
  AND CE.COVERAGE_ELECT = 'T'
  AND CE.COVERAGE_BEGIN_DT = (SELECT MIN(Z.COVERAGE_BEGIN_DT)
                            FROM PS_HEALTH_BENEFIT Z
                            WHERE Z.EMPLID = $emplid
                              AND Z.EMPL_RCD = #emplrcd
                              AND Z.PLAN_TYPE = $Plan_Type
                              AND Z.BENEFIT_NBR = #ben
                              AND Z.COBRA_EVENT_ID = #eventid
                              AND Z.COVERAGE_ELECT = 'T'
                              AND Z.COVERAGE_BEGIN_DT >= $BeginDate)
End-Select

End-Procedure

!************************************
Begin-Procedure Get-Health-Dependents
!************************************

Begin-Select
HD.DEPENDENT_BENEF            (+1,#col4)
DB.NAME                       (+0,#col5)

  add 1 to #PlanTypeTotal
  add 1 to #BenProgTotal

FROM PS_HEALTH_DEPENDNT HD,
     PS_DEP_BEN_NAME DB
WHERE HD.EMPLID = $emplid
  AND HD.EMPL_RCD = #emplrcd
  AND HD.BENEFIT_NBR = #ben
  AND HD.DEPENDENT_BENEF <> '00'
  AND HD.COBRA_EVENT_ID = #eventid
  AND HD.EFFDT = $effdt
  AND HD.PLAN_TYPE = $Plan_Type
  AND DB.EMPLID = HD.EMPLID
  AND DB.DEPENDENT_BENEF = HD.DEPENDENT_BENEF
  AND DB.EFFDT = (SELECT MAX(DB1.EFFDT)
                  FROM PS_DEP_BEN_NAME DB1
                  WHERE DB1.EMPLID = DB.EMPLID
                  AND DB1.DEPENDENT_BENEF = DB.DEPENDENT_BENEF
                  AND DB1.EFFDT <= $ASOFTODAY)
End-Select

End-Procedure

!*******************************
Begin-Procedure Plan-Type-Change
!*******************************

  if $SortParm2 = '2' or $SortParm2 = '4'
     print 'Plan Type ' (+2,5)
     let $Plan_Type = $Prev_Plan
     LOOKUP PLAN-TYPES $Plan_Type $PlanDesc
     print $PlanDesc    (+0,+1)
     print 'Total: '    (+0,+1)
     do Format-Number(#PlanTypeTotal, $out, '99,999')
     print $out         (0,+1)
  end-if

  let #PlanTypeTotal = 0

End-Procedure

!*******************************
Begin-Procedure Ben-Prog-Change
!*******************************

  print 'Benefit Program ' (+2,5)
  print $Prev_Pgm          (+0,+1)
  print 'Total: '          (+0,+1)
  do Format-Number(#BenProgTotal, $out, '99,999')
  print $out               (0,+1)

  add #BenProgTotal to #GrandTotal
  move 0 to #BenProgTotal

  if (#level = 0)
    new-page
  end-if

End-Procedure

!*************************************
Begin-Procedure Display-Time
!*************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

! *----------------------------------------------------------------------*

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Format-DateTime procedures
#Include 'datemath.sqc'  !Date Arithmetic
#Include 'number.sqc'    !Format-Number procedure
#Include 'askaod.sqc'    !Get-As-of-Date
#Include 'cbaskval.sqc'  !COBRA Ask values
#Include 'cbgetval.sqc'  !COBRA Get values
#Include 'cbrncntl.sqc'  !COBRA Run Control
#Include 'getcvgcd.sqc'  !Get-Covrg-Code-Descr procedure

#Include 'stdapi.sqc'    !Update Process API

! *------------------------* End Of Report *-----------------------------*
