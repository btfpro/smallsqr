!********************************
!  PAY005:  Cost Center Report  *
!********************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:04:25:29                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !Printer and page-size initialization

begin-report
  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'PAY005' to $ReportID

  do Init-DateTime
  do Init-Number
  do Stdapi-Init

  do Get-Report-Language   ! Procedure that decides the report language
                           ! and then calls 'Report-Translation' procedure
                           ! that reads the language dep. text.
  move $Pay005_ReportTitle to $ReportTitle

  do Array-Initialization
  do Payroll-Report-Initialization
end-procedure

! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation
! Read from PAY005  and PAY1 program ids
   do Init_Report_Translation($ReportID,$Language_Cd)
   do Append_Report_Translation('PAY1')
   do Append_Report_Translation('HR')

   do Get_Field_Information ('PAY005', 'REPORT_TITLE', $Pay005_ReportTitle, #dummy_width)
   do Get_Field_Information ('PAY005', 'CSTCEN_TOT',   $Pay005_CstCen_Tot,  #dummy_width)
   do Get_Field_Information ('PAY005', 'REG',          $Pay005_Reg,         #dummy_width)
   do Get_Field_Information ('PAY005', 'OVR',          $Pay005_Ovr,         #dummy_width)
   do Get_Field_Information ('PAY005', 'OTH',          $Pay005_Oth,         #dummy_width)
   do Get_Field_Information ('PAY005', 'TOT_ERN1',     $Pay005_Tot_Ern1,    #dummy_width)
   do Get_Field_Information ('PAY005', 'EMP_NM',       $Pay005_Emp_Nm,      #dummy_width)
   do Get_Field_Information ('PAY005', 'EMP_ID',       $Pay005_Emp_Id,      #dummy_width)
   do Get_Field_Information ('PAY005', 'HOURS',        $Pay005_Hours,       #dummy_width)
   do Get_Field_Information ('PAY005', 'ERNS',         $Pay005_Erns,        #dummy_width)
   do Get_Field_Information ('PAY005', 'TYPE',         $Pay005_Type,        #dummy_width)
   do Get_Field_Information ('PAY005', 'TOT_ERN2',     $Pay005_Tot_Ern2,    #dummy_width)

   do Get_Field_Information ('PAY1',   'GR_TOT',       $Pay1_Gr_Tot,        #dummy_width)
   do Get_Field_Information ('PAY1',   'CMP_TOT',      $Pay1_Cmp_Tot,       #dummy_width)
   do Get_Field_Information ('PAY1',   'PAYPER_TOT',   $Pay1_PayPer_Tot,    #dummy_width)

   do Get_Field_Information ('HR',     'BUS_UNIT1X',   $HR_Bus_Unit1x,      #dummy_width)
   do Get_Field_Information ('HR',     'BUS_UNIT2',    $HR_Bus_Unit2,       #dummy_width)

end-procedure

begin-procedure Array-Initialization
  create-array name=Totals size=5 -
    field=TotalName:char field=total:number:7 field=startCol:number:7

  put $Pay1_Gr_Tot       into Totals(1) TotalName
  put $Pay1_Cmp_Tot      into Totals(2) TotalName
  put $Pay1_PayPer_Tot   into Totals(3) TotalName
  put $Pay005_CstCen_Tot into Totals(4) TotalName
  put  36 into Totals(0) startCol(0)
  put  50 into Totals(0) startCol(1)
  put  59 into Totals(0) startCol(2)
  put  70 into Totals(0) startCol(3)
  put  83 into Totals(0) startCol(4)
  put  97 into Totals(0) startCol(5)
  put 114 into Totals(0) startCol(6)
end-procedure

begin-heading 8
  if $DeptID <> $priorDeptID
    do Get-Department-Name
    move $DeptID to $priorDeptID
  end-if

  #Include 'stdhtrpi.sqc'
  #Include 'stdhtr07.sqc'
  print $Hr_Bus_Unit1x   (+2,25)
  print $Pay005_Reg      (0,43)
  print $Pay005_Ovr      (0,66)
  print $Pay005_Oth      (0,86)
  print $Pay005_Tot_Ern1 (0,120)
  print $Pay005_Emp_Nm   (+1,1)
  print $Hr_Bus_Unit2    (0,25)
  print $Pay005_Emp_Id   (0,32)
  print $Pay005_Hours    (0,45)
  print $Pay005_Erns     (0,56)
  print $Pay005_Hours    (0,68)
  print $Pay005_Erns     (0,76)
  print $Pay005_Type     (0,86)
  print $Pay005_Hours    (0,92)
  print $Pay005_Erns     (0,103)
  print $Pay005_Tot_Ern2 (0,120)

end-heading

begin-procedure Report
begin-SELECT
A.COMPANY    () on-break print=never level=1 procedure=Company-Change
A.PAY_END_DT () on-break print=never level=2 procedure=PayEndDate-Change
C.DEPTID     () on-break print=never level=3 procedure=Department-Change
B.EMPLID     (+1,32) on-break        level=4 procedure=Employee-Change

B.NAME       () on-break print=never level=4
   let $out = Rtrim(&B.Name, ' ')
   print $out (0,1,30) on-break level=4
B.BUSINESS_UNIT                        (0,25)  on-break level=4
C.REG_HRS+C.REG_EARN_HRS     &Hours    (0,43)  EDIT       B999.99MI
C.REG_EARNS+C.REG_HRLY_EARNS &Earnings (0,51)  EDIT B9,999,999.99MI
C.OT_HRS                               (0,66)  EDIT       B999.99MI
C.OT_HRLY_EARNS                        (0,74)  EDIT    B99,999.99MI
C.OFF_CYCLE,C.PAGE_NUM,C.LINE_NUM,C.SEPCHK,C.ADDL_NBR,A.PAYGROUP

  move &A.Company    to $Company
  let $DeptID = Rtrim(&C.DeptID, ' ')
  let $BU = &B.Business_Unit
  move &A.Pay_End_Dt to $PayEndDate
  move &A.Pay_End_Dt to $AsOfDate     !for included procedures
  add &Earnings        to #TotalEarnings
  add &C.OT_Hrly_Earns to #TotalEarnings

  ARRAY-ADD &Hours &Earnings &C.OT_Hrs &C.OT_Hrly_Earns -
    to Totals(4) total(0) total(1) total(2) total(3)

  move 'N' to $OtherRecs
  POSITION (-1)  !to ensure "Others" start on first line
  do Get-Other-Hours-Earnings

  if $OtherRecs = 'N'  !no "Others" for this employee's earnings record
    POSITION (+1)
  end-if

FROM  PS_PAY_CALENDAR A,PS_PAY_CHECK B,PS_PAY_EARNINGS C
WHERE [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = B.COMPANY
  AND B.PAYGROUP   = A.PAYGROUP
  AND B.PAY_END_DT = A.PAY_END_DT
  AND C.COMPANY    = A.COMPANY
  AND C.PAYGROUP   = A.PAYGROUP
  AND C.PAY_END_DT = A.PAY_END_DT
  AND C.OFF_CYCLE  = B.OFF_CYCLE
  AND C.PAGE_NUM      = B.PAGE_NUM
  AND C.LINE_NUM      = B.LINE_NUM
  AND C.SEPCHK     = B.SEPCHK
  AND C.OK_TO_PAY  = 'Y'
  AND C.SINGLE_CHECK_USE IN ('C', 'N')
  AND PAY_LINE_STATUS IN ('C','F','V')
ORDER BY A.COMPANY, A.PAY_END_DT, C.DEPTID, B.NAME, B.EMPLID,
         C.PAGE_NUM, C.LINE_NUM, C.SEPCHK, C.ADDL_NBR
end-SELECT
  move 1 to #changeLevel
  move 'Y' to $End
  do Print-Totals
end-procedure

begin-procedure Get-Other-Hours-Earnings
begin-SELECT
ERNCD     (+1,86)
OTH_HRS   (0,90)  EDIT       B999.99MI
OTH_EARNS (0,98)  EDIT 99,999,999.99MI
  add &Oth_Earns to #TotalEarnings
  ARRAY-ADD &Oth_Hrs &Oth_Earns to TOTALS(4) TOTAL(4) TOTAL(5)
  move 'Y' to $OtherRecs
FROM  PS_PAY_OTH_EARNS
WHERE COMPANY    = $Company
  AND PAYGROUP   = &A.PayGroup
  AND PAY_END_DT = $PayEndDate
  AND OFF_CYCLE  = &C.Off_Cycle
  AND PAGE_NUM      = &C.PAGE_NUM
  AND LINE_NUM      = &C.LINE_NUM
  AND SEPCHK     = &C.SepChk
  AND ADDL_NBR      = &C.ADDL_NBR
ORDER BY ERNCD
end-SELECT
end-procedure

begin-procedure Employee-Change
  do Format-Number(#TotalEarnings, $out, '99,999,999.99mi')
  print $out (0,115)
  array-add #TotalEarnings to Totals(4) total(6)
  move 0 to #TotalEarnings
  position (+1)
end-procedure

begin-procedure Company-Change
  move 2 to #changeLevel
  do Print-Totals
end-procedure

begin-procedure PayEndDate-Change
  move 3 to #changeLevel
  do Print-Totals
end-procedure

begin-procedure Department-Change
  move 4 to #changeLevel
  do Print-Totals
end-procedure

begin-procedure Print-Totals
  do Employee-Change
  move 4 to #totalRow
  while #totalRow >= #changeLevel
    if #current-line > 55  !don't split a total series across pages
      new-page
    end-if
    move #totalRow to #rollRow
    subtract 1 from #rollRow
    get $TotalName from Totals(#totalRow) TotalName
    print $TotalName (+3,19)
    position (+1)
    move 1 to #posn
    move 0 to #i
    while #i <= 6
      get #total from Totals(#totalRow) total(#i)
      get #startCol from Totals(0) startCol(#i)
      multiply -1 times #posn
      if #i = 6  !print total earnings on the earnings line
        move 0 to #posn
      end-if
      do Format-Number(#total, $out, '999,999,999.99mi')
      print $out (+#posn,#startCol)
      array-add #total to Totals(#rollRow) total(#i)
      put 0 into Totals(#totalRow) total(#i)
      add 1 to #i
    end-while
    subtract 1 from #totalRow
  end-while
  if $End = 'Y'
    do Reset
  end-if
  new-page
end-procedure

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'payinit.sqc'   !Report Initialization and Timing
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
