!***********************************************************************
!  puhci01: Pre-Upgrade Audits: Relationships Validation.             *
!                                                                      *
!            Provide the Customer with a Validation report that shows  *
!            invalid relationships amongst these tables prior to the   *
!            conversion of data.                                       *
!            These must be corrected before running the                *
!            data conversion or they will remain orphaned.             *
!                                                                      *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                $Date:  2006/06/19:08:11:39                           !
!             $Release:  HR9                                           !
!            $Revision:  101                                           !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   ! Printer and page-size initialization

!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   ! Printer and page-size initialization

!***********************************************************************

begin-program
        do Init-DateTime
        do Get-Current-DateTime
        do Init-Report
        display 'Report began at: ' NoLine
        do Display-Time
        do Process-Main
        do Reset
        do Stdapi-Term
        display 'Report ended at: ' NoLine
        do Display-Time
end-program

!***********************************************************************
begin-heading 9
!***********************************************************************
#include 'stdhdg01.sqc'

if $processing = '1'
  print '1. All EMPLIDs in PERSON which are not in PERS_DATA_EFFDT' (+2,1,0)
  print 'EmplID'                              (+2,1,11) Underline
  print ' '                                   (+1,1,1)
end-if

if $processing = '2'
  print '2. All EMPLIDs in PERSON which are not in EMPLOYMENT'        (+2,1,0)
  print 'EmplID'                                 (+2,1,11) Underline
  print ' '                                      (+1,1,1)
end-if

if $processing = '3'
  print '3. All EMPLIDs in PERS_DATA_EFFDT which are not in PERSON'     (+2,1,0)
  print 'EmplID'                              (+2,1,11) Underline
end-if

if $processing = '4'
  print '4. All EMPLIDs in EMPLOYMENT which are not in PERSON'     (+2,1,0)
  print 'EmplID'                              (+2,1,11) Underline
  print ' '                                   (+1,1,1)
end-if

if $processing = '5'
  print '5. All EMPLID/EMPL_RCDS in EMPLOYMENT which are not in JOB'        (+2,1,0)
  print 'EmplID'                              (+2,1,11) Underline
  print 'Empl Rcd #'                          (0,+2,10)  Underline
  print ' '                                   (+1,1,1)
end-if

if $processing = '6'
  print '6. All EMPLID/EMPL_RCDS in JOB which are not in EMPLOYMENT'        (+2,1,0)
  print 'EmplID'                              (+2,1,11) Underline
  print 'Empl Rcd #'                          (0,+2,10) Underline
  print ' '                                   (+1,1,1)
end-if

if $processing = '7'
  print '7. All EMPLIDs with PER_TYPE = ‘P’in PERS_DATA_EFFDT which are not in PA_RT_EMP_SETUP as EMPLID or EMPLID_PAYEE'        (+2,1,0)
  print 'EmplID'                              (+2,1,11) Underline
  print ' '                                   (+1,1,1)
end-if


if $processing = '8'
  print '8. All EMPLID_PAYEE /EMPL_RCD_PAYEE in PA_RT_EMP_SETUP which are not in EMPLOYMENT'  (+2,1,0)
  print 'EmplId'                              (+2,1,11) Underline
  print 'Empl Rcd #'                          (0,+2,10) Underline
  print 'Payee EmplID'                        (0,+2,12) Underline
  print 'Rcd # Payee'                         (0,+2,11) Underline
  print ' '                                   (+1,1,1)
end-if


if $processing = '9'
  print '9. All EMPLID/EMPL_RCD in PA_RT_EMP_SETUP which are not in EMPLOYMENT'     (+2,1,0)
  print 'EmplId'                              (+2,1,11) Underline
  print 'Empl Rcd #'                          (0,+2,10) Underline
  print 'Payee EmplID'                        (0,+2,12) Underline
  print 'Rcd # Payee'                         (0,+2,11) Underline
  print ' '                                   (+1,1,1)
end-if


if $processing = '10'
  print '10. All EMPLID/EMPL_RCDs flagged as HOST records that are not in the Global Assignment table - PS_ASGN_HOME_HOST' (+2,1,0)
  print ' '                                   (+1,1,1)
  print 'Either create the Assignment and Assignment Homehost records or change the HOME_HOST_CLASS to M' (+1,1,0)
  print 'EmplId'                              (+2,1,11) Underline
  print 'Empl Rcd #'                          (0,+2,10) Underline
  print 'Home/Host'                           (0,+2,9)  Underline
  print 'Per Status'                          (0,+2,10) Underline
  print 'Person Type'                         (0,+2,11) Underline
  print ' '                                   (+1,1,1)
end-if


if $processing = '11'
  print '11. All EMPLID/EMPL_RCDs flagged as HOME records that are not in the Global Assignment PS_ASSIGNMENT' (+2,1,0)
  print ' '                                   (+1,1,1)
  print 'Either create the Assignment and Assignment Homehost records or change the HOME_HOST_CLASS to M' (+1,1,0)

  print 'EmplId'                              (+2,1,11) Underline
  print 'Empl Rcd #'                          (0,+2,10) Underline
  print 'Home/Host'                           (0,+2,9)  Underline
  print 'Per Status'                          (0,+2,10) Underline
  print 'Person Type'                         (0,+2,11) Underline
  print ' '                                   (+1,1,1)
end-if


if $processing = '12'
  print '12. All EMPLID/EMPL_RCDs flagged as HOST records that were created with HIRE not ASG' (+2,1,0)
  print ' '                                   (+1,1,1)
  print 'Change the HOME_HOST_CLASS to M'     (+1,1,0)

  print 'EmplId'                              (+2,1,11) Underline
  print 'Empl Rcd #'                          (0,+2,10) Underline
  print 'Home/Host'                           (0,+2,9)  Underline
  print 'Action'                              (0,+2,6) Underline
  print ' '                                   (+1,1,1)
end-if
end-heading



!***********************************************************************
!  Function:     Init Report
!  Description:  Prompt for run-time parameters
!***********************************************************************

begin-procedure Init-Report

  move 'PUHCI01' to $ReportID
  move 'Validation Report For Release 9.0' to $ReportTitle
  display $ReportTitle

  do Stdapi-Init

  if $prcs_process_instance = ''
    !No Prompt
  else
    do Select-Parameters
  end-if

end-procedure Init-Report

begin-procedure Get-Values
  !No Prompts
end-procedure Get-Values

!***********************************************************************
!  Function:     Process-Main
!  Description:  This is the main report procedure.  Calls select
!                routines for data in Person records
!***********************************************************************

begin-procedure Process-Main
     Do Select-Record1
     Do Select-Record2
     Do Select-Record3
     Do Select-Record4
     Do Select-Record5
     Do Select-Record6
    ! Do Select-Record7
     Do Select-Record8
     Do Select-Record9
     Do Select-Record10
     Do Select-Record11
   !  Do Select-Record12
end-procedure Process-Main


!******************************************************************************
!  Procedure:    Select-Record1
!  Description:  Selects all EMPLIDs in PERSON which are not in PERS_DATA_EFFDT
!******************************************************************************
begin-procedure Select-Record1
!=====================================================!
  Let $processing = '1'
  let #COUNTER = 0
!=====================================================!
begin-SELECT ON-ERROR=SQL-Error
A.EMPLID                              (+1,1)
 let #COUNTER = #COUNTER + 1
from PS_PERSON  A
where A.EMPLID not in 
      (Select A1.EMPLID 
       from PS_PERS_DATA_EFFDT A1)
end-SELECT

 If #Counter > 0
  print 'This report shows rows in the record PERSON that are not in the Record PERSONAL_DATA'      (+2,1)
  print 'These must be corrected before running the data conversion or they will remain orphaned.' (+1,1)
 end-if

 Do Print-Count
end-procedure Select-Record1


!******************************************************************************
!  Procedure:    Select-Record2
!  Description:  Selects all EMPLIDs in PERSON which are not in EMPLOYMENT
!******************************************************************************
begin-procedure Select-Record2
!=====================================================!
  Let $processing = '2'
  let #COUNTER = 0
!=====================================================!
begin-SELECT ON-ERROR=SQL-Error
B.EMPLID                              (+1,1)
 let #COUNTER = #COUNTER + 1
from PS_PERSON  B
where B.EMPLID not in 
      (Select B1.EMPLID 
       from PS_EMPLOYMENT B1)
end-SELECT

 If #Counter > 0
  print 'This report shows rows in the record PERSON that are not in the Record EMPLOYMENT'      (+2,1)
  print 'These must be corrected before running the data conversion or they will remain orphaned.' (+1,1)
 end-if

 Do Print-Count
end-procedure Select-Record2



!******************************************************************************
!  Procedure:    Select-Record3
!  Description:  All EMPLIDs in PERS_DATA_EFFDT which are not in PERSON
!******************************************************************************
begin-procedure Select-Record3
!=====================================================!
  Let $processing = '3'
  let #COUNTER = 0
!=====================================================!
begin-SELECT ON-ERROR=SQL-Error
C.EMPLID                              (+1,1)
 let #COUNTER = #COUNTER + 1
from PS_PERS_DATA_EFFDT C
where C.EMPLID not in 
      (Select C1.EMPLID 
       from PS_PERSON C1)
end-SELECT

 If #Counter > 0
  print 'This report shows rows in the record PERS_DATA_EFFDT which are not in PERSON'      (+2,1)
  print 'These must be corrected before running the data conversion or they will remain orphaned.' (+1,1)
 end-if

 Do Print-Count
end-procedure Select-Record3



!******************************************************************************
!  Procedure:    Select-Record4
!  Description:  All EMPLIDs in EMPLOYMENT which are not in PERSON
!******************************************************************************
begin-procedure Select-Record4
!=====================================================!
  Let $processing = '4'
  let #COUNTER = 0
!=====================================================!
begin-SELECT ON-ERROR=SQL-Error
D.EMPLID                              (+1,1)
 let #COUNTER = #COUNTER + 1
from PS_EMPLOYMENT D
where D.EMPLID not in 
      (Select D1.EMPLID 
       from PS_PERSON D1)
end-SELECT

 If #Counter > 0
  print 'This report shows rows in the record EMPLOYMENT which are not in PERSON'      (+2,1)
  print 'These must be corrected before running the data conversion or they will remain orphaned.' (+1,1)
 end-if

 Do Print-Count
end-procedure Select-Record4



!******************************************************************************
!  Procedure:    Select-Record5
!  Description:  All EMPLID/EMPL_RCDS in EMPLOYMENT which are not in JOB
!******************************************************************************
begin-procedure Select-Record5
!=====================================================!
  Let $processing = '5'
  let #COUNTER = 0
!=====================================================!
begin-SELECT ON-ERROR=SQL-Error
E.EMPLID                              (+1,1)
E.EMPL_RCD                            (+2)
 let #COUNTER = #COUNTER + 1
from PS_EMPLOYMENT E
where E.EMPL_RCD not in 
      (Select E1.EMPL_RCD 
       from PS_JOB E1 where E.EMPLID = E1.EMPLID)
end-SELECT

 If #Counter > 0
  print 'This report shows rows in the record EMPLOYMENT which are not in JOB'      (+2,1)
  print 'These must be corrected before running the data conversion or they will remain orphaned.' (+1,1)
 end-if

 Do Print-Count
end-procedure Select-Record5



!******************************************************************************
!  Procedure:    Select-Record6
!  Description:  All EMPLID/EMPL_RCDS in JOB which are not in EMPLOYMENT
!******************************************************************************
begin-procedure Select-Record6
!=====================================================!
  Let $processing = '6'
  let #COUNTER = 0
!=====================================================!
begin-SELECT ON-ERROR=SQL-Error
F.EMPLID                              (+1,1)
F.EMPL_RCD                            (,+2)
 let #COUNTER = #COUNTER + 1
from PS_JOB F
where F.EMPL_RCD not in 
      (Select F1.EMPL_RCD 
       from PS_EMPLOYMENT F1 where F.EMPLID = F1.EMPLID)
end-SELECT

 If #Counter > 0
  print 'This report shows rows in the record JOB which are not in EMPLOYMENT'      (+2,1)
  print 'These must be corrected before running the data conversion or they will remain orphaned.' (+1,1)
 end-if

 Do Print-Count
end-procedure Select-Record6



!******************************************************************************
!  Procedure:    Select-Record7
!  Description:  All EMPLIDs with PER_TYPE = P in PERS_DATA_EFFDT which are 
!                not in PA_RT_EMP_SETUP as EMPLID or EMPLID_PAYEE
!******************************************************************************
begin-procedure Select-Record7
!=====================================================!
  Let $processing = '7'
  let #COUNTER = 0
!=====================================================!
begin-SELECT ON-ERROR=SQL-Error
G.EMPLID                              (+1,1)
 let #COUNTER = #COUNTER + 1
from PS_PERS_DATA_EFFDT G
where G.PER_TYPE = 'P'
and (G.EMPLID not in (select G1.EMPLID from PS_PA_RT_EMP_SETUP G1)
and G.EMPLID not in (select G2.EMPLID_PAYEE from PS_PA_RT_EMP_SETUP G2))
end-SELECT

 If #Counter > 0
  print 'This report shows all EMPLIDs with PER_TYPE = ‘P’ in PERS_DATA_EFFDT which are not in PA_RT_EMP_SETUP as EMPLID or EMPLID_PAYEE'      (+2,1)
  print 'These must be corrected before running the data conversion or they will remain orphaned.' (+1,1)
 end-if

 Do Print-Count
end-procedure Select-Record7



!******************************************************************************
!  Procedure:    Select-Record8
!  Description:  All EMPLID_PAYEE /EMPL_RCD_PAYEE in PA_RT_EMP_SETUP which are not in EMPLOYMENT.
!******************************************************************************
begin-procedure Select-Record8
!=====================================================!
  Let $processing = '8'
  let #COUNTER = 0
!=====================================================!
begin-SELECT ON-ERROR=SQL-Error
H.EMPLID                              (+1,1) 
H.EMPL_RCD                            (0,+2)
H.EMPLID_PAYEE                        (0,+2)
H.EMPL_RCD_PAYEE                      (0,+2)
 let #COUNTER = #COUNTER + 1
from PS_PA_RT_EMP_SETUP H
where H.EMPL_RCD_PAYEE not in 
      (Select H1.EMPL_RCD 
       from PS_EMPLOYMENT H1 where H.EMPLID_PAYEE = H1.EMPLID)
end-SELECT

 If #Counter > 0
  print 'This report shows All EMPLID_PAYEE /EMPL_RCD_PAYEE in PA_RT_EMP_SETUP which are not in EMPLOYMENT.'      (+2,1)
  print 'These must be corrected before running the data conversion or they will remain orphaned.' (+1,1)
 end-if

 Do Print-Count
end-procedure Select-Record8



!******************************************************************************
!  Procedure:    Select-Record9
!  Description:  All EMPLID/EMPL_RCD in PA_RT_EMP_SETUP which are not in EMPLOYMENT
!******************************************************************************
begin-procedure Select-Record9
!=====================================================!
  Let $processing = '9'
  let #COUNTER = 0
!=====================================================!
begin-SELECT ON-ERROR=SQL-Error
I.EMPLID                              (+1,1,11) 
I.EMPL_RCD                            (0,+2,10)
I.EMPLID_PAYEE                        (0,+2,12)
I.EMPL_RCD_PAYEE                      (0,+2,11)
 let #COUNTER = #COUNTER + 1
from PS_PA_RT_EMP_SETUP I
where I.EMPL_RCD not in 
      (Select I1.EMPL_RCD 
       from PS_EMPLOYMENT I1 where I.EMPLID = I1.EMPLID)
end-SELECT

 If #Counter > 0
  print 'This report shows all EMPLID/EMPL_RCD in PA_RT_EMP_SETUP which are not in EMPLOYMENT.'      (+2,1)
  print 'These must be corrected before running the data conversion or they will remain orphaned.' (+1,1)
 end-if

 Do Print-Count
end-procedure Select-Record9



!******************************************************************************
!  Procedure:    Select-Record10
!  Description:  All EMPLID/EMPL_RCDs flagged as HOST records that are not 
!                in the Global Assignment table - PS_ASGN_HOME_HOST'
!******************************************************************************
begin-procedure Select-Record10
!=====================================================!
  Let $processing = '10'
  let #COUNTER = 0
!=====================================================!
begin-SELECT ON-ERROR=SQL-Error
J.EMPLID                              (+1,1,11) 
J.EMPL_RCD                            (0,+2,10)
J.HOME_HOST_CLASS                     (0,+2,9)
J1.PER_STATUS                         (0,+2,10)
J1.PER_TYPE                           (0,+2,11)
 let #COUNTER = #COUNTER + 1
from PS_EMPLOYMENT J, PS_PERSONAL_DT_FST J1
where J.HOME_HOST_CLASS = 'S'
and J.EMPLID = J1.EMPLID
and J.EMPLID not in (select J2.EMPLID from PS_ASGN_HOME_HOST J2)
end-SELECT

 If #Counter > 0
  print 'This report shows all EMPLID/EMPL_RCDs flagged as HOST records that are not in the Global Assignment table - PS_ASGN_HOME_HOST.'      (+2,1)
  print 'Either create the Assignment and Assignment Homehost records or change the HOME_HOST_CLASS to M' (+1,1)
 end-if

 Do Print-Count
end-procedure Select-Record10



!******************************************************************************
!  Procedure:    Select-Record11
!  Description:  All EMPLID/EMPL_RCDs flagged as Host records that are not in the Global Assignment PS_ASSIGNMENT
!******************************************************************************
begin-procedure Select-Record11
!=====================================================!
  Let $processing = '11'
  let #COUNTER = 0
!=====================================================!
begin-SELECT ON-ERROR=SQL-Error
K.EMPLID                              (+1,1,11) 
K.EMPL_RCD                            (0,+2,10)
K.HOME_HOST_CLASS                     (0,+2,9)
K1.PER_STATUS                         (0,+2,10)
K1.PER_TYPE                           (0,+2,11)
 let #COUNTER = #COUNTER + 1
from PS_EMPLOYMENT K, PS_PERSONAL_DT_FST K1
where K.HOME_HOST_CLASS = 'S'
and K.EMPLID = K1.EMPLID
and K.EMPLID not in (select K2.EMPLID from PS_ASSIGNMENT K2)
end-SELECT

 If #Counter > 0
  print 'This report shows all EMPLID/EMPL_RCDs flagged as HOME records that are not in the Global Assignment PS_ASSIGNMENT.'      (+2,1)
  print 'Either create the Assignment and Assignment Homehost records or change the HOME_HOST_CLASS to M' (+1,1)
 end-if

 Do Print-Count
end-procedure Select-Record11



!******************************************************************************
!  Procedure:    Select-Record12
!  Description:  All EMPLID/EMPL_RCDs flagged as HOST records that were created with HIRE not ASG
!******************************************************************************
begin-procedure Select-Record12
!=====================================================!
  Let $processing = '12'
  let #COUNTER = 0
!=====================================================!
begin-SELECT ON-ERROR=SQL-Error
L.EMPLID                              (+1,1,11) 
L.EMPL_RCD                            (0,+2,10)
L.HOME_HOST_CLASS                     (0,+2,9)
L1.ACTION                             (0,+2,6)
 let #COUNTER = #COUNTER + 1
from PS_EMPLOYMENT L, PS_JOB L1
where L.HOME_HOST_CLASS = 'S'
and L.EMPLID = L1.EMPLID
and L.EMPL_RCD = L1.EMPL_RCD
and L1.ACTION <>  'ASG'
and L1.EFFDT = (Select min(L2.EFFDT) from PS_JOB L2
               where L1.EMPLID = L2.EMPLID
                and  L1.EMPL_RCD = L2.EMPL_RCD)
and L1.EFFSEQ = (Select min(L3.EFFSEQ) from PS_JOB L3
              where L1.EMPLID = L3.EMPLID
                and  L1.EMPL_RCD = L3.EMPL_RCD
                and  L1.EFFDT = L3.EFFDT)
end-SELECT

 If #Counter > 0
  print 'This report shows all EMPLID/EMPL_RCDs flagged as HOST records that were created with HIRE not ASG.'      (+2,1)
  print 'Change the HOME_HOST_CLASS to M' (+1,1)
 end-if

 Do Print-Count
end-procedure Select-Record12


!*************************************
Begin-Procedure Display-Time
!*************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

!*************************************
Begin-Procedure Print-Count
!*************************************

 print 'Number of rows selected:  '           (+2,1,26)
 print #COUNTER                               (,+1,)

  new-page


  Show 'Number of rows selected:  '  #COUNTER edit 9999999999
  display ' '

End-Procedure


!***********************************************************************
! SQC Files for called procedures
!***********************************************************************
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'stdapi.sqc'    !Routines to update run status
#include 'prcsapi.sqc'   !Update Process API
#Include 'reset.sqc'     !Reset printer procedure
#include 'hrrnctl1.sqc'  !Get run control parameter values
#Include 'number.sqc'    !Routines to format numbers
