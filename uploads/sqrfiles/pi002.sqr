!***********************************************************************
!  PI002:  Payroll Interface Convert Tab Delimited Files to            *
!  Comma Delimited                                                     *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      
!          $Date:  2006/07/20:02:26:08                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
!                                                                      *
! SourceSafe Information:                                              *
!                                                                      *
! $Header: /HR80/DVLP/BSE/SQR/PI002.SQR 2     11/01/99 5:22p Tdespres $ReportID
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------!
#include 'setenv.sqc'
#include 'setup31.sqc' !Printer and page-size initialization
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting

begin-report
  do Init-Report
  do Get-Run-Cntl
  do Process-Main
  do Stdapi-Term
end-report

begin-procedure Init-Report

  move 'PI002' to $ReportID

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init
  do Get-Report-Language

  move $Pi002_ReportTitle to $ReportTitle
  display ' '
  display $ReportTitle
  display ' '

  let #counter=0

!
! File prefixes and suffix
!
#ifdef NT
#define FILEPREFIX C:\USER\
#define FILESUFFIX
#endif
!
#ifdef MVS
#define FILEPREFIX
#define FILESUFFIX
#endif
!
#ifdef UNIX
#define FILEPREFIX /seqin/
#define FILESUFFIX
#endif
!
#ifdef VMS
#define FILEPREFIX
#define FILESUFFIX
#endif
!
#ifdef OS400
#define FILEPREFIX
#define FILESUFFIX
#endif
!
end-procedure

! This procedure is used to read language-dependent text from the database.

begin-procedure Report-Translation

! Read from PI002 program ids

  do Init_Report_Translation($ReportID,$Language_Cd)

  do Get_Field_Information ('PI002', 'REPORT_TITLE', $Pi002_ReportTitle, #dummy_width)
  do Get_Field_Information ('PI002', 'PI_FILE_ID', $Pi002_PiFileID, #dummy_width)
  do Get_Field_Information ('PI002', 'FILE_NAME', $Pi002_FileName, #dummy_width)
  do Get_Field_Information ('PI002', 'CONVERTED', $Pi002_Converted, #dummy_width)
  do Get_Field_Information ('PI002', 'PI_CONFIG_ID', $Pi002_PiConfigID, #dummy_width)
  do Get_Field_Information ('PI002', 'NO_OF_FILES', $Pi002_NoOfFiles, #dummy_width)

end-procedure

begin-heading 8
  #Include 'stdhdgtr.sqc'

  print $Pi002_PiConfigID       (6,1,13)
  print $pi_config_id           (,16,10)
  print $Pi002_PiFileID         (+2,10,18)
  print $Pi002_FileName         (,30,18)
  print $Pi002_Converted        (,50,10)

end-heading

begin-procedure Get-Run-Cntl

  if $Prcs_Process_Instance = ''
    do Prompt-Params
  else
    do Get-PI-Run-Params

    let $pi_config_id=&RC_PI.PI_CONFIG_ID
    let $pi_process_type=&RC_PI.PI_CONVERT_FLE_TYP
  end-if

end-procedure

begin-procedure Prompt-Params

    input  $pi_config_id  'Enter Config Id'
    let $pi_config_id = upper($pi_config_id)
    input  $pi_process_type  'Enter Process Type'
    let $pi_process_type = upper($pi_process_type)

end-procedure Prompt-Params

begin-procedure Process-Main

  display 'PI Config ID'
  display $pi_config_id
  display 'Process Type'
  display $pi_process_type

begin-SELECT
D.PI_FILE_ID,
C.FILE_NAME

    do Process-File

FROM PS_PI_CONFIG_TBL A, PS_PI_CONFIG_FILE B, PS_FILE_HANDLE_TBL C, PS_PI_DEFN_FILE D
WHERE A.PI_CONFIG_ID=$pi_config_id
 AND B.PI_CONFIG_ID=A.PI_CONFIG_ID
 AND B.EFFDT=A.EFFDT
 AND C.FILE_HANDLE=B.FILE_HANDLE
 AND D.PI_FILE_ID=B.PI_FILE_ID
 AND D.PI_PROCESS_TYPE = $pi_process_type
 AND D.PI_FILE_TYPE = 'T'


end-SELECT

  print $Pi002_NoOfFiles        (+2,1,26)
  print #counter                (,29,5)   edit 9999

end-procedure


begin-procedure Process-File

   move &C.FILE_NAME  to  $FileName
   let $Input_File='{FILEPREFIX}' || $FileName

! Input File
   open $Input_File as 10 for-reading record=6140:vary status=#filestat
   if #filestat != 0
      display ' '
      display '*** Error on File Open Input ***'
      display ' '
      STOP
   end-if

   read 10 into $PeopleSoft_Hdr:24

     if #end-file = 1

        close 10
     else

        print &D.PI_FILE_ID     (+1,10,18)
        print &C.FILE_NAME      (,30,18)
        print 'Converted'       (,50,10)

        add 1 to #counter

        if $PeopleSoft_Hdr <> 'PeopleSoft, Convert Tab'

          do Convert_Tabs
          do Copy_From_Temp
        else
          close 10
          display 'File already converted '
          display $FileName
        end-if

   end-if
end-procedure

begin-procedure Convert_Tabs

   close 10

! Input File
   open $Input_File as 1 for-reading record=6140:vary status=#filestat
   if #filestat != 0
      display ' '
      display '*** Error on File Open Input ***'
      display ' '
      display $Input_File
      STOP
   end-if

! Output File
   open '{FILEPREFIX}PITEMP{FILESUFFIX}' as 2 for-writing record=6140:vary status=#filestat
   if #filestat != 0
      display ' '
      display '*** Error on File Open Output ***'
      display ' '
      STOP
   end-if

! Put the heading to the output file.
   do get-current-datetime
   let $header = 'PeopleSoft, Convert Tab ' || 'Input File= ' || $Input_File || ', ' || $sysdatetime
   write 2 from $header

   do Convert_Tab ($Input_File, $Output_File)
end-procedure

begin-procedure Copy_From_Temp

 let $Input_File='{FILEPREFIX}PITEMP{FILESUFFIX}'
 let $Output_File='{FILEPREFIX}' || $FileName

! Input File
   open $Input_File as 10 for-reading record=6140:vary status=#filestat
   if #filestat != 0
      display $Input_File
      display ' '
      display '*** Error on File Open Input ***'
      display ' '
      STOP
   end-if

! Output File
   open $Output_File as 20 for-writing record=6140:vary status=#filestat
   if #filestat != 0
      display $Output_File
      display ' '
      display '*** Error on File Open Output ***'
      display ' '
      STOP
   end-if

   while 1

     let $input_data=''
     read 10 into $input_data:6140

     if #end-file = 1
        close 10
        close 20
        break
     end-if

     let $output_data = $input_data
     write 20 from $output_data
   end-while

end-procedure

#Include 'convtab.sqc'   !Convert Tab to Comma
#Include 'pirunctl.sqc'  !PI Run Controls
#Include 'reset.sqc'     !Reset printer procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'number.sqc'    !Routines to format numbers
#Include 'sqrtrans.sqc'  !Translate SQR strings to a given language
#Include 'getrplng.sqc'  !Gets the report language
