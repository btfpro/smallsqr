!***********************************************************************
! FGBN001:   FEHB Carrier Interface                                    *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:09:01:37                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!  Modifications:                                                      *
!  1.  Replaced EMPL_RCDN with EMPL_RCD#.                              *
!  2.  Added logic to look up medicare flags from PS_BN_PERSON_EFFDT   *
!      and PS_BN_DEPBEN_EFFDT.  The flags were located on the          *
!      HEALTH_BENEFITS table before but have been split up and added   *
!      to the dependent level as well                                  *
!  3.  Changed some online logic so FEHB_SEQ_NBR will be generated     *
!      in PeopleCode.  There is also some sql here that will check     *
!      fehb_seq_nbr for duplicates                                     *
!***********************************************************************

#include 'setenv.sqc' !Set environment

Begin-Setup
  #Include 'ptpsp125.sqc'
End-Setup

begin-program
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do delete-temp-table
  do Process-Main
  do process-temp-table
  do file-writing
  do StdAPI-Term
  close 90
end-program

!********************************************
begin-procedure Init-Report
!********************************************


  move 'SAMPLE_INTERFACE' to $ReportID
  move 'FEHB Carrier Interface Extract' to $ReportTitle
  display $ReportTitle
  display ' '

  do StdAPI-Init

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-Values
  end-if
  DO GET-WHERE-CLAUSE

  LET $FILENAME = LTRIM(RTRIM($FILENAME,' '),' ')

  LET #I = 0
  LET #J = 0
  CREATE-ARRAY NAME=BENPLANS SIZE=1000 FIELD=BEN_PLAN:CHAR
  CLEAR-ARRAY NAME=BENPLANS
  open $FILENAME as 90 for-writing record = 720

end-procedure


!********************************************
begin-procedure Ask-Values
!********************************************

    input $Agency     'Enter Agency > ' type = char
    input $fromdate   'Enter From Date > '
    input $Thrudate   'Enter Thru Date > '
    input $Healthplan 'Enter Health Plan > '
    input $all_ben_plan 'Enter Y (Select All Plans) or N flag  >'
    input $FILENAME 'Enter File Name >'

    do check-seq-nbr
end-procedure

!********************************************
begin-procedure Get-Values
!********************************************


BEGIN-SELECT
RUN_CNTL_FGBN001.COMPANY
RUN_CNTL_FGBN001.FROMDATE
RUN_CNTL_FGBN001.THRUDATE
RUN_CNTL_FGBN001.FEHB_ALL_BEN_PLAN
RUN_CNTL_FGBN001.FILENAME
    MOVE &RUN_CNTL_FGBN001.COMPANY TO $AGENCY
    MOVE &RUN_CNTL_FGBN001.FROMDATE TO $FROMDATE
    MOVE &RUN_CNTL_FGBN001.THRUDATE TO $THRUDATE
    MOVE &RUN_CNTL_FGBN001.FEHB_ALL_BEN_PLAN TO $ALL_BEN_PLAN
    MOVE &RUN_CNTL_FGBN001.FILENAME TO $FILENAME
    MOVE $AsOfToday TO $ASOFDATE

    IF $ALL_BEN_PLAN = 'N'
       DO GET-BENEFIT-PLANS
    END-IF
    do check-seq-nbr
    do Format-DateTime($AsOfDate, $AsOf_YMD, {DEFYMD}, '', '')
    do Format-DateTime($THRUDATE, $YR_THRUDATE, {DEFCMP}, '', '')
    LET $OPEN_YEAR = SUBSTR($YR_THRUDATE,3,2)
from PS_GVT_RUN_FGBN001 RUN_CNTL_FGBN001
where RUN_CNTL_FGBN001.OPRID = $prcs_oprid
and RUN_CNTL_FGBN001.RUN_CNTL_ID = $prcs_run_cntl_id
END-SELECT
end-procedure

!********************************************
begin-procedure GET-WHERE-CLAUSE
!********************************************

IF $ALL_BEN_PLAN = 'Y'
   MOVE '' TO $WHERE_CLAUSE
ELSE
LET $WHERE_CLAUSE = $WHERE_CLAUSE || ' AND '
LET $WHERE_CLAUSE = $WHERE_CLAUSE || '((BEN.COVERAGE_ELECT = ''T'') '
LET $WHERE_CLAUSE = $WHERE_CLAUSE || 'OR (BEN.COVERAGE_ELECT <> ''T'' AND '
LET $WHERE_CLAUSE = $WHERE_CLAUSE || 'BEN.BENEFIT_PLAN IN ' || $BBHEALTH_PLAN1
LET $WHERE_CLAUSE = $WHERE_CLAUSE || '))'
END-IF

END-PROCEDURE

!********************************************
begin-procedure delete-temp-table
!********************************************
BEGIN-SQL  On-Error=SQL-Error
DELETE FROM PS_GVT_CAR_INTRFC
END-SQL
END-PROCEDURE



!********************************************
begin-procedure check-seq-nbr
!********************************************

LET $HIST_FLAG = 'N'
BEGIN-SELECT
MAX(HST.FEHB_SEQ_NBR) &HST_SEQ_NBR
   MOVE 'Y' TO $HIST_FLAG
   MOVE &HST_SEQ_NBR TO #HST_SEQ_NBR1
   MOVE &HST_SEQ_NBR TO $P_HST_SEQ_NBR
   LET #HST_SEQ_NBR = #HST_SEQ_NBR1 + 1
   LET $HST_SEQ_NBR = EDIT(#HST_SEQ_NBR,'999')
   LET $HST_SEQ_NBR = LTRIM(RTRIM($HST_SEQ_NBR,' '),' ')
   LET $HST_SEQ_NBR = LPAD($HST_SEQ_NBR,3,'0')!
FROM PS_GVT_INT_HIST HST
WHERE HST.ASOFDATE = $ASOFDATE
END-SELECT

IF $HIST_FLAG = 'N'
    MOVE 001 TO $HST_SEQ_NBR
END-IF

END-PROCEDURE


!********************************************
begin-procedure Get-BENEFIT-PLANS
!********************************************

BEGIN-SELECT On-Error=SQL-Error
BB.BENEFIT_PLAN
     MOVE &BB.BENEFIT_PLAN TO $BBHEALTH_PLAN
     LET $BBHEALTH_PLAN1 = $BBHEALTH_PLAN1 || '''' || $BBHEALTH_PLAN || '''' || ','
FROM PS_GVT_CNTL_PLAN BB
WHERE BB.OPRID = $PRCS_OPRID
AND   BB.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
END-SELECT
LET $BBHEALTH_PLAN1 = '(' || RTRIM($BBHEALTH_PLAN1,',') || ')'

END-PROCEDURE




!********************************************
begin-procedure Process-Main
!********************************************


begin-SELECT  On-Error=SQL-Error
BEN.BENEFIT_PLAN () ON-BREAK LEVEL=1 PRINT=NEVER AFTER=BEN-PLAN-CHANGE
P.EMPLID
P.NAME
P.BIRTHDATE
   do Format-DateTime(&P.BIRTHDATE, $BRTH_DT, {DEFCMP}, '', '')
   LET $BRTH_DT = SUBSTR($BRTH_DT,5,2) || SUBSTR($BRTH_DT,7,2) || SUBSTR($BRTH_DT,1,4)
P.ADDRESS1
P.ADDRESS2
P.ADDRESS3
P.CITY
P.STATE
P.POSTAL
P.SEX
P.MAR_STATUS
!Person Model Impacts

BEN.COBRA_EVENT_ID
BEN.BENEFIT_NBR
BEN.COVERAGE_ELECT
BEN.COVERAGE_ELECT_DT
BEN.OTH_INSURANCE_IND
BEN.OTH_INSURANCE_NAME
   do Format-DateTime(&BEN.COVERAGE_ELECT_DT, $C_E_DT, {DEFCMP}, '', '')
   LET $C_E_DT = SUBSTR($C_E_DT,5,2) || SUBSTR($C_E_DT,7,2) || SUBSTR($C_E_DT,1,4)
BEN.PLAN_TYPE
BEN.COVERAGE_BEGIN_DT
   do Format-DateTime(&BEN.COVERAGE_BEGIN_DT, $C_B_DT, {DEFCMP}, '', '')
   LET $C_B_DT = SUBSTR($C_B_DT,5,2) || SUBSTR($C_B_DT,7,2) || SUBSTR($C_B_DT,1,4)
BEN.COVERAGE_END_DT
   do Format-DateTime(&BEN.COVERAGE_END_DT, $C_END_DT, {DEFCMP}, '', '')
   LET $C_END_DT = SUBSTR($C_END_DT,5,2) || SUBSTR($C_END_DT,7,2) || SUBSTR($C_END_DT,1,4)
JB.COMPANY
JB.EFFDT
JB.EMPL_RCD
JB.GVT_SUB_AGENCY
JB.GVT_POI
BEN.EFFDT
NID.NATIONAL_ID
     DO INITIALIZE-VARIABLES
     move &P.EMPLID to $EMPLID
     move &P.NAME to $NAME
     move &P.BIRTHDATE to $BIRTHDATE
     move &P.ADDRESS1 to $ADDRESS1
     move &P.ADDRESS2 to $ADDRESS2
     move &P.ADDRESS3 to $ADDRESS3
     MOVE &BEN.EFFDT TO $EVENT_EFFDT
     move &P.CITY to $CITY
     move &P.STATE to $STATE
     move &P.POSTAL to $POSTAL
     move &P.SEX to $SEX
     MOVE &P.MAR_STATUS TO $MAR_STATUS
     !Person Model Impacts
     LET $PHONE = TRANSLATE(TRANSLATE(TRANSLATE(TRANSLATE(TRANSLATE($PHONE,'/',''),'-',''),'(',''),')',''),' ','')
     MOVE &JB.EFFDT TO $JOB_EFFDT
     MOVE &JB.EMPL_RCD TO #JOB_EMPL_RCD#
     DO get-phone-no
     move &BEN.COBRA_EVENT_ID to #COBRA_EVENT_ID
     move &BEN.BENEFIT_NBR to #BENEFIT_NBR
     move &BEN.PLAN_TYPE to $PLAN_TYPE
     move &BEN.BENEFIT_PLAN to $BENEFIT_PLAN
     move &BEN.COVERAGE_ELECT_DT to $CURRENT_COV_ELECT_DT
     move &BEN.COVERAGE_ELECT to $COVERAGE_ELECT
     MOVE &BEN.COVERAGE_BEGIN_DT TO $COVERAGE_BEGIN_DT
     MOVE &BEN.COVERAGE_END_DT TO $COVERAGE_END_DT
     MOVE &JB.COMPANY TO $COMPANY
     MOVE &JB.GVT_SUB_AGENCY TO $SUB_AGENCY
     LET $CPDF_AGENCY_CD = LTRIM(RTRIM($COMPANY,' '),' ') || $SUB_AGENCY
     MOVE &JB.GVT_POI TO $PERSONNEL_ID
     MOVE &BEN.OTH_INSURANCE_IND TO $GVT_OTH_INSUR_IND
     MOVE &BEN.OTH_INSURANCE_NAME TO $GVT_OTH_INSUR_NAME
     MOVE &NID.NATIONAL_ID TO $SSN
     EVALUATE $MAR_STATUS
       WHEN = 'C'
       WHEN = 'D'
       WHEN = 'H'
       WHEN = 'S'
       WHEN = 'U'
       WHEN = 'W'
         MOVE 'N' TO $FEHB_MAR_STATUS
         BREAK
       WHEN = 'M'
       WHEN = 'E'
         MOVE 'Y' TO $FEHB_MAR_STATUS
         BREAK
     END-EVALUATE

     DO CHECK-PREV-COVERAGE-ELECT
     IF $PROCESS_ROW = 'Y'
       DO GET-PAY-OFFICE-NBR
       DO GET-EE-MEDICARE-FLAGS
       DO GET-DEPENDENTS-DATA
       DO Write-Rec
       DO INSERT-TEMP-TABLE
     END-IF

FROM PS_HEALTH_BENEFIT BEN,
     PS_GVT_PERS_DATA P,
     !Person Model Impacts
     PS_GVT_JOB JB,
     PS_GVT_PERS_NID NID
WHERE BEN.COVERAGE_ELECT_DT BETWEEN $FROMDATE AND $THRUDATE
AND   BEN.PLAN_TYPE = '10'
AND   BEN.EMPLID = P.EMPLID
AND   BEN.EMPL_RCD = P.EMPL_RCD
!Person Model Impacts
AND   P.EFFDT = (SELECT MAX(P1.EFFDT)
                        FROM PS_GVT_PERS_DATA P1
                        WHERE P1.EMPLID = P.EMPLID
                        AND   P1.EMPL_RCD = P.EMPL_RCD
                        AND   P1.EFFDT <= $THRUDATE)
AND   P.EFFSEQ = (SELECT MAX(P2.EFFSEQ)
                          FROM PS_GVT_PERS_DATA P2
                          WHERE P.EMPLID = P2.EMPLID
                          AND   P.EMPL_RCD = P2.EMPL_RCD
                          AND   P2.EFFDT  = P.EFFDT)
!Person Model Impacts
AND   P.EMPLID = JB.EMPLID
AND   P.EMPL_RCD = JB.EMPL_RCD
AND   P.EFFDT = JB.EFFDT
AND   P.EFFSEQ = JB.EFFSEQ
AND   P.EMPLID = NID.EMPLID
AND   P.EMPL_RCD = NID.EMPL_RCD
AND   P.EFFDT = NID.EFFDT
AND   P.EFFSEQ = NID.EFFSEQ
AND   NID.COUNTRY = 'USA'
[$WHERE_CLAUSE]
ORDER BY BEN.BENEFIT_PLAN,P.EMPLID
end-SELECT

end-procedure

begin-procedure get-phone-no

begin-SELECT
PH.PHONE
      MOVE &PH.PHONE to $PHONE
FROM
     PS_GVT_PERS_DATA P,
     PS_GVT_PERS_PHONE PH
WHERE P.EMPLID = PH.EMPLID
AND P.EMPL_RCD = PH.EMPL_RCD
AND P.EFFDT = PH.EFFDT
AND P.EFFSEQ = PH.EFFSEQ
AND P.EMPLID = $EMPLID
AND P.EMPL_RCD = #JOB_EMPL_RCD#
AND P.EFFDT = $JOB_EFFDT
AND P.EFFSEQ = (SELECT MAX(P2.EFFSEQ)
                          FROM PS_GVT_PERS_DATA P2
                          WHERE P.EMPLID = P2.EMPLID
                          AND   P.EMPL_RCD = P2.EMPL_RCD
                          AND   P2.EFFDT  = P.EFFDT)
end-SELECT
end-procedure

!********************************************
begin-procedure INITIALIZE-VARIABLES
!********************************************

LET $DEP_NAME1 = ' '
LET $DEP_POSTAL1 = ' '
LET $DEP_BIRTHDATE1 = ''
LET $DEP_SEX1 = ' '
LET $DEP_RELATIONSHIP_CODE1 = ' '
LET $DEP_SSN1 = ' '
LET $DEP_NAME2 = ' '
LET $DEP_POSTAL2 = ' '
LET $DEP_BIRTHDATE2 = ''
LET $DEP_SEX2 = ' '
LET $DEP_RELATIONSHIP_CODE2 = ' '
LET $DEP_SSN2 = ' '
LET $DEP_NAME3 = ' '
LET $dep_POSTAL3 = ' '
LET $DEP_BIRTHDATE3 = ''
LET $DEP_SEX3 = ' '
LET $DEP_RELATIONSHIP_CODE3 = ' '
LET $DEP_SSN3 = ' '
LET $DEP_NAME4 = ' '
LET $dep_POSTAL4 = ' '
LET $DEP_BIRTHDATE4 = ''
LET $DEP_SEX4 = ' '
LET $DEP_RELATIONSHIP_CODE4 = ' '
LET $DEP_SSN4 = ' '
LET $DEP_NAME5 = ' '
LET $dep_POSTAL5 = ' '
LET $DEP_BIRTHDATE5 = ''
LET $DEP_SEX5 = ' '
LET $DEP_RELATIONSHIP_CODE5 = ' '
LET $DEP_SSN5 = ' '
LET $GVT_OTH_INSUR_IND = ' '
LET $GVT_MEDICARE_IND = ' '
LET $GVT_MEDICARE_A = ' '
LET $GVT_MEDICARE_B = ' '
LET $GVT_CHAMPUS_IND = ' '
LET $GVT_OTH_INUR_NAME = ' '
!MOVE $BENEFIT_PLAN TO $P_ENROLLMENT_CODE
LET $FEHB_EVENT_CD = ' '
LET $RIS_CLAIM_NBR = ' '
LET $HB_ID_NBR = ' '
LET $FILLER = ' '
LET $REPORT_NBR = ' '

END-PROCEDURE

!********************************************
begin-procedure GET-PAY-OFFICE-NBR
!********************************************

begin-SELECT On-Error=SQL-Error
A.GVT_AGY_LOC_CODE
   MOVE &A.GVT_AGY_LOC_CODE TO $PAYROLL_OFFICE_NBR
FROM PS_GVT_INTRFC_INFO A
WHERE A.COMPANY = $COMPANY
AND   A.EFFDT = (SELECT MAX(INT1.EFFDT)
                      FROM PS_GVT_INTRFC_INFO INT1
                        WHERE INT1.COMPANY = A.COMPANY
                        AND   INT1.EFFDT <= $THRUDATE)
END-SELECT
END-PROCEDURE


!************************************** *****
BEGIN-PROCEDURE GET-EE-MEDICARE-FLAGS
!*********************************************

!This procedure will return variables if the employee or other eligible
! employee have other insurance outside of the federal agency.
! i.e. Medicare or Spouse is covered by his/her employer
! it will have to look up data in:
!          PS_BN_PERSON_EFFDT
!          PS_BN_DEPBEN_EFFDT
! We have to look up both the employee level data
! and dependent level data to statisfy the medicare requirements
! the champus requirement is only at the employee level

! GET EMPLOYEE LEVEL FLAGS
BEGIN-SELECT On-Error=SQL-Error
BNPER.MEDICARE_A_IND
BNPER.MEDICARE_B_IND
BNPER.GVT_CHAMPUS_IND

       LET $GVT_MEDICARE_A   = &BNPER.MEDICARE_A_IND
       LET $GVT_MEDICARE_B    = &BNPER.MEDICARE_B_IND
       LET $GVT_CHAMPUS_IND = &BNPER.GVT_CHAMPUS_IND

FROM PS_BN_PERSON_EFFDT BNPER
WHERE BNPER.EMPLID = &P.EMPLID
AND  BNPER.EFFDT = (SELECT MAX(BNPER2.EFFDT)
                        FROM PS_BN_PERSON_EFFDT BNPER2
                        WHERE BNPER2.EMPLID = BNPER.EMPLID
                        AND   BNPER2.EFFDT <= $THRUDATE)
END-SELECT


  LET $GVT_MEDICARE_A = LTRIM(RTRIM($GVT_MEDICARE_A,' '),' ')
  LET $GVT_MEDICARE_B = LTRIM(RTRIM($GVT_MEDICARE_B,' '),' ')
  LET $GVT_CHAMPUS_IND = LTRIM(RTRIM($GVT_CHAMPUS_IND,' '),' ')


IF $GVT_MEDICARE_A = 'Y' OR $GVT_MEDICARE_B = 'Y'
! If either of thes two flags are yes, set this flag to yes
      LET $GVT_MEDICARE_IND = 'Y'
 END-IF

!*********************************************
END-PROCEDURE  ! GET-EE-MEDICARE-FLAGS
!*********************************************


 !********************************************
 BEGIN-PROCEDURE  GET-DEPBEN-MEDICARE-FLAGS
 !*************************************************


LET $GVT_MEDICARE_A = UPPER(LTRIM(RTRIM($GVT_MEDICARE_A,' '),' '))
LET $GVT_MEDICARE_B = UPPER(LTRIM(RTRIM($GVT_MEDICARE_B,' '),' '))

BEGIN-SELECT On-Error=SQL-Error
DEPBEN_EFFDT.MEDICARE_A_IND
DEPBEN_EFFDT.MEDICARE_B_IND

       IF $GVT_MEDICARE_A = 'N' OR $GVT_MEDICARE_A = ''
            ! Preserve any yes values from the employee level
            ! or from previous dependents
             LET $GVT_MEDICARE_A   = &DEPBEN_EFFDT.MEDICARE_A_IND
       END-IF

       IF $GVT_MEDICARE_B = 'N' OR $GVT_MEDICARE_B = ''
              LET $GVT_MEDICARE_B    = &DEPBEN_EFFDT.MEDICARE_B_IND
       END-IF

FROM PS_BN_DEPBEN_EFFDT DEPBEN_EFFDT
WHERE DEPBEN_EFFDT.EMPLID = &P.EMPLID
AND   DEPBEN_EFFDT.DEPENDENT_BENEF = &BENF.DEPENDENT_BENEF
AND  DEPBEN_EFFDT.EFFDT = (SELECT MAX(DEPBEN_EFFDT2.EFFDT)
                        FROM PS_BN_DEPBEN_EFFDT DEPBEN_EFFDT2
                        WHERE DEPBEN_EFFDT2.EMPLID = DEPBEN_EFFDT.EMPLID
                        AND   DEPBEN_EFFDT2.EFFDT <= $THRUDATE)
END-SELECT
 !**********************************************
 END-PROCEDURE GET-EE-MEDICARE-FLAGS
 !***********************************************



!********************************************
!********************************************
begin-procedure BEN-PLAN-CHANGE
!********************************************


PUT $BENEFIT_PLAN INTO BENPLANS(#I) BEN_PLAN
ADD 1 TO #I

END-PROCEDURE



!********************************************
begin-procedure check-prev-coverage-elect
!********************************************

MOVE 'Y' TO $PROCESS_ROW
MOVE ' ' TO $NATURE
begin-select
BEN1.COVERAGE_ELECT
BEN1.BENEFIT_PLAN
   move &BEN1.COVERAGE_ELECT to $PREV_COVERAGE_ELECT
   MOVE &BEN1.BENEFIT_PLAN TO $PREV_BENEFIT_PLAN
   Evaluate $PREV_COVERAGE_ELECT
     when = 'E'
     IF $COVERAGE_ELECT <> 'T'
       move 'CHANGE' to $NATURE
     ELSE
       MOVE 'STOP' TO $NATURE
       IF $ALL_BEN_PLAN = 'N'
         find $PREV_BENEFIT_PLAN in $BBHEALTH_PLAN1 0 #BEN_PLAN_FOUND
         IF #BEN_PLAN_FOUND = -1
           move 'N' TO $PROCESS_ROW
         END-IF
       END-IF
     END-IF
     break
   end-evaluate
from PS_HEALTH_BENEFIT BEN1
where BEN1.EMPLID = $EMPLID
and   BEN1.EMPL_RCD = #JOB_EMPL_RCD#
and   BEN1.COBRA_EVENT_ID = #COBRA_EVENT_ID
and   BEN1.PLAN_TYPE = $PLAN_TYPE
and   BEN1.BENEFIT_NBR = #BENEFIT_NBR
and   BEN1.EFFDT =
  (SELECT MAX(BEN2.EFFDT)
          FROM PS_HEALTH_BENEFIT BEN2
          WHERE BEN1.EMPLID = BEN2.EMPLID
          AND BEN1.EMPL_RCD = BEN2.EMPL_RCD
          AND BEN1.COBRA_EVENT_ID = BEN2.COBRA_EVENT_ID
          AND BEN1.PLAN_TYPE = BEN2.PLAN_TYPE
          AND BEN1.BENEFIT_NBR = BEN2.BENEFIT_NBR
          AND BEN2.EFFDT < $EVENT_EFFDT)


end-select
IF LTRIM(RTRIM($NATURE,' '),' ') = ''
   move 'START' to $NATURE
END-IF
end-procedure


!********************************************
begin-procedure get-dependents-data
!********************************************
!DO INITIALIZE-VARIABLES

LET #DEP_CNT = 0
begin-select On-Error=SQL-Error
DBN.NAME
DBA.POSTAL
BENF.BIRTHDATE
   do Format-DateTime(&BENF.BIRTHDATE, $DEP_BRTH_DT, {DEFCMP}, '', '')
   LET $DEP_BRTH_DT = SUBSTR($DEP_BRTH_DT,5,2) || SUBSTR($DEP_BRTH_DT,7,2) || SUBSTR($DEP_BRTH_DT,1,4)
DBF.SEX
DBF.RELATIONSHIP
DBENF.EFFDT
BNID.NATIONAL_ID
DBF.DISABLED
BENF.DEPENDENT_BENEF

   MOVE &DBN.NAME TO $DEP_NAME
   MOVE &DBA.POSTAL TO $DEP_POSTAL
   MOVE &BENF.BIRTHDATE TO $DEP_BIRTHDATE
   MOVE &DBF.SEX TO $DEP_SEX
   MOVE &DBENF.EFFDT TO $EFFDT
   MOVE &DBF.RELATIONSHIP TO $DEP_RELATIONSHIP
   let $DEP_RELATIONSHIP = ltrim(rtrim($DEP_RELATIONSHIP,' '),' ')
   MOVE &BNID.NATIONAL_ID TO $DEP_SSN
   MOVE &DBF.DISABLED TO $DISABLED
   if #DEP_CNT < 5
   EVALUATE $DEP_RELATIONSHIP
      WHEN = 'SP'
      MOVE '1' TO $DEP_RELATIONSHIP_CODE
      LET #DEP_CNT = #DEP_CNT + 1
      BREAK
      WHEN = 'S'
      WHEN = 'D'
      DO Convert-To-DTU-Date($DEP_BIRTHDATE, $BIRTH_dtu_date)
      DO Convert-To-DTU-Date($EFFDT, $CUR_dtu_date)
      DO dtu-diff-years($BIRTH_dtu_date,$CUR_dtu_date, #dtu_years)
      IF #dtu_years < 22
         MOVE '2' to $DEP_RELATIONSHIP_CODE
         LET #DEP_CNT = #DEP_CNT + 1
      END-IF
      IF #DTU_YEARS > 22
         IF $DISABLED  = 'Y'
           MOVE '4' TO $DEP_RELATIONSHIP_CODE
         END-IF
      END-IF
      BREAK
      WHEN = 'XS'
      WHEN = 'XC'
      WHEN = 'XD'
        MOVE '3' TO $DEP_RELATIONSHIP_CODE
        LET #DEP_CNT = #DEP_CNT + 1
      BREAK
    END-EVALUATE
    EVALUATE #DEP_CNT
        WHEN = 1
        LET $DEP_NAME1 = $DEP_NAME
        LET $DEP_POSTAL1 = $DEP_POSTAL
        LET $DEP_BIRTHDATE1 = $DEP_BRTH_DT
        LET $DEP_SEX1 = $DEP_SEX
        LET $DEP_RELATIONSHIP_CODE1 = $DEP_RELATIONSHIP_CODE
        LET $DEP_SSN1 = $DEP_SSN
        BREAK
        WHEN = 2
        LET $DEP_NAME2 = $DEP_NAME
        LET $DEP_POSTAL2 = $DEP_POSTAL
        LET $DEP_BIRTHDATE2 = $DEP_BRTH_DT
        LET $DEP_SEX2 = $DEP_SEX
        LET $DEP_RELATIONSHIP_CODE2 = $DEP_RELATIONSHIP_CODE
        LET $DEP_SSN2 = $DEP_SSN
        BREAK
        WHEN = 3
        LET $DEP_NAME3 = $DEP_NAME
        LET $dep_POSTAL3 = $DEP_POSTAL
        LET $DEP_BIRTHDATE3 = $DEP_BRTH_DT
        LET $DEP_SEX3 = $DEP_SEX
        LET $DEP_RELATIONSHIP_CODE3 = $DEP_RELATIONSHIP_CODE
        LET $DEP_SSN3 = $DEP_SSN
        BREAK
        WHEN = 4
        LET $DEP_NAME4 = $DEP_NAME
        LET $dep_POSTAL4 = $DEP_POSTAL
        LET $DEP_BIRTHDATE4 = $DEP_BRTH_DT
        LET $DEP_SEX4 = $DEP_SEX
        LET $DEP_RELATIONSHIP_CODE4 = $DEP_RELATIONSHIP_CODE
        LET $DEP_SSN4 = $DEP_SSN
        BREAK
        WHEN = 5
        LET $DEP_NAME5 = $DEP_NAME
        LET $dep_POSTAL5 = $DEP_POSTAL
        LET $DEP_BIRTHDATE5 = $DEP_BRTH_DT
        LET $DEP_SEX5 = $DEP_SEX
        LET $DEP_RELATIONSHIP_CODE5 = $DEP_RELATIONSHIP_CODE
        LET $DEP_SSN5 = $DEP_SSN
        BREAK
     END-EVALUATE
     END-IF
     DO GET-DEPBEN-MEDICARE-FLAGS
from PS_DEP_BEN BENF,
     PS_DEP_BEN_EFF DBF,
     PS_DEP_BEN_NAME DBN,
     PS_DEP_BEN_ADDR DBA,
     PS_HEALTH_DEPENDNT DBENF,
     PS_DEP_BENEF_NID BNID
where BENF.EMPLID = $EMPLID
AND   BENF.EMPLID = DBENF.EMPLID
AND   BENF.DEPENDENT_BENEF = DBENF.DEPENDENT_BENEF
AND   DBENF.PLAN_TYPE = $PLAN_TYPE
AND   DBENF.EFFDT = (SELECT MAX(DBENF1.EFFDT)
                            FROM PS_HEALTH_DEPENDNT DBENF1
                            WHERE DBENF1.EMPLID = DBENF.EMPLID
                            AND   DBENF1.EMPL_RCD = DBENF.EMPL_RCD
                            AND   DBENF1.PLAN_TYPE = DBENF.PLAN_TYPE
                            AND   DBENF1.EFFDT <= $THRUDATE)
AND   BENF.EMPLID = BNID.EMPLID
AND   BENF.DEPENDENT_BENEF = BNID.DEPENDENT_BENEF
AND   BNID.COUNTRY = 'USA'
AND   DBF.EMPLID = BENF.EMPLID
AND   DBF.DEPENDENT_BENEF = BENF.DEPENDENT_BENEF
AND   DBF.EFFDT = (SELECT MAX(DBF1.EFFDT)
                            FROM PS_DEP_BEN_EFF DBF1
                            WHERE DBF1.EMPLID = DBF.EMPLID
                            AND   DBF1.DEPENDENT_BENEF = DBF.DEPENDENT_BENEF
                            AND   DBF1.EFFDT <= $THRUDATE)
AND  DBN.EMPLID = BENF.EMPLID
AND  DBN.DEPENDENT_BENEF = BENF.DEPENDENT_BENEF
AND  DBN.EFFDT = (SELECT MAX(DBN1.EFFDT)
                            FROM PS_DEP_BEN_NAME DBN1
                            WHERE DBN1.EMPLID = DBN.EMPLID
                            AND   DBN1.DEPENDENT_BENEF = DBN.DEPENDENT_BENEF
                            AND   DBN1.EFFDT <= $THRUDATE)
AND  DBA.EMPLID = BENF.EMPLID
AND  DBA.DEPENDENT_BENEF = BENF.DEPENDENT_BENEF
AND  DBA.EFFDT = (SELECT MAX(DBA1.EFFDT)
                            FROM PS_DEP_BEN_ADDR DBA1
                            WHERE DBA1.EMPLID = DBA.EMPLID
                            AND   DBA1.DEPENDENT_BENEF = DBA.DEPENDENT_BENEF
                            AND   DBA1.EFFDT <= $THRUDATE)
end-select
end-procedure




!********************************************
begin-procedure Write-Rec
!********************************************

DO GET-OPEN-SEASON-DATES


MOVE $NATURE TO $FEHB_NATURE
LET $FEHB_NATURE = UPPER(LTRIM(RTRIM($FEHB_NATURE,' '),' '))
IF $FEHB_NATURE = ''
   MOVE ' ' TO $NATURE
END-IF
MOVE $NAME TO $NAME
LET $NAME = UPPER(LTRIM(RTRIM($NAME,' '),' '))
IF $NAME = ''
   MOVE ' ' TO $NAME
END-IF
MOVE $SSN TO $SSN
LET $SSN = UPPER(LTRIM(RTRIM($SSN,' '),' ') )
IF $SSN = ''
   MOVE ' ' TO $SSN
END-IF
MOVE $BRTH_DT TO $FEHB_EMPL_DOB
LET $FEHB_EMPL_DOB = LTRIM(RTRIM($FEHB_EMPL_DOB,' '),' ')
IF $FEHB_EMPL_DOB = ''
   MOVE ' ' TO $FEHB_EMPL_DOB
END-IF
MOVE $ADDRESS1 TO $ADDRESS1
LET $ADDRESS1 = UPPER(LTRIM(RTRIM($ADDRESS1,' '),' '))
IF $ADDRESS1 = ''
   MOVE ' ' TO $ADDRESS1
END-IF
MOVE $ADDRESS2 TO $ADDRESS2
LET $ADDRESS2 = UPPER(LTRIM(RTRIM($ADDRESS2,' '),' ') )
IF $ADDRESS2 = ''
   MOVE ' ' TO $ADDRESS2
END-IF
MOVE $ADDRESS3 TO $ADDRESS3
LET $ADDRESS3 = UPPER(LTRIM(RTRIM($ADDRESS3,' '),' '))
IF $ADDRESS3 = ''
   MOVE ' ' TO $ADDRESS3
END-IF
MOVE $CITY TO $CITY
LET $CITY = UPPER(LTRIM(RTRIM($CITY,' '),' ') )
IF $CITY = ''
   MOVE ' ' TO $CITY
END-IF
MOVE $STATE TO $STATE
LET $STATE = UPPER(LTRIM(RTRIM($STATE,' '),' '))
IF $STATE = ''
   MOVE ' ' TO $STATE
END-IF
MOVE $POSTAL TO $ZIP
LET $ZIP = UPPER(LTRIM(RTRIM($ZIP,' '),' '))
IF $ZIP = ''
   MOVE ' ' TO $ZIP
END-IF
MOVE $FEHB_MAR_STATUS TO $MARITAL_STATUS
LET $MARITAL_STATUS = UPPER(LTRIM(RTRIM($MARITAL_STATUS,' '),' '))
IF $MARITAL_STATUS = ''
   MOVE ' ' TO $MARITAL_STATUS
END-IF
MOVE $PHONE TO $PHONE
LET $PHONE = LTRIM(RTRIM($PHONE,' '),' ')
IF $PHONE = ''
   MOVE ' ' TO $PHONE
END-IF
!MOVE $HEALTHPLAN TO $BENEFIT_PLAN
LET $BENEFIT_PLAN = UPPER(LTRIM(RTRIM($BENEFIT_PLAN,' '),' '))
IF $BENEFIT_PLAN = ''
   MOVE ' ' TO $BENEFIT_PLAN
END-IF
MOVE $BENEFIT_PLAN TO $P_ENROLLMENT_CODE
MOVE $DEP_NAME1 TO $FEHB_MEMBER_NAME1
LET $FEHB_MEMBER_NAME1 = UPPER(LTRIM(RTRIM($FEHB_MEMBER_NAME1,' '),' '))
IF $FEHB_MEMBER_NAME1 = ''
   MOVE ' ' TO $FEHB_MEMBER_NAME1
END-IF
MOVE $DEP_POSTAL1 TO $FEHB_MEMBER_ZIP1
LET $FEHB_MEMBER_ZIP1 = UPPER(LTRIM(RTRIM($FEHB_MEMBER_ZIP1,' '),' '))
IF $FEHB_MEMBER_ZIP1 = ''
   MOVE ' ' TO $FEHB_MEMBER_ZIP1
END-IF
MOVE $DEP_BIRTHDATE1 TO $FEHB_MEMBER_DOB1
LET $FEHB_MEMBER_DOB1 = LTRIM(RTRIM($FEHB_MEMBER_DOB1,' '),' ')
IF $FEHB_MEMBER_DOB1 = ''
   MOVE ' ' TO $FEHB_MEMBER_DOB1
END-IF
MOVE $DEP_SEX1 TO $FEHB_MEMBER_SEX1
LET $FEHB_MEMBER_SEX1 = UPPER(LTRIM(RTRIM($FEHB_MEMBER_SEX1,' '),' '))
IF $FEHB_MEMBER_SEX1 = ''
   MOVE ' ' TO $FEHB_MEMBER_SEX1
END-IF
MOVE $DEP_RELATIONSHIP_CODE1 TO $FEHB_MEM_RELATION1
LET $FEHB_MEM_RELATION1 = UPPER(LTRIM(RTRIM($FEHB_MEM_RELATION1,' '),' '))
IF $FEHB_MEM_RELATION1 = ''
   MOVE ' ' TO $FEHB_MEM_RELATION1
END-IF
MOVE $DEP_SSN1 TO $FEHB_MEMBER_SSN1
LET $FEHB_MEMBER_SSN1 = LTRIM(RTRIM($FEHB_MEMBER_SSN1,' '),' ')
IF $FEHB_MEMBER_SSN1 = ''
   MOVE ' ' TO $FEHB_MEMBER_SSN1
END-IF

MOVE $DEP_NAME2 TO $FEHB_MEMBER_NAME2
LET $FEHB_MEMBER_NAME2 = UPPER(LTRIM(RTRIM($FEHB_MEMBER_NAME2,' '),' ') )
IF $FEHB_MEMBER_NAME2 = ''
   MOVE ' ' TO $FEHB_MEMBER_NAME2
END-IF
MOVE $DEP_POSTAL2 TO $FEHB_MEMBER_ZIP2
LET $FEHB_MEMBER_ZIP2 = LTRIM(RTRIM($FEHB_MEMBER_ZIP2,' '),' ')
IF $FEHB_MEMBER_ZIP2 = ''
   MOVE ' ' TO $FEHB_MEMBER_ZIP2
END-IF
MOVE $DEP_BIRTHDATE2 TO $FEHB_MEMBER_DOB2
LET $FEHB_MEMBER_DOB2 = LTRIM(RTRIM($FEHB_MEMBER_DOB2,' '),' ')
IF $FEHB_MEMBER_DOB2 = ''
   MOVE ' ' TO $FEHB_MEMBER_DOB2
END-IF
MOVE $DEP_SEX2 TO $FEHB_MEMBER_SEX2
LET $FEHB_MEMBER_SEX2 = UPPER(LTRIM(RTRIM($FEHB_MEMBER_SEX2,' '),' '))
IF $FEHB_MEMBER_SEX2 = ''
   MOVE ' ' TO $FEHB_MEMBER_SEX2
END-IF
MOVE $DEP_RELATIONSHIP_CODE2 TO $FEHB_MEM_RELATION2
LET $FEHB_MEM_RELATION2 = UPPER(LTRIM(RTRIM($FEHB_MEM_RELATION2,' '),' '))
IF $FEHB_MEM_RELATION2 = ''
   MOVE ' ' TO $FEHB_MEM_RELATION2
END-IF
MOVE $DEP_SSN2 TO $FEHB_MEMBER_SSN2
LET $FEHB_MEMBER_SSN2 = LTRIM(RTRIM($FEHB_MEMBER_SSN2,' '),' ')
IF $FEHB_MEMBER_SSN2 = ''
   MOVE ' ' TO $FEHB_MEMBER_SSN2
END-IF

MOVE $DEP_NAME3 TO $FEHB_MEMBER_NAME3
LET $FEHB_MEMBER_NAME3 = UPPER(LTRIM(RTRIM($FEHB_MEMBER_NAME3,' '),' '))
IF $FEHB_MEMBER_NAME3 = ''
   MOVE ' ' TO $FEHB_MEMBER_NAME3
END-IF
MOVE $DEP_POSTAL3 TO $FEHB_MEMBER_ZIP3
LET $FEHB_MEMBER_ZIP3 = LTRIM(RTRIM($FEHB_MEMBER_ZIP3,' '),' ')
IF $FEHB_MEMBER_ZIP3 = ''
   MOVE ' ' TO $FEHB_MEMBER_ZIP3
END-IF
MOVE $DEP_BIRTHDATE3 TO $FEHB_MEMBER_DOB3
LET $FEHB_MEMBER_DOB3 = LTRIM(RTRIM($FEHB_MEMBER_DOB3,' '),' ')
IF $FEHB_MEMBER_DOB3 = ''
   MOVE ' ' TO $FEHB_MEMBER_DOB3
END-IF
MOVE $DEP_SEX3 TO $FEHB_MEMBER_SEX3
LET $FEHB_MEMBER_SEX3 = UPPER(LTRIM(RTRIM($FEHB_MEMBER_SEX3,' '),' '))
IF $FEHB_MEMBER_SEX3 = ''
   MOVE ' ' TO $FEHB_MEMBER_SEX3
END-IF
MOVE $DEP_RELATIONSHIP_CODE3 TO $FEHB_MEM_RELATION3
LET $FEHB_MEM_RELATION3 = UPPER(LTRIM(RTRIM($FEHB_MEM_RELATION3,' '),' '))
IF $FEHB_MEM_RELATION3 = ''
   MOVE ' ' TO $FEHB_MEM_RELATION3
END-IF
MOVE $DEP_SSN3 TO $FEHB_MEMBER_SSN3
LET $FEHB_MEMBER_SSN3 = LTRIM(RTRIM($FEHB_MEMBER_SSN3,' '),' ')
IF $FEHB_MEMBER_SSN3 = ''
   MOVE ' ' TO $FEHB_MEMBER_SSN3
END-IF

MOVE $DEP_NAME4 TO $FEHB_MEMBER_NAME4
LET $FEHB_MEMBER_NAME4 = UPPER(LTRIM(RTRIM($FEHB_MEMBER_NAME4,' '),' '))
IF $FEHB_MEMBER_NAME4 = ''
   MOVE ' ' TO $FEHB_MEMBER_NAME4
END-IF
MOVE $DEP_POSTAL4 TO $FEHB_MEMBER_ZIP4
LET $FEHB_MEMBER_ZIP4 = LTRIM(RTRIM($FEHB_MEMBER_ZIP4,' '),' ')
IF $FEHB_MEMBER_ZIP4 = ''
   MOVE ' ' TO $FEHB_MEMBER_ZIP4
END-IF
MOVE $DEP_BIRTHDATE4 TO $FEHB_MEMBER_DOB4
LET $FEHB_MEMBER_DOB4 = LTRIM(RTRIM($FEHB_MEMBER_DOB4,' '),' ')
IF $FEHB_MEMBER_DOB4 = ''
   MOVE ' ' TO $FEHB_MEMBER_DOB4
END-IF
MOVE $DEP_SEX4 TO $FEHB_MEMBER_SEX4
LET $FEHB_MEMBER_SEX4 = LTRIM(RTRIM($FEHB_MEMBER_SEX4,' '),' ')
IF $FEHB_MEMBER_SEX4 = ''
   MOVE ' ' TO $FEHB_MEMBER_SEX4
END-IF
MOVE $DEP_RELATIONSHIP_CODE4 TO $FEHB_MEM_RELATION4
LET $FEHB_MEM_RELATION4 = UPPER(LTRIM(RTRIM($FEHB_MEM_RELATION4,' '),' '))
IF $FEHB_MEM_RELATION4 = ''
   MOVE ' ' TO $FEHB_MEM_RELATION4
END-IF
MOVE $DEP_SSN4 TO $FEHB_MEMBER_SSN4
LET $FEHB_MEMBER_SSN4 = LTRIM(RTRIM($FEHB_MEMBER_SSN4,' '),' ')
IF $FEHB_MEMBER_SSN4 = ''
   MOVE ' ' TO $FEHB_MEMBER_SSN4
END-IF

MOVE $DEP_NAME5 TO $FEHB_MEMBER_NAME5
LET $FEHB_MEMBER_NAME5 = UPPER(LTRIM(RTRIM($FEHB_MEMBER_NAME5,' '),' '))
IF $FEHB_MEMBER_NAME5 = ''
   MOVE ' ' TO $FEHB_MEMBER_NAME5
END-IF
MOVE $DEP_POSTAL5 TO $FEHB_MEMBER_ZIP5
LET $FEHB_MEMBER_ZIP5 = LTRIM(RTRIM($FEHB_MEMBER_ZIP5,' '),' ')
IF $FEHB_MEMBER_ZIP5 = ''
   MOVE ' ' TO $FEHB_MEMBER_ZIP5
END-IF
MOVE $DEP_BIRTHDATE5 TO $FEHB_MEMBER_DOB5
LET $FEHB_MEMBER_DOB5 = LTRIM(RTRIM($FEHB_MEMBER_DOB5 ,' '),' ')
IF $FEHB_MEMBER_DOB5 = ''
   MOVE ' ' TO $FEHB_MEMBER_DOB5
END-IF
MOVE $DEP_SEX5 TO $FEHB_MEMBER_SEX5
LET $FEHB_MEMBER_SEX5 = LTRIM(RTRIM($FEHB_MEMBER_SEX5,' '),' ')
IF $FEHB_MEMBER_SEX5 = ''
   MOVE ' ' TO $FEHB_MEMBER_SEX5
END-IF
MOVE $DEP_RELATIONSHIP_CODE5 TO $FEHB_MEM_RELATION5
LET $FEHB_MEM_RELATION5 = UPPER(LTRIM(RTRIM($FEHB_MEM_RELATION5,' '),' '))
IF $FEHB_MEM_RELATION5 = ''
   MOVE ' ' TO $FEHB_MEM_RELATION5
END-IF
MOVE $DEP_SSN5 TO $FEHB_MEMBER_SSN5
LET $FEHB_MEMBER_SSN5 = LTRIM(RTRIM($FEHB_MEMBER_SSN5,' '),' ')
IF $FEHB_MEMBER_SSN5 = ''
   MOVE ' ' TO $FEHB_MEMBER_SSN5
END-IF

MOVE $GVT_OTH_INSUR_IND TO $FEHB_OTH_INSUR_IND
LET $FEHB_OTH_INSUR_IND = UPPER(LTRIM(RTRIM($FEHB_OTH_INSUR_IND,' '),' '))
IF $FEHB_OTH_INSUR_IND = '' OR $FEHB_OTH_INSUR_IND = 'N'
   MOVE ' ' TO $FEHB_OTH_INSUR_IND
END-IF
MOVE $GVT_MEDICARE_IND TO $FEHB_MEDICAL_IND
LET $FEHB_MEDICAL_IND = UPPER(LTRIM(RTRIM($FEHB_MEDICAL_IND,' '),' '))
IF $FEHB_MEDICAL_IND = ''
   MOVE ' ' TO $FEHB_MEDICAL_IND
END-IF
MOVE $GVT_MEDICARE_A TO $FEHB_MEDICARE_A
LET $FEHB_MEDICARE_A = UPPER(LTRIM(RTRIM($FEHB_MEDICARE_A,' '),' '))
IF $FEHB_MEDICARE_A = ''
   MOVE ' ' TO $FEHB_MEDICARE_A
END-IF
MOVE $GVT_MEDICARE_B TO $FEHB_MEDICARE_B
LET $FEHB_MEDICARE_B = UPPER(LTRIM(RTRIM($FEHB_MEDICARE_B,' '),' '))
IF $FEHB_MEDICARE_B = ''
   MOVE ' ' TO $FEHB_MEDICARE_B
END-IF
MOVE $GVT_CHAMPUS_IND TO $FEHB_CHAMPUS
LET $FEHB_CHAMPUS = UPPER(LTRIM(RTRIM($FEHB_CHAMPUS,' '),' '))
IF $FEHB_CHAMPUS = ''
   MOVE ' ' TO $FEHB_CHAMPUS
END-IF
MOVE $GVT_OTH_INSUR_NAME TO $FEHB_OTH_INSURANCE
LET $FEHB_OTH_INSURANCE = UPPER(LTRIM(RTRIM($FEHB_OTH_INSURANCE,' '),' '))
IF $FEHB_OTH_INSURANCE = ''
   MOVE ' ' TO $FEHB_OTH_INSURANCE
END-IF
IF $FEHB_NATURE = 'CHANGE' OR $FEHB_NATURE = 'STOP'
MOVE $PREV_BENEFIT_PLAN TO $FEHB_PRESENT_ENROL
END-IF
LET $FEHB_PRESENT_ENROL = UPPER(LTRIM(RTRIM($FEHB_PRESENT_ENROL,' '),' '))
LET $FEHB_PRESENT_ENROL = {ps-substr}($FEHB_PRESENT_ENROL,1,3)
IF $FEHB_PRESENT_ENROL = ''
   MOVE ' ' TO $FEHB_PRESENT_ENROL
END-IF
MOVE $FEHB_EVENT_CODE TO $FEHB_EVENT_CODE
LET $FEHB_EVENT_CODE = UPPER(LTRIM(RTRIM($FEHB_EVENT_CODE,' '),' '))
IF $FEHB_EVENT_CODE = ''
   MOVE ' ' TO $FEHB_EVENT_CODE
END-IF
MOVE $C_B_DT TO $FEHB_EFFDT
LET $FEHB_EFFDT = LTRIM(RTRIM($FEHB_EFFDT,' '),' ')
IF $FEHB_EFFDT = ''
   MOVE ' ' TO $FEHB_EFFDT
END-IF
MOVE $C_E_DT TO $FEHB_ACTION_DT
LET $FEHB_ACTION_DT = LTRIM(RTRIM($FEHB_ACTION_DT,' '),' ')
IF $FEHB_ACTION_DT = ''
   MOVE ' ' TO $FEHB_ACTION_DT
END-IF
MOVE ' ' TO $FEHB_ACTION_TIME
LET $FEHB_ACTION_TIME = LTRIM(RTRIM($FEHB_ACTION_TIME,' '),' ')
IF $FEHB_ACTION_TIME = ''
   MOVE ' ' TO $FEHB_ACTION_TIME
END-IF
MOVE $CPDF_AGENCY_CD TO $CPDF_AGENCY_CD
LET $CPDF_AGENCY_CD = UPPER(LTRIM(RTRIM($CPDF_AGENCY_CD,' '),' '))
IF $CPDF_AGENCY_CD = ''
   MOVE ' ' TO $CPDF_AGENCY_CD
END-IF
MOVE $PERSONNEL_ID TO $FEHB_PERSONNEL_ID
LET $FEHB_PERSONNEL_ID = UPPER(LTRIM(RTRIM($FEHB_PERSONNEL_ID,' '),' '))
IF $FEHB_PERSONNEL_ID = ''
   MOVE ' ' TO $FEHB_PERSONNEL_ID
END-IF
MOVE $PAYROLL_OFFICE_NBR TO $FEHB_PAYROLL_NBR
LET $FEHB_PAYROLL_NBR = UPPER(LTRIM(RTRIM($FEHB_PAYROLL_NBR,' '),' '))
IF $FEHB_PAYROLL_NBR = ''
   MOVE ' ' TO $FEHB_PAYROLL_NBR
END-IF

IF $FEHB_MEDICARE_B = 'Y' OR $FEHB_MEDICARE_A = 'Y' OR $FEHB_CHAMPUS = 'Y'
   LET  $FEHB_OTH_INSUR_IND = 'Y'
END-IF


#ifdef debuga
SHOW '*****************************************************'

SHOW '$FEHB_NATURE = ' $FEHB_NATURE
SHOW 'NAME = ' $NAME
SHOW 'SSN = ' $SSN
SHOW '$FEHB_EMPL_DOB =' $FEHB_EMPL_DOB
SHOW  '$ADDRESS1 = ' $ADDRESS1
SHOW  '$ADDRESS2 = ' $ADDRESS2
SHOW '$ADDRESS3 = ' $ADDRESS3
SHOW '$CITY = '  $CITY
SHOW '$STATE = ' $STATE
SHOW '$ZIP = ' $ZIP
SHOW '$SEX = ' $SEX
SHOW '$MARITAL_STATUS = '$MARITAL_STATUS
SHOW '$PHONE = '$PHONE
SHOW '$BENEFIT_PLAN = ' $BENEFIT_PLAN
SHOW '$FEHB_MEMBER_NAME1 ' $FEHB_MEMBER_NAME1
SHOW '$FEHB_MEMBER_ZIP1' $FEHB_MEMBER_ZIP1
SHOW '$FEHB_MEMBER_DOB1 ' $FEHB_MEMBER_DOB1
SHOW ' $FEHB_MEMBER_SEX1 ' $FEHB_MEMBER_SEX1
SHOW '$FEHB_MEM_RELATION1 ' $FEHB_MEM_RELATION1
SHOW '$FEHB_MEMBER_SSN1 ' $FEHB_MEMBER_SSN1
SHOW '$FEHB_MEMBER_NAME2 ' $FEHB_MEMBER_NAME2
SHOW ' $FEHB_MEMBER_ZIP2 ' $FEHB_MEMBER_ZIP2
SHOW '$FEHB_MEMBER_DOB2 ' $FEHB_MEMBER_DOB2
SHOW '$FEHB_MEMBER_SEX2 ' $FEHB_MEMBER_SEX2
SHOW '$FEHB_MEM_RELATION2 ' $FEHB_MEM_RELATION2
SHOW '$FEHB_MEMBER_SSN2 ' $FEHB_MEMBER_SSN2
SHOW '$FEHB_MEMBER_NAME3 ' $FEHB_MEMBER_NAME3
SHOW '$FEHB_MEMBER_ZIP3 ' $FEHB_MEMBER_ZIP3
SHOW '$FEHB_MEMBER_DOB3 ' $FEHB_MEMBER_DOB3
SHOW '$FEHB_MEMBER_SEX3 ' $FEHB_MEMBER_SEX3
SHOW '$FEHB_MEM_RELATION3 ' $FEHB_MEM_RELATION3
SHOW '$FEHB_MEMBER_SSN3 ' $FEHB_MEMBER_SSN3
SHOW '$FEHB_MEMBER_NAME4 ' $FEHB_MEMBER_NAME4
SHOW '$FEHB_MEMBER_ZIP4 ' $FEHB_MEMBER_ZIP4
SHOW '$FEHB_MEMBER_DOB4 ' $FEHB_MEMBER_DOB4
SHOW '$FEHB_MEMBER_SEX4 ' $FEHB_MEMBER_SEX4
SHOW '$FEHB_MEM_RELATION4 ' $FEHB_MEM_RELATION4
SHOW '$FEHB_MEMBER_SSN4 ' $FEHB_MEMBER_SSN4
SHOW '$FEHB_MEMBER_NAME5 ' $FEHB_MEMBER_NAME5
SHOW '$FEHB_MEMBER_ZIP5 ' $FEHB_MEMBER_ZIP5
SHOW '$FEHB_MEMBER_DOB5 ' $FEHB_MEMBER_DOB5
SHOW '$FEHB_MEMBER_SEX5 ' $FEHB_MEMBER_SEX5
SHOW '$FEHB_MEM_RELATION5 ' $FEHB_MEM_RELATION5
SHOW '$FEHB_MEMBER_SSN5 = ' $FEHB_MEMBER_SSN5
SHOW ' $FEHB_OTH_INSUR_IND ' $FEHB_OTH_INSUR_IND
SHOW '$FEHB_MEDICAL_IND ' $FEHB_MEDICAL_IND
SHOW '$FEHB_MEDICARE_A ' $FEHB_MEDICARE_A
SHOW '$FEHB_MEDICARE_B ' $FEHB_MEDICARE_B
SHOW '$FEHB_CHAMPUS ' $FEHB_CHAMPUS
SHOW '$FEHB_OTH_INSURANCE ' $FEHB_OTH_INSURANCE
SHOW '$FEHB_PRESENT_ENROL ' $FEHB_PRESENT_ENROL
SHOW '$FEHB_EVENT_CODE ' $FEHB_EVENT_CODE
SHOW '$FEHB_EFFDT ' $FEHB_EFFDT
SHOW '$FEHB_ACTION_DT ' $FEHB_ACTION_DT
SHOW '$FEHB_ACTION_TIME ' $FEHB_ACTION_TIME
SHOW '$CPDF_AGENCY_CD ' $CPDF_AGENCY_CD
SHOW '$FEHB_PERSONNEL_ID ' $FEHB_PERSONNEL_ID
SHOW '$FEHB_PAYROLL_NBR ' $FEHB_PAYROLL_NBR

SHOW '***************************************************'
#end-if

end-procedure

!********************************************
begin-procedure GET-OPEN-SEASON-DATES
!********************************************

BEGIN-SELECT On-Error=SQL-Error
OE_DEFN_ID
EVENT_CLASS
GVT_OS_BEGIN_DT
GVT_OS_END_DT
   LET $S_EVENT_CLASS = SUBSTR(&EVENT_CLASS,1,2)
   IF $S_EVENT_CLASS = 'HB1'
     MOVE 'Y' TO $OPEN_SEASON_FLAG
     EXIT-SELECT
   END-IF
FROM PS_BAS_OE_DEFN
WHERE $EVENT_EFFDT BETWEEN GVT_OS_BEGIN_DT AND GVT_OS_END_DT
END-SELECT
IF ($NATURE = 'START' OR $NATURE ='CHANGE')
  IF $OPEN_SEASON_FLAG = 'Y'
    MOVE '01' TO $FEHB_EVENT_CODE
  ELSE
    MOVE '02' TO $FEHB_EVENT_CODE
  END-IF
END-IF
IF $NATURE = 'STOP'
  MOVE ' ' TO $FEHB_EVENT_CODE
END-IF
LET $SELF = SUBSTR($BENEFIT_PLAN,3,1)
IF ($SELF = '1' AND $NATURE ='CHANGE')
  MOVE ' ' TO $FEHB_EVENT_CODE
END-IF
END-PROCEDURE


!********************************************
begin-procedure INSERT-TEMP-TABLE
!********************************************

BEGIN-SQL On-Error=SQL-Error
INSERT INTO PS_GVT_CAR_INTRFC
     (FEHB_NATURE,NAME,SSN,FEHB_EMPL_DOB,ADDRESS1,ADDRESS2,ADDRESS3,
      CITY,STATE,ZIP,SEX,MARITAL_STATUS,PHONE,BENEFIT_PLAN,FEHB_MEMBER_NAME1,
      FEHB_MEMBER_ZIP1,FEHB_MEMBER_DOB1,FEHB_MEMBER_SEX1,FEHB_MEM_RELATION1,
      FEHB_MEMBER_SSN1,FEHB_MEMBER_NAME2,FEHB_MEMBER_ZIP2,FEHB_MEMBER_DOB2,
      FEHB_MEMBER_SEX2,FEHB_MEM_RELATION2,FEHB_MEMBER_SSN2,FEHB_MEMBER_NAME3,
      FEHB_MEMBER_ZIP3,FEHB_MEMBER_DOB3,FEHB_MEMBER_SEX3,FEHB_MEM_RELATION3,
      FEHB_MEMBER_SSN3,FEHB_MEMBER_NAME4,FEHB_MEMBER_ZIP4,FEHB_MEMBER_DOB4,
      FEHB_MEMBER_SEX4,FEHB_MEM_RELATION4,FEHB_MEMBER_SSN4,FEHB_MEMBER_NAME5,
      FEHB_MEMBER_ZIP5,FEHB_MEMBER_DOB5,FEHB_MEMBER_SEX5,FEHB_MEM_RELATION5,
      FEHB_MEMBER_SSN5,FEHB_OTH_INSUR_IND,FEHB_MEDICAL_IND,FEHB_MEDICARE_A,
      FEHB_MEDICARE_B,FEHB_CHAMPUS,FEHB_OTH_INSURANCE,FEHB_PRESENT_ENROL,
      FEHB_EVENT_CODE,FEHB_EFFDT,FEHB_ACTION_DT,FEHB_ACTION_TIME,CPDF_AGENCY_CD,
      FEHB_PERSONNEL_ID,FEHB_PAYROLL_NBR)
      VALUES
      ($FEHB_NATURE,$NAME,$SSN,$FEHB_EMPL_DOB,$ADDRESS1,$ADDRESS2,$ADDRESS3,
      $CITY,$STATE,$ZIP,$SEX,$MARITAL_STATUS,$PHONE,$BENEFIT_PLAN,$FEHB_MEMBER_NAME1,
      $FEHB_MEMBER_ZIP1,$FEHB_MEMBER_DOB1,$FEHB_MEMBER_SEX1,$FEHB_MEM_RELATION1,
      $FEHB_MEMBER_SSN1,$FEHB_MEMBER_NAME2,$FEHB_MEMBER_ZIP2,$FEHB_MEMBER_DOB2,
      $FEHB_MEMBER_SEX2,$FEHB_MEM_RELATION2,$FEHB_MEMBER_SSN2,$FEHB_MEMBER_NAME3,
      $FEHB_MEMBER_ZIP3,$FEHB_MEMBER_DOB3,$FEHB_MEMBER_SEX3,$FEHB_MEM_RELATION3,
      $FEHB_MEMBER_SSN3,$FEHB_MEMBER_NAME4,$FEHB_MEMBER_ZIP4,$FEHB_MEMBER_DOB4,
      $FEHB_MEMBER_SEX4,$FEHB_MEM_RELATION4,$FEHB_MEMBER_SSN4,$FEHB_MEMBER_NAME5,
      $FEHB_MEMBER_ZIP5,$FEHB_MEMBER_DOB5,$FEHB_MEMBER_SEX5,$FEHB_MEM_RELATION5,
      $FEHB_MEMBER_SSN5,$FEHB_OTH_INSUR_IND,$FEHB_MEDICAL_IND,$FEHB_MEDICARE_A,
      $FEHB_MEDICARE_B,$FEHB_CHAMPUS,$FEHB_OTH_INSURANCE,$FEHB_PRESENT_ENROL,
      $FEHB_EVENT_CODE,$FEHB_EFFDT,$FEHB_ACTION_DT,$FEHB_ACTION_TIME,$CPDF_AGENCY_CD,
      $FEHB_PERSONNEL_ID,$FEHB_PAYROLL_NBR)
END-SQL
END-PROCEDURE


!********************************************
begin-procedure Process-temp-table
!********************************************

LET #RECORD_CNT = 0
begin-SELECT
A.SSN
  LET #RECORD_CNT = #RECORD_CNT + 1
  MOVE &A.SSN TO $SSN
  LET #SSN1 = SUBSTR($SSN,1,1)
  LET #SSN2 = SUBSTR($SSN,2,1)
  LET #SSN3 = SUBSTR($SSN,3,1)
  LET #SSN4 = SUBSTR($SSN,4,1)
  LET #SSN5 = SUBSTR($SSN,5,1)
  LET #SSN6 = SUBSTR($SSN,6,1)
  LET #SSN7 = SUBSTR($SSN,7,1)
  LET #SSN8 = SUBSTR($SSN,8,1)
  LET #SSN9 = SUBSTR($SSN,9,1)
  #ifdef debugB
  SHOW #SSN1
  SHOW #SSN2
  SHOW #SSN3
  SHOW #SSN4
  SHOW #SSN5
  SHOW #SSN6
  SHOW #SSN7
  SHOW #SSN8
  SHOW #SSN9
  #end-if
  LET #SSN_TOTAL = #SSN1 + #SSN2 + #SSN2 + #SSN4 + #SSN5 + #SSN6 + #SSN7 + #SSN8 + #SSN9
  LET #HASH_TOTAL = #HASH_TOTAL + #SSN_TOTAL
FROM PS_GVT_CAR_INTRFC A
end-select
end-procedure

!********************************************
begin-procedure file-writing
!********************************************

LET $B_HDR = 'BATCH HEADER FOR'
LET $B_TRL = 'BATCH TRAIL FOR'
LET $SPACE = ' '
LET $REC = 'RECORDS:'
LET $HASH = 'HASH TOTALS:'
LET $RECORD_CNT = EDIT(#RECORD_CNT,'99999999')
LET $RECORD_CNT = LPAD(LTRIM(RTRIM($RECORD_CNT,' '),' '),8,'0')
let $HASH_TOTAL = EDIT(#HASH_TOTAL,'999999999999999999999999')
LET $HASH_TOTAL = LPAD(LTRIM(RTRIM($HASH_TOTAL,' '),' '),24,'0')
#ifdef debuga
SHOW $RECORD_CNT
SHOW $HASH_TOTAL
#end-if
write 90 from $B_HDR:17 $AGENCY:6 $SPACE:2 $REC:9 $RECORD_CNT:8 $SPACE:1 $HASH:13 $HASH_TOTAL:24  ! $SPACE:640
begin-SELECT On-Error=SQL-Error
B.FEHB_NATURE
B.NAME
B.SSN
B.FEHB_EMPL_DOB
B.ADDRESS1
B.ADDRESS2
B.ADDRESS3
B.CITY
B.STATE
B.ZIP
B.SEX
B.MARITAL_STATUS
B.PHONE
B.BENEFIT_PLAN
B.FEHB_MEMBER_NAME1
B.FEHB_MEMBER_ZIP1
B.FEHB_MEMBER_DOB1
B.FEHB_MEMBER_SEX1
B.FEHB_MEM_RELATION1
B.FEHB_MEMBER_SSN1
B.FEHB_MEMBER_NAME2
B.FEHB_MEMBER_ZIP2
B.FEHB_MEMBER_DOB2
B.FEHB_MEMBER_SEX2
B.FEHB_MEM_RELATION2
B.FEHB_MEMBER_SSN2
B.FEHB_MEMBER_NAME3
B.FEHB_MEMBER_ZIP3
B.FEHB_MEMBER_DOB3
B.FEHB_MEMBER_SEX3
B.FEHB_MEM_RELATION3
B.FEHB_MEMBER_SSN3
B.FEHB_MEMBER_NAME4
B.FEHB_MEMBER_ZIP4
B.FEHB_MEMBER_DOB4
B.FEHB_MEMBER_SEX4
B.FEHB_MEM_RELATION4
B.FEHB_MEMBER_SSN4
B.FEHB_MEMBER_NAME5
B.FEHB_MEMBER_ZIP5
B.FEHB_MEMBER_DOB5
B.FEHB_MEMBER_SEX5
B.FEHB_MEM_RELATION5
B.FEHB_MEMBER_SSN5
B.FEHB_OTH_INSUR_IND
B.FEHB_MEDICAL_IND
B.FEHB_MEDICARE_A
B.FEHB_MEDICARE_B
B.FEHB_CHAMPUS
B.FEHB_OTH_INSURANCE
B.FEHB_PRESENT_ENROL
B.FEHB_EVENT_CODE
B.FEHB_EFFDT
B.FEHB_ACTION_DT
B.FEHB_ACTION_TIME
B.CPDF_AGENCY_CD
B.FEHB_PERSONNEL_ID
B.FEHB_PAYROLL_NBR
   WRITE 90 FROM &B.FEHB_NATURE:6 &B.NAME:41 &B.SSN:9 &B.FEHB_EMPL_DOB:8 &B.ADDRESS1:35 &B.ADDRESS2:35 &B.ADDRESS3:35
                 &B.CITY:23 &B.STATE:2 &B.ZIP:11 &B.SEX:1 &B.MARITAL_STATUS:1 &B.PHONE:10 &B.BENEFIT_PLAN:3
                 &B.FEHB_MEMBER_NAME1:35 &B.FEHB_MEMBER_ZIP1:11 &B.FEHB_MEMBER_DOB1:8 &B.FEHB_MEMBER_SEX1:1
                 &B.FEHB_MEM_RELATION1:1 &B.FEHB_MEMBER_SSN1:9 &B.FEHB_MEMBER_NAME2:35 &B.FEHB_MEMBER_ZIP2:11
                 &B.FEHB_MEMBER_DOB2:8 &B.FEHB_MEMBER_SEX2:1 &B.FEHB_MEM_RELATION2:1 &B.FEHB_MEMBER_SSN2:9
                 &B.FEHB_MEMBER_NAME3:35 &B.FEHB_MEMBER_ZIP3:11 &B.FEHB_MEMBER_DOB3:8 &B.FEHB_MEMBER_SEX3:1
                 &B.FEHB_MEM_RELATION3:1 &B.FEHB_MEMBER_SSN3:9 &B.FEHB_MEMBER_NAME4:35 &B.FEHB_MEMBER_ZIP4:11
                 &B.FEHB_MEMBER_DOB4:8 &B.FEHB_MEMBER_SEX4:1 &B.FEHB_MEM_RELATION4:1 &B.FEHB_MEMBER_SSN4:9
                 &B.FEHB_MEMBER_NAME5:35 &B.FEHB_MEMBER_ZIP5:11 &B.FEHB_MEMBER_DOB5:8 &B.FEHB_MEMBER_SEX5:1
                 &B.FEHB_MEM_RELATION5:1 &B.FEHB_MEMBER_SSN5:9 &B.FEHB_OTH_INSUR_IND:1 &B.FEHB_MEDICAL_IND:1
                 &B.FEHB_MEDICARE_A:1 &B.FEHB_MEDICARE_B:1 &B.FEHB_CHAMPUS:1 &B.FEHB_OTH_INSURANCE:35
                 &B.FEHB_PRESENT_ENROL:3 &B.FEHB_EVENT_CODE:2 &B.FEHB_EFFDT:8 &B.FEHB_ACTION_DT:8
                 &B.FEHB_ACTION_TIME:6 &B.CPDF_AGENCY_CD:4 &B.FEHB_PERSONNEL_ID:8 &B.FEHB_PAYROLL_NBR:8
                 $SPACE:9 $SPACE:9 $SPACE:55 $SPACE:15
FROM PS_GVT_CAR_INTRFC B
end-select

IF #RECORD_CNT = 0
LET $EMPTY_LIT = '999999'
WRITE 90 FROM $EMPTY_LIT:6 $RECASOFDATE:8
END-IF
WRITE 90 FROM $B_TRL:17 $AGENCY:6 $SPACE:2 $REC:9 $RECORD_CNT:8 $SPACE:1 $HASH:13 $HASH_TOTAL:24 ! $SPACE:640
do insert-history-table1
end-procedure



!********************************************
begin-procedure insert-history-table1
!********************************************

MOVE $RECORD_CNT TO $FEHB_TOTAL_UNITS
MOVE $HASH_TOTAL TO $FEHB_HASH_TOTAL
WHILE (#J <= #I)


  GET $BEN_PLAN FROM BENPLANS(#J)
  LET $BEN_PLAN = RTRIM(LTRIM($BEN_PLAN,' '),' ')

  IF $BEN_PLAN <> ''
     MOVE $BEN_PLAN TO $INS_HEALTH_PLAN

     DO insert-history-table

     LET #HST_SEQ_NBR = #HST_SEQ_NBR + 1
     LET $HST_SEQ_NBR = EDIT(#HST_SEQ_NBR,'999')
     LET $HST_SEQ_NBR = LTRIM(RTRIM($HST_SEQ_NBR,' '),' ')
     LET $HST_SEQ_NBR = LPAD($HST_SEQ_NBR,3,'0')!

  END-IF
  ADD 1 TO #J
END-WHILE
END-PROCEDURE

!********************************************
begin-procedure insert-history-table
!********************************************

 LET $ASOFDATE = ltrim(rtrim($ASOFDATE,' '),' ')
 LET $HST_SEQ_NBR = LTRIM(RTRIM($HST_SEQ_NBR,' '),' ')
 LET $HST_SEQ_NBR = LPAD($HST_SEQ_NBR,3,'0')
 LET $HST_SEQ_NBR = ltrim(rtrim($HST_SEQ_NBR,' '),' ')
 LET $INS_HEALTH_PLAN = ltrim(rtrim($INS_HEALTH_PLAN,' '),' ')
 LET $FROMDATE = ltrim(rtrim($FROMDATE,' '),' ')
 LET $THRUDATE = ltrim(rtrim($THRUDATE,' '),' ')
 LET $FEHB_TOTAL_UNITS = ltrim(rtrim($FEHB_TOTAL_UNITS,' '),' ')
 LET $FEHB_HASH_TOTAL = ltrim(rtrim($FEHB_HASH_TOTAL,' '),' ')
 LET $AGENCY = ltrim(rtrim($AGENCY,' '),' ')
 #ifdef debuga
 show 'insert-history-table'
 show '$ASOFDATE = ' $ASOFDATE
 show 'FEHB_SEQ_NBR = ' $HST_SEQ_NBR
 show 'FROMDATE = ' $FROMDATE
 show '$THRUDATE = ' $THRUDATE
 show '$FEHB_TOTAL_UNITS = ' $FEHB_TOTAL_UNITS
 show 'FEHB_HASH_TOTAL = ' $FEHB_HASH_TOTAL
 show '$INS_HEALTH_PLAN = ' $INS_HEALTH_PLAN
 show '$AGENCY = ' $AGENCY

 #end-if

begin-sql On-Error=SQL-Error
INSERT INTO PS_GVT_INT_HIST
         (ASOFDATE,FEHB_SEQ_NBR,FROMDATE,
          THRUDATE,FEHB_TOTAL_UNITS,FEHB_HASH_TOTAL,
          BENEFIT_PLAN,GVT_AGENCY)
   VALUES
         ($ASOFDATE,$HST_SEQ_NBR,$FROMDATE,
          $THRUDATE,$FEHB_TOTAL_UNITS,$FEHB_HASH_TOTAL,
          $INS_HEALTH_PLAN,$AGENCY)
end-sql

end-procedure

!****************************************************************
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#include 'datemath.sqc'
#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines
