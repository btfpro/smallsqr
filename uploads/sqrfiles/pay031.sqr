!**********************************************
!  PAY031:  Deductions & Benefits Register    *
!**********************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:09:18:19                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment

begin-Setup
  #Include 'ptpsl177.sqc'  !Printer and page-size initialization
end-setup

begin-program
  do Init-Report
  do Stdapi-Term
end-program

begin-procedure Init-Report
  move 'PAY031' to $ReportID

  do Init-DateTime
  do Init-Number
  do Stdapi-Init

  do Get-Report-Language   ! Procedure that decides the report language
                           ! and then calls 'Report-Translation' procedure
                           ! that reads the language dep. text.
  move $Pay031_ReportTitle to $ReportTitle

  do Array-Initialization
  move 'N' to  $CyclePrompts
  do Payroll-Report-Initialization
end-procedure

! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation
! Read from PAY031 and PAY1 program ids
   do Init_Report_Translation($ReportID,$Language_Cd)
   do Append_Report_Translation('PAY1')

   do Get_Field_Information ('PAY031', 'REPORT_TITLE', $Pay031_ReportTitle,  #dummy_width)
   do Get_Field_Information ('PAY031', 'DED_TOT',      $Pay031_Ded_Tot,      #dummy_width)
   do Get_Field_Information ('PAY031', 'DEDN',         $Pay031_Dedn,         #dummy_width)
   do Get_Field_Information ('PAY031', 'TYPE',         $Pay031_Type,         #dummy_width)
   do Get_Field_Information ('PAY031', 'CUR_BTX1',     $Pay031_Cur_BTx1,     #dummy_width)
   do Get_Field_Information ('PAY031', 'CUR_ATX1',     $Pay031_Cur_ATx1,     #dummy_width)
   do Get_Field_Information ('PAY031', 'CUR_TX1',      $Pay031_Cur_Tx1,      #dummy_width)
   do Get_Field_Information ('PAY031', 'CUR_NTX1',     $Pay031_Cur_NTx1,     #dummy_width)
   do Get_Field_Information ('PAY031', 'CAL_BNBSE1',   $Pay031_Cal_BnBse1,   #dummy_width)
   do Get_Field_Information ('PAY031', 'CUR_BTX2',     $Pay031_Cur_BTx2,     #dummy_width)
   do Get_Field_Information ('PAY031', 'CUR_ATX2',     $Pay031_Cur_ATx2,     #dummy_width)
   do Get_Field_Information ('PAY031', 'CUR_TX2',      $Pay031_Cur_Tx2,      #dummy_width)
   do Get_Field_Information ('PAY031', 'CUR_NTX2',     $Pay031_Cur_NTx2,     #dummy_width)
   do Get_Field_Information ('PAY031', 'CAL_BNBSE2',   $Pay031_Cal_BnBse2,   #dummy_width)

   do Get_Field_Information ('PAY1',   'GR_TOT',       $Pay1_Gr_Tot,         #dummy_width)
   do Get_Field_Information ('PAY1',   'CMP_TOT',      $Pay1_Cmp_Tot,        #dummy_width)
   do Get_Field_Information ('PAY1',   'PAYPER_TOT',   $Pay1_PayPer_Tot,     #dummy_width)
   do Get_Field_Information ('PAY1',   'PAYGRP_TOT',   $Pay1_PayGrp_Tot,     #dummy_width)
   do Get_Field_Information ('PAY1',   'EMP_ID',       $Pay1_Emp_Id,         #dummy_width)
   do Get_Field_Information ('PAY1',   'NAME',         $Pay1_Name,           #dummy_width)
end-procedure

begin-procedure Array-Initialization

  create-array name=Totals size=6 -
    field=TotalName:char          -
    field=total:number:6

  put $Pay1_Gr_Tot     into Totals(1) TotalName
  put $Pay1_Cmp_Tot    into Totals(2) TotalName
  put $Pay1_PayPer_Tot into Totals(3) TotalName
  put $Pay1_PayGrp_Tot into Totals(4) TotalName
  put $Pay031_Ded_Tot  into Totals(5) TotalName
end-procedure

begin-heading 12

  #Include 'stdhtr06.sqc'
  do Get-Deduction-Name
  move 'PLAN_TYPE' to $FieldName
  move $PlanType   to $FieldValue
  do Read-Translate-Table

  print $Pay031_Dedn       (+2,1)
  print $DedCd             (0,13)
  print $DeductionName     (0,20)
  print $Pay031_Type       (+1,1)
  print $PlanType          (0,13)
  print $XlatLongName      (0,20)


! The column start positions have been changed so that
! if a heading is split on two lines, it is made to start at the
! same col. on both lines.

  print $Pay031_Cur_BTx1   (+2,40)
  print $Pay031_Cur_ATx1   (0,59) 
  print $Pay031_Cur_Tx1    (0,79) 
  print $Pay031_Cur_NTx1   (0,94) 
  print $Pay031_Cal_BnBse1 (0,110)

  print $Pay1_Emp_Id       (+1,1)
  print $Pay1_Name         (0,14)
  print $Pay031_Cur_BTx2   (0,40)
  print $Pay031_Cur_ATx2   (0,59) 
  print $Pay031_Cur_Tx2    (0,79) 
  print $Pay031_Cur_NTx2   (0,94) 
  print $Pay031_Cal_BnBse2 (0,110)
end-heading


begin-procedure Report

begin-SELECT
A.COMPANY
A.PAY_END_DT
A.PAYGROUP
A.CHECK_DT

  print &A.Company      () on-break print=never level=1 procedure=Company-Change
  print &A.Pay_End_Dt   () on-break print=never level=2 procedure=PayEndDate-Change
  print &A.PayGroup     () on-break print=never level=3 procedure=PayGroup-Change

  move &A.Company       to $Company
  move &A.PayGroup      to $PayGroup
  move &A.Pay_End_Dt    to $PayEndDate
  move &A.Check_Dt      to $AsOfDate  !for included procedures
  do Get-Ded-Calc

FROM  PS_PAY_CALENDAR   A
WHERE [$SlctCalendar]
ORDER BY A.COMPANY,
         A.PAY_END_DT,
         A.PAYGROUP
end-SELECT

  move 1 to #changeLevel
  move 'Y' to $End
  do Print-Totals
end-procedure


begin-procedure Get-Ded-Calc

begin-SELECT
C.PLAN_TYPE
C.DEDCD
C.EMPLID
C.DED_CLASS
C.EMPL_RCD
C.DED_CUR
C.CALCULATED_BASE

  print &C.Plan_Type    () on-break print=never level=4 procedure=Deduction-Change
  print &C.DedCd        () on-break print=never level=4 procedure=Deduction-Change

  if &C.EmplID = $Prev_EmplID           ! keep non taxable and taxable
    print &C.EmplID          (+1,1)     ! on same page
  else
    NEXT-LISTING NEED = 2
    print &C.EmplID          (1,1)
    move &C.EmplID to $Prev_EmplID
    move &C.EmplID to $EmplID
    do Get-Employee-Name
  end-if

  print $Name               (0,14,20)

  do Format-Number(&C.Ded_Cur, $Ded_Cur, '99,999,999.99mi')

  evaluate &C.Ded_Class
    when = 'B'
      print $Ded_Cur   (0,38)
      ARRAY-ADD &C.Ded_Cur &C.Calculated_Base                -
            to Totals(5) total(0) total(4)
    when = 'A'
      print $Ded_Cur   (0,56)
      ARRAY-ADD &C.Ded_Cur &C.Calculated_Base                -
            to Totals(5) total(1) total(4)
    when = 'T'
    when = 'X'
    when = 'Z'
      print $Ded_Cur   (0,74)
      ARRAY-ADD &C.Ded_Cur &C.Calculated_Base                -
            to Totals(5) total(2) total(4)
    when = 'N'
    when = 'P'
    when = 'W'
    when = 'Y'
      print $Ded_Cur   (0,92)
      ARRAY-ADD &C.Ded_Cur  &C.Calculated_Base                -
            to Totals(5) total(3) total(4)
  end-evaluate

  do Format-Number(&C.Calculated_Base, $out, 'B9,999,999.99')
  print $out   (0,110)

  move &C.EmplID        to $EmplID
  move &C.Plan_Type     to $PlanType
  move &C.DedCd         to $DedCd
  move &C.Ded_Class     to $DedClass
  do Get-PayGroup-Data
  move $PayGroupCountry to $Country

FROM  PS_DED_CALC       C
WHERE C.COMPANY    = &A.Company
  AND C.PAYGROUP   = &A.PayGroup
  AND C.PAY_END_DT = &A.Pay_End_Dt
  AND C.COMPANY    = &A.Company
  AND C.DED_CLASS IN ('A', 'B', 'N', 'P', 'T', 'W', 'X', 'Y', 'Z')
ORDER BY C.PLAN_TYPE,
         C.DEDCD,
         C.EMPLID
end-SELECT

end-procedure


begin-procedure Company-Change
  move 2 to #changeLevel
  do Print-Totals
end-procedure

begin-procedure PayEndDate-Change
  move 3 to #changeLevel
  do Print-Totals
end-procedure

begin-procedure PayGroup-Change
  move 4 to #changeLevel
  do Print-Totals
end-procedure

begin-procedure Deduction-Change
  move 5 to #changeLevel
  do Print-Totals
end-procedure

begin-procedure Print-Totals
  move 5 to #totalRow

  while #totalRow >= #changeLevel

    if #totalRow  = 4
        new-page
    end-if

    move #totalRow to #rollRow
    subtract 1 from #rollRow
    get $TotalName from Totals(#totalRow) TotalName
    print $TotalName (+2,14)
    move 37 to #startCol
    move 0 to #i

    while #i <= 4
      get #total from Totals(#totalRow) total(#i)
      do Format-Number(#total, $out, '999,999,999.99mi')
      print $out (0,#startCol)
      add 18 to #startCol
      array-add #total to Totals(#rollRow) total(#i)
      put 0 into Totals(#totalRow) total(#i)
      add 1 to #i
    end-while

    subtract 1 from #totalRow
  end-while

  if $End = 'Y'
    do Reset
  end-if

  new-page

end-procedure

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getpgdta.sqc'  !Get-PayGroup-Data procedure
#Include 'getdednm.sqc'  !Get-Deduction-Name procedure
#Include 'getempnm.sqc'  !Get the Person's Name from the Personal_Data Record  *
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'payinit.sqc'   !Report Initialization and Timing
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
