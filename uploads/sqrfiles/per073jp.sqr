!***********************************************************************
! PER073JP :  Headcount Plan Listing                                   *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:58:44                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!                                                                      *
!***********************************************************************
!    *
!                                                 *
!***********************************************************************

Begin-setup

#define  REPORTID  'PER073JP'
#include 'setenv.sqc'      !Set environment
#include 'ptset02.sqc'     !Init printer and page sizeLandscape

end-setup


begin-program
    do Init-DateTime
    do Init-Number
    do Get-Current-DateTime
    do Define-Prcs-Vars
    do Init-Report
    do Process-Main
    do Update-Prcs-Run-Status
end-program

!*************************************************************************!
! Init-Report
!*************************************************************************!
begin-procedure Init-Report

!***********************************************************************
! Translations procedures & Strings Table retrievals.                  *
!***********************************************************************

  move {REPORTID} to $ReportID
  let #Error_Total = 0
  do Get-Run-Control-Parms
  do Get-Run-Cntl-Data
  do Get-Tree-Node


  do Init_Report_Translation ('PER073JP', $curr_language_cd)
  do Append_Report_Translation ('PER073JP')

  do Get_Field_Information ('PER073JP' ,'PER073JP_TITLE'    ,$PER073JP_Title          ,#DW)
  do Get_Field_Information ('PER073JP' ,'ORG_PLAN'          ,$org_plan_lbl            ,#DW)
  do Get_Field_Information ('PER073JP' ,'ORG_DATE'          ,$org_date_lbl            ,#DW)
  do Get_Field_Information ('PER073JP' ,'BUNIT'             ,$BUnit_lbl               ,#DW)
  do Get_Field_Information ('PER073JP' ,'TREE_NAME'         ,$Tree_Name_lbl           ,#DW)
  do Get_Field_Information ('PER073JP' ,'TREE_NODE'         ,$Tree_Node_lbl           ,#DW)
  do Get_Field_Information ('PER073JP' ,'DEPT'              ,$dept_lbl                ,#DW)
  do Get_Field_Information ('PER073JP' ,'LVL'               ,$Lvl_lbl                 ,#DW)  
  do Get_Field_Information ('PER073JP' ,'HEAD_COUNT'        ,$Head_Count_lbl          ,#DW)
  do Get_Field_Information ('PER073JP' ,'TOTAL'             ,$Total_lbl               ,#DW)  
  
  if &X.HC_TYPE_JPN = 'S'
   do Get_Field_Information ('PER073JP' ,'SUPV'             ,$HC_type_lbl             ,#DW)
  end-if
  
  if &X.HC_TYPE_JPN = 'J'
   do Get_Field_Information ('PER073JP' ,'JOB_CODE'         ,$HC_type_lbl             ,#DW)
  end-if  
  
  if &X.HC_TYPE_JPN = 'G'
   do Get_Field_Information ('PER073JP' ,'SAL_GRADE'        ,$HC_type_lbl             ,#DW)
  end-if  
  
  move $PER073JP_Title to $ReportTitle
  let $ReportDate            = $AsOfToday          ! Printed in header
  let $ReportTime            = $AsOfNow            ! Printed in header
  let #D_count = 1

end-procedure !Init-Report

!*************************************************************************!
! Get-Run-Cntl-Data
!*************************************************************************!
begin-procedure Get-Run-Cntl-Data
  
begin-SELECT

RC.BUSINESS_UNIT
RC.ORG_PLAN_JPN
RC.TREE_NAME
RC.TREE_NODE
RC.EFFDT_JPN
RC.SETID

  do get-org-plan-date

FROM
PS_RC_IDO_JPN RC

WHERE
RC.OPRID = $prcs_oprid
AND RC.RUN_CNTL_ID = $prcs_run_cntl_id

end-SELECT

end-procedure !Get-Run-Cntl-Data

!*************************************************************************!
! get-org-plan-date
!*************************************************************************!

begin-procedure get-org-plan-date

begin-select

X.ORG_DATE_JPN
X.HC_TYPE_JPN

 let $AsOfDate      = &X.ORG_DATE_JPN

FROM
PS_IDO_ORGPLAN_JPN X

WHERE
X.ORG_PLAN_JPN = &RC.ORG_PLAN_JPN

end-select

end-procedure !get-org-plan-date

!*************************************************************************!
! Get-Tree-Node
!*************************************************************************!
begin-procedure Get-Tree-Node

  let #tree_node_num = ''
  let #tree_node_num_end = ''
  
if rtrim(&RC.TREE_NODE, ' ') = ''
  let #tree_node_num = 0
  let #tree_node_num_end = 9999999999
else
begin-SELECT

A.TREE_NODE_NUM
A.TREE_NODE_NUM_END

  let #tree_node_num = &A.TREE_NODE_NUM
  let #tree_node_num_end = &A.TREE_NODE_NUM_END
  
FROM PSTREENODE A

WHERE A.SETID = &RC.SETID
AND A.TREE_NAME = &RC.TREE_NAME
AND A.TREE_NODE = &RC.TREE_NODE
AND A.EFFDT = &RC.EFFDT_JPN
end-SELECT

end-if

end-procedure !Get-Tree-Node

!*************************************************************************!
! Process-Main
!*************************************************************************!

begin-procedure Process-Main
if &X.HC_TYPE_JPN = 'S'
begin-select DISTINCT
B.TREE_LEVEL_NUM (,11,10) on-break level = 1
A.DEPTID (,31,10) on-break level = 2 after = print-total
A.SUPV_LVL_ID 
A.HEADCOUNT_JPN

 let #TREE_LEVEL_NUM   = &B.TREE_LEVEL_NUM

 ! Keys to be passed for Procedure Get-Department-Name
 let $BU               = &RC.BUSINESS_UNIT
 let $DeptID           = &A.DEPTID
 
 ! Keys to be passed for Procedure Get-Supvlvl-Name
 let $SUPV_LVL_ID      = &A.SUPV_LVL_ID
 !$SETID_DEPT will be resolved in Procedure get-setid-dept
 
 let #Head_Count_JPN   = &A.HEADCOUNT_JPN
 
 let #headcount_jpn1   = &A.HEADCOUNT_JPN
 add #headcount_jpn1 to #hc_total

 
 do Get-Department-Name
 do Get-Inactive-Dept
 do get-setid-supv
 do Get-Supvlvl-Name
 let $hc_type_JPN_data = $SupvlvlName
 do Print_Line

FROM PS_IDO_HC_DEPT_JPN A,
PSTREENODE B

WHERE A.ORG_PLAN_JPN = &RC.ORG_PLAN_JPN
AND A.BUSINESS_UNIT = &RC.BUSINESS_UNIT
AND B.EFFDT = &RC.EFFDT_JPN
AND B.SETID = &RC.SETID
AND B.TREE_NAME = &RC.TREE_NAME
AND B.TREE_NODE_NUM BETWEEN #tree_node_num AND #tree_node_num_end
AND A.DEPTID = B.TREE_NODE
ORDER BY B.TREE_LEVEL_NUM,A.DEPTID,A.SUPV_LVL_ID

end-select
end-if
  
if &X.HC_TYPE_JPN = 'J'
begin-select DISTINCT
D.TREE_LEVEL_NUM (,11,10) on-break level = 1
C.DEPTID (,31,10) on-break level = 2 after = print-total
C.JOBCODE  
C.HEADCOUNT_JPN

 let #TREE_LEVEL_NUM   = &D.TREE_LEVEL_NUM
 let #D_count = #D_count + 1
 ! Keys to be passed for Procedure Get-Department-Name
 let $BU               = &RC.BUSINESS_UNIT
 let $DeptID           = &C.DEPTID
 
 ! Keys to be passed for Procedure Get-Job-Title
 let $JOBCODE          = &C.JOBCODE
 let $SETID            = &RC.SETID
 let #Head_Count_JPN   = &C.HEADCOUNT_JPN
 
 let #headcount_jpn2   = &C.HEADCOUNT_JPN
 add #headcount_jpn2 to #hc_total
 
 do Get-Department-Name
 do Get-Inactive-Dept
 do Get-Job-Title
 let $hc_type_JPN_data = $JobTitle
 do Print_Line

FROM PS_IDO_HC_DEPT_JPN C,
PSTREENODE D

WHERE C.ORG_PLAN_JPN = &RC.ORG_PLAN_JPN
AND C.BUSINESS_UNIT = &RC.BUSINESS_UNIT
AND D.EFFDT = &RC.EFFDT_JPN
AND D.SETID = &RC.SETID
AND D.TREE_NAME = &RC.TREE_NAME
AND D.TREE_NODE_NUM BETWEEN #tree_node_num AND #tree_node_num_end
AND C.DEPTID = D.TREE_NODE
ORDER BY D.TREE_LEVEL_NUM,C.DEPTID,C.JOBCODE

end-select
end-if  

if &X.HC_TYPE_JPN = 'G'
begin-select DISTINCT
F.TREE_LEVEL_NUM (,11,10) on-break level = 1
E.DEPTID (,31,10) on-break level = 2 after = print-total
E.SAL_ADMIN_PLAN 
E.GRADE  
E.HEADCOUNT_JPN

 let #TREE_LEVEL_NUM   = &F.TREE_LEVEL_NUM
 
 ! Keys to be passed for Procedure Get-Department-Name
 let $BU               = &RC.BUSINESS_UNIT
 let $DeptID           = &E.DEPTID
 
 let #Head_Count_JPN   = &E.HEADCOUNT_JPN
 
 let #headcount_jpn3   = &E.HEADCOUNT_JPN
 add #headcount_jpn3 to #hc_total
 
 do Get-Department-Name
 do Get-Inactive-Dept
 let $hc_type_JPN_data = ltrim(rtrim(&E.SAL_ADMIN_PLAN,' '),' ')
 let $Grade = ltrim(rtrim(&E.GRADE,' '),' ')
 if $hc_type_JPN_data <> '' or $Grade <> '' 
  concat '/' with $hc_type_JPN_data
  concat $Grade with $hc_type_JPN_data
 end-if
 do Print_Line

FROM PS_IDO_HC_DEPT_JPN E,
PSTREENODE F

WHERE E.ORG_PLAN_JPN = &RC.ORG_PLAN_JPN
AND E.BUSINESS_UNIT = &RC.BUSINESS_UNIT
AND F.EFFDT = &RC.EFFDT_JPN
AND F.SETID = &RC.SETID
AND F.TREE_NAME = &RC.TREE_NAME
AND F.TREE_NODE_NUM BETWEEN #tree_node_num AND #tree_node_num_end
AND E.DEPTID = F.TREE_NODE
ORDER BY F.TREE_LEVEL_NUM,E.DEPTID,E.SAL_ADMIN_PLAN,E.GRADE

end-select
end-if

end-procedure !Process-Main

!*************************************************************************!
! get-setid-supv
!*************************************************************************!
begin-procedure get-setid-supv
begin-select
A5.SETID
 let $SETID_DEPT = &A5.SETID
FROM
PS_SET_CNTRL_REC A5
WHERE A5.RECNAME = 'SUPVSR_LVL_TBL'
AND A5.SETCNTRLVALUE = &RC.BUSINESS_UNIT
end-select
end-procedure !get-setid-dept

!*************************************************************************!
! Get-Inactive-Dept
!*************************************************************************!

begin-procedure Get-Inactive-Dept

begin-select
EFF_STATUS
FROM PS_DEPT_TBL 
WHERE SETID = $BU
AND DEPTID = $DeptID
AND EFFDT = (SELECT MAX(EFFDT) 
FROM PS_DEPT_TBL 
WHERE SETID = $BU
AND DEPTID = $DeptID
AND EFFDT <= &X.ORG_DATE_JPN)
end-select

end-procedure !Get-Inactive-Dept

!*************************************************************************!
! Print-Heading
!*************************************************************************!

begin-heading 10
#include 'stdhdgtr.sqc'

   print $org_plan_lbl (+1,1,19)
   print &RC.ORG_PLAN_JPN (0,20,4)
   print $org_date_lbl (0,50,11)
     do Convert-To-DTU-Date (&X.ORG_DATE_JPN, $ORG_DATE_JPN_out)
   print $ORG_DATE_JPN_out (0,61,10)
   print $BUnit_lbl (+1,1,15)
   print &RC.BUSINESS_UNIT (0,20,6)
   print $Tree_Name_lbl (+1,1,11)
   print &RC.TREE_NAME (0,20,19)
   print $Tree_Node_lbl (+1,1,6)
   print &RC.TREE_NODE (0,20,21)
   
   print $Lvl_lbl (+1,11,3)
   print $dept_lbl (0,31,50)
   print $HC_type_lbl (0,90,30)
   print $Head_Count_lbl (0,130,9)
   print '-' (+1,11,10) fill
   print '-' (0,31,44) fill
   print '-' (0,90,21) fill
   print '-' (0,130,9) fill
   print '' (+1,1,1)  

end-heading
!*************************************************************************!
! Print_Line
!*************************************************************************!
begin-procedure Print_Line

  print $DeptName (,45,30) on-break level = 3
  print $JOBCODE (0,90,30)
  print $SUPV_LVL_ID (0,90,50)
  print $hc_type_JPN_data (,100,30)
  print #Head_Count_JPN (,130,3) edit 99
  if &EFF_STATUS = 'I'
   print 'Inactive Department' (,134,20) on-break level = 4
  end-if
  position (+1)
  
end-procedure !Print_Line

!*************************************************************************!
! print-total
!*************************************************************************!

begin-procedure print-total
 print $Total_lbl (+1,125,6)
 print #hc_total (0,130,2) edit 99
 move 0 to #hc_total
 position (+2)
end-procedure !print-total

!*************************************************************************!
! SQC Files for called procedures
!*************************************************************************!
#include 'prcsdef.sqc'       !Update Process Request variable declare
#include 'prcsapi.sqc'       !Update Process Request API
#include 'hrsecty.sqc'       !Get SQR Security parameters
#include 'curdttim.sqc'      !Get-Current-DateTime procedure
#include 'datetime.sqc'      !Routines for date and time formatting
#include 'number.sqc'        !Routines to format numbers
#include 'sqrtrans.sqc'      !Translate SQR strings to given language
#include 'datemath.sqc'      !Date conversion procedures
#include 'getsupjp.sqc'     ! Get Supervisor Level Name
#Include 'getempnm.sqc'     ! Get Employee Name
#include 'getdptnm.sqc'     ! Get Department Name from the Department Table
#include 'getjobtl.sqc'      !Get Job Title from the Job Table