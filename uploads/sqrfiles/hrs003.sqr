!***************************************
!  HRS003:  Requisition Status Report  *
!***************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/09/26:23:42:38                                 
!       $Release:  HR9                                                 
!      $Revision:  104                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
Begin-Setup
#Include 'ptpsl177.sqc'  !Printer and page-size initialization
End-Setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-Heading 7
do Get_Field_Information ('HRS003',     'REPORT_TITLE',         $REPORTTITLE,   #DW)
  #Include 'stdhdgtr.sqc'
do Get_Field_Information ('HRS003',     'DEPARTMENT',           $DEPT,          #DW)
do Get_Field_Information ('HRS003',     'EXPENSE_TO_DATE1',     $EXPENSE1,      #DW)
do Get_Field_Information ('HRS003',     'EXPENSE_TO_DATE2',     $EXPENSE2,      #DW)
do Get_Field_Information ('HRS003',     'NBR_CANDIDATE1',       $CANDIDATE1,    #DW)
do Get_Field_Information ('HRS003',     'NBR_CANDIDATE2',       $CANDIDATE2,    #DW)
do Get_Field_Information ('HRS003',     'RECRUITER',            $RECRUIT,       #DW)
do Get_Field_Information ('HRS003',     'RECRUIT_CLOSE1',       $CLOSE1,        #DW)
do Get_Field_Information ('HRS003',     'RECRUIT_CLOSE2',       $CLOSE2,        #DW)
do Get_Field_Information ('HRS003',     'RECRUIT_OPEN1',        $OPEN1,         #DW)
do Get_Field_Information ('HRS003',     'RECRUIT_OPEN2',        $OPEN2,         #DW)
do Get_Field_Information ('HRS003',     'REQ_SUBTITLE',         $SUB,           #DW)
do Get_Field_Information ('HR',         'REQ_NBR1',             $REQ1,          #DW)
do Get_Field_Information ('HR',         'REQ_NBR2',             $REQ2,          #DW)
do Get_Field_Information ('HR',         'JOBCODE1',             $JOB1,          #DW)
do Get_Field_Information ('HR',         'JOBCODE2',             $JOB2,          #DW)
do Get_Field_Information ('HR',         'POSITION_NBR1',        $POS1,          #DW)
do Get_Field_Information ('HR',         'POSITION_NBR2',        $POS2,          #DW)
do Get_Field_Information ('HR',         'DATE_APPROVED1',       $DATE1,         #DW)
do Get_Field_Information ('HR',         'DATE_APPROVED2',       $DATE2,         #DW)
do Get_Field_Information ('HR',         'NEW_REPL1',            $REPL1,         #DW)
do Get_Field_Information ('HR',         'NEW_REPL2',            $REPL2,         #DW)
do Get_Field_Information ('HR',         'STATUS',               $STATUS,        #DW)
do Get_Field_Information ('HR',         'TITLE',                $TITLE,         #DW)

  string $DEPT ':' by '' into $deptadd
  print $deptadd           (3,1,11)
  let $HdgDeptID=RTRIM($DeptID,' ')
  print $HdgDeptID         (0,13)
  if $DeptID <> $PriorDeptID
    do Get-Department-Name
    print $DeptName               (0,+2)
    move $DeptID to $PriorDeptID
  end-if


  if #MultiCurr
    print $SUB                  (0,60,49)
    print $ReportCurr           (0,110)
  end-if

PRINT $REQ1                     (+3,1,11)
PRINT $JOB1                     (0,13,6)
!PRINT $POS1                     (0,20,19)
!PRINT $REPL1                    (0,40,37)
!PRINT $DATE1                    (0,78,10)
PRINT $OPEN1                    (0,89,11)
PRINT $CLOSE1                   (0,101,49)
PRINT $CANDIDATE1               (0,151,17)
PRINT $EXPENSE1                 (0,169)
PRINT $REQ2                     (+1,1,11)
PRINT $JOB2                     (0,13,6)
PRINT $POS1                     (0,20,8)
PRINT $STATUS                   (0,29,10)
!PRINT $REPL2                    (0,40,4)
PRINT $TITLE                    (0,45,32)
!PRINT $DATE2                    (0,78,10)
PRINT $OPEN2                    (0,89,11)
PRINT $CLOSE2                   (0,101,11)
PRINT $RECRUIT                  (0,113,37)
PRINT $CANDIDATE2               (0,151,17)
PRINT $EXPENSE2                 (0,169)
end-Heading

begin-procedure Init-Report

  move 'HRS003' to $ReportID
  move $BaseCurr to $ReportCurr
  move $BaseRtType to $ReportRtType
  move 'W' to $ReportMsgType  !Warning

  do Stdapi-Init

  if $prcs_process_instance = ''
    !No Prompt
  else
    do Select-Parameters
  end-if
do Init_Printer
do Get-Values
do Init_Report_Translation ($ReportID, $language_cd)
do Append_Report_Translation ('HR')
end-procedure

begin-procedure Get-Values

do Get-Current-Language
let $language_cd = $curr_language_cd

end-procedure

!***********************************************************************
!  PROC REPORT
!         Main Procedure
!***********************************************************************
BEGIN-PROCEDURE Process-Main
do Installation-Values

BEGIN-SELECT
A.BUSINESS_UNIT
  LET $BU = RTRIM(&A.BUSINESS_UNIT,' ')
A.DEPTID         ()  on-break print=never procedure=Dept-Change
  move &A.DeptID to $DeptID
A.HRS_JOB_OPENING_ID         (+1,1,15)
A.JOBCODE                  (0,13,7)
A.POSITION_NBR             (0,21,8)
  if $PositionMgmt <> 'N' and
     RTRIM(&A.Position_nbr, ' ') <> ''
     move &A.Position_Nbr to $Position_Nbr
     do Get-Position-Title
     print $PosName           (0,46,31)
  else
    move &A.JOBCODE TO $JOBCODE
    move ' ' to $SETID
    do Get-Job-Setid
    move &SCG.SETID to $SETID
    do Get-Job-Title
    print $JobTitle          (0,46,31)
  end-if

A.STATUS_CODE      
  move &A.STATUS_CODE to $JO_StatusCode

B.DESCRSHORT    
  move &B.DESCRSHORT to $JO_StatusDesc

  if $Curr_Language_Cd <> $PSOptions_Language_Cd
    do GetJOSTSLng
  end-if

  print $JO_StatusDesc         (0,30,10)


!A.REQ_NEW_POSN
!  if &A.Req_New_Posn = 'Y'
!    print 'New'            (0,41,4)
!  else
!    print 'Repl'           (0,41,4)
!  end-if

!A.AUTHORIZATION_DT           &A.Authorization_Dt

!  if not IsNULL(&A.Authorization_Dt)
!    do Format-DateTime(&A.Authorization_Dt, $out, {DEFDATE}, '', '')
!    print  $out (0,78)
!  end-if

A.OPEN_DT           &A.Open_Dt

  if not IsNULL(&A.Open_Dt)
    do Format-DateTime(&A.Open_Dt, $out, {DEFDATE}, '', '')
    print $out  (0,89)
  end-if

A.CLOSE_DT           &A.Close_Dt

  if not IsNULL(&A.Close_Dt)
    do Format-DateTime(&A.Close_Dt, $out, {DEFDATE}, '', '')
    print $out (0,100)
  end-if

A.RECRUITER_ID          &A.RECRUITER_ID
  let $EMPLID = &A.RECRUITER_ID
  let $EMPLID = RTRIM($EMPLID, ' ')
  DO Get-Employee-Name
  PRINT $Name                      (0,113,40)

  do Get-NumCandidates
  do Format-Number(&NumCandidates, $out, '9999')
  print $out (0,151)

  do Get-Expenses
  do Format-Number(#TotalExpense, $out, '999999999999.99')
  print $out (0,162)
  move 0 to #TotalExpense

 FROM PS_HRS_JO_I A,
      PS_HRS_STS_JO_VW B
WHERE A.STATUS_CODE = B.STATUS_CODE
ORDER BY A.DEPTID, A.HRS_JOB_OPENING_ID
END-SELECT
END-PROCEDURE


!***********************************************************************
!  PROC Inatallation-Values
!***********************************************************************

BEGIN-PROCEDURE Installation-Values

begin-SELECT
I.POSITION_MGMT
   move &I.POSITION_MGMT to $PositionMgmt
FROM PS_INSTALLATION I
end-SELECT

END-PROCEDURE


!***********************************************************************
!  PROC GetJOSTSLng
!***********************************************************************

BEGIN-PROCEDURE GetJOSTSLng

BEGIN-SELECT

C.DESCRSHORT   
  move &C.DESCRSHORT to $JO_StatusDesc

FROM PS_HRS_STS_JO_LVW C
WHERE C.STATUS_CODE = $JO_StatusCode

END-SELECT

END-PROCEDURE


!***********************************************************************
!  PROC Get-NumCandidates
!***********************************************************************

BEGIN-PROCEDURE Get-NumCandidates
BEGIN-SELECT

COUNT(*) &NumCandidates

 FROM PS_HRS_RCMNT_I C
WHERE C.HRS_JOB_OPENING_ID = &A.HRS_JOB_OPENING_ID
END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC Get-Expenses
!***********************************************************************

BEGIN-PROCEDURE Get-Expenses
BEGIN-SELECT

E.EXPENSE_AMT
E.CURRENCY_CD
E.CHARGE_DT

    if #MultiCurr and &E.Currency_Cd <> $ReportCurr
      do ConvertCurrency(&E.Expense_Amt,&E.Currency_Cd,$ReportCurr
                         $ReportRtType,&E.Charge_Dt,#Expense_Amt,
                         $ReportMsgType)
      let #TotalExpense = #TotalExpense + #Expense_Amt
    else
      let #TotalExpense = #TotalExpense + &E.Expense_Amt
    end-if

 FROM PS_HRS_JO_EXP_I E
WHERE E.HRS_JOB_OPENING_ID = &A.HRS_JOB_OPENING_ID
END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC Dept-Change
!***********************************************************************

BEGIN-PROCEDURE Dept-Change
  new-page
END-PROCEDURE

!***********************************************************************
!  PROC Get-Job-Setid
!***********************************************************************

BEGIN-PROCEDURE Get-Job-Setid
BEGIN-SELECT
SCG.SETID
FROM PS_SET_CNTRL_GROUP SCG
WHERE SETCNTRLVALUE = $BU
  AND REC_GROUP_ID = 'HR_02'
END-Select
END-PROCEDURE



#include 'prcslng.sqc'   !Get language code
#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines

#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getposnm.sqc'  !Get-Position-Name procedure
#Include 'getempnm.sqc'  !Get-Employee-Name and Get-Applicant-Name 
#Include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
