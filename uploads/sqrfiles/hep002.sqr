!***********************************************************************
! HEP002: Employees with Late Reviews                                  *
!         ePerformance Management - Monitoring EE Reviews              *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:13:18:17                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!                                                                      *
! HEP002 reports all employees with late reviews.                      *
!       Parameters:                                                    *
!               Group ID = $gb_group_id                                *
!               Group as of date = $gb_effdt                           *
!               Review Type = $ep_review_type1                         *
!               Group version number                                   *
!                                                                      *
! If no review type is entered, then all reviews type are reported     *
!                                                                      *
!***********************************************************************


#Include 'setenv.sqc'   !Set environment

Begin-Setup
  #Include 'ptset02.sqc'  !Printer and Page-Size Landscape Initialization
End-Setup

#define col_sep                 1       !Column Separator
#define col_sep_eight           8       !Column Separator

#define col_group_id_lbl        15      !Group ID label
#define col_group_id_value      10      !Group ID value
#define col_asofdate_lbl        15      !As Of Date label
#define col_review_type_lbl     15      !Review Type label

#define col_emp_name            35      !Employee Name
#define col_emp_id              10      !Employee ID
#define col_emp_rcd             10      !Employee Record Number
#define col_dep_id              10      !Department ID
#define col_dep_descr           25      !Department Description
#define col_manager_id          15      !Manager ID
#define col_manager_name        35      !Manager Name
#define col_review_status       15      !Review Status
#define col_due_date            10      !Due Date

!***********************************************************************
! Program
!***********************************************************************

Begin-Program
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-program

!***********************************************************************
! Heading
!***********************************************************************

begin-heading 8

#include 'stdhdg01.sqc'         !Print Standard Heading #1 for printed reports.

print $EP_GROUP_ID_LBL (+1,1,{col_group_id_lbl})
print $gb_group_id     (0,+{col_sep},{col_group_id_value})
print $EP_ASOFDATE_LBL (0,+{col_sep_eight},{col_asofdate_lbl})
        do Format-DateTime($gb_effdt, $out01, {DEFDATE}, '', '')
print $out01             (0,+{col_sep})

print $EP_REVIEW_TYPE  (+1,1,{col_review_type_lbl})
print $ep_review_type1 (0,+{col_sep})

print $NAME_LBL          (+2,1,{col_emp_name})
print $EMPLID_LBL        (0,+{col_sep},{col_emp_id})
print $EMPL_RCD_LBL      (0,+{col_sep},{col_emp_rcd})
print $DEPARTMENT_LBL    (0,+{col_sep},{col_dep_id})
print $EP_DEPT_DESCR_LBL (0,+{col_sep},{col_dep_descr})
print $MANAGER_LBL       (0,+{col_sep},{col_manager_id})
print $MANAGER_NAME      (0,+{col_sep},{col_manager_name})
print $EP_REVIEW_STATUS  (0,+{col_sep},{col_review_status})
print $EP_DUE_DT         (0,+{col_sep},{col_due_date})

print '='                (+1,1,{col_emp_name})              Fill
print '='                (0,+{col_sep},{col_emp_id})        Fill
print '='                (0,+{col_sep},{col_emp_rcd})       Fill
print '='                (0,+{col_sep},{col_dep_id})        Fill
print '='                (0,+{col_sep},{col_dep_descr})     Fill
print '='                (0,+{col_sep},{col_manager_id})    Fill
print '='                (0,+{col_sep},{col_manager_name})  Fill
print '='                (0,+{col_sep},{col_review_status}) Fill
print '='                (0,+{col_sep},{col_due_date})      Fill


End-Heading


!***********************************************************************
! Init Report
!***********************************************************************

Begin-Procedure Init-Report

  move 'HEP002' to $ReportID

  do Stdapi-Init

  do Get-Language-Codes                         ! Get-Language-Codes, which is resolved in prcslng.sqc
  let $language_cd = $CURR_LANGUAGE_CD          ! retrieves run control lang code and psoptions lang code

  !if $language_cd     = 'ENG'                   ! $ReportDateType controls date format,
  !     let $ReportDateType   = '0'              ! which is resolved in datetime.sqc
  !else                                          ! USA uses date format of MM/DD/YYYY
  !     let $ReportDateType   = '1'              ! the rest uses date format DD/MM/YYYY
  !end-if

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime

  do Init_Report_Translation($ReportID, $Language_cd)

  do Append_Report_Translation($ReportID)

  do Get_Field_Information ($ReportID, 'REPORT_TITLE_LBL', $ReportTitle, #DW)

  if IsBlank($prcs_process_instance)
        !No prompt
  else
        do select-parameters

  end-if

 do Init_Printer

End-Procedure


!***********************************************************************
! Get Values
!***********************************************************************

Begin-Procedure Get-Values

  do Get-HEP002-Parm

End-Procedure

!***********************************************************************
!  Main: Creates the Group Member List Report
!***********************************************************************

begin-procedure Process-Main
        do Get-Translat-Info
        if IsBlank($ep_review_type1)
            let $where_clause = ''
        else
            let $where_clause = 'AND AA.EP_REVIEW_TYPE = ''' || $EP_REVIEW_TYPE1 || ''''
        end-if

        do Retrieve-GrpBd-all-Review-Type
end-procedure


!***********************************************************************
!  Gets the strings printed in this report (Globalization)
!***********************************************************************

begin-procedure Get-Translat-Info

  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation('HEP002')

  do Get_Field_Information ('HEP002', 'REPORT_TITLE_LBL',       $REPORT_TITLE_LBL,      #DW)
  do Get_Field_Information ('HEP002', 'EP_GROUP_ID_LBL',        $EP_GROUP_ID_LBL,       #DW)
  do Get_Field_Information ('HEP002', 'EP_ASOFDATE_LBL',        $EP_ASOFDATE_LBL,       #DW)
  do Get_Field_Information ('HEP002', 'EP_REVIEW_TYPE',         $EP_REVIEW_TYPE,        #DW)

  do Get_Field_Information ('HEP002', 'NAME_LBL',               $NAME_LBL,              #DW)
  do Get_Field_Information ('HEP002', 'EMPLID_LBL ',            $EMPLID_LBL,            #DW)
  do Get_Field_Information ('HEP002', 'EMPL_RCD_LBL',           $EMPL_RCD_LBL,          #DW)
  do Get_Field_Information ('HEP002', 'DEPARTMENT_LBL',         $DEPARTMENT_LBL,        #DW)
  do Get_Field_Information ('HEP002', 'EP_DEPT_DESCR_LBL',      $EP_DEPT_DESCR_LBL,     #DW)
  do Get_Field_Information ('HEP002', 'EP_REVIEW_STATUS',       $EP_REVIEW_STATUS,      #DW)
  do Get_Field_Information ('HEP002', 'EP_DUE_DT',              $EP_DUE_DT,             #DW)
  do Get_Field_Information ('HEP002', 'MANAGER_LBL',            $MANAGER_LBL,           #DW)
  do Get_Field_Information ('HEP002', 'MANAGER_NAME',           $MANAGER_NAME,          #DW)


  do Get_Field_Information ('HEP002','EP_SBTOT_LAPPR_LBL',      $EP_SBTOT_LAPPR_LBL,    #DW)
  do Get_Field_Information ('HEP002','EP_TOTAL_LAPPR_LBL',      $EP_TOTAL_LAPPR_LBL,    #Late_lbl)
  do Get_Field_Information ('HEP002','EP_TOTAL_GRP_LBL',        $EP_TOTAL_GRP_LBL,      #Inc_lbl)


End-Procedure


!***********************************************************************
! Procedure Retrieve Group Build
!***********************************************************************

Begin-Procedure Retrieve-GrpBd-all-Review-Type

Begin-SELECT
AA.EP_REVIEW_TYPE ()   On-Break
                PRINT=never
                SAVE=$ep_review_type_old
                AFTER=Review-Type-Change


JJ.EMPLID
NN.NAME
JJ.EMPL_RCD
JJ.EFFDT
JJ.SETID_DEPT
JJ.DEPTID
DTT.DESCR
DTT.EFFDT
AA.EP_REVIEW_STATUS
  move 'EP_REVIEW_STATUS'  to $FieldName
  move &AA.EP_REVIEW_STATUS to $FieldValue
  do Read-Translate-Table
  let $ep_review_status1 = $XlatShortName 
AA.EP_APPRAISAL_ID
AA.EP_MANAGER_ID


        let $name              = &NN.NAME
        let $emplid            = &JJ.EMPLID
        let #empl_rcd          = &JJ.EMPL_RCD
        let $SETID_DEPT        = &JJ.SETID_DEPT
        let $deptid            = &JJ.DEPTID
        let $dep_effdt         = &DTT.EFFDT        
        let $ep_review_type1   = &AA.EP_REVIEW_TYPE
        let $ep_reviewer_id    = &AA.EP_MANAGER_ID
   
        let $deptname = &DTT.DESCR
        if $Curr_Language_cd <> $PSoptions_language_cd
        do Get-Department-Lang
        end-if

        add 1 to #group_total
        
        do Get-Manager-Name
        do Get-Late-Reviews1
           
FROM    PS_JOB            JJ,
        PS_PERSON_NAME    NN,
        PS_DEPT_TBL       DTT,
        PS_EP_APPR        AA,        
        PS_GB_GRP_RES_TBL GG

WHERE   GG.GB_GROUP_ID  = $gb_group_id
AND     GG.VERSIONGBQDM = #versiongbqdm
AND     GG.JOB_EFFDT             = (SELECT MAX(JOB_EFFDT)
                                   FROM PS_GB_GRP_RES_TBL
                                   WHERE GB_GROUP_ID  = GG.GB_GROUP_ID 
                                     AND VERSIONGBQDM = GG.VERSIONGBQDM 
                                     AND EMPLID       = GG.EMPLID
                                     AND EMPL_RCD     = GG.EMPL_RCD
                                     AND JOB_EFFDT   <= $gb_effdt)
AND     GG.JOB_EFFSEQ            = (SELECT MAX(JOB_EFFSEQ)
                                   FROM PS_GB_GRP_RES_TBL
                                   WHERE GB_GROUP_ID  = GG.GB_GROUP_ID 
                                     AND VERSIONGBQDM = GG.VERSIONGBQDM 
                                     AND EMPLID       = GG.EMPLID
                                     AND EMPL_RCD     = GG.EMPL_RCD
                                     AND JOB_EFFDT    = GG.JOB_EFFDT)
AND     JJ.EMPLID               = GG.EMPLID
AND     JJ.EMPL_RCD             = GG.EMPL_RCD
AND     JJ.EFFDT                = GG.JOB_EFFDT
AND     JJ.EFFSEQ               = GG.JOB_EFFSEQ
AND     JJ.EMPL_STATUS          IN ('A','L','P','S','W')

AND     AA.EP_REVIEW_STATUS NOT IN ('CO','CA')
AND     AA.EMPLID               = JJ.EMPLID
AND     AA.EMPL_RCD             = JJ.EMPL_RCD
[$where_clause]
AND     NN.EMPLID               = AA.EMPLID
AND     DTT.SETID               = JJ.SETID_DEPT
AND     DTT.DEPTID              = JJ.DEPTID
AND     DTT.EFF_STATUS          = 'A'
AND     DTT.EFFDT               = (SELECT MAX(D_EDD.EFFDT)
                                FROM PS_DEPT_TBL D_EDD
                                WHERE D_EDD.SETID  = DTT.SETID
                                AND D_EDD.DEPTID   = DTT.DEPTID
                                AND D_EDD.EFFDT <= JJ.EFFDT)

ORDER BY AA.EP_REVIEW_TYPE,
         NN.NAME ASC           

End-SELECT

!If no reviews were selected, print out total lines
if $ep_review_type_old = ''
  print $EP_TOTAL_LAPPR_LBL  (+2,1,#Late_lbl)
  print '0' (0,+2)
  print $EP_TOTAL_GRP_LBL (+1,1,#Inc_lbl)
  print '0' (0,+2)
end-if

End-Procedure

!***********************************************************************
!  Get the Manager's Name
!***********************************************************************
Begin-Procedure Get-Manager-Name

Begin-Select
MN.NAME
   let $Reviewer_Name     = &MN.NAME
FROM  PS_PERSON_NAME MN
WHERE MN.EMPLID = $ep_reviewer_id
End-Select

End-Procedure

!***********************************************************************
! Get Late Reviews for already created evaluations
!***********************************************************************
Begin-Procedure Get-Late-Reviews1

   let $ep_due_dt1     = ''
   let $ep_reviewer_id = ''
   
Begin-Select
R1.EP_DUE_DT
   let $ep_due_dt1     = &R1.EP_DUE_DT
FROM  PS_EP_APPR_ROLE   R1
WHERE R1.EP_APPRAISAL_ID = &AA.EP_APPRAISAL_ID
AND   R1.EP_ROLE         = 'M'
AND   R1.EP_DUE_DT       < $AsOfToday
End-Select

if $ep_due_dt1 = ''
  do Get-Late-Reviews2
end-if

if $ep_due_dt1 <> ''
  add 1 to #review_type_subtotal
  do Print-Group-Build-Data
end-if

End-Procedure

!***********************************************************************
! Get Late Reviews for evaluations not yet created
!***********************************************************************
Begin-Procedure Get-Late-Reviews2

Begin-Select
R2.EP_DUE_DT
   let $ep_due_dt1 = &R2.EP_DUE_DT
FROM  PS_EP_APPR_PARTIC   R2
WHERE R2.EP_APPRAISAL_ID = &AA.EP_APPRAISAL_ID
AND   R2.EP_ROLE         = 'M'
AND   R2.EP_DUE_DT       < $AsOfToday
End-Select

End-Procedure

!***********************************************************************
!  Print Employees without Review from Group Build Data
!***********************************************************************

begin-procedure Print-Group-Build-Data

        print $name             (+1,1,{col_emp_name})
        print $emplid           (0,+{col_sep},{col_emp_id})
        print #empl_rcd         (0,+{col_sep},{col_emp_rcd}) EDIT 999
        print $deptid           (0,+{col_sep_eight},{col_dep_id})
        print $deptname         (0,+{col_sep},{col_dep_descr})
        print $ep_reviewer_id   (0,+{col_sep},{col_manager_id})
        print $Reviewer_name    (0,+{col_sep},{col_manager_name})
        print $ep_review_status1 (0,+{col_sep},{col_review_status})

        do Format-DateTime($ep_due_dt1, $out02, {DEFDATE}, '', '')

        print $out02             (0,+{col_sep},{col_due_date})


end-procedure


!***********************************************************************
! Review Type Change
!***********************************************************************

Begin-Procedure Review-Type-Change

 print $EP_TOTAL_LAPPR_LBL  (+2,1,#Late_lbl)
 do Format-Number(#review_type_subtotal, $out, '999,999,999')
 print $out (0,+2)

 move 0 to #review_type_subtotal
 
 print $EP_TOTAL_GRP_LBL (+1,1,#Inc_lbl)
 do Format-Number(#group_total, $out, '999,999,999')
 print $out (0,+2)
 move 0 to #group_total

 If &AA.EP_REVIEW_TYPE  = $ep_review_type_old
   
   do Reset

 else

   new-page

 end-if

End-Procedure

!***********************************************************************
! Procedure:    Get-HEP002-Parm
!***********************************************************************

begin-procedure Get-HEP002-Parm

  let $gb_effdt         = &RUN_CNTL_EP.GB_EFFDT
  let $gb_group_id      = &RUN_CNTL_EP.GB_GROUP_ID
  let #versiongbqdm     = &RUN_CNTL_EP.VERSIONGBQDM
  let $ep_review_type1  = &RUN_CNTL_EP.EP_REVIEW_TYPE

end-procedure


!***********************************************************************
! Get Department Description - Lang
!***********************************************************************

begin-procedure Get-Department-Lang

begin-SELECT

DL.DESCR         &DL.DESCR

        if Not IsBlank(&DL.DESCR)
        move &DL.DESCR to $deptname
        end-if

FROM PS_DEPT_TBL_LANG DL
WHERE  DL.DEPTID              = $deptid
   AND DL.EFFDT               = $dep_effdt
   AND DL.SETID               = $SETID_DEPT
   AND DL.LANGUAGE_CD         = $CURR_LANGUAGE_CD
END-SELECT

END-PROCEDURE

!***********************************************************************
#Include 'eprnctl1.sqc'  !Get application run control parameters (select-parameters)
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Format-DateTime procedures
#Include 'number.sqc'    !Format-Number procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'useprntr.sqc'  !Indicate which printer to use for the report
#Include 'prcslng.sqc'   !Get $CURR_LANGUAGE_CD (RUN-CNTL lang) and $PSoptions_language_cd (PSOPTION lang)
#Include 'rellang.sqc'   !Get related language descriptions
#Include 'readxlat.sqc'  !Read the Translate Table
!***********************************************************************


