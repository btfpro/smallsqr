!***********************************************************************
!  CTX910ER:  Consolidated Listing of Reporting Exceptions             *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/11:15:49:32                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  885414                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !printer and page-size init
#Include 'ctxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure

begin-report
  do Init-Report
#ifdef PRCSSCHD
  do StdAPI-Term
#endif
end-report

begin-procedure Init-Report
  #ifdef PRCSSCHD
   do StdAPI-Init
  #endif
  move 'CTX910ER' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  move $Ctx910er_Title_cons_list to $ReportTitle

  display ''
  display 'Consolidated Listing of Reporting Exceptions'

  date-time () hh:mi:ss &t1
  display &t1

  do Get-Calendar-Year-Id
  do Init-DateTime
  do Init-Number


 do Initialization

  do Report-File-Create
  date-time () hh:mi:ss &t2
  display &t2
end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from CTX910ER  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('CTX910ER', 'TITLE_CONS_LIST' , $Ctx910er_Title_cons_list , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'COMPANY'         , $Ctx910er_Company         , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'EMPL_ID_NAME'    , $Ctx910er_Empl_id_name    , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'SIN'             , $Ctx910er_Sin             , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'WLP'             , $Ctx910er_Wlp             , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BUS_QIN_NUMBER'  , $Ctx910er_Bus_qin_number  , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'FORM'            , $Ctx910er_Form            , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'ERR_MSG'         , $Ctx910er_Err_msg         , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'TAX_YEAR'        , $Ctx910er_Tax_year        , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIS_SURNAME'     , $Ctx910er_Mis_surname     , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIS_FNAME'       , $Ctx910er_Mis_fname       , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIS_ADDRESS'     , $Ctx910er_Mis_address     , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIS_CITY'        , $Ctx910er_Mis_city        , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIS_COUNTRY'     , $Ctx910er_Mis_country     , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIS_PROV'        , $Ctx910er_Mis_prov        , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIS_POSTAL'      , $Ctx910er_Mis_postal      , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIS_LOCATION'    , $Ctx910er_Mis_location    , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIS_DEPT'        , $Ctx910er_Mis_dept        , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIS_SIN'         , $Ctx910er_Mis_sin         , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIS_TAXID'       , $Ctx910er_Mis_taxid       , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIS_WAGELS'      , $Ctx910er_Mis_wagels      , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIS_RPT_PROV'    , $Ctx910er_Rpt_prov        , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIS_RPT_ID'      , $Ctx910er_Rpt_id          , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX'             , $Ctx910er_Box             , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIS_TAXDEF'      , $Ctx910er_Mis_taxdef      , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'AMT_NEG'         , $Ctx910er_amt_neg         , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'IS'              , $Ctx910er_is              , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'IS_LESS'         , $Ctx910er_is_less         , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX16_AMT'       , $Ctx910er_box16_amt       , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'AND_BOX17_AMT'   , $Ctx910er_and_box17_amt   , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX17_AMT'       , $Ctx910er_box17_amt       , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'EXCEEDS'         , $Ctx910er_exceeds         , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'PERC_OF_BOX26_AMT' , $Ctx910er_perc_box26_amt   , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX28C_BOX16'    , $Ctx910er_box28c_box16    , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX28C_BOX17'    , $Ctx910er_box28c_box17    , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX28C_BOX26'    , $Ctx910er_box28c_box26    , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MUST_BE_BLANK'   , $Ctx910er_must_be_blank   , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX26_NE_BOX14'  , $Ctx910er_box26_ne_box14  , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX18_AMT'       , $Ctx910er_box18_amt       , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX24_AMT'       , $Ctx910er_box24_amt       , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'EX_MAX_EIPREM'   , $Ctx910er_ex_max_eiprem   , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'EX_MAX_EIEARN'   , $Ctx910er_ex_max_eiearn   , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'NOT_EQ'          , $Ctx910er_not_eq          , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'PERC_OF_BOX24_AMT' , $Ctx910er_perc_box24_amt   , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'EI_EXEMP_BOX18'  , $Ctx910er_ei_exemp_box18  , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'EI_EXEMP_BOX24'  , $Ctx910er_ei_exemp_box24  , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'IS_NOT_EQ'       , $Ctx910er_is_not_eq       , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX24_EQ_BOX14'  , $Ctx910er_box24_eq_box14  , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'PERC_OF_BOX14_AMT' , $Ctx910er_perc_box14_amt   , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIN_EXEMPT'      , $Ctx910er_min_exempt      , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOTH_GRZERO'     , $Ctx910er_both_grzero     , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BUS_UNIT'        , $Ctx910er_bus_unit        , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX26_AMT'       , $Ctx910er_box26_amt       , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'GREATER_14AMT'   , $Ctx910er_greater_14amt   , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOXG_AMT'        , $Ctx910er_boxg_amt        , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'GREATER_BOXA'    , $Ctx910er_greater_boxa    , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MIS_PEN_NUM'     , $Ctx910er_mis_pen_num     , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'CPP_TXGRS_YTD'   , $Ctx910er_cpp_txgrs_ytd   , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'QPP_TXGRS_YTD'   , $Ctx910er_qpp_txgrs_ytd   , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'CPP_NL_EXEMPT_1' , $Ctx910er_cpp_nl_exempt_1 , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'CPP_NL_EXEMPT_2' , $Ctx910er_cpp_nl_exempt_2 , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'AMT_EXCEEDS_SIZE', $Ctx910er_amt_exceeds_size , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'AMOUNT'          , $Ctx910er_amount          , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX55_AMT'       , $Ctx910er_box55_amt       , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX28P_BOX55'    , $Ctx910er_box28p_box55    , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX56_AMT'       , $Ctx910er_box56_amt       , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX28P_BOX56'    , $Ctx910er_box28p_box56    , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'EX_MAX_PPIPPREM' , $Ctx910er_ex_max_ppipprem , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'EX_MAX_PPIPEARN' , $Ctx910er_ex_max_ppipearn , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'PERC_OF_BOX56_AMT' , $Ctx910er_perc_box56_amt, #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX_H_AMT'       , $Ctx910er_boxH_amt        , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX_I_AMT'       , $Ctx910er_boxI_amt        , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'PERC_OF_BOXI_AMT', $Ctx910er_perc_boxI_amt   , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'GREATER_BOX71AMT', $Ctx910er_greater_71amt   , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'MUST_BE_ZERO'    , $Ctx910er_must_be_zero    , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX26_BOX16'     , $Ctx910er_box26_box16     , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX26_BOX17'     , $Ctx910er_box26_box17     , #dummy_width)
   do Get_Field_Information ('CTX910ER', 'BOX24_BOX18'     , $Ctx910er_box24_box18     , #dummy_width)

end-procedure

begin-procedure Initialization
  do Get-Current-DateTime
  move '1' to $MMLZero
  move '1' to $Year4
  do Format-DateTime($AsOfToday, $910Date, {DEFYMD},'','')

  move $910Date to $AsOfYear xxxx   !extract the current year
  move $AsOfYear  to #AsOfYear
  move #AsOfYear  to #saveAsOfYear
  subtract 1    from #AsOfYear

  do Get-Can-Tax-Processing-Params

  move &TX.Balance_Year to $CalYear 9999
  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')

  if &TX.Balance_Year <> #AsOfYear and $Prcs_Process_Instance = ''
    display ''
    display 'Current Year is not one greater than Tax Reporting Year.'
    display 'Current Year is    ' noline
    display  #saveAsOfYear  9999
    display 'Tax Reporting Year ' noline
    display &TX.Balance_Year
    input $Answer maxlen=1 'Current Year is not one greater than Tax Reporting Year. Do you want to continue? (Y/N)'
    uppercase $Answer

    if $Answer <> 'Y'
      stop
    end-if

  end-if

   move 'Y' to $JobBegin

  do Array-Create
end-procedure

begin-heading 6
  #Include 'stdhdgtr.sqc'

  print $Ctx910er_Company                   (3,1)
  print $Company                            (0,+2)
  print $CompanyName                        (0,+2)
  let $TaxYear = $Ctx910er_Tax_year || $CalYear
  print $TaxYear                            (3,)  center
  print $Ctx910er_Empl_id_name              (6,1)
  print $Ctx910er_Sin                       (0,49)
  print $Ctx910er_bus_unit                  (0,65)
  print $Ctx910er_Wlp                       (0,83)
  print $Ctx910er_Bus_qin_number            (0,91)
  print $Ctx910er_Form                      (0,110)
  print $Ctx910er_Err_msg                   (0,116)

end-heading

begin-procedure Array-Create

  create-array name=AddTotals size=100
    field=TotBoxNum:char
    field=TotBoxAmt:number

end-procedure

begin-procedure Report-File-Create

do Initialize-Array
move 'N' to $Ctx910er_Err_Display

begin-SELECT
E.COMPANY
E.EMPLID
E.SIN
E.BUSINESS_UNIT
E.SLIP_SURNAME
E.SLIP_FIRST_NAME
E.ADDRESS1
E.CITY
E.PROVINCE
E.COUNTRY
E.POSTAL
E.LOCATION
E.DEPTID
E.SEQUENCE_NUMBER

  if $JobBegin = 'Y'
     move 'N' to $JobBegin
     move &E.Company to $Company
     do Get-Company-Data
  else
     if &E.Company <> $Company
       NEW-PAGE
       move &E.Company to $Company
       do Get-Company-Data
     end-if
  end-if

  let $Surname = substr(&E.SLIP_Surname, 1, 20)

  let $Surname = RTRIM($Surname, ' ')
  let $EmployeeName = $Surname || ', ' || &E.SLIP_First_Name

  if &E.EmplID <> $Emplid
   OR &E.Company <> $PriorCompany
     if $T4inProgress = 'Y'
        do Edit-Slip-Totals
     end-if

     if $T4AinProgress = 'Y'
        do Edit-Slip-Totals
     end-if

     if $RV1inProgress = 'Y'
        do Edit-Slip-Totals
     end-if

     if $RV2inProgress = 'Y'
        do Edit-Slip-Totals
     end-if

  end-if
   move 'Y' to $FirstEmployeeError
   move &E.Company to $PriorCompany
   move &E.EmplID to $EmplID
   move ' ' to $Form

   do Process-SLIP-ID-Records
   do Edit-Employee-Data

FROM PS_CAN_YE_EMPL  E
WHERE E.CALENDAR_YEAR = &TX.Balance_Year
  AND E.DELETE_RECORD <> 'Y'
ORDER BY E.COMPANY ASC, E.SLIP_SURNAME ASC, E.SLIP_FIRST_NAME ASC,
E.EMPLID ASC
end-SELECT

  if $Ctx910er_Err_Display = 'N'
    print '/* There is no error to report */' (+4,1)
  end-if

end-procedure

begin-procedure Initialize-Array

  move 0 to #i
  move 100 to #max_i
  move ' ' to $InitBox
  move 0 to #InitAmt

  while #i < #max_i
     put $InitBox #InitAmt into AddTotals(#i) TotBoxNum TotBoxAmt
     add 1 to #i
  end-while

end-procedure

begin-procedure Edit-Employee-Data

  move '' to $TaxformID
  move '' to $ReportingID

  do Validate-SIN

  let $SlipSurname = RTRIM(&E.SLIP_Surname, ' ')
  if $SlipSurname = ''
    move $Ctx910er_Mis_surname to $ErrorMsg
    do Print-Error-Line
  end-if

  let $SlipFirstName = RTRIM(&E.SLIP_First_Name, ' ')
  if $SlipFirstName = ''
    move $Ctx910er_Mis_fname to $ErrorMsg
    do Print-Error-Line
  end-if

  let $Street1 = RTRIM(&E.Address1, ' ')
  if $Street1 = ''
    move $Ctx910er_Mis_address to $ErrorMsg
    do Print-Error-Line
  end-if

  let $City = RTRIM(&E.City, ' ')
  if $City = ''
    move $Ctx910er_Mis_city to $ErrorMsg
    do Print-Error-Line
  end-if

  let $Country = RTRIM(&E.Country, ' ')
  if $Country = ''
    move $Ctx910er_Mis_country to $ErrorMsg
    do Print-Error-Line
  end-if

  let $Province = RTRIM(&E.Province, ' ')
  if ($Province = '') and (($Country = 'CAN') or ($Country = 'USA'))
    move $Ctx910er_Mis_prov to $ErrorMsg
    do Print-Error-Line
  end-if

  let $Zip = RTRIM(&E.POSTAL, ' ')
  if ($Zip = '') and (($Country = 'CAN') or ($Country = 'USA'))
    move $Ctx910er_Mis_postal to $ErrorMsg
    do Print-Error-Line
  end-if

  let $Location = RTRIM(&E.Location, ' ')
  if $Location = ''
    move $Ctx910er_Mis_location to $ErrorMsg
    do Print-Error-Line
  end-if

  let $DeptID = RTRIM(&E.DeptID, ' ')
  if $DeptID = ''
    move $Ctx910er_Mis_dept to $ErrorMsg
    do Print-Error-Line
  end-if

end-procedure

begin-procedure Validate-Sin

  let $SIN1 = substr(&E.SIN,1,1)
  let $SIN2 = substr(&E.SIN,2,1)
  let $SIN3 = substr(&E.SIN,3,1)
  let $SIN4 = substr(&E.SIN,4,1)
  let $SIN5 = substr(&E.SIN,5,1)
  let $SIN6 = substr(&E.SIN,6,1)
  let $SIN7 = substr(&E.SIN,7,1)
  let $SIN8 = substr(&E.SIN,8,1)
  let $SIN9 = substr(&E.SIN,9,1)


  move $SIN1 to #SIN1
  move $SIN2 to #SIN2
  move $SIN3 to #SIN3
  move $SIN4 to #SIN4
  move $SIN5 to #SIN5
  move $SIN6 to #SIN6
  move $SIN7 to #SIN7
  move $SIN8 to #SIN8
  move $SIN9 to #SIN9

  let #SIN2 = #SIN2 * 2
  let #SIN4 = #SIN4 * 2
  let #SIN6 = #SIN6 * 2
  let #SIN8 = #SIN8 * 2

  move #SIN2 to $SIN2 99
  move #SIN4 to $SIN4 99
  move #SIN6 to $SIN6 99
  move #SIN8 to $SIN8 99

  if length($Sin2) > 1
    let $SIN2a = substr($SIN2,1,1)
    let $SIN2b = substr($SIN2,2,1)
    move $SIN2a to #SIN2a
    move $SIN2b to #SIN2b
  else
    let #SIN2a = $SIN2
    let #SIN2b = 0
  end-if

  if length($Sin4) > 1
    let $SIN4a = substr($SIN4,1,1)
    let $SIN4b = substr($SIN4,2,1)
    move $SIN4a to #SIN4a
    move $SIN4b to #SIN4b
  else
    let #SIN4a = $SIN4
    let #SIN4b = 0
  end-if

  if length($Sin6) > 1
    let $SIN6a = substr($SIN6,1,1)
    let $SIN6b = substr($SIN6,2,1)
    move $SIN6a to #SIN6a
    move $SIN6b to #SIN6b
  else
    let #SIN6a = $SIN6
    let #SIN6b = 0
  end-if

  if length($Sin8) > 1
    let $SIN8a = substr($SIN8,1,1)
    let $SIN8b = substr($SIN8,2,1)
    move $SIN8a to #SIN8a
    move $SIN8b to #SIN8b
  else
    let #SIN8a = $SIN8
    let #SIN8b = 0
  end-if

  let #SIN2468    = #SIN2a + #SIN2b + #SIN4a + #SIN4b +
        #SIN6a + #SIN6b + #SIN8a + #SIN8b

  let #SIN1357    = #SIN1  + #SIN3  + #SIN5  + #SIN7

  let #SINALL     = #SIN1357 + #SIN2468

  let #Sin_mod = mod(#SINALL, 10)

  if #Sin_mod = 0
    let #Check_digit = #Sin_mod
  else
    let #Sin_mod = trunc((#SINALL / 10),0) * 10 + 10
    let #Check_digit = #Sin_mod - #SINALL
  end-if

  if #Check_digit = #Sin9
    let $Invalid_Sin = 'N'
  else
    let $Invalid_Sin = 'Y'
    move $Ctx910er_Mis_sin to $ErrorMsg
    do Print-Error-Line
    let $Pier_Errors = 'Y'
  end-if

  let #CkSIN = &E.SIN
  let $CkSIN = RTRIM(&E.SIN, ' ')
  if #CkSIN = 0 or
     $CkSIN = ''
        move $Ctx910er_Mis_sin to $ErrorMsg
        do Print-Error-Line
  end-if

end-procedure

begin-procedure Process-SLIP-ID-Records

begin-SELECT
S.TAXFORM_ID
S.WAGE_LOSS_PLAN
S.PROVINCE
S.REPORTING_ID
S.UI_EXEMPT
S.SEQUENCE_NUMBER
S.CAN_YE_SLIP_SEQ


   if $Form = 'T4' AND
      (&S.Taxform_ID <> 'T' or
      (&S.Taxform_ID = 'T' and &S.Wage_Loss_Plan <> $WageLossPlan))
       do Edit-Slip-Totals
   end-if

   if $Form = 'T4A' AND
      (&S.Taxform_ID <> 'A' or
      (&S.Taxform_ID = 'A' and &S.Wage_Loss_Plan <> $WageLossPlan))
       do Edit-Slip-Totals
   end-if

   if $Form = 'RL-1' AND
      (&S.Taxform_ID <> 'R' or
      (&S.Taxform_ID = 'R' and &S.Wage_Loss_Plan <> $WageLossPlan))
       do Edit-Slip-Totals

       do RV1-Edits
       do Initialize-RV1-Boxes
   end-if

   if $Form = 'RL-2' AND
      (&S.Taxform_ID <> 'V' or
      (&S.Taxform_ID = 'V' and &S.Wage_Loss_Plan <> $WageLossPlan))
       do Edit-Slip-Totals
   end-if


   move 'Y' to $FirstSlipError

   evaluate &S.Taxform_ID
     when = 'T'
       move 'T4' to $Form
       do Initialize-T4-Boxes
     when = 'A'
       move 'T4A' to $Form
     when = 'R'
       move 'RL-1' to $Form
     when = 'V'
       move 'RL-2' to $Form
   end-evaluate

   do Edit-Slip-ID-Data
   do Process-Detail-Records

   if $Form = 'T4'
      do Pier-Edits
      do Check-For-Pension-Reg-No
   end-if

FROM PS_CAN_YE_SLIP  S
WHERE S.COMPANY = &E.Company
  AND S.EMPLID = &E.EmplID
  AND S.CALENDAR_YEAR = &TX.Balance_Year
  AND S.SEQUENCE_NUMBER = &E.Sequence_Number
  AND S.YE_SLIP_PROCESS <> 'D'
ORDER BY S.TAXFORM_ID ASC, S.WAGE_LOSS_PLAN ASC , S.CAN_YE_SLIP_SEQ ASC

end-SELECT
end-procedure

begin-procedure Edit-Slip-ID-Data

  if $FirstSlipError = 'Y'
    move $Form to $TaxformID
    move &S.Reporting_ID to $ReportingID
  else
    move '' to $TaxformID
    move '' to $ReportingID
  end-if

  let $TaxformID = RTRIM(&S.Taxform_ID, ' ')
  if $TaxformID = ''
    move $Ctx910er_Mis_taxid to $ErrorMsg
    do Print-Error-Line
  end-if

  let $WageLossPlan = RTRIM(&S.Wage_Loss_Plan, ' ')
  if $WageLossPlan = ''
    move $Ctx910er_Mis_wagels to $ErrorMsg
    do Print-Error-Line
  end-if

  let $Prov = RTRIM(&S.Province, ' ')
  if $Prov = ''
    move $Ctx910er_Rpt_prov to $ErrorMsg
    do Print-Error-Line
  end-if

  let $ReportingID = RTRIM(&S.Reporting_ID, ' ')
  if $ReportingID = ''
    move $Ctx910er_Rpt_id to $ErrorMsg
    do Print-Error-Line
  end-if

end-procedure

begin-procedure Process-Detail-Records

begin-SELECT
D.BOX
D.CAN_YE_BOX_TEXT
D.CAN_YE_BOX_AMT

   move 'N' to $BoxPresent
   if rtrim(&D.Box, ' ') <> '28C' and rtrim(&D.Box, ' ') <> '28U' and
      rtrim(&D.Box, ' ') <> '28c' and rtrim(&D.Box, ' ') <> '28u' and
      rtrim(&D.Box, ' ') <> '28P' and rtrim(&D.Box, ' ') <> '28p'
     do Verify-Box-Number
     if $BoxPresent = 'N'
   let $ErrorMsg = $Ctx910er_Box || &D.Box || $Ctx910er_Mis_taxdef
       do Print-Error-Line
     end-if
   end-if

   if &S.Taxform_ID = 'T'
     do Process-T4-Data
   end-if

   if &S.Taxform_ID = 'A'
     do Process-T4A-Data
   end-if

   if &S.Taxform_ID = 'R'
     do Process-RV1-Data
   end-if

   if &S.Taxform_ID = 'V'
     do Process-RV2-Data
   end-if


FROM PS_CAN_YE_DETAIL  D
WHERE D.COMPANY = &E.Company
  AND D.EMPLID  = &E.EmplID
  AND D.CALENDAR_YEAR = &TX.Balance_Year
  AND D.TAXFORM_ID = &S.Taxform_ID
  AND D.WAGE_LOSS_PLAN = &S.Wage_Loss_Plan
  AND D.PROVINCE = &S.Province
  AND D.SEQUENCE_NUMBER = &S.Sequence_Number
  AND D.CAN_YE_SLIP_SEQ = &S.Can_YE_Slip_Seq

end-SELECT

end-procedure

begin-procedure Verify-Box-Number

   move '' to $BoxEdit

 ! let $BoxNZ = rtrim(&D.Box, ' ')
 ! let $BoxWZ = $BoxNZ || ' '

begin-SELECT
ED.BOX

  move 'Y' to $BoxPresent

FROM PS_TAXFORM_BOX  ED
WHERE  TAXFORM_ID = &S.Taxform_ID
  AND  BOX = &D.Box
! AND (BOX = $BOXNZ or
!      BOX = $BOXWZ)
  AND  EFFDT = (SELECT MAX(EFFDT)
                FROM PS_TAXFORM_BOX
                WHERE BOX = &D.Box
              ! WHERE (BOX = $BOXNZ or
              !        BOX = $BOXWZ)
                  AND TAXFORM_ID = &S.Taxform_ID
                  AND EFFDT <= $AsOfDate)

end-SELECT

end-procedure

begin-procedure Process-T4-Data

  if $FirstSlipError =  'Y'
    move $Form to $TaxformID
    move &S.Reporting_ID to $ReportingID
  else
    move '' to $TaxformID
    move '' to $ReportingID
  end-if

  let $Box = RTRIM(&D.Box,' ')
  evaluate $Box

    when = '14'
    when = '16'
    when = '17'
    when = '18'
    when = '20'
    when = '22'
    when = '24'
    when = '26'
    when = '30'
    when = '31'
    when = '32'
    when = '33'
    when = '34'
    when = '35'
    when = '36'
    when = '37'
    when = '38'
    when = '39'
    when = '40'
    when = '41'
    when = '42'
    when = '44'
    when = '46'
    when = '52'
    when = '55'
    when = '56'
    when = '66'
    when = '67'
    when = '68'
    when = '69'
    when = '70'
    when = '71'
    when = '72'
    when = '73'
    when = '74'
    when = '75'
    when = '76'
    when = '77'
    when = '81'
    when = '84'
    when = '85'
    when = '86'
    when = '87'
    when = '97'
    when = '98'
    when = '99'



      if &D.CAN_YE_Box_Amt < 0
         move &D.CAN_YE_Box_Amt to $BoxAmt
         let $ErrorMsg = $Ctx910er_Box || $Box || $Ctx910er_amt_neg || '('
             || $BoxAmt || ')'
         do Print-Error-Line
      end-if

    when = '14'
       move &D.CAN_YE_Box_Amt to #Box14Amt
       do Format-Number (#Box14Amt, $Box14Amt, '99999999.99')

    when = '16'
       move 0.00 to $Box16Amt
       move &D.CAN_YE_Box_Amt to #Box16Amt
       do Format-Number (#Box16Amt, $Box16Amt, '9999.99')

    when = '17'
       move &D.CAN_YE_Box_Amt to #Box17Amt
       do Format-Number (#Box17Amt, $Box17Amt, '9999.99')

    when = '18'
       move &D.CAN_YE_Box_Amt to #Box18Amt
       do Format-Number (#Box18Amt, $Box18Amt, '9999.99')

    when = '20'
       move &D.CAN_YE_Box_Amt to #Box20Amt

    when = '24'
       move &D.CAN_YE_Box_Amt to #Box24Amt
       do Format-Number (#Box24Amt, $Box24Amt, '999999.99')

    when = '26'
       move &D.CAN_YE_Box_Amt to #Box26Amt
       do Format-Number (#Box26Amt, $Box26Amt, '999999.99')
       move &D.CAN_YE_Box_Text to $Box26Text

    when = '28C'
    when = '28c'
       move &D.CAN_YE_Box_Text to $Box28cText

    when = '28U'
    when = '28u'
       move &D.CAN_YE_Box_Text to $Box28uText

    when = '28P'
    when = '28p'
       move &D.CAN_YE_Box_Text to $Box28pText
    when = '50'
       move &D.CAN_YE_Box_Text to $Box50Text
    when = '55'
       move &D.CAN_YE_Box_Amt to #Box55Amt
       do Format-Number (#Box55Amt, $Box55Amt, '999999.99')

    when = '56'
       move &D.CAN_YE_Box_Amt to #Box56Amt
       do Format-Number (#Box56Amt, $Box56Amt, '999999.99')

    when = '71'
       move &D.CAN_YE_Box_Amt to #Box71Amt

    when = '81'
       move &D.CAN_YE_Box_Amt to #Box81Amt

  end-evaluate

  do Edit-Other-Box-Amt

  do Add-to-Total-Array
  move 'Y' to $T4inProgress

end-procedure


begin-procedure Edit-Other-Box-Amt

  let $Box = RTRIM(&D.Box,' ')
  evaluate $Box

    when = '30'
    when = '31'
    when = '32'
    when = '33'
    when = '34'
    when = '35'
    when = '36'
    when = '37'
    when = '38'
    when = '39'
    when = '40'
    when = '41'
    when = '42'
    when = '43'
    when = '66'
    when = '67'
    when = '68'
    when = '69'
    when = '70'
    when = '71'
    when = '74'
    when = '75'
    when = '77'
    when = '78'
    when = '79'
    when = '80'
    when = '81'
    when = '84'
    when = '85'
    when = '86'
    when = '87'

      if &D.CAN_YE_Box_Amt > 9999999.99
         move &D.CAN_YE_Box_Amt to $BoxAmt
         let $ErrorMsg = '** ' || $Ctx910er_Box || $Box || ' ' || $Ctx910er_amount || '('
           || $BoxAmt || ') '  || $Ctx910er_amt_exceeds_size || '**'
         do Print-Error-Line
      end-if

    when-other
      break
  end-evaluate

end-procedure


begin-procedure PIER-Edits

begin-SELECT
PD.BIRTHDATE

FROM  PS_PERSON PD
WHERE PD.EMPLID = &E.EmplID
end-SELECT

begin-SELECT
TT.CPP_BASIC_EXEM
TT.CPP_EE_PCT
TT.CPP_MAX_EARNS
TT.CPP_MIN_AGE
TT.CPP_MAX_AGE
TT.QPP_BASIC_EXEM
TT.QPP_EE_PCT
TT.QPP_MAX_EARNS
TT.QPP_MIN_AGE
TT.QPP_MAX_AGE
TT.UI_EE_PREMIUM_PCT
TT.UI_MAX_ANNL_EARNS
TT.UI_PCT_MAX_EARNS
TT.EFFDT
TT.QPIP_EE_PREM_PCT
TT.QPIP_MAX_ANNL_EARN
TT.QEI_EE_PREMIUM_PCT
TT.QEI_MAX_ANNL_EARNS

FROM  PS_CAN_TAX_TBL  TT
WHERE TT.EFFDT = (SELECT MAX(EFFDT)
                   FROM PS_CAN_TAX_TBL
                   WHERE EFFDT <= $AsOfDate)
end-SELECT

begin-SELECT
TD.CPP_SUBJECT_MONTHS
TD.EMPLID
TD.COMPANY
TD1.WAGE_LOSS_PLAN

 FROM   PS_CAN_TAX_DATA    TD,
        PS_EMPL_WAGELS_CAN TD1
WHERE TD.EMPLID         = &E.EmplId
  AND TD.COMPANY        = &E.Company
  AND TD.EMPLID         = TD1.EMPLID
  AND TD.COMPANY        = TD1.COMPANY
  AND TD1.WAGE_LOSS_PLAN = &S.Wage_Loss_Plan
  AND TD1.EFFDT =
       (SELECT MAX(EFFDT)
        FROM PS_EMPL_WAGELS_CAN
        WHERE EMPLID         = TD1.EMPLID
          AND COMPANY        = TD1.COMPANY
          AND WAGE_LOSS_PLAN = TD1.WAGE_LOSS_PLAN
          AND EFFDT  <= $AsOfDate)
  AND TD.EFFDT          = TD1.EFFDT
  AND TD1.EMPL_RCD =
       (SELECT MIN(EMPL_RCD)
        FROM PS_EMPL_WAGELS_CAN
        WHERE EMPLID  = TD.EMPLID
         AND  COMPANY = TD.COMPANY
         AND  WAGE_LOSS_PLAN = TD1.WAGE_LOSS_PLAN
         AND  EFFDT          = TD.EFFDT)

end-SELECT

do Format-Number (&TD.CPP_Subject_Months,$CPP_Subject_Months, '99')
do Format-Number (&TT.CPP_EE_Pct,$TT.CPP_EE_Pct,'99.999')
do Format-Number (&TT.UI_EE_Premium_Pct,$TT.UI_EE_Premium_Pct,'99.99')
do Format-Number (&TT.QPIP_EE_Prem_Pct,$TT.QPIP_EE_Premium_Pct,'99.999')
do Format-Number (&TT.QEI_EE_Premium_Pct,$TT.QEI_EE_Premium_Pct,'99.99')

let #QPP_EE_Pct  = &TT.QPP_EE_PCT

do Format-Number (#QPP_EE_Pct,$QPP_EE_Pct,'99.999')

  do Format-DateTime(&PD.BirthDate, $BirthDate, {DEFCMP}, '', '')
  let $BirthYear  = substr($BirthDate, 1, 4)
  let $BirthMonth = substr($BirthDate, 5, 2)
  move $BirthYear  to #BirthYear
  move $BirthMonth to #BirthMonth
  let #Empl_Age = (&TX.Balance_Year - #BirthYear)
  move &TT.CPP_Basic_Exem  to #CPPExemption
  move &TT.QPP_Basic_Exem  to #QPPExemption
  move &TD.CPP_Subject_Months to #Subject_months
  move &TD.CPP_Subject_Months to #QPP_Subject_months

  if #Empl_Age = &TT.CPP_MIN_AGE
     let #Subject_Months = 12 - #BirthMonth
  end-if

  if #Empl_Age = &TT.CPP_MAX_AGE
     let #Subject_Months = #BirthMonth
  end-if

  if #Empl_Age = &TT.QPP_MIN_AGE
     let #QPP_Subject_Months = 12 - #BirthMonth
  end-if

  if #Empl_Age = &TT.QPP_MAX_AGE
     let #QPP_Subject_Months = #BirthMonth
  end-if

  if #Subject_Months < 12
     let #CPPExemption = (#CPPExemption / 12) * #Subject_Months
  end-if
  if #QPP_Subject_Months < 12
     let #QPPExemption = (#QPPExemption / 12) * #QPP_Subject_Months
  end-if


  if #Box16Amt > 0 and #Box17Amt > 0
      let $ErrorMsg = $Ctx910er_box16_amt || $Box16Amt || $Ctx910er_and_box17_amt || $Box17Amt || $Ctx910er_both_grzero
      do Print-Error-Line
  end-if

move 0.00 to #MaxCPPContrib

let #MaxCPPContrib = (&TT.CPP_Max_Earns  - &TT.CPP_Basic_Exem) *  (&TT.CPP_EE_Pct/100) *
                     #Subject_Months / 12

do Format-Number (#MaxCPPContrib, $MaxCPPContrib, '9999.99')

  let #MaxCPPContrib = round(#MaxCPPContrib,2)
  let #Box16Amt = round(#Box16Amt,2)

  if #Box16Amt > #MaxCPPContrib
     let $ErrorMsg = $Ctx910er_box16_amt || $Box16Amt || $Ctx910er_exceeds ||$MaxCPPContrib||')'
     do Print-Error-Line
  end-if


  let #MaxQPPContrib = (&TT.QPP_Max_Earns  - &TT.QPP_Basic_Exem) *  (#QPP_EE_PCT/100) *
                       #QPP_Subject_Months /12
  let #MaxQPPContrib = round(#MaxQPPContrib,2)

  do Format-Number (#MaxQPPContrib, $MaxQPPContrib, '9999.99')

  let #MaxQPPContrib = round(#MaxQPPContrib,2)
  let #Box17Amt = round(#Box17Amt,2)

  if #Box17Amt > #MaxQPPContrib
     let $ErrorMsg = $Ctx910er_box17_amt || $Box17Amt || $Ctx910er_exceeds ||$MaxQPPContrib||')'
     do Print-Error-Line
  end-if

  let $Box26Text = RTRIM($Box26Text, ' ')

if rtrim(&S.Province,' ') <> 'QC'

   let #Box16Amt = round(#Box16Amt,2)

     if $Box26Text = ''
        and (#Box16Amt <= #MaxCPPContrib)  and (#Box16Amt > 0)

        do Edit-CPP-Contrib

        if $CPP-Passed = 'N'
           do Print-Error-Line
        end-if

     end-if
else

   let #Box17Amt = round(#Box17Amt,2)

     if $Box26Text = ''
        and (#Box17Amt <= #MaxQPPContrib) and (#Box17Amt > 0)

        do Edit-QPP-Contrib

        if $QPP-Passed = 'N'
           do Print-Error-Line
        end-if

     end-if

end-if


let $UIExempt = ' '

if RTRIM($Box28uText, ' ') <> ''
         let $UIExempt = 'Y'
end-if

if RTRIM($Box28cText, ' ') <> ''

       if #Box16Amt <> 0
        let $ErrorMsg = $Ctx910er_box28c_box16 || $Box16Amt || $Ctx910er_must_be_zero
           do Print-Error-Line
       end-if

       if #Box17Amt <> 0
        let $ErrorMsg = $Ctx910er_box28c_box17 || $Box17Amt || $Ctx910er_must_be_zero
        do Print-Error-Line
       end-if

       if #Box26Amt <> 0
        let $ErrorMsg = $Ctx910er_box28c_box26 || $Box26Amt || $Ctx910er_must_be_zero
        do Print-Error-Line
       end-if

else
       if rtrim(&S.Province, ' ') <> 'QC'
         if #Box26Amt > 0 and #Box26Amt > (#Box14Amt + #Box71Amt) and (#Box81Amt = 0)
          let #Combined_Box14Amt = #Box14Amt + #Box71Amt
          do Format-Number (#Combined_Box14Amt, $Combined_Box14Amt, '99999999.99')
          if #Box71Amt > 0
            let $ErrorMsg = $Ctx910er_box26_amt || $Box26Amt || $Ctx910er_greater_71amt || $Combined_Box14Amt ||')'
          else
            let $ErrorMsg = $Ctx910er_box26_amt || $Box26Amt || $Ctx910er_greater_14amt || $Combined_Box14Amt ||')'
          end-if
          do Print-Error-Line
         end-if
       end-if

end-if

if #Box26Amt = 0
   if #Box16Amt > 0
      move $Ctx910er_box26_box16 to $ErrorMsg
      do Print-Error-Line
   end-if
end-if

if #Box26Amt = 0
   if #Box17Amt > 0
      move $Ctx910er_box26_box17 to $ErrorMsg
      do Print-Error-Line
   end-if
end-if

let #MaxUIEarnings = &TT.UI_Max_Annl_Earns
let #MaxUIPrem = #MaxUIEarnings * &TT.UI_EE_Premium_Pct  / 100

do Format-Number (#MaxUIEarnings, $MaxUIEarnings, '999999.99')
do Format-Number (#MaxUIPrem, $MaxUIPrem, '9999.99')

let #QC_MaxUIEarnings = &TT.QEI_Max_Annl_Earns
let #QC_MaxUIPrem = #QC_MaxUIEarnings * &TT.QEI_EE_Premium_Pct  / 100

do Format-Number (#QC_MaxUIEarnings, $QC_MaxUIEarnings, '999999.99')
do Format-Number (#QC_MaxUIPrem, $QC_MaxUIPrem, '9999.99')


  if rtrim(&S.Province,' ') <>  'QC'

  if #Box18Amt > #MaxUIPrem
     let $ErrorMsg = $Ctx910er_box18_amt || $Box18Amt || $Ctx910er_ex_max_eiprem || $MaxUIPrem || ')'
     do Print-Error-Line
  end-if

  if #Box24Amt > #MaxUIEarnings
     let $ErrorMsg = $Ctx910er_box24_amt || $Box24Amt || $Ctx910er_ex_max_eiearn || $MaxUIEarnings || ')'
     do Print-Error-Line
    end-if

  else

    if #Box18Amt > #QC_MaxUIPrem
       let $ErrorMsg = $Ctx910er_box18_amt || $Box18Amt || $Ctx910er_ex_max_eiprem || $QC_MaxUIPrem || ')'
       do Print-Error-Line
    end-if
    if #Box24Amt > #QC_MaxUIEarnings
      let $ErrorMsg = $Ctx910er_box24_amt || $Box24Amt || $Ctx910er_ex_max_eiearn || $QC_MaxUIEarnings || ')'
      do Print-Error-Line
    end-if
  end-if


  if rtrim(&S.Province,' ') <>  'QC'
  if #Box24Amt <> 0

    if #Box24Amt > #MaxUIEarnings
      let #Box24AmtTemp = #MaxUIEarnings
    else
      let #Box24AmtTemp = #Box24Amt
    end-if

    do format-number(#Box24AmtTemp, $Box24AmtTemp, '9999999.99')

    let #Box_Dif = #Box18Amt - ((&TT.UI_EE_Premium_Pct /100) * #Box24AmtTemp)

    if #Box_Dif <  0
       let #Box_Dif = #Box_Dif * -1
      end-if

      if #Box_Dif  > 1.00
        let $ErrorMsg = $Ctx910er_box18_amt || $Box18Amt || $Ctx910er_not_eq ||$TT.UI_EE_Premium_Pct|| $Ctx910er_perc_box24_amt || $Box24AmtTemp || ')'
        do Print-Error-Line
      end-if
    end-if

  else

    if #Box24Amt <> 0

      if #Box24Amt > #QC_MaxUIEarnings
        let #Box24AmtTemp = #QC_MaxUIEarnings
      else
        let #Box24AmtTemp = #Box24Amt
      end-if

      do format-number(#Box24AmtTemp, $Box24AmtTemp, '9999999.99')

      let #Box_Dif = #Box18Amt - ((&TT.QEI_EE_Premium_Pct /100) * #Box24AmtTemp)

      if #Box_Dif <  0
       let #Box_Dif = #Box_Dif * -1
      end-if

      if #Box_Dif  > 1.00
        let $ErrorMsg = $Ctx910er_box18_amt || $Box18Amt || $Ctx910er_not_eq ||$TT.QEI_EE_Premium_Pct || $Ctx910er_perc_box24_amt || $Box24AmtTemp || ')'
        do Print-Error-Line
      end-if
    end-if
  end-if


  if $UIExempt = 'Y'

    if #Box18Amt <> 0
      let $ErrorMsg = $Ctx910er_ei_exemp_box18 || $Box18Amt || $Ctx910er_must_be_zero
      do Print-Error-Line
    end-if

    if #Box24Amt <> 0
      let $ErrorMsg = $Ctx910er_ei_exemp_box24 || $Box24Amt || $Ctx910er_must_be_zero
      do Print-Error-Line
    end-if

  else

    if #Box24Amt > 0 and #Box24Amt > (#Box14Amt + #Box71Amt) and (#Box81Amt = 0)
      let #Box14_Box71Amt = #Box14Amt + #Box71Amt
      do Format-Number (#Box14_Box71Amt, $Box14_Box71Amt, '99999999.99')

      if #Box71Amt > 0
        let $ErrorMsg = $Ctx910er_box24_amt || $Box24Amt || $Ctx910er_greater_71amt || $Box14_Box71Amt  ||')'
      else
        let $ErrorMsg = $Ctx910er_box24_amt || $Box24Amt || $Ctx910er_greater_14amt || $Box14_Box71Amt ||')'
      end-if
      do Print-Error-Line
    end-if

  end-if


  if #Box24Amt = 0
     if #Box18Amt > 0
        move $Ctx910er_box24_box18 to $ErrorMsg
       do Print-Error-Line
    end-if

  end-if
  do Edit-PPIP-T4

end-procedure

begin-procedure Edit-PPIP-T4

  let #MaxPPIPEarnings = &TT.QPIP_Max_Annl_Earn
  do Format-Number (#MaxPPIPEarnings, $MaxPPIPEarnings, '999999.99')
  let #MaxPPIPEarnings =  round(#MaxPPIPEarnings, 2)


  if rtrim(&S.Province,' ') =  'QC'

    if RTRIM($Box28pText, ' ') = ''

      if #Box55Amt <> 0

        move 0.00 to #MaxPPIPContrib

        let #MaxPPIPContrib  = &TT.QPIP_Max_Annl_Earn  * &TT.QPIP_EE_Prem_Pct/100

        do Format-Number (#MaxPPIPContrib, $MaxPPIPContrib, '9999.99')

        let #MaxPPIPContrib = round(#MaxPPIPContrib,2)
        let #Box55Amt = round(#Box55Amt,2)

        if #Box55Amt > #MaxPPIPContrib
          let $ErrorMsg = $Ctx910er_box55_amt || $Box55Amt || $Ctx910er_ex_max_ppipprem ||$MaxPPIPContrib ||')'
          do Print-Error-Line
        end-if

        if #Box56Amt > #MaxPPIPEarnings
          let $ErrorMsg = $Ctx910er_box56_amt || $Box56Amt || $Ctx910er_ex_max_ppipearn || $MaxPPIPEarnings || ')'
          do Print-Error-Line
        end-if

        let #Box_Dif = #Box55Amt - ((&TT.QPIP_EE_Prem_Pct /100) * #Box56Amt)

        if #Box_Dif <  0
          let #Box_Dif = #Box_Dif * -1
        end-if

        if #Box_Dif  > 1.00
          let $ErrorMsg = $Ctx910er_box55_amt || $Box55Amt || $Ctx910er_not_eq || $TT.QPIP_EE_Premium_Pct ||
                          $Ctx910er_perc_box56_amt || $Box56Amt || ')'
          do Print-Error-Line
        end-if
      end-if

    else

      if #Box55Amt <> 0
        let $ErrorMsg = $Ctx910er_box28p_box55 || $Box55Amt || $Ctx910er_must_be_blank
        do Print-Error-Line
      end-if

      if #Box56Amt <> 0
        let $ErrorMsg = $Ctx910er_box28p_box56 || $Box56Amt || $Ctx910er_must_be_blank
        do Print-Error-Line
      end-if

    end-if
  end-if
end-procedure

begin-procedure Edit-CPP-Contrib

begin-SELECT
B.TXGRS_YTD
B.NLGRS_YTD

FROM  PS_CAN_TAX_BALANCE B
WHERE COMPANY         = &E.Company
  AND EMPLID          = &E.EmplID
  AND PROVINCE        = &S.Province
  AND WAGE_LOSS_PLAN  = &S.Wage_Loss_Plan
  AND BALANCE_YEAR    = &TX.Balance_Year
  AND BALANCE_ID      = $Calendar_Year_Id
  AND TAX_CLASS_CAN   = 'CPP'
  AND BALANCE_PERIOD         =
      (SELECT MAX(BALANCE_PERIOD)
      FROM   PS_CAN_TAX_BALANCE
       WHERE  EMPLID        = B.EMPLID
         AND  COMPANY       = B.COMPANY
         AND BALANCE_YEAR   = &TX.Balance_Year
         AND BALANCE_ID     = $Calendar_Year_Id
         AND PROVINCE       = &S.Province
         AND WAGE_LOSS_PLAN = &S.Wage_Loss_Plan
         AND TAX_CLASS_CAN  = B.TAX_CLASS_CAN)

end-SELECT


let #ExemptAmt = &B.TxGrs_YTD
do format-number(#ExemptAmt, $ExemptAmt, '99999999.99')


   let #Box_Dif = #Box16Amt - ((&TT.CPP_EE_Pct/100)  * #ExemptAmt)

   if #Box_Dif < 0
     let #Box_Dif = #Box_Dif * -1
   end-if

   if #Box_Dif > 0.05
        let $ErrorMsg = $Ctx910er_box16_amt || $Box16Amt || $Ctx910er_is_not_eq ||$TT.CPP_EE_Pct|| $Ctx910er_cpp_txgrs_ytd || $ExemptAmt || ')'
        let $CPP-Passed = 'N'
   else
        let $CPP-Passed = 'Y'
   end-if

!--- check exemption exceeded, if no limit gross < max taxable
if (&B.NLGRS_YTD < &TT.CPP_MAX_EARNS)

   if (&B.NLGRS_YTD - &B.TXGRS_YTD) > #CPPExemption
      let $ErrorMsg = $Ctx910er_cpp_nl_exempt_1 || $Ctx910er_cpp_nl_exempt_2
      let $CPP-Passed = 'N'
   end-if
end-if

end-procedure

begin-procedure Edit-QPP-Contrib

begin-SELECT
BQ.TXGRS_YTD
BQ.NLGRS_YTD

FROM  PS_CAN_TAX_BALANCE BQ
WHERE COMPANY         = &E.Company
  AND EMPLID                          = &E.EmplID
  AND PROVINCE        = &S.Province
  AND WAGE_LOSS_PLAN     = &S.Wage_Loss_Plan
  AND BALANCE_YEAR         = &TX.Balance_Year
  AND BALANCE_ID        = $Calendar_Year_Id
  AND TAX_CLASS_CAN   = 'QPP'
  AND BALANCE_PERIOD         =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_CAN_TAX_BALANCE
       WHERE  EMPLID                        = BQ.EMPLID
         AND  COMPANY       = BQ.COMPANY
         AND BALANCE_YEAR         = &TX.Balance_Year
         AND BALANCE_ID        = $Calendar_Year_Id
         AND  PROVINCE      = &S.Province
         AND  WAGE_LOSS_PLAN   = &S.Wage_Loss_Plan
         AND TAX_CLASS_CAN  = BQ.TAX_CLASS_CAN)

end-SELECT

let #ExemptAmt = &BQ.TxGrs_YTD
do format-number(#ExemptAmt, $ExemptAmt, '99999999.99')


   let #Box_Dif = #Box17Amt - ((#QPP_EE_Pct/100)  * #ExemptAmt)

   if #Box_Dif < 0
     let #Box_Dif = #Box_Dif * -1
   end-if

   if #Box_Dif > 0.05
        let $ErrorMsg = $Ctx910er_box17_amt || $Box17Amt || $Ctx910er_is_not_eq ||$QPP_EE_Pct|| $Ctx910er_qpp_txgrs_ytd || $ExemptAmt || ')'
        let $QPP-Passed = 'N'
   else
        let $QPP-Passed = 'Y'
   end-if

!--- check exemption exceeded, if no limit gross < max taxable
if (&BQ.NLGRS_YTD < &TT.QPP_MAX_EARNS)

   if (&BQ.NLGRS_YTD - &BQ.TXGRS_YTD) > #QPPExemption
      let $ErrorMsg = $Ctx910er_cpp_nl_exempt_1 || $Ctx910er_cpp_nl_exempt_2
      let $QPP-Passed = 'N'
   end-if
end-if

end-procedure


begin-procedure Check-For-Pension-Reg-No

  if #Box20Amt > 0 and rtrim($Box50Text, ' ') = ''
    let $ErrorMsg = $Ctx910er_mis_pen_num
    do Print-Error-Line
  end-if

end-procedure


begin-procedure RV1-Edits

  if #BoxQAmt > 0
    let #BoxGAmt = #BoxGAmt - #BoxQAmt
  end-if

  if #BoxGAmt > 0 and (#BoxGAmt > (#BoxAAmt + #BoxUAmt + #BoxRAmt))
        let #Combined_BoxAAmt =   #BoxAAmt + #BoxUAmt + #BoxRAmt
        do Format-Number (#Combined_BoxAAmt, $Combined_BoxAAmt, '99999999.99')
        let $ErrorMsg = $Ctx910er_boxg_amt || $BoxGAmt || $Ctx910er_greater_boxa || $Combined_BoxAAmt ||')'
        do Print-Error-Line
  end-if

  do Get-QPIP-Rate

  do Format-Number (&QT.QPIP_EE_Prem_Pct,$QT.QPIP_EE_Premium_Pct,'99.999')
  do Edit-QPIP-RV1

end-procedure


begin-procedure Get-QPIP-Rate

begin-SELECT
QT.QPIP_EE_PREM_PCT
QT.QPIP_MAX_ANNL_EARN

FROM  PS_CAN_TAX_TBL  QT
WHERE QT.EFFDT = (SELECT MAX(EFFDT)
                   FROM PS_CAN_TAX_TBL
                   WHERE EFFDT <= $AsOfDate)
end-SELECT

end-procedure

begin-procedure Edit-QPIP-RV1

  let #MaxPPIPEarnings = &QT.QPIP_Max_Annl_Earn
  do Format-Number (#MaxPPIPEarnings, $MaxPPIPEarnings, '999999.99')
  let #MaxPPIPEarnings =  round(#MaxPPIPEarnings, 2)

  if #BoxHAmt <> 0

      move 0.00 to #MaxPPIPContrib

      let #MaxPPIPContrib  = &QT.QPIP_Max_Annl_Earn  * &QT.QPIP_EE_Prem_Pct/100

      do Format-Number (#MaxPPIPContrib, $MaxPPIPContrib, '9999.99')

      let #MaxPPIPContrib = round(#MaxPPIPContrib,2)
      let #BoxHAmt = round(#BoxHAmt,2)

      if #BoxHAmt > #MaxPPIPContrib
        let $ErrorMsg = $Ctx910er_boxH_amt || $BoxHAmt || $Ctx910er_ex_max_ppipprem ||$MaxPPIPContrib ||')'
        do Print-Error-Line
      end-if

      if (round(#BoxIAmt,2)) > #MaxPPIPEarnings
        let #BoxIAmt = #MaxPPIPEarnings

        let #Box_Dif = #BoxHAmt - ((&QT.QPIP_EE_Prem_Pct /100) * #BoxIAmt)

        if #Box_Dif <  0
          let #Box_Dif = #Box_Dif * -1
        end-if

        if #Box_Dif  > 1.00
          let $ErrorMsg = $Ctx910er_boxH_amt || $BoxHAmt || $Ctx910er_not_eq || $MaxPPIPContrib || ')'
          do Print-Error-Line
        end-if


      else

        let #Box_Dif = #BoxHAmt - ((&QT.QPIP_EE_Prem_Pct /100) * #BoxIAmt)

        if #Box_Dif <  0
          let #Box_Dif = #Box_Dif * -1
        end-if

        if #Box_Dif  > 1.00
          let $ErrorMsg = $Ctx910er_boxH_amt || $BoxHAmt || $Ctx910er_not_eq || $QT.QPIP_EE_Premium_Pct ||
                        $Ctx910er_perc_boxI_amt || $BoxIAmt || ')'
          do Print-Error-Line
        end-if
      end-if

  end-if

end-procedure


begin-procedure Initialize-T4-Boxes

  move 0 to #Box14Amt
  move 0 to #Box16Amt
  move 0 to #Box17Amt
  move 0 to #Box18Amt
  move 0 to #Box20Amt
  move 0 to #Box22Amt
  move 0 to #Box24Amt
  move 0 to #Box26Amt
  move 0 to #Box52Amt
  move 0 to #Box55Amt
  move 0 to #Box56Amt
  move 0 to #Box71Amt
  move 0 to #Box81Amt
  move 0 to #Box14AmtTemp
  move 0 to #Box24AmtTemp
  move 0 to #CPPBox14Amt
  move 0 to #CPPBox26Amt
  move ' ' to $Box26Text
  move ' ' to $Box28cText
  move ' ' to $Box28uText
  move ' ' to $Box28pText
  move ' ' to $Box50Text

  do Format-Number (#Box14Amt, $Box14Amt, '99999999.99')
  do Format-Number (#Box16Amt, $Box16Amt, '9999.99')
  do Format-Number (#Box17Amt, $Box17Amt, '9999.99')
  do Format-Number (#Box18Amt, $Box18Amt, '9999.99')
  do Format-Number (#Box24Amt, $Box24Amt, '999999.99')
  do Format-Number (#Box26Amt, $Box26Amt, '999999.99')
  do Format-Number (#Box55Amt, $Box55Amt, '999999.99')
  do Format-Number (#Box56Amt, $Box56Amt, '999999.99')
  do format-number (#Box14AmtTemp, $Box14AmtTemp, '9999999.99')
  do format-number (#Box24AmtTemp, $Box24AmtTemp, '9999999.99')
  do Format-Number (#CPPBox14Amt,  $CPPBox14Amt, '99999999.99')
  do Format-Number (#CPPBox26Amt,  $CPPBox26Amt, '99999999.99')


end-procedure


begin-procedure Initialize-RV1-Boxes

  move 0 to #BoxAAmt
  move 0 to #BoxGAmt
  move 0 to #BoxUAmt
  move 0 to #BoxRAmt
  move 0 to #BoxQAmt
  move 0 to #BoxHAmt
  move 0 to #BoxIAmt

  move ' ' to $BoxAText
  move ' ' to $BoxGText
  do Format-Number (#BoxAAmt, $BoxAAmt, '99999999.99')
  do Format-Number (#BoxGAmt, $BoxGAmt, '99999999.99')

end-procedure

begin-procedure Process-T4A-Data

  if $FirstSlipError =  'Y'
      move $Form to $TaxformID
      move &S.Reporting_ID to $ReportingID
  else
      move '' to $TaxformID
      move '' to $ReportingID
  end-if

  let $Box = RTRIM(&D.Box,' ')
  evaluate $Box

    when = '016'
    when = '018'
    when = '020'
    when = '022'
    when = '024'
    when = '026'
    when = '027'
    when = '028'
    when = '030'
    when = '032'
    when = '034'
    when = '040'
    when = '042'
    when = '046'
    when = '048'
    when = '102'
    when = '104'
    when = '105'
    when = '106'
    when = '107'
    when = '108'
    when = '109'
    when = '110'
    when = '111'
    when = '115'
    when = '116'
    when = '117'
    when = '118'
    when = '119'
    when = '122'
    when = '123'
    when = '124'
    when = '125'
    when = '126'
    when = '127'
    when = '129'
    when = '130'
    when = '131'
    when = '132'
    when = '133'
    when = '134'
    when = '135'
    when = '142'
    when = '143'
    when = '144'
    when = '146'
    when = '148'
    when = '150'
    when = '152'
    when = '154'
    when = '156'
    when = '158'
    when = '180'
    when = '190'


      if &D.CAN_YE_Box_Amt < 0
         move &D.CAN_YE_Box_Amt to $BoxAmt
         let $ErrorMsg = $Ctx910er_Box || $Box || $Ctx910er_amt_neg || '('
             || $BoxAmt || ')'
         do Print-Error-Line
      end-if

  end-evaluate

  do Add-to-Total-Array
  move 'Y' to $T4AinProgress

end-procedure

begin-procedure Process-RV1-Data

  if $FirstSlipError =  'Y'
    move $Form to $TaxformID
    move &S.Reporting_ID to $ReportingID
  else
    move '' to $TaxformID
    move '' to $ReportingID
  end-if

  let $Box = RTRIM(&D.Box,' ')
  evaluate $Box

    when = 'A'
    when = 'B'
    when = 'C'
    when = 'D'
    when = 'E'
    when = 'F'
    when = 'G'
    when = 'G-2'
    when = 'H'
    when = 'I'
    when = 'J'
    when = 'K'
    when = 'L'
    when = 'M'
    when = 'N'
    when = 'O'
    when = 'P'
    when = 'Q'
    when = 'R'
    when = 'S'
    when = 'T'
    when = 'U'
    when = 'V'
    when = 'W'

      if &D.CAN_YE_Box_Amt < 0
         move &D.CAN_YE_Box_Amt to $BoxAmt
         let $ErrorMsg = $Ctx910er_Box || $Box || $Ctx910er_amt_neg || '('
             || $BoxAmt || ')'
         do Print-Error-Line
      end-if

    when = 'A'
       add &D.CAN_YE_Box_Amt to #BoxAAmt
       do Format-Number (#BoxAAmt, $BoxAAmt, '99999999.99')

    when = 'G'
       add &D.CAN_YE_Box_Amt to #BoxGAmt
       do Format-Number (#BoxGAmt, $BoxGAmt, '99999999.99')

    when = 'U'
       add &D.CAN_YE_Box_Amt to #BoxUAmt

    when = 'R'
       add &D.CAN_YE_Box_Amt to #BoxRAmt

    when = 'Q'
       add &D.CAN_YE_Box_Amt to #BoxQAmt

    when = 'H'
       add &D.CAN_YE_Box_Amt to #BoxHAmt
       do Format-Number (#BoxHAmt, $BoxHAmt, '99999999.99')

    when = 'I'
       add &D.CAN_YE_Box_Amt to #BoxIAmt
       do Format-Number (#BoxIAmt, $BoxIAmt, '99999999.99')

  end-evaluate

  do Add-to-Total-Array
  move 'Y' to $RV1inProgress

end-procedure


begin-procedure Process-RV2-Data

  if $FirstSlipError =  'Y'
    move $Form to $TaxformID
    move &S.Reporting_ID to $ReportingID
  else
    move '' to $TaxformID
    move '' to $ReportingID
  end-if

  let $Box = RTRIM(&D.Box,' ')
  evaluate $Box

    when = 'A'
    when = 'B'
    when = 'C'
    when = 'D'
    when = 'E'
    when = 'F'
    when = 'G'
    when = 'H'
    when = 'I'
    when = 'J'
    when = 'K'
    when = 'L'
    when = 'M'
    when = 'O'


      if &D.CAN_YE_Box_Amt < 0
         move &D.CAN_YE_Box_Amt to $BoxAmt
         let $ErrorMsg = $Ctx910er_Box || $Box || $Ctx910er_amt_neg || '('
             || $BoxAmt || ')'
         do Print-Error-Line
      end-if

  end-evaluate

  do Add-to-Total-Array
  move 'Y' to $RV2inProgress

end-procedure


begin-procedure Add-to-Total-Array

   let $Box = RTRIM(&D.Box,' ')
   move 0 to #j

   while #j < #max_i

      get $CheckBox from AddTotals(#j) TotBoxNum

      if $CheckBox = $Box
         array-add #BoxAmt to AddTotals(#j) TotBoxAmt
         break
      end-if

      if $CheckBox = ' ' or $CheckBox = ''
         put $Box #BoxAmt into AddTotals(#j) TotBoxNum TotBoxAmt
         break
      end-if

      add 1 to #j

   end-while
end-procedure


begin-procedure Edit-Slip-Totals

   move 0 to #k
   while #k < #max_i
      get $TotBox #TotSlipAmt from AddTotals (#k) TotBoxNum TotBoxAmt
      let $TotBox = RTRIM($TotBox, ' ')
      if $TotBox = ''
         break
      else

        if #TotSlipAmt < 0
           let $TotSlipAmt = #TotSlipAmt
           let $ErrorMsg = $Ctx910er_Box || $TotBox || $Ctx910er_amt_neg ||
                                                $TotSlipAmt
           do Print-Error-Line
        end-if

        add 1 to #k
      end-if
   end-while

   move &E.EmplID to $EmplID
   move &S.Wage_Loss_Plan to $WageLossPlan
   move 'N' to $RV1inProgress
   move 'N' to $T4AinProgress
   move 'N' to $RV2inProgress
   move 'N' to $T4inProgress
   do Initialize-Array

end-procedure

begin-procedure Print-Error-Line
  position (+1)
  next-listing need=3

  if &E.EmplID <> $priorEmplID or &E.Company <> $priorCompany
    print &E.EmplID         (+1,1)
    print $EmployeeName     (0,14)
    print &E.SIN            (0,49) edit xxx-xxx-xxx
    print &E.BUSINESS_UNIT  (0,65)
    move &E.EmplID  to $priorEmplID
    move &E.Company to $priorCompany
  end-if

  print &S.Wage_Loss_Plan (0,83)  !65)
  print $ReportingID      (0,91)  !73)
  print $TaxformID        (0,110) !92)
  print $ErrorMsg         (0,116) wrap 35 4  ! 98

  move 'N' to $FirstEmployeeError
  move 'N' to $FirstSlipError
  move 'N' to $FirstDetailError
  move 'Y' to $Ctx910er_Err_Display

end-procedure


#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'rotname1.sqc'  !Rotate-Name procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#ifdef PRCSSCHD
#Include 'stdapi.sqc'    !Update Process API
#Include 'txrnctl1.sqc'  !Process Scheduler Run Controls
#endif
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
