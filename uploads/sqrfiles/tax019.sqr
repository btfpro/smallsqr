!**************************************************
!  TAX019:  Employee Tax Information
!**************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2010, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!  This sqr retrieve employee tax data panels that are current during
!  a  given pay period.  The program requests input by the user
!  for the emplid and run id.  If either one is not valid, the
!  program ends.  This program was written for the use of
!  application support to obtain ee tax data from clients.
!***********************************************************************
!                                                                      *
!                                                                      *
!          $Date:  2010/05/12:17:16:28                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  804998                                              !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
! HP00001       Add $PublicSector indicator                            *
!***********************************************************************

#include 'setenv.sqc'    !Set Database Environment


begin-report
  move 'TAX019' to $ReportID
  do Stdapi-Init
  do Get-Report-Language   ! Procedure that decides the report language
                           ! and then calls 'Report-Translation' procedure
                           ! that reads the language dep. text.
  move $Tax019_ReportTitle to $ReportTitle
  move 'TAX019' to $ReportID
  display $ReportTitle
  display ''
  do Get-EandG                                                          !HP00001
  do Init-DateTime
  display 'Report Began: ' noline
  do Get-Current-DateTime
  display $AsOfNow
  move $AsOfNow to $ReportTime
  do Format-DateTime($AsOfToday, $ReportDate, {DEFMDY},'','')
  display ''
  do Get-Run-Parameters
  do Get-PayGroup-Country
  if &PT.COUNTRY = 'CAN'
    do Get-EE-Can-Tax
  else
    do Get-EE-Fed
    do Get-EE-State
    do Get-EE-Local
  end-if

  if (#Found_Fed = 0) AND (#Found_State = 0) AND (#Found_Local = 0) AND
     (#Found_CanTax = 0)
    display 'No tax information has been found for the employee: ' noline
    display $Emplid
    display 'No Report has been generated'
  end-if

  do Reset
  display ''
  display 'Report Ended: ' noline
  display $AsOfNow
  do Stdapi-Term
end-report


#include 'setup32.sqc'   !Printer and page-size initialization

! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation

! Read from TAX019 program id
  do Init_Report_Translation($ReportID,$curr_language_cd)

 ! if $Program_Read = 'Y'
    do Get_Field_Information ('TAX019', 'REPORT_TITLE',       $Tax019_ReportTitle,        #dummy_width)
    do Get_Field_Information ('TAX019', 'FSUT_EXM_ADDLALW1',  $Tax019_FSUT_Exm_AddlAlw1,  #dummy_width)
    do Get_Field_Information ('TAX019', 'FICASTAT_WAGEPLAN1', $Tax019_FicaStat_WagePlan1, #dummy_width)
    do Get_Field_Information ('TAX019', 'EICSTATUS_SDISTAT1', $Tax019_EICStatus_SDIStat1, #dummy_width)
    do Get_Field_Information ('TAX019', 'SPECIAL_STAT1',      $Tax019_Special_Stat1,      #dummy_width)
    do Get_Field_Information ('TAX019', 'ADDLAMT_ANNLEXMPT1', $Tax019_AddlAmt_AnnlExmpt1, #dummy_width)
    do Get_Field_Information ('TAX019', 'ADDL_FWT1',          $Tax019_Addl_FWT1,          #dummy_width)
    do Get_Field_Information ('TAX019', 'MAR_STATUS1',        $Tax019_Mar_Status1,        #dummy_width)
    do Get_Field_Information ('TAX019', 'ALLOW_LOCALRT1',     $Tax019_Allow_LocalRt1,     #dummy_width)
    do Get_Field_Information ('TAX019', 'FSUT_EXM_ADDLALW2',  $Tax019_FSUT_Exm_AddlAlw2,  #dummy_width)
    do Get_Field_Information ('TAX019', 'FICASTAT_WAGEPLAN2', $Tax019_FicaStat_WagePlan2, #dummy_width)
    do Get_Field_Information ('TAX019', 'EICSTATUS_SDISTAT2', $Tax019_EICStatus_SDIStat2, #dummy_width)
    do Get_Field_Information ('TAX019', 'COMPANY',            $Tax019_Company,            #dummy_width)
    do Get_Field_Information ('TAX019', 'EFFDT',              $Tax019_EffDt,              #dummy_width)
    do Get_Field_Information ('TAX019', 'STATE',              $Tax019_State,              #dummy_width)
    do Get_Field_Information ('TAX019', 'LOCAL',              $Tax019_Local,              #dummy_width)
    do Get_Field_Information ('TAX019', 'RES',                $Tax019_Res,                #dummy_width)
    do Get_Field_Information ('TAX019', 'DECLARED',           $Tax019_Declared,           #dummy_width)
    do Get_Field_Information ('TAX019', 'SPECIAL_STAT2',      $Tax019_Special_Stat2,      #dummy_width)
    do Get_Field_Information ('TAX019', 'ADDLAMT_ANNLEXMPT2', $Tax019_AddlAmt_AnnlExmpt2, #dummy_width)
    do Get_Field_Information ('TAX019', 'ADDL_FWT2',          $Tax019_Addl_FWT2,          #dummy_width)
    do Get_Field_Information ('TAX019', 'MAR_STATUS2',        $Tax019_Mar_Status2,        #dummy_width)
    do Get_Field_Information ('TAX019', 'ADDL_AMT_ADJ',       $Tax019_Addl_Amt_Adj,       #dummy_width)
!   do Get_Field_Information ('TAX019', 'SWT_LOCALITY',       $Tax019_Swt_Locality,       #dummy_width)
    do Get_Field_Information ('TAX019', 'FSUT_EXM_ADDLALW3',  $Tax019_FSUT_Exm_AddlAlw3,  #dummy_width)
    do Get_Field_Information ('TAX019', 'FICASTAT_WAGEPLAN3', $Tax019_FicaStat_WagePlan3, #dummy_width)
    do Get_Field_Information ('TAX019', 'EICSTATUS_SDISTAT3', $Tax019_EICStatus_SDIStat3, #dummy_width)

    do Get_Field_Information ('TAX019', 'PYTXEXMPT_LCFAMT1',  $Tax019_PyTxExmpt_LCFAmt1,  #dummy_width)
    do Get_Field_Information ('TAX019', 'CITADDLAMT_PCT1',    $Tax019_CITAddlAmt_Pct1,    #dummy_width)
    do Get_Field_Information ('TAX019', 'QITADDLAMT_PCT1',    $Tax019_QITAddlAmt_Pct1,    #dummy_width)
    do Get_Field_Information ('TAX019', 'QITOTHDED_CPPQPP1',  $Tax019_QITOthDed_CPPQPP1,  #dummy_width)
    do Get_Field_Information ('TAX019', 'TD1XCOMM_EXP1',      $Tax019_TD1XComm_Exp1,      #dummy_width)
    do Get_Field_Information ('TAX019', 'MR19COMM_EXP1',      $Tax019_MR19Comm_Exp1,      #dummy_width)
    do Get_Field_Information ('TAX019', 'EIEXMPT_EIAMT1',     $Tax019_EIExmpt_EIAmt1,     #dummy_width)
    do Get_Field_Information ('TAX019', 'COMP',               $Tax019_Comp,               #dummy_width)
    do Get_Field_Information ('TAX019', 'PYTXEXMPT_LCFAMT2',  $Tax019_PyTxExmpt_LCFAmt2,  #dummy_width)
    do Get_Field_Information ('TAX019', 'CIT',                $Tax019_CIT,                #dummy_width)
    do Get_Field_Information ('TAX019', 'CIT_THFACTOR1',      $Tax019_CIT_THFactor1,      #dummy_width)
    do Get_Field_Information ('TAX019', 'CITADDLAMT_PCT2',    $Tax019_CITAddlAmt_Pct2,    #dummy_width)
    do Get_Field_Information ('TAX019', 'QITADDLAMT_PCT2',    $Tax019_QITAddlAmt_Pct2,    #dummy_width)
    do Get_Field_Information ('TAX019', 'QITOTHDED_CPPQPP2',  $Tax019_QITOthDed_CPPQPP2,  #dummy_width)
    do Get_Field_Information ('TAX019', 'TD1XCOMM_EXP2',      $Tax019_TD1XComm_Exp2,      #dummy_width)
    do Get_Field_Information ('TAX019', 'MR19COMM_EXP2',      $Tax019_MR19Comm_Exp2,      #dummy_width)
    do Get_Field_Information ('TAX019', 'EIEXMPT_EIAMT2',     $Tax019_EIExmpt_EIAmt2,     #dummy_width)
    do Get_Field_Information ('TAX019', 'WAGEPLAN1',          $Tax019_WagePlan1,          #dummy_width)
    do Get_Field_Information ('TAX019', 'PYTXEXMPT_LCFAMT3',  $Tax019_PyTxExmpt_LCFAmt3,  #dummy_width)
    do Get_Field_Information ('TAX019', 'CIT_QITAMT1',        $Tax019_CIT_QITAmt1,        #dummy_width)
    do Get_Field_Information ('TAX019', 'CIT_QITAREA1',       $Tax019_CIT_QITArea1,       #dummy_width)
    do Get_Field_Information ('TAX019', 'CIT_QITSTAT1',       $Tax019_CIT_QITStat1,       #dummy_width)
    do Get_Field_Information ('TAX019', 'CIT_QITTXCRDT1',     $Tax019_CIT_QITTxCrdt1,     #dummy_width)
    do Get_Field_Information ('TAX019', 'CIT_QITSPCLLTR1',    $Tax019_CIT_QITSpclLtr1,    #dummy_width)
    do Get_Field_Information ('TAX019', 'CIT_THFACTOR2',      $Tax019_CIT_THFactor2,      #dummy_width)
    do Get_Field_Information ('TAX019', 'QITOTHDED_CPPQPP3',  $Tax019_QITOTHDED_CPPQPP3,  #dummy_width)
    do Get_Field_Information ('TAX019', 'TD1XCOMM_EXP3',      $Tax019_TD1XComm_Exp3,      #dummy_width)
    do Get_Field_Information ('TAX019', 'MR19COMM_EXP3',      $Tax019_MR19Comm_Exp3,      #dummy_width)
    do Get_Field_Information ('TAX019', 'EIEXMPT_EIAMT3',     $Tax019_EIExmpt_EIAmt3,     #dummy_width)
    do Get_Field_Information ('TAX019', 'WAGEPLAN2',          $Tax019_WagePlan2,          #dummy_width)
    do Get_Field_Information ('TAX019', 'CIT_QITAMT2',        $Tax019_CIT_QITAmt2,        #dummy_width)
    do Get_Field_Information ('TAX019', 'CIT_QITAREA2',       $Tax019_CIT_QITArea2,       #dummy_width)
    do Get_Field_Information ('TAX019', 'CIT_QITSTAT2',       $Tax019_CIT_QITStat2,       #dummy_width)
    do Get_Field_Information ('TAX019', 'CIT_QITTXCRDT2',     $Tax019_CIT_QITTxCrdt2,     #dummy_width)
    do Get_Field_Information ('TAX019', 'CIT_QITSPCLLTR2',    $Tax019_CIT_QITSpclLtr2,    #dummy_width)
    do Get_Field_Information ('TAX019', 'QITOTHDED_CPPQPP4',  $Tax019_QITOthDed_CPPQPP4,  #dummy_width)
    do Get_Field_Information ('TAX019', 'EIEXMPT_EIAMT4',     $Tax019_EIExmpt_EIAmt4,     #dummy_width)
    do Get_Field_Information ('TAX019', 'CO',                 $Tax019_Co,                 #dummy_width)
    do Get_Field_Information ('TAX019', 'MAINTGRS',           $Tax019_Maintgrs,           #dummy_width)
    do Get_Field_Information ('TAX019', 'RRSPLIMIT',          $Tax019_RRSPLimit,          #dummy_width)
    do Get_Field_Information ('TAX019', 'TD1ADJUST',          $Tax019_TD1Adjust,          #dummy_width)
    do Get_Field_Information ('TAX019', 'EMPLID',             $Tax019_Emplid,             #dummy_width)
    do Get_Field_Information ('TAX019', 'NAME',               $Tax019_Name,               #dummy_width)
    do Get_Field_Information ('TAX019', 'PAYRUNID',           $Tax019_PayRunId,           #dummy_width)
    do Get_Field_Information ('TAX019', 'PAYENDDT',           $Tax019_PayEndDt,           #dummy_width)
    do Get_Field_Information ('TAX019', 'CITQIT_OTHTX_CRED1', $Tax019_CITQIT_othtx_cred1, #dummy_width)
    do Get_Field_Information ('TAX019', 'CITQIT_OTHTX_CRED2', $Tax019_CITQIT_othtx_cred2, #dummy_width)
    do Get_Field_Information ('TAX019', 'CITQIT_OTHTX_CRED3', $Tax019_CITQIT_othtx_cred3, #dummy_width)
    do Get_Field_Information ('TAX019', 'CROSS_PROV1'       , $Tax019_Cross_Prov1       , #dummy_width)
    do Get_Field_Information ('TAX019', 'LCP'               , $Tax019_LCP               , #dummy_width)
    do Get_Field_Information ('TAX019', 'PIT_AMOUNT'        , $Tax019_PIT_Amount        , #dummy_width)
    do Get_Field_Information ('TAX019', 'PIT_CLAIM'         , $Tax019_PIT_Claim         , #dummy_width)
    do Get_Field_Information ('TAX019', 'PIT_K3P1'          , $Tax019_PIT_K3P1          , #dummy_width)
    do Get_Field_Information ('TAX019', 'PIT_K3P2'          , $Tax019_PIT_K3P2          , #dummy_width)
    do Get_Field_Information ('TAX019', 'PIT_NET'           , $Tax019_PIT_Net           , #dummy_width)
    do Get_Field_Information ('TAX019', 'PIT_Y'             , $Tax019_PIT_Y             , #dummy_width)
    do Get_Field_Information ('TAX019', 'PROVINCE'          , $Tax019_Province          , #dummy_width)
    do Get_Field_Information ('TAX019', 'PROVINCIAL'        , $Tax019_Provincial        , #dummy_width)
    do Get_Field_Information ('TAX019', 'STATUS_IND'        , $Tax019_Status_Ind        , #dummy_width)
    do Get_Field_Information ('TAX019', 'TAX_INFO'          , $Tax019_Tax_Info          , #dummy_width)
    do Get_Field_Information ('TAX019', 'USE_PROV1'         , $Tax019_Use_Prov1         , #dummy_width)
    do Get_Field_Information ('TAX019', 'USE_PROV2'         , $Tax019_Use_Prov2         , #dummy_width)
    do Get_Field_Information ('TAX019', 'NON_IDX_SL'        , $Tax019_Non_Idx_Sl        , #dummy_width)
    do Get_Field_Information ('TAX019', 'QC_NON_IDX'        , $Tax019_QC_Non_Idx        , #dummy_width)
    do Get_Field_Information ('TAX019', 'NON_IDX'           , $Tax019_Non_Idx           , #dummy_width)

 ! end-if
end-procedure

begin-heading 12

  #include 'stdhdgtr.sqc'
  print $Tax019_Emplid                                  (+2,1)
  print $Emplid                                         (0,10)
  print $Tax019_Name                                    (0,27)
  print &P.Name                                         (0,35)
  print $Tax019_PayRunId                                (0,85)
  print $RunID                             (0,98)
  print $Tax019_PayEndDt                   (0,111)
  do Format-DateTime(&C.Pay_End_Dt, $out, {DEFMDY},'','')
  print $out                              (0,126,11)
  print '___________________________________________________________' (+1,1)
  print '___________________________________________________________' (0,0)
  print '________________________________________________________ '           (0,0)
  if &PT.COUNTRY = 'CAN'
    print $Tax019_Co                              (+1,16)
    print $Tax019_EffDt                           (0,27)
    print $Tax019_QITOthDed_CPPQPP3               (0,38)
    print $Tax019_CIT                             (0,58)
    print $Tax019_CIT                             (0,72)
    print $Tax019_TD1XComm_Exp1                   (0,85)
    print $Tax019_CIT                             (0,103)
    print $Tax019_CIT                             (0,116)
    print $Tax019_CIT_THFactor1                   (0,131)
    print $Tax019_CIT_QITTxCrdt1                  (0,146)
    print $Tax019_WagePlan1                       (+1,16)
    print $Tax019_EIExmpt_EIAmt1                  (0,38)
    print $Tax019_CIT_QITStat1                    (0,58)
    print $Tax019_CIT_QITAmt1                     (0,72)
    print $Tax019_Non_Idx_Sl                      (0,85)
    print $Tax019_CIT_QITArea1                    (0,103)
    print $Tax019_CIT_QITSpclLtr1                 (0,116)
    print $Tax019_CIT_THFactor2                   (0,131)
    print $Tax019_QITOthDed_CPPQPP2               (0,146)
    print $Tax019_WagePlan2                       (+1,16)
    print $Tax019_EIExmpt_EIAmt2                  (0,38)
    print $Tax019_EIExmpt_EIAmt2                  (0,58)
    print $Tax019_CIT_QITAmt2                     (0,72)
    print $Tax019_PyTxExmpt_LCFAmt3               (0,85)
    print $Tax019_CIT_QITArea2                    (0,103)
    print $Tax019_CIT_QITSpclLtr2                 (0,116)
    print $Tax019_QC_Non_Idx                      (0,146)
    print '___________________________________________________________' (+1,1)
    print '___________________________________________________________' (0,0)
    print '________________________________________________________'           (0,0)
    print '___________________________________________________________' (+10,1)
    print '___________________________________________________________' (0,0)
    print '________________________________________________________'           (0,0)
    print $Tax019_CITAddlAmt_Pct1                 (+1,16)
    print $Tax019_QITAddlAmt_Pct1                 (0,34)
    print $Tax019_PyTxExmpt_LCFAmt1               (0,52)
    print $Tax019_TD1XComm_Exp1                   (0,72)
    print $Tax019_MR19Comm_Exp1                   (0,85)
    print $Tax019_CITQIT_othtx_cred1              (0,101)
    print $Tax019_Status_Ind                      (0,116)
    print $Tax019_Use_Prov1                       (0,135)
    print $Tax019_CITAddlAmt_Pct2                 (+1,16)
    print $Tax019_CITAddlAmt_Pct2                 (0,34)
    print $Tax019_PyTxExmpt_LCFAmt2               (0,52)
    print $Tax019_TD1XComm_Exp2                   (0,72)
    print $Tax019_MR19Comm_Exp2                   (0,85)
    print $Tax019_CITQIT_othtx_cred2              (0,101)
    print $Tax019_Cross_Prov1                     (0,116)
    print $Tax019_Use_Prov2                       (0,135)
    print $Tax019_Maintgrs                        (+1,16)
    print $Tax019_Maintgrs                        (0,34)
    print $Tax019_RRSPLimit                       (0,52)
    print $Tax019_TD1XComm_Exp3                   (0,72)
    print $Tax019_MR19Comm_Exp3                   (0,85)
    print $Tax019_CITQIT_othtx_cred3              (0,101)
    print $Tax019_Province                        (0,116)
    print $Tax019_Province                        (0,135)
    print '___________________________________________________________' (+1,1)
    print '___________________________________________________________' (0,0)
    print '________________________________________________________'           (0,0)
    print '___________________________________________________________' (+10,1)
    print '___________________________________________________________' (0,0)
    print '________________________________________________________'           (0,0)
    print $Tax019_Provincial                      (+1,16)
    print $Tax019_Province                        (0,52)
    print $Tax019_PIT_Net                         (0,70)
    print $Tax019_PIT_Y                           (0,85)
    print $Tax019_PIT_K3P1                        (0,100)
    print $Tax019_LCP                             (0,115)
    print $Tax019_Non_Idx                         (0,135)
    print $Tax019_Tax_Info                        (+1,16)
    print $Tax019_PIT_Claim                       (0,70)
    print $Tax019_PIT_K3P2                        (0,100)
    print $Tax019_PIT_Amount                      (+1,70)
  else
    print $Tax019_Special_Stat1                   (+1,72)
    print $Tax019_Mar_Status1                     (0,110)
    print $Tax019_FSUT_Exm_AddlAlw1               (0,134)
    print $Tax019_FicaStat_WagePlan1              (0,147)
    print $Tax019_EICStatus_SDIStat1              (0,158)
    print $Tax019_Company                         (+1,9)
    print $Tax019_EffDt                           (0,19)
    print $Tax019_State                           (0,28)
    print $Tax019_Local                           (0,40)
    print $Tax019_Res                             (0,49)
    print $Tax019_Declared                        (0,60)
    print $Tax019_Special_Stat2                   (0,71)
    print $Tax019_AddlAmt_AnnlExmpt1              (0,80)
    print $Tax019_Addl_FWT1                       (0,97)
    print $Tax019_Mar_Status2                     (0,110)
    print $Tax019_Allow_LocalRt1                  (0,124)
    print $Tax019_FSUT_Exm_AddlAlw2               (0,134)
    print $Tax019_FicaStat_WagePlan2              (0,147)
    print $Tax019_EICStatus_SDIStat2              (0,158)
    print $Tax019_AddlAmt_AnnlExmpt2              (+1,80)
    print $Tax019_Addl_FWT2                       (0,97)
   ! print $Tax019_Allow_LocalRt2                  (0,123)
    print $Tax019_Addl_Amt_Adj                    (0,110)
!   print $Tax019_Swt_Locality                    (0,124)
    print $Tax019_FSUT_Exm_AddlAlw3               (0,134)
    print $Tax019_FicaStat_WagePlan3              (0,147)
    print $Tax019_EICStatus_SDIStat3              (0,158)
 end-if
 print '___________________________________________________________' (+1,1)
 print '___________________________________________________________' (0,0)
 print '________________________________________________________' (0,0)
end-heading



begin-procedure Get-Run-Parameters
  if $Prcs_Process_Instance = ''
    do Get-EE
  else
    do Select-Parameters
    move $RC_PAY.RUN_ID  to  $RunID
    move $RC_PAY.Emplid  to  $Emplid
    move 0 to #Found_EE
    do Edit-EE
    if #Found_EE = 0
        display 'Error --  Employee ID not valid.'
        move '' to $Emplid
    end-if
    move 0 to #Found_Runid
    do Edit-Run-ID
    if #Found_Runid = 0
        display 'Error --  Run ID not valid for any Pay Calendar.'
        move '' to $RunID
    end-if
  end-if
end-procedure



begin-procedure Get-EE
  move 0 to #Found_EE
  while #Found_EE = 0
    input $Emplid 'Enter Employee ID'
    uppercase $Emplid
    if $Emplid = ''
      stop
    else
      do Edit-EE
      if #Found_EE = 1
        do Get-Run-ID
      else
        display 'Error --  Employee ID not valid.'
        move '' to $Emplid
      end-if
    end-if
  end-while
end-procedure


begin-procedure Edit-EE
begin-SELECT
P.EMPLID
P.NAME
  move 1 to #Found_EE
!  print $Emplid  (1,1)
!  print &P.Name  (1,20)
FROM PS_PERSON_NAME P
WHERE P.EMPLID = $Emplid
end-SELECT
end-procedure


begin-procedure Get-Run-ID
  move 0 to #Found_Runid
  while #Found_Runid = 0
    input $RunID 'Enter Pay Run ID'
    uppercase $RunID
    if $RunID = ''
      stop
    else
      do Edit-Run-ID
      if #Found_Runid = 1
        break
      else
        display 'Error --  Run ID not valid for any Pay Calendar.'
        move '' to $RunID
      end-if
    end-if
  end-while
  move 'N' to $SetOKToPay
! input $SetOKToPay 'Set OK_To_Pay = "N" on error? (Y/N)' maxlen=1
! uppercase $SetOKToPay
end-procedure


begin-procedure Edit-Run-ID
begin-SELECT
C.COMPANY, C.PAYGROUP, C.PAY_END_DT, C.PAY_BEGIN_DT, C.CHECK_DT
  move 1 to #Found_Runid
FROM  PS_PAY_CALENDAR  C
WHERE RUN_ID = $RunID
end-SELECT
end-procedure



begin-procedure Get-PayGroup-Country
begin-SELECT
PT.COUNTRY
FROM PS_JOB J1,
     PS_PAYGROUP_TBL  PT
WHERE J1.EMPLID   = $Emplid
  AND J1.EFFDT    =
  (SELECT MAX(EFFDT)
   FROM PS_JOB
   WHERE EMPLID  = J1.EMPLID
   AND EFFDT    <= &C.Pay_End_Dt)
  AND J1.EFFSEQ   =
  (SELECT MAX(EFFSEQ)
   FROM PS_JOB
   WHERE EMPLID  = J1.EMPLID
   AND EFFDT     = J1.EFFDT)
  AND J1.COMPANY = PT.COMPANY
  AND J1.PAYGROUP = PT.PAYGROUP
  AND PT.EFFDT   =
  (SELECT MAX(EFFDT)
   FROM PS_PAYGROUP_TBL
   WHERE COMPANY = PT.COMPANY
   AND PAYGROUP  = PT.PAYGROUP
   AND EFFDT    <= &C.Pay_End_Dt)
end-SELECT
end-procedure



begin-procedure Get-EE-Fed
  move 0 to #Found_Fed
begin-select
F.EMPLID, F.COMPANY, F.SPECIAL_FWT_STATUS, F.FWT_MAR_STATUS,
F.FWT_ALLOWANCES, F.FWT_ADDL_AMT, F.FWT_ADDL_PCT,
J.FICA_STATUS_EE, F.EIC_STATUS, F.FUT_EXEMPT, F.EFFDT
  move 1                     to #Found_Fed
  move &F.Company            to $Company
  move &F.Special_FWT_Status to $Special
  move &F.FWT_Mar_Status     to $MarStat
  move &F.FWT_Allowances     to $Allow
  move &F.FWT_Addl_Amt       to $AddlAmt
  move &F.FWT_Addl_Pct       to $AddlPct
  move &J.FICA_Status_EE     to $FicaStat
  move &F.EIC_Status         to $EICStat
  move &F.FUT_Exempt         to $FSUTExempt
  move &F.Effdt              to $Effdt
  move ''                    to $Resident
  move ''                    to $State
  move ''                    to $Locality
  move 0                     to $AnnlExempt
  move 0                     to $PercentFWT
!  move 0                     to $LocTaxRt
! move ''                    to $Swt_locality
  move ''                    to $Addl_Amt_Adj
  move ''                    to $WagePlan
  move ''                    to $SDIStat
  move ''                    to $NonRes
  move ''               to $Addl_Allow
  do Print-EE-Tax
FROM PS_FED_TAX_DATA F,                                                 !HP99999
     PS_JOB J                                                           !HP99999
WHERE F.EMPLID    = $Emplid                                             !HP99999
  AND F.EFFDT =                                                         !HP99999
  (SELECT MAX(EFFDT)
   FROM PS_FED_TAX_DATA
   WHERE EMPLID = F.EMPLID
     AND COMPANY = F.COMPANY
     AND EFFDT        <=  &C.Check_Dt)
 AND J.EMPLID = F.EMPLID                                                !HP99999
 AND J.EFFDT  =                                                         !HP99999
  (SELECT MAX(J1.EFFDT)                                                 !HP99999
   FROM PS_JOB J1                                                       !HP99999
   WHERE J1.EMPLID    = J.EMPLID                                        !HP99999
     AND J1.EMPL_RCD = J.EMPL_RCD                                     !HP99999
     AND J1.EFFDT    <= &C.Pay_End_Dt)                                  !HP99999
 AND J.EFFSEQ  =                                                        !HP99999
  (SELECT MAX(J2.EFFSEQ)                                                !HP99999
   FROM PS_JOB J2                                                       !HP99999
   WHERE J2.EMPLID    = J.EMPLID                                        !HP99999
     AND J2.EMPL_RCD = J.EMPL_RCD                                     !HP99999
     AND J2.EFFDT     = J.EFFDT)                                        !HP99999
end-SELECT
  if &F.Emplid  = ' '
    move $Tax019_None_Fnd to $Msg
    print $Msg (+2,10)
  end-if
end-procedure


begin-procedure Get-EE-State
  move 0 to #Found_State
begin-SELECT
S.EMPLID, S.COMPANY, S.STATE, S.RESIDENT, S.SPECIAL_SWT_STATUS, S.SWT_ADDL_ALLOWNCES,
S.SWT_MAR_STATUS, S.SWT_ALLOWANCES, S.ANNL_EXEMPTION_AMT,
S.PERCENT_OF_FWT,  S.SWT_ADDL_AMT, S.ADDL_AMT_ADJ
S.SWT_ADDL_PCT, S.SUT_EXEMPT, S.WAGE_PLAN_CD, S.NON_RES_DECLARED,
S.SDI_STATUS, S.EFFDT
  move 1                     to #Found_State
  move &S.Company               to $Company
  move &S.Special_SWT_Status    to $Special
  move &S.SWT_Mar_Status        to $MarStat
  move &S.SWT_Allowances        to $Allow
  move &S.SWT_Addl_Amt          to $AddlAmt
  move &S.SWT_Addl_Pct          to $AddlPct
  move ''                       to $FicaStat
  move ''                       to $EICStat
  move &S.SUT_Exempt            to $FSUTExempt
  move &S.Effdt                 to $Effdt
  move &S.Resident              to $Resident
  move &S.State                 to $State
  move ''                       to $Locality
  move &S.Annl_Exemption_Amt to $AnnlExempt
  move &S.Percent_of_FWT        to $PercentFWT
  !move &S.Loc_Tax_Rt            to $LocTaxRt
  move &S.Wage_Plan_Cd          to $WagePlan
!  move &S.Swt_Locality          to $Swt_locality
  move &S.Addl_Amt_Adj          to $Addl_Amt_Adj
  move &S.SDI_Status            to $SDIStat
  move &S.Non_Res_Declared      to $NonRes
  move &S.SWT_Addl_Allownces    to $Addl_Allow
  do Print-EE-Tax
FROM PS_STATE_TAX_DATA S
WHERE EMPLID    = $Emplid
  AND EFFDT  =
  (SELECT MAX(EFFDT)
   FROM PS_STATE_TAX_DATA
   WHERE EMPLID          = S.EMPLID
     AND COMPANY         = S.COMPANY
     AND EFFDT          <= &C.Check_Dt)
end-SELECT
  if &S.Emplid           = ' '
    move $Tax019_None_Fnd to $Msg
    print $Msg          (+2,10)
  end-if
end-procedure


begin-procedure Get-EE-Local
  move 0 to #Found_Local
begin-SELECT
LD.EMPLID,
LD.COMPANY, LD.STATE, LD.LOCALITY, LD.RESIDENT, LD.LWT_ALLOWANCES,  LD.LWT_AMT, LD.LWT_PCT,
LD.EFFDT
  move 1                     to #Found_Local
  move &LD.Company           to $Company
  move ''                    to $Special
  move ''                    to $MarStat
  move &LD.LWT_Allowances    to $Allow
  move &LD.LWT_Amt           to $AddlAmt
  move &LD.LWT_Pct           to $AddlPct
  move ''                    to $FicaStat
  move ''                    to $EICStat
  move ''                    to $FSUTExempt
  move &LD.Effdt             to $Effdt
  move &LD.Resident          to $Resident
  move &LD.State             to $State
  move &LD.Locality          to $Locality
  move 0                     to $AnnlExempt
  move 0                     to $PercentFWT
!  move 0                     to $LocTaxRt
  move ''                    to $Swt_locality
!  move ''                    to $Addl_Amt_Adj
  move ''                    to $WagePlan
  move ''                    to $SDIStat
  move ''                    to $NonRes
  move 0                     to $Addl_Allow
 do Print-EE-Tax
FROM PS_LOCAL_TAX_DATA LD
WHERE EMPLID           = $Emplid
  AND EFFDT           =
  ( SELECT MAX(EFFDT)
    FROM PS_LOCAL_TAX_DATA
    WHERE EMPLID       = LD.EMPLID
      AND COMPANY      = LD.COMPANY
      AND EFFDT       <= &C.Check_Dt
      AND STATE        = LD.STATE
      AND LOCALITY     = LD.LOCALITY)
end-SELECT
  if &LD.Emplid        =  ' '
    move $Tax019_None_Fnd to $Msg
    print $Msg               (+2,10)
  end-if
end-procedure


begin-procedure Print-EE-Tax
  print $Company                                (+2,9)
  do Format-DateTime($Effdt, $out, {DEFMDY},'','')
  print $out                                    (0,18,11)
  print $State                                  (0,30)
  print $Locality                               (0,41)
  print $Resident                               (0,53)
  print $NonRes                                 (0,64)
  print $Special                                (0,74)
  print $AddlAmt                                (0,84)  edit 99,999.99
  print $AddlPct                                (0,99)  edit 99.999
  print $MarStat                                (0,113)

  if $Allow = ' ' or $Allow = ''
     print '--'                                 (0,124)
  else
     print $Allow                               (0,124) edit 999
  end-if

  if $FSUTExempt = ' ' or $FSUTExempt = ''
     print '--'                                 (0,137)
  else
     print $FSUTExempt                          (0,137)
  end-if

  if $FicaStat = ' ' or $FicaStat = ''
     print '--'                                 (0,151)
  else
     print $FicaStat                            (0,151)
  end-if

  if $EICStat = ' ' or $EICStat = ''
     print '--'                                 (0,163)
  else
     print $EICStat                             (0,163)
  end-if

  next-listing

  print $AnnlExempt                             (0,88)  edit 99999
  print $PercentFWT                             (0,99)  edit 99.999

  if $Addl_Amt_Adj = ' ' or $Addl_Amt_Adj = ''
     print '--'                                 (0,113)
  else
     print $Addl_Amt_Adj                        (0,113)
  end-if

 !  print $Swt_locality                         (0,124)
 !  print $LocTaxRt                             (0,125) edit 99

  if $Addl_Allow = ' ' or $Addl_Allow = ''
     print '--'                                 (0,137)
  else
     print $Addl_Allow                          (0,135) edit 999
  end-if

  if $WagePlan = ' ' or $WagePlan = ''
     print '--'                                 (0,151)
  else
     print $WagePlan                            (0,151)
  end-if

  if $SDIStat = ' ' or $SDIStat = ''
     print '--'                                 (0,163)
  else
     print $SDIStat                             (0,163)
  end-if

 end-procedure


begin-procedure Get-EE-Can-Tax
  move 0 to #Found_CanTax
begin-SELECT
CT.EMPLID,
CT.COMPANY,
CT.EFFDT,
CT.SPECIAL_CIT_STATUS,
CT.CIT_ADDL_AMT,
CT.CIT_ADDL_PCT,
CT.CIT_NET_CLAIM_AMT,
CT.CIT_PRESCR_AREA,
CT.CIT_TAX_CREDITS,
CT.CIT_SPECIAL_LTRS,
CT.CIT_FACTOR_Y,
CT.CIT_FACTOR_TH,
CT.CPP_SUBJECT_MONTHS,
CT.PAYROLL_TAX_EXEMPT,
CT.WAGE_LOSS_PLAN,
CT.CIT_ANNUAL_COMM,
CT.CIT_ANNUAL_EXP,
CT.UI_EXEMPT,
CT.SPECIAL_QIT_STATUS,
CT.QIT_ADDL_AMT,
CT.QIT_ADDL_PCT,
CT.QIT_NET_CLAIM_AMT,
CT.QIT_OTHER_DEDUCTS,
CT.QIT_TAX_CREDITS,
CT.QIT_SPECIAL_LTRS,
CT.QIT_PRESCR_AREA,
CT.QIT_ANNUAL_COMM,
CT.QIT_ANNUAL_EXP,
CT.LCF_AMT,
CT.UI_YEARLY_AMT,
CT.CIT_F_FACTOR_EE,
CT.TD1_ADJUST,
CT.STATUS_INDIAN,
CT.CROSS_PROVINCE,
CT.USE_PROV_OF_RES,
CT.PROVINCE,
CT.NON_INDEX_AMT

  move 1                       to #Found_CanTax
  move &CT.COMPANY             to $Company
  move &CT.EFFDT               to $Effdt
  move &CT.SPECIAL_CIT_STATUS  to $Spcl_CIT_Status
  move &CT.CIT_ADDL_AMT        to $CIT_Addl_Amt
  move &CT.CIT_ADDL_PCT        to $CIT_Addl_Pct
  move &CT.CIT_NET_CLAIM_AMT   to $CIT_Net_Claim_Amt
  move &CT.CIT_PRESCR_AREA     to $Prescr_Area
  move &CT.CIT_TAX_CREDITS     to $CIT_Tax_Credits
  move &CT.CIT_SPECIAL_LTRS    to $CIT_Spcl_Ltrs
  move &CT.CIT_FACTOR_Y        to $CIT_Factor_Y
  move &CT.CIT_FACTOR_TH       to $CIT_Factor_Th
  move &CT.CPP_SUBJECT_MONTHS  to $CPP_Subj_Mos
  move &CT.PAYROLL_TAX_EXEMPT  to $Payroll_Tax_Exempt
!  move &CT.WAGE_LOSS_PLAN      to $WagePlan
  move &CT.CIT_ANNUAL_COMM     to $CIT_Ann_Comm
  move &CT.CIT_ANNUAL_EXP      to $CIT_Ann_Exp
  move &CT.UI_EXEMPT           to $UI_Exempt
  move &CT.SPECIAL_QIT_STATUS  to $Spcl_QIT_Status
  move &CT.QIT_ADDL_AMT        to $QIT_Addl_Amt
  move &CT.QIT_ADDL_PCT        to $QIT_Addl_Pct
  move &CT.QIT_NET_CLAIM_AMT   to $QIT_Net_Clm_Amt
  move &CT.QIT_OTHER_DEDUCTS   to $QIT_Oth_Ded
  move &CT.QIT_TAX_CREDITS     to $QIT_Tax_Crdts
  move &CT.QIT_SPECIAL_LTRS    to $QIT_Spcl_Ltrs
  move &CT.QIT_PRESCR_AREA     to $QIT_Prescr_Area
  move &CT.QIT_ANNUAL_COMM     to $QIT_Ann_Comm
  move &CT.QIT_ANNUAL_EXP      to $QIT_Ann_Exp
  move &CT.LCF_AMT             to $LCF_Amt
  move &CT.UI_YEARLY_AMT       to $UI_Yearly_Amt
  move &CT.CIT_F_FACTOR_EE     to $CIT_F_Factor_EE
  move &CT.TD1_ADJUST          to $TD1_Adjust
  move &CT.STATUS_INDIAN       to $Status_Indian
  move &CT.CROSS_PROVINCE      to $Cross_Province
  move &CT.USE_PROV_OF_RES     to $Use_Prov_Of_Res
  move &CT.PROVINCE            to $Province
  move &CT.NON_INDEX_AMT       to $QC_Non_Index_amt

  do Get-Empl-WLP
  do Print-Can-EE-Tax
  do Get-TONI-Info

FROM PS_CAN_TAX_DATA  CT
WHERE EMPLID    = $Emplid
  AND EFFDT  =
  (SELECT MAX(EFFDT)
   FROM PS_CAN_TAX_DATA
   WHERE EMPLID          = CT.EMPLID
     AND COMPANY         = CT.COMPANY
     AND EFFDT          <= &C.Check_Dt)

end-SELECT
  if &CT.Emplid          = ' '
    move $Tax019_None_Fnd to $Msg
    print $Msg          (+2,10)
  end-if
end-procedure


begin-procedure Get-Empl-WLP

let $WagePlan = ''
let #WLPCount = 0

begin-SELECT
WAGE_LOSS_PLAN

  add 1 to #WLPCount
  if #WLPCount > 1
     let $WagePlan = $WagePlan || ' / '
  end-if
  let $WagePlan = $WagePlan || RTRIM(&WAGE_LOSS_PLAN, ' ')

FROM PS_EMPL_WAGELS_CAN
WHERE EMPLID = &CT.EMPLID
  AND COMPANY = &CT.COMPANY
  AND EFFDT = &CT.EFFDT
end-SELECT

end-procedure


begin-procedure Get-TONI-Info

   print ' '                              (+12,1)

begin-SELECT
PRV.PROVINCE,
PRV.CIT_NET_CLAIM_AMT,
PRV.CIT_FACTOR_Y,
PRV.PIT_K3P_AMOUNT,
PRV.LCF_AMT,
PRV.NON_INDEX_AMT

   move &PRV.PROVINCE          to $PRV_Province
   move &PRV.CIT_NET_CLAIM_AMT to $PRV_Net_Claim_Amt
   move &PRV.CIT_FACTOR_Y      to $PRV_CIT_Factor_Y
   move &PRV.PIT_K3P_AMOUNT    to $PRV_PIT_K3P_Amount
   move &PRV.LCF_AMT           to $PRV_LCF_AMT
   move &PRV.NON_INDEX_AMT     to $PRV_Non_Index_Amt

   print $PRV_Province                    (+1,52)
   print $PRV_Net_Claim_Amt               (0,64)  edit 9,999,999.99
   print $PRV_CIT_Factor_Y                (0,78)  edit 9,999,999.99
   print $PRV_PIT_K3P_Amount              (0,95)  edit 9,999,999.99
   print $PRV_LCF_Amt                     (0,113) edit 9,999,999.99
   print $PRV_Non_Index_Amt               (0,133) edit 9,999,999.99

FROM PS_CAN_TAX_PRVDATA PRV
WHERE PRV.EMPLID = &CT.EMPLID
  AND PRV.COMPANY = &CT.COMPANY
  AND PRV.EFFDT = &CT.EFFDT
end-SELECT

end-procedure


begin-procedure Print-Can-EE-Tax
   print $Company                         (+2,16)
   do Format-DateTime($Effdt, $out, {DEFMDY},'','')
   print $out                             (0,27,11)
   print $CPP_Subj_Mos                    (0,40)  edit 99
   print $Spcl_CIT_Status                 (0,59)
   print $CIT_Net_Claim_Amt               (0,67)  edit 9,999,999.99
   print $TD1_Adjust                      (0,83)  edit 9,999,999.99
   print $Prescr_Area                     (0,98)  edit 9,999,999.99
   print $CIT_Spcl_Ltrs                   (0,113) edit 9,999,999.99
   print $CIT_Factor_Y                    (0,128) edit 9,999,999.99
   print $QIT_Oth_Ded                     (0,143) edit 9,999,999.99
   next-listing
   print $WagePlan                        (0,16)
   print $UI_Exempt                       (0,41)
   print $Spcl_QIT_Status                 (0,59)
   print $QIT_Net_Clm_Amt                 (0,67)  edit 9,999,999.99
   print $LCF_Amt                         (0,86)  edit 99,999.99
   print $QIT_Prescr_Area                 (0,98)  edit 9,999,999.99
   print $QIT_Spcl_Ltrs                   (0,113) edit 9,999,999.99
   print $CIT_Factor_Th                   (0,128) edit 9,999,999.99
   print $QC_Non_Index_Amt                (0,143) edit 9,999,999.99
   print $CIT_Addl_Amt                    (+13,18)edit 99,999.99
   print $QIT_Addl_Amt                    (0,35)  edit 99,999.99
   print $Payroll_Tax_Exempt              (0,59)
   print $CIT_Ann_Comm                    (0,67) edit 9,999,999.99
   print $QIT_Ann_Comm                    (0,83) edit 9,999,999.99
   print $CIT_Tax_Credits                 (0,98) edit 9,999,999.99
   print $Status_Indian                   (0,116)
   if  $Province = 'Y'
       print $Use_Prov_Of_Res             (0,135)
   end-if
   next-listing
   print $CIT_Addl_Pct                    (0,22) edit 99.999
   print $QIT_Addl_Pct                    (0,39) edit 99.999
   print $CIT_F_Factor_EE                 (0,50) edit 9,999,999.99
   print $CIT_Ann_Exp                     (0,67) edit 9,999,999.99
   print $QIT_Ann_Exp                     (0,83) edit 9,999,999.99
   print $QIT_Tax_Crdts                   (0,98) edit 9,999,999.99
   print $Cross_Province                  (0,116)
   if  $Province = 'Y' and
       $Use_Prov_Of_Res = 'N'
       print $Province                    (0,135)
   end-if
end-procedure


#include 'reset.sqc'     !Reset printer
! #include 'askeffdt.sqc'  !Ask_Eff-Date Procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'geteandg.sqc'  !Get-EandG procedure                           !HP00001
#include 'stdapi.sqc'    !Update Process API
#include 'payrctl2.sqc'  !Select Run Contrl Parameters
#Include 'sqrtrans.sqc'  !Translate SQR strings to a given language
#Include 'getrplng.sqc'  !Gets the report language
