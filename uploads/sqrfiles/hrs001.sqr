!********************************************************
!  HRS001.SQR - Adverse Impact Report                   !
!********************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                $Date:  2006/04/07:01:55:29                           !
!             $Release:  HR9                                           !
!            $Revision:  101                                           !
!                                                                      *
!***********************************************************************

! Uncomment the following line to have debug values put into the sqr.log
! #DEFINE DEBUGHRS001

#include 'setenv.sqc'   !Set environment
#include 'hrhl01.sqc'   !Landscape Confidential Header

!**********************************************************************
!**********************************************************************
!       Program
!**********************************************************************
!**********************************************************************
Begin-Program

#IFDEF DEBUGHRS001
  DISPLAY 'FLOW: Program '
#ENDIF

!*******************************************************************************
!Begin Resolution 574458
! A common string DB2ALL_INFORMIX is defined so that two consecutive statements
! #IFNDEF DB2ALL #IFNDEF INFORMIX can be replaced by #IFNDEF DB2ALL_INFORMIX 
#IFDEF DB2ALL
  #DEFINE DB2ALL_INFORMIX
#ENDIF

#IFDEF INFORMIX
  #DEFINE DB2ALL_INFORMIX
#ENDIF

!End Resolution 574458
!***************************************

  LET $Global_Prepped = 'FALSE'
  DO Use-Standard-Layout
  DO Init-DateTime
  DO Init-Number
  DO Get-Current-DateTime
  DO Init-Report
  DO Create-Arrays

  !************************************************************
  ! Set the confidential flag
  !************************************************************
  LET $Confidential = 'YES'

  LET #i = 0

  !************************************************************
  ! Date Dynamic SQL
  !************************************************************

  IF $date-indicator = '2'
     !DO Format-DateTime($FromDate,$FromFormatted,{DEFCMP},'','')
     !DO Format-DateTime($ThruDate,$ThruFormatted,{DEFCMP},'','')
     LET $B-WHERE-CLAUSE = ' AND B.HRS_STATUS_DT BETWEEN ' || $QUOTE || $FromDate || $QUOTE || ' AND ' || $QUOTE || $ThruDate || $QUOTE
     LET $C-WHERE-CLAUSE = ' AND C1.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     LET $D-WHERE-CLAUSE = ' AND ADE1.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     LET $E-WHERE-CLAUSE = ' AND PDE1.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     LET $E1-WHERE-CLAUSE = ' AND PDE3.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     LET $J-WHERE-CLAUSE = ' AND J.EFFDT BETWEEN ' || $QUOTE || $FromDate || $QUOTE || ' AND ' || $QUOTE || $ThruDate || $QUOTE
     !*************** Begin Resolution - 579137  **************
     !LET $H-WHERE-CLAUSE = ' AND J1.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
      LET $H-WHERE-CLAUSE = ' AND J1.EFFDT BETWEEN ' || $QUOTE || $FromDate || $QUOTE || ' AND ' || $QUOTE || $ThruDate || $QUOTE
     !*************** End Resolution - 579137    **************
     LET $E2-WHERE-CLAUSE = ' AND E2.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     !Begin Resolution 574458
     !LET $E22-WHERE-CLAUSE = ' AND E2.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     LET $E22-WHERE-CLAUSE = ' AND E22.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     !End Resolution 574458
     
     LET $AsOfDate = $ThruDate
ELSE
     LET $B-WHERE-CLAUSE = ' AND B.HRS_STATUS_DT <= ' || $QUOTE || $AsOfDate || $QUOTE
     LET $C-WHERE-CLAUSE = ' AND C1.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     LET $D-WHERE-CLAUSE = ' AND ADE1.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     LET $E-WHERE-CLAUSE = ' AND PDE1.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     LET $E1-WHERE-CLAUSE = ' AND PDE3.EFFDT <= ' || $QUOTE || $ThruDate || $QUOTE
     LET $J-WHERE-CLAUSE = ' AND J.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     LET $H-WHERE-CLAUSE = ' AND J1.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     LET $E2-WHERE-CLAUSE = ' AND E2.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     !Begin Resolution 574458
     !LET $E22-WHERE-CLAUSE = ' AND E2.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     LET $E22-WHERE-CLAUSE = ' AND E22.EFFDT <= ' || $QUOTE || $AsOfDate || $QUOTE
     !End Resolution 574458
  END-IF


  !************************************************************
  ! Generate report for a single establishment
  !************************************************************
  IF $ReportChoice = '2'
     LET $Emp-Where-Clause = ' AND J.ESTABID = ' || $Quote || $Estab || $Quote
     LET $App-Where-Clause = ' AND B1.ESTABID = ' || $Quote || $Estab || $Quote
     DO Get-Establishment-Info
     DO Process-Main
  ELSE
     do Get-Number-Of-Establishments
     WHILE #i < #count
         LET $Estab = EstablishmentIDs.theEstab(#i)
         DO Get-Establishment-Info
         LET $Emp-Where-Clause = ' AND J.ESTABID = ' || $Quote || $Estab || $Quote
         LET $App-Where-Clause = ' AND B1.ESTABID = ' || $Quote || $Estab || $Quote
         DO Process-Main
         ADD 1 to #i
         IF #i < #count
             !*****************************************************
             ! Print each establishment on a separate page
             !*****************************************************
             NEW-PAGE
         END-IF
     END-WHILE
  END-IF

   !********************************************************************
   !  Print End-of-Report message on the very last page
   !********************************************************************
   ALTER-PRINTER
      font=4
      point-size=12

   print '*** End of Report ***' (+3,1) Bold Center


  do Stdapi-Term
End-Program

!**********************************************************************
!**********************************************************************
!       Init-Report
!**********************************************************************
!**********************************************************************
begin-procedure Init-Report

#IFDEF DEBUGHRS001
  DISPLAY 'FLOW: Init-Report'
#ENDIF


  move 'HRS001' to $ReportID
  move 'Adverse Impact Report' to $ReportTitle

  display $ReportTitle

#IFDEF DEBUGHRS001
  display 'Report ID: ' NOLINE
  display $ReportID
#ENDIF

  do Stdapi-Init


  if $prcs_process_instance = ''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
     STOP QUIET
  else
     do Select-Parameters
  end-if
display '$proc ' noline
display $prcs_process_instance
display '#proc' noline
display #prcs_process_instance
end-procedure

!**********************************************************************
!**********************************************************************
!       Create-Arrays
!**********************************************************************
!**********************************************************************
Begin-Procedure Create-Arrays
DISPLAY 'FLOW:Create-Arrays'

  CREATE-ARRAY NAME=AdverseImpact
               SIZE=13
               FIELD=summary:char:8
               FIELD=detail:number:8
               FIELD=LabelSummary:char
               FIELD=LabelDetail:char

  PUT 'Hiring Rate             ' into AdverseImpact(1)  LabelSummary
  PUT 'Promotion Rate          ' into AdverseImpact(2)  LabelSummary
  PUT 'Termination Rate        ' into AdverseImpact(3)  LabelSummary
  PUT '#Applicants             ' into AdverseImpact(1)  LabelDetail
  PUT 'Applicants %            ' into AdverseImpact(2)  LabelDetail
  PUT '#Hires                  ' into AdverseImpact(3)  LabelDetail
  PUT 'Hires %                 ' into AdverseImpact(4)  LabelDetail
  PUT '#Promotions             ' into AdverseImpact(5)  LabelDetail
  PUT 'Promotions %            ' into AdverseImpact(6)  LabelDetail
  PUT '#Terminations           ' into AdverseImpact(7)  LabelDetail
  PUT 'Terminations %          ' into AdverseImpact(8)  LabelDetail
  PUT 'Total # Employees       ' into AdverseImpact(9)  LabelDetail
  PUT 'as of Thru Date         ' into AdverseImpact(10) LabelDetail
  PUT 'Total %                 ' into AdverseImpact(11) LabelDetail
  PUT 'N/A                     ' into AdverseImpact(1)  summary(1)
  PUT 'N/A                     ' into AdverseImpact(2)  summary(1)
  PUT 'N/A                     ' into AdverseImpact(3)  summary(1)

End-Procedure Create-Arrays

!**********************************************************************
!**********************************************************************
!Get-Values
!**********************************************************************
!**********************************************************************
begin-procedure Get-Values
#IFDEF DEBUGHRS001
  DISPLAY 'FLOW: Get-Values'
#ENDIF

   do Get-From-Thru-Date
   do Get-Establishment
   do Get-Run-Scope
   do Get-Company
   do Get-CTL_ESTABID
   do Get-Language-Code

   do Get-Date-Indicator
   do Get-As-Of-Date

   LET $Quote = ''''

   LET $EntityName = $Company

end-procedure Get-Values

!**********************************************************************
!**********************************************************************
!       Process-Main
!**********************************************************************
!**********************************************************************
Begin-Procedure Process-Main
DISPLAY 'FLOW:Process-Main'

IF $Global_Prepped = 'FALSE'
  DO Prep-Global
  LET $Global_Prepped = 'TRUE'
END-IF

  DO Process-Applicants-Requisition
  DO Process-Job
  DO Scrub-Temp-Table
  DO Calc-Total-Employees
  DO Print-AdverseImpact-Summary
  DO Print-AdverseImpact-Detail
  DO Cleanup-Temp-Table

End-Procedure

!**********************************************************************
!**********************************************************************
!       Process-Applicants-Requisition
!**********************************************************************
!**********************************************************************
Begin-Procedure Process-Applicants-Requisition
DISPLAY 'FLOW:Process-Applicants-Requisition'

!Begin Resolution 574458   
!#IFNDEF DB2ALL
!#IFNDEF INFORMIX
#IFNDEF DB2ALL_INFORMIX
!End Resolution 574458
BEGIN-SQL
INSERT INTO PS_R_APP001_TMP (
PROCESS_INSTANCE
,ACTION
,SEX
,ETHNIC_GROUP
,EE_COUNT)
SELECT
#prcs_process_instance
,'APP'
,A.SEX
,ETH.ETHNIC_GROUP
,COUNT(*)
FROM PS_HRS_APPLICANT A
,PS_HRS_APP_PROFILE G
,PS_HRS_RCMNT_JOB B
,PS_HRS_RCMNT_I B1
,PS_HRS_JO_I D
,PS_JOBCODE_TBL C
,PS_HRS_APP_DIV_ETH DVR
,PS_ETHNIC_GRP_TBL ETH
,PS_HRS_APP_USA ADE
WHERE A.HRS_PERSON_ID = G.HRS_PERSON_ID
  AND G.HRS_PERSON_ID = DVR.HRS_PERSON_ID
  AND B.HRS_PERSON_ID = G.HRS_PERSON_ID
  AND A.HRS_PERSON_ID = ADE.HRS_PERSON_ID
  [$B-WHERE-CLAUSE]
!  AND DVR.PRIMARY_INDICATOR = 'Y' 
  AND DVR.SETID = ETH.SETID 
  AND DVR.HRS_ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
  AND ETH.EFFDT = (SELECT MAX(E2.EFFDT) FROM PS_ETHNIC_GRP_TBL E2 
                  WHERE E2.SETID = ETH.SETID 
                  AND E2.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
                  [$E2-WHERE-CLAUSE])
  AND ETH.ETHNIC_GROUP <> '6'
  AND A.SEX <> 'U'
  AND (A.APP_PER_STATUS = 'N' OR A.APP_PER_STATUS = 'A')
  AND ADE.US_WORK_ELIGIBILTY = 'Y'
  AND C.SETID = B.SETID
  AND C.JOBCODE = B.JOBCODE
  AND B1.HRS_PERSON_ID = B.HRS_PERSON_ID
  AND B1.HRS_RCMNT_ID = B.HRS_RCMNT_ID 
  AND D.HRS_JOB_OPENING_ID = B1.HRS_JOB_OPENING_ID
  AND A.STATUS_CODE <> '030'
  AND C.EFFDT = (SELECT MAX(C1.EFFDT)
                 FROM PS_JOBCODE_TBL C1
                 WHERE C1.JOBCODE = C.JOBCODE
                 AND C1.SETID = C.SETID
  [$C-WHERE-CLAUSE]
  )
  AND ADE.EFFDT = (SELECT MAX(ADE1.EFFDT)
                   FROM PS_HRS_APP_USA ADE1
                   WHERE ADE1.HRS_PERSON_ID = ADE.HRS_PERSON_ID
  [$D-WHERE-CLAUSE]
  )
  AND C.SETID = (SELECT XX.SETID
                 FROM PS_SET_CNTRL_REC XX
                 WHERE XX.SETCNTRLVALUE = G.BUSINESS_UNIT
                 AND XX.RECNAME = 'JOBCODE_TBL')
[$App-Where-Clause]
GROUP BY A.SEX,ETH.ETHNIC_GROUP,A.STATUS_CODE
END-SQL

#ELSE
BEGIN-SELECT
A.SEX                  &APP_SEX
ETH2.ETHNIC_GROUP      &APP_ETHNIC_GROUP
COUNT(*)               &APP_COUNT

        DO DB2-Insert-Row(#prcs_process_instance,'APP', &APP_SEX, &APP_ETHNIC_GROUP, &APP_COUNT)

FROM PS_HRS_APPLICANT A
,PS_HRS_APP_PROFILE G
,PS_HRS_RCMNT_JOB B
,PS_HRS_RCMNT_I B1
,PS_HRS_JO_I D
,PS_JOBCODE_TBL C
,PS_HRS_APP_DIV_ETH DVR2
,PS_ETHNIC_GRP_TBL ETH2
,PS_HRS_APP_USA ADE
WHERE A.HRS_PERSON_ID = G.HRS_PERSON_ID
  AND G.HRS_PERSON_ID = DVR2.HRS_PERSON_ID
  AND B.HRS_PERSON_ID = G.HRS_PERSON_ID
  AND A.HRS_PERSON_ID = ADE.HRS_PERSON_ID
  [$B-WHERE-CLAUSE]
!  AND DVR2.PRIMARY_INDICATOR = 'Y' 
  AND DVR2.SETID = ETH2.SETID 
!Begin Resolution 574458
!AND DVR2.ETHNIC_GRP_CD = ETH2.ETHNIC_GRP_CD 
  AND DVR2.HRS_ETHNIC_GRP_CD = ETH2.ETHNIC_GRP_CD 
!End Resolution 574458
  AND ETH2.EFFDT = (SELECT MAX(E22.EFFDT) FROM PS_ETHNIC_GRP_TBL E22 
                  WHERE E22.SETID = ETH2.SETID 
                  AND E22.ETHNIC_GRP_CD = ETH2.ETHNIC_GRP_CD 
                  [$E22-WHERE-CLAUSE])
  AND ETH2.ETHNIC_GROUP <> '6'
  AND A.SEX <> 'U'
  AND (A.APP_PER_STATUS = 'N' OR A.APP_PER_STATUS = 'A')
  AND ADE.US_WORK_ELIGIBILTY = 'Y'
  AND C.SETID = B.SETID
  AND C.JOBCODE = B.JOBCODE
  AND B1.HRS_PERSON_ID = B.HRS_PERSON_ID
  AND B1.HRS_RCMNT_ID = B.HRS_RCMNT_ID 
  AND D.HRS_JOB_OPENING_ID = B1.HRS_JOB_OPENING_ID
  AND A.STATUS_CODE <> '030'
  AND C.EFFDT = (SELECT MAX(C1.EFFDT)
                 FROM PS_JOBCODE_TBL C1
                 WHERE C1.JOBCODE = C.JOBCODE
                 AND C1.SETID = C.SETID
  [$C-WHERE-CLAUSE]
  )
  AND ADE.EFFDT = (SELECT MAX(ADE1.EFFDT)
                   FROM PS_HRS_APP_USA ADE1
                   WHERE ADE1.HRS_PERSON_ID = ADE.HRS_PERSON_ID
  [$D-WHERE-CLAUSE]
  )
  AND C.SETID = (SELECT XX.SETID
                 FROM PS_SET_CNTRL_REC XX
                 WHERE XX.SETCNTRLVALUE = G.BUSINESS_UNIT
                 AND XX.RECNAME = 'JOBCODE_TBL')
[$App-Where-Clause]
GROUP BY A.SEX,ETH2.ETHNIC_GROUP,A.STATUS_CODE
END-SELECT
#ENDIF
!Begin Resolution 574458
!#ENDIF
!End Resolution 574458
End-Procedure Process-Applicants-Requisition

!**********************************************************************
!**********************************************************************
!       DB2-Insert-Row
!**********************************************************************
! Used to get around platform limitation concerning INSERT statements
! with a nested SELECT
!**********************************************************************


Begin-Procedure DB2-Insert-Row(#prcs_process_instance, $Action, $Sex, $EthnicGroup, #Count)

BEGIN-SQL
INSERT INTO PS_R_APP001_TMP(
PROCESS_INSTANCE
,ACTION
,SEX
,ETHNIC_GROUP
,EE_COUNT)
 VALUES(
#prcs_process_instance
,$Action
,$Sex
,$EthnicGroup
,#Count)
END-SQL
End-Procedure DB2-Insert-Row

!**********************************************************************
!**********************************************************************
!       Process-Job
!**********************************************************************
!**********************************************************************
Begin-Procedure Process-Job
DISPLAY 'FLOW:Process-Job'

!Begin Resolution 574458
!#IFNDEF DB2ALL
!#IFNDEF INFORMIX
#IFNDEF DB2ALL_INFORMIX
!End Resolution 574458
BEGIN-SQL
INSERT INTO PS_R_APP001_TMP (
PROCESS_INSTANCE
,ACTION
,SEX
,ETHNIC_GROUP
,EE_COUNT)
SELECT
#prcs_process_instance
,J.ACTION
,PDE.SEX
,ETH.ETHNIC_GROUP
,COUNT(*)
FROM PS_PERS_DATA_EFFDT PDE
,PS_JOB J
,PS_JOBCODE_TBL C
,PS_DIVERS_ETHNIC DVR
,PS_ETHNIC_GRP_TBL ETH
WHERE PDE.EMPLID = J.EMPLID
  AND PDE.EMPLID = DVR.EMPLID
  AND J.JOBCODE = C.JOBCODE
  AND J.SETID_JOBCODE = C.SETID
  AND J.JOB_INDICATOR = 'P'
  [$J-WHERE-CLAUSE]
  AND J.ACTION IN ('HIR','REH','TER','LOF','PRO','RET', 'TER', 'TWB', 'TWP', 'RWP')
  AND DVR.PRIMARY_INDICATOR = 'Y' 
  AND DVR.SETID = ETH.SETID 
  AND DVR.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
  AND ETH.EFFDT = (SELECT MAX(E2.EFFDT) FROM PS_ETHNIC_GRP_TBL E2 
                  WHERE E2.SETID = ETH.SETID 
                  AND E2.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
                  [$E2-WHERE-CLAUSE])
  AND ETH.ETHNIC_GROUP <> '6'
  AND PDE.SEX <> 'U'
  AND (EXISTS (SELECT 'X' FROM PS_PERS_DATA_USA PDE2
                 WHERE PDE2.EMPLID = PDE.EMPLID
                    AND PDE2.EFFDT = (SELECT MAX(EFFDT) FROM PS_PERS_DATA_USA PDE3
                                      WHERE PDE3.EMPLID = PDE2.EMPLID 
                          [$E1-WHERE-CLAUSE] )
                 AND PDE2.US_WORK_ELIGIBILTY = 'Y')

   OR NOT EXISTS (SELECT 'X' FROM PS_PERS_DATA_USA PDE2
                 WHERE PDE2.EMPLID = PDE.EMPLID 
                       AND PDE2.EFFDT = (SELECT MAX(EFFDT) FROM PS_PERS_DATA_USA PDE3
                                      WHERE PDE3.EMPLID = PDE2.EMPLID
                                      [$E1-WHERE-CLAUSE] ))) 
  AND J.EEO_CLASS <> 'E'  !Exclude from counts (Job record)
 ! Begin Incident 1436783003
 !AND C.EEO1CODE  <> 'N'  !Not counted for EEO reporting (JobCode Table)
 ! End Incident 1436783003 
  AND PDE.EFFDT = (SELECT MAX (PDE1.EFFDT)
                   FROM PS_PERS_DATA_EFFDT PDE1
                   WHERE PDE1.EMPLID = PDE.EMPLID
  [$E-WHERE-CLAUSE]
  )
  AND C.EFFDT = (SELECT MAX(C1.EFFDT)
                 FROM PS_JOBCODE_TBL C1
                 WHERE C1.JOBCODE = C.JOBCODE
                 AND C1.SETID = C.SETID
  [$C-WHERE-CLAUSE]
  )
[$Emp-Where-Clause]
GROUP BY J.ACTION,PDE.SEX,ETH.ETHNIC_GROUP
END-SQL

#ELSE
BEGIN-SELECT
J.ACTION            &J_ACTION
PDE.SEX             &J_SEX
ETH2.ETHNIC_GROUP   &J_ETHNIC_GROUP
COUNT(*)            &J_COUNT


        DO DB2-Insert-Row(#prcs_process_instance,&J_ACTION, &J_SEX, &J_ETHNIC_GROUP, &J_COUNT)

FROM PS_PERS_DATA_EFFDT PDE
,PS_JOB J
,PS_JOBCODE_TBL C
,PS_DIVERS_ETHNIC DVR2
,PS_ETHNIC_GRP_TBL ETH2
WHERE PDE.EMPLID = J.EMPLID
  AND PDE.EMPLID = DVR2.EMPLID
  AND J.JOBCODE = C.JOBCODE
  AND J.SETID_JOBCODE = C.SETID
  AND J.JOB_INDICATOR = 'P'
  [$J-WHERE-CLAUSE]
  AND J.ACTION IN ('HIR','REH','TER','LOF','PRO','RET', 'TER', 'TWB', 'TWP', 'RWP')
  AND DVR2.PRIMARY_INDICATOR = 'Y' 
  AND DVR2.SETID = ETH2.SETID 
  AND DVR2.ETHNIC_GRP_CD = ETH2.ETHNIC_GRP_CD 
  AND ETH2.EFFDT = (SELECT MAX(E22.EFFDT) FROM PS_ETHNIC_GRP_TBL E22 
                  WHERE E22.SETID = ETH2.SETID 
                  AND E22.ETHNIC_GRP_CD = ETH2.ETHNIC_GRP_CD 
                  [$E22-WHERE-CLAUSE])
  AND ETH2.ETHNIC_GROUP <> '6'
  AND PDE.SEX <> 'U'
  AND (EXISTS (SELECT 'X' FROM PS_PERS_DATA_USA PDE2
                 WHERE PDE2.EMPLID = PDE.EMPLID
                    AND PDE2.EFFDT = (SELECT MAX(EFFDT) FROM PS_PERS_DATA_USA PDE3
                                      WHERE PDE3.EMPLID = PDE2.EMPLID 
                          [$E1-WHERE-CLAUSE] )
                 AND PDE2.US_WORK_ELIGIBILTY = 'Y')

   OR NOT EXISTS (SELECT 'X' FROM PS_PERS_DATA_USA PDE2
                 WHERE PDE2.EMPLID = PDE.EMPLID 
                       AND PDE2.EFFDT = (SELECT MAX(EFFDT) FROM PS_PERS_DATA_USA PDE3
                                      WHERE PDE3.EMPLID = PDE2.EMPLID
                                      [$E1-WHERE-CLAUSE] ))) 
  AND J.EEO_CLASS <> 'E'  !Exclude from counts (Job record)
  ! Begin Incident 1436783003
     !AND C.EEO1CODE <> 'N'  !Not counted for EEO reporting (JobCode Table)
  ! End Incident 1436783003 
  AND PDE.EFFDT = (SELECT MAX (PDE1.EFFDT)
                   FROM PS_PERS_DATA_EFFDT PDE1
                   WHERE PDE1.EMPLID = PDE.EMPLID
  [$E-WHERE-CLAUSE]
  )
  AND C.EFFDT = (SELECT MAX(C1.EFFDT)
                 FROM PS_JOBCODE_TBL C1
                 WHERE C1.JOBCODE = C.JOBCODE
                 AND C1.SETID = C.SETID
  [$C-WHERE-CLAUSE]
  )
[$Emp-Where-Clause]
GROUP BY J.ACTION,PDE.SEX,ETH2.ETHNIC_GROUP
END-SELECT
#ENDIF
!Begin Resolution 574458
!#ENDIF
!End Resolution 574458
End-Procedure Process-Job

!**********************************************************************
!**********************************************************************
!       Scrub-Temp-Table
!**********************************************************************
!**********************************************************************
Begin-Procedure Scrub-Temp-Table
DISPLAY 'FLOW:Scrub-Temp-Table'


BEGIN-SQL
UPDATE PS_R_APP001_TMP
SET ACTION = 'HIR'
WHERE ACTION = 'REH'
  AND PROCESS_INSTANCE = #prcs_process_instance
END-SQL

BEGIN-SQL
UPDATE PS_R_APP001_TMP
SET ACTION = 'TER'
WHERE ACTION IN ('LOF','RET','TWB','TWP','RWP')
  AND PROCESS_INSTANCE = #prcs_process_instance
END-SQL

End-Procedure Scrub-Temp-Table

!**********************************************************************
!**********************************************************************
!       Prep-Global
!**********************************************************************
!**********************************************************************
Begin-Procedure Prep-Global
DISPLAY 'Flow: Prep-Global'

  do Init_Report_Translation ($ReportID, $language_cd)

  do Get_Field_Information ('HRS001',     'ADVS_IMP_SUMMARY',           $ADVS_IMP_SUMMARY,      #DW)
  do Get_Field_Information ('HRS001',     'ADVS_IMP_BY_GRPS',           $ADVS_IMP_BY_GRPS,      #DW)
  do Get_Field_Information ('HRS001',     'ADVS_IMP_BY_GNDR',           $ADVS_IMP_BY_GNDR,      #DW)
  do Get_Field_Information ('HRS001',     'COMPARISON',                 $COMPARISON,            #DW)
  do Get_Field_Information ('HRS001',     'EEO_GROUPS',                 $EEO_GROUPS,            #DW)
  do Get_Field_Information ('HRS001',     'EEO_GROUP',                  $EEO_GROUP,             #DW)
  do Get_Field_Information ('HRS001',     'GENDER_GROUP',               $GENDER_GROUP,          #DW)
  do Get_Field_Information ('HRS001',     'ACTION',                     $ACTION,                #DW)
  do Get_Field_Information ('HRS001',     'WHITE',                      $WHITE,                 #DW)
  do Get_Field_Information ('HRS001',     'BLACK',                      $BLACK,                 #DW)
  do Get_Field_Information ('HRS001',     'HISPANIC',                   $HISPANIC,              #DW)
  do Get_Field_Information ('HRS001',     'ASIAN',                      $ASIAN,                 #DW)
  do Get_Field_Information ('HRS001',     'AM.INDIAN',                  $AM.INDIAN,             #DW)
  do Get_Field_Information ('HRS001',     'MALE',                       $MALE,                  #DW)
  do Get_Field_Information ('HRS001',     'FEMALE',                     $FEMALE,                #DW)
  do Get_Field_Information ('HRS001',     'HIRING_RATE',                $HIRING_RATE,           #DW)
  do Get_Field_Information ('HRS001',     'PROMOTION_RATE',             $PROMOTION_RATE,        #DW)
  do Get_Field_Information ('HRS001',     'TERMINATION_RATE',           $TERMINATION_RATE,      #DW)
  do Get_Field_Information ('HRS001',     'ADVS_IMP_DTL',               $ADVS_IMP_DTL,          #DW)
  do Get_Field_Information ('HRS001',     'SCS_RATE_GRPS',              $SCS_RATE_GRPS,         #DW)
  do Get_Field_Information ('HRS001',     'SCS_RATE_GNDR',              $SCS_RATE_GNDR,         #DW)
  do Get_Field_Information ('HRS001',     'APPLICANTS',                 $APPLICANTS,            #DW)
  do Get_Field_Information ('HRS001',     'APPLICANTS_PCT',             $APPLICANTS_PCT,        #DW)
  do Get_Field_Information ('HRS001',     'HIRES',                      $HIRES,                 #DW)
  do Get_Field_Information ('HRS001',     'HIRES_PCT',                  $HIRES_PCT,             #DW)
  do Get_Field_Information ('HRS001',     'PROMOTIONS',                 $PROMOTIONS,            #DW)
  do Get_Field_Information ('HRS001',     'PROMOTIONS_PCT',             $PROMOTIONS_PCT,        #DW)
  do Get_Field_Information ('HRS001',     'TERMINATIONS',               $TERMINATIONS,          #DW)
  do Get_Field_Information ('HRS001',     'TERMINATIONS_PCT',           $TERMINATIONS_PCT,      #DW)
  do Get_Field_Information ('HRS001',     'TOT_EMPLOYEES',              $TOT_EMPLOYEES,         #DW)
  do Get_Field_Information ('HRS001',     'AS_OF_THRU_DATE',            $AS_OF_THRU_DATE,       #DW)
  do Get_Field_Information ('HRS001',     'TOTAL',                      $TOTAL,                 #DW)

End-Procedure Prep-Global

!**********************************************************************
!**********************************************************************
!       Print-AdverseImpact-Summary
!**********************************************************************
!**********************************************************************
Begin-Procedure Print-AdverseImpact-Summary
DISPLAY 'FLOW:Print-AdverseImpact-Summary'

   ALTER-PRINTER
      point-size=10
      font=4

    Print $ADVS_IMP_SUMMARY     (+2, 5)   BOLD
    Print $ADVS_IMP_BY_GRPS     (+2, 27)  BOLD
    Print $ADVS_IMP_BY_GNDR     (,70)     BOLD

   ALTER-PRINTER
      point-size=7

     print $EEO_GROUPS (+1, 36)  BOLD
     print $COMPARISON (+1, 22)
     print $COMPARISON (, 70)
     print $EEO_GROUP  (+1, 22)
     print $GENDER_GROUP (, 70)
     print $ACTION (+1,7)
     print $WHITE (,23)
     print $BLACK (,31)
     print $HISPANIC (,39)
     print $ASIAN (,47)
     print $AM.INDIAN (,55)
     print $MALE (,72)
     print $FEMALE (,82)

GRAPHIC (,1,104) HORZ-LINE

  !************************************************************
  ! Load the values into an array
  !************************************************************
BEGIN-SELECT
Z.ACTION
Z.SEX
Z.ETHNIC_GROUP
Z.EE_COUNT

   LET #AI_Col = TO_NUMBER(&Z.ETHNIC_GROUP)
   
   ! Begin Incident 1436783003
   if #AI_Col = 7 
   let #AI_Col = 4         
   end-if
   ! End Incident 1436783003 

   LET $EmpAction = Rtrim(&Z.ACTION,' ')
   EVALUATE $EmpAction
      WHEN = 'APP'
         LET #AI_Row = 1
         BREAK
      WHEN = 'HIR'
         LET #AI_Row = 3
         BREAK
      WHEN = 'PRO'
         LET #AI_Row = 5
         BREAK
      WHEN = 'TER'
         LET #AI_Row = 7
         BREAK
      WHEN = 'TOT'
         LET #AI_Row = 10
         BREAK
   END-EVALUATE

  ARRAY-ADD &Z.EE_COUNT TO AdverseImpact(#AI_Row) detail(#AI_Col)

   Let #ct = &Z.EE_COUNT

   LET $Sex = Rtrim(&Z.SEX,' ')

   IF $Sex = 'M'
      LET #AI_Col = 6
   ELSE
      LET #AI_Col = 7
   END-IF

  ARRAY-ADD &Z.EE_COUNT TO AdverseImpact(#AI_Row) detail(#AI_Col)


FROM PS_R_APP001_TMP Z
WHERE Z.PROCESS_INSTANCE = #prcs_process_instance
END-SELECT

  !***********************************
  ! Print out Adverse Impact Summary
  !***********************************
ALTER-PRINTER
   point-size=7

MOVE 1 TO #JRow

WHILE #JRow <= 3

   GET $Out FROM AdverseImpact(#JRow) LabelSummary

   IF #Jrow = 2
      GRAPHIC (+1,1,104) box 1 0 15
   ELSE
      POSITION (+1)
   END-IF

   PRINT $Out (, 7)

   GET $na FROM AdverseImpact(#JRow) summary(1)
   PRINT $na (, 23)
   PRINT $na (, 72)

!********************
!********************
!    Hiring Rate
!********************
!********************

      !*******************************
      ! Define Comparison EEO Group
      !*******************************
      GET #app_white FROM AdverseImpact(1) detail(1)
      GET #hir_white FROM AdverseImpact(3) detail(1)

      IF #app_white <> 0
          LET #hircom_ratio = #hir_white/#app_white
      ELSE
          LET #hircom_ratio = 0
      END-IF

      !********************************
      ! Define Comparison Gender Group
      !********************************
      GET #app_male FROM AdverseImpact(1) detail(6)
      GET #hir_male FROM AdverseImpact(3) detail(6)

      IF #app_male <> 0
          LET #hirsex_ratio = #hir_male/#app_male
      ELSE
          LET #hirsex_ratio = 0
      END-IF

      !******************************
      ! Calculate Adverse Impact
      !******************************
      MOVE 2 to #JCol
      WHILE #JCol <= 7
          IF #JCol != 6

            GET #app FROM AdverseImpact(1) detail(#JCol)
            GET #hir FROM AdverseImpact(3) detail(#JCol)

            IF #app <> 0
                LET #hir_ratio = #hir/#app
            ELSE
                LET #hir_ratio = 0
            END-IF

            IF #JCol = 7
                IF #hir_ratio < (0.8 * #hirsex_ratio)
                    PUT 'YES' INTO AdverseImpact(1) summary(#JCol)
                ELSE
                    PUT 'NO' INTO AdverseImpact(1) summary(#JCol)
                END-IF
            ELSE
                IF #hir_ratio < (0.8 * #hircom_ratio)
                    PUT 'YES' INTO AdverseImpact(1) summary(#JCol)
                ELSE
                    PUT 'NO' INTO AdverseImpact(1) summary(#JCol)
                END-IF
             END-IF

            GET $yn FROM AdverseImpact(1) summary(#JCol)


            IF #JCol <= 5
                LET #PrintCol = 15 + (8 * #JCol)
            ELSE
                LET #PrintCol = 12 + (10 * #JCol)
            END-IF

            IF #JRow = 1
                PRINT $yn (,#PrintCol,)
            END-IF
          END-IF

            ADD 1 TO #JCol
        END-WHILE

!********************
!********************
!    Promotion Rate
!********************
!********************

      !*******************************
      ! Define Comparison EEO Group
      !*******************************
      GET #pro_white FROM AdverseImpact(5) detail(1)
      GET #tot_white FROM AdverseImpact(10) detail(1)

      IF #tot_white <> 0
          LET #procom_ratio = #pro_white/#tot_white
      ELSE
          LET #procom_ratio = 0
      END-IF

      !********************************
      ! Define Comparison Gender Group
      !********************************
      GET #pro_male FROM AdverseImpact(5) detail(6)
      GET #tot_male FROM AdverseImpact(10) detail(6)

      IF #tot_male <> 0
          LET #prosex_ratio = #pro_male/#tot_male
      ELSE
          LET #prosex_ratio = 0
      END-IF

      !******************************
      ! Calculate Adverse Impact
      !******************************
      MOVE 2 to #JCol
      WHILE #JCol <= 7
          IF #JCol != 6

            GET #pro FROM AdverseImpact(5) detail(#JCol)
            GET #tot FROM AdverseImpact(10) detail(#JCol)

            IF #tot <> 0
                LET #pro_ratio = #pro/#tot
            ELSE
                LET #pro_ratio = 0
            END-IF

            IF #JCol = 7
                IF #pro_ratio < (0.8 * #prosex_ratio)
                    PUT 'YES' INTO AdverseImpact(2) summary(#JCol)
                ELSE
                    PUT 'NO' INTO AdverseImpact(2) summary(#JCol)
                END-IF
            ELSE
                IF #pro_ratio < (0.8 * #procom_ratio)
                    PUT 'YES' INTO AdverseImpact(2) summary(#JCol)
                ELSE
                    PUT 'NO' INTO AdverseImpact(2) summary(#JCol)
                END-IF
             END-IF

            GET $yn FROM AdverseImpact(2) summary(#JCol)


            IF #JCol <= 5
                LET #PrintCol = 15 + (8 * #JCol)
            ELSE
                LET #PrintCol = 12 + (10 * #JCol)
            END-IF

            IF #JRow = 2
                PRINT $yn (,#PrintCol,)
            END-IF
          END-IF

            ADD 1 TO #JCol
        END-WHILE


!********************
!********************
!  Termination Rate
!********************
!********************

      !*******************************
      ! Define Comparison EEO Group
      !*******************************
      GET #ter_white FROM AdverseImpact(7) detail(1)
      GET #tot_white FROM AdverseImpact(10) detail(1)

      IF #tot_white <> 0
          LET #tercom_ratio = #ter_white/#tot_white
      ELSE
          LET #tercom_ratio = 0
      END-IF

      !********************************
      ! Define Comparison Gender Group
      !********************************
      GET #ter_male FROM AdverseImpact(7) detail(6)
      GET #tot_male FROM AdverseImpact(10) detail(6)

      IF #tot_male <> 0
          LET #tersex_ratio = #ter_male/#tot_male
      ELSE
          LET #tersex_ratio = 0
      END-IF

      !******************************
      ! Calculate Adverse Impact
      !******************************
        MOVE 2 to #JCol
        WHILE #JCol <= 7
          IF #JCol != 6

            GET #ter FROM AdverseImpact(5) detail(#JCol)
            GET #tot FROM AdverseImpact(10) detail(#JCol)

            IF #tot <> 0
                LET #ter_ratio = #ter/#tot
            ELSE
                LET #ter_ratio = 0
            END-IF

            IF #JCol = 7
                IF #ter_ratio < (0.8 * #tersex_ratio)
                    PUT 'YES' INTO AdverseImpact(3) summary(#JCol)
                ELSE
                    PUT 'NO' INTO AdverseImpact(3) summary(#JCol)
                END-IF
            ELSE
                IF #ter_ratio < (0.8 * #tercom_ratio)
                    PUT 'YES' INTO AdverseImpact(3) summary(#JCol)
                ELSE
                    PUT 'NO' INTO AdverseImpact(3) summary(#JCol)
                END-IF
             END-IF

            GET $yn FROM AdverseImpact(3) summary(#JCol)


            IF #JCol <= 5
                LET #PrintCol = 15 + (8 * #JCol)
            ELSE
                LET #PrintCol = 12 + (10 * #JCol)
            END-IF

            IF #JRow = 3
                PRINT $yn (,#PrintCol,)
            END-IF
          END-IF

            ADD 1 TO #JCol
        END-WHILE

   ADD 1 to #JRow
END-WHILE


     GRAPHIC (,1,104) HORZ-LINE

End-Procedure Print-AdverseImpact-Summary


!**********************************************************************
!**********************************************************************
!       Print-AdverseImpact-Detail
!**********************************************************************
!**********************************************************************
Begin-Procedure Print-AdverseImpact-Detail
DISPLAY 'FLOW:Print-AdverseImpact-Detail'

  DO Calculate-Percents

   ALTER-PRINTER
      point-size=10

    Print $ADVS_IMP_DTL         (+3, 5)   BOLD
    Print $SCS_RATE_GRPS        (+2, 27)  BOLD
    Print $SCS_RATE_GNDR        (,70)     BOLD

   ALTER-PRINTER
      point-size=7

     print $COMPARISON (+2,22)
     print $COMPARISON (,70)
     print $EEO_GROUP (+1,22)
     print $GENDER_GROUP (,70)
     print $ACTION (+1, 7)
     print $WHITE (,23)
     print $BLACK (,31)
     print $HISPANIC (,39)
     print $ASIAN (,47)
     print $AM.INDIAN (,55)
     print $MALE (,72)
     print $FEMALE (,82)

GRAPHIC (,1,104) HORZ-LINE

MOVE 1 TO #JRow
WHILE #JRow <= 11

   GET $Out FROM AdverseImpact(#JRow) LabelDetail

   IF #Jrow = 3 OR #Jrow = 4 OR #Jrow = 7 OR #Jrow = 8 OR #Jrow = 11
      GRAPHIC (+1,1,104) box 1 0 15
   ELSE
      POSITION (+1)
   END-IF

   PRINT $Out (,7)

   IF #JRow != 9
      MOVE 1 TO #JCol
      WHILE #JCol <= 7

         GET #Out FROM AdverseImpact(#JRow) detail(#JCol)

         LET #PrintCol = 15 + (8 * #JCol)
         IF #JCol > 5
            LET #PrintCol = 12 + (10 * #JCol)
         END-IF

         IF #Jrow%2 OR #Jrow = 10
            PRINT #Out (,#PrintCol,) EDIT 8888
         ELSE
            PRINT #Out (,#PrintCol,) EDIT 888.88
         END-IF
         ADD 1 to #JCol
      END-WHILE
   END-IF
   ADD 1 to #JRow
END-WHILE

GRAPHIC (,1,104) HORZ-LINE


!*********************************************
!** Clear out #s from the AdverseImpact array
!*********************************************

MOVE 1 TO #JRow
WHILE #JRow <= 10
  MOVE 0 TO #JCol
  WHILE #JCol <= 7
    PUT 0 INTO AdverseImpact(#JRow) detail(#JCol)
    ADD 1 TO #JCol
  END-WHILE
  ADD 1 TO #JRow
END-WHILE

End-Procedure Print-AdverseImpact-Detail

!**********************************************************************
!**********************************************************************
!       Calc-Total-Employees
!**********************************************************************
!**********************************************************************
Begin-Procedure Calc-Total-Employees
DISPLAY 'FLOW:Calc-Total-Employees'

!Begin Resolution 574458
!#IFNDEF DB2ALL
!#IFNDEF INFORMIX
#IFNDEF DB2ALL_INFORMIX
!End Resolution 574458
BEGIN-SQL
INSERT INTO PS_R_APP001_TMP (
PROCESS_INSTANCE
,ACTION
,SEX
,ETHNIC_GROUP
,EE_COUNT)
SELECT
#prcs_process_instance
,'TOT'
,PDE.SEX
,ETH.ETHNIC_GROUP
,COUNT(*)
FROM PS_PERS_DATA_EFFDT PDE
,PS_JOB J
,PS_JOBCODE_TBL C
,PS_DIVERS_ETHNIC DVR
,PS_ETHNIC_GRP_TBL ETH
WHERE PDE.EMPLID = J.EMPLID
  AND PDE.EMPLID = DVR.EMPLID
  AND J.JOBCODE = C.JOBCODE
  AND J.SETID_JOBCODE = C.SETID
  AND J.EFFDT = (SELECT MAX(J1.EFFDT)
                   FROM PS_JOB J1
                   WHERE J1.EMPLID = J.EMPLID
                     AND J1.EMPL_RCD = J.EMPL_RCD
[$H-WHERE-CLAUSE]
)
  AND J.JOB_INDICATOR = 'P'
  AND J.HR_STATUS = 'A'
  AND (EXISTS (SELECT 'X' FROM PS_PERS_DATA_USA PDE2
                 WHERE PDE2.EMPLID = PDE.EMPLID
                    AND PDE2.EFFDT = (SELECT MAX(EFFDT) FROM PS_PERS_DATA_USA PDE3
                                      WHERE PDE3.EMPLID = PDE2.EMPLID 
                          [$E1-WHERE-CLAUSE] )
                 AND PDE2.US_WORK_ELIGIBILTY = 'Y')

   OR NOT EXISTS (SELECT 'X' FROM PS_PERS_DATA_USA PDE2
                 WHERE PDE2.EMPLID = PDE.EMPLID 
                       AND PDE2.EFFDT = (SELECT MAX(EFFDT) FROM PS_PERS_DATA_USA PDE3
                                      WHERE PDE3.EMPLID = PDE2.EMPLID
                                      [$E1-WHERE-CLAUSE] ))) 
  AND DVR.PRIMARY_INDICATOR = 'Y' 
  AND DVR.SETID = ETH.SETID 
  AND DVR.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
  AND ETH.EFFDT = (SELECT MAX(E2.EFFDT) FROM PS_ETHNIC_GRP_TBL E2 
                  WHERE E2.SETID = ETH.SETID 
                  AND E2.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
                  [$E2-WHERE-CLAUSE])
  AND ETH.ETHNIC_GROUP <> '6'
  AND PDE.SEX <> 'U'
  AND J.EEO_CLASS    <> 'E'  !Exclude from counts (Job record)
  ! Begin Incident 1436783003 
  !AND C.EEO1CODE     <> 'N'  !Not countd for EEO reporting (JobCode Table)
  ! End Incident 1436783003
  AND PDE.EFFDT = (SELECT MAX (PDE1.EFFDT)
                   FROM PS_PERS_DATA_EFFDT PDE1
                   WHERE PDE1.EMPLID = PDE.EMPLID
[$E-WHERE-CLAUSE]
)
  AND C.EFFDT = (SELECT MAX(C1.EFFDT)
                 FROM PS_JOBCODE_TBL C1
                 WHERE C1.JOBCODE = C.JOBCODE
                 AND C1.SETID = C.SETID
[$C-WHERE-CLAUSE]
)
[$Emp-Where-Clause]
GROUP BY J.ACTION,PDE.SEX,ETH.ETHNIC_GROUP
END-SQL

#ELSE
BEGIN-SELECT
PDE.SEX            &TOT_SEX
ETH2.ETHNIC_GROUP  &TOT_ETHNIC_GROUP
COUNT(*)           &TOT_COUNT

      DO DB2-Insert-Row(#prcs_process_instance, 'TOT', &TOT_SEX, &TOT_ETHNIC_GROUP, &TOT_COUNT)

FROM PS_PERS_DATA_EFFDT PDE
,PS_JOB J
,PS_JOBCODE_TBL C
,PS_DIVERS_ETHNIC DVR2
,PS_ETHNIC_GRP_TBL ETH2
WHERE PDE.EMPLID = J.EMPLID
  AND PDE.EMPLID = DVR2.EMPLID
  AND J.JOBCODE = C.JOBCODE
  AND J.SETID_JOBCODE = C.SETID
  AND J.EFFDT = (SELECT MAX(J1.EFFDT)
                   FROM PS_JOB J1
                   WHERE J1.EMPLID = J.EMPLID
                   AND J1.EMPL_RCD = J.EMPL_RCD
  [$H-WHERE-CLAUSE]
  )
  AND J.JOB_INDICATOR = 'P'
  AND J.HR_STATUS = 'A'
  AND (EXISTS (SELECT 'X' FROM PS_PERS_DATA_USA PDE2
                 WHERE PDE2.EMPLID = PDE.EMPLID
                    AND PDE2.EFFDT = (SELECT MAX(EFFDT) FROM PS_PERS_DATA_USA PDE3
                                      WHERE PDE3.EMPLID = PDE2.EMPLID 
                          [$E1-WHERE-CLAUSE] )
                 AND PDE2.US_WORK_ELIGIBILTY = 'Y')

   OR NOT EXISTS (SELECT 'X' FROM PS_PERS_DATA_USA PDE2
                 WHERE PDE2.EMPLID = PDE.EMPLID 
                       AND PDE2.EFFDT = (SELECT MAX(EFFDT) FROM PS_PERS_DATA_USA PDE3
                                      WHERE PDE3.EMPLID = PDE2.EMPLID
                                      [$E1-WHERE-CLAUSE] ))) 
  AND DVR2.PRIMARY_INDICATOR = 'Y' 
  AND DVR2.SETID = ETH2.SETID 
  AND DVR2.ETHNIC_GRP_CD = ETH2.ETHNIC_GRP_CD 
  AND ETH2.EFFDT = (SELECT MAX(E22.EFFDT) FROM PS_ETHNIC_GRP_TBL E22 
                  WHERE E22.SETID = ETH2.SETID 
                  AND E22.ETHNIC_GRP_CD = ETH2.ETHNIC_GRP_CD 
                  [$E22-WHERE-CLAUSE])
  AND ETH2.ETHNIC_GROUP <> '6'
  AND PDE.SEX <> 'U'
  AND J.EEO_CLASS <> 'E'  !Exclude from counts (Job record)
  ! Begin Incident 1436783003
  !AND C.EEO1CODE <> 'N'  !Not countd for EEO reporting (JobCode Table)
  ! End Incident 1436783003
  AND PDE.EFFDT = (SELECT MAX (PDE1.EFFDT)
                   FROM PS_PERS_DATA_EFFDT PDE1
                   WHERE PDE1.EMPLID = PDE.EMPLID
  [$E-WHERE-CLAUSE]
  )
  AND C.EFFDT = (SELECT MAX(C1.EFFDT)
                 FROM PS_JOBCODE_TBL C1
                 WHERE C1.JOBCODE = C.JOBCODE
                 AND C1.SETID = C.SETID
  [$C-WHERE-CLAUSE]
  )
[$Emp-Where-Clause]
GROUP BY J.ACTION,PDE.SEX,ETH2.ETHNIC_GROUP
END-SELECT

#ENDIF
!Begin Resolution 574458
!#ENDIF
!End Resolution 574458
End-Procedure Calc-Total-Employees

!**********************************************************************
!**********************************************************************
!       Calculate-Percents
!**********************************************************************
!**********************************************************************
Begin-Procedure Calculate-Percents
DISPLAY 'FLOW:Calculate-Percents'
LET #Row_Total = 0
MOVE 1 TO #PRow
MOVE 2 to #PRowPlus
WHILE #PRow <=10

   MOVE 1 TO #PCol
   WHILE #PCol <= 5
     GET #temp FROM AdverseImpact(#PRow) detail (#PCol)
     LET #Row_Total = #Row_Total + #temp
     ADD 1 to #PCol
   END-WHILE
   LET #temp = 0
   MOVE 1 to #PCol
   WHILE #PCol <= 5
      GET #temp FROM AdverseImpact(#PRow) detail (#PCol)

      IF #Row_Total != 0
         LET #temp_pct = (#temp * 100) / #Row_Total
      ELSE
         LET #temp_pct = 0
      END-IF

      PUT #temp_pct INTO AdverseImpact(#PRowPlus) detail (#PCol)
      LET #temp_pct = 0
      ADD 1 to #PCol
   END-WHILE

   LET #Row_Total = 0

   MOVE 6 TO #PCol
   WHILE #PCol <= 7
     GET #temp FROM AdverseImpact(#PRow) detail (#PCol)
     LET #Row_Total = #Row_Total + #temp
     ADD 1 to #PCol
   END-WHILE
   LET #temp = 0
   MOVE 1 to #PCol
   WHILE #PCol <= 7
      GET #temp FROM AdverseImpact(#PRow) detail (#PCol)

      IF #Row_Total != 0
         LET #temp_pct = (#temp * 100) / #Row_Total
      ELSE
         LET #temp_pct = 0
      END-IF

      PUT #temp_pct INTO AdverseImpact(#PRowPlus) detail (#PCol)
      LET #temp_pct = 0
      ADD 1 to #PCol
   END-WHILE

IF #PRow = 7
  ADD 3 TO #PRow
  ADD 3 TO #PRowPlus
ELSE
  ADD 2 TO #PRow
  ADD 2 TO #PRowPlus
END-IF

LET #Row_Total = 0
END-WHILE

End-Procedure Calculate-Percents

!**********************************************************************
!**********************************************************************
!       Cleanup-Temp-Table
!**********************************************************************
!**********************************************************************
Begin-Procedure Cleanup-Temp-Table
DISPLAY 'FLOW:Cleanup-Temp-Table'

Begin-SQL
DELETE FROM PS_R_APP001_TMP
WHERE PROCESS_INSTANCE = #prcs_process_instance
End-SQL
End-Procedure Cleanup-Temp-Table

!**********************************************************************
!       SQCs
!**********************************************************************
#include 'stdapi.sqc'      !Routine to update run status
#include 'rgrnctl1.sqc'    !Get run control parameter values
#include 'rggetval.sqc'    !Get values mask routines
#include 'askcalyr.sqc'    !Ask Calendar Year input
#Include 'curdttim.sqc'    !Get-Current-DateTime procedure
#Include 'datetime.sqc'    !Routines for date and time formatting
#Include 'number.sqc'      !Routines to format numbers
#include 'sqrtrans.sqc'    !Globalization
#include 'regutils.sqc'
