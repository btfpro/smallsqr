! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
!  MASSFILE.SQC:  Mass Change File Unload / Load procedures            *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************


!----------------------------------------------------------------------
! Procedure:    Mass-Change-File-Load-Unload
! Descr:
!
!----------------------------------------------------------------------

begin-procedure Mass-Change-File-Load-Unload
add 1 to #level

#IFDEF DebugF
    print  'FLOW:Mass-Change-File-Load-Unload'  (+1,1)
#ENDIF

   let $SQC_Filename = $MC_SQR_DIR

   let $Start_Layout_Marker = '#DEFINE mc-header RECORD LAYOUT & DATA FILE FOR TABLE PS_'
   let $End_Layout_Marker   = '#DEFINE mc-footer END OF RECORD LAYOUT --- GO GIANTS'

   evaluate $MC_Run_Type
      when = '3'
     do Get-Recname
     if $MC_Recname <> ''
        do SQC-File-Prep
     end-if
      when = '4'
     do Get-SQL-Stmnt
     do Extract-Where-Clause
     do Copy-MASSFILE-SQC
     do Gen-File
     do Update-MC-Defn-Dttm
     do Log-Execution-History
      when = '5'
     do Copy-Record-Layout
      when = '6'
     do Load-File
   end-evaluate

subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Get-Recname
! Descr:        Get the record name for the MC being processed.
!
!----------------------------------------------------------------------

begin-procedure Get-Recname
add 1 to #level

#IFDEF DebugF
  print 'FLOW:Get-Recname:'    (+1,#level)
#ENDIF

let $MC_Recname = ''

begin-SELECT

max(MCA.RECNAME) &MCA_Recname

    let $MC_Recname = &MCA_Recname


FROM            PS_MC_TYPE_RECORD MCA,
        PS_MC_DEFN MCB
WHERE           MCB.MC_DEFN_ID = $MC_Defn_ID
AND             MCB.MC_TYPE_ID = MCA.MC_TYPE_ID
end-SELECT


subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Get-SQL-Stmnt
! Descr:        Retrieve Mass Change SQL that is generated online.
!
!----------------------------------------------------------------------

begin-procedure Get-SQL-Stmnt
add 1 to #level

#IFDEF DebugF
  print 'FLOW:Get-SQL-Stmnt:'    (+1,#level)
#ENDIF

let $MC_SQL_STATEMENT = ''


begin-SELECT

SEQUENCE_NBR_6 &MCF_SEQ_6,
MC_SQL_STMNT   &MCF_SQL_STMNT


    let $MC_SQL_Stmnt = &MCF_SQL_STMNT

    print 'DATA:$MC_SQL_Stmnt:'             (+1,#level)
    print $MC_SQL_Stmnt                     (0,+1)


    let #SQL_Length = length($MC_SQL_Stmnt)

    while #SQL_Length < 30

        let $temp_sql = $MC_SQL_Stmnt
        string $temp_sql ' ' by '' into $MC_SQL_Stmnt

        let #SQL_Length = length($MC_SQL_Stmnt)

    end-while

    string $MC_SQL_STATEMENT $MC_SQL_Stmnt
    by '' into $MC_SQL_TEMP

    let $MC_SQL_STATEMENT = $MC_SQL_TEMP

FROM            PS_MC_DEFN_SQL_LN
WHERE           MC_DEFN_ID = $MC_Defn_ID
AND             MC_STMNT_SEQ = 1
AND             MC_SEQ = 1
ORDER BY
SEQUENCE_NBR_6

end-SELECT


subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Extract-Where-Clause
! Descr:        Extracts the where clause out of the entire Select SQL
!               statement.
!
!----------------------------------------------------------------------

begin-procedure Extract-Where-Clause
add 1 to #level

#IFDEF DebugF
  print 'FLOW:Extract-Where-Clause:'    (+1,#level)
#ENDIF

    let $Where_Lit1 = ' WHERE '
    let $Where_Lit2 = ' where '

    let #Length_SQL = Length($MC_SQL_STATEMENT)

    let #Start_Where = instr($MC_SQL_STATEMENT,$Where_Lit1,1)

    if #Start_Where = 0
       let #Start_Where = instr($MC_SQL_STATEMENT,$Where_Lit2,1)
    end-if

    if #Start_Where = 0
       let $Where_SQL = ' '
    else
       let #End_Where = (#Length_SQL - #Start_Where) + 1
       let $Where_SQL = {PS-substr}($MC_SQL_STATEMENT,#Start_Where,#End_Where)
    end-if

begin-SELECT

ARCHIVE.ARCHIVE_ID,
ARCHIVE.ARCHIVE_DT

    let $Archive_ID   = &ARCHIVE.ARCHIVE_ID
    let $Archive_Dt   = &ARCHIVE.ARCHIVE_DT

FROM            PS_MC_DEFN ARCHIVE
WHERE           ARCHIVE.MC_DEFN_ID = $MC_Defn_ID
end-SELECT



    let $MC_SQL_STATEMENT = $Where_SQL
    do Check-For-Sub-Vars
    let $Where_SQL = $MC_SQL_STATEMENT

    print 'DATA:$Where_SQL:'             (+4,#level)
    print $Where_SQL                     (0,+1)

subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    SQC-File-Prep
! Descr:
!
!----------------------------------------------------------------------

begin-procedure SQC-File-Prep
add 1 to #level

#IFDEF DebugF
    print  'FLOW:SQC-File-Prep'  (+1,1)
#ENDIF

open $SQC_Filename as 1 for-writing record=250

do Write-File-Header

do Derive-MASSLAYO-SQC-Layout

write 1 from $End_Layout_Marker

subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Write-File-Header
! Descr:
!
!----------------------------------------------------------------------

begin-procedure Write-File-Header
add 1 to #level

#IFDEF DebugF
    print  'FLOW:Write-File-Header'  (+1,1)
#ENDIF

string $Start_Layout_Marker $MC_Recname by '' into $Line_1

begin-SELECT DISTINCT

RELEASELABEL &RELEASE
RELEASEDTTM

FROM PSRELEASE

ORDER BY RELEASEDTTM DESC

end-SELECT

move &RELEASE to $Release

string '#DEFINE PEOPLESOFT-APPLICATION-VERSION: ' $Release
by '' into $Line_2

do Get-Current-DateTime

string '#DEFINE FILE-CREATION-TIMESTAMP: ' $SysDateTime
by '' into $Line_3

write 1 from  $Line_1

write 1 from  $Line_2

write 1 from  $Line_3


subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Copy-MASSFILE-SQC
! Descr:        Copy the contents of MASSLAYO.SQC to the beginning of
!               the table data file.
!
!----------------------------------------------------------------------

begin-procedure Copy-MASSFILE-SQC
add 1 to #level

open $SQC_Filename as 1 for-reading record=250
open $MC_Filename as 2 for-writing record={Read-File-Length}

! Loop through all the rows in MASSLAYO.SQC
while 1

    read 1 into $Layout_Row:250

    if #end-file
       break
    end-if

    write 2 from $Layout_Row

end-while


subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Gen-File
! Descr:
!
!----------------------------------------------------------------------

begin-procedure Gen-File
add 1 to #level

#IFDEF DebugF
    print  'FLOW:Gen-File'  (+1,1)
#ENDIF


begin-SELECT

{MC-Select-List-1}
{MC-Select-List-2}
{MC-Select-List-3}
{MC-Select-List-4}
{MC-Select-List-5}
{MC-Select-List-6}
{MC-Select-List-7}
{MC-Select-List-8}
{MC-Select-List-9}
{MC-Select-List-10}
{MC-Select-List-11}
{MC-Select-List-12}
{MC-Select-List-13}
{MC-Select-List-14}
{MC-Select-List-15}
{MC-Select-List-16}
{MC-Select-List-17}
{MC-Select-List-18}
{MC-Select-List-19}
{MC-Select-List-20}
{MC-Select-List-21}
{MC-Select-List-22}
{MC-Select-List-23}
{MC-Select-List-24}
{MC-Select-List-25}
{MC-Select-List-26}
{MC-Select-List-27}
{MC-Select-List-28}
{MC-Select-List-29}
{MC-Select-List-30}
{MC-Select-List-31}
{MC-Select-List-32}
{MC-Select-List-33}
{MC-Select-List-34}
{MC-Select-List-35}
{MC-Select-List-36}
{MC-Select-List-37}
{MC-Select-List-38}
{MC-Select-List-39}
{MC-Select-List-40}



    write 2 from {MC-File-Write-1}
         {MC-File-Write-2}
         {MC-File-Write-3}
         {MC-File-Write-4}
         {MC-File-Write-5}
         {MC-File-Write-6}
         {MC-File-Write-7}
         {MC-File-Write-8}
         {MC-File-Write-9}
         {MC-File-Write-10}
         {MC-File-Write-11}
         {MC-File-Write-12}
         {MC-File-Write-13}
         {MC-File-Write-14}
         {MC-File-Write-15}
         {MC-File-Write-16}
         {MC-File-Write-17}
         {MC-File-Write-18}
         {MC-File-Write-19}
         {MC-File-Write-20}
         {MC-File-Write-21}
         {MC-File-Write-22}
         {MC-File-Write-23}
         {MC-File-Write-24}
         {MC-File-Write-25}
         {MC-File-Write-26}
         {MC-File-Write-27}
         {MC-File-Write-28}
         {MC-File-Write-29}
         {MC-File-Write-30}
         {MC-File-Write-31}
         {MC-File-Write-32}
         {MC-File-Write-33}
         {MC-File-Write-34}
         {MC-File-Write-35}
         {MC-File-Write-36}
         {MC-File-Write-37}
         {MC-File-Write-38}
         {MC-File-Write-39}
         {MC-File-Write-40}


FROM             {MC-From-Recname}
[$Where_SQL]

end-SELECT


subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Load-File
! Descr:
!
!----------------------------------------------------------------------

begin-procedure Load-File
add 1 to #level

#IFDEF DebugF
    print  'FLOW:Load-File'  (+1,1)
#ENDIF

do Derive-File-Load-Insert

let #Record_Loop = 0

open $MC_Filename as 3 for-reading record={Read-File-Length}

! Loop through the record layout header rows.
while 1

    let #Record_Loop = #Record_Loop + 1

    read 3 into $Layout_Row:{Read-File-Length}

    if #end-file
       break
    end-if

    if #Record_Loop = 1

       do Validate-File

    else

       let #Length_Check = length($End_Layout_Marker)

       let $End_Layout_Check = substr($Layout_Row,1,#Length_Check)

       if $End_Layout_Check = $End_Layout_Marker
      break
       end-if

    end-if

end-while

if #end-file
   print  'NO DATA IN FILE'  (+5,1)
else
   ! Loop through all the records in the Data File.
   while 1

    let #Record_Loop = #Record_Loop + 1

    read 3 into {MC-File-Read-1}
        {MC-File-Read-2}
        {MC-File-Read-3}
        {MC-File-Read-4}
        {MC-File-Read-5}
        {MC-File-Read-6}
        {MC-File-Read-7}
        {MC-File-Read-8}
        {MC-File-Read-9}
        {MC-File-Read-10}
        {MC-File-Read-11}
        {MC-File-Read-12}
        {MC-File-Read-13}
        {MC-File-Read-14}
        {MC-File-Read-15}
        {MC-File-Read-16}
        {MC-File-Read-17}
        {MC-File-Read-18}
        {MC-File-Read-19}
        {MC-File-Read-20}
        {MC-File-Read-21}
        {MC-File-Read-22}
        {MC-File-Read-23}
        {MC-File-Read-24}
        {MC-File-Read-25}
        {MC-File-Read-26}
        {MC-File-Read-27}
        {MC-File-Read-28}
        {MC-File-Read-29}
        {MC-File-Read-30}
        {MC-File-Read-31}
        {MC-File-Read-32}
        {MC-File-Read-33}
        {MC-File-Read-34}
        {MC-File-Read-35}
        {MC-File-Read-36}
        {MC-File-Read-37}
        {MC-File-Read-38}
        {MC-File-Read-39}
        {MC-File-Read-40}

    if #end-file
       break
    end-if

    do Format-Numerics

    do Format-Characters

    do Insert-Row

   end-while

end-if

subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Insert-Row
! Descr:
!
!----------------------------------------------------------------------

begin-procedure Insert-Row
add 1 to #level

#IFDEF DebugF
    print  'FLOW:Insert-Row'  (+1,#level)
#ENDIF
#IFDEF DebugD
    print  'Data:#Field_Loop_Cnt'  (+1,#level)
    print  #Field_Loop_Cnt         (+1,#level)
#ENDIF


if #Field_Loop_Cnt <= 20
let $SQL-Statement = 'MASSFILE.SQC,Insert-Row-1'
begin-SQL  ON-ERROR=SQL-Error
INSERT INTO [$Insert_Record]
( [$Insert_Column_List] )
VALUES
( {Insert_Value_List1} )
end-SQL
end-if

if #Field_Loop_Cnt > 20 and #Field_Loop_Cnt <= 40
let $SQL-Statement = 'MASSFILE.SQC,Insert-Row-2'
begin-SQL  ON-ERROR=SQL-Error
INSERT INTO [$Insert_Record]
( [$Insert_Column_List] )
VALUES
( {Insert_Value_List1}
  {Insert_Value_List2}
)
end-SQL
end-if

if #Field_Loop_Cnt > 40 and #Field_Loop_Cnt <= 60
let $SQL-Statement = 'MASSFILE.SQC,Insert-Row-3'
begin-SQL  ON-ERROR=SQL-Error
INSERT INTO [$Insert_Record]
( [$Insert_Column_List] )
VALUES
( {Insert_Value_List1}
  {Insert_Value_List2}
  {Insert_Value_List3}
)
end-SQL
end-if

if #Field_Loop_Cnt > 60 and #Field_Loop_Cnt <= 80
let $SQL-Statement = 'MASSFILE.SQC,Insert-Row-4'
begin-SQL  ON-ERROR=SQL-Error
INSERT INTO [$Insert_Record]
( [$Insert_Column_List] )
VALUES
( {Insert_Value_List1}
  {Insert_Value_List2}
  {Insert_Value_List3}
  {Insert_Value_List4}
)
end-SQL
end-if

if #Field_Loop_Cnt > 80 and #Field_Loop_Cnt <= 100
let $SQL-Statement = 'MASSFILE.SQC,Insert-Row-5'
begin-SQL  ON-ERROR=SQL-Error
INSERT INTO [$Insert_Record]
( [$Insert_Column_List] )
VALUES
( {Insert_Value_List1}
  {Insert_Value_List2}
  {Insert_Value_List3}
  {Insert_Value_List4}
  {Insert_Value_List5}
)
end-SQL
end-if

if #Field_Loop_Cnt > 100 and #Field_Loop_Cnt <= 120
let $SQL-Statement = 'MASSFILE.SQC,Insert-Row-6'
begin-SQL  ON-ERROR=SQL-Error
INSERT INTO [$Insert_Record]
( [$Insert_Column_List] )
VALUES
( {Insert_Value_List1}
  {Insert_Value_List2}
  {Insert_Value_List3}
  {Insert_Value_List4}
  {Insert_Value_List5}
  {Insert_Value_List6}
)
end-SQL
end-if

if #Field_Loop_Cnt > 120 and #Field_Loop_Cnt <= 140
let $SQL-Statement = 'MASSFILE.SQC,Insert-Row-7'
begin-SQL  ON-ERROR=SQL-Error
INSERT INTO [$Insert_Record]
( [$Insert_Column_List] )
VALUES
( {Insert_Value_List1}
  {Insert_Value_List2}
  {Insert_Value_List3}
  {Insert_Value_List4}
  {Insert_Value_List5}
  {Insert_Value_List6}
  {Insert_Value_List7}
)
end-SQL
end-if

if #Field_Loop_Cnt > 140 and #Field_Loop_Cnt <= 160
let $SQL-Statement = 'MASSFILE.SQC,Insert-Row-8'
begin-SQL  ON-ERROR=SQL-Error
INSERT INTO [$Insert_Record]
( [$Insert_Column_List] )
VALUES
( {Insert_Value_List1}
  {Insert_Value_List2}
  {Insert_Value_List3}
  {Insert_Value_List4}
  {Insert_Value_List5}
  {Insert_Value_List6}
  {Insert_Value_List7}
  {Insert_Value_List8}
)
end-SQL
end-if


subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Derive File Load Insert
! Descr:
!
!----------------------------------------------------------------------

begin-procedure Derive-File-Load-Insert
add 1 to #level

#IFDEF DebugF
    print  'FLOW:Derive-File-Load-Insert'  (+1,1)
#ENDIF

   let $Insert_Record = '{MC-Insert-Recname}'
   let #Length_temp = length($Insert_record)
   let #End_Temp = #Length_temp - 3
   let $Insert_Record_PSFT = substr($Insert_Record,4,#end_temp)
   let $Insert_Column_List = ''

begin-SELECT

FIELDNUM             &RGM_FieldNum,
FIELDNAME            &RGM_FieldName,

   if &RGM_FieldNum = 1
      let $Insert_Column_List = &RGM_FieldName
   else
      string $Insert_Column_List ',' &RGM_FieldName
      by '' into $temp_columns
      let $Insert_Column_List = $temp_columns
   end-if

   let #Field_Loop_Cnt = &RGM_FieldNum

FROM            PS_MC_FIELD_VW
WHERE           RECNAME = $Insert_Record_PSFT

ORDER BY        FIELDNUM

end-SELECT

#ifdef INFORMIX
  let $Insert_Column_List = translate($Insert_Column_List, '#', 'N')
#end-if

#IFDEF DebugD
    print  'DATA:$Insert_Column_List'  (+1,#level)
    print  $Insert_Column_List  (+1,#level)
#ENDIF


subtract 1 from #level
end-procedure



!----------------------------------------------------------------------
! Procedure:    Copy-Record-Layout
! Descr:
!
!----------------------------------------------------------------------

begin-procedure Copy-Record-Layout
add 1 to #level

#IFDEF DebugF
    print  'FLOW:Copy-Record-Layout'  (+1,1)
#ENDIF

let #Record_Loop = 0

open $MC_Filename as 1 for-reading record={Read-File-Length}
open $SQC_Filename as 2 for-writing record=250

! Loop through all the heeder rows in the data file.
while 1

    let #Record_Loop = #Record_Loop + 1

    read 1 into $Layout_Row:{Read-File-Length}

    if #end-file
       break
    end-if

    if #Record_Loop = 1

       do Validate-File

       write 2 from $Layout_Row

    else

       let #Length_Check = length($End_Layout_Marker)

       let $End_Layout_Check = substr($Layout_Row,1,#Length_Check)

       write 2 from $Layout_Row

       if $End_Layout_Check = $End_Layout_Marker
      break
       end-if

    end-if

end-while

subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Validate-File
! Descr:        Validates the file supplied by the user.
!
!----------------------------------------------------------------------

begin-procedure Validate-File
add 1 to #level

#IFDEF DebugF
  print 'FLOW:Validate-File:'    (+1,#level)
#ENDIF

let #Length_Start = length($Start_Layout_Marker)

let $Start_Check = substr($Layout_Row,1,#Length_Start)

if $Start_Check <> $Start_Layout_Marker

   print 'DATA OF FIRST ROW IN FILE:'      (+2,#level)
   print $File_Row                      (+1,#level)

   print 'FILE LAYOUT ERROR'    (+5,#level)
   print 'FILE LAYOUT ERROR'    (+1,#level)
   print 'FILE LAYOUT ERROR'    (+1,#level)

   print 'NOT A VALID MASS CHANGE DATA FILE'          (+5,#level)
   print 'CHECK FILENAME SPECIFIED  AND TRY AGAIN'    (+1,#level)

   STOP

end-if


subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Derive-MASSLAYO-SQC-Layout
! Descr:
!
!----------------------------------------------------------------------

begin-procedure Derive-MASSLAYO-SQC-Layout
add 1 to #level

#IFDEF DebugF
  print 'FLOW:Derive-MASSLAYO-SQC-Layout'    (+1,#level)
#ENDIF

let $Amper        = '&'
let $Space        = ' '
let $Dollar       = '$'
let $Pound        = '#'
let $Period       = '.'
let $PS_Prefix    = 'PS_'
let $Var_Prefix   = 'MC_RGM_'
let $Comma        = ','
let $Colon        = ':'
let $Define_Lit   = '#DEFINE '
let $Single_Quote = ''''
let #Mod_Divisor  = 4

let $File_1_Lit = '#DEFINE MC-Select-List-'
let $File_2_Lit = '#DEFINE MC-File-Write-'
let $File_3_Lit = '#DEFINE MC-File-Read-'
let $File_4_Lit = '#DEFINE MC-Insert-Value-'
let $File_5_Lit = '#DEFINE MC-Insert-List-'

 string '#DEFINE MC-From-Recname ' $PS_Prefix $MC_Recname $Space $MC_Recname
 by '' into $From_Recname_Line

 string '#DEFINE MC-Insert-Recname ' $PS_Prefix $MC_Recname $Space
 by '' into $Insert_Recname_Line

write 1 from $From_Recname_Line

write 1 from $Insert_Recname_Line

let #Field_Loop_Cnt = 0
let #Write_Line_Cnt = 1
let $Write_Line_Cnt = to_char(#Write_Line_Cnt)

do String-Define-Vars

let #Read_File_Length = 0

begin-SELECT

FIELDNUM             &FP_FieldNum,
FIELDNAME            &FP_FieldName,
FIELDTYPE            &FP_FieldType,
MC_FIELDLENGTH       &FP_MC_FieldLength,
SQR_DATA_PREFIX      &FP_SQR_Data_Prefix

     let #Field_Loop_Cnt = #Field_Loop_Cnt + 1
     let $Field_Loop_Cnt = to_char(#Field_Loop_Cnt)

     let $Fieldname = &FP_FieldName

     let $SQR_Data_Prefix = &FP_SQR_Data_Prefix

     evaluate &FP_MC_FieldLength
    when >= 1
       move &FP_MC_FieldLength to $FieldLength 9
    when >= 10
       move &FP_MC_FieldLength to $FieldLength 99
    when >= 100
       move &FP_MC_FieldLength to $FieldLength 999
    when >= 1000
       move &FP_MC_FieldLength to $FieldLength 9999
     end-evaluate

     move &FP_FieldType to $FieldType 9

     if $SQR_Data_Prefix = '#'
    let $FieldLength = '17'
    let #Read_File_Length = #Read_File_Length + 17
     else
    let #Read_File_Length = #Read_File_Length + &FP_MC_FieldLength
     end-if

    #ifdef SYBASE
       if $FieldType = '4'   ! It's a date type...Sybase format is mon-dd-yyyy
         move '11' to $FieldLength   ! Change the length
         add 1 to #Read_File_Length  ! Adjust cummulative value
       end-if
    #end-if

    #ifdef INFORMIX
       let $Fieldname = translate($Fieldname, '#', 'N')
    #end-if

     string $MC_Recname $Period $Fieldname by '' into $Recfield

     do Build-Select-List-Line

     do Build-File-Write-Line

     do Build-File-Read-Line

     do Build-Insert-List-Line

     do Build-Insert-Value-Line

     do Set-FieldType

     if mod(#Field_Loop_Cnt,#Mod_Divisor) = 0

       do Write-Define-Vars

       let #Write_Line_Cnt = #Write_Line_Cnt + 1
       let $Write_Line_Cnt = to_char(#Write_Line_Cnt)

       do String-Define-Vars

     end-if


FROM            PS_MC_FIELD_VW
WHERE           RECNAME = $MC_Recname

ORDER BY        FIELDNUM

end-SELECT

     if mod(#Field_Loop_Cnt,#Mod_Divisor) <> 0

       do Write-Define-Vars

       let #Write_Line_Cnt = #Write_Line_Cnt + 1
       let $Write_Line_Cnt = to_char(#Write_Line_Cnt)

     end-if


   while #Write_Line_Cnt <= 40

       let #Dummy_Cnt = #Write_line_Cnt * #Mod_Divisor + 1
       let $Dummy_Cnt = to_char(#Dummy_Cnt)

       string $File_1_Lit $Write_Line_Cnt $Space
       $Single_Quote $Space $Single_Quote
       $Space $Amper $Var_Prefix $Dummy_Cnt
       by '' into $File_1

       string $File_2_Lit $Write_Line_Cnt $Space
       '$Dummy_Column:1'  by '' into $File_2

       string $File_3_Lit $Write_Line_Cnt $Space     by '' into $File_3
       string $File_4_Lit $Write_Line_Cnt $Space     by '' into $File_4
       string $File_5_Lit $Write_Line_Cnt $Space     by '' into $File_5

       do Write-Define-Vars

       let #Write_Line_Cnt = #Write_Line_Cnt + 1
       let $Write_Line_Cnt = to_char(#Write_Line_Cnt)

   end-while

   while #Field_Loop_Cnt < 150

       let #Field_Loop_Cnt = #Field_Loop_Cnt + 1
       let $Field_Loop_Cnt = to_char(#Field_Loop_Cnt)
       let $Fieldtype = '0'

       do Set-FieldType

       let #Read_File_Length = #Read_File_Length + 1

   end-while

   if #Read_File_Length < 250
      let #Read_File_Length = 250
   end-if

   let $Read_File_Length = to_char(#Read_File_Length)

   string '#DEFINE Read-File-Length ' $Read_File_Length by '' into $File_6

   write 1 from $File_6

   if $File_4_Long1 <= ' '
      let $File_4_Long1 = '$Dummy_Value'
   end-if
   if $File_4_Long2 <= ' '
      let $File_4_Long2 = '$Dummy_Value'
   end-if
   if $File_4_Long3 <= ' '
      let $File_4_Long3 = '$Dummy_Value'
   end-if
   if $File_4_Long4 <= ' '
      let $File_4_Long4 = '$Dummy_Value'
   end-if
   if $File_4_Long5 <= ' '
      let $File_4_Long5 = '$Dummy_Value'
   end-if
   if $File_4_Long6 <= ' '
      let $File_4_Long6 = '$Dummy_Value'
   end-if
   if $File_4_Long7 <= ' '
      let $File_4_Long7 = '$Dummy_Value'
   end-if
   if $File_4_Long8 <= ' '
      let $File_4_Long8 = '$Dummy_Value'
   end-if


   string '#DEFINE Insert_Value_List1 ' $File_4_Long1
   by '' into $File_L1
   write 1 from $File_L1

   string '#DEFINE Insert_Value_List2 ' $File_4_Long2
   by '' into $File_L2
   write 1 from $File_L2

   string '#DEFINE Insert_Value_List3 ' $File_4_Long3
   by '' into $File_L3
   write 1 from $File_L3

   string '#DEFINE Insert_Value_List4 ' $File_4_Long4
   by '' into $File_L4
   write 1 from $File_L4

   string '#DEFINE Insert_Value_List5 ' $File_4_Long5
   by '' into $File_L5
   write 1 from $File_L5

   string '#DEFINE Insert_Value_List6 ' $File_4_Long6
   by '' into $File_L6
   write 1 from $File_L6

   string '#DEFINE Insert_Value_List7 ' $File_4_Long7
   by '' into $File_L7
   write 1 from $File_L7

   string '#DEFINE Insert_Value_List8 ' $File_4_Long8
   by '' into $File_L8
   write 1 from $File_L8

subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    String-Define-Vars
! Descr:
!
!----------------------------------------------------------------------

begin-procedure String-Define-Vars
add 1 to #level

#IFDEF DebugF
  print 'FLOW:String-Define-Vars'    (+1,#level)
#ENDIF

   string $File_1_Lit $Write_Line_Cnt $Space by '' into $File_1
   string $File_2_Lit $Write_Line_Cnt $Space by '' into $File_2
   string $File_3_Lit $Write_Line_Cnt $Space by '' into $File_3
   string $File_4_Lit $Write_Line_Cnt $Space by '' into $File_4
   string $File_5_Lit $Write_Line_Cnt $Space by '' into $File_5

subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Write-Define-Vars
! Descr:
!
!----------------------------------------------------------------------

begin-procedure Write-Define-Vars
add 1 to #level

#IFDEF DebugF
  print 'FLOW:Write-Define-Vars'    (+1,#level)
#ENDIF

   write 1 from $File_1
   write 1 from $File_2
   write 1 from $File_3
   write 1 from $File_4
   write 1 from $File_5

subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Build-Select-List-Line
! Descr:
!
!----------------------------------------------------------------------

begin-procedure Build-Select-List-Line
add 1 to #level

#IFDEF DebugF
  print 'FLOW:Build-Select-List-Line'    (+1,#level)
#ENDIF

let $Temp_SL = $File_1

if mod(#Field_Loop_Cnt,#Mod_Divisor) = 1
   let $Comma = ''
else
   let $Comma = ','
end-if


#IFDEF ORACLE
   if $Dttm_Out_Prefix = ''
      do Get-Oracle-Pre-Suf
   end-if
#ELSE
  #IFDEF SYBASE
    if $FieldType = '4'                           ! Date field
      let $Dttm_Prefix_Lit = 'CONVERT(CHAR(11),'  ! Get it as mon-dd-yyyy
      let $Dttm_Suffix_Lit = ',109)'
    else
      let $Dttm_Prefix_Lit = ''
      let $Dttm_Suffix_Lit = ''
    end-if
  #ELSE
    let $Dttm_Prefix_Lit = ''
    let $Dttm_Suffix_Lit = ''
  #ENDIF
#ENDIF

if $FieldType <> '6' and $FieldType <> '4'
   let $Dttm_Prefix_Lit = ''
   let $Dttm_Suffix_Lit = ''
else
   if $FieldType = '6'
      let $Dttm_Prefix_Lit = $Dttm_Out_Prefix
      let $Dttm_Suffix_Lit = $Dttm_Out_Suffix
   else
      let $Dttm_Prefix_Lit = $Dt_Out_Prefix
      let $Dttm_Suffix_Lit = $Dt_Out_Suffix
   end-if
end-if
string $Temp_SL $Comma $Space $Dttm_Prefix_Lit $Recfield $Dttm_Suffix_Lit
$Space $Amper $Var_Prefix $Field_Loop_Cnt by '' into $File_1

let $Comma = ','


subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Build-File-Write-Line
! Descr:
!
!----------------------------------------------------------------------

begin-procedure Build-File-Write-Line
add 1 to #level

#IFDEF DebugF
  print 'FLOW:Build-File-Write-Line'    (+1,#level)
#ENDIF

let $Temp_FW = $File_2

string $Temp_FW $Amper $Var_Prefix $Field_Loop_Cnt $Colon $FieldLength $Space
by '' into $File_2

subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Build-File-Read-Line
! Descr:
!
!----------------------------------------------------------------------

begin-procedure Build-File-Read-Line
add 1 to #level

#IFDEF DebugF
  print 'FLOW:Build-File-Read-Line'    (+1,#level)
#ENDIF

let $Temp_FR = $File_3

string $Temp_FR $Dollar $Field_Loop_Cnt
$Colon $FieldLength $Space by '' into $File_3

subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Build-Insert-Value-Line
! Descr:
!
!----------------------------------------------------------------------

begin-procedure Build-Insert-Value-Line
add 1 to #level

#IFDEF DebugF
  print 'FLOW:Insert-Value-Line'    (+1,#level)
#ENDIF

let $Temp_IV = $File_4

#IFDEF ORACLE
   if $Dttm_In_Prefix = ''
      do Get-Oracle-Pre-Suf
   end-if
#ELSE
   let $Dttm_Prefix_Lit = ''
   let $Dttm_Suffix_Lit = ''
#ENDIF

if $FieldType = '6'
   let $Dttm_Prefix = $Dttm_In_Prefix
   let $Dttm_Suffix = $Dttm_In_Suffix
else
   if $FieldType = '4'
      let $Dttm_Prefix = $Dt_In_Prefix
      let $Dttm_Suffix = $Dt_In_Suffix
   else
      let $Dttm_Prefix = ''
      let $Dttm_Suffix = ''
   end-if
end-if

if #Field_Loop_Cnt = 1

   string $Temp_IV $Dttm_Prefix $SQR_Data_Prefix
   $Field_Loop_Cnt $Dttm_Suffix
   by '' into $File_4

   string $Dttm_Prefix $SQR_Data_Prefix
   $Field_Loop_Cnt $Dttm_Suffix
   by '' into $File_4_Long1

else

   string $Temp_IV $Comma $Dttm_Prefix $SQR_Data_Prefix
   $Field_Loop_Cnt $Dttm_Suffix
   by '' into $File_4

   if #Field_Loop_Cnt <= 20
   let $Temp_IV_Long = $File_4_Long1
   string $Temp_IV_Long $Comma $Dttm_Prefix $SQR_Data_Prefix
   $Field_Loop_Cnt $Dttm_Suffix
   by '' into $File_4_Long1
   end-if

   if #Field_Loop_Cnt > 20 and #Field_Loop_Cnt <= 40
   let $Temp_IV_Long = $File_4_Long2
   string $Temp_IV_Long $Comma $Dttm_Prefix $SQR_Data_Prefix
   $Field_Loop_Cnt $Dttm_Suffix
   by '' into $File_4_Long2
   end-if

   if #Field_Loop_Cnt > 40 and #Field_Loop_Cnt <= 60
   let $Temp_IV_Long = $File_4_Long3
   string $Temp_IV_Long $Comma $Dttm_Prefix $SQR_Data_Prefix
   $Field_Loop_Cnt $Dttm_Suffix
   by '' into $File_4_Long3
   end-if

   if #Field_Loop_Cnt > 60 and #Field_Loop_Cnt <= 80
   let $Temp_IV_Long = $File_4_Long4
   string $Temp_IV_Long $Comma $Dttm_Prefix $SQR_Data_Prefix
   $Field_Loop_Cnt $Dttm_Suffix
   by '' into $File_4_Long4
   end-if

   if #Field_Loop_Cnt > 80 and #Field_Loop_Cnt <= 100
   let $Temp_IV_Long = $File_4_Long5
   string $Temp_IV_Long $Comma $Dttm_Prefix $SQR_Data_Prefix
   $Field_Loop_Cnt $Dttm_Suffix
   by '' into $File_4_Long5
   end-if

   if #Field_Loop_Cnt > 100 and #Field_Loop_Cnt <= 120
   let $Temp_IV_Long = $File_4_Long6
   string $Temp_IV_Long $Comma $Dttm_Prefix $SQR_Data_Prefix
   $Field_Loop_Cnt $Dttm_Suffix
   by '' into $File_4_Long6
   end-if

   if #Field_Loop_Cnt > 120 and #Field_Loop_Cnt <= 140
   let $Temp_IV_Long = $File_4_Long7
   string $Temp_IV_Long $Comma $Dttm_Prefix $SQR_Data_Prefix
   $Field_Loop_Cnt $Dttm_Suffix
   by '' into $File_4_Long7
   end-if

   if #Field_Loop_Cnt > 140 and #Field_Loop_Cnt <= 160
   let $Temp_IV_Long = $File_4_Long8
   string $Temp_IV_Long $Comma $Dttm_Prefix $SQR_Data_Prefix
   $Field_Loop_Cnt $Dttm_Suffix
   by '' into $File_4_Long8
   end-if

end-if

subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Build-Insert-List-Line
! Descr:
!
!----------------------------------------------------------------------

begin-procedure Build-Insert-List-Line
add 1 to #level

#IFDEF DebugF
  print 'FLOW:Build-Insert-List-Line'    (+1,#level)
#ENDIF

let $Temp_IL = $File_5

if #Field_Loop_Cnt = 1

   string $Temp_IL $Fieldname
   by '' into $File_5

else

   string $Temp_IL $Comma $Space $Fieldname
   by '' into $File_5

end-if

subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Set-FieldType
! Descr:
!
!----------------------------------------------------------------------

begin-procedure Set-FieldType
add 1 to #level

#IFDEF DebugF
  print 'FLOW:Set-FieldType'    (+1,#level)
#ENDIF

evaluate #Field_Loop_Cnt

   when = 1
    let $1_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $1_FieldType by '' into $FT_Write
   when = 2
    let $2_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $2_FieldType by '' into $FT_Write
   when = 3
    let $3_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $3_FieldType by '' into $FT_Write
   when = 4
    let $4_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $4_FieldType by '' into $FT_Write
   when = 5
    let $5_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $5_FieldType by '' into $FT_Write
   when = 6
    let $6_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $6_FieldType by '' into $FT_Write
   when = 7
    let $7_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $7_FieldType by '' into $FT_Write
   when = 8
    let $8_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $8_FieldType by '' into $FT_Write
   when = 9
    let $9_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $9_FieldType by '' into $FT_Write
   when = 10
    let $10_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $10_FieldType by '' into $FT_Write
   when = 11
    let $11_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $11_FieldType by '' into $FT_Write
   when = 12
    let $12_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $12_FieldType by '' into $FT_Write
   when = 13
    let $13_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $13_FieldType by '' into $FT_Write
   when = 14
    let $14_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $14_FieldType by '' into $FT_Write
   when = 15
    let $15_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $15_FieldType by '' into $FT_Write
   when = 16
    let $16_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $16_FieldType by '' into $FT_Write
   when = 17
    let $17_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $17_FieldType by '' into $FT_Write
   when = 18
    let $18_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $18_FieldType by '' into $FT_Write
   when = 19
    let $19_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $19_FieldType by '' into $FT_Write
   when = 20
    let $20_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $20_FieldType by '' into $FT_Write
   when = 21
    let $21_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $21_FieldType by '' into $FT_Write
   when = 22
    let $22_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $22_FieldType by '' into $FT_Write
   when = 23
    let $23_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $23_FieldType by '' into $FT_Write
   when = 24
    let $24_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $24_FieldType by '' into $FT_Write
   when = 25
    let $25_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $25_FieldType by '' into $FT_Write
   when = 26
    let $26_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $26_FieldType by '' into $FT_Write
   when = 27
    let $27_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $27_FieldType by '' into $FT_Write
   when = 28
    let $28_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $28_FieldType by '' into $FT_Write
   when = 29
    let $29_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $29_FieldType by '' into $FT_Write
   when = 30
    let $30_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $30_FieldType by '' into $FT_Write
   when = 31
    let $31_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $31_FieldType by '' into $FT_Write
   when = 32
    let $32_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $32_FieldType by '' into $FT_Write
   when = 33
    let $33_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $33_FieldType by '' into $FT_Write
   when = 34
    let $34_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $34_FieldType by '' into $FT_Write
   when = 35
    let $35_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $35_FieldType by '' into $FT_Write
   when = 36
    let $36_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $36_FieldType by '' into $FT_Write
   when = 37
    let $37_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $37_FieldType by '' into $FT_Write
   when = 38
    let $38_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $38_FieldType by '' into $FT_Write
   when = 39
    let $39_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $39_FieldType by '' into $FT_Write
   when = 40
    let $40_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $40_FieldType by '' into $FT_Write
   when = 41
    let $41_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $41_FieldType by '' into $FT_Write
   when = 42
    let $42_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $42_FieldType by '' into $FT_Write
   when = 43
    let $43_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $43_FieldType by '' into $FT_Write
   when = 44
    let $44_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $44_FieldType by '' into $FT_Write
   when = 45
    let $45_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $45_FieldType by '' into $FT_Write
   when = 46
    let $46_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $46_FieldType by '' into $FT_Write
   when = 47
    let $47_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $47_FieldType by '' into $FT_Write
   when = 48
    let $48_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $48_FieldType by '' into $FT_Write
   when = 49
    let $49_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $49_FieldType by '' into $FT_Write
   when = 50
    let $50_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $50_FieldType by '' into $FT_Write
   when = 51
    let $51_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $51_FieldType by '' into $FT_Write
   when = 52
    let $52_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $52_FieldType by '' into $FT_Write
   when = 53
    let $53_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $53_FieldType by '' into $FT_Write
   when = 54
    let $54_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $54_FieldType by '' into $FT_Write
   when = 55
    let $55_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $55_FieldType by '' into $FT_Write
   when = 56
    let $56_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $56_FieldType by '' into $FT_Write
   when = 57
    let $57_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $57_FieldType by '' into $FT_Write
   when = 58
    let $58_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $58_FieldType by '' into $FT_Write
   when = 59
    let $59_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $59_FieldType by '' into $FT_Write
   when = 60
    let $60_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $60_FieldType by '' into $FT_Write
   when = 61
    let $61_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $61_FieldType by '' into $FT_Write
   when = 62
    let $62_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $62_FieldType by '' into $FT_Write
   when = 63
    let $63_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $63_FieldType by '' into $FT_Write
   when = 64
    let $64_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $64_FieldType by '' into $FT_Write
   when = 65
    let $65_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $65_FieldType by '' into $FT_Write
   when = 66
    let $66_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $66_FieldType by '' into $FT_Write
   when = 67
    let $67_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $67_FieldType by '' into $FT_Write
   when = 68
    let $68_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $68_FieldType by '' into $FT_Write
   when = 69
    let $69_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $69_FieldType by '' into $FT_Write
   when = 70
    let $70_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $70_FieldType by '' into $FT_Write
   when = 71
    let $71_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $71_FieldType by '' into $FT_Write
   when = 72
    let $72_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $72_FieldType by '' into $FT_Write
   when = 73
    let $73_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $73_FieldType by '' into $FT_Write
   when = 74
    let $74_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $74_FieldType by '' into $FT_Write
   when = 75
    let $75_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $75_FieldType by '' into $FT_Write
   when = 76
    let $76_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $76_FieldType by '' into $FT_Write
   when = 77
    let $77_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $77_FieldType by '' into $FT_Write
   when = 78
    let $78_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $78_FieldType by '' into $FT_Write
   when = 79
    let $79_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $79_FieldType by '' into $FT_Write
   when = 80
    let $80_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $80_FieldType by '' into $FT_Write
   when = 81
    let $81_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $81_FieldType by '' into $FT_Write
   when = 82
    let $82_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $82_FieldType by '' into $FT_Write
   when = 83
    let $83_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $83_FieldType by '' into $FT_Write
   when = 84
    let $84_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $84_FieldType by '' into $FT_Write
   when = 85
    let $85_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $85_FieldType by '' into $FT_Write
   when = 86
    let $86_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $86_FieldType by '' into $FT_Write
   when = 87
    let $87_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $87_FieldType by '' into $FT_Write
   when = 88
    let $88_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $88_FieldType by '' into $FT_Write
   when = 89
    let $89_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $89_FieldType by '' into $FT_Write
   when = 90
    let $90_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $90_FieldType by '' into $FT_Write
   when = 91
    let $91_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $91_FieldType by '' into $FT_Write
   when = 92
    let $92_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $92_FieldType by '' into $FT_Write
   when = 93
    let $93_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $93_FieldType by '' into $FT_Write
   when = 94
    let $94_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $94_FieldType by '' into $FT_Write
   when = 95
    let $95_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $95_FieldType by '' into $FT_Write
   when = 96
    let $96_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $96_FieldType by '' into $FT_Write
   when = 97
    let $97_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $97_FieldType by '' into $FT_Write
   when = 98
    let $98_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $98_FieldType by '' into $FT_Write
   when = 99
    let $99_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $99_FieldType by '' into $FT_Write
   when = 100
    let $100_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $100_FieldType by '' into $FT_Write
   when = 101
    let $101_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $101_FieldType by '' into $FT_Write
   when = 102
    let $102_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $102_FieldType by '' into $FT_Write
   when = 103
    let $103_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $103_FieldType by '' into $FT_Write
   when = 104
    let $104_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $104_FieldType by '' into $FT_Write
   when = 105
    let $105_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $105_FieldType by '' into $FT_Write
   when = 106
    let $106_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $106_FieldType by '' into $FT_Write
   when = 107
    let $107_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $107_FieldType by '' into $FT_Write
   when = 108
    let $108_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $108_FieldType by '' into $FT_Write
   when = 109
    let $109_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $109_FieldType by '' into $FT_Write
   when = 110
    let $110_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $110_FieldType by '' into $FT_Write
   when = 111
    let $111_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $111_FieldType by '' into $FT_Write
   when = 112
    let $112_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $112_FieldType by '' into $FT_Write
   when = 113
    let $113_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $113_FieldType by '' into $FT_Write
   when = 114
    let $114_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $114_FieldType by '' into $FT_Write
   when = 115
    let $115_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $115_FieldType by '' into $FT_Write
   when = 116
    let $116_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $116_FieldType by '' into $FT_Write
   when = 117
    let $117_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $117_FieldType by '' into $FT_Write
   when = 118
    let $118_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $118_FieldType by '' into $FT_Write
   when = 119
    let $119_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $119_FieldType by '' into $FT_Write
   when = 120
    let $120_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $120_FieldType by '' into $FT_Write
   when = 121
    let $121_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $121_FieldType by '' into $FT_Write
   when = 122
    let $122_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $122_FieldType by '' into $FT_Write
   when = 123
    let $123_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $123_FieldType by '' into $FT_Write
   when = 124
    let $124_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $124_FieldType by '' into $FT_Write
   when = 125
    let $125_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $125_FieldType by '' into $FT_Write
   when = 126
    let $126_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $126_FieldType by '' into $FT_Write
   when = 127
    let $127_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $127_FieldType by '' into $FT_Write
   when = 128
    let $128_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $128_FieldType by '' into $FT_Write
   when = 129
    let $129_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $129_FieldType by '' into $FT_Write
   when = 130
    let $130_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $130_FieldType by '' into $FT_Write
   when = 131
    let $131_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $131_FieldType by '' into $FT_Write
   when = 132
    let $132_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $132_FieldType by '' into $FT_Write
   when = 133
    let $133_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $133_FieldType by '' into $FT_Write
   when = 134
    let $134_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $134_FieldType by '' into $FT_Write
   when = 135
    let $135_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $135_FieldType by '' into $FT_Write
   when = 136
    let $136_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $136_FieldType by '' into $FT_Write
   when = 137
    let $137_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $137_FieldType by '' into $FT_Write
   when = 138
    let $138_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $138_FieldType by '' into $FT_Write
   when = 139
    let $139_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $139_FieldType by '' into $FT_Write
   when = 140
    let $140_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $140_FieldType by '' into $FT_Write
   when = 141
    let $141_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $141_FieldType by '' into $FT_Write
   when = 142
    let $142_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $142_FieldType by '' into $FT_Write
   when = 143
    let $143_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $143_FieldType by '' into $FT_Write
   when = 144
    let $144_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $144_FieldType by '' into $FT_Write
   when = 145
    let $145_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $145_FieldType by '' into $FT_Write
   when = 146
    let $146_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $146_FieldType by '' into $FT_Write
   when = 147
    let $147_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $147_FieldType by '' into $FT_Write
   when = 148
    let $148_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $148_FieldType by '' into $FT_Write
   when = 149
    let $149_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $149_FieldType by '' into $FT_Write
   when = 150
    let $150_FieldType = $FieldType

    string $Define_Lit $Var_Prefix $Field_Loop_Cnt $Space
    $150_FieldType by '' into $FT_Write

end-evaluate

   write 1 from $FT_Write

subtract 1 from #level
end-procedure


!----------------------------------------------------------------------
! Procedure:    Format-Numerics
! Descr:        When read everything into character ($) fields.  We use
!               the # fields on inserts if the fieldtype for that field
!               is numeric.  This procedure trnaslated chars to numerics.
!
!----------------------------------------------------------------------

begin-procedure Format-Numerics
add 1 to #level

#IFDEF DebugF
  print 'FLOW:Format-Numerics'    (+1,#level)
#ENDIF


if {MC_RGM_1} = 2 or {MC_RGM_1} = 3
   let #1 = to_number($1)
end-if
if {MC_RGM_2} = 2 or {MC_RGM_2} = 3
   let #2 = to_number($2)
end-if
if {MC_RGM_3} = 2 or {MC_RGM_3} = 3
   let #3 = to_number($3)
end-if
if {MC_RGM_4} = 2 or {MC_RGM_4} = 3
   let #4 = to_number($4)
end-if
if {MC_RGM_5} = 2 or {MC_RGM_5} = 3
   let #5 = to_number($5)
end-if
if {MC_RGM_6} = 2 or {MC_RGM_6} = 3
   let #6 = to_number($6)
end-if
if {MC_RGM_7} = 2 or {MC_RGM_7} = 3
   let #7 = to_number($7)
end-if
if {MC_RGM_8} = 2 or {MC_RGM_8} = 3
   let #8 = to_number($8)
end-if
if {MC_RGM_9} = 2 or {MC_RGM_9} = 3
   let #9 = to_number($9)
end-if
if {MC_RGM_10} = 2 or {MC_RGM_10} = 3
   let #10 = to_number($10)
end-if
if {MC_RGM_11} = 2 or {MC_RGM_11} = 3
   let #11 = to_number($11)
end-if
if {MC_RGM_12} = 2 or {MC_RGM_12} = 3
   let #12 = to_number($12)
end-if
if {MC_RGM_13} = 2 or {MC_RGM_13} = 3
   let #13 = to_number($13)
end-if
if {MC_RGM_14} = 2 or {MC_RGM_14} = 3
   let #14 = to_number($14)
end-if
if {MC_RGM_15} = 2 or {MC_RGM_15} = 3
   let #15 = to_number($15)
end-if
if {MC_RGM_16} = 2 or {MC_RGM_16} = 3
   let #16 = to_number($16)
end-if
if {MC_RGM_17} = 2 or {MC_RGM_17} = 3
   let #17 = to_number($17)
end-if
if {MC_RGM_18} = 2 or {MC_RGM_18} = 3
   let #18 = to_number($18)
end-if
if {MC_RGM_19} = 2 or {MC_RGM_19} = 3
   let #19 = to_number($19)
end-if
if {MC_RGM_20} = 2 or {MC_RGM_20} = 3
   let #20 = to_number($20)
end-if
if {MC_RGM_21} = 2 or {MC_RGM_21} = 3
   let #21 = to_number($21)
end-if
if {MC_RGM_22} = 2 or {MC_RGM_22} = 3
   let #22 = to_number($22)
end-if
if {MC_RGM_23} = 2 or {MC_RGM_23} = 3
   let #23 = to_number($23)
end-if
if {MC_RGM_24} = 2 or {MC_RGM_24} = 3
   let #24 = to_number($24)
end-if
if {MC_RGM_25} = 2 or {MC_RGM_25} = 3
   let #25 = to_number($25)
end-if
if {MC_RGM_26} = 2 or {MC_RGM_26} = 3
   let #26 = to_number($26)
end-if
if {MC_RGM_27} = 2 or {MC_RGM_27} = 3
   let #27 = to_number($27)
end-if
if {MC_RGM_28} = 2 or {MC_RGM_28} = 3
   let #28 = to_number($28)
end-if
if {MC_RGM_29} = 2 or {MC_RGM_29} = 3
   let #29 = to_number($29)
end-if
if {MC_RGM_30} = 2 or {MC_RGM_30} = 3
   let #30 = to_number($30)
end-if
if {MC_RGM_31} = 2 or {MC_RGM_31} = 3
   let #31 = to_number($31)
end-if
if {MC_RGM_32} = 2 or {MC_RGM_32} = 3
   let #32 = to_number($32)
end-if
if {MC_RGM_33} = 2 or {MC_RGM_33} = 3
   let #33 = to_number($33)
end-if
if {MC_RGM_34} = 2 or {MC_RGM_34} = 3
   let #34 = to_number($34)
end-if
if {MC_RGM_35} = 2 or {MC_RGM_35} = 3
   let #35 = to_number($35)
end-if
if {MC_RGM_36} = 2 or {MC_RGM_36} = 3
   let #36 = to_number($36)
end-if
if {MC_RGM_37} = 2 or {MC_RGM_37} = 3
   let #37 = to_number($37)
end-if
if {MC_RGM_38} = 2 or {MC_RGM_38} = 3
   let #38 = to_number($38)
end-if
if {MC_RGM_39} = 2 or {MC_RGM_39} = 3
   let #39 = to_number($39)
end-if
if {MC_RGM_40} = 2 or {MC_RGM_40} = 3
   let #40 = to_number($40)
end-if
if {MC_RGM_41} = 2 or {MC_RGM_41} = 3
   let #41 = to_number($41)
end-if
if {MC_RGM_42} = 2 or {MC_RGM_42} = 3
   let #42 = to_number($42)
end-if
if {MC_RGM_43} = 2 or {MC_RGM_43} = 3
   let #43 = to_number($43)
end-if
if {MC_RGM_44} = 2 or {MC_RGM_44} = 3
   let #44 = to_number($44)
end-if
if {MC_RGM_45} = 2 or {MC_RGM_45} = 3
   let #45 = to_number($45)
end-if
if {MC_RGM_46} = 2 or {MC_RGM_46} = 3
   let #46 = to_number($46)
end-if
if {MC_RGM_47} = 2 or {MC_RGM_47} = 3
   let #47 = to_number($47)
end-if
if {MC_RGM_48} = 2 or {MC_RGM_48} = 3
   let #48 = to_number($48)
end-if
if {MC_RGM_49} = 2 or {MC_RGM_49} = 3
   let #49 = to_number($49)
end-if
if {MC_RGM_50} = 2 or {MC_RGM_50} = 3
   let #50 = to_number($50)
end-if
if {MC_RGM_51} = 2 or {MC_RGM_51} = 3
   let #51 = to_number($51)
end-if
if {MC_RGM_52} = 2 or {MC_RGM_52} = 3
   let #52 = to_number($52)
end-if
if {MC_RGM_53} = 2 or {MC_RGM_53} = 3
   let #53 = to_number($53)
end-if
if {MC_RGM_54} = 2 or {MC_RGM_54} = 3
   let #54 = to_number($54)
end-if
if {MC_RGM_55} = 2 or {MC_RGM_55} = 3
   let #55 = to_number($55)
end-if
if {MC_RGM_56} = 2 or {MC_RGM_56} = 3
   let #56 = to_number($56)
end-if
if {MC_RGM_57} = 2 or {MC_RGM_57} = 3
   let #57 = to_number($57)
end-if
if {MC_RGM_58} = 2 or {MC_RGM_58} = 3
   let #58 = to_number($58)
end-if
if {MC_RGM_59} = 2 or {MC_RGM_59} = 3
   let #59 = to_number($59)
end-if
if {MC_RGM_60} = 2 or {MC_RGM_60} = 3
   let #60 = to_number($60)
end-if
if {MC_RGM_61} = 2 or {MC_RGM_61} = 3
   let #61 = to_number($61)
end-if
if {MC_RGM_62} = 2 or {MC_RGM_62} = 3
   let #62 = to_number($62)
end-if
if {MC_RGM_63} = 2 or {MC_RGM_63} = 3
   let #63 = to_number($63)
end-if
if {MC_RGM_64} = 2 or {MC_RGM_64} = 3
   let #64 = to_number($64)
end-if
if {MC_RGM_65} = 2 or {MC_RGM_65} = 3
   let #65 = to_number($65)
end-if
if {MC_RGM_66} = 2 or {MC_RGM_66} = 3
   let #66 = to_number($66)
end-if
if {MC_RGM_67} = 2 or {MC_RGM_67} = 3
   let #67 = to_number($67)
end-if
if {MC_RGM_68} = 2 or {MC_RGM_68} = 3
   let #68 = to_number($68)
end-if
if {MC_RGM_69} = 2 or {MC_RGM_69} = 3
   let #69 = to_number($69)
end-if
if {MC_RGM_70} = 2 or {MC_RGM_70} = 3
   let #70 = to_number($70)
end-if
if {MC_RGM_71} = 2 or {MC_RGM_71} = 3
   let #71 = to_number($71)
end-if
if {MC_RGM_72} = 2 or {MC_RGM_72} = 3
   let #72 = to_number($72)
end-if
if {MC_RGM_73} = 2 or {MC_RGM_73} = 3
   let #73 = to_number($73)
end-if
if {MC_RGM_74} = 2 or {MC_RGM_74} = 3
   let #74 = to_number($74)
end-if
if {MC_RGM_75} = 2 or {MC_RGM_75} = 3
   let #75 = to_number($75)
end-if
if {MC_RGM_76} = 2 or {MC_RGM_76} = 3
   let #76 = to_number($76)
end-if
if {MC_RGM_77} = 2 or {MC_RGM_77} = 3
   let #77 = to_number($77)
end-if
if {MC_RGM_78} = 2 or {MC_RGM_78} = 3
   let #78 = to_number($78)
end-if
if {MC_RGM_79} = 2 or {MC_RGM_79} = 3
   let #79 = to_number($79)
end-if
if {MC_RGM_80} = 2 or {MC_RGM_80} = 3
   let #80 = to_number($80)
end-if
if {MC_RGM_81} = 2 or {MC_RGM_81} = 3
   let #81 = to_number($81)
end-if
if {MC_RGM_82} = 2 or {MC_RGM_82} = 3
   let #82 = to_number($82)
end-if
if {MC_RGM_83} = 2 or {MC_RGM_83} = 3
   let #83 = to_number($83)
end-if
if {MC_RGM_84} = 2 or {MC_RGM_84} = 3
   let #84 = to_number($84)
end-if
if {MC_RGM_85} = 2 or {MC_RGM_85} = 3
   let #85 = to_number($85)
end-if
if {MC_RGM_86} = 2 or {MC_RGM_86} = 3
   let #86 = to_number($86)
end-if
if {MC_RGM_87} = 2 or {MC_RGM_87} = 3
   let #87 = to_number($87)
end-if
if {MC_RGM_88} = 2 or {MC_RGM_88} = 3
   let #88 = to_number($88)
end-if
if {MC_RGM_89} = 2 or {MC_RGM_89} = 3
   let #89 = to_number($89)
end-if
if {MC_RGM_90} = 2 or {MC_RGM_90} = 3
   let #90 = to_number($90)
end-if
if {MC_RGM_91} = 2 or {MC_RGM_91} = 3
   let #91 = to_number($91)
end-if
if {MC_RGM_92} = 2 or {MC_RGM_92} = 3
   let #92 = to_number($92)
end-if
if {MC_RGM_93} = 2 or {MC_RGM_93} = 3
   let #93 = to_number($93)
end-if
if {MC_RGM_94} = 2 or {MC_RGM_94} = 3
   let #94 = to_number($94)
end-if
if {MC_RGM_95} = 2 or {MC_RGM_95} = 3
   let #95 = to_number($95)
end-if
if {MC_RGM_96} = 2 or {MC_RGM_96} = 3
   let #96 = to_number($96)
end-if
if {MC_RGM_97} = 2 or {MC_RGM_97} = 3
   let #97 = to_number($97)
end-if
if {MC_RGM_98} = 2 or {MC_RGM_98} = 3
   let #98 = to_number($98)
end-if
if {MC_RGM_99} = 2 or {MC_RGM_99} = 3
   let #99 = to_number($99)
end-if
if {MC_RGM_100} = 2 or {MC_RGM_100} = 3
   let #100 = to_number($100)
end-if
if {MC_RGM_101} = 2 or {MC_RGM_101} = 3
   let #101 = to_number($101)
end-if
if {MC_RGM_102} = 2 or {MC_RGM_102} = 3
   let #102 = to_number($102)
end-if
if {MC_RGM_103} = 2 or {MC_RGM_103} = 3
   let #103 = to_number($103)
end-if
if {MC_RGM_104} = 2 or {MC_RGM_104} = 3
   let #104 = to_number($104)
end-if
if {MC_RGM_105} = 2 or {MC_RGM_105} = 3
   let #105 = to_number($105)
end-if
if {MC_RGM_106} = 2 or {MC_RGM_106} = 3
   let #106 = to_number($106)
end-if
if {MC_RGM_107} = 2 or {MC_RGM_107} = 3
   let #107 = to_number($107)
end-if
if {MC_RGM_108} = 2 or {MC_RGM_108} = 3
   let #108 = to_number($108)
end-if
if {MC_RGM_109} = 2 or {MC_RGM_109} = 3
   let #109 = to_number($109)
end-if
if {MC_RGM_110} = 2 or {MC_RGM_110} = 3
   let #110 = to_number($110)
end-if
if {MC_RGM_111} = 2 or {MC_RGM_111} = 3
   let #111 = to_number($111)
end-if
if {MC_RGM_112} = 2 or {MC_RGM_112} = 3
   let #112 = to_number($112)
end-if
if {MC_RGM_113} = 2 or {MC_RGM_113} = 3
   let #113 = to_number($113)
end-if
if {MC_RGM_114} = 2 or {MC_RGM_114} = 3
   let #114 = to_number($114)
end-if
if {MC_RGM_115} = 2 or {MC_RGM_115} = 3
   let #115 = to_number($115)
end-if
if {MC_RGM_116} = 2 or {MC_RGM_116} = 3
   let #116 = to_number($116)
end-if
if {MC_RGM_117} = 2 or {MC_RGM_117} = 3
   let #117 = to_number($117)
end-if
if {MC_RGM_118} = 2 or {MC_RGM_118} = 3
   let #118 = to_number($118)
end-if
if {MC_RGM_119} = 2 or {MC_RGM_119} = 3
   let #119 = to_number($119)
end-if
if {MC_RGM_120} = 2 or {MC_RGM_120} = 3
   let #120 = to_number($120)
end-if
if {MC_RGM_121} = 2 or {MC_RGM_121} = 3
   let #121 = to_number($121)
end-if
if {MC_RGM_122} = 2 or {MC_RGM_122} = 3
   let #122 = to_number($122)
end-if
if {MC_RGM_123} = 2 or {MC_RGM_123} = 3
   let #123 = to_number($123)
end-if
if {MC_RGM_124} = 2 or {MC_RGM_124} = 3
   let #124 = to_number($124)
end-if
if {MC_RGM_125} = 2 or {MC_RGM_125} = 3
   let #125 = to_number($125)
end-if
if {MC_RGM_126} = 2 or {MC_RGM_126} = 3
   let #126 = to_number($126)
end-if
if {MC_RGM_127} = 2 or {MC_RGM_127} = 3
   let #127 = to_number($127)
end-if
if {MC_RGM_128} = 2 or {MC_RGM_128} = 3
   let #128 = to_number($128)
end-if
if {MC_RGM_129} = 2 or {MC_RGM_129} = 3
   let #129 = to_number($129)
end-if
if {MC_RGM_130} = 2 or {MC_RGM_130} = 3
   let #130 = to_number($130)
end-if
if {MC_RGM_131} = 2 or {MC_RGM_131} = 3
   let #131 = to_number($131)
end-if
if {MC_RGM_132} = 2 or {MC_RGM_132} = 3
   let #132 = to_number($132)
end-if
if {MC_RGM_133} = 2 or {MC_RGM_133} = 3
   let #133 = to_number($133)
end-if
if {MC_RGM_134} = 2 or {MC_RGM_134} = 3
   let #134 = to_number($134)
end-if
if {MC_RGM_135} = 2 or {MC_RGM_135} = 3
   let #135 = to_number($135)
end-if
if {MC_RGM_136} = 2 or {MC_RGM_136} = 3
   let #136 = to_number($136)
end-if
if {MC_RGM_137} = 2 or {MC_RGM_137} = 3
   let #137 = to_number($137)
end-if
if {MC_RGM_138} = 2 or {MC_RGM_138} = 3
   let #138 = to_number($138)
end-if
if {MC_RGM_139} = 2 or {MC_RGM_139} = 3
   let #139 = to_number($139)
end-if
if {MC_RGM_140} = 2 or {MC_RGM_140} = 3
   let #140 = to_number($140)
end-if
if {MC_RGM_141} = 2 or {MC_RGM_141} = 3
   let #141 = to_number($141)
end-if
if {MC_RGM_142} = 2 or {MC_RGM_142} = 3
   let #142 = to_number($142)
end-if
if {MC_RGM_143} = 2 or {MC_RGM_143} = 3
   let #143 = to_number($143)
end-if
if {MC_RGM_144} = 2 or {MC_RGM_144} = 3
   let #144 = to_number($144)
end-if
if {MC_RGM_145} = 2 or {MC_RGM_145} = 3
   let #145 = to_number($145)
end-if
if {MC_RGM_146} = 2 or {MC_RGM_146} = 3
   let #146 = to_number($146)
end-if
if {MC_RGM_147} = 2 or {MC_RGM_147} = 3
   let #147 = to_number($147)
end-if
if {MC_RGM_148} = 2 or {MC_RGM_148} = 3
   let #148 = to_number($148)
end-if
if {MC_RGM_149} = 2 or {MC_RGM_149} = 3
   let #149 = to_number($149)
end-if
if {MC_RGM_150} = 2 or {MC_RGM_150} = 3
   let #150 = to_number($150)
end-if


subtract 1 from #level
end-procedure



!----------------------------------------------------------------------
! Procedure:    Format-Characters
! Descr:        Remove Nulls From Character Fields.  Note that SQR trims
!               off spaces when reading from a file.
!
!----------------------------------------------------------------------

begin-procedure Format-Characters
add 1 to #level

#IFDEF DebugF
  print 'FLOW:Format-Characters'    (+1,#level)
#ENDIF

let $Space = ' '

if {MC_RGM_1} = 0 and $1= ''
   let $1 = $Space
end-if
if {MC_RGM_2} = 0 and $2= ''
   let $2 = $Space
end-if
if {MC_RGM_3} = 0 and $3= ''
   let $3 = $Space
end-if
if {MC_RGM_4} = 0 and $4= ''
   let $4 = $Space
end-if
if {MC_RGM_5} = 0 and $5= ''
   let $5 = $Space
end-if
if {MC_RGM_6} = 0 and $6= ''
   let $6 = $Space
end-if
if {MC_RGM_7} = 0 and $7= ''
   let $7 = $Space
end-if
if {MC_RGM_8} = 0 and $8= ''
   let $8 = $Space
end-if
if {MC_RGM_9} = 0 and $9= ''
   let $9 = $Space
end-if
if {MC_RGM_10} = 0 and $10= ''
   let $10 = $Space
end-if
if {MC_RGM_11} = 0 and $11= ''
   let $11 = $Space
end-if
if {MC_RGM_12} = 0 and $12= ''
   let $12 = $Space
end-if
if {MC_RGM_13} = 0 and $13= ''
   let $13 = $Space
end-if
if {MC_RGM_14} = 0 and $14= ''
   let $14 = $Space
end-if
if {MC_RGM_15} = 0 and $15= ''
   let $15 = $Space
end-if
if {MC_RGM_16} = 0 and $16= ''
   let $16 = $Space
end-if
if {MC_RGM_17} = 0 and $17= ''
   let $17 = $Space
end-if
if {MC_RGM_18} = 0 and $18= ''
   let $18 = $Space
end-if
if {MC_RGM_19} = 0 and $19= ''
   let $19 = $Space
end-if
if {MC_RGM_20} = 0 and $20= ''
   let $20 = $Space
end-if
if {MC_RGM_21} = 0 and $21= ''
   let $21 = $Space
end-if
if {MC_RGM_22} = 0 and $22= ''
   let $22 = $Space
end-if
if {MC_RGM_23} = 0 and $23= ''
   let $23 = $Space
end-if
if {MC_RGM_24} = 0 and $24= ''
   let $24 = $Space
end-if
if {MC_RGM_25} = 0 and $25= ''
   let $25 = $Space
end-if
if {MC_RGM_26} = 0 and $26= ''
   let $26 = $Space
end-if
if {MC_RGM_27} = 0 and $27= ''
   let $27 = $Space
end-if
if {MC_RGM_28} = 0 and $28= ''
   let $28 = $Space
end-if
if {MC_RGM_29} = 0 and $29= ''
   let $29 = $Space
end-if
if {MC_RGM_30} = 0 and $30= ''
   let $30 = $Space
end-if
if {MC_RGM_31} = 0 and $31= ''
   let $31 = $Space
end-if
if {MC_RGM_32} = 0 and $32= ''
   let $32 = $Space
end-if
if {MC_RGM_33} = 0 and $33= ''
   let $33 = $Space
end-if
if {MC_RGM_34} = 0 and $34= ''
   let $34 = $Space
end-if
if {MC_RGM_35} = 0 and $35= ''
   let $35 = $Space
end-if
if {MC_RGM_36} = 0 and $36= ''
   let $36 = $Space
end-if
if {MC_RGM_37} = 0 and $37= ''
   let $37 = $Space
end-if
if {MC_RGM_38} = 0 and $38= ''
   let $38 = $Space
end-if
if {MC_RGM_39} = 0 and $39= ''
   let $39 = $Space
end-if
if {MC_RGM_40} = 0 and $40= ''
   let $40 = $Space
end-if
if {MC_RGM_41} = 0 and $41= ''
   let $41 = $Space
end-if
if {MC_RGM_42} = 0 and $42= ''
   let $42 = $Space
end-if
if {MC_RGM_43} = 0 and $43= ''
   let $43 = $Space
end-if
if {MC_RGM_44} = 0 and $44= ''
   let $44 = $Space
end-if
if {MC_RGM_45} = 0 and $45= ''
   let $45 = $Space
end-if
if {MC_RGM_46} = 0 and $46= ''
   let $46 = $Space
end-if
if {MC_RGM_47} = 0 and $47= ''
   let $47 = $Space
end-if
if {MC_RGM_48} = 0 and $48= ''
   let $48 = $Space
end-if
if {MC_RGM_49} = 0 and $49= ''
   let $49 = $Space
end-if
if {MC_RGM_50} = 0 and $50= ''
   let $50 = $Space
end-if
if {MC_RGM_51} = 0 and $51= ''
   let $51 = $Space
end-if
if {MC_RGM_52} = 0 and $52= ''
   let $52 = $Space
end-if
if {MC_RGM_53} = 0 and $53= ''
   let $53 = $Space
end-if
if {MC_RGM_54} = 0 and $54= ''
   let $54 = $Space
end-if
if {MC_RGM_55} = 0 and $55= ''
   let $55 = $Space
end-if
if {MC_RGM_56} = 0 and $56= ''
   let $56 = $Space
end-if
if {MC_RGM_57} = 0 and $57= ''
   let $57 = $Space
end-if
if {MC_RGM_58} = 0 and $58= ''
   let $58 = $Space
end-if
if {MC_RGM_59} = 0 and $59= ''
   let $59 = $Space
end-if
if {MC_RGM_60} = 0 and $60= ''
   let $60 = $Space
end-if
if {MC_RGM_61} = 0 and $61= ''
   let $61 = $Space
end-if
if {MC_RGM_62} = 0 and $62= ''
   let $62 = $Space
end-if
if {MC_RGM_63} = 0 and $63= ''
   let $63 = $Space
end-if
if {MC_RGM_64} = 0 and $64= ''
   let $64 = $Space
end-if
if {MC_RGM_65} = 0 and $65= ''
   let $65 = $Space
end-if
if {MC_RGM_66} = 0 and $66= ''
   let $66 = $Space
end-if
if {MC_RGM_67} = 0 and $67= ''
   let $67 = $Space
end-if
if {MC_RGM_68} = 0 and $68= ''
   let $68 = $Space
end-if
if {MC_RGM_69} = 0 and $69= ''
   let $69 = $Space
end-if
if {MC_RGM_70} = 0 and $70= ''
   let $70 = $Space
end-if
if {MC_RGM_71} = 0 and $71= ''
   let $71 = $Space
end-if
if {MC_RGM_72} = 0 and $72= ''
   let $72 = $Space
end-if
if {MC_RGM_73} = 0 and $73= ''
   let $73 = $Space
end-if
if {MC_RGM_74} = 0 and $74= ''
   let $74 = $Space
end-if
if {MC_RGM_75} = 0 and $75= ''
   let $75 = $Space
end-if
if {MC_RGM_76} = 0 and $76= ''
   let $76 = $Space
end-if
if {MC_RGM_77} = 0 and $77= ''
   let $77 = $Space
end-if
if {MC_RGM_78} = 0 and $78= ''
   let $78 = $Space
end-if
if {MC_RGM_79} = 0 and $79= ''
   let $79 = $Space
end-if
if {MC_RGM_80} = 0 and $80= ''
   let $80 = $Space
end-if
if {MC_RGM_81} = 0 and $81= ''
   let $81 = $Space
end-if
if {MC_RGM_82} = 0 and $82= ''
   let $82 = $Space
end-if
if {MC_RGM_83} = 0 and $83= ''
   let $83 = $Space
end-if
if {MC_RGM_84} = 0 and $84= ''
   let $84 = $Space
end-if
if {MC_RGM_85} = 0 and $85= ''
   let $85 = $Space
end-if
if {MC_RGM_86} = 0 and $86= ''
   let $86 = $Space
end-if
if {MC_RGM_87} = 0 and $87= ''
   let $87 = $Space
end-if
if {MC_RGM_88} = 0 and $88= ''
   let $88 = $Space
end-if
if {MC_RGM_89} = 0 and $89= ''
   let $89 = $Space
end-if
if {MC_RGM_90} = 0 and $90= ''
   let $90 = $Space
end-if
if {MC_RGM_91} = 0 and $91= ''
   let $91 = $Space
end-if
if {MC_RGM_92} = 0 and $92= ''
   let $92 = $Space
end-if
if {MC_RGM_93} = 0 and $93= ''
   let $93 = $Space
end-if
if {MC_RGM_94} = 0 and $94= ''
   let $94 = $Space
end-if
if {MC_RGM_95} = 0 and $95= ''
   let $95 = $Space
end-if
if {MC_RGM_96} = 0 and $96= ''
   let $96 = $Space
end-if
if {MC_RGM_97} = 0 and $97= ''
   let $97 = $Space
end-if
if {MC_RGM_98} = 0 and $98= ''
   let $98 = $Space
end-if
if {MC_RGM_99} = 0 and $99= ''
   let $99 = $Space
end-if
if {MC_RGM_100} = 0 and $100= ''
   let $100 = $Space
end-if
if {MC_RGM_101} = 0 and $101= ''
   let $101 = $Space
end-if
if {MC_RGM_102} = 0 and $102= ''
   let $102 = $Space
end-if
if {MC_RGM_103} = 0 and $103= ''
   let $103 = $Space
end-if
if {MC_RGM_104} = 0 and $104= ''
   let $104 = $Space
end-if
if {MC_RGM_105} = 0 and $105= ''
   let $105 = $Space
end-if
if {MC_RGM_106} = 0 and $106= ''
   let $106 = $Space
end-if
if {MC_RGM_107} = 0 and $107= ''
   let $107 = $Space
end-if
if {MC_RGM_108} = 0 and $108= ''
   let $108 = $Space
end-if
if {MC_RGM_109} = 0 and $109= ''
   let $109 = $Space
end-if
if {MC_RGM_110} = 0 and $110= ''
   let $110 = $Space
end-if
if {MC_RGM_111} = 0 and $111= ''
   let $111 = $Space
end-if
if {MC_RGM_112} = 0 and $112= ''
   let $112 = $Space
end-if
if {MC_RGM_113} = 0 and $113= ''
   let $113 = $Space
end-if
if {MC_RGM_114} = 0 and $114= ''
   let $114 = $Space
end-if
if {MC_RGM_115} = 0 and $115= ''
   let $115 = $Space
end-if
if {MC_RGM_116} = 0 and $116= ''
   let $116 = $Space
end-if
if {MC_RGM_117} = 0 and $117= ''
   let $117 = $Space
end-if
if {MC_RGM_118} = 0 and $118= ''
   let $118 = $Space
end-if
if {MC_RGM_119} = 0 and $119= ''
   let $119 = $Space
end-if
if {MC_RGM_120} = 0 and $120= ''
   let $120 = $Space
end-if
if {MC_RGM_121} = 0 and $121= ''
   let $121 = $Space
end-if
if {MC_RGM_122} = 0 and $122= ''
   let $122 = $Space
end-if
if {MC_RGM_123} = 0 and $123= ''
   let $123 = $Space
end-if
if {MC_RGM_124} = 0 and $124= ''
   let $124 = $Space
end-if
if {MC_RGM_125} = 0 and $125= ''
   let $125 = $Space
end-if
if {MC_RGM_126} = 0 and $126= ''
   let $126 = $Space
end-if
if {MC_RGM_127} = 0 and $127= ''
   let $127 = $Space
end-if
if {MC_RGM_128} = 0 and $128= ''
   let $128 = $Space
end-if
if {MC_RGM_129} = 0 and $129= ''
   let $129 = $Space
end-if
if {MC_RGM_130} = 0 and $130= ''
   let $130 = $Space
end-if
if {MC_RGM_131} = 0 and $131= ''
   let $131 = $Space
end-if
if {MC_RGM_132} = 0 and $132= ''
   let $132 = $Space
end-if
if {MC_RGM_133} = 0 and $133= ''
   let $133 = $Space
end-if
if {MC_RGM_134} = 0 and $134= ''
   let $134 = $Space
end-if
if {MC_RGM_135} = 0 and $135= ''
   let $135 = $Space
end-if
if {MC_RGM_136} = 0 and $136= ''
   let $136 = $Space
end-if
if {MC_RGM_137} = 0 and $137= ''
   let $137 = $Space
end-if
if {MC_RGM_138} = 0 and $138= ''
   let $138 = $Space
end-if
if {MC_RGM_139} = 0 and $139= ''
   let $139 = $Space
end-if
if {MC_RGM_140} = 0 and $140= ''
   let $140 = $Space
end-if
if {MC_RGM_141} = 0 and $141= ''
   let $141 = $Space
end-if
if {MC_RGM_142} = 0 and $142= ''
   let $142 = $Space
end-if
if {MC_RGM_143} = 0 and $143= ''
   let $143 = $Space
end-if
if {MC_RGM_144} = 0 and $144= ''
   let $144 = $Space
end-if
if {MC_RGM_145} = 0 and $145= ''
   let $145 = $Space
end-if
if {MC_RGM_146} = 0 and $146= ''
   let $146 = $Space
end-if
if {MC_RGM_147} = 0 and $147= ''
   let $147 = $Space
end-if
if {MC_RGM_148} = 0 and $148= ''
   let $148 = $Space
end-if
if {MC_RGM_149} = 0 and $149= ''
   let $149 = $Space
end-if
if {MC_RGM_150} = 0 and $150= ''
   let $150 = $Space
end-if


subtract 1 from #level
end-procedure




