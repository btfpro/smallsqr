!********************************************************
!  PayInit:  Report Initialization and Timing Routines  *
!********************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:05:11:22                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

begin-procedure Payroll-Report-Initialization
  display ' '
  display $ReportTitle
  display ' '
  move 1 to #SlctPageFrom
  move 9999 to #SlctPageThru
  move 'N' to $SlctOffCycleA
  move 'Y' to $SlctOffCycleB
  move '*' to $SlctRunID
  move '*' to $SlctCompany
  move '*' to $SlctPayGroup
  let $in = '19000101'
  do Format-DateTime($in, $SlctPayEndDt, {DEFCMP}, '', 'NATIVE')
  move 'N' to $Break_Prompt

  if $Prcs_Process_Instance = ''
    do Prompt
  else
    do Select-Parameters
    do Process-Parameters
  end-if

  if $Break_Prompt = 'N'
    do Get-Current-DateTime
    do Build-Where
    do Determine-Confirm-Status
    display 'Report Began: ' noline
    display $AsOfNow
    do Report
    do Get-Current-DateTime
    display 'Report Ended: ' noline
    display $AsOfNow
  end-if

end-procedure


begin-procedure Prompt

    do Prompt-RunID-Etc

end-procedure


begin-procedure Prompt-RunID-Etc

  while 1 = 1
    input $RunID maxlen=10 'Enter Payroll Run ID' type=char
    uppercase $RunID

    if RTRIM($RunID, ' ') = ''
      move 'Y' to $Break_Prompt
      break
    end-if

    do Edit-Run

    if RTRIM($RunID, ' ') <> ''

      do Prompt-Cycles

      if $Break_Prompt = 'Y'
        break
      end-if

      if $SlctRunID = '*'
        display 'There is more than one Pay Calendar for the Run ID.'
        input $WholeRun maxlen=1 'Enter ''Y'' to process the entire run' type=char

        uppercase $WholeRun

        if $WholeRun <> 'Y'
          do Identify-Calendar

          if $Break_Prompt = 'Y'
            break
          end-if

        else
          move $RunID to $SlctRunID
        end-if
      end-if

      if $CycleInd = 'F'
        display 'For Off-Cycle processing you may select a page range.'

        while 1 = 1
          input $SlctPageFrom maxlen=4 'Starting Page # (default=1)' type=integer
          if RTRIM($SlctPageFrom, ' ') = ''
            move 1 to #SlctPageFrom
            break
          else
            move $SlctPageFrom to #SlctPageFrom
            if #SlctPageFrom > 0
              break
            else
              Display 'Page # must be a positive integer between 1 and 9999.'
            end-if
          end-if
        end-while

        while 1 = 1
          input $SlctPageThru maxlen=4 'Ending Page # (default=9999)' type=integer
          if RTRIM($SlctPageThru, ' ') = ''
            move 9999 to #SlctPageThru
          else
            move $SlctPageThru to #SlctPageThru
          end-if
          if #SlctPageThru < #SlctPageFrom
            display 'Ending Page # cannot be less than Starting Page #.'
          else
            break
          end-if
        end-while
      end-if

      break
    end-if
  end-while
end-procedure


begin-procedure Prompt-Cycles

  while 1 = 1 and $CyclePrompts <> 'N'
    input $CycleInd maxlen=1 'Select On-Cycle(O), Off-Cycle(F) or Both(B)?' type=char
    uppercase $CycleInd

    if RTRIM($CycleInd, ' ') = ''
      move 'Y' to $Break_Prompt
      break
    end-if

    if $CycleInd = 'O'
      move 'N' to $SlctOffCycleA
      move 'N' to $SlctOffCycleB
      break
    else
      if $CycleInd = 'F'
        move 'Y' to $SlctOffCycleA
        move 'Y' to $SlctOffCycleB
        break
      else
        if $CycleInd = 'B'
          break
        end-if
      end-if
    end-if
  end-while

end-procedure


begin-procedure Identify-Calendar

  while 1 = 1
    display 'You must identify the Pay Calendar.'
    input $SlctCompany maxlen=3 'Enter Company ID (e.g. ccb)' type=char
    uppercase $SlctCompany

    if RTRIM($SlctCompany, ' ') = ''
      move 'Y' to $Break_Prompt
      break
    end-if

    input $SlctPayGroup maxlen=3 'Enter Pay Group (e.g. sm1)' type=char
    uppercase $SlctPayGroup

    if RTRIM($SlctPayGroup, ' ') = ''
      move 'Y' to $Break_Prompt
      break
    end-if

    input $SlctPayEndDt 'Enter Pay End Date ({Prompt-Date})' type=char

    if RTRIM($SlctPayEndDt, ' ') = ''
      move 'Y' to $Break_Prompt
      break
    end-if

    do Format-DateTime($SlctPayEndDt, $SlctPayEndDt, {Prompt-Mask},'','Native')
    do Edit-PayCalendar

    if RTRIM($SlctCompany, ' ') <> ''
      break
    end-if
  end-while
end-procedure


begin-procedure Process-Parameters
  let $SlctRunID = RTRIM(&RC_PAYINIT.Run_ID, ' ')

  if $CyclePrompts <> 'N'
    let $CycleInd  = RTRIM(&RC_PAYINIT.Cycle_Select, ' ')
    if $CycleInd = 'O'
      move 'N' to $SlctOffCycleA
      move 'N' to $SlctOffCycleB
    else
      if $CycleInd = 'F'
        move 'Y' to $SlctOffCycleA
        move 'Y' to $SlctOffCycleB
      end-if
    end-if
  end-if

  if &RC_PAYINIT.PAGE_NUM <> 0
    let #SlctPageFrom = &RC_PAYINIT.PAGE_NUM
  end-if

  if &RC_PAYINIT.PAGE_NUM_THRU <> 0
    let #SlctPageThru = &RC_PAYINIT.PAGE_NUM_THRU
  end-if

  if $SlctRunID = ''
    let $SlctRunID    = '*'
    let $SlctCompany  = RTRIM(&RC_PAYINIT.Company, ' ')
    let $SlctPayGroup = RTRIM(&RC_PAYINIT.PayGroup, ' ')
    let $SlctPayEndDt = &RC_PAYINIT.Pay_End_Dt
  end-if
end-procedure

!************************************************************************

begin-procedure Edit-Run
  move 0 to #Found
begin-select

'z'
  add 1 to #Found

  FROM PS_PAY_CALENDAR Z
where Z.RUN_ID = $RunID
end-select
  if #Found = 0
    display 'Error --  Run ID not valid for any Pay Calendar.'
    move ' ' to $RunID
  else
    if #Found = 1
      move $RunID to $SlctRunID
    end-if
  end-if
end-procedure

!************************************************************************

begin-procedure Edit-PayCalendar
  move 'N' to $Found
begin-select

'y'
  move 'Y' to $Found

  FROM PS_PAY_CALENDAR Y
where Y.COMPANY = $SlctCompany
  and Y.PAYGROUP = $SlctPayGroup
  and Y.PAY_END_DT = $SlctPayEndDt
  and Y.RUN_ID = $RunID
end-select
  if $Found = 'N'
    display 'Error --  Pay Calendar not found or not setup for the Run ID.'
    move ' ' to $SlctCompany
  end-if
end-procedure

!************************************************************************

begin-procedure Determine-Confirm-Status
  move 'CONFIRMED' to $ConfirmStatus
begin-select

'q'
    move ' ' to $ConfirmStatus

 FROM PS_PAY_CALENDAR X, PS_PAY_PAGE Q
WHERE (X.RUN_ID     = $SlctRunID
    OR (X.COMPANY   = $SlctCompany
    AND X.PAYGROUP  = $SlctPayGroup
    AND X.PAY_END_DT= $SlctPayEndDt))
  AND Q.COMPANY     = X.COMPANY
  AND Q.PAYGROUP    = X.PAYGROUP
  AND Q.PAY_END_DT  = X.PAY_END_DT
  AND Q.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND Q.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND Q.CONFIRMED   = 'N'
  AND Q.SINGLE_CHECK_USE IN ('C', 'N')
end-select
end-procedure

!************************************************************************

begin-procedure Build-Where
  if $SlctRunID <> '*'
    move  'A.RUN_ID = ''' to $SlctCalendar
    concat $SlctRunID     with $SlctCalendar
    concat ''''           with $SlctCalendar
  else
    move  'A.COMPANY = ''' to $SlctCalendar
    concat $SlctCompany    with $SlctCalendar
    concat ''' AND A.PAYGROUP = '''    with $SlctCalendar
    concat $SlctPayGroup   with $SlctCalendar
    concat ''' AND A.PAY_END_DT = '''  with $SlctCalendar
    concat $SlctPayEndDt   with $SlctCalendar
    concat '''' with $SlctCalendar
  end-if
end-procedure
