!***********************************************************************
!  BUD006.SQR:  Budget Load - Copy Prior FY                            *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:11:22:06                                 *
!       $Release:  HR9                                                 *
!      $Revision:  101                                                 *
!                                                                      *
!     Revision Date:HP999 Retro - Accomodate maximum sequence nbr      *
!                                                                      *
!***********************************************************************
! This program is specific to HRMS for Public Sector.                  *
!***********************************************************************

#include 'setenv.sqc'
#include 'setup07.sqc'
#define daysinyear 365
#define colr 5

!***********************************************************************
! BEGIN-REPORT                                                         *
!                                                                      *
!***********************************************************************
Begin-Report

  do Housekeeping
  do Mainline
  do Wrapup

End-Report


!***********************************************************************
! HOUSEKEEPING                                                         *
! This procedure performs the application initializations.  Formats    *
! variables for use.  Calls the procedures to get input parameters.    *
!***********************************************************************
Begin-Procedure Housekeeping

        do INIT-DATETIME
        do INIT-NUMBER
        do GET-CURRENT-DATETIME
        do DEFINE-PRCS-VARS
        do GET-RUN-CONTROL-PARMS
        do SELECT-PARAMETERS
        move 'BUD006.SQR' to $ReportID
        move 'Copy Prior FY Budget' to $ReportTitle
        show $ReportId ' - ' $ReportTitle ' ' $FromDate ' ' $ThruDate
        do SET-SELECT-CRITERIA

End-Procedure


!***********************************************************************
! GET-VALUES                                                           *
! This procedure gets the necessary calls in the procedure             *
! Get-Fiscal-Year that will be used throughout the report.             *
!***********************************************************************
Begin-Procedure Get-Values

        do Get-From-Thru-Date
        do Get-Fiscal-Year
        do Get-Business-Unit
        do Get-DeptID

! Convert dates to dtu format for date calculation as well as
! cmp format for comparison

        do Convert-To-DTU-Date($FromDate, $FromDate_Dtu)
        do Convert-To-DTU-Date($ThruDate, $ThruDate_Dtu)
        do Format-DateTime ($FromDate, $FromDate_Cmp, {DEFCMP},'','')
        do Format-DateTime ($ThruDate, $ThruDate_Cmp, {DEFCMP},'','')

! Calculate an adjusted 'ThruDate' which is one day later than user
! specified ThruDate.  This ensures that $ThruDate-Adj minus $FromDate
! = 365 (or 366)        [i.e. {daysinyear}  ]

        do dtu-add-days($ThruDate_Dtu, 1, $ThruDate_Adj_Dtu)
        do Convert-From-DTU-Date($ThruDate_Adj_Dtu, $ThruDate_Adj)

! Determine the effective date of the prior fiscal year
!

        do dtu-add-years($FromDate_Dtu, -1, $LastDate_Dtu)
        do Convert-From-DTU-Date($LastDate_Dtu, $LastDate)

        let #PriorFY = #Fiscal_Year - 1

End-Procedure

!***********************************************************************
! Procedure: SET-SELECT-CRITERIA                                       *
! Descr:     Assigns variable read from the run control record to      *
!            where clause substitutions for processing.  Where no parm *
!            has been supplied, the search is set to be global.        *
!                                                                      *
! Called by: HOUSEKEEPING                                              *
!***********************************************************************
Begin-Procedure SET-SELECT-CRITERIA

   if $Business_Unit = ''
      let $BUnit_Srch1 = ''
      let $BUnit_Srch2 = ''
      let $BUnit_Srch3 = ''
   else
      let $BUnit_Srch1 = 'AND CTL1.SETCNTRLVALUE = ''' || $Business_Unit || ''''
      let $BUnit_Srch2 = 'AND CTL2.SETCNTRLVALUE = ''' || $Business_Unit || ''''
      let $BUnit_Srch3 = 'AND CTL3.SETCNTRLVALUE = ''' || $Business_Unit || ''''
   end-if

   if $DeptID = ''
     let $DeptID_Srch1 = ''
     let $DeptID_Srch2 = ''
     let $DeptID_Srch3 = ''
   else
     let $DeptID_Srch1 = 'AND CLEAN_DEP_BUD.DEPTID = ''' || $DeptID || ''''
     let $DeptID_Srch2 = 'AND CUR_YR_DEP_BUD.DEPTID = ''' || $DeptID || ''''
     let $DeptID_Srch3 = 'AND GBL_DEPT_BUD.DEPTID = ''' || $DeptID || ''''
   end-if

End-Procedure SET-FLXSRVC-SELECTION


!***********************************************************************
! MAINLINE                                                             *
! This procedure is the main processing paragraph.  For each of the    *
! departments selected according to the run control parameters, it     *
! will process all EE job records associated with that department.     *
! Following this, it will process all vacant positions.                *
!***********************************************************************
Begin-Procedure Mainline

        do Clean-Dept-Budgets
        do Copy-Budget-Data

End-Procedure


!***********************************************************************
! CLEAN-DEPT-BUDGETS                                                   *
!                                                                      *
!***********************************************************************
Begin-Procedure Clean-Dept-Budgets

Begin-SELECT DISTINCT
CLEAN_DEP_BUD.SETID
CLEAN_DEP_BUD.DEPTID
CLEAN_DEP_BUD.EFFDT

   let $del_setid = &CLEAN_DEP_BUD.SETID
   let $del_deptid = &CLEAN_DEP_BUD.DEPTID

   do Can-Budget-be-deleted

   if $budget_cleaned = 'Y'

        do Delete-Dept-Budget-Dt
        do Delete-Dept-Fte-Cap
        do Delete-Dept-Budget-Ern
        do Delete-Dept-Budget-Tax
        do Delete-Dept-Budget-Ctx
        do Delete-Dept-Budget-Ded
   end-if


FROM PS_DEPT_BUDGET     CLEAN_DEP_BUD
   , PS_DEPT_BUDGET_DT  CLEAN_DEP_DT
WHERE CLEAN_DEP_DT.DEPTID       = CLEAN_DEP_BUD.DEPTID
  [$DeptID_Srch1]
  AND CLEAN_DEP_BUD.SETID  IN (SELECT CTL1.SETID
                                 FROM PS_SET_CNTRL_REC CTL1
                                WHERE CTL1.REC_GROUP_ID = 'HR_01'
                                  AND CTL1.RECNAME ='DEPT_TBL'
                                  [$BUnit_Srch1])
  AND CLEAN_DEP_DT.SETID       = CLEAN_DEP_BUD.SETID
  AND CLEAN_DEP_DT.BUDGET_BEGIN_DT = $LastDate
  AND CLEAN_DEP_BUD.FISCAL_YEAR = #PriorFY
end-SELECT

   do Commit-Transaction
   do Clean-Cur-Yr-Dept-Budget

End-Procedure

!***********************************************************************
! CAN-BUDGET-BE-DELETED   This procedure determines if the budget can  *
! be deleted.  If the used by distribution flag is on for any earnings *
! deduction or tax this department the department can not be deleted   *
! or processed.
!***********************************************************************
Begin-Procedure Can-Budget-be-Deleted

!HP999 RETRO DISTRUBUTION if earnings deductions or taxes contain
!data used for distribution the budget can not be cleaned

let $budget_cleaned = 'Y'                                !hp999 retro

Begin-SELECT DISTINCT
EARN.DEPTID

   let $budget_cleaned = 'N'

FROM PS_DEPT_BUDGET_ERN EARN
WHERE SETID        = $del_setid
   AND DEPTID      = $del_deptid
   AND FISCAL_YEAR = #Fiscal_Year
   AND EFFDT       >= $FromDate
   AND EFFDT       <= $ThruDate
   AND HP_USED_DISTRIBUTN = 'Y'

End-SELECT


Begin-SELECT DISTINCT
DEDN.DEPTID

   let $budget_cleaned = 'N'

FROM PS_DEPT_BUDGET_DED DEDN
WHERE SETID        = $del_setid
   AND DEPTID      = $del_deptid
   AND FISCAL_YEAR = #Fiscal_Year
   AND EFFDT       >= $FromDate
   AND EFFDT       <= $ThruDate
   AND HP_USED_DISTRIBUTN = 'Y'
End-SELECT

Begin-SELECT DISTINCT
TAXN.DEPTID

   let $budget_cleaned = 'N'

FROM PS_DEPT_BUDGET_TAX TAXN
WHERE SETID        = $del_setid
   AND DEPTID      = $del_deptid
   AND FISCAL_YEAR = #Fiscal_Year
   AND EFFDT       >= $FromDate
   AND EFFDT       <= $ThruDate
   AND HP_USED_DISTRIBUTN = 'Y'
End-SELECT


Begin-SELECT DISTINCT
CTXN.DEPTID

   let $budget_cleaned = 'N'

FROM PS_DEPT_BUDGET_CTX CTXN
WHERE SETID        = $del_setid
   AND DEPTID      = $del_deptid
   AND FISCAL_YEAR = #Fiscal_Year
   AND EFFDT       >= $FromDate
   AND EFFDT       <= $ThruDate
   AND HP_USED_DISTRIBUTN = 'Y'


End-SELECT


End-procedure Can-budget-be-deleted


Begin-Procedure Delete-Dept-Budget-Dt

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, DELETE, PS_DEPT_BUDGET_DT'
  let $err-statement2 = 'Key Fields: SETID=<' || &CLEAN_DEP_BUD.SETID ||
                                 '>, DEPTID=<' || &CLEAN_DEP_BUD.DEPTID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear || '>'

begin-SQL on-error=Error-Display
DELETE FROM PS_DEPT_BUDGET_DT
WHERE SETID       = &CLEAN_DEP_BUD.SETID
  AND DEPTID      = &CLEAN_DEP_BUD.DEPTID
  AND FISCAL_YEAR = #Fiscal_Year
end-sql

let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, DELETE, PS_DEPTBDGT_SUSPNS'
  let $err-statement2 = 'Key Fields: SETID=<' || &CLEAN_DEP_BUD.SETID ||
                                 '>, DEPTID=<' || &CLEAN_DEP_BUD.DEPTID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear || '>'

begin-SQL on-error=Error-Display                            !hP999 RETRO
DELETE FROM PS_DEPTBDGT_SUSPNS                              !hP999 RETRO
WHERE SETID       = &CLEAN_DEP_BUD.SETID                    !hP999 RETRO
  AND DEPTID      = &CLEAN_DEP_BUD.DEPTID                   !hP999 RETRO
  AND FISCAL_YEAR = #Fiscal_Year                            !hP999 RETRO
end-sql                                                     !hP999 RETRO


End-Procedure





Begin-Procedure Delete-Dept-Fte-Cap

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, DELETE, PS_DEPT_FTE_EFFDT'
  let $err-statement2 = 'Key Fields: SETID=<' || &CLEAN_DEP_BUD.SETID ||
                                 '>, DEPTID=<' || &CLEAN_DEP_BUD.DEPTID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear ||
                                 '>, EFFDT(>=)=<' || $FromDate ||
                                 '>, EFFDT(<=)=<' || $ThruDate || '>'

begin-SQL on-error=Error-Display
DELETE FROM PS_DEPT_FTE_EFFDT
WHERE SETID       = &CLEAN_DEP_BUD.SETID
  AND DEPTID      = &CLEAN_DEP_BUD.DEPTID
  AND FISCAL_YEAR = #Fiscal_Year
  AND EFFDT      >= $FromDate
  AND EFFDT      <= $ThruDate
end-sql

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, DELETE, PS_DEPT_FTE_CAP'
  let $err-statement2 = 'Key Fields: SETID=<' || &CLEAN_DEP_BUD.SETID ||
                                 '>, DEPTID=<' || &CLEAN_DEP_BUD.DEPTID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear ||
                                 '>, EFFDT(>=)=<' || $FromDate ||
                                 '>, EFFDT(<=)=<' || $ThruDate || '>'

begin-SQL on-error=Error-Display
DELETE FROM PS_DEPT_FTE_CAP
WHERE SETID       = &CLEAN_DEP_BUD.SETID
  AND DEPTID      = &CLEAN_DEP_BUD.DEPTID
  AND FISCAL_YEAR = #Fiscal_Year
  AND EFFDT      >= $FromDate
  AND EFFDT      <= $ThruDate
end-sql
End-Procedure

Begin-Procedure Delete-Dept-Budget-Ern

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, DELETE, PS_DEPT_BUDGET_ERN'
  let $err-statement2 = 'Key Fields: SETID=<' || &CLEAN_DEP_BUD.SETID ||
                                 '>, DEPTID=<' || &CLEAN_DEP_BUD.DEPTID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear ||
                                 '>, EFFDT(>=)=<' || $FromDate ||
                                 '>, EFFDT(<=)=<' || $ThruDate || '>'

begin-SQL on-error=Error-Display
DELETE FROM PS_DEPT_BUDGET_ERN
WHERE SETID       = &CLEAN_DEP_BUD.SETID
  AND DEPTID      = &CLEAN_DEP_BUD.DEPTID
  AND FISCAL_YEAR = #Fiscal_Year
  AND EFFDT      >= $FromDate
  AND EFFDT      <= $ThruDate
end-sql
End-Procedure

Begin-Procedure Delete-Dept-Budget-Tax

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, DELETE, PS_DEPT_BUDGET_TAX'
  let $err-statement2 = 'Key Fields: SETID=<' || &CLEAN_DEP_BUD.SETID ||
                                 '>, DEPTID=<' || &CLEAN_DEP_BUD.DEPTID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear ||
                                 '>, EFFDT(>=)=<' || $FromDate ||
                                 '>, EFFDT(<=)=<' || $ThruDate || '>'

begin-SQL on-error=Error-Display
DELETE FROM PS_DEPT_BUDGET_TAX
WHERE SETID       = &CLEAN_DEP_BUD.SETID
  AND DEPTID      = &CLEAN_DEP_BUD.DEPTID
  AND FISCAL_YEAR = #Fiscal_Year
  AND EFFDT      >= $FromDate
  AND EFFDT      <= $ThruDate
end-sql
End-Procedure

Begin-Procedure Delete-Dept-Budget-Ctx

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, DELETE, PS_DEPT_BUDGET_CTX'
  let $err-statement2 = 'Key Fields: SETID=<' || &CLEAN_DEP_BUD.SETID ||
                                 '>, DEPTID=<' || &CLEAN_DEP_BUD.DEPTID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear ||
                                 '>, EFFDT(>=)=<' || $FromDate ||
                                 '>, EFFDT(<=)=<' || $ThruDate || '>'

begin-SQL on-error=Error-Display
DELETE FROM PS_DEPT_BUDGET_CTX
WHERE SETID       = &CLEAN_DEP_BUD.SETID
  AND DEPTID      = &CLEAN_DEP_BUD.DEPTID
  AND FISCAL_YEAR = #Fiscal_Year
  AND EFFDT      >= $FromDate
  AND EFFDT      <= $ThruDate
end-sql
End-Procedure

Begin-Procedure Delete-Dept-Budget-Ded

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, DELETE, PS_DEPT_BUDGET_DED'
  let $err-statement2 = 'Key Fields: SETID=<' || &CLEAN_DEP_BUD.SETID ||
                                 '>, DEPTID=<' || &CLEAN_DEP_BUD.DEPTID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear ||
                                 '>, EFFDT(>=)=<' || $FromDate ||
                                 '>, EFFDT(<=)=<' || $ThruDate || '>'

begin-SQL on-error=Error-Display
DELETE FROM PS_DEPT_BUDGET_DED
WHERE SETID       = &CLEAN_DEP_BUD.SETID
  AND DEPTID      = &CLEAN_DEP_BUD.DEPTID
  AND FISCAL_YEAR = #Fiscal_Year
  AND EFFDT      >= $FromDate
  AND EFFDT      <= $ThruDate
end-sql
End-Procedure

Begin-Procedure Clean-Cur-Yr-Dept-Budget

Begin-SELECT DISTINCT
CUR_YR_DEP_BUD.SETID
CUR_YR_DEP_BUD.DEPTID
CUR_YR_DEP_BUD.EFFDT

  let $del_setid = &CUR_YR_DEP_BUD.SETID
  let $del_deptid = &CUR_YR_DEP_BUD.DEPTID

  do Can-Budget-be-deleted

  if $budget_cleaned = 'Y'
     do Delete-Dept-Budget
  end-if

FROM PS_DEPT_BUDGET CUR_YR_DEP_BUD
WHERE CUR_YR_DEP_BUD.SETID IN (SELECT CTL2.SETID
                                 FROM PS_SET_CNTRL_REC CTL2
                                WHERE CTL2.REC_GROUP_ID = 'HR_01'
                                  AND CTL2.RECNAME ='DEPT_TBL'
                                  [$BUnit_Srch2])
  [$DeptID_Srch2]
  AND CUR_YR_DEP_BUD.FISCAL_YEAR = #Fiscal_Year
  AND CUR_YR_DEP_BUD.EFFDT      >= $FromDate
  AND CUR_YR_DEP_BUD.EFFDT      <= $ThruDate
  AND NOT EXISTS
      (SELECT 'X' FROM PS_DEPT_BUDGET_DT DBD
       WHERE DBD.SETID        = CUR_YR_DEP_BUD.SETID
         AND DBD.DEPTID       = CUR_YR_DEP_BUD.DEPTID
         AND DBD.FISCAL_YEAR  = #Fiscal_Year)
End-Select

        do Commit-Transaction

End-Procedure

Begin-Procedure Delete-Dept-Budget

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, DELETE, PS_DEPT_BUDGET'
  let $err-statement2 = 'Key Fields: SETID=<' || &CUR_YR_DEP_BUD.SETID ||
                                 '>, DEPTID=<' || &CUR_YR_DEP_BUD.DEPTID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear ||
                                 '>, EFFDT=<' || &CUR_YR_DEP_BUD.EFFDT || '>'

begin-SQL on-error=Error-Display
DELETE FROM PS_DEPT_BUDGET
WHERE SETID       = &CUR_YR_DEP_BUD.SETID
  AND DEPTID      = &CUR_YR_DEP_BUD.DEPTID
  AND FISCAL_YEAR = #Fiscal_Year
  AND EFFDT       = &CUR_YR_DEP_BUD.EFFDT
end-sql
End-Procedure


!***********************************************************************
! COPY-BUDGET-DATA                                                     *
! This will select rows from each table which have an effective date   *
! between the FromDate & ThruDate, and insert a new effective dated    *
! corresponding to the new fiscal year from date.                      *
!***********************************************************************
Begin-Procedure Copy-Budget-Data

   let $Last_SetID  = '%%%%%'
   let $Last_DeptID = '%%%%%%'
   let $Proc_Flag   = 'N'

Begin-SELECT DISTINCT
GBL_DEPT_BUD.SETID
GBL_DEPT_BUD.DEPTID
GBL_DEPT_BUD.POSITION_POOL_ID
GBL_DEPT_BUD.SETID_JOBCODE
GBL_DEPT_BUD.JOBCODE
GBL_DEPT_BUD.POSITION_NBR
GBL_DEPT_BUD.EMPLID
GBL_DEPT_BUD.EMPL_RCD
GBL_DEPT_BUD.FISCAL_YEAR
GBL_DEPT_BUD.EFFDT
GBL_DEPT_BUD.EFF_STATUS

   let $Gbl_SetID             = &GBL_DEPT_BUD.SETID
   let $Gbl_DeptID            = &GBL_DEPT_BUD.DEPTID
   let $Gbl_Position_Pool_ID  = &GBL_DEPT_BUD.POSITION_POOL_ID
   let $Gbl_Setid_Jobcode     = &GBL_DEPT_BUD.SETID_JOBCODE
   let $Gbl_Jobcode           = &GBL_DEPT_BUD.JOBCODE
   let $Gbl_Position_Nbr      = &GBL_DEPT_BUD.POSITION_NBR
   let $Gbl_Emplid            = &GBL_DEPT_BUD.EMPLID
   let #Gbl_Empl_RcdNo        = &GBL_DEPT_BUD.EMPL_RCD
   let #Gbl_Fiscal_Year       = &GBL_DEPT_BUD.FISCAL_YEAR
   let $Gbl_Effdt             = &GBL_DEPT_BUD.EFFDT
   let $Gbl_Status            = rtrim(&GBL_DEPT_BUD.EFF_STATUS,' ')
   
   if $Gbl_SetID  <> $Last_SetID
   or $Gbl_DeptID <> $Last_DeptID

      do Check-Existing_Bdgt
      do Check-Budget-DeptID

      if $Proc_Flag = 'Y' and $Budget_Exist = 'N'
          do Dept-Budget-Dt
          do Dept-Fte-Effdt
          do Dept-Fte-Cap
      else
          display 'Department : ' noline
          display $Gbl_SetID      noline
          display ' / '           noline
          display $Gbl_DeptID     noline

          if $Budget_Exist = 'Y'
                display ' --> budget has been used in Distribution, department ignored'
          else
                display ' is not defined as a Budget Department ' noline
                display '- budget data not defined.'
          end-if
      end-if

      let $Last_SetID = $Gbl_SetID
      let $Last_DeptID = $Gbl_DeptID
   end-if

   if $Proc_Flag = 'Y' and $Budget_Exist = 'N'
     do Format-DateTime($Gbl_Effdt, $Gbl_Effdt_Cmp, {DEFCMP}, '', '')
     if $Gbl_Effdt_Cmp > $FromDate_Cmp
       do Dept-Budget
     else
       if $Gbl_Status = 'A'
          do Dept-Budget-Validate
       end-if
     end-if
   end-if

FROM PS_DEPT_BUDGET     GBL_DEPT_BUD
   , PS_DEPT_BUDGET_DT  GBL_DEPT_DT
WHERE GBL_DEPT_DT.DEPTID = GBL_DEPT_BUD.DEPTID
  [$DeptID_Srch3]
  AND GBL_DEPT_BUD.SETID IN
         (SELECT CTL3.SETID
            FROM PS_SET_CNTRL_REC CTL3
           WHERE CTL3.REC_GROUP_ID = 'HR_01'
             AND CTL3.RECNAME ='DEPT_TBL'
             [$BUnit_Srch3])
  AND GBL_DEPT_DT.SETID = GBL_DEPT_BUD.SETID
  AND GBL_DEPT_BUD.FISCAL_YEAR = #PriorFY
  AND GBL_DEPT_DT.FISCAL_YEAR = GBL_DEPT_BUD.FISCAL_YEAR
  AND GBL_DEPT_DT.BUDGET_BEGIN_DT = $LastDate
  AND GBL_DEPT_BUD.EFFDT  =
         (SELECT MAX (GBL_DEPT_BUD2.EFFDT)
            FROM PS_DEPT_BUDGET GBL_DEPT_BUD2
           WHERE GBL_DEPT_BUD2.SETID            = GBL_DEPT_BUD.SETID
             AND GBL_DEPT_BUD2.DEPTID           = GBL_DEPT_BUD.DEPTID
             AND GBL_DEPT_BUD2.POSITION_POOL_ID = GBL_DEPT_BUD.POSITION_POOL_ID
             AND GBL_DEPT_BUD2.SETID_JOBCODE    = GBL_DEPT_BUD.SETID_JOBCODE
             AND GBL_DEPT_BUD2.JOBCODE          = GBL_DEPT_BUD.JOBCODE
             AND GBL_DEPT_BUD2.POSITION_NBR     = GBL_DEPT_BUD.POSITION_NBR
             AND GBL_DEPT_BUD2.EMPLID           = GBL_DEPT_BUD.EMPLID
             AND GBL_DEPT_BUD2.EMPL_RCD         = GBL_DEPT_BUD.EMPL_RCD
             AND GBL_DEPT_BUD2.FISCAL_YEAR      = GBL_DEPT_BUD.FISCAL_YEAR )
  AND GBL_DEPT_BUD.EFFSEQ  =
         (SELECT MAX (DEPTSEQ.EFFSEQ)
            FROM PS_DEPT_BUDGET DEPTSEQ
           WHERE DEPTSEQ.SETID            = GBL_DEPT_BUD.SETID
             AND DEPTSEQ.DEPTID           = GBL_DEPT_BUD.DEPTID
             AND DEPTSEQ.POSITION_POOL_ID = GBL_DEPT_BUD.POSITION_POOL_ID
             AND DEPTSEQ.SETID_JOBCODE    = GBL_DEPT_BUD.SETID_JOBCODE
             AND DEPTSEQ.JOBCODE          = GBL_DEPT_BUD.JOBCODE
             AND DEPTSEQ.POSITION_NBR     = GBL_DEPT_BUD.POSITION_NBR
             AND DEPTSEQ.EMPLID           = GBL_DEPT_BUD.EMPLID
             AND DEPTSEQ.EMPL_RCD         = GBL_DEPT_BUD.EMPL_RCD
             AND DEPTSEQ.FISCAL_YEAR      = GBL_DEPT_BUD.FISCAL_YEAR
             AND DEPTSEQ.EFFDT            = GBL_DEPT_BUD.EFFDT )
ORDER BY GBL_DEPT_BUD.SETID, GBL_DEPT_BUD.DEPTID
End-Select

  do Commit-Transaction

End-Procedure Copy-Budget-Data

!***********************************************************************
! CHECK-EXISTING-BUDGET                                                *
!                                                                      *
!***********************************************************************
Begin-Procedure Check-Existing_Bdgt

   let $Budget_Exist = 'N'

Begin-SELECT DISTINCT
BUDGET.DEPTID

   let $Budget_Exist = 'Y'

FROM PS_DEPT_BUDGET BUDGET
WHERE SETID        = $Gbl_SetID
   AND DEPTID      = $Gbl_DeptID
   AND FISCAL_YEAR = #Fiscal_Year
   AND EFFDT       >= $FromDate
   AND EFFDT       <= $ThruDate
End-SELECT

End-procedure Check-existing_budget


!***********************************************************************
! CHECK-BUDGET-DEPTID                                                  *
!                                                                      *
!***********************************************************************
Begin-Procedure Check-Budget-DeptID

  let $Proc_Flag = 'N'

Begin-SELECT
DT.DEPTID
DT.BUDGET_DEPTID

  if &DT.DEPTID = &DT.BUDGET_DEPTID
      let $Proc_Flag = 'Y'
  end-if

FROM PS_DEPT_TBL DT
WHERE DT.SETID = $Gbl_SetID
  AND DT.DEPTID = $Gbl_DeptID
  AND DT.EFFDT = (SELECT MAX(DT1.EFFDT) FROM PS_DEPT_TBL DT1
                  WHERE DT1.SETID = DT.SETID
                    AND DT1.DEPTID = DT.DEPTID
                    AND DT1.EFFDT <= $FromDate)
  AND DT.EFF_STATUS = 'A'
End-Select
End-Procedure


!***********************************************************************
! DEPT-BUDGET-DT                                                       *
!                                                                      *
!***********************************************************************
Begin-Procedure Dept-Budget-Dt
Begin-SELECT
DEPT_BUD_DT.SETID
DEPT_BUD_DT.DEPTID
DEPT_BUD_DT.BUDGET_CAP_INDC
DEPT_BUD_DT.DEPT_OFFSET_GRP
DEPT_BUD_DT.DEFAULT_FUND_OPTN
DEPT_BUD_DT.ACCT_CD_DED
DEPT_BUD_DT.FUND_END_DT_DED
DEPT_BUD_DT.ACCT_CD_TAX
DEPT_BUD_DT.FUND_END_DT_TAX
DEPT_BUD_DT.HP_FRINGE_GROUP
DEPT_BUD_DT.HP_ERN_ACCT
DEPT_BUD_DT.HP_DED_ACCT
DEPT_BUD_DT.HP_TAX_ACCT
DEPT_BUD_DT.HP_CTX_ACCT

  do Insert-Into-Dept-Budget-Dt

FROM PS_DEPT_BUDGET_DT DEPT_BUD_DT
WHERE DEPT_BUD_DT.SETID = $Gbl_SetID
  AND DEPT_BUD_DT.DEPTID = $Gbl_DeptID
  AND DEPT_BUD_DT.FISCAL_YEAR = #PriorFY
  AND DEPT_BUD_DT.BUDGET_BEGIN_DT = $LastDate
End-SELECT


!   hP9999 SELECT AND INSERT SUSPENSE ACCOUNT CODE
Begin-SELECT
DEPT_SUSPENS.SETID
DEPT_SUSPENS.DEPTID
DEPT_SUSPENS.HP_ACCT_CD_SUSPNS

  do Insert-Into-Dept-Suspense

FROM PS_DEPTBDGT_SUSPNS DEPT_SUSPENS
WHERE DEPT_SUSPENS.SETID = $Gbl_SetID
  AND DEPT_SUSPENS.DEPTID = $Gbl_DeptID
  AND DEPT_SUSPENS.FISCAL_YEAR = #PriorFY
  AND DEPT_SUSPENS.EFFDT =
         (SELECT MAX(SUSPNS_DT.EFFDT)
          FROM PS_DEPTBDGT_SUSPNS SUSPNS_DT
          WHERE SUSPNS_DT.SETID = $Gbl_SetID
          AND SUSPNS_DT.DEPTID = $Gbl_DeptID
          AND SUSPNS_DT.FISCAL_YEAR = #PriorFY)
  AND DEPT_SUSPENS.EFFSEQ =
          (SELECT MAX(SUSPNS_SEQ.EFFSEQ)
          FROM PS_DEPTBDGT_SUSPNS SUSPNS_SEQ
          WHERE SUSPNS_SEQ.SETID = $Gbl_SetID
          AND SUSPNS_SEQ.DEPTID = $Gbl_DeptID
          AND SUSPNS_SEQ.FISCAL_YEAR = #PriorFY
          AND SUSPNS_SEQ.EFFDT = DEPT_SUSPENS.EFFDT)

End-SELECT

End-Procedure


!***********************************************************************
! INSERT-INTO-DEPT-BUDGET-DT                                           *
!                                                                      *
!***********************************************************************
Begin-Procedure Insert-Into-Dept-Budget-Dt

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, INSERT, PS_DEPT_BUDGET_DT'
  let $err-statement2 = 'Key Fields: SETID=<' || $Gbl_SetID ||
                                 '>, DEPTID=<' || $Gbl_DeptID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear ||
                                 '>, BUDGET_BEGIN_DT=<' || $FromDate ||
                                 '>, BUDGET_END_DT=<' || $ThruDate || '>'

begin-SQL on-error=Error-Display
INSERT INTO PS_DEPT_BUDGET_DT (
  SETID,
  DEPTID,
  FISCAL_YEAR,
  BUDGET_BEGIN_DT,
  BUDGET_END_DT,
  BUDGET_CAP_INDC,
  DEPT_OFFSET_GRP,
  DEFAULT_FUND_OPTN,
  ACCT_CD_DED,
  FUND_END_DT_DED,
  ACCT_CD_TAX,
  FUND_END_DT_TAX,
  HP_FRINGE_GROUP,
  HP_ERN_ACCT,
  HP_DED_ACCT,
  HP_TAX_ACCT,
  HP_CTX_ACCT)
VALUES (
  $Gbl_SetID,
  $Gbl_DeptID,
  #Fiscal_Year,
  $FromDate,
  $ThruDate,
  &DEPT_BUD_DT.BUDGET_CAP_INDC,
  &DEPT_BUD_DT.DEPT_OFFSET_GRP,
  &DEPT_BUD_DT.DEFAULT_FUND_OPTN,
  &DEPT_BUD_DT.ACCT_CD_DED,
  &DEPT_BUD_DT.FUND_END_DT_DED,
  &DEPT_BUD_DT.ACCT_CD_TAX,
  &DEPT_BUD_DT.FUND_END_DT_TAX,
  &DEPT_BUD_DT.HP_FRINGE_GROUP,
  &DEPT_BUD_DT.HP_ERN_ACCT,
  &DEPT_BUD_DT.HP_DED_ACCT,
  &DEPT_BUD_DT.HP_TAX_ACCT,
  &DEPT_BUD_DT.HP_CTX_ACCT)
end-sql
End-Procedure

!***********************************************************************
! INSERT-INTO-DEPT-SUSPENSE                                            *
!                                                                      *
!***********************************************************************
Begin-Procedure Insert-Into-Dept-Suspense

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, INSERT, PS_DEPT_SUSPENSE'
  let $err-statement2 = 'Key Fields: SETID=<' || $Gbl_SetID ||
                                 '>, DEPTID=<' || $Gbl_DeptID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear ||
                                 '>'

begin-SQL on-error=Error-Display
INSERT INTO PS_DEPTBDGT_SUSPNS (
  SETID,
  DEPTID,
  FISCAL_YEAR,
  HP_ACCT_CD_SUSPNS,
  EFFDT,
  EFFSEQ,
  EFF_STATUS)
VALUES (
  $Gbl_SetID,
  $Gbl_DeptID,
  #Fiscal_Year,
  &DEPT_SUSPENS.HP_ACCT_CD_SUSPNS,
  $FromDate,
  0,
  'A')
end-sql
End-Procedure


!***********************************************************************
! DEPT-FTE-EFFDT                                                       *
!                                                                      *
!***********************************************************************
Begin-Procedure Dept-Fte-Effdt
Begin-SELECT
DEPT_FTE_EFFDT.SETID
DEPT_FTE_EFFDT.DEPTID
DEPT_FTE_EFFDT.EFF_STATUS

  do Insert-Into-Dept-Fte-Effdt

FROM PS_DEPT_FTE_EFFDT DEPT_FTE_EFFDT
WHERE DEPT_FTE_EFFDT.SETID = $Gbl_SetID
  AND DEPT_FTE_EFFDT.DEPTID = $Gbl_DeptID
  AND DEPT_FTE_EFFDT.FISCAL_YEAR = #PriorFY
  AND DEPT_FTE_EFFDT.EFF_STATUS = 'A'
  AND DEPT_FTE_EFFDT.EFFDT =
        (SELECT MAX(DEPT_FTE_EFFDTS.EFFDT)
           FROM PS_DEPT_FTE_EFFDT DEPT_FTE_EFFDTS
          WHERE DEPT_FTE_EFFDTS.SETID       = DEPT_FTE_EFFDT.SETID
            AND DEPT_FTE_EFFDTS.DEPTID      = DEPT_FTE_EFFDT.DEPTID
            AND DEPT_FTE_EFFDTS.FISCAL_YEAR = DEPT_FTE_EFFDT.FISCAL_YEAR
            AND DEPT_FTE_EFFDTS.EFF_STATUS  = DEPT_FTE_EFFDT.EFF_STATUS)
End-SELECT
End-Procedure


!***********************************************************************
! INSERT-INTO-DEPT-FTE-EFFDT                                           *
!                                                                      *
!***********************************************************************
Begin-Procedure Insert-Into-Dept-Fte-Effdt

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, INSERT, PS_DEPT_FTE_EFFDT'
  let $err-statement2 = 'Key Fields: SETID=<' || $Gbl_SetID ||
                                 '>, DEPTID=<' || $Gbl_DeptID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear ||
                                 '>, EFFDT=<' || $FromDate || '>'

begin-SQL on-error=Error-Display
INSERT INTO PS_DEPT_FTE_EFFDT (
  SETID,
  DEPTID,
  FISCAL_YEAR,
  EFFDT,
  EFF_STATUS)
VALUES (
  $Gbl_SetID,
  $Gbl_DeptID,
  #Fiscal_Year,
  $FromDate,
  &DEPT_FTE_EFFDT.EFF_STATUS )
end-sql
End-Procedure


!***********************************************************************
! DEPT-FTE-CAP                                                         *
!                                                                      *
!***********************************************************************
Begin-Procedure Dept-Fte-Cap
Begin-SELECT
DEPT_FTE_CAP.SETID
DEPT_FTE_CAP.DEPTID
DEPT_FTE_CAP.CLASS_INDC
DEPT_FTE_CAP.FTE_CAP

  do Insert-Into-Dept-Fte-Cap

FROM PS_DEPT_FTE_CAP DEPT_FTE_CAP
WHERE DEPT_FTE_CAP.SETID = $Gbl_SetID
  AND DEPT_FTE_CAP.DEPTID = $Gbl_DeptID
  AND DEPT_FTE_CAP.FISCAL_YEAR = #PriorFY
  AND DEPT_FTE_CAP.EFFDT =
        (SELECT MAX(DEPT_FTE_EFFDT1.EFFDT)
           FROM PS_DEPT_FTE_EFFDT DEPT_FTE_EFFDT1
          WHERE DEPT_FTE_EFFDT1.SETID       = DEPT_FTE_CAP.SETID
            AND DEPT_FTE_EFFDT1.DEPTID      = DEPT_FTE_CAP.DEPTID
            AND DEPT_FTE_EFFDT1.FISCAL_YEAR = DEPT_FTE_CAP.FISCAL_YEAR )
End-SELECT
End-Procedure


!***********************************************************************
! INSERT-INTO-DEPT-FTE-CAP                                             *
!                                                                      *
!***********************************************************************
Begin-Procedure Insert-Into-Dept-Fte-Cap

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, INSERT, PS_DEPT_FTE_CAP'
  let $err-statement2 = 'Key Fields: SETID=<' || $Gbl_SetID ||
                                 '>, DEPTID=<' || $Gbl_DeptID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear ||
                                 '>, EFFDT=<' || $FromDate || '>'

begin-SQL on-error=Error-Display
INSERT INTO PS_DEPT_FTE_CAP (
  SETID,
  DEPTID,
  FISCAL_YEAR,
  EFFDT,
  CLASS_INDC,
  FTE_CAP)
VALUES (
  $Gbl_SetID,
  $Gbl_DeptID,
  #Fiscal_Year,
  $FromDate,
  &DEPT_FTE_CAP.CLASS_INDC,
  &DEPT_FTE_CAP.FTE_CAP )
end-sql
End-Procedure


!***********************************************************************
! DEPT-BUDGET                                                          *
!                                                                      *
!***********************************************************************
Begin-Procedure Dept-Budget

  let $first_select = 'Y'
Begin-SELECT
DEPT_BUD.EFFDT
DEPT_BUD.EFF_STATUS
DEPT_BUD.BUDGET_LEVEL_INDC
DEPT_BUD.CURRENCY_CD
DEPT_BUD.OVERALL_BDGT_CAP
DEPT_BUD.ERN_BDGT_CAP
DEPT_BUD.DED_BDGT_CAP
DEPT_BUD.TAX_BDGT_CAP

  let $Effdt_Var             = &DEPT_BUD.EFFDT

  if $first_select = 'Y' 
    do Format-DateTime($Effdt_Var, $Effdt_Var_Cmp, {DEFCMP}, '', '')
    if $Effdt_Var_Cmp > $FromDate_Cmp
      do Dept-Budget-Validate
    end-if  
    let $first_select = 'N'
  end-if

  let $Gbl_Bud_Level_Indc    = &DEPT_BUD.BUDGET_LEVEL_INDC
  let $Gbl_Currency          = &DEPT_BUD.CURRENCY_CD
  let #Gbl_Overall_Bdgt_Cap  = &DEPT_BUD.OVERALL_BDGT_CAP
  let #Gbl_Ern_Bdgt_Cap      = &DEPT_BUD.ERN_BDGT_CAP
  let #Gbl_Ded_Bdgt_Cap      = &DEPT_BUD.DED_BDGT_CAP
  let #Gbl_Tax_Bdgt_Cap      = &DEPT_BUD.TAX_BDGT_CAP
  let $Status_Var            = &DEPT_BUD.EFF_STATUS
  let $Effdt_Var             = &DEPT_BUD.EFFDT

  do Insert-Into-Dept-Budget
  do Process-Ctx-Ded-Ern-Tax

FROM PS_DEPT_BUDGET DEPT_BUD
WHERE DEPT_BUD.SETID            = $Gbl_SetID
  AND DEPT_BUD.DEPTID           = $Gbl_DeptID
  AND DEPT_BUD.POSITION_POOL_ID = $Gbl_Position_Pool_ID
  AND DEPT_BUD.SETID_JOBCODE    = $Gbl_Setid_Jobcode
  AND DEPT_BUD.JOBCODE          = $Gbl_Jobcode
  AND DEPT_BUD.POSITION_NBR     = $Gbl_Position_Nbr
  AND DEPT_BUD.EMPLID           = $Gbl_Emplid
  AND DEPT_BUD.EMPL_RCD         = #Gbl_Empl_RcdNo
  AND DEPT_BUD.FISCAL_YEAR      = #PriorFY
  AND DEPT_BUD.EFFDT between $FromDate and $ThruDate
  AND DEPT_BUD.EFFSEQ =
           (SELECT MAX(BUDSEQ.EFFSEQ)
           FROM PS_DEPT_BUDGET BUDSEQ
           WHERE BUDSEQ.SETID = DEPT_BUD.SETID
           AND BUDSEQ.DEPTID  = DEPT_BUD.DEPTID
           AND BUDSEQ.POSITION_POOL_ID = DEPT_BUD.POSITION_POOL_ID
           AND BUDSEQ.SETID_JOBCODE = DEPT_BUD.SETID_JOBCODE
           AND BUDSEQ.JOBCODE = DEPT_BUD.JOBCODE
           AND BUDSEQ.POSITION_NBR = DEPT_BUD.POSITION_NBR
           AND BUDSEQ.EMPLID = DEPT_BUD.EMPLID
           AND BUDSEQ.EMPL_RCD = DEPT_BUD.EMPL_RCD
           AND BUDSEQ.FISCAL_YEAR = DEPT_BUD.FISCAL_YEAR
           AND BUDSEQ.EFFDT = DEPT_BUD.EFFDT)
End-SELECT

End-Procedure


!***********************************************************************
! DEPT-BUDGET-VALIDATION                                                          *
!                                                                      *
!***********************************************************************
Begin-Procedure Dept-Budget-Validate

Begin-SELECT
BUD_VAL.EFF_STATUS
BUD_VAL.BUDGET_LEVEL_INDC
BUD_VAL.CURRENCY_CD
BUD_VAL.OVERALL_BDGT_CAP
BUD_VAL.ERN_BDGT_CAP
BUD_VAL.DED_BDGT_CAP
BUD_VAL.TAX_BDGT_CAP

   let $Gbl_Bud_Level_Indc    = &BUD_VAL.BUDGET_LEVEL_INDC
   let $Gbl_Currency          = &BUD_VAL.CURRENCY_CD
   let #Gbl_Overall_Bdgt_Cap  = &BUD_VAL.OVERALL_BDGT_CAP
   let #Gbl_Ern_Bdgt_Cap      = &BUD_VAL.ERN_BDGT_CAP
   let #Gbl_Ded_Bdgt_Cap      = &BUD_VAL.DED_BDGT_CAP
   let #Gbl_Tax_Bdgt_Cap      = &BUD_VAL.TAX_BDGT_CAP
   let $Status_Var            = &BUD_VAL.EFF_STATUS
   let $Effdt_Var             = $FromDate
  
   do Insert-Into-Dept-Budget
   do Process-Ctx-Ded-Ern-Tax

FROM PS_DEPT_BUDGET BUD_VAL
WHERE BUD_VAL.SETID            = $Gbl_SetID
  AND BUD_VAL.DEPTID           = $Gbl_DeptID
  AND BUD_VAL.POSITION_POOL_ID = $Gbl_Position_Pool_ID
  AND BUD_VAL.SETID_JOBCODE    = $Gbl_Setid_Jobcode
  AND BUD_VAL.JOBCODE          = $Gbl_Jobcode
  AND BUD_VAL.POSITION_NBR     = $Gbl_Position_Nbr
  AND BUD_VAL.EMPLID           = $Gbl_Emplid
  AND BUD_VAL.EMPL_RCD         = #Gbl_Empl_RcdNo
  AND BUD_VAL.FISCAL_YEAR      = #PriorFY
  AND BUD_VAL.EFFDT   =
         (SELECT MAX (EFFDT)
            FROM PS_DEPT_BUDGET 
           WHERE SETID            = BUD_VAL.SETID
             AND DEPTID           = BUD_VAL.DEPTID
             AND POSITION_POOL_ID = BUD_VAL.POSITION_POOL_ID
             AND SETID_JOBCODE    = BUD_VAL.SETID_JOBCODE
             AND JOBCODE          = BUD_VAL.JOBCODE
             AND POSITION_NBR     = BUD_VAL.POSITION_NBR
             AND EMPLID           = BUD_VAL.EMPLID
             AND EMPL_RCD         = BUD_VAL.EMPL_RCD
             AND FISCAL_YEAR      = BUD_VAL.FISCAL_YEAR
             AND EFFDT < $FromDate)
  AND BUD_VAL.EFFSEQ =
           (SELECT MAX(EFFSEQ)
           FROM PS_DEPT_BUDGET 
           WHERE SETID = BUD_VAL.SETID
           AND DEPTID  = BUD_VAL.DEPTID
           AND POSITION_POOL_ID = BUD_VAL.POSITION_POOL_ID
           AND SETID_JOBCODE = BUD_VAL.SETID_JOBCODE
           AND JOBCODE = BUD_VAL.JOBCODE
           AND POSITION_NBR = BUD_VAL.POSITION_NBR
           AND EMPLID = BUD_VAL.EMPLID
           AND EMPL_RCD = BUD_VAL.EMPL_RCD
           AND FISCAL_YEAR = BUD_VAL.FISCAL_YEAR
           AND EFFDT = BUD_VAL.EFFDT)
End-SELECT

End-Procedure

!***********************************************************************
! PROCESS-BUDGET-ACTUALS-DEDUCTIONS-EARNINGS-TAXES                     *
!                                                                      *
!***********************************************************************
Begin-Procedure Process-Ctx-Ded-Ern-Tax
   
   do Dept-Budget-Ctx
   do Dept-Budget-Ded
   do Dept-Budget-Ern
   do Dept-Budget-Tax

End-Procedure


!***********************************************************************
! INSERT-INTO-DEPT-BUDGET                                              *
!                                                                      *
!***********************************************************************
Begin-Procedure Insert-Into-Dept-Budget

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, INSERT, PS_DEPT_BUDGET'
  let $err-statement2 = 'Key Fields: SETID=<' || $Gbl_SetID ||
                                 '>, DEPTID=<' || $Gbl_DeptID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear ||
                                 '>, EFFDT=<' || $Effdt_Var || '>'

begin-SQL on-error=Error-Display
INSERT INTO PS_DEPT_BUDGET (
  SETID,
  DEPTID,
  FISCAL_YEAR,
  EFFDT,
  EFFSEQ,                                                  !hp999 retro
  EFF_STATUS,
  POSITION_POOL_ID,
  SETID_JOBCODE,
  JOBCODE,
  POSITION_NBR,
  EMPLID,
  EMPL_RCD,
  BUDGET_LEVEL_INDC,
  CURRENCY_CD,
  OVERALL_BDGT_CAP,
  ERN_BDGT_CAP,
  DED_BDGT_CAP,
  TAX_BDGT_CAP,
  ACTION_DT )                                              !hp999 retro
VALUES (
  $Gbl_SetID,
  $Gbl_DeptID,
  #Fiscal_Year,
  $Effdt_Var,
  0,                                                       !hp999 retro
  $Status_Var,
  $Gbl_Position_Pool_ID,
  $Gbl_Setid_Jobcode,
  $Gbl_Jobcode,
  $Gbl_Position_Nbr,
  $Gbl_Emplid,
  #Gbl_Empl_RcdNo,
  $Gbl_Bud_Level_Indc,
  $Gbl_Currency,
  #Gbl_Overall_Bdgt_Cap,
  #Gbl_Ern_Bdgt_Cap,
  #Gbl_Ded_Bdgt_Cap,
  #Gbl_Tax_Bdgt_Cap, 
  {DatetimeIn-Prefix}$asoftoday{DatetimeIn-Suffix})        !hp999 retro )
end-sql
End-Procedure


!***********************************************************************
! DEPT-BUDGET-CTX                                                      *
!                                                                      *
!***********************************************************************
Begin-Procedure Dept-Budget-Ctx
Begin-SELECT
DEPT_BUD_CTX.SETID
DEPT_BUD_CTX.DEPTID
DEPT_BUD_CTX.POSITION_POOL_ID
DEPT_BUD_CTX.SETID_JOBCODE
DEPT_BUD_CTX.JOBCODE
DEPT_BUD_CTX.POSITION_NBR
DEPT_BUD_CTX.EMPLID
DEPT_BUD_CTX.EMPL_RCD
DEPT_BUD_CTX.PROVINCE
DEPT_BUD_CTX.TAX_CLASS_CAN
DEPT_BUD_CTX.BUDGET_SEQ
DEPT_BUD_CTX.ACCT_CD
DEPT_BUD_CTX.GL_PAY_TYPE
DEPT_BUD_CTX.BUDGET_AMT
DEPT_BUD_CTX.DIST_PCT
DEPT_BUD_CTX.FUNDING_END_DT
DEPT_BUD_CTX.HP_EXCESS
DEPT_BUD_CTX.OVERRIDE_IND

  do Insert-Into-Dept-Budget-Ctx

FROM PS_DEPT_BUDGET_CTX DEPT_BUD_CTX
WHERE DEPT_BUD_CTX.SETID            = $Gbl_SetID
  AND DEPT_BUD_CTX.DEPTID           = $Gbl_DeptID
  AND DEPT_BUD_CTX.POSITION_POOL_ID = $Gbl_Position_Pool_ID
  AND DEPT_BUD_CTX.SETID_JOBCODE    = $Gbl_Setid_Jobcode
  AND DEPT_BUD_CTX.JOBCODE          = $Gbl_Jobcode
  AND DEPT_BUD_CTX.POSITION_NBR     = $Gbl_Position_Nbr
  AND DEPT_BUD_CTX.EMPLID           = $Gbl_Emplid
  AND DEPT_BUD_CTX.EMPL_RCD         = #Gbl_Empl_RcdNo
  AND DEPT_BUD_CTX.FISCAL_YEAR      = #PriorFY
  AND DEPT_BUD_CTX.EFFDT            = $Gbl_Effdt
  AND DEPT_BUD_CTX.EFFSEQ =
      (SELECT MAX(CTXSEQ.EFFSEQ)
       FROM PS_DEPT_BUDGET_CTX CTXSEQ
        WHERE CTXSEQ.SETID = DEPT_BUD_CTX.SETID
        AND CTXSEQ.DEPTID =  DEPT_BUD_CTX.DEPTID
        AND CTXSEQ.POSITION_POOL_ID = DEPT_BUD_CTX.POSITION_POOL_ID
        AND CTXSEQ.SETID_JOBCODE = DEPT_BUD_CTX.SETID_JOBCODE
        AND CTXSEQ.JOBCODE  = DEPT_BUD_CTX.JOBCODE
        AND CTXSEQ.POSITION_NBR = DEPT_BUD_CTX.POSITION_NBR
        AND CTXSEQ.EMPLID = DEPT_BUD_CTX.EMPLID
        AND CTXSEQ.EMPL_RCD = DEPT_BUD_CTX.EMPL_RCD
        AND CTXSEQ.FISCAL_YEAR = DEPT_BUD_CTX.FISCAL_YEAR
        AND CTXSEQ.EFFDT = DEPT_BUD_CTX.EFFDT)
End-SELECT

End-Procedure
!***********************************************************************
! INSERT-INTO-DEPT-BUDGET-CTX                                          *
!                                                                      *
!***********************************************************************
Begin-Procedure Insert-Into-Dept-Budget-Ctx

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, INSERT, PS_DEPT_BUDGET_CTX'
  let $err-statement2 = 'Key Fields: SETID=<' || $Gbl_SetID ||
                                 '>, DEPTID=<' || $Gbl_DeptID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear ||
                                 '>, EFFDT=<' || $Effdt_Var || '>'

begin-SQL on-error=Error-Display
INSERT INTO PS_DEPT_BUDGET_CTX (
  SETID,
  DEPTID,
  FISCAL_YEAR,
  EFFDT,
  EFFSEQ,                                                 !hp999 retro
  POSITION_POOL_ID,
  SETID_JOBCODE,
  JOBCODE,
  POSITION_NBR,
  EMPLID,
  EMPL_RCD,
  PROVINCE,
  TAX_CLASS_CAN,
  BUDGET_SEQ,
  ACCT_CD,
  GL_PAY_TYPE,
  BUDGET_AMT,
  DIST_PCT,
  FUNDING_END_DT,
  HP_USED_DISTRIBUTN,                                      !hp999 retro
  HP_EXCESS,                                               !hp999 retro
  OVERRIDE_IND)
VALUES (
  $Gbl_SetID,
  $Gbl_DeptID,
  #Fiscal_Year,
  $Effdt_Var,
  0,                                                       !hp999 retro
  $Gbl_Position_Pool_ID,
  $Gbl_Setid_Jobcode,
  $Gbl_Jobcode,
  $Gbl_Position_Nbr,
  $Gbl_Emplid,
  #Gbl_Empl_RcdNo,
  &DEPT_BUD_CTX.PROVINCE,
  &DEPT_BUD_CTX.TAX_CLASS_CAN,
  &DEPT_BUD_CTX.BUDGET_SEQ,
  &DEPT_BUD_CTX.ACCT_CD,
  &DEPT_BUD_CTX.GL_PAY_TYPE,
  &DEPT_BUD_CTX.BUDGET_AMT,
  &DEPT_BUD_CTX.DIST_PCT,
  &DEPT_BUD_CTX.FUNDING_END_DT,
  'N',                                                     !hp999 retro
  &DEPT_BUD_CTX.HP_EXCESS,                                 !hp999 retro
  &DEPT_BUD_CTX.OVERRIDE_IND)
end-sql
End-Procedure


!***********************************************************************
! DEPT-BUDGET-DED                                                      *
!                                                                      *
!***********************************************************************

Begin-Procedure Dept-Budget-Ded
Begin-SELECT
DEPT_BUD_DED.SETID
DEPT_BUD_DED.DEPTID
DEPT_BUD_DED.POSITION_POOL_ID
DEPT_BUD_DED.SETID_JOBCODE
DEPT_BUD_DED.JOBCODE
DEPT_BUD_DED.POSITION_NBR
DEPT_BUD_DED.EMPLID
DEPT_BUD_DED.EMPL_RCD
DEPT_BUD_DED.DEPT_BDGT_DED_KEY
DEPT_BUD_DED.PLAN_TYPE
DEPT_BUD_DED.BENEFIT_PLAN
DEPT_BUD_DED.DEDCD
DEPT_BUD_DED.DED_CLASS
DEPT_BUD_DED.BUDGET_SEQ
DEPT_BUD_DED.ACCT_CD
DEPT_BUD_DED.GL_PAY_TYPE
DEPT_BUD_DED.BUDGET_AMT
DEPT_BUD_DED.DIST_PCT
DEPT_BUD_DED.FUNDING_END_DT
DEPT_BUD_DED.HP_EXCESS
DEPT_BUD_DED.OVERRIDE_IND

  do Insert-Into-Dept-Budget-Ded

FROM PS_DEPT_BUDGET_DED DEPT_BUD_DED
WHERE DEPT_BUD_DED.SETID            = $Gbl_SetID
  AND DEPT_BUD_DED.DEPTID           = $Gbl_DeptID
  AND DEPT_BUD_DED.POSITION_POOL_ID = $Gbl_Position_Pool_ID
  AND DEPT_BUD_DED.SETID_JOBCODE    = $Gbl_Setid_Jobcode
  AND DEPT_BUD_DED.JOBCODE          = $Gbl_Jobcode
  AND DEPT_BUD_DED.POSITION_NBR     = $Gbl_Position_Nbr
  AND DEPT_BUD_DED.EMPLID           = $Gbl_Emplid
  AND DEPT_BUD_DED.EMPL_RCD         = #Gbl_Empl_RcdNo
  AND DEPT_BUD_DED.FISCAL_YEAR      = #PriorFY
  AND DEPT_BUD_DED.EFFDT            = $Gbl_Effdt
  AND DEPT_BUD_DED.EFFSEQ =
       (SELECT MAX(DEDSEQ.EFFSEQ)
        FROM PS_DEPT_BUDGET_DED DEDSEQ
        WHERE DEDSEQ.SETID = DEPT_BUD_DED.SETID
        AND DEDSEQ.DEPTID = DEPT_BUD_DED.DEPTID
        AND DEDSEQ.POSITION_POOL_ID = DEPT_BUD_DED.POSITION_POOL_ID
        AND DEDSEQ.SETID_JOBCODE = DEPT_BUD_DED.SETID_JOBCODE
        AND DEDSEQ.JOBCODE = DEPT_BUD_DED.JOBCODE
        AND DEDSEQ.POSITION_NBR = DEPT_BUD_DED.POSITION_NBR
        AND DEDSEQ.EMPLID = DEPT_BUD_DED.EMPLID
        AND DEDSEQ.EMPL_RCD = DEPT_BUD_DED.EMPL_RCD
        AND DEDSEQ.FISCAL_YEAR = DEPT_BUD_DED.FISCAL_YEAR
        AND DEDSEQ.EFFDT = DEPT_BUD_DED.EFFDT)


End-SELECT

End-Procedure
!***********************************************************************
! INSERT-INTO-DEPT-BUDGET-DED                                          *
!                                                                      *
!***********************************************************************
Begin-Procedure Insert-Into-Dept-Budget-Ded

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, INSERT, PS_DEPT_BUDGET_DED'
  let $err-statement2 = 'Key Fields: SETID=<' || $Gbl_SetID ||
                                 '>, DEPTID=<' || $Gbl_DeptID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear ||
                                 '>, EFFDT=<' || $Effdt_Var || '>'

begin-SQL on-error=Error-Display
INSERT INTO PS_DEPT_BUDGET_DED (
  SETID,
  DEPTID,
  FISCAL_YEAR,
  EFFDT,
  EFFSEQ,                                                      !hp999 retro
  POSITION_POOL_ID,
  SETID_JOBCODE,
  JOBCODE,
  POSITION_NBR,
  EMPLID,
  EMPL_RCD,
  DEPT_BDGT_DED_KEY,                                           !hp999 retro
  PLAN_TYPE,
  BENEFIT_PLAN,
  DEDCD,
  DED_CLASS,
  BUDGET_SEQ,
  ACCT_CD,
  GL_PAY_TYPE,
  BUDGET_AMT,
  DIST_PCT,
  FUNDING_END_DT,
  HP_USED_DISTRIBUTN,                                          !hp999 retro
  HP_EXCESS,                                                   !hp999 retro
  OVERRIDE_IND)
VALUES (
  $Gbl_SetID,
  $Gbl_DeptID,
  #Fiscal_Year,
  $Effdt_Var,
  0,                                                           !hp999 retro
  $Gbl_Position_Pool_ID,
  $Gbl_Setid_Jobcode,
  $Gbl_Jobcode,
  $Gbl_Position_Nbr,
  $Gbl_Emplid,
  #Gbl_Empl_RcdNo,
  &DEPT_BUD_DED.DEPT_BDGT_DED_KEY,                             !hp999 retro
  &DEPT_BUD_DED.PLAN_TYPE,
  &DEPT_BUD_DED.BENEFIT_PLAN,
  &DEPT_BUD_DED.DEDCD,
  &DEPT_BUD_DED.DED_CLASS,
  &DEPT_BUD_DED.BUDGET_SEQ,
  &DEPT_BUD_DED.ACCT_CD,
  &DEPT_BUD_DED.GL_PAY_TYPE,
  &DEPT_BUD_DED.BUDGET_AMT,
  &DEPT_BUD_DED.DIST_PCT,
  &DEPT_BUD_DED.FUNDING_END_DT,
  'N',                                                         !hp999 retro
  &DEPT_BUD_DED.HP_EXCESS,                                     !hp999 retro
  &DEPT_BUD_DED.OVERRIDE_IND)
end-sql
End-Procedure


!***********************************************************************
! DEPT-BUDGET-ERN                                                      *
!                                                                      *
!***********************************************************************
Begin-Procedure Dept-Budget-Ern
Begin-SELECT
DEPT_BUD_ERN.SETID
DEPT_BUD_ERN.DEPTID
DEPT_BUD_ERN.POSITION_POOL_ID
DEPT_BUD_ERN.SETID_JOBCODE
DEPT_BUD_ERN.JOBCODE
DEPT_BUD_ERN.POSITION_NBR
DEPT_BUD_ERN.EMPLID
DEPT_BUD_ERN.EMPL_RCD
DEPT_BUD_ERN.ERNCD
DEPT_BUD_ERN.BUDGET_SEQ
DEPT_BUD_ERN.ACCT_CD
DEPT_BUD_ERN.GL_PAY_TYPE
DEPT_BUD_ERN.BUDGET_AMT
DEPT_BUD_ERN.DIST_PCT
DEPT_BUD_ERN.PERCENT_EFFORT
DEPT_BUD_ERN.FUNDING_END_DT
DEPT_BUD_ERN.HP_EXCESS
DEPT_BUD_ERN.HP_FRINGE_GROUP
DEPT_BUD_ERN.HP_REDIRECT_ACCT

  do Insert-Into-Dept-Budget-Ern

FROM PS_DEPT_BUDGET_ERN DEPT_BUD_ERN
WHERE DEPT_BUD_ERN.SETID            = $Gbl_SetID
  AND DEPT_BUD_ERN.DEPTID           = $Gbl_DeptID
  AND DEPT_BUD_ERN.POSITION_POOL_ID = $Gbl_Position_Pool_ID
  AND DEPT_BUD_ERN.SETID_JOBCODE    = $Gbl_Setid_Jobcode
  AND DEPT_BUD_ERN.JOBCODE          = $Gbl_Jobcode
  AND DEPT_BUD_ERN.POSITION_NBR     = $Gbl_Position_Nbr
  AND DEPT_BUD_ERN.EMPLID           = $Gbl_Emplid
  AND DEPT_BUD_ERN.EMPL_RCD         = #Gbl_Empl_RcdNo
  AND DEPT_BUD_ERN.FISCAL_YEAR      = #PriorFY
  AND DEPT_BUD_ERN.EFFDT            = $Gbl_Effdt
  AND DEPT_BUD_ERN.EFFSEQ =
       (SELECT MAX(ERNSEQ.EFFSEQ)
        FROM PS_DEPT_BUDGET_ERN ERNSEQ
        WHERE ERNSEQ.SETID = DEPT_BUD_ERN.SETID
        AND ERNSEQ.DEPTID = DEPT_BUD_ERN.DEPTID
        AND ERNSEQ.POSITION_POOL_ID = DEPT_BUD_ERN.POSITION_POOL_ID
        AND ERNSEQ.SETID_JOBCODE = DEPT_BUD_ERN.SETID_JOBCODE
        AND ERNSEQ.JOBCODE = DEPT_BUD_ERN.JOBCODE
        AND ERNSEQ.POSITION_NBR = DEPT_BUD_ERN.POSITION_NBR
        AND ERNSEQ.EMPLID = DEPT_BUD_ERN.EMPLID
        AND ERNSEQ.EMPL_RCD = DEPT_BUD_ERN.EMPL_RCD
        AND ERNSEQ.FISCAL_YEAR = DEPT_BUD_ERN.FISCAL_YEAR
        AND ERNSEQ.EFFDT = DEPT_BUD_ERN.EFFDT)


End-SELECT
End-Procedure
!***********************************************************************
! INSERT-INTO-BUDGET-ERN                                               *
!                                                                      *
!***********************************************************************
Begin-Procedure Insert-Into-Dept-Budget-Ern

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, INSERT, PS_DEPT_BUDGET_ERN'
  let $err-statement2 = 'Key Fields: SETID=<' || $Gbl_SetID ||
                                 '>, DEPTID=<' || $Gbl_DeptID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear ||
                                 '>, EFFDT=<' || $Effdt_Var || '>'

begin-SQL on-error=Error-Display
INSERT INTO PS_DEPT_BUDGET_ERN (
  SETID,
  DEPTID,
  FISCAL_YEAR,
  EFFDT,
  EFFSEQ,                                                    !hp999 retro
  POSITION_POOL_ID,
  SETID_JOBCODE,
  JOBCODE,
  POSITION_NBR,
  EMPLID,
  EMPL_RCD,
  ERNCD,
  BUDGET_SEQ,
  ACCT_CD,
  GL_PAY_TYPE,
  BUDGET_AMT,
  DIST_PCT,
  PERCENT_EFFORT,
  FUNDING_END_DT,
  HP_USED_DISTRIBUTN,                                        !hp999 retro
  HP_EXCESS,                                                 !hp999 retro
  HP_FRINGE_GROUP,
  HP_REDIRECT_ACCT)
VALUES (
  $Gbl_SetID,
  $Gbl_DeptID,
  #Fiscal_Year,
  $Effdt_Var,
  0,                                                         !hp999 retro
  $Gbl_Position_Pool_ID,
  $Gbl_Setid_Jobcode,
  $Gbl_Jobcode,
  $Gbl_Position_Nbr,
  $Gbl_Emplid,
  #Gbl_Empl_RcdNo,
  &DEPT_BUD_ERN.ERNCD,
  &DEPT_BUD_ERN.BUDGET_SEQ,
  &DEPT_BUD_ERN.ACCT_CD,
  &DEPT_BUD_ERN.GL_PAY_TYPE,
  &DEPT_BUD_ERN.BUDGET_AMT,
  &DEPT_BUD_ERN.DIST_PCT,
  &DEPT_BUD_ERN.PERCENT_EFFORT,
  &DEPT_BUD_ERN.FUNDING_END_DT,
  'N',                                                       !hp999 retro
  &DEPT_BUD_ERN.HP_EXCESS,                                   !hp999 retro
  &DEPT_BUD_ERN.HP_FRINGE_GROUP,
  &DEPT_BUD_ERN.HP_REDIRECT_ACCT)
end-sql
End-Procedure


!***********************************************************************
! DEPT-BUDGET-TAX                                                      *
!                                                                      *
!***********************************************************************
Begin-Procedure Dept-Budget-Tax

Begin-SELECT
DEPT_BUD_TAX.SETID
DEPT_BUD_TAX.DEPTID
DEPT_BUD_TAX.POSITION_POOL_ID
DEPT_BUD_TAX.SETID_JOBCODE
DEPT_BUD_TAX.JOBCODE
DEPT_BUD_TAX.POSITION_NBR
DEPT_BUD_TAX.EMPLID
DEPT_BUD_TAX.EMPL_RCD
DEPT_BUD_TAX.STATE
DEPT_BUD_TAX.LOCALITY
DEPT_BUD_TAX.TAX_CLASS
DEPT_BUD_TAX.BUDGET_SEQ
DEPT_BUD_TAX.ACCT_CD
DEPT_BUD_TAX.GL_PAY_TYPE
DEPT_BUD_TAX.BUDGET_AMT
DEPT_BUD_TAX.DIST_PCT
DEPT_BUD_TAX.FUNDING_END_DT
DEPT_BUD_TAX.HP_EXCESS
DEPT_BUD_TAX.OVERRIDE_IND

  do Insert-Into-Dept-Budget-Tax

FROM PS_DEPT_BUDGET_TAX DEPT_BUD_TAX
WHERE DEPT_BUD_TAX.SETID            = $Gbl_SetID
  AND DEPT_BUD_TAX.DEPTID           = $Gbl_DeptID
  AND DEPT_BUD_TAX.POSITION_POOL_ID = $Gbl_Position_Pool_ID
  AND DEPT_BUD_TAX.SETID_JOBCODE    = $Gbl_Setid_Jobcode
  AND DEPT_BUD_TAX.JOBCODE          = $Gbl_Jobcode
  AND DEPT_BUD_TAX.POSITION_NBR     = $Gbl_Position_Nbr
  AND DEPT_BUD_TAX.EMPLID           = $Gbl_Emplid
  AND DEPT_BUD_TAX.EMPL_RCD         = #Gbl_Empl_RcdNo
  AND DEPT_BUD_TAX.FISCAL_YEAR      = #PriorFY
  AND DEPT_BUD_TAX.EFFDT            = $Gbl_Effdt
  AND DEPT_BUD_TAX.EFFSEQ =
       (SELECT MAX(TAXSEQ.EFFSEQ)
        FROM PS_DEPT_BUDGET_TAX TAXSEQ
        WHERE TAXSEQ.SETID = DEPT_BUD_TAX.SETID
        AND TAXSEQ.DEPTID = DEPT_BUD_TAX.DEPTID
        AND TAXSEQ.POSITION_POOL_ID = DEPT_BUD_TAX.POSITION_POOL_ID
        AND TAXSEQ.SETID_JOBCODE = DEPT_BUD_TAX.SETID_JOBCODE
        AND TAXSEQ.JOBCODE = DEPT_BUD_TAX.JOBCODE
        AND TAXSEQ.POSITION_NBR = DEPT_BUD_TAX.POSITION_NBR
        AND TAXSEQ.EMPLID = DEPT_BUD_TAX.EMPLID
        AND TAXSEQ.EMPL_RCD = DEPT_BUD_TAX.EMPL_RCD
        AND TAXSEQ.FISCAL_YEAR = DEPT_BUD_TAX.FISCAL_YEAR
        AND TAXSEQ.EFFDT = DEPT_BUD_TAX.EFFDT)

End-SELECT

End-Procedure
!***********************************************************************
! INSERT-INTO-DEPT-BUDGET-TAX                                          *
!                                                                      *
!***********************************************************************
Begin-Procedure Insert-Into-Dept-Budget-Tax

  let $Dis_FiscalYear =  edit(#Fiscal_Year,'9999')
  let $err-statement1 = 'BUD006.SQR, INSERT, PS_DEPT_BUDGET_TAX'
  let $err-statement2 = 'Key Fields: SETID=<' || $Gbl_SetID ||
                                 '>, DEPTID=<' || $Gbl_DeptID ||
                                 '>, FISCAL_YEAR=<' || $Dis_FiscalYear ||
                                 '>, EFFDT=<' || $Effdt_Var || '>'

begin-SQL on-error=Error-Display
INSERT INTO PS_DEPT_BUDGET_TAX (
  SETID,
  DEPTID,
  FISCAL_YEAR,
  EFFDT,
  EFFSEQ,
  POSITION_POOL_ID,                                         !hp999 retro
  SETID_JOBCODE,
  JOBCODE,
  POSITION_NBR,
  EMPLID,
  EMPL_RCD,
  STATE,
  LOCALITY,
  TAX_CLASS,
  BUDGET_SEQ,
  ACCT_CD,
  GL_PAY_TYPE,
  BUDGET_AMT,
  DIST_PCT,
  FUNDING_END_DT,
  HP_USED_DISTRIBUTN,                                       !hp999 retro
  HP_EXCESS,                                                !hp999 retro
  OVERRIDE_IND)
VALUES (
  $Gbl_SetID,
  $Gbl_DeptID,
  #Fiscal_Year,
  $Effdt_Var,
  0,                                                        !hp999 retro
  $Gbl_Position_Pool_ID,
  $Gbl_Setid_Jobcode,
  $Gbl_Jobcode,
  $Gbl_Position_Nbr,
  $Gbl_Emplid,
  #Gbl_Empl_RcdNo,
  &DEPT_BUD_TAX.STATE,
  &DEPT_BUD_TAX.LOCALITY,
  &DEPT_BUD_TAX.TAX_CLASS,
  &DEPT_BUD_TAX.BUDGET_SEQ,
  &DEPT_BUD_TAX.ACCT_CD,
  &DEPT_BUD_TAX.GL_PAY_TYPE,
  &DEPT_BUD_TAX.BUDGET_AMT,
  &DEPT_BUD_TAX.DIST_PCT,
  &DEPT_BUD_TAX.FUNDING_END_DT,
  'N',                                                      !hp999 retro
  &DEPT_BUD_TAX.HP_EXCESS,                                  !hp999 retro
  &DEPT_BUD_TAX.OVERRIDE_IND)
end-sql
End-Procedure


!***********************************************************************
! WRAPUP                                                               *
! This paragraph ends the report process and updates the status of the *
! job in the process scheduler.                                        *
!***********************************************************************
Begin-Procedure Wrapup

  do Delete-Run-Control
  do Reset
  do Successful-EOJ

End-Procedure

!****************************************************************************
! DELETE-RUN-CONTROL                                                        *
! Deletes run control information from run control table.                   *
!****************************************************************************
Begin-Procedure Delete-Run-Control

let $SQL-STATEMENT = 'BUD006.SQR, DELETE, PS_RUN_CNTL_BLOAD'
begin-sql on-error=SQL-Error

DELETE FROM PS_RUN_CNTL_BLOAD
WHERE OPRID       = $Prcs_OprID
  AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID

end-sql

End-Procedure

!***********************************************************************
! SQCs                                                                 *
!***********************************************************************
#Include 'askftd.sqc'
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datemath.sqc'  !Routines for adding and subtracting from dates
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'egrnctl1.sqc'  !Get run control parameters.  This will change
#Include 'eggetval.sqc'  !Formats run control parameters
#Include 'eoj.sqc'       !Updates process scheduler status
#Include 'getactrs.sqc'  !Routine to get Action Reason codes
#Include 'getdptnm.sqc'  !Routine for fetching Department names.
#Include 'number.sqc'    !Routines to format numbers
#Include 'prcsapi.sqc'   !Update Process API
#Include 'prcsdef.sqc'   !Update Process Request variable declare
#Include 'reset.sqc'     !Reset printer procedure
#include 'stderror.sqc'  !Routines to display error output
#Include 'tranctrl.sqc'  !For commit routine
