!***********************************************************************
!  PYPUT03:  Rel 9 Upgrade - Garn Payee Audit                          *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      !
!                $Date:  2006/06/05:16:01:04                           !
!             $Release:  HR9                                           !
!            $Revision:  102                                           !
!                                                                      !
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#include 'setup32.sqc'  !printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


begin-procedure Init-Report
  move 'PUPYT03' to $ReportID

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  move 'Garnishment Payee Audit' to $ReportTitle
  display ' '
  display $ReportTitle
  display ' '

end-procedure

begin-HEADING 11

  #Include 'stdhdgtr.sqc'

  If #Section = 1
     do Section1-Heading
  end-if

  If #Section = 2
     do Section2-Heading
  end-if

  do Columns-Heading

end-HEADING

begin-procedure Section1-Heading

    let $PUPYT03_1A =
     'Garnishment payee in following active orders does not exist on Payee Table:'
    let $PUPYT03_1B =
     'Review listed data, access online component and correct where needed.'
    let $PUPYT03_1C =
     'The extract program will not be able to create invoice/voucher for listed orders.'

    print $PUPYT03_1A    (+2,10)
    print $PUPYT03_1B    (+2,15)
    print $PUPYT03_1C    (+1,15)

end-procedure

begin-procedure Section2-Heading

    let $PUPYT03_2A =
     'Garnishment payee in following inactive orders does not exist on Payee Table:'
    let $PUPYT03_2B =
     'The listed data can stay as is, because garnishment will not be calculated in future.'
    let $PUPYT03_2C =
     'However, you can fix those data if you want.'

    print $PUPYT03_2A    (+2,10)
    print $PUPYT03_2B    (+2,15)
    print $PUPYT03_2C    (+1,15)

end-procedure

begin-procedure Columns-Heading

  print 'Employee ID'           (+2,10)
  print 'Company'               (0,28)
  print 'Garnishment ID'        (0,46)
  print 'Status'                (0,64)
  print 'SetID'                 (0,82)
  print 'VendorID'              (0,100)
  print 'Address Sequence'      (0,118)

end-procedure


!***********************************************************************
!  PROC REPORT                                                         *
!         Main Procedure                                               *
!***********************************************************************

BEGIN-PROCEDURE Process-Main

   do Find-Active-Orders
   do Find-Inactive-Orders

END-PROCEDURE


!***********************************************************************
!  Find-Active-Orders                                                  *
!***********************************************************************

BEGIN-PROCEDURE Find-Active-Orders

  move 0 to #Count
  let #Section = 1
  let $Status_Crit = ' AND G.GARN_STATUS IN (''A'', ''R'') '
  do Find-Garn-Spec

  if #Count = 0
    print
   'There are no records matching above criteria - no action required' (+3,10)
  else
    print
   'Total number of active orders whose payee does not exist on Payee Table:' (+3,10)
    print #Count          (0,88,9) edit b,bbb,bb9
  end-if

END-PROCEDURE


!***********************************************************************
!  Find-Inactive-Orders                                                *
!***********************************************************************

BEGIN-PROCEDURE Find-Inactive-Orders

  move 0 to #Count
  New-Page
  let #Section = 2

  let $Status_Crit = ' AND G.GARN_STATUS NOT IN (''A'', ''R'') '
  do Find-Garn-Spec

  if #Count = 0
    print
   'There are no records matching above criteria - no action required' (+3,10)
  else
    print
   'Total number of inactive orders whose payee does not exist on Payee Table:' (+3,10)
    print #Count          (0,88,9) edit b,bbb,bb9

  end-if

END-PROCEDURE

!***********************************************************************
!  Find-Garn-Spec                                                      *
!***********************************************************************
BEGIN-PROCEDURE Find-Garn-Spec
BEGIN-SELECT
G.EMPLID
G.COMPANY
G.GARNID
G.GARN_STATUS
G.SETID
G.VENDOR_ID
G.ADDRESS_SEQ_NUM

  add 1 to #Count

  move &G.EMPLID          to $Emplid
  move &G.COMPANY         to $Company
  move &G.GARNID          to $GarnID

  move 'GARN_STATUS'      to $FieldName
  move &G.Garn_Status     to $FieldValue
  do Read-Translate-Table
  move $XlatShortName     to $GarnStatus

  move &G.SETID           to $SetID
  move &G.VENDOR_ID       to $VendorID
  move &G.ADDRESS_SEQ_NUM to $AddressSeq

  do Print-Garn-Spec

FROM PS_GARN_SPEC G
 WHERE G.SETID <> ' '
   AND G.VENDOR_ID <> ' '
   AND NOT EXISTS (SELECT 'X' FROM PS_VENDOR V
                    WHERE V.SETID     = G.SETID
                      AND V.VENDOR_ID = G.VENDOR_ID)

#ifdef MVS
  \$Status_Crit\
#else
  [$Status_Crit]
#endif

ORDER BY G.EMPLID, G.GARNID

END-SELECT
END-PROCEDURE


!***********************************************************************
!  Print-Garn-Spec                                                     *
!***********************************************************************
BEGIN-PROCEDURE Print-Garn-Spec

  print $EmplID            (+1,10)
  print $Company           (0,28)
  print $GarnID            (0,46)
  print $GarnStatus        (0,64)
  print $Setid             (0,82)
  print $VendorID          (0,100)
  print $AddressSeq        (0,118)

END-PROCEDURE

#include 'reset.sqc'     !Reset printer procedure
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'stdapi.sqc'    !Update Process API
#include 'sqrtrans.sqc'  !Translate SQR strings to given language
#include 'readxlat.sqc'  !Read-Translate-Table procedure
