!***********************************************************************
!  CTX910AA:  CANADA T4, T4A, RL-1, RL-2 Amended Audit Report          *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2013, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/29:10:25:42                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  885420                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment

#Include 'setup02.sqc'  !printer and page-size init
#Include 'ctxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#define TAXFORM_BOX
#define TAXFORM_NOTES
#include 'rellang.sqc'

begin-report
  do Init-Report
  do Report-File-Create
#ifdef PRCSSCHD
  do StdAPI-Term
#endif
end-report

begin-heading 3
  #Include 'stdhdgtr.sqc'
  print $Ctx910aa_Company  (3,1)
  print $PrintCompany      (0,13)
  print $CalYear           (3,,)      center
end-heading

begin-procedure Init-Report

  date-time () hh:mi:ss &t1
  display &t1

  #ifdef PRCSSCHD
   do StdAPI-Init
  #endif

  move 'CTX910AA' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  do Init-DateTime
  do Init-Number
  do Get-Calendar-Year-Id

  do Initialization

  date-time () hh:mi:ss &t2
  display &t2
end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from CTX910AA  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('CTX910AA', 'TITLE_AUDIT_RPT' , $Ctx910aa_Title_audit_rpt , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'TITLE_T4_RPT'    , $Ctx910aa_Title_t4_rpt    , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'TITLE_T4A_RPT'   , $Ctx910aa_Title_t4a_rpt   , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'TITLE_RV1_RPT'   , $Ctx910aa_Title_rv1_rpt   , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'TITLE_RV2_RPT'   , $Ctx910aa_Title_rv2_rpt   , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'COMPANY'         , $Ctx910aa_Company         , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'SIN'             , $Ctx910aa_Sin             , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'EMPLID'          , $Ctx910aa_Emplid          , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'LOCATION'        , $Ctx910aa_Location        , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'DEPARTMENT'      , $Ctx910aa_Department      , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'T4_SUPPL'        , $Ctx910aa_T4_suppl        , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'WAGELS_PLAN'     , $Ctx910aa_Wagels_plan     , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'PROVINCE'        , $Ctx910aa_Province        , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'BUS_NUMBER'      , $Ctx910aa_Bus_number      , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'CPPQPP_EXEMP'    , $Ctx910aa_Cppqpp_exemp    , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'EI_EXEMP'        , $Ctx910aa_Ei_exemp        , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'T4A_SUPPL'       , $Ctx910aa_T4a_suppl       , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'T4A_FOOTNOTE'    , $Ctx910aa_T4a_footnote    , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'RV1_SLIP'        , $Ctx910aa_Rv1_slip        , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'QIN_NUMBER'      , $Ctx910aa_Qin_number      , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'RV2_SLIP'        , $Ctx910aa_Rv2_slip        , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'RV1_OTHER_INFO'  , $Ctx910aa_Rv1_otherinf    , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'RV2_OTHER_INFO'  , $Ctx910aa_Rv2_otherinf    , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'RV1_FOOTNOTE'    , $Ctx910aa_Rv1_footnote    , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'RV2_FOOTNOTE'    , $Ctx910aa_Rv2_footnote    , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'BOX#'            , $Ctx910aa_Box#            , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'DESCR'           , $Ctx910aa_Descr           , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'AMOUNT'          , $Ctx910aa_Amount          , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'PRIORITY'        , $Ctx910aa_Priority        , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'FOOTNOTE'        , $Ctx910aa_Footnote        , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'BX38_CODE'       , $Ctx910aa_Bx38_code       , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'FOOTNOTE_MSG'    , $Ctx910aa_Footnote_msg    , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'LOC_CODE'        , $Ctx910aa_Loc_code        , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'DEPT'            , $Ctx910aa_Dept            , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'QIN'             , $Ctx910aa_Qin             , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'RCA'             , $Ctx910aa_Rca             , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'FN_CODE'         , $Ctx910aa_Fn_code         , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'EMPL_CODE'       , $Ctx910aa_Empl_Code       , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'SLIP_PROCESS'    , $Ctx910aa_Slip_Process    , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'AMENDED'         , $Ctx910aa_Amended         , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'CANCELLED'       , $Ctx910aa_Cancelled       , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'ORIGINAL'        , $Ctx910aa_Original        , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'ISSUE_NEW'       , $Ctx910aa_Issue_New       , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'SEQUENCE_NUM'    , $Ctx910aa_Num             , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'COMMENTS'        , $Ctx910aa_Comments        , #dummy_width)
   do Get_Field_Information ('CTX910AA', 'PPIP_EXPMPT'     , $Ctx910aa_PPIP_Exempt     , #dummy_width)

end-procedure

begin-procedure Initialization

  move ' ' to $InitForm
  move ' ' to $InitBox
  move ' ' to $InitText
  move 0 to #InitAmt
  move 'Y' to $FirstRecord

  do Get-Current-DateTime
  move '1' to $MMLZero
  move '1' to $Year4
  do Format-DateTime($AsOfToday, $910Date, {DEFYMD},'','')

  move $910Date to $AsOfYear xxxx   !extract the current year
  move $AsOfYear  to #AsOfYear
  move #AsOfYear  to #saveAsOfYear
  subtract 1    from #AsOfYear
  do Get-Can-Tax-Processing-Params

  move &TX.Balance_Year to $CalYear 9999
  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')

  if &TX.Balance_Year <> #AsOfYear and $Prcs_Process_Instance = ''
    display ''
    display 'Current Year is not one greater than Tax Reporting Year.'
    display 'Current Year is    ' noline
    display  #saveAsOfYear  9999
    display 'Tax Reporting Year ' noline
    display &TX.Balance_Year
    input $Answer maxlen=1 'Calendar Year is not one greater than Tax Reporting Year - Do you want to continue? (Y/N)'
    uppercase $Answer
    if $Answer <> 'Y'
      stop
    end-if
  end-if
  do  Array-Create
  do Load-Box-Arrays
  do Get-Tax-Tbl-Info

   if $PRCS_Process_Instance <> ''
#ifdef PRCSSCHD
           do Select-Canadian-YrEnd-Parameters
           do Convert-Parameters
#endif
   end-if

  if $RptForm = 'TARV'
     move $Ctx910aa_Title_audit_rpt to $ReportTitle
  end-if
  if $RptForm = 'T'
     move $Ctx910aa_Title_t4_rpt to $ReportTitle
  end-if
  if $RptForm = 'A'
     move $Ctx910aa_Title_t4a_rpt to $ReportTitle
  end-if
  if $RptForm = 'R'
     move $Ctx910aa_Title_rv1_rpt to $ReportTitle
  end-if
  if $RptForm = 'V'
     move $Ctx910aa_Title_rv2_rpt to $ReportTitle
  end-if
  display ''
  display $ReportTitle

end-procedure


begin-procedure Array-Create

  create-array name=PrT4_Area size=50 -
    field=PT4_Box:char                -
    field=PT4_Descr:char              -
    field=PT4_Amt:number

  if &TX.Balance_Year < 2010
     create-array name=T4A_Footnotes size=50   -
       field=AFN_Box:char                      -
       field=AFN_Box_Text:char                 -
       field=AFN_Slip_Text:char                -
       field=AFN_Priority:number               -
       field=AFN_Code:char                     -
       field=AFN_Amt:number
  end-if

  create-array name=PrT4A_Area size=60 -
    field=PT4A_Box:char                -
    field=PT4A_Descr:char              -
    field=PT4A_Amt:number

  create-array name=PrRV1_Area size=60 -
    field=PRV1_Box:char                -
    field=PRV1_Descr:char              -
    field=PRV1_Amt:number

  create-array name=PrRV2_Area size=25 -
    field=PRV2_Box:char                -
    field=PRV2_Descr:char              -
    field=PRV2_Amt:number

  if &TX.Balance_Year < 2012
    create-array name=RV1_Footnotes size=200   -
      field=RFN_Box:char                       -
      field=RFN_Box_Text:char                  -
      field=RFN_Slip_Text:char                 -
      field=RFN_Priority:number                -
      field=RFN_Amt:number
  end-if

  create-array name=RV1_Other_Info size=200 -
    field=R1OI_Box:char                     -
    field=R1OI_Desc:char                    -
    field=R1OI_Amt:number

  create-array name=RV2_Other_Info size=60 -
    field=R2OI_Box:char                     -
    field=R2OI_Desc:char                    -
    field=R2OI_Amt:number

  create-array name=RV2_Footnotes size=50   -
    field=VFN_Box:char                      -
    field=VFN_Box_Text:char                 -
    field=VFN_Slip_Text:char                -
    field=VFN_Priority:number               -
    field=VFN_Amt:number

end-procedure

begin-procedure Load-Box-Arrays

   move ' ' to $Spacer
   move 0 to #Zero
   move 0 to #i
   move 0 to #j
   move 0 to #k
   move 0 to #l
   move 0 to #fi
   move 0 to #fj
   move 0 to #fk
   move 0 to #fl
   move 0 to #max_RV1OtherInfo

   display 'as of date is ' noline
   display $Asofdate

begin-SELECT
M.TAXFORM_ID
M.BOX
M.DESCRSHORT
M.EFFDT

   let $M.BOX = RTRIM(&M.BOX, ' ')
   let $TAXFORM_BOX-DESCRSHORT = &M.DESCRSHORT

   do Get_Related_TAXFORM_BOX(&M.BOX,&M.EFFDT,&M.TAXFORM_ID)

   EXTRACT $FN from &M.Box 2 1

   if &M.Taxform_ID = 'T'
      do Load-T4-Boxes
   end-if

   if &M.Taxform_ID = 'A'
      do Load-T4A-Boxes
   end-if

   if &M.Taxform_ID = 'R'
      do Load-RV1-Boxes
   end-if

   if &M.Taxform_ID = 'V'
      do Load-RV2-Boxes
   end-if

FROM PS_TAXFORM_BOX M
WHERE  EFFDT = (SELECT MAX(EFFDT)
                FROM PS_TAXFORM_BOX
                WHERE TAXFORM_ID = M.TAXFORM_ID
                  AND EFFDT <= $AsOfDate)
ORDER BY M.TAXFORM_ID ASC, M.BOX ASC
end-SELECT

end-procedure

begin-procedure Load-T4-Boxes

   if $FN = '' or $FN = ' '
       put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into PrT4_Area(#i)
         PT4_Box PT4_Descr PT4_Amt
       add 1 to #i
       move #i to #max_T4boxes

   end-if

end-procedure

begin-procedure Load-T4A-Boxes

   if &TX.Balance_Year >= 2010 or
         (&TX.Balance_Year < 2010 and ($FN = '' or $FN = ' '))
      put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into PrT4A_Area(#j)
      PT4A_Box PT4A_Descr PT4A_Amt
      add 1 to #j
      move #j to #max_T4Aboxes
   else
      move 'A' to $FN_TaxformID
      do Get-Footnote-Data
      put &M.Box $BoxText $Spacer #BoxPriority $BoxNoteCd #Zero
                       into T4A_Footnotes(#fj)
          AFN_Box AFN_Box_Text AFN_Slip_Text AFN_Priority AFN_Code AFN_Amt
      add 1 to #fj
      move #fj to #max_T4Afootnotes
   end-if

end-procedure

begin-procedure Load-RV1-Boxes

   if &TX.Balance_Year >= 2012
      extract $FN from &M.Box 1 1
   end-if

   if $FN = '' or $FN = ' ' or $M.BOX = 'CDO'
       put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into PrRV1_Area(#k)
         PRV1_Box PRV1_Descr PRV1_Amt
       add 1 to #k
       move #k to #max_RV1boxes
   else
      if &TX.Balance_Year < 2012
        move 'R' to $FN_TaxformID
        do Get-Footnote-Data
        put &M.Box $BoxText $Spacer #BoxPriority #Zero
                         into RV1_Footnotes(#fk)
            RFN_Box RFN_Box_Text RFN_Slip_Text RFN_Priority RFN_Amt
        add 1 to #fk
        move #fk to #max_RV1footnotes
      else
        move 'R' to $FN_TaxformID
        put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into RV1_Other_Info(#fk)
            R1OI_Box R1OI_Desc R1OI_Amt
        add 1 to #fk
        move #fk to #max_RV1OtherInfo
      end-if 
   end-if

   let $M.BOX = ' '

end-procedure

begin-procedure Load-RV2-Boxes

   if $FN = '' or $FN = ' '
       put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into PrRV2_Area(#l)
         PRV2_Box PRV2_Descr PRV2_Amt
       add 1 to #l
       move #l to #max_RV2boxes
   else
      move 'V' to $FN_TaxformID
      do Get-Footnote-Data
      put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into RV2_Other_Info(#fl)
          R2OI_Box R2OI_Desc R2OI_Amt

      add 1 to #fl
      move #fl to #max_RV2footnotes
   end-if

end-procedure

begin-procedure Get-Footnote-Data

! let $BoxNZ = rtrim(&M.Box, ' ')
! let $BoxWZ = $BoxNZ || ' '

begin-SELECT
BX.BOX_NOTE_TEXT
BX.BOX_NOTE_SEQ
BX.BOX_NOTE_CD
BX.EFFDT

    let $Box = RTRIM(&M.Box, ' ')
    let $TAXFORM_NOTES-BOX_NOTE_TEXT = &BX.BOX_NOTE_TEXT

    do Get_Related_TAXFORM_NOTES(&M.BOX,&BX.EFFDT,&M.TAXFORM_ID)

    evaluate $Box
    when = 'O01'
      move 'RA' to $BoxText
      break
    when = 'O02'
      move 'RB' to $BoxText
      break
    when = 'O03'
      move 'RC' to $BoxText
      break
    when = 'O04'
      move 'RD' to $BoxText
      break
    when = 'O07'
      move 'RG' to $BoxText
      break
    when = 'O08'
      move 'RH' to $BoxText
      break
    when = 'O09'
      move 'RI' to $BoxText
      break
    when = 'O10'
      move 'RJ' to $BoxText
      break
    when = 'O11'
      move 'RK' to $BoxText
      break
    when = 'O12'
      move 'RL' to $BoxText
      break
    when = 'O13'
      move 'RM' to $BoxText
      break
    when = 'O14'
      move 'RN' to $BoxText
      break
    when = 'O15'
      move 'RO' to $BoxText
      break
    when = 'O16'
      move 'RP' to $BoxText
      break
    when = 'O17'
      move 'RQ' to $BoxText
      break
    when = 'O18'
      move 'RR' to $BoxText
      break
    when = 'O19'
      move 'RS' to $BoxText
      break
    when = 'O20'
      move 'RT' to $BoxText
      break
    when = 'O21'
      move 'RU' to $BoxText
      break
    when = 'O22'
      move 'RV' to $BoxText
      break
    when = 'O23'
      move 'RX' to $BoxText
      break
    when = 'O24'
      move 'CA' to $BoxText
      break
    when = 'O25'
      move 'CB' to $BoxText
      break
    when = 'O26'
      move 'CC' to $BoxText
      break
    when = 'O92'
      find '(' in &BX.Box_Note_Text 0 #loc
      if #loc <> - 1
        extract $BoxText from $TAXFORM_NOTES-BOX_NOTE_TEXT 0 #loc
        let $BoxText  = 'RB ' || $BoxText
      end-if
      break
    when-other
      move $TAXFORM_NOTES-BOX_NOTE_TEXT to $BoxText
    end-evaluate

    move &BX.Box_Note_Seq to #BoxPriority
    move &BX.Box_Note_Cd to $BoxNoteCd

FROM PS_TAXFORM_NOTES BX
WHERE  TAXFORM_ID = &M.Taxform_ID
  AND  BOX = &M.Box
! AND (BOX = $BOXNZ or
!      BOX = $BOXWZ)
  AND  EFFDT = (SELECT MAX(EFFDT)
                FROM PS_TAXFORM_BOX
                WHERE TAXFORM_ID = &M.Taxform_ID
                  AND BOX = BX.BOX
                  AND EFFDT <= $AsOfDate)
end-SELECT

end-procedure


begin-procedure Get-Tax-Tbl-Info

begin-SELECT
TT.CPP_MAX_EARNS

  move &TT.CPP_Max_Earns     to #CPP-Max-Earns

FROM PS_CAN_TAX_TBL TT
WHERE TT.EFFDT = (SELECT MAX(TT1.EFFDT)
                  FROM PS_CAN_TAX_TBL TT1
                  WHERE TT1.EFFDT <= $AsOfDate)
end-SELECT

end-procedure


begin-procedure Report-File-Create

begin-SELECT
S.COMPANY
S.REPORTING_ID
S.WAGE_LOSS_PLAN
S.PROVINCE
S.SEQUENCE_NUMBER
S.TAXFORM_ID
S.UI_EXEMPT
S.EMPLOYMENT_CODE
S.SIN_CONTRB_SPOUSE
S.CAN_YE_SLIP_SEQ
S.YE_SLIP_PROCESS
S.EMPLID
E.EMPLID
E.CALENDAR_YEAR
E.SEQUENCE_NUMBER
E.SIN
E.SLIP_SURNAME
E.SLIP_FIRST_NAME
E.SLIP_INITIAL
E.LOCATION
E.DEPTID

  let #S_Sequence_Num = &S.Sequence_Number
  let $S_Prov         = &S.Province
  let $S_WLP          = &S.Wage_Loss_Plan
  let $S_Taxform_id   = &S.Taxform_Id
  let $E_Emplid       = &E.Emplid
  let $S_Company      = &S.Company
  let #S_Ye_Slip_Seq  = &S.Can_Ye_Slip_Seq

  if $FirstRecord = 'Y'
     move 'N' to $FirstRecord
     do Save-Current-Data
     move $Company to $PrintCompany
     if $RptForm = 'TARV'
       if $SortInd = 'L'
         do Print-Location-Heading
       end-if
       if $SortInd = 'D'
         do Print-Department-Heading
       end-if
       if $SortInd = 'P'
         do Print-Province-Heading
       end-if
    else
       do Print-ReportID-Heading
     end-if
  else
   if $RptForm = 'TARV'
      if &S.Company <> $Company
         do Company-Break
      else
         if $SortInd = 'L' and RTRIM(&E.Location,' ') <> $CurrentLocation
          do Department-Location-Break
        else
          if $SortInd = 'D' and &E.DeptID <> $CurrentDeptID
            do Department-Location-Break
          else
             if $SortInd = 'P' and RTRIM(&S.PROVINCE,' ') <> $CurrentProvince
              do Department-Location-Break
            else
              if &E.EmplID <> $EmplID
                do Employee-Break
              else
                if &S.CAN_YE_SLIP_SEQ <> #YE_Slip_Seq
                  do Slip-Seq-Break
                else
                  do Check-Form-Break
                end-if
              end-if
            end-if
          end-if
        end-if
      end-if
   else
      if &S.Company <> $Company
         do Company-Break
      else
        if &S.Reporting_ID <> $CurrentReportingID
          do ReportID-Break
        else
          if &E.EmplID <> $EmplID
            do Employee-Break
          else
            if &S.CAN_YE_SLIP_SEQ <> #YE_Slip_Seq
              do Slip-Seq-Break
            else
              do Check-Form-Break
            end-if
          end-if
        end-if
      end-if
   end-if
  end-if


   do Process-Detail-Records
   move &E.Emplid          to $C_Emplid
   move &E.Calendar_Year   to #C_Calendar
   move &E.Sequence_Number to #C_Sequence_Num
   do Get-Comments

   do Process-History-Records

FROM PS_CAN_YE_EMPL  E,
     PS_CAN_YE_SLIP  S
WHERE E.CALENDAR_YEAR = &TX.Balance_Year
  AND S.CALENDAR_YEAR = &TX.Balance_Year
  AND S.TAXFORM_ID IN ($Taxform1, $Taxform2, $Taxform3, $Taxform4)
  AND S.COMPANY = E.COMPANY
  AND E.EMPLID = S.EMPLID
  AND E.SEQUENCE_NUMBER = S.SEQUENCE_NUMBER
  AND S.SEQUENCE_NUMBER = (
       SELECT MAX(S1.SEQUENCE_NUMBER)
               FROM PS_CAN_YE_SLIP S1
                  WHERE S1.COMPANY = S.COMPANY
                    AND S1.EMPLID  = S.EMPLID
                    AND S1.CALENDAR_YEAR = S.CALENDAR_YEAR)
  AND S.YE_SLIP_PROCESS IN ('A', 'C', 'N')
#ifdef MVS
  ORDER BY \$SORTSEQUENCE\
#else
  ORDER BY [$SortSequence]
#endif
end-SELECT

  do Print-Empl-Form

  if $PrintDetail = 'Y'
    new-page
  end-if

  move '  ' to $PrintCompany


end-procedure

begin-procedure Process-History-Records

begin-SELECT
SH.COMPANY
SH.SEQUENCE_NUMBER
SH.PROVINCE
SH.WAGE_LOSS_PLAN
SH.TAXFORM_ID
SH.REPORTING_ID
SH.EMPLOYMENT_CODE
SH.SIN_CONTRB_SPOUSE
SH.CAN_YE_SLIP_SEQ
SH.YE_SLIP_PROCESS
SH.UI_EXEMPT
EH.EMPLID
EH.CALENDAR_YEAR
EH.SEQUENCE_NUMBER
EH.SLIP_FIRST_NAME
EH.SLIP_SURNAME
EH.SLIP_INITIAL
EH.LOCATION
EH.DEPTID
EH.SIN


  let #S_Sequence_Num = &SH.Sequence_Number
  let $S_Prov         = &SH.Province
  let $S_WLP          = &SH.Wage_Loss_Plan
  let $S_Taxform_id   = &SH.Taxform_Id
  let $E_Emplid       = &EH.Emplid
  let $S_Company      = &SH.Company
  let #S_Ye_Slip_Seq  = &SH.Can_Ye_Slip_Seq

  do Print-Empl-Form

  do Save-Current-Data-Amend

  do Process-Detail-Records

  move &EH.Emplid          to $C_Emplid
  move &EH.Calendar_Year   to #C_Calendar
  move &EH.Sequence_Number to #C_Sequence_Num
  do Get-Comments

FROM PS_CAN_YE_EMPL  EH,
     PS_CAN_YE_SLIP  SH
WHERE EH.CALENDAR_YEAR = &TX.Balance_Year
  AND SH.CALENDAR_YEAR = &TX.Balance_Year
  AND SH.COMPANY       = &S.COMPANY
  AND SH.TAXFORM_ID    = &S.TAXFORM_ID
  AND SH.EMPLID        = &S.EMPLID
  AND SH.YE_SLIP_PROCESS <> 'D'
  AND SH.COMPANY = EH.COMPANY
  AND EH.EMPLID = SH.EMPLID
  AND EH.SEQUENCE_NUMBER = SH.SEQUENCE_NUMBER
  AND SH.SEQUENCE_NUMBER < &S.SEQUENCE_NUMBER
  ORDER BY SH.SEQUENCE_NUMBER DESC, SH.CAN_YE_SLIP_SEQ ASC

end-SELECT


  do Save-Current-Data-Amend
end-procedure


begin-procedure Get-Comments

  let $Amend_Comments = ''

begin-SELECT

AE.COMMENTS

  let $Amend_Comments = rtrim(&AE.COMMENTS, ' ')

FROM PS_CAN_YE_AMEND_E  AE
WHERE AE.EMPLID            = $C_Emplid
  AND AE.CALENDAR_YEAR     = #C_Calendar
  AND AE.SEQUENCE_NUMBER   = #C_Sequence_Num

end-SELECT


end-procedure


begin-procedure Process-Detail-Records

begin-SELECT
D.BOX
D.CAN_YE_BOX_TEXT
D.CAN_YE_BOX_AMT

   if $S_Taxform_id = 'T'
     do Process-T4-Data
   end-if

   if $S_Taxform_id = 'A'
     do Process-T4A-Data
   end-if

   if $S_Taxform_id = 'R'
     do Process-RV1-Data
   end-if

   if $S_Taxform_id = 'V'
     do Process-RV2-Data
   end-if

FROM PS_CAN_YE_DETAIL  D
WHERE D.COMPANY = $S_Company
  AND D.EMPLID  = $E_Emplid
  AND D.CALENDAR_YEAR = &TX.Balance_Year
  AND D.TAXFORM_ID = $S_Taxform_id
  AND D.WAGE_LOSS_PLAN = $S_WLP
  AND D.PROVINCE = $S_Prov
  AND D.SEQUENCE_NUMBER = #S_Sequence_Num
  AND D.CAN_YE_SLIP_SEQ = #S_Ye_Slip_Seq

ORDER BY D.BOX ASC

end-SELECT

end-procedure

begin-procedure Process-T4-Data

  move 0 to #load_box
  move 0 to #load_note

  if rtrim(&D.Box, ' ') = '28C' or rtrim(&D.Box, ' ') = '28c'
    if &D.CAN_YE_BOX_TEXT = 'X'
       move 'X' to $CPPExempt
    else
       move ' ' to $CPPExempt
    end-if
    move 'Y' to $PrintZero_Bx26
  else
    if rtrim(&D.Box, ' ') = '28U' or rtrim(&D.Box, ' ') = '28u'
       move 'X' to $UIExempt
       move 'Y' to $PrintZero_Bx24
    else
      if rtrim(&D.Box, ' ') = '28P'
        move 'X' to $PPIPExempt
      end-if
    end-if
  end-if
  extract $FN_Ind from &D.Box 2 1
  if $FN_Ind = '' or $FN_Ind = ' '
    let $Box = RTRIM(&D.Box,' ')
    if $Box = '50' or $Box = '26' or $Box = '24'
       let $Text = RTRIM(&D.CAN_YE_Box_Text, ' ')
       if $Box = '50'
          move &D.CAN_YE_Box_Text to $T4_Plan
       end-if
    end-if

    while #load_box < #max_T4boxes
      get $LoadBox from PrT4_Area(#load_box) PT4_Box
      let $LoadBox = rtrim($LoadBox, ' ')

      if $LoadBox = $Box
        array-add &D.CAN_YE_Box_Amt to PrT4_Area(#load_box) PT4_Amt
        break
      else
        add 1 to #load_box
      end-if
    end-while

  end-if

end-procedure


begin-procedure Process-T4-UI-CPP-Boxes

  move 0 to #load_box
  move 0 to #savebox14
  let $Update-Box24 = ' '

  while #load_box < #max_T4boxes
    get $LoadT4Box #LoadT4Amt from PrT4_Area(#load_box) PT4_Box PT4_Amt
    let $LoadT4Box = rtrim($LoadT4Box, ' ')

     evaluate $LoadT4Box
       when = '14'
         let #savebox14 = #LoadT4Amt

       when = '26'
         if #LoadT4Amt = 0
           if $CPPExempt <> 'X'
             if #savebox14 >= #CPP-Max-Earns
               array-add #CPP-Max-Earns to PrT4_Area(#load_box) PT4_Amt
             else
               array-add #savebox14 to PrT4_Area(#load_box) PT4_Amt
             end-if
           end-if
         end-if

       when-other
          break

     end-evaluate

     add 1 to #load_box
  end-while

end-procedure


begin-procedure Process-T4A-Data

  move 0 to #load_box
  move 0 to #load_note

  extract $FN_Ind from &D.Box 2 1
  if &TX.Balance_Year >= 2010 or
        (&TX.Balance_Year < 2010 and ($FN_Ind = '' or $FN_Ind = ' '))
    let $Box = RTRIM(&D.Box,' ')
    if $Box = '036' or $Box = '36'
       move &D.CAN_YE_Box_Text to $T4A_Plan
    end-if
    while #load_box < #max_T4Aboxes
      get $LoadBox from PrT4A_Area(#load_box) PT4A_Box
      let $LoadBox = RTRIM($LoadBox,' ')
      if $LoadBox = $Box
        array-add &D.CAN_YE_Box_Amt to PrT4A_Area(#load_box) PT4A_Amt
        break
      else
        add 1 to #load_box
      end-if
    end-while
  else
    while #load_note < #max_T4Afootnotes
      get $LoadNote from T4A_Footnotes(#load_note) AFN_Box
      let $Box = RTRIM(&D.Box,' ')
      let $LoadNote = RTRIM($LoadNote,' ')
      if $LoadNote = $Box
        array-add &D.CAN_YE_Box_Amt to T4A_Footnotes(#load_note) AFN_Amt
         put &D.CAN_YE_Box_Text into T4A_Footnotes (#load_note) AFN_Slip_Text
        add 1 to #T4A_FNCount
        break
      else
        add 1 to #load_note
      end-if
    end-while
  end-if

end-procedure

begin-procedure Process-RV1-Data

  let $Box = RTRIM(&D.Box, ' ')
  if $Box = 'CDO'
    let $Code = RTRIM(&D.CAN_YE_BOX_TEXT, ' ')
  end-if

  move 0 to #load_box
  move 0 to #load_note
  move 0 to #load_OI

  if &TX.Balance_Year < 2012
    extract $FN_Ind from &D.Box 2 1
  else
    extract $FN_Ind from &D.Box 1 1
  end-if

  let $Box = RTRIM(&D.Box,' ')

  if $FN_Ind = '' or $FN_Ind = ' '

    while #load_box < #max_RV1boxes
      get $LoadBox from PrRV1_Area(#load_box) PRV1_Box
      let $LoadBox = RTRIM($LoadBox,' ')
      if $LoadBox = $Box
        array-add &D.CAN_YE_Box_Amt to PrRV1_Area(#load_box) PRV1_Amt
        move &D.CAN_YE_Box_Amt to $RV1Amt
        break
      else
        add 1 to #load_box
      end-if
    end-while
  else
    if &TX.Balance_Year < 2012
      while #load_note < #max_RV1footnotes
        get $LoadNote from RV1_Footnotes(#load_note) RFN_Box
        let $Box = RTRIM(&D.Box,' ')
        let $LoadNote = RTRIM($LoadNote,' ')
        if $LoadNote = $Box

          do Check-BoxO
          if $PrintFN = 'Y'
            array-add &D.CAN_YE_Box_Amt to RV1_Footnotes(#load_note) RFN_Amt
            put &D.CAN_YE_Box_Text into RV1_Footnotes (#load_note) RFN_Slip_Text
            add 1 to #RV1_FNCount
          end-if
          break
        else
          add 1 to #load_note
        end-if
      end-while
    else
      if #max_RV1OtherInfo > 0
        while #load_OI < #max_RV1OtherInfo
          get $LoadOtherBox from RV1_Other_Info(#load_OI) R1OI_Box
          let $LoadOtherBox = RTRIM($LoadOtherBox,' ')
          if $LoadOtherBox = $Box
            array-add &D.CAN_YE_Box_Amt to RV1_Other_Info(#load_OI) R1OI_Amt
            add 1 to #RV1_OICount
            break
          else
            add 1 to #load_OI
          end-if
        end-while
      end-if
    end-if
  end-if
  move #RV1_FNCount to $RVFNCount

end-procedure


begin-procedure Check-BoxO

  let $PrintFN = ' '

  if $Box <> 'CDO'

    EXTRACT $Box_Ind from $Box 0 1

    if $Box_Ind = 'O'
      if $Code = 'RZ' or  ($Box = 'O92' and $Code = 'RB') or ($Box = 'O82') or ($Box = 'O30')
        let $PrintFN = 'Y'
      end-if
      let $Print_Code = 'Y'
    else
      let $PrintFN = 'Y'
    end-if

  end-if

end-procedure


begin-procedure Process-RV2-Data

  move 0 to #load_box
  move 0 to #load_note

  extract $FN_Ind from &D.Box 2 1
  if $FN_Ind = '' or $FN_Ind = ' '
    let $Box = RTRIM(&D.Box,' ')
    if $Box = 'G' and &D.CAN_YE_Box_Amt = 0
       let $TextG = RTRIM(&D.CAN_YE_Box_Text, ' ')
       if $TextG <> ''
          move 'Y' to $PrintZero_BxG
       end-if
    end-if

    while #load_box < #max_RV2boxes
      get $LoadBox from PrRV2_Area(#load_box) PRV2_Box
      let $LoadBox = RTRIM($LoadBox,' ')
      if $LoadBox = $Box
        array-add &D.CAN_YE_Box_Amt to PrRV2_Area(#load_box) PRV2_Amt
        move &D.CAN_YE_Box_Amt to $RV2Amt
        break
      else
        add 1 to #load_box
      end-if
    end-while
  else
    while #load_note < #max_RV2footnotes
      get $LoadOtherBox from RV2_Other_Info(#load_note) R2OI_Box
      let $LoadOtherBox = RTRIM($LoadOtherBox,' ')
      let $Box = RTRIM(&D.Box,' ')
      if $LoadOtherBox = $Box
        array-add &D.CAN_YE_Box_Amt to RV2_Other_Info(#load_note) R2OI_Amt

        add 1 to #RV2_FNCount
        break
      else
        add 1 to #load_note
      end-if
    end-while
  end-if
  move #RV2_FNCount to $RV2FNCount

end-procedure

begin-procedure Company-Break

  do Print-Empl-Form

  if $PrintDetail = 'Y'
    new-page
  end-if

  move &S.Company to $PrintCompany

  do Save-Current-Data

  if $RptForm = 'TARV'
    if $SortInd = 'L'
      do Print-Location-Heading
    end-if
    if $SortInd = 'D'
      do Print-Department-Heading
    end-if
    if $SortInd = 'P'
      do Print-Province-Heading
    end-if
  else
    do Print-ReportID-Heading
  end-if


end-procedure

begin-procedure Department-Location-Break

  do Print-Empl-Form

  if $PrintDetail = 'Y'
    new-page
  end-if

  do Save-Current-Data

  move $Company to $PrintCompany

  if $SortInd = 'L'
    do Print-Location-Heading
  end-if
  if $SortInd = 'D'
    do Print-Department-Heading
  end-if
  if $SortInd = 'P'
    do Print-Province-Heading
  end-if

end-procedure

begin-procedure ReportID-Break

  do Print-Empl-Form

  if $PrintDetail = 'Y'
    new-page
  end-if

  do Save-Current-Data
  move $Company to $PrintCompany
  do Print-ReportID-Heading

end-procedure

begin-procedure Employee-break

  do Print-Empl-Form

  move 0 to #T4_Count
  move 0 to #T4A_Count
  move 0 to #RV1_Count
  move 0 to #RV2_Count

  do Save-Current-Data
  move $Company to $PrintCompany


end-procedure

begin-procedure Check-Form-Break

  if $TaxformID = 'T'
    do Print-T4-Data
  else
    if ($TaxformID = 'A' and
        &S.Taxform_ID <> 'A') or
       ($TaxformID = 'A' and
        $WageLossPlan <> &S.Wage_Loss_Plan)
          do Print-T4A-Data
    else
      if ($TaxformID = 'R' and
          &S.Taxform_ID <> 'R')
             do Print-RV1-Data
      else
        if ($TaxformID = 'V' and
            &S.Taxform_ID <> 'V')
               do Print-RV2-Data
        end-if
      end-if
    end-if
  end-if

  do Save-Current-Data
  move $Company to $PrintCompany

end-procedure

begin-procedure Slip-Seq-Break

  evaluate $TaxformID
    when = 'T'
      do Print-T4-Data
      break
    when = 'A'
      do Print-T4A-Data
      break
    when = 'R'
      do Print-RV1-Data
      break
    when = 'V'
      do Print-RV2-Data
      break
    when-other
      break
  end-evaluate

  do Save-Current-Data
  move $Company to $PrintCompany

end-procedure


begin-procedure Print-Employee-Data

  if $PrintDetail = 'Y'
    next-listing need=9

    print $Surname (+2,3)
    print ',' (0,0)
    print $FirstName (0,+1)
    print $Initial (0,+1)
    print $Ctx910aa_Sin (0,50)
    print $SIN (0,56) edit xxx-xxx-xxx
    print $Ctx910aa_Emplid (0,71)
    print $EmplID (0,80)
    print $Ctx910aa_Location (0,92)
    print $Location (0,104)
    print $Ctx910aa_Department (0,116)
    print $DeptID (0,129)
  end-if


end-procedure

begin-procedure Print-Empl-Form

  if $TaxformID = 'T'
    do Print-T4-Data
  end-if


  if $TaxformID = 'A'
    do Print-T4A-Data
  end-if


  if $TaxformID = 'R'
    do Print-RV1-Data
  end-if


  if $TaxformID = 'V'
    do Print-RV2-Data
  end-if

end-procedure

begin-procedure Print-T4-Data

  do Print-Employee-Data

  add 1 to #T4Count_Lev1

  if $PrintDetail = 'Y'
    next-listing need=8

    print $Ctx910aa_T4_suppl (+1,8)
    print $Ctx910aa_Wagels_plan (0,26)
    print $WageLossPlan (0,44)
    print $Ctx910aa_Province (0,50)
    print $Province (0,61,2)
    print $Ctx910aa_Bus_number (0,67)
    print $ReportingID (0,83)
    print $Ctx910aa_Cppqpp_exemp (0,100)
    print $CPPExempt (0,117)
    print $Ctx910aa_Ei_exemp (0,121)
    print $UIExempt (0,133)
    print $Ctx910aa_Empl_Code (+1,26)
    print $EmploymentCode (0,45)
    print $Ctx910aa_Slip_Process (0,50)
    print $slip_process (0, 67)
    print $Ctx910aa_Num (0, 98)
    print $Seq_Num      (0, 112)
    print $Ctx910aa_PPIP_Exempt (0,119)
    print $PPIPExempt (0,134)


    do Print-Column-Headings

    move 0 to #i
    move 0 to #fi
    move 0 to #var

    while #i <= #max_T4boxes
       get $PrBox $PrDescr #PrAmt from PrT4_Area(#i)
                       PT4_Box PT4_Descr PT4_Amt
      let $PrBox = RTRIM($PrBox,' ')
       if #i < 8
          evaluate $PrBox
            when = '14'
            when = '20'
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99mi

            when = '16'
            when = '22'
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,66) edit 99999999.99mi

            when = '17'
            when = '24'
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,98) edit 99999999.99mi

            when = '18'
            when = '26'
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print #PrAmt (0,130) edit 99999999.99mi

           end-evaluate
       else
         if (#PrAmt <> 0) or
            ($PrBox = '50' and $T4_Plan <> ' ' and $T4_Plan <> '')
          add 1 to #var
          evaluate #var
          when = 1
          when = 5
          when = 9
          when = 13
          when = 17
          when = 21
          when = 25
          when = 29
          when = 33
          when = 37
          when = 41
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              if $PrBox = '50'
                 print $T4_Plan (0,35)
              else
                 print #PrAmt (0,31) edit 99999999.99mi
              end-if

          when = 2
          when = 6
          when = 10
          when = 14
          when = 18
          when = 22
          when = 26
          when = 30
          when = 34
          when = 38
          when = 42
              print $PrBox (0,50)
              print $PrDescr (0,54)
              if $PrBox = '50'
                 print $T4_Plan (0,70)
              else
                 print #PrAmt (0,66) edit 99999999.99mi
              end-if

          when = 3
          when = 7
          when = 11
          when = 15
          when = 19
          when = 23
          when = 27
          when = 31
          when = 35
          when = 39
          when = 40
              print $PrBox (0,82)
              print $PrDescr (0,86)
              if $PrBox = '50'
                 print $T4_Plan (0,102)
              else
                 print #PrAmt (0,98) edit 99999999.99mi
              end-if

          when = 4
          when = 8
          when = 12
          when = 16
          when = 20
          when = 24
          when = 28
          when = 32
          when = 36
              print $PrBox (0,114)
              print $PrDescr (0,118)
              if $PrBox = '50'
                 print $T4_Plan (0,134)
              else
                 print #PrAmt (0,130) edit 99999999.99mi
              end-if
          when-other
            break

       end-evaluate
       end-if
     end-if

     add 1 to #i

    end-while
  end-if

  do Process-T4-Other-Boxes

  do Process-T4-UI-CPP-Boxes

  if $slip_process  <> $Ctx910aa_Original
    print $Ctx910aa_Comments (+2,10)
    print $Amend_Comments (0,20)    WRAP 120 5 STRIP=<13> ON=<10>
  end-if

  do Initialize-T4-Data
  move ' ' to $T4_Plan

end-procedure


begin-procedure Process-T4-Other-Boxes

  move 0 to #TotalOtherBox
  move 0 to #NumOfT4
  move 0 to #i

  while #i <= #max_T4boxes
    get $PrBox $PrDescr #PrAmt from PrT4_Area(#i)
                       PT4_Box PT4_Descr PT4_Amt
    let $PrBox = RTRIM($PrBox,' ')

    evaluate $PrBox
      when = '30'
      when = '31'
      when = '32'
      when = '33'
      when = '34'
      when = '35'
      when = '36'
      when = '37'
      when = '38'
      when = '39'
      when = '40'
      when = '41'
      when = '42'
      when = '66'
      when = '67'
      when = '68'
      when = '69'
      when = '70'
      when = '74'
      when = '75'
      when = '76'
      when = '84'
      when = '85'
      when = '81'
      when = '86'
      when = '87'

        if #PrAmt <> 0
          add 1 to #TotalOtherBox
        end-if

      when-other
        break
    end-evaluate

    add 1 to #i

  end-while

  if #TotalOtherBox > 0
    let #NumOfT4 = #TotalOtherBox / 6
    let #NumOfT4 = trunc(#NumOfT4,0)

    let #Count   = mod(#TotalOtherBox,6)
    if #Count <> 0
      add 1 to #NumOfT4
    end-if


  end-if

end-procedure


begin-procedure Print-T4A-Data

  do Print-Employee-Data

  if $PrintDetail = 'Y'
    next-listing need=5

    print $Ctx910aa_T4a_suppl (+1,8)
    print $Ctx910aa_Wagels_plan (0,26)
    print $WageLossPlan (0,44)
    print $Ctx910aa_Bus_number (0,67)
    print $ReportingID (0,83)
    print $Ctx910aa_Slip_Process (+1, 26)
    print $slip_process (0, 43)
    print $Ctx910aa_Num (0, 67)
    print $Seq_Num      (0, 81)

    do Print-Column-Headings

    move 0 to #j
    move 0 to #fj
    move 0 to #var

    while #j <= #max_T4Aboxes
       get $PrBox $PrDescr #PrAmt from PrT4A_Area(#j)
                       PT4A_Box PT4A_Descr PT4A_Amt
      let $PrBox = RTRIM($PrBox,' ')
       if #j < 8
          evaluate $PrBox
            when = '16'
            when = '24'
            when = '016'
            when = '024'
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,30) edit 999999999.99

            when = '18'
            when = '26'
            when = '018'
            when = '026'
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,65) edit 999999999.99

            when = '20'
            when = '27'
            when = '020'
            when = '027'
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,97) edit 999999999.99

            when = '22'
            when = '28'
            when = '022'
            when = '028'
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print #PrAmt (0,129) edit 999999999.99

          end-evaluate
       else

        if &TX.Balance_Year < 2010
           if (#PrAmt <> 0) or
              ($PrBox = '36' and not IsBlank($T4A_Plan))
             add 1 to #var
             evaluate #var
             when = 1
             when = 5
             when = 9
                 print $PrBox (+1,11)
                 print $PrDescr (0,15)
                 if $PrBox = '36'
                   print $T4A_Plan (0,35)
                 else
                   print #PrAmt (0,30) edit 999999999.99
                 end-if

             when = 2
             when = 6
             when = 10
                 print $PrBox (0,50)
                 print $PrDescr (0,54)
                 if $PrBox = '36'
                   print $T4A_Plan (0,70)
                 else
                   print #PrAmt (0,65) edit 999999999.99
                 end-if

             when = 3
             when = 7
             when = 11
                 print $PrBox (0,82)
                 print $PrDescr (0,86)
                 if $PrBox = '36'
                   print $T4A_Plan (0,102)
                 else
                   print #PrAmt (0,97) edit 999999999.99
                 end-if

             when = 4
             when = 8
             when = 12
                 print $PrBox (0,114)
                 print $PrDescr (0,118)
                 if $PrBox = '36'
                   print $T4A_Plan (0,134)
                 else
                   print #PrAmt (0,129) edit 999999999.99
                 end-if

             when-other
                 break
             end-evaluate
           end-if
        else
           if (#PrAmt <> 0) or
              ($PrBox = '036' and not IsBlank($T4A_Plan))
             add 1 to #var
             evaluate #var
             when = 1
             when = 5
             when = 9
             when = 13
             when = 17
             when = 21
             when = 25
             when = 29
             when = 33
             when = 37
             when = 41
             when = 45
                 print $PrBox (+1,11)
                 print $PrDescr (0,15)
                 if $PrBox = '036'
                   print $T4A_Plan (0,35)
                 else
                   print #PrAmt (0,30) edit 999999999.99
                 end-if

             when = 2
             when = 6
             when = 10
             when = 14
             when = 18
             when = 22
             when = 26
             when = 30
             when = 34
             when = 38
             when = 42
             when = 46
                 print $PrBox (0,50)
                 print $PrDescr (0,54)
                 if $PrBox = '036'
                   print $T4A_Plan (0,70)
                 else
                   print #PrAmt (0,65) edit 999999999.99
                 end-if

             when = 3
             when = 7
             when = 11
             when = 15
             when = 19
             when = 23
             when = 27
             when = 31
             when = 35
             when = 39
             when = 43
             when = 47
                 print $PrBox (0,82)
                 print $PrDescr (0,86)
                 if $PrBox = '036'
                   print $T4A_Plan (0,102)
                 else
                   print #PrAmt (0,97) edit 999999999.99
                 end-if

             when = 4
             when = 8
             when = 12
             when = 16
             when = 20
             when = 24
             when = 28
             when = 32
             when = 36
             when = 40
             when = 44
                 print $PrBox (0,114)
                 print $PrDescr (0,118)
                 if $PrBox = '036'
                   print $T4A_Plan (0,134)
                 else
                   print #PrAmt (0,129) edit 999999999.99
                 end-if

             when-other
                 break
             end-evaluate
           end-if
        end-if
     end-if

     add 1 to #j

    end-while

    if &TX.Balance_Year < 2010 and #T4A_FNCount > 0
       next-listing need=6
       print $Ctx910aa_T4a_footnote  (+1,14)
       if #T4A_FNCount > 1
          print $Ctx910aa_Fn_code    (0,35)
       end-if
       do Print-Footnote-Column-Headings

    while #fj <= #max_T4Afootnotes

       get $FNBox $FNBoxText $FNSlipText #FNPriority $FNCode #FNAmt
                              from T4A_Footnotes(#fj)
                AFN_Box AFN_Box_Text AFN_Slip_Text AFN_Priority AFN_Code AFN_Amt

       if #FNAmt <> 0 or not isblank($FNSlipText)
       print #FNPriority (+1,32) edit 99
       print $FNBox (0,41)
       if #FNAmt <> 0
          print #FNAmt (0,47) edit 999,999,999.99mi
       end-if
       print $FNCode (0,66)
       print $FNBoxText (0,73)
       print $FNSlipText (0,103)
       end-if
       add 1 to #fj

    end-while
    else
       print '  ' (+1,1)
    end-if
  end-if

  do Initialize-T4A-Data
  move ' ' to $T4A_Plan

  if $slip_process  <> $Ctx910aa_Original
    print $Ctx910aa_Comments (+2,10)
    print $Amend_Comments (0,20)    WRAP 120 5 STRIP=<13> ON=<10>
  end-if

end-procedure

begin-procedure Print-RV1-Data

  do Print-Employee-Data

  if $PrintDetail = 'Y'
    next-listing need=5
    print $Ctx910aa_Rv1_slip (+1,8)
    print $Ctx910aa_Qin_number (0,67)
    print $ReportingID (0,80)
    print $Ctx910aa_Slip_Process (+1, 26)
    print $slip_process (0, 43)
    print $Ctx910aa_Num (0, 67)
    print $Seq_Num      (0, 81)

    do Print-Column-Headings

    move 0 to #k
    move 0 to #fk
    move 0 to #var
    move 0 to #oi

    while #k <= #max_RV1boxes
       get $PrBox $PrDescr #PrAmt from PrRV1_Area(#k)
                       PRV1_Box PRV1_Descr PRV1_Amt
      let $PrBox = RTRIM($PrBox,' ')
       if #k < 5
          evaluate $PrBox
            when = 'A'
            when = 'D'
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99

            when = 'B'
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,66) edit 99999999.99

            when = 'C'
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,98) edit 99999999.99

            when = 'CDO'
              print $PrBox (0,114)
              print $PrDescr (0,118)
              if &TX.Balance_Year < 2012
                if $Code <> '' and $Print_Code = 'Y'
                  print $Code  (0,139)
                end-if
              else
                if $Code <> ''
                  print $Code  (0,139)
                end-if
              end-if
          end-evaluate
       else
         if #PrAmt <> 0  or
           (#PrAmt = 0 and $PrBox = 'G') or
           (#PrAmt = 0 and $PrBox = 'I')
          add 1 to #var
          evaluate #var
          when = 1
          when = 5
          when = 9
          when = 13
          when = 17
          when = 21
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,66) edit 99999999.99

          when = 2
          when = 6
          when = 10
          when = 14
          when = 18
          when = 22
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,98) edit 99999999.99

          when = 3
          when = 7
          when = 11
          when = 15
          when = 19
          when = 23
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print #PrAmt (0,130) edit 99999999.99

          when = 4
          when = 8
          when = 12
          when = 16
          when = 20
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99

          when-other
              break
       end-evaluate
      end-if
     end-if

     add 1 to #k

    end-while

    if &TX.Balance_Year < 2012
      if #RV1_FNCount > 0
         next-listing need=6
         print $Ctx910aa_Rv1_footnote (+1,14)
         do Print-Footnote-Column-Headings

      while #fk <= #max_RV1footnotes

         get $FNBox $FNBoxText $FNSlipText #FNPriority #FNAmt
                from RV1_Footnotes(#fk) RFN_Box RFN_Box_Text RFN_Slip_Text
                                                 RFN_Priority RFN_Amt

         if rtrim($FNBox, ' ') <> 'CDO'
         if #FNAmt <> 0 or not isblank($FNSlipText)
         print #FNPriority (+1,32) edit 99
         print $FNBox (0,41)
         if #FNAmt <> 0
            print #FNAmt (0,48) edit 99,999,999.99mi
         end-if
         print $FNBoxText (0,73)
         print $FNSlipText (0,103)
         end-if
         end-if

         add 1 to #fk

      end-while
      else
         print '  ' (+1,4)
      end-if
    else
      if #RV1_OICount > 0
         move 0 to #toi
         move 0 to #oi
         next-listing need=6
         print $Ctx910aa_Rv1_otherinf (+1,8)
         do Print-Other-Info-Column-Headings

        while #toi <= #max_RV1OtherInfo

         get $OIBox $OIDesc #OIAmt
                from RV1_Other_Info(#toi) R1OI_Box R1OI_Desc R1OI_Amt

         let $Temp_OIBox = RTRIM($OIBox , ' ')

         evaluate $Temp_OIBox
             when = 'RA'
             when = 'RB'
             when = 'RC'
             when = 'RD'
             when = 'RG'
             when = 'RH'
             when = 'RI'
             when = 'RJ'
             when = 'RK'
             when = 'RM'
             when = 'RN'
             when = 'RO'
             when = 'RP'
             when = 'RQ'
             when = 'RR'
             when = 'RS'
             when = 'RT'
             when = 'RU'
             when = 'RV'
             when = 'RX'
             when = 'CA'
             when = 'CB'
             when = 'CC'
                let $RZBox = 'RZ-' || $OIBox
             when-other
                let $RZBox = $OIBox
         end-evaluate

         if #OIAmt <> 0
           add 1 to #oi
           evaluate #oi

             when = 1
             when = 5
             when = 9
             when = 13
             when = 17
             when = 21
               print $RZBox (+1,10)
               print $OIDesc (0,16)
               print #OIAmt (0,31) edit 99999999.99

             when = 2
             when = 6
             when = 10
             when = 14
             when = 18
             when = 22
               print $RZBox (0,49)
               print $OIDesc (0,55)
               print #OIAmt (0,66) edit 99999999.99

             when = 3
             when = 7
             when = 11
             when = 15
             when = 19
             when = 23
               print $RZBox (0,81)
               print $OIDesc (0,87)
               print #OIAmt (0,98) edit 99999999.99

             when = 4
             when = 8
             when = 12
             when = 16
             when = 20
             when = 24
               print $RZBox (0,113)
               print $OIDesc (0,119)
               print #OIAmt (0,130) edit 99999999.99

             when-other
               break
           end-evaluate
         end-if

         add 1 to #toi

        end-while
      end-if
    end-if
  end-if

  do Initialize-RV1-Data

  if $slip_process  <> $Ctx910aa_Original
    print $Ctx910aa_Comments (+1,10)
    print $Amend_Comments (0,20)    WRAP 120 5 STRIP=<13> ON=<10>
  end-if

end-procedure

begin-procedure Print-RV2-Data

  do Print-Employee-Data

  if $PrintDetail = 'Y'
    next-listing need=5

    print $Ctx910aa_Rv2_slip (+1,8)
    print $Ctx910aa_Qin_number (0,67)
    print $ReportingID (0,80)
    print $Ctx910aa_Slip_Process (+1, 26)
    print $slip_process (0, 43)
    print $Ctx910aa_Num (0, 67)
    print $Seq_Num      (0, 81)

    do Print-Column-Headings

    move 0 to #l
    move 0 to #fl
    move 0 to #var

    while #l <= #max_RV2boxes
       get $PrBox $PrDescr #PrAmt from PrRV2_Area(#l)
                       PRV2_Box PRV2_Descr PRV2_Amt
      let $PrBox = RTRIM($PrBox,' ')
       if #l < 5
          evaluate $PrBox
            when = 'A'
            when = 'E'
            when = 'I'
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99

            when = 'B'
            when = 'F'
            when = 'J'
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,66) edit 99999999.99

            when = 'C'
            when = 'G'
            when = 'K'
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,98) edit 99999999.99

            when = 'D'
            when = 'H'
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print #PrAmt (0,130) edit 99999999.99

          end-evaluate
       else
         if #PrAmt <> 0  or
           (#PrAmt = 0 and $PrBox = 'G' and $PrintZero_BxG = 'Y')
           or (#PrAmt = 0 and $PrBox = 'N' and rtrim($sin_contrb_spouse, ' ') <> '')
          add 1 to #var
          evaluate #var
          when = 1
          when = 5
          when = 9
              print $PrBox (0,50)
              print $PrDescr (0,54)
              if $PrBox = 'N'
                print $sin_contrb_spouse (0,68) edit 'xxx-xxx-xxx'
              else
                print #PrAmt (0,66) edit 99999999.99
              end-if
          when = 2
          when = 6
          when = 10
              print $PrBox (0,82)
              print $PrDescr (0,86)
              if $PrBox = 'N'
                print $sin_contrb_spouse (0,100) edit 'xxx-xxx-xxx'
              else
                print #PrAmt (0,98) edit 99999999.99
              end-if
          when = 3
          when = 7
          when = 11
              print $PrBox (0,114)
              print $PrDescr (0,118)
              if $PrBox = 'N'
                print $sin_contrb_spouse (0,132) edit 'xxx-xxx-xxx'
              else
                print #PrAmt (0,130) edit 99999999.99
              end-if
          when = 4
          when = 8
          when = 12
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              if $PrBox = 'N'
                print $sin_contrb_spouse (0,33) edit 'xxx-xxx-xxx'
              else
                print #PrAmt (0,31) edit 99999999.99
              end-if
          when-other
              break
       end-evaluate
      end-if
     end-if

     add 1 to #l

    end-while

    if #RV2_FNCount > 0
       move 0 to #toi
       move 0 to #oi
       next-listing need=6
      print $Ctx910aa_Rv2_otherinf (+1,8)
      do Print-Other-Info-Column-Headings

      while #toi <= #max_RV2footnotes

       get $OIBox $OIDesc #OIAmt
              from RV2_Other_Info(#toi) R2OI_Box R2OI_Desc R2OI_Amt
                                               
       if #OIAmt <> 0
         add 1 to #oi
         evaluate #oi

           when = 1
           when = 5
           when = 9
           when = 13
           when = 17
           when = 21
             print $OIBox (+1,10)
             print $OIDesc (0,16)
             print #OIAmt (0,31) edit 99999999.99

           when = 2
           when = 6
           when = 10
           when = 14
           when = 18
           when = 22
             print $OIBox (0,49)
             print $OIDesc (0,55)
             print #OIAmt (0,66) edit 99999999.99

           when = 3
           when = 7
           when = 11
           when = 15
           when = 19
           when = 23
             print $OIBox (0,81)
             print $OIDesc (0,87)
             print #OIAmt (0,98) edit 99999999.99

           when = 4
           when = 8
           when = 12
           when = 16
           when = 20
           when = 24
             print $OIBox (0,113)
             print $OIDesc (0,119)
             print #OIAmt (0,130) edit 99999999.99

           when-other
             break
         end-evaluate
       end-if

       add 1 to #toi

      end-while

    end-if

  end-if

  move ' ' to $sin_contrb_spouse
  do Initialize-RV2-Data

  if $slip_process  <> $Ctx910aa_Original
    print $Ctx910aa_Comments (+1,10)
    print $Amend_Comments (0,20)    WRAP 120 5 STRIP=<13> ON=<10>
  end-if

end-procedure

begin-procedure Print-Column-Headings

  if $PrintDetail = 'Y'
    print $Ctx910aa_Box#   (+2,10)
    print $Ctx910aa_Descr  (0,15)
    print $Ctx910aa_Amount (0,36)
    print $Ctx910aa_Box#   (0,49)
    print $Ctx910aa_Descr  (0,54)
    print $Ctx910aa_Amount (0,71)
    print $Ctx910aa_Box#   (0,81)
    print $Ctx910aa_Descr  (0,86)
    print $Ctx910aa_Amount (0,103)
    print $Ctx910aa_Box#   (0,113)
    print $Ctx910aa_Descr  (0,118)
    print $Ctx910aa_Amount (0,135)
  end-if

end-procedure


begin-procedure Print-Other-Info-Column-Headings

  if $PrintDetail = 'Y'
    print $Ctx910aa_Box#   (+2,10)
    print $Ctx910aa_Descr  (0,16)
    print $Ctx910aa_Amount (0,36)
    print $Ctx910aa_Box#   (0,49)
    print $Ctx910aa_Descr  (0,55)
    print $Ctx910aa_Amount (0,71)
    print $Ctx910aa_Box#   (0,81)
    print $Ctx910aa_Descr  (0,87)
    print $Ctx910aa_Amount (0,103)
    print $Ctx910aa_Box#   (0,113)
    print $Ctx910aa_Descr  (0,119)
    print $Ctx910aa_Amount (0,135)
  end-if

end-procedure


begin-procedure Print-Footnote-Column-Headings

  if $PrintDetail = 'Y'
!    print $Ctx910aa_Priority     (+1,29)
!    print $Ctx910aa_Footnote     (0,39)
!    print $Ctx910aa_Amount       (0,52)
    print $Ctx910aa_Box#          (0,39)
    print $Ctx910aa_Amount       (0,52)
    if &TX.Balance_Year < 2010 and $TaxformID = 'A'
       print $Ctx910aa_Bx38_code (0,62)
    end-if
!    print $Ctx910aa_Footnote_msg (0,73)
  end-if

end-procedure

begin-procedure Initialize-T4-Data

   move ' ' to $CPPExempt
   move ' ' to $UIExempt
   move ' ' to $PPIPExempt
   move ' ' to $PrintZero_Bx26
   move ' ' to $PrintZero_Bx24
   move 0 to #i
   move 0 to #fi
   let #InitAmt = 0
   let $InitText = ' '

   while #i < #max_T4boxes
      put #InitAmt into PrT4_Area(#i) PT4_Amt
      add 1 to #i
   end-while

end-procedure

begin-procedure Initialize-T4A-Data

   move 0 to #j
   move 0 to #fj
   let #InitAmt = 0
   let $InitText = ' '

   while #j < #max_T4Aboxes
      put #InitAmt into PrT4A_Area(#j) PT4A_Amt
      add 1 to #j
   end-while

   if &TX.Balance_Year < 2010
      while #fj < #max_T4Afootnotes
         put #InitAmt $InitText into T4A_Footnotes(#fj) AFN_Amt AFN_Slip_Text
         add 1 to #fj
      end-while
      move 0 to #T4A_FNCount
   end-if

end-procedure

begin-procedure Initialize-RV1-Data

   move 0 to #k
   move 0 to #fk
   let #InitAmt = 0
   let $InitText = ' '
   move 'N' to $Print_Code
   if &E.EmplID <> $EmplID
     move ' ' to $Code                 ! box Code
   end-if

   while #k < #max_RV1boxes
      put #InitAmt into PrRV1_Area(#k) PRV1_Amt
      add 1 to #k
   end-while

   if &TX.Balance_Year < 2012
     while #fk < #max_RV1footnotes
        put #InitAmt $InitText into RV1_Footnotes(#fk) RFN_Amt RFN_Slip_Text
        add 1 to #fk
     end-while
     move 0 to #RV1_FNCount
   else
     while #fk < #max_RV1OtherInfo
        put #InitAmt into RV1_Other_Info(#fk) R1OI_Amt 
        add 1 to #fk
     end-while
     move 0 to #RV1_OICount
   end-if

end-procedure

begin-procedure Initialize-RV2-Data

   let $TextG = ''
   let $PrintZero_BxG = ' '
   move 0 to #l
   move 0 to #fl
   let #InitAmt = 0
   let $InitText = ' '

   while #l < #max_RV2boxes
      put #InitAmt into PrRV2_Area(#l) PRV2_Amt
      add 1 to #l
   end-while

   while #fl < #max_RV2footnotes
      put #InitAmt into RV2_Other_Info(#fl) R2OI_Amt
      add 1 to #fL
   end-while
   move 0 to #RV2_FNCount

end-procedure

begin-procedure Save-Current-Data

  move &S.Company to $Company
  move &S.Reporting_ID to $ReportingID
  move &S.Reporting_ID to $CurrentReportingID

  move &S.Wage_Loss_Plan to $WageLossPlan
  let $Province = rtrim(&S.Province,' ')
  move $Province to $CurrentProvince

  move &S.Taxform_ID to $TaxformID

  move &E.EmplID to $EmplID
  move &E.SIN to $SIN
  move &E.SLIP_Surname to $Surname
  let $Surname = rtrim($Surname, ' ')
  move &E.SLIP_First_Name to $FirstName
  let $FirstName = rtrim($FirstName, ' ')
  move &E.SLIP_Initial to $Initial
  let $Location = rtrim(&E.Location,' ')
  move $Location to $CurrentLocation

  move &E.DeptID to $DeptID
  move &E.DeptID to $CurrentDeptID
  move &S.Employment_Code to $EmploymentCode
  let $sin_contrb_spouse  = rtrim(&S.SIN_CONTRB_SPOUSE, ' ')

  evaluate &S.YE_SLIP_PROCESS
    when = 'A'
     let $slip_process = $Ctx910aa_Amended
    when = 'C'
     let $slip_process = $Ctx910aa_Cancelled
    when = 'O'
     let $slip_process = $Ctx910aa_Original
    when = 'N'
     let $slip_process = $Ctx910aa_Issue_New
    when-other
     let $slip_process = ''
  end-evaluate
  move &S.SEQUENCE_NUMBER to $Seq_Num 99

  move &S.CAN_YE_SLIP_SEQ to #YE_Slip_Seq

end-procedure


begin-procedure Save-Current-Data-Amend

  move &SH.Company to $Company
  move &SH.Reporting_ID to $ReportingID
  move &SH.Wage_Loss_Plan to $WageLossPlan
  let $Province = rtrim(&SH.Province,' ')
  move &SH.Taxform_ID to $TaxformID

  move &EH.EmplID to $EmplID
  move &EH.SIN to $SIN
  move &EH.SLIP_Surname to $Surname
  let $Surname = rtrim($Surname, ' ')
  move &EH.SLIP_First_Name to $FirstName
  let $FirstName = rtrim($FirstName, ' ')
  move &EH.SLIP_Initial to $Initial
  let $Location = rtrim(&EH.Location,' ')
  move &EH.DeptID to $DeptID
  move &SH.Employment_Code to $EmploymentCode
  let $sin_contrb_spouse  = rtrim(&SH.SIN_CONTRB_SPOUSE, ' ')

  evaluate &SH.YE_SLIP_PROCESS
    when = 'A'
     let $slip_process = $Ctx910aa_Amended
    when = 'C'
     let $slip_process = $Ctx910aa_Cancelled
    when = 'O'
     let $slip_process = $Ctx910aa_Original
    when = 'N'
     let $slip_process = $Ctx910aa_Issue_New
    when-other
     let $slip_process = ''
  end-evaluate
  move &SH.SEQUENCE_NUMBER to $Seq_Num 99

end-procedure

begin-procedure Print-Location-Heading
  if $PrintDetail = 'Y'
     print $Ctx910aa_Loc_code    (+1,3)
     print $Location (0,+2)
  end-if
end-procedure

begin-procedure Print-Department-Heading
  if $PrintDetail = 'Y'
     print $Ctx910aa_Dept        (+1,3)
     print $DeptID (0,+2)
  end-if
end-procedure

begin-procedure Print-Province-Heading
  if $PrintDetail = 'Y'
     print $Ctx910aa_Province    (+1,3)
     print $Province (0,+2)
  end-if
end-procedure


begin-procedure Print-ReportID-Heading
   if (($RptForm = 'R') OR
       ($RptForm = 'V'))
      print $Ctx910aa_Qin          (+1,3)
   else
      print $Ctx910aa_Rca          (+1,3)
   end-if
   print $ReportingID (0,+2)
end-procedure

begin-procedure Ignore
end-procedure

begin-procedure Convert-Parameters

  move $RC_CAN_YE.Audit_Ind       to  $RptForm
  move $RC_CAN_YE.Audit_Sort_Ind  to  $SortInd
  move 'Y'                        to  $PrintDetail

  if $RptForm = 'X'

        let $RptForm = 'TARV'
        let $Taxform1 = 'T'
        let $Taxform2 = 'A'
        let $Taxform3 = 'R'
        let $Taxform4 = 'V'

        if $RC_CAN_YE.Audit_Sort_Ind =  'L'
                   let $SortSequence =
                        'S.COMPANY ASC, E.LOCATION ASC, E.SLIP_SURNAME ASC,
                             E.SLIP_FIRST_NAME ASC, E.EMPLID ASC, S.TAXFORM_ID ASC, S.CAN_YE_SLIP_SEQ ASC'
        end-if

        if $RC_CAN_YE.Audit_Sort_Ind =  'D'
                        let $SortSequence =
                'S.COMPANY ASC, E.DEPTID ASC, E.SLIP_SURNAME ASC,
                     E.SLIP_FIRST_NAME ASC, E.EMPLID ASC, S.TAXFORM_ID ASC , S.CAN_YE_SLIP_SEQ ASC'

        end-if

        if $RC_CAN_YE.Audit_Sort_Ind =  'N'

                let $SortSequence =
                        'S.COMPANY ASC, E.SLIP_SURNAME ASC, E.SLIP_FIRST_NAME ASC,
                               E.EMPLID ASC, S.TAXFORM_ID ASC , S.CAN_YE_SLIP_SEQ ASC'
        end-if

        if $RC_CAN_YE.Audit_Sort_Ind =  'P'
                        let $SortSequence =
                'S.COMPANY ASC, S.PROVINCE ASC, E.SLIP_SURNAME ASC,
                     E.SLIP_FIRST_NAME ASC, E.EMPLID ASC, S.TAXFORM_ID ASC , S.CAN_YE_SLIP_SEQ ASC'

        end-if

else

       let $Taxform1 = $RptForm
       let $Taxform2 = $RptForm
       let $Taxform3 = $RptForm
       let $Taxform4 = $RptForm
       let $SortSequence = 'S.COMPANY ASC, S.REPORTING_ID ASC,
          E.SLIP_SURNAME ASC, E.SLIP_FIRST_NAME ASC, E.EMPLID ASC , S.CAN_YE_SLIP_SEQ ASC'

end-if

end-procedure


#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'rotname1.sqc'  !Rotate-Name procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#ifdef PRCSSCHD
#Include 'ctxrctl1.sqc' ! Get-Can-Tax YE Report Parameters
#Include 'stdapi.sqc'    !Update Process API
#Include 'txrnctl1.sqc'  !Process Scheduler Run Controls
#endif
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
