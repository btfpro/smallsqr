! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
! DDDVIEWS: Audit Views                                                *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************

#define C_One          3
#define C_Two          34


#IFDEF ORACLE

!----------------------------------------------------------------------!
begin-procedure DDDVIEWS-View-in-DD-and-not-in-DB
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(VIEWS-1) Views defined in the Application Designer '
      || 'and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Views1_RecName
A.OBJECTOWNERID    &Views1_ObjectOwnerid

   do Views1-Page-Control
   print &Views1_RecName      (+1,{C_One})
   print &Views1_ObjectOwnerid ( 0,{C_Two})

FROM PSRECDEFN A
WHERE A.RECTYPE IN (1, 6)
AND ((A.SQLTABLENAME = ' '
    AND NOT EXISTS
      (SELECT 'X'
      FROM USER_VIEWS B
      WHERE B.VIEW_NAME = 'PS_'||A.RECNAME))
OR (A.SQLTABLENAME <> ' '
    AND NOT EXISTS
      (SELECT 'X'
      FROM USER_VIEWS C
      WHERE C.VIEW_NAME = A.SQLTABLENAME)))
ORDER BY RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Views1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'Ownerid'                   ( 0,{C_Two})
      print '---------------'           (+1,{C_One})
      print '-------'                   ( 0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDVIEWS-View-in-DB-and-not-in-DD
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(VIEWS-2) Views defined in the Database '
      || 'and not found in the Application Designer:'

begin-SELECT on-Error=Rpt-SQL-Error
A.VIEW_NAME             &Views2_SQLView

   let $vwname   = &Views2_SQLview
   let $vwname415 = substr($vwname,4,15)
   let $vwname115 = substr($vwname,1,15)
   let $exists = ''
   if substr($vwname,1,3) = 'PS_'
     do Get-Sysviews-for-PS
   else
     do Get-Sysviews-for-Rest
   end-if

   if $exists = ''
     do Views2-Page-Control
     print &Views2_SQLView   (+1,{C_One})
   end-if


FROM USER_VIEWS A
WHERE A.VIEW_NAME like 'PS%'
ORDER BY VIEW_NAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure Get-Sysviews-for-PS
!----------------------------------------------------------------------!

begin-SELECT on-Error=Rpt-SQL-Error
'X'                &View21_Exists
   let $Exists  = &View21_Exists
FROM PSRECDEFN B
WHERE B.RECNAME = $vwname415
AND   B.RECTYPE IN (1, 6)
end-SELECT

end-procedure

!----------------------------------------------------------------------!
begin-procedure Get-Sysviews-for-rest
!----------------------------------------------------------------------!

begin-SELECT on-Error=Rpt-SQL-Error
'X'                &View3_Exists
   let $Exists  = &View3_Exists
FROM PSRECDEFN C
WHERE C.RECNAME = $vwname115
AND   C.RECTYPE IN (1, 6)
end-SELECT

end-procedure


begin-procedure Views2-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'View Name'                 (+2,{C_One})
      print '------------------'        (+1,{C_One})
   end-if
end-procedure

#ENDIF


#IFDEF DB2UNIX

!----------------------------------------------------------------------!
begin-procedure DDDVIEWS-View-in-DD-and-not-in-DB
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(VIEWS-1) Views defined in the Application Designer '
      || 'and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Views1_RecName
A.OBJECTOWNERID    &Views1_ObjectOwnerid

   do Views1-Page-Control
   print &Views1_RecName      (+1,{C_One})
   print &Views1_ObjectOwnerid ( 0,{C_Two})

FROM PSRECDEFN A
WHERE A.RECTYPE IN (1, 6)
AND ((A.SQLTABLENAME = ' '
    AND NOT EXISTS
      (SELECT 'X'
      FROM SYSCAT.TABLES B
      WHERE B.TABSCHEMA = USER
      AND B.TABNAME = CHAR('PS_'||A.RECNAME)
      AND B.TYPE = CHAR('V')))
OR (A.SQLTABLENAME <> ' '
    AND NOT EXISTS
      (SELECT 'X'
      FROM SYSCAT.TABLES C
      WHERE C.TABSCHEMA = USER
      AND C.TABNAME = CHAR(A.SQLTABLENAME)
      AND C.TYPE = CHAR('V'))))
ORDER BY RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Views1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'Ownerid'                   ( 0,{C_Two})
      print '---------------'           (+1,{C_One})
      print '-------'                   ( 0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDVIEWS-View-in-DB-and-not-in-DD
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(VIEWS-2) Views defined in the Database '
      || 'and not found in the Application Designer:'

begin-SELECT on-Error=Rpt-SQL-Error
A.TABNAME             &Views2_SQLView

   let $vwname   = &Views2_SQLview
   let $vwname415 = substr($vwname,4,15)
   let $vwname115 = substr($vwname,1,15)
   let $exists = ''
   if substr($vwname,1,3) = 'PS_'
     do Get-Sysviews-for-PS
   else
     do Get-Sysviews-for-Rest
   end-if

   if $exists = ''
     do Views2-Page-Control
     print &Views2_SQLView   (+1,{C_One})
   end-if

FROM SYSCAT.TABLES A
WHERE A.TYPE = 'V'
AND A.TABSCHEMA = USER
AND A.TABNAME LIKE 'PS%'
ORDER BY TABNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure Get-Sysviews-for-PS
!----------------------------------------------------------------------!

begin-SELECT on-Error=Rpt-SQL-Error
'X'                &View21_Exists
   let $Exists  = &View21_Exists
FROM PSRECDEFN B
WHERE B.RECNAME = $vwname415
AND   B.RECTYPE IN (1, 6)
end-SELECT

end-procedure

!----------------------------------------------------------------------!
begin-procedure Get-Sysviews-for-rest
!----------------------------------------------------------------------!

begin-SELECT on-Error=Rpt-SQL-Error
'X'                &View3_Exists
   let $Exists  = &View3_Exists
FROM PSRECDEFN C
WHERE C.RECNAME = $vwname115
AND   C.RECTYPE IN (1, 6)
end-SELECT

end-procedure


begin-procedure Views2-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'View Name'                 (+2,{C_One})
      print '------------------'        (+1,{C_One})
   end-if
end-procedure

#ENDIF


#IFDEF DB2

begin-procedure DDDVIEWS-View-in-DD-and-not-in-DB
do DB2VIEWS-View-in-DD-and-not-in-DB
end-procedure

begin-procedure DDDVIEWS-View-in-DB-and-not-in-DD
do DB2VIEWS-View-in-DB-and-not-in-DD
end-procedure

!----------------------------------------------------------------------!
begin-procedure DB2VIEWS-View-in-DD-and-not-in-DB
!----------------------------------------------------------------------!

   move 0 to #rows
   let $AuditDescr = '(VIEWS-1) Views defined in the Application Designer '
      || 'and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME    &Views1_RecName
A.SQLTABLENAME    &A.Sqlviewname
A.OBJECTOWNERID   &A.ObjectOwnerid

   if rtrim(&A.Sqlviewname,' ') = ''
     let $view1_vwname = 'PS_'||&Views1_RecName
   else
     let $view1_vwname = &A.Sqlviewname
   end-if
   do  Get-SysViews
   if $exists  = ''
     do Views1-Page-Control
     print &Views1_RecName   (+1,{C_One})
     print &A.ObjectOwnerid  ( 0,{C_Two})
   end-if

FROM  PSRECDEFN A
WHERE A.RECTYPE IN (1, 6)
ORDER BY A.RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

Begin-Procedure Get-Sysviews

let $Exists = ''

begin-SELECT on-Error=Rpt-SQL-Error
'X'                 &Views1_Exists
  let $Exists   = &Views1_Exists
FROM SYSIBM.SYSTABLES B
WHERE B.CREATOR = CURRENT SQLID
AND   B.NAME = $view1_vwname
AND   B.TYPE = 'V'
end-SELECT

end-procedure


begin-procedure Views1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'Ownerid'                   ( 0,{C_Two})
      print '---------------'           (+1,{C_One})
      print '-------'                   ( 0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DB2VIEWS-View-in-DB-and-not-in-DD
!----------------------------------------------------------------------!

   move 0 to #rows
   let $AuditDescr = '(VIEWS-2) Views defined in the Database '
      || 'and not found in the Application Designer:'

begin-SELECT on-Error=Rpt-SQL-Error
A.NAME     &Views2_SQLView

   let $vwname   = &Views2_SQLview
   let $vwname415 = substr($vwname,4,15)
   let $vwname115 = substr($vwname,1,15)
   let $exists = ''
   if substr($vwname,1,3) = 'PS_'
     do Get-Sysviews-for-PS
   else
     do Get-Sysviews-for-Rest
   end-if

   if $exists = ''
     do Views2-Page-Control
     print &Views2_SQLView   (+1,{C_One})
   end-if

FROM SYSIBM.SYSTABLES A
WHERE A.CREATOR = CURRENT SQLID
AND A.NAME LIKE 'PS%'
AND A.TYPE = 'V'
ORDER BY A.NAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure Get-Sysviews-for-PS
!----------------------------------------------------------------------!

begin-SELECT on-Error=Rpt-SQL-Error
'X'                &View21_Exists
   let $Exists  = &View21_Exists
FROM PSRECDEFN B
WHERE B.RECNAME = $vwname415
AND   B.RECTYPE IN (1, 6)
end-SELECT

end-procedure

!----------------------------------------------------------------------!
begin-procedure Get-Sysviews-for-rest
!----------------------------------------------------------------------!

begin-SELECT on-Error=Rpt-SQL-Error
'X'                &View3_Exists
   let $Exists  = &View3_Exists
FROM PSRECDEFN C
WHERE C.RECNAME = $vwname115
AND   C.RECTYPE IN (1, 6)
end-SELECT

end-procedure



begin-procedure Views2-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'View Name'                 (+2,{C_One})
      print '------------------'        (+1,{C_One})
   end-if
end-procedure

#ENDIF

#IFDEF DB2400

begin-procedure DDDVIEWS-View-in-DD-and-not-in-DB
do DB2VIEWS-View-in-DD-and-not-in-DB
end-procedure

begin-procedure DDDVIEWS-View-in-DB-and-not-in-DD
do DB2VIEWS-View-in-DB-and-not-in-DD
end-procedure

!----------------------------------------------------------------------!
begin-procedure DB2VIEWS-View-in-DD-and-not-in-DB
!----------------------------------------------------------------------!

   move 0 to #rows
   let $AuditDescr = '(VIEWS-1) Views defined in the Application Designer '
      || 'and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME    &Views1_RecName
A.SQLTABLENAME    &A.Sqlviewname
A.OBJECTOWNERID   &A.ObjectOwnerid

   if rtrim(&A.Sqlviewname,' ') = ''
     let $view1_vwname = 'PS_'||&Views1_RecName
   else
     let $view1_vwname = &A.Sqlviewname
   end-if
   do  Get-SysViews
   if $exists  = ''
     do Views1-Page-Control
     print &Views1_RecName   (+1,{C_One})
     print &A.ObjectOwnerid  ( 0,{C_Two})
   end-if

FROM  PSRECDEFN A
WHERE A.RECTYPE IN (1, 6)
ORDER BY A.RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

Begin-Procedure Get-Sysviews

let $Exists = ''

begin-SELECT on-Error=Rpt-SQL-Error
'X'                 &Views1_Exists
  let $Exists   = &Views1_Exists
FROM SYSTABLES B
WHERE B.CREATOR = user
AND   B.NAME = $view1_vwname
AND   B.TYPE = 'V'
end-SELECT

end-procedure


begin-procedure Views1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'Ownerid'                   ( 0,{C_Two})
      print '---------------'           (+1,{C_One})
      print '-------'                   ( 0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DB2VIEWS-View-in-DB-and-not-in-DD
!----------------------------------------------------------------------!

   move 0 to #rows
   let $AuditDescr = '(VIEWS-2) Views defined in the Database '
      || 'and not found in the Application Designer:'

begin-SELECT on-Error=Rpt-SQL-Error
A.NAME     &Views2_SQLView

   let $vwname   = &Views2_SQLview
   let $vwname415 = substr($vwname,4,15)
   let $vwname115 = substr($vwname,1,15)
   let $exists = ''
   if substr($vwname,1,3) = 'PS_'
     do Get-Sysviews-for-PS
   else
     do Get-Sysviews-for-Rest
   end-if

   if $exists = ''
     do Views2-Page-Control
     print &Views2_SQLView   (+1,{C_One})
   end-if

FROM SYSTABLES A
WHERE A.CREATOR = USER
AND A.NAME LIKE 'PS%'
AND A.TYPE = 'V'
ORDER BY A.NAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure Get-Sysviews-for-PS
!----------------------------------------------------------------------!

begin-SELECT on-Error=Rpt-SQL-Error
'X'                &View21_Exists
   let $Exists  = &View21_Exists
FROM PSRECDEFN B
WHERE B.RECNAME = $vwname415
AND   B.RECTYPE IN (1, 6)
end-SELECT

end-procedure

!----------------------------------------------------------------------!
begin-procedure Get-Sysviews-for-rest
!----------------------------------------------------------------------!

begin-SELECT on-Error=Rpt-SQL-Error
'X'                &View3_Exists
   let $Exists  = &View3_Exists
FROM PSRECDEFN C
WHERE C.RECNAME = $vwname115
AND   C.RECTYPE IN (1, 6)
end-SELECT

end-procedure



begin-procedure Views2-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'View Name'                 (+2,{C_One})
      print '------------------'        (+1,{C_One})
   end-if
end-procedure

#ENDIF

#IFDEF INFORMIX

!----------------------------------------------------------------------!
begin-procedure DDDVIEWS-View-in-DD-and-not-in-DB
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(VIEWS-1) Views defined in the Application Designer '
      || 'and not found in the Database:'

   do InfVwChk1

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure InfVwChk1
!----------------------------------------------------------------------!

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &View1_RecName
A.SQLTABLENAME     &View1_SQLTName
A.OBJECTOWNERID    &View1_ObjectOwnerid

   move &View1_RecName  to $PSRecName
   move &View1_SQLTName to $PSSQLName

   LET $PSRecName = 'ps_' || LOWER($PSRecName)
   LET $PSSQLName = LOWER($PSSQLName)
   LET $IsVwPrsnt = 'N'

   if $PSSQLName <> ' '
      LET $PSColName = $PSSQLName
      do FindInfVw1
      if $IsVwPrsnt = 'N'
         do Views1-Page-Control
         print &View1_RecName  (+1,{C_One})
         print &View1_ObjectOwnerid (0,{C_Two})
      end-if
   else
      LET $PSColName = $PSRecName
      do FindInfVw1
      if $IsVwPrsnt = 'N'
         do Views1-Page-Control
         print &View1_RecName (+1,{C_One})
         print &View1_ObjectOwnerid (0,{C_Two})
      end-if
   end-if

FROM PSRECDEFN A
WHERE A.RECTYPE in (1, 6)
ORDER BY RECNAME
end-SELECT
end-procedure


!----------------------------------------------------------------------!
begin-procedure FindInfVw1
!----------------------------------------------------------------------!
begin-SELECT
'Y' &SelVw
   LET $IsVwPrsnt = &SelVw
FROM 'informix'.SYSTABLES C
WHERE C.TABTYPE = 'V'
AND C.OWNER = USER
AND C.TABNAME = $PSColName
end-SELECT
end-procedure

begin-procedure Views1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'Ownerid'                   ( 0,{C_Two})
      print '---------------'           (+1,{C_One})
      print '-------'                   ( 0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDVIEWS-View-in-DB-and-not-in-DD
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(VIEWS-2) Views defined in the Database '
      || 'and not found in the Application Designer:'

   do InfVwChk2

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Views2-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'View Name'                 (+2,{C_One})
      print '------------------'        (+1,{C_One})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure InfVwChk2
!----------------------------------------------------------------------!
begin-Select on-Error=Rpt-SQL-Error

A.TABNAME          &View2_SQLView

   move &View2_SQLView to $PSVwName
   LET $PSVwName = UPPER($PSVwName)
   LET $IsVRecPrsnt = 'N'
   LET $PSTabPrefix = SUBSTR($PSVwName, 1, 3)

   if $PSTabPrefix = 'PS_'
      LET $PSColName = SUBSTR($PSVwName, 4, 9999)
      do FindInfVw2
      if $IsVRecPrsnt = 'N'
         do Views2-Page-Control
         print &View2_SQLView (+1,{C_One})
      end-if
   else
      LET $PSColName = $PSVwName
      do FindInfVw2
      if $IsVRecPrsnt = 'N'
         do Views2-Page-Control
         print &View2_SQLView (+1,{C_One})
      end-if
   end-if

FROM 'informix'.SYSTABLES A
WHERE A.TABTYPE = 'V'
AND   A.OWNER   = USER
ORDER BY A.TABNAME
end-SELECT

end-procedure

!----------------------------------------------------------------------!
begin-procedure FindInfVw2
!----------------------------------------------------------------------!
begin-SELECT
'Y' &SelVRec
   LET $IsVRecPrsnt = &SelVRec
FROM PSRECDEFN C
WHERE C.RECNAME = $PSColName
AND   C.RECTYPE in (1, 6)
end-SELECT
end-procedure

#ENDIF

#IFDEF SYBASE

!----------------------------------------------------------------------!
begin-procedure DDDVIEWS-View-in-DD-and-not-in-DB
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(VIEWS-1) Views defined in the Application Designer '
      || 'and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Views1_RecName
A.OBJECTOWNERID    &Views1_ObjectOwnerid

   do Views1-Page-Control
   print &Views1_RecName      (+1,{C_One})
   print &Views1_ObjectOwnerid ( 0,{C_Two})

FROM PSRECDEFN A
WHERE A.RECTYPE IN (1, 6)
AND ((A.SQLTABLENAME = ' '
    AND NOT EXISTS
      (SELECT 'X'
      FROM SYSOBJECTS B
      WHERE B.NAME = 'PS_'+ A.RECNAME
    AND B.TYPE = 'V'))
OR (A.SQLTABLENAME <> ' '
    AND NOT EXISTS
      (SELECT 'X'
      FROM SYSOBJECTS C
      WHERE C.NAME = A.SQLTABLENAME
    AND C.TYPE = 'V')))

ORDER BY A.RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Views1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'Ownerid'                   ( 0,{C_Two})
      print '---------------'           (+1,{C_One})
      print '-------'                   ( 0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDVIEWS-View-in-DB-and-not-in-DD
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(VIEWS-2) Views defined in the Database '
      || 'and not found in the Application Designer:'

   do SybVwChk

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Views2-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'View Name'                 (+2,{C_One})
      print '------------------'        (+1,{C_One})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure SybVwChk
!----------------------------------------------------------------------!
begin-Select on-Error=Rpt-SQL-Error

A.NAME          &View2_SQLView

   move &View2_SQLView to $PSVwName
   LET $PSVwName = UPPER($PSVwName)
   LET $IsVRecPrsnt = 'N'
   LET $PSTabPrefix = SUBSTR($PSVwName, 1, 3)

   if $PSTabPrefix = 'PS_'
      LET $PSColName = SUBSTR($PSVwName, 4, 9999)
      do FindSybVw
      if $IsVRecPrsnt = 'N'
         do Views2-Page-Control
         print &View2_SQLView (+1,{C_One})
      end-if
   else
      LET $PSColName = $PSVwName
      do FindSybVw
      if $IsVRecPrsnt = 'N'
         do Views2-Page-Control
         print &View2_SQLView (+1,{C_One})
      end-if
   end-if

FROM SYSOBJECTS A
WHERE A.TYPE = 'V'
AND upper(substring(A.NAME, 1, 3)) <> 'SYS'
ORDER BY A.NAME
end-SELECT

end-procedure

!----------------------------------------------------------------------!
begin-procedure FindSybVw
!----------------------------------------------------------------------!
begin-SELECT
'Y' &SelVRec
   LET $IsVRecPrsnt = &SelVRec
FROM PSRECDEFN C
WHERE C.RECNAME = $PSColName
AND   C.RECTYPE in (1, 6)
end-SELECT
end-procedure

#ENDIF

#IFDEF MICROSOFT

!----------------------------------------------------------------------!
begin-procedure DDDVIEWS-View-in-DD-and-not-in-DB
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(VIEWS-1) Views defined in the Application Designer '
      || 'and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Views1_RecName
A.OBJECTOWNERID    &Views1_ObjectOwnerid

   do Views1-Page-Control
   print &Views1_RecName      (+1,{C_One})
   print &Views1_ObjectOwnerid ( 0,{C_Two})

FROM PSRECDEFN A
WHERE A.RECTYPE IN (1, 6)
AND ((A.SQLTABLENAME = ' '
    AND NOT EXISTS
      (SELECT 'X'
      FROM SYSOBJECTS B
      WHERE B.NAME = 'PS_'+ A.RECNAME
    AND B.TYPE = 'V'))
OR (A.SQLTABLENAME <> ' '
    AND NOT EXISTS
      (SELECT 'X'
      FROM SYSOBJECTS C
      WHERE C.NAME = A.SQLTABLENAME
    AND C.TYPE = 'V')))

ORDER BY A.RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Views1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'Ownerid'                   ( 0,{C_Two})
      print '---------------'           (+1,{C_One})
      print '-------'                   ( 0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDVIEWS-View-in-DB-and-not-in-DD
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(VIEWS-2) Views defined in the Database '
      || 'and not found in the Application Designer:'

   do MSVwChk

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Views2-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'View Name'                 (+2,{C_One})
      print '------------------'        (+1,{C_One})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure MSVwChk
!----------------------------------------------------------------------!
begin-Select on-Error=Rpt-SQL-Error

convert(varchar(128),A.NAME)          &View2_SQLView

   move &View2_SQLView to $PSVwName
   LET $PSVwName = UPPER($PSVwName)
   LET $IsVRecPrsnt = 'N'
   LET $PSTabPrefix = SUBSTR($PSVwName, 1, 3)

   if $PSTabPrefix = 'PS_'
      LET $PSColName = SUBSTR($PSVwName, 4, 9999)
      do FindMSVw
      if $IsVRecPrsnt = 'N'
         do Views2-Page-Control
         print &View2_SQLView (+1,{C_One})
      end-if
   else
      LET $PSColName = $PSVwName
      do FindMSVw
      if $IsVRecPrsnt = 'N'
         do Views2-Page-Control
         print &View2_SQLView (+1,{C_One})
      end-if
   end-if

FROM SYSOBJECTS A
WHERE A.TYPE = 'V'
AND substring(A.NAME ,1 ,3) <> 'SYS' and A.NAME like 'PS%'
ORDER BY A.NAME
end-SELECT

end-procedure

!----------------------------------------------------------------------!
begin-procedure FindMSVw
!----------------------------------------------------------------------!
begin-SELECT
'Y' &SelVRec
   LET $IsVRecPrsnt = &SelVRec
FROM PSRECDEFN C
WHERE C.RECNAME = $PSColName
AND   C.RECTYPE in (1, 6)
end-SELECT
end-procedure

#ENDIF
