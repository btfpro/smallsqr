!-----------------------------------------------------------------------
!  STES011: Stock Purchase Disposition Survey
!-----------------------------------------------------------------------
!
!               Confidentiality Information:
!
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!-----------------------------------------------------------------------
!
!          $Date:  2007/06/11:04:11:25                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689716                                              !
!
!-----------------------------------------------------------------------
! Program Descr:  Prints Stock Purchase Sale/Transfer Survey
!                 for Each Employee
!-----------------------------------------------------------------------
! Prompts:       Stock ID, Stock Plan, Offering ID, Period End Date
!                Employee
! Options:       Sort by Process Group, Name
! Tables:        RUN_CNTL_ST,PS_COMPANY_TBL ,PS_JOB
!                PS_PERSONAL_DATA and PS_ST_ESPP_DISPOSN
! Sorts:         Country/Postal Code/Name
!-----------------------------------------------------------------------

  #include 'setenv.sqc'    !Set environment
  #define COMPANY_TBL
  #define COUNTRY_TBL
    
Begin-Setup

  #include 'ptpsp125.sqc'   !Printer and page-size initialization
  
End-Setup

!-----------------------------------------------------------------------
Begin-Report
!-----------------------------------------------------------------------

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Successful-EOJ

End-Report

!----------------------------------------------------------------------!
! Procedure: Report-Translation                                        !
! Desc:      This procedure gets the report language and headers       !
!----------------------------------------------------------------------!
Begin-Procedure Report-Translation

  do Init_Report_Translation ('STOCK', $language_cd)
  do Append_Report_Translation ($ReportID)
  
  do Get_Field_Information ('STOCK'  ,'PURCHASE',        $PurchaseLbl,      #DW)
  do Get_Field_Information ('STOCK'  ,'SHARES',          $SharesLbl,        #DW)
  do Get_Field_Information ('STOCK'  ,'DATE',            $PurchaseDateLbl,  #DW)
  do Get_Field_Information ('STOCK'  ,'CURRENCY_CD',     $CurrencyLbl,      #DW)
  do Get_Field_Information ('STOCK'  ,'TOTAL',           $TotalLbl,         #DW)
  do Get_Field_Information ('STOCK'  ,'STOCK_ID',        $StockIdLbl,       #DW)
  do Get_Field_Information ('STOCK'  ,'STOCK_PLAN',      $StockPlanLbl,     #DW)
  do Get_Field_Information ('STOCK'  ,'EMPLID',          $EmplidLbl,        #DW)
  do Get_Field_Information ('STOCK'  ,'PURCHASED',       $PurchasedLbl,     #DW)
  do Get_Field_Information ('STOCK'  ,'COMPANY',         $Company2Lbl,      #DW)

  do Get_Field_Information ('STES011','STES011',         $ReportTitle,      #DW)
  do Get_Field_Information ('STES011','COUNTRY',         $CountryLbl,       #DW)
  do Get_Field_Information ('STES011','PRINT_DATE',      $PrintDateLbl,     #DW)
  do Get_Field_Information ('STES011','PARTIPANT_INFO',  $PartipantInfoLbl, #DW)
  do Get_Field_Information ('STES011','ESPP_PENDING',    $EsppPendingLbl,   #DW)
  do Get_Field_Information ('STES011','ESPP_AVAILABLE',  $EsppAvailableLbl, #DW)
  do Get_Field_Information ('STES011','FEDERAL_EIN',     $FederalEinLbl,    #DW)
  do Get_Field_Information ('STES011','COMMENTS',        $CommentsLbl,      #DW)
  do Get_Field_Information ('STES011','TRANSFERED',      $TransferedLbl,    #DW)
  do Get_Field_Information ('STES011','SEE',             $SeeLbl,           #DW)
  do Get_Field_Information ('STES011','AVAILABLE',       $AvailableLbl,     #DW)
  do Get_Field_Information ('STES011','SOLD_OR',         $SoldOrLbl,        #DW)
  do Get_Field_Information ('STES011','SALE',            $SaleLbl,          #DW)
  do Get_Field_Information ('STES011','CODE',            $CodeLbl,          #DW)
  do Get_Field_Information ('STES011','TO_SELL',         $ToSellLbl,        #DW)
  do Get_Field_Information ('STES011','COMMENTS',        $Comments2Lbl,     #DW)
  do Get_Field_Information ('STES011','BELOW',           $BelowLbl,         #DW)
  do Get_Field_Information ('STES011','FILL',            $FillLbl,          #DW)
  do Get_Field_Information ('STES011','SIGNATURE',       $SignatureLbl,     #DW)
  do Get_Field_Information ('STES011','NATIONAL_ID',     $HnidLbl,          #DW)
  do Get_Field_Information ('STES011','TRANSFER',        $TransferLbl,      #DW)
  do Get_Field_Information ('STES011','SOURCE',          $SourceLbl,        #DW)
  do Get_Field_Information ('STES011','PRICE',           $PriceLbl,         #DW)
  do Get_Field_Information ('STES011','TYPE',            $TypeLbl,          #DW)

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Init-Report
!-----------------------------------------------------------------------

  move 'STES011' to $ReportID
  display $ReportTitle

  !do Get-Report-Language
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Define-Prcs-Vars
  do Get-Run-Control-Parms
  do Get-Report-Language

  if $prcs_process_instance = ''
    do Get-Stock-Values
  else
     do Get-SQR-Parms
  end-if

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Get-Stock-Values
!-----------------------------------------------------------------------

  INPUT $RC_STOCK_ID            MAXLEN=10 'Enter Stock ID'        TYPE=CHAR
  INPUT $RC_STOCK_PLAN          MAXLEN=10 'Enter Stock Plan ID'   TYPE=CHAR
  INPUT $RC_OFFERING_ID         MAXLEN=10 'Enter Offering ID'     TYPE=CHAR
  INPUT $RC_OFFERING_ID         MAXLEN=11 'Enter Offering ID'     TYPE=CHAR
  INPUT $RC_PERIOD_END_DT       MAXLEN=11 'Enter Period End Date' TYPE=DATE
  INPUT $RC_DISPOSN_SRVY_SORT   MAXLEN=1  'Enter Survey Sort'     TYPE=CHAR
  INPUT $RC_DISPOSN_SRVY_TYPE   MAXLEN=1  'Enter Survey Type'     TYPE=CHAR

  INPUT $RC_RUNTYPE             MAXLEN=1  'Enter Run Type'        TYPE=CHAR

  if $RC_RUNTYPE = 'E'
    INPUT $RC_EMPLID           MAXLEN=11 'Enter Employee ID'     TYPE=CHAR
  else
    INPUT $RC_PRCSGRP          MAXLEN=11 'Enter Process Group'   TYPE=CHAR
  end-if

  if $RC_REPRINT_PROMPT = 'Y'
    INPUT $RC_FROMDATE         MAXLEN=11 'Enter From Date'       TYPE=DATE
    INPUT $RC_THRUDATE         MAXLEN=11 'Enter Through Date'    TYPE=DATE
  end-if

  UpperCase $RC_STOCK_ID
  UpperCase $RC_STOCK_PLAN
  UpperCase $RC_OFFERING_ID
  UpperCase $RC_OFFERING_ID
  UpperCase $RC_PERIOD_END_DT
  UpperCase $RC_DISPOSN_SRVY_SORT
  UpperCase $RC_RUNTYPE
  UpperCase $RC_EMPLID
  UpperCase $RC_PRCSGRP
  UpperCase $RC_FROMDATE
  UpperCase $RC_THRUDATE

End-Procedure

!-----------------------------------------------------------------------
! Procedure:  Process-Main
! Descr:      This is where all required data is selected
!-----------------------------------------------------------------------
Begin-Procedure Process-Main

  let $SQLQuote         = ''''
  let $WhereEmplid      = ''
  let $WhereStockPlan   = ''
  let $WhereOfferID     = ''
  let $WherePeriodEndDt = ''
  let $WherePrcssGrp    = ''
  let $WhereSort        = ''
  let $WhereSurveyDt    = ''

  if ltrim($RC_STOCK_PLAN, ' ') <> ''
    if $RC_DISPOSN_SRVY_TYPE   = 'P'
      let $WhereStockPlan = ' and A.STOCK_PLAN = '||$SQLQuote || $RC_STOCK_PLAN || $SQLQuote
    else
      let $WhereStockPlan = ' and AA.STOCK_PLAN = '||$SQLQuote || $RC_STOCK_PLAN || $SQLQuote
    end-if
  else
    let $WhereStockPlan = ''
  end-if

  if ltrim($RC_OFFERING_ID, ' ') <> ''
    if $RC_DISPOSN_SRVY_TYPE = 'P'
      let $WhereOfferID = ' and A.OFFERING_ID = '||$SQLQuote || $RC_OFFERING_ID || $SQLQuote
    else
      let $WhereOfferID = ' and AA.OFFERING_ID = '||$SQLQuote || $RC_OFFERING_ID || $SQLQuote
    end-if
  else
    let $WhereOfferID   = ''
  end-if

  if ltrim($RC_PERIOD_END_DT, ' ') <> ''
    if $RC_DISPOSN_SRVY_TYPE   = 'P'
      let $WherePeriodEndDt = ' and A.PERIOD_END_DT = '||$SQLQuote || $RC_PERIOD_END_DT || $SQLQuote
    else
      let $WherePeriodEndDt = ' and AA.PERIOD_END_DT = '||$SQLQuote || $RC_PERIOD_END_DT || $SQLQuote
    end-if
  else
    let $WherePeriodEndDt   = ''
  end-if

  if $RC_DISPOSN_SRVY_SORT = 'C'
    if $RC_DISPOSN_SRVY_TYPE   = 'P'
      let $WhereSort   = 'ORDER BY B.COUNTRY, B.POSTAL, C.NAME '
    else
      let $WhereSort   = 'ORDER BY BB.COUNTRY, BB.POSTAL, CC.NAME '
    end-if
  end-if

  if $RC_DISPOSN_SRVY_SORT = 'N'
    if $RC_DISPOSN_SRVY_TYPE   = 'P'
      let $WhereSort   = 'ORDER BY C.NAME '
    else
      let $WhereSort   = 'ORDER BY CC.NAME '
    end-if
  end-if

  if $RC_DISPOSN_SRVY_SORT = 'P'
    if $RC_DISPOSN_SRVY_TYPE   = 'P'
      let $WhereSort   = 'ORDER BY A.PROCESS_GROUP, P.NAME '
    else
      let $WhereSort   = 'ORDER BY AA.PROCESS_GROUP, PP.NAME '
    end-if
  end-if

!Set the where Clause based on the selection Criteria.
  if $RC_REPRINT_PROMPT = 'Y'
    let $WhereSurveyDt = ' and D.DISPOSN_SURVEY_DT BETWEEN '||$SQLQuote || $RC_FROMDATE  || $SQLQuote ||' and '||$SQLQuote || $RC_THRUDATE  || $SQLQuote
  else
    let $WhereSurveyDt =  ' and D.DISPOSN_SURVEY_DT IS NULL'
  end-if

  !Survey Disposition selected
  if $RC_RUNTYPE = 'E'
    if ltrim($RC_EMPLID, ' ') <> ''
      if $RC_DISPOSN_SRVY_TYPE   = 'P'
        let $WhereEmplid   = 'and A.EMPLID = '||$SQLQuote||$RC_EMPLID||$SQLQuote
      else
        let $WhereEmplid   = 'and AA.EMPLID = '||$SQLQuote||$RC_EMPLID||$SQLQuote
      end-if
    else
      let $WhereEmplid   = ''
    end-if
  end-if

  if $RC_RUNTYPE = 'P'
    if ltrim($RC_PRCSGRP, ' ') <> ''
      if $RC_DISPOSN_SRVY_TYPE   = 'P'
        let $WherePrcssGrp   = 'and A.PROCESS_GROUP  = '||$SQLQuote||$RC_PRCSGRP||$SQLQuote
      else
        let $WherePrcssGrp   = 'and AA.PROCESS_GROUP  = '||$SQLQuote||$RC_PRCSGRP||$SQLQuote
      end-if
    else
      let $WherePrcssGrp   = ''
    end-if
  end-if

  do  Process_Data

End-Procedure


!-----------------------------------------------------------------------
Begin-Procedure Process_Data
!-----------------------------------------------------------------------

  if $RC_DISPOSN_SRVY_TYPE = 'S'
    do Shares-Available-Survey
  else
    do Pending-Survey
  end-if

End-Procedure


!-----------------------------------------------------------------------
Begin-Procedure Pending-Survey
!-----------------------------------------------------------------------

Begin-Select

A.EMPLID  () On-Break print=never Level = 1  After=Print-footer
                                             Save= $OldEmplID
A.STOCK_ID
A.STOCK_PLAN
A.OFFERING_ID
A.PERIOD_END_DT
A.GRANT_DT
A.ISSUANCE_TYPE
A.SHARES_PURCHASED
A.PURCHASE_PRICE
A.PURCHASE_FMV
A.CURRENCY_CD
A.ESPP_PURCHASE_AMT
A.PROCESS_GROUP
B.ADDRESS1
B.ADDRESS2
B.ADDRESS3
B.CITY
B.STATE
B.POSTAL
B.COUNTRY
C.NAME
D.DISPOSITION_NBR
D.SHARES_DISPOSED
D.DISPOSITION_DT
D.DISPOSITION_TYPE
D.DISPOSITION_SRC
D.DISPOSITION_PRICE

  let $EmplId           = rtrim(&a.emplid, ' ')
  let $StockId          = rtrim(&a.stock_id, ' ')
  let $PeriodEndDt      = rtrim(&a.period_end_dt, ' ')
  let $StockPlan        = rtrim(&a.stock_plan,' ')
  let $OfferingId       = rtrim(&a.offering_id, ' ')
  let $GrantDt          = rtrim(&a.grant_dt, ' ')
  let $ProcessGroup     = rtrim(&a.process_group, ' ')
  let $CurrencyCd       = rtrim(&a.currency_cd, ' ')
  let #PurchaseAmt      = &a.espp_purchase_amt
  let #PurchaseFmv      = &a.purchase_fmv
  let #PurchasePrice    = &a.purchase_price
  let #SharesPurchased  = &a.shares_purchased
  let $EAddress1        = rtrim(&b.address1, ' ')
  let $EAddress2        = rtrim(&b.address2, ' ')
  let $EAddress3        = rtrim(&b.address3, ' ')
  let $ECity            = rtrim(&b.city, ' ')
  let $EState           = rtrim(&b.state, ' ')
  let $EPostal          = rtrim(&b.postal, ' ')
  let $ECountry         = rtrim(&b.country, ' ')
  let $Name             = rtrim(&c.name, ' ')
  let #SharesDisposed   = &d.shares_disposed
  let $DispositionDt    = rtrim(&d.disposition_dt, ' ')
  let $DispositionType  = rtrim(&d.disposition_type, ' ')
  let $DispositionSrc   = rtrim(&d.disposition_src, ' ')
  let #DispositionNbr   = &d.disposition_nbr
  let #DispositionPrice = &d.disposition_price
  do Get-National-Id
  do Get-Job-Data
  let $Company         = $JobCompany
  do Get-Company-Info
  do Get-Country-Descr
  do Print-Pending
  let $EmplidOld =$EmplId

from PS_ST_ESPP_PURCH   A,
     PS_PERSON_ADDRESS  B,
     PS_PERSON_NAME     C,
     PS_ST_ESPP_DISPOSN D
where A.STOCK_ID           = $RC_STOCK_ID
  and A.STOCK_PLAN_TYPE    = 'E'
  and A.EMPLID             = B.EMPLID
  and (B.ADDRESS_TYPE      = 'MAIL'
   or (B.ADDRESS_TYPE      = 'HOME'
  and not exists (select 'X'
                   from PS_PERSON_ADDRESS
                  where EMPLID       = B.EMPLID
                    and ADDRESS_TYPE = 'MAIL' )))
  and A.EMPLID             = C.EMPLID
  and A.EMPLID             = D.EMPLID
  and A.STOCK_ID           = D.STOCK_ID
  and A.STOCK_PLAN         = D.STOCK_PLAN
  and A.STOCK_PLAN_TYPE    = D.STOCK_PLAN_TYPE
  and A.PERIOD_END_DT      = D.PERIOD_END_DT
  and A.OFFERING_ID        = D.OFFERING_ID
  and A.PROCESS_GROUP      = D.PROCESS_GROUP
  and D.DISPOSITION_STATUS = 'P'
[$WhereEmplid]
[$WhereStockPlan]
[$WhereOfferID]
[$WherePeriodEndDt]
[$WherePrcssGrp]
[$WhereSurveyDt]
[$WhereSort]
End-Select

End-Procedure Pending-Survey

!-----------------------------------------------------------------------
! Section: Get-National-Id
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Get-National-Id

  let $NationalID = ''

Begin-Select

PERS_NID.NATIONAL_ID

  let $NationalID = rtrim(&pers_nid.national_id,' ')

from PS_PERS_NID PERS_NID
where PERS_NID.EMPLID = $EmplId
  and PERS_NID.PRIMARY_NID = 'Y'

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Job-Data
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Get-Job-Data

  do Define-PrimJob-Clause('JOB',$AsOfToday, $PRIM_JOB_CLAUSE)
  let $JobCompany    = ''

Begin-Select

JOB.COMPANY
JOB.TAX_LOCATION_CD

  let $JobCompany    = rtrim(&job.company,' ')

 from PS_JOB JOB
where JOB.EMPLID   = $EmplId
  and JOB.EFFDT    = (select max(EFFDT)
                        from PS_JOB
                       where EMPLID   = JOB.EMPLID
                         and EMPL_RCD = JOB.EMPL_RCD
                         and EFFDT   <= $PeriodEndDt)
  and JOB.EMPL_RCD = [$PRIM_JOB_CLAUSE]
  and JOB.EFFSEQ   = (select max(EFFSEQ)
                        from PS_JOB
                       where EMPLID   = JOB.EMPLID
                         and EMPL_RCD = JOB.EMPL_RCD
                         and EFFDT    = JOB.EFFDT)
End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Company-Info
! Descr:   Retrieve the Company Name and Address
!-----------------------------------------------------------------------
Begin-Procedure Get-Company-Info

Begin-Select

COMPANY_TBL.EFFDT
COMPANY_TBL.DESCR
COMPANY_TBL.ADDRESS1
COMPANY_TBL.ADDRESS2
COMPANY_TBL.ADDRESS3
COMPANY_TBL.ADDRESS4
COMPANY_TBL.CITY
COMPANY_TBL.STATE
COMPANY_TBL.POSTAL
COMPANY_TBL.COUNTRY
COMPANY_TBL.FEDERAL_EIN

  ! let $CDescr      = rtrim(&company_tbl.descr, ' ')
  let $COMPANY_TBL-DESCR = rtrim(&company_tbl.descr, ' ')
  do Get_Related_COMPANY_TBL($Company, &COMPANY_TBL.EFFDT)
  
  let $CDescr      = $COMPANY_TBL-DESCR
  let $CAddress1   = rtrim(&company_tbl.address1, ' ')
  let $CAddress2   = rtrim(&company_tbl.address2, ' ')
  let $CAddress3   = rtrim(&company_tbl.address3, ' ')
  let $CAddress4   = rtrim(&company_tbl.address4, ' ')
  let $CCity       = rtrim(&company_tbl.city, ' ')
  let $CState      = rtrim(&company_tbl.state, ' ')
  let $CPostal     = rtrim(&company_tbl.postal, ' ')
  let $CCountry    = rtrim(&company_tbl.country, ' ')

from  PS_COMPANY_TBL COMPANY_TBL
where COMPANY_TBL.COMPANY = $Company
  and COMPANY_TBL.EFFDT   = (select max(EFFDT)
                               from PS_COMPANY_TBL
                              where COMPANY = COMPANY_TBL.COMPANY
                                and EFFDT  <= $AsOfToday)
  and COMPANY_TBL.EFF_STATUS = 'A'

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Country-Descr
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Get-Country-Descr

  let $CountryDescr   = ''

Begin-Select

COUNTRY_TBL.DESCR

  !let $CountryDescr   = rtrim(&country_tbl.descr,' ')
  let $COUNTRY_TBL-DESCR = rtrim(&country_tbl.descr,' ')
  do Get_Related_COUNTRY_TBL($ECountry)
  
  let $CountryDescr = $COUNTRY_TBL-DESCR 
  
from PS_COUNTRY_TBL COUNTRY_TBL
where COUNTRY_TBL.COUNTRY = $ECountry

End-Select

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Shares-Available-Survey
!-----------------------------------------------------------------------

Begin-Select

AA.EMPLID  () On-Break print=never Level = 1  After=Print-footer
                                             Save= $OldEmplID
AA.STOCK_ID
AA.STOCK_PLAN
AA.OFFERING_ID
AA.PERIOD_END_DT
AA.GRANT_DT
AA.ISSUANCE_TYPE
AA.SHARES_PURCHASED
AA.PURCHASE_PRICE
AA.PURCHASE_FMV
AA.CURRENCY_CD
AA.ESPP_PURCHASE_AMT
AA.PROCESS_GROUP
BB.ADDRESS1
BB.ADDRESS2
BB.ADDRESS3
BB.CITY
BB.STATE
BB.POSTAL
BB.COUNTRY
CC.NAME

  let $EmplId           = rtrim(&aa.emplid, ' ')
  let $StockId          = rtrim(&aa.stock_id, ' ')
  let $PeriodEndDt      = rtrim(&aa.period_end_dt, ' ')
  let $StockPlan        = rtrim(&aa.stock_plan,' ')
  let $OfferingId       = rtrim(&aa.offering_id, ' ')
  let $GrantDt          = rtrim(&aa.grant_dt, ' ')
  let $ProcessGroup     = rtrim(&aa.process_group, ' ')
  let $CurrencyCd       = rtrim(&aa.currency_cd, ' ')
  let #PurchaseAmt      = &aa.espp_purchase_amt
  let #PurchaseFmv      = &aa.purchase_fmv
  let #PurchasePrice    = &aa.purchase_price
  let #SharesPurchased  = &aa.shares_purchased
  let $Name             = rtrim(&cc.name, ' ')

  do Get-Other-Addr

  let $EAddress1        = rtrim(&ADDRESS1_OTHER, ' ')
  let $EAddress2        = rtrim(&ADDRESS2_OTHER, ' ')
  let $EAddress3        = rtrim(&ADDRESS3_OTHER, ' ')
  let $ECity            = rtrim(&CITY_OTHER, ' ')
  let $EState           = rtrim(&STATE_OTHER, ' ')
  let $EPostal          = rtrim(&POSTAL_OTHER, ' ')
  let $ECountry         = rtrim(&COUNTRY_OTHER, ' ')

  if $EAddress1 = ''
     let $EAddress1    = rtrim(&bb.address1, ' ')
     let $EAddress2    = rtrim(&bb.address2, ' ')
     let $EAddress3    = rtrim(&bb.address3, ' ')
     let $ECity        = rtrim(&bb.city, ' ')
     let $EState       = rtrim(&bb.state, ' ')
     let $EPostal      = rtrim(&bb.postal, ' ')
     let $ECountry     = rtrim(&bb.country, ' ')
  end-if

  do Get-National-Id
  do Get-Job-Data
  let $Company         = $JobCompany
  do Get-Company-Info
  do Get-Country-Descr

  do Calculate-Avail-Shares
  do Print-Available
  let $EmplidOld = $EmplId

from PS_ST_ESPP_PURCH   AA,
     PS_PERSON_ADDRESS  BB,
     PS_PERSON_NAME     CC
where AA.STOCK_ID           = $RC_STOCK_ID
  and AA.STOCK_PLAN_TYPE    = 'E'
  and AA.EMPLID             = BB.EMPLID
  and (BB.ADDRESS_TYPE      = 'MAIL'
   or (BB.ADDRESS_TYPE      = 'HOME'
  and not exists (select 'X'
                   from PS_PERSON_ADDRESS
                  where EMPLID       = BB.EMPLID
                    and ADDRESS_TYPE = 'MAIL' )))
  and AA.EMPLID             = CC.EMPLID
 and (AA.SHARES_PURCHASED > (SELECT SUM(SHARES_DISPOSED)
                               from PS_ST_ESPP_DISPOSN
                              where EMPLID          = AA.EMPLID
                                and STOCK_ID        = AA.STOCK_ID
                                and STOCK_PLAN      = AA.STOCK_PLAN
                                and STOCK_PLAN_TYPE = AA.STOCK_PLAN_TYPE
                                and PERIOD_END_DT   = AA.PERIOD_END_DT
                                and OFFERING_ID     = AA.OFFERING_ID
                                and PROCESS_GROUP   = AA.PROCESS_GROUP)
  or not exists (SELECT 'X' 
                   from PS_ST_ESPP_DISPOSN
                  where EMPLID          = AA.EMPLID
                    and STOCK_ID        = AA.STOCK_ID
                    and STOCK_PLAN      = AA.STOCK_PLAN
                    and STOCK_PLAN_TYPE = AA.STOCK_PLAN_TYPE
                    and PERIOD_END_DT   = AA.PERIOD_END_DT
                    and OFFERING_ID     = AA.OFFERING_ID
                    and PROCESS_GROUP   = AA.PROCESS_GROUP) )
[$WhereEmplid]
[$WhereStockPlan]
[$WhereOfferID]
[$WherePeriodEndDt]
[$WherePrcssGrp]
[$WhereSort]

End-Select

End-Procedure Shares-Available-Survey

!-----------------------------------------------------------------------
! Procedure:  Calculate-Avail-Shares
! Descr:      Calculate Available shares from PS_ST_ESPP_DISPOSN
!-----------------------------------------------------------------------
Begin-Procedure Calculate-Avail-Shares

  let #SharesAvailSell = #SharesPurchased

Begin-Select

SUM(E.SHARES_DISPOSED) &Sum_sold

  let #SharesAvailSell = (#SharesPurchased - &Sum_sold)

from PS_ST_ESPP_DISPOSN E
where E.EMPLID              = $Emplid
  and E.STOCK_ID            = $StockId
  and E.STOCK_PLAN_TYPE     = 'E'
  and E.STOCK_PLAN          = $StockPlan
  and E.OFFERING_ID         = $OfferingId
  and E.PERIOD_END_DT       = $PeriodEndDt
  and E.PROCESS_GROUP       = $ProcessGroup
  and E.DISPOSITION_STATUS <> 'V'
group by E.SHARES_DISPOSED

End-Select

End-Procedure Calculate-Avail-Shares

!-----------------------------------------------------------------------
Begin-Procedure Print-Pending
!-----------------------------------------------------------------------

  if $EmplidOld <> $Emplid
    let $EmpCityState = rtrim($ECity,' ')||', '||rtrim($EState,' ')||', '||rtrim($EPostal,' ')
    let $ComCityState = rtrim($CCity,' ')||', '||rtrim($CState,' ')||', '||rtrim($CPostal,' ')
    print $PrintDateLbl                                      (+1,090,011)
    print $ReportDate                                        (  ,104,010)
    print $CDescr                                            (+2,040,030)
    print $ReportTitle                                       (+1,040,033)
    print $StockIdLbl                                        (+4,090,009)
    print $StockId                                           (  ,100,010)
    print $StockPlanLbl                                      (+1,090,014)
    print $StockPlan                                         (  ,104,010)
    do Rotate-Name
    print $Name                                              (+1,001,050)
    print $EAddress1                                         (+1,001,035)
    print $EmpCityState                                      (+1,001,042)
    print $ECountry                                          (+1,001,030)
    print $CAddress1                                         (+1,090,035)
    if isnull($CAddress2)
    else
       print $CAddress2                                      (+1,090,032)
    end-if
    print $ComCityState                                      (+1,090,042)
    print $CountryDescr                                      (+1,090,030)
    print $FederalEinLbl                                     (+2,090,013)
    print &company_tbl.federal_ein                           (  ,103,010)
    print $PartipantInfoLbl                                  (+9,001,024) bold underline
    print $Company2Lbl                                       (+1,001,007)
    print ':'                                                (  ,   ,001)
    print $CDescr                                            (  ,010,030)
    print $EmplidLbl                                         (  ,070,006)
    print ':'                                                (  ,   ,001)
    print $Emplid                                            (  ,083,011)
    print $CountryLbl                                        (+1,001,007)
    print ':'                                                (  ,   ,001)
    print $CountryDescr                                      (  ,010,030)
    print $HnidLbl                                           (  ,070,011)
    print ':'                                                (  ,   ,001)
    print $NationalId                                        (  ,083,020)
    print $EsppPendingLbl                                    (+3,001,019) bold underline
    print $TotalLbl                                          (+1,045,005)
    print $PurchaseLbl                                       (+1,001,008)
    print $PurchaseLbl                                       (  ,018,008)
    print $SharesLbl                                         (  ,044,006)
    print $SaleLbl                                           (  ,105,004)
    print $PurchasedateLbl                                   (+1,001,010)
    print $PriceLbl                                          (  ,021,005)
    print $PurchasedLbl                                      (  ,041,009)
    print $PurchaseDateLbl                                   (  ,052,010)
    print $TypeLbl                                           (  ,064,010)
    print $SharesLbl                                         (  ,087,006)
    print $PriceLbl                                          (  ,104,005)
    print $SourceLbl                                         (  ,111,010)
    print $FillLbl                                           (+1,001,121) fill
    do Print-Pending-Details
  else
    do Print-Pending-Details
  end-if

End-Procedure Print-Pending

!-----------------------------------------------------------------------
Begin-Procedure Print-Pending-Details
!-----------------------------------------------------------------------
  do Format-DateTime ($PeriodEndDt, $Date, {DEFDATE}, '', '')
  print $Date                                              (+1,001,010)
  print #PurchasePrice                                     (  ,012,014) edit $99,999.999999
  print $CurrencyCd                                        (  ,028,003)
  print #SharesPurchased                                   (  ,033,017) edit 99,999,999.999999
  do Format-DateTime ($DispositionDt, $DispositionDt, {DEFDATE}, '', '')
  print $DispositionDt                                     (  ,052,010)
  move $DispositionType to $FieldValue
  move 'DISPOSITION_TYPE'  to $Fieldname
  do Read-Translate-Table
  let $TypeDescr = $Xlatshortname
  print $TypeDescr                                         (  ,064,010)
  print #SharesDisposed                                    (  ,076,017) edit 99,999,999.999999
  print #DispositionPrice                                  (  ,095,014) edit $99,999.999999
  move $DispositionSrc to $FieldValue
  move 'DISPOSITION_SRC' to $FieldName
  do Read-Translate-Table
  let $SourceDescr = $Xlatshortname
  print $SourceDescr                                       (  ,111,010)

  let #SharesAvailSell = 0

Begin-Sql
UPDATE PS_ST_ESPP_DISPOSN
  SET DISPOSN_SURVEY_DT = $AsOfToday
where EMPLID          = $Emplid
  and STOCK_ID        = $StockId
  and STOCK_PLAN_TYPE = 'E'
  and STOCK_PLAN      = $StockPlan
  and OFFERING_ID     = $OfferingId
  and PERIOD_END_DT   = $PeriodEndDt
  and PROCESS_GROUP   = $ProcessGroup
  and DISPOSITION_NBR = #DispositionNbr
End-Sql

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Print-Available
!-----------------------------------------------------------------------

  if $EmplidOld <> $Emplid
    let $EmpCityState = rtrim($ECity,' ')||', '||rtrim($EState,' ')||', '||rtrim($EPostal,' ')
    let $ComCityState = rtrim($CCity,' ')||', '||rtrim($CState,' ')||', '||rtrim($CPostal,' ')
    print $PrintDateLbl                                    (+1,090,011)
    print $ReportDate                                      (  ,104,010)
    print $CDescr                                          (+2,040,030)
    print $ReportTitle                                     (+1,040,033)
    print $StockIdLbl                                      (+4,090,009)
    print $StockId                                         (  ,100,010)
    print $StockPlanLbl                                    (+1,090,014)
    print $StockPlan                                       (  ,104,010)
    do Rotate-Name
    print $Name                                            (+1,001,050)
    print $EAddress1                                       (+1,001,035)
    print $EmpCityState                                    (+1,001,042)
    print $ECountry                                        (+1,001,030)
    print $CAddress1                                       (+1,090,035)
    if isnull($CAddress2)
    else
       print $CAddress2                                    (+1,090,032)
    end-if
    print $ComCityState                                    (+1,090,042)
    print $CountryDescr                                    (+1,090,030)
    print $FederalEinLbl                                   (+2,090,013)
    print &company_tbl.federal_ein                         (  ,103,010)
    print $PartipantInfoLbl                                (+9,001,024) bold underline
    print $Company2Lbl                                     (+1,001,007)
    print ':'                                              (  ,   ,001)
    print $CDescr                                          (  ,010,030)
    print $EmplidLbl                                       (  ,070,006)
    print ':'                                              (  ,   ,001)
    print $Emplid                                          (  ,083,011)
    print $CountryLbl                                      (+1,001,007)
    print ':'                                              (  ,   ,001)
    print $CountryDescr                                    (  ,010,030)
    print $HnidLbl                                         (  ,070,011)
    print ':'                                              (  ,   ,001)
    print $NationalId                                      (  ,083,020)
    print $EsppAvailableLbl                                (+3,001,026) bold underline
    print $TotalLbl                                        (+1,045,005)
    print $SharesLbl                                       (  ,063,006)
    print $PurchaseLbl                                     (+1,001,008)
    print $PurchaseLbl                                     (  ,018,008)
    print $SharesLbl                                       (  ,044,006)
    print $AvailableLbl                                    (  ,060,009)
    print $SoldOrLbl                                       (  ,086,007)
    print $SaleLbl                                         (  ,112,007)
    print $PurchaseDateLbl                                 (+1,001,004)
    print $PriceLbl                                        (  ,021,005)
    print $PurchasedLbl                                    (  ,041,009)
    print $ToSellLbl                                       (  ,062,007)
    print $PurchaseDateLbl                                 (  ,076,010)
    print $TransferLbl                                     (  ,085,008)
    print $SharesLbl                                       (  ,099,006)
    print $PriceLbl                                        (  ,111,006)
    print $FillLbl                                         (+1,001,118) fill
    do Print-Available-Details
  else
    do Print-Available-Details
  end-if

End-Procedure Print-Available

!-----------------------------------------------------------------------
Begin-Procedure Print-Available-Details
!-----------------------------------------------------------------------

  do Format-DateTime ($PeriodEndDt, $PeriodEndDt, {DEFDATE}, '', '')
  print $PeriodEndDt                                       (+1,001,010)
  print #PurchasePrice                                     (  ,012,014) edit $99,999.999999
  print $CurrencyCd                                        (  ,028,003)
  print #SharesPurchased                                   (  ,033,017) edit 99,999,999.999999
  print #SharesAvailSell                                   (  ,052,017) edit 99,999,999.999999
  print '_'                                                (  ,071,010) fill
  print '_'                                                (  ,083,010) fill
  print '_'                                                (  ,095,010) fill
  print '_'                                                (  ,107,010) fill

  let #SharesAvailSell = 0

End-Procedure Print-Available-Details

!-----------------------------------------------------------------------
Begin-Procedure Print-footer
!-----------------------------------------------------------------------

  print $CommentsLbl                                       (+10,001,009) bold underline
  print $SignatureLbl                                      (+10,001,091)
  new-page

End-Procedure Print-footer

!-----------------------------------------------------------------------
!  SQC Include Files
!-----------------------------------------------------------------------
#include 'strunctl.sqc'   ! Stock Admin's Run Control Record
#include 'tranctrl.sqc'
#include 'prcsapi.sqc'
#include 'prcsdef.sqc'    ! Update Process Open_Trans variable declaration
#include 'eoj.sqc'        ! End of Report Format
#include 'sqrtrans.sqc'   ! Access Strings Table
#include 'readxlat.sqc'   ! Read-Translate-Table Procedure
#include 'reset.sqc'      ! Reset printer procedure
#include 'curdttim.sqc'   ! Get-Current-DateTime procedure
                          ! Procedures: Get-Current-DateTime
#include 'datemath.sqc'
#include 'datetime.sqc'   ! Routines for date and time formatting
                          ! Procedures: Init-Datetime
                          ! Procedures: Format-DateTime
                          ! Procedures: Diff-Date
                          ! Procedures: many others.
#include 'number.sqc'     ! Procedures: Init-Number
#include 'getrplng.sqc'   ! Get the report language
#include 'rotname1.sqc'   ! Procedures: Rotate-Name
#include 'getprimj.sqc'
#include 'getothad.sqc'   ! Gets Other Address
#include 'rellang.sqc'    ! Translations File 
