!*************************************
!  CMP001:  Salary Structure Report  *
!*************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:11:30:03                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-heading 7
do Get_Field_Information ('CMP001',     'REPORT_TITLE', $REPORTTITLE,   #DW)
#Include 'stdhtr03.sqc'

do Get_Field_Information ('CMP001',     'CURRENCY_CD1', $CUR1,          #DW)
do Get_Field_Information ('CMP001',     'CURRENCY_CD2', $CUR2,          #DW)
do Get_Field_Information ('CMP001',     'MINIMUM',      $MIN,           #DW)
do Get_Field_Information ('CMP001',     'MIDPOINT',     $MID,           #DW)
do Get_Field_Information ('CMP001',     'MAXIMUM',      $MAX,           #DW)
do Get_Field_Information ('CMP001',     'MIDPT_DIF1',   $MID1,          #DW)
do Get_Field_Information ('CMP001',     'MIDPT_DIF2',   $MID2,          #DW)
do Get_Field_Information ('CMP001',     'RANGE_SPREAD1',$RANGE1,        #DW)
do Get_Field_Information ('CMP001',     'RANGE_SPREAD2',$RANGE2,        #DW)
do Get_Field_Information ('HR',         'GRADE1',       $GRADE1,        #DW)
do Get_Field_Information ('HR',         'GRADE2',       $GRADE2,        #DW)
do Get_Field_Information('HR',          'SETID',        $SETID,         #DW)

  print $SETID                                              (+2,1,6)
  print $GRADE1                                             (0,8,9)
  if #MultiCurr
    print $CUR1                                             (0,18,64)
  end-if
  print $MID1                                               (0,83,19)
  print $RANGE1                                             (0,103)

  print $GRADE2                                             (+1,8,9)
  if #MultiCurr
    print $CUR2                                             (0,18,13)
  end-if
  print $MIN                                                (0,32,18)
  print $MID                                                (0,51,20)
  print $MAX                                                (0,72,10)
  print $MID2                                               (0,83,19)
  print $RANGE2                                             (0,103)
end-heading

begin-procedure Init-Report

  move 'CMP001' to $ReportID
  do Stdapi-Init

  if $prcs_process_instance = ''
    do Ask-As-Of-Date
  else
    do Select-Parameters
  end-if
do Init_Printer
do Init_Report_Translation ($ReportID, $language_cd)
do Append_Report_Translation ('HR')
end-procedure

begin-procedure Get-Values
   let $language_cd = $prcs_language_cd
   do Get-As-Of-Date

end-procedure

begin-procedure Process-Main
move 'Y' to $firstRec
begin-SELECT
A.SETID               (+1,1,6)
A.SAL_ADMIN_PLAN      () on-break level=1 print=never procedure=Sal-Admin-Change
  print &A.Sal_Admin_Plan  (0,8,4) edit XXXX
  
  print '/'   (0,12,1)
A.GRADE               (0,13,4) edit XXX

B.CURRENCY_CD &curin
  if #MultiCurr
    print &Curin    (0,18,1)  on-break level=2 print=change
  end-if

A.MIN_RT_ANNUAL
  do Format-Number(&A.Min_Rt_Annual, $out, '999,999,999,999,999')
  print $out        (0,20)

A.MID_RT_ANNUAL
  do Format-Number(&A.Mid_Rt_Annual, $out, '999,999,999,999,999')
  print $out        (0,40)

A.MAX_RT_ANNUAL
  do Format-Number(&A.Max_Rt_Annual, $out, '999,999,999,999,999')
  print $out        (0,60)
!calculate Midpoint Differential
  if $firstRec = 'Y'  !not applicable to highest grade
    move 'N' to $firstRec
  else
    subtract &A.Mid_Rt_Annual from #priorMidpoint
    if (&A.mid_Rt_Annual > 0)
      divide &A.Mid_Rt_Annual into #priorMidpoint
      multiply 100 times #priorMidpoint
    else
      move 100 to #priorMidpoint
    end-if
    do Format-Number(#priorMidpoint, $out, '9999.99')
    print $out           (0,87)
    print '%'            (0,94)
  end-if
  move &A.Mid_Rt_Annual to #priorMidpoint
!calculate Range Spread
  move &A.Max_Rt_Annual to #field
  if (&A.Max_Rt_Annual > 0)
     if (&A.Min_Rt_Annual > 0)
        divide &A.Min_Rt_Annual into #field
        subtract 1 from #field
        multiply 100 times #field  !convert to percentage
     else
        move 100 to #field ! from 0 to max if max > 0 will be 100% change
     end-if
  else
     if (&A.Min_Rt_Annual > 0)
        move 100 to #field ! from 0 to min if min > 0 will be 100% change
     else
        move 0 to #field !max and min are 0 therefore no spread
     end-if
  end-if

  do Format-Number(#field, $out, '9999.99')
  print $out             (0,102)
  print '%'              (0,108)
FROM  PS_SAL_GRADE_TBL A,PS_SAL_PLAN_TBL B
WHERE A.SAL_ADMIN_PLAN = B.SAL_ADMIN_PLAN
AND A.SETID = B.SETID
AND A.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_SAL_GRADE_TBL
       WHERE  SAL_ADMIN_PLAN = A.SAL_ADMIN_PLAN
         AND SETID = A.SETID
         AND  GRADE          = A.GRADE
         AND  EFFDT         <= $AsOfDate)
AND B.EFFDT =
    (SELECT MAX(EFFDT)
     FROM     PS_SAL_PLAN_TBL
     WHERE    SAL_ADMIN_PLAN = A.SAL_ADMIN_PLAN
       AND SETID = A.SETID
       AND    EFFDT         <= A.EFFDT)
ORDER BY A.SAL_ADMIN_PLAN,A.GRADE DESC
end-SELECT

end-procedure

begin-procedure Sal-Admin-Change
move 'Y' to $firstRec
end-procedure

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askaod.sqc'    !Ask As Of Date input

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to update run status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
