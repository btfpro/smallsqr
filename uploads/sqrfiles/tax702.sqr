!***********************************************************************
!  TAX702: Print contents of State/Federal Tax Tables
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:06:24:48                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'TAX702' to $ReportID
  move 'Federal/State Tax Table' to $ReportTitle
  display ' '
  display $ReportTitle
  display ' '

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init
end-procedure

begin-HEADING 7
  #Include 'stdhdg01.sqc'

  print 'State/    Eff     ** Std Deductn **  Allow. Amt'       (+2,1)
  print '    Tax    Suppl    Supl Meth  Tax Rpt   EE Detl'     ()
  print ''                                                     ()
  print '***************  Other Taxes  *******Prd******'       (,131)

  print 'Tax Type  Date    Single    Married  W/H Redn.'       (+1,1)
  print '   Credit  Rate     Con / Sep  Interval    Req? '     ()
  print 'Special Amount   Description'                         (,97)
  print 'Class        Rate  Max Gross Max Tax Max? Type'       (,131)

end-HEADING

!***********************************************************************
!  PROC PROCESS-MAIN
!         Main Procedure
!***********************************************************************

BEGIN-PROCEDURE Process-Main
BEGIN-SELECT

S.STATE                     (2,1)
S.EFFDT
  do Format-DateTime(&S.EffDt, $out, {DEFDATE}, '', '')
  print $out                (2,9)
S.EFF_STATUS
  if &S.Eff_Status = 'I'
    print 'I'               (2,0,1)
  else
    print ' '               (2,0,1)
  end-if
S.ST_TAX_TYPE

  move 'ST_TAX_TYPE'  to $FieldName
  move &S.St_Tax_Type to $FieldValue
  do Read-Translate-Table
  print $XlatLongName       (3,1)

S.SINGLE_STD_DED
  do Format-Number(&S.Single_Std_Ded, $out, 'b99999')
  print $out                (2,19)
S.MARRIED_STD_DED
  do Format-Number(&S.Married_Std_Ded, $out, 'b99999')
  print $out                (2,30)
S.ALLOWANCE_AMT
  do Format-Number(&S.Allowance_Amt, $out, 'b99999')
  print $out                (2,40)
S.ALLOW_WH_REDUC            (3,40)
S.FWT_CREDIT
S.FICA_CREDIT
  if &S.FWT_Credit = 'Y' and &S.FICA_Credit = 'Y'
     print 'FICA'           (2,51)
     print 'FWT'            (3,51)
  else
    if &S.FWT_Credit = 'Y'
       print 'FWT'          (2,51)
    else
      if &S.FICA_Credit = 'Y'
         print 'FICA'       (2,51)
      end-if
    end-if
  end-if
S.SUPL_WAGE_RT
  do Format-Number(&S.Supl_Wage_Rt, $out, 'b.99999')
  print $out                (2,58)
S.SUPPL_CON_METHOD          (2,69)
  print ' / '               ()
S.SUPPL_SEP_METHOD          ()
S.TAX_RPT_INTERVAL          (2,81)
S.EE_DTL_REQUIRED           (2,90)
  move 2 to #descrLine
S.SPECIAL_AMT_1
S.SPECIAL_DESCR_1
  if &S.Special_Amt_1 <> 0
    do Format-Number(&S.Special_Amt_1, $out, 'b999999.99999')
    print $out                (#descrLine,98)
    print &S.Special_Descr_1  (#descrLine,114)
  end-if
S.SPECIAL_AMT_2
S.SPECIAL_DESCR_2
  if &S.Special_Amt_2 <> 0
    do Format-Number(&S.Special_Amt_2, $out, 'b999999.99999')
    add 1 to #descrLine
    print $out                (#descrLine,98)
    print &S.Special_Descr_2  (#descrLine,114)
  end-if
S.SPECIAL_AMT_3
S.SPECIAL_DESCR_3
  if &S.Special_Amt_3 <> 0
    do Format-Number(&S.Special_Amt_3, $out, 'b999999.99999')
    add 1 to #descrLine
    print $out                (#descrLine,98)
    print &S.Special_Descr_3  (#descrLine,114)
  end-if
S.SPECIAL_AMT_4
S.SPECIAL_DESCR_4
  if &S.Special_Amt_4 <> 0
    do Format-Number(&S.Special_Amt_4, $out, 'b999999.99999')
    add 1 to #descrLine
    print $out                (#descrLine,98)
    print &S.Special_Descr_4  (#descrLine,114)
  end-if
S.SPECIAL_AMT_5
S.SPECIAL_DESCR_5
  if &S.Special_amt_5 <> 0
    do Format-Number(&S.Special_Amt_5, $out, 'b999999.99999')
    add 1 to #descrLine
    print $out                (#descrLine,98)
    print &S.Special_Descr_5  (#descrLine,114)
  end-if

S.MINIMUM_WAGE

  if #descrLine = 2
    print 'State Minimum Wage =' (+2,1,)
  else
    print 'State Minimum Wage =' (+1,1,)
  end-if

    print &S.MINIMUM_WAGE        (,+1,)

S.TIPS_DELAY_WTHLD
    print 'Use Tips W/H Threshold =' (,+3,)
  If &S.TIPS_DELAY_WTHLD = 'N'
    print 'No'                       (,+1,)
   Else
    print 'Yes'                      (,+1,)
  end-if

S.TIPS_MTD_THRESHOLD
    print 'State Tips W/H Threshold =' (,+3,)
    print &S.TIPS_MTD_THRESHOLD        (,+1,)

  do Get-Other-Taxes

  NEXT-LISTING NEED=4

FROM PS_STATE_TAX_TBL S

ORDER BY S.STATE, S.EFFDT DESC

END-SELECT
END-PROCEDURE


BEGIN-PROCEDURE Get-Other-Taxes
  move 2 to #line
BEGIN-SELECT
O.TAX_CLASS
  move 'TAX_CLASS'  to $FieldName
  move &O.Tax_Class to $FieldValue
  do Read-Translate-Table
  print $XlatShortName              (#line,131)
O.TAX_TYPE
O.TAXGR_BASE
O.TAX_RT
  do Format-Number(&O.Tax_Rt, $out, 'b.99999')
  print $out                        (,142)
O.MAX_GROSS
  do Format-Number(&O.Max_Gross, $out, 'b99999')
  print $out                        (,153)
O.MAXIMUM_TAX
  do Format-Number(&O.Maximum_Tax, $out, 'b9.99')
  print $out                        (,162)
O.PERIOD_MAX                        (,169)
O.EE_ER_TAX_TYPE                    (,174)

  add 1 to #line

FROM  PS_ST_OTH_TAX_TBL  O
WHERE O.STATE    = &S.State
  AND O.EFFDT    = &S.EffDt
END-SELECT
END-PROCEDURE

#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
