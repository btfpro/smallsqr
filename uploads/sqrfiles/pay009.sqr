!*****************************
!  PAY009:  Print PaySheets  *
!*****************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:04:27:45                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !printer and page-size initialization

begin-setup

begin-SQL On-Error=Skip
DELETE FROM PS_R_PAY009;
end-SQL

end-setup


begin-report
  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'PAY009' to $ReportID

  do Init-DateTime
  do Init-Number
  move 'N' to $CyclePrompts     !Don't prompt for On/Off cycle in PAYINIT
  do Stdapi-Init

  do Get-Report-Language   ! Procedure that decides the report language
                           ! and then calls 'Report-Translation' procedure
                           ! that reads the language dep. text.
  move $Pay009_ReportTitle to $ReportTitle

  do Payroll-Report-Initialization
  do Delete-EmplType-Table
end-procedure

! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation
! Read from PAY009  program ids
   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('PAY009', 'REPORT_TITLE', $Pay009_ReportTitle, #dummy_width)
   do Get_Field_Information ('PAY009', 'PG_TOT',       $Pay009_Pg_Tot,      #dummy_width)
end-procedure

begin-heading 10
  print $priorCompany      (2,12)
  print $priorCompanyName  (0,19)
  print $PriorPayGroup     (0,71)
  do Format-DateTime($AsOfDate, $out, {DEFDATE}, '', '')
  print $out       (0,135)
  do Format-Number(#PAGE_NUM, $out, '99999')
  print $out               (0,165)
end-heading

begin-footing 2
  if $EndPayPage = 'Y'
    print $Pay009_Pg_Tot          (1,8)
    print &Balnc_Lines            (1,26)    edit         99
    print &Balnc_Lines_OK         (1,30)    edit         99
    print &Balnc_Reg_Pay_Hrs      (1,33)    edit     B9,999.99mi
    print &Balnc_OT_Hrs           (2,42)    edit     B9,999.99
    print &Balnc_Oth_Hrs          (1,54)    edit     B9,999.99
    print &Balnc_Hourly_Rt        (2,64)    edit B99,999,999,999.999999
    print &Balnc_Reg_Pay          (1,85)    edit B99,999,999.99
    print &Balnc_Oth_Earns        (1,102)    edit B99,999,999.99
  end-if
  if $End_of_Report = 'Y'
!   encode '<27>E' into $Reset  !Uncomment these lines if network
!   print $Reset (+0,+1)        !printer requires reset after each report
  end-if
end-footing


begin-procedure Report

begin-SELECT
A.COMPANY      () on-break print=never  level=1 procedure=Company-Change
A.PAYGROUP     () on-break print=never  level=1 procedure=PayGroup-Change
A.PAY_END_DT

  move &A.Company    to $Company

  if $Company <> $priorCompany
    do Get-Company-Data
  end-if

  move $Company to $priorCompany
  move $CompanyName to $priorCompanyName
  move &A.PayGroup   to $PayGroup
  move $PayGroup to $PriorPayGroup   !for use in the Heading
  move &A.Pay_End_Dt to $AsOfDate
  do Update-EmplType-Table
  do Get-Earnings

FROM  PS_PAY_CALENDAR A
WHERE [$SlctCalendar]
ORDER BY A.COMPANY,
         A.PAY_END_DT,
         A.PAYGROUP
end-SELECT

  move 'Y' to $End_of_Report
end-procedure


begin-procedure Get-Earnings

begin-SELECT
B.PAGE_NUM,
B.ADDL_NBR,
B.OFF_CYCLE

  if &B.PAGE_NUM <> #PAGE_NUM

    if #PAGE_NUM <> 0  !if not first record
      move 'Y' to $EndPayPage

      if RTRIM($PriorPayGroup, ' ') <> ''
        do Get-Page-Balances
      end-if

      NEW-PAGE
      move 'N' to $EndPayPage
    end-if

    move $Company to $priorCompany
    move $CompanyName to $priorCompanyName
    move $PayGroup to $PriorPayGroup   !for use in the Heading

    move &B.PAGE_NUM  to #PAGE_NUM           !for use in the Heading
    move &B.Off_Cycle to $Off_Cycle    !for use in getting Footing
    move -1 to #priorADDL_NBR
  end-if

!Skip a PaySheet line if there are no additional lines for a particular LINE_NUM.

  if &B.ADDL_NBR = 0 and #priorADDL_NBR = 0
    NEXT-LISTING SKIPLINES=2
  end-if

  move &B.ADDL_NBR to #priorADDL_NBR
B.LINE_NUM            (1,24)   EDIT 99

  if &B.ADDL_NBR <> 0
    print '-'      ()
    print &B.ADDL_NBR ()        edit 099
  end-if

C.EMPLID           (0,1,11)  on-break level=2 print=change/top-page
C.EMPL_TYPE        (0,+1,1)
C.DEPTID           (0,+1,10)
C.NAME             (2,1)     on-break level=2 print=change/top-page
B.BUSINESS_UNIT    (3,1)     on-break level=2 print=change/top-page
B.OK_TO_PAY        (1,31,1)
B.REG_PAY_HRS      (0,+1)    EDIT    B,999.99
B.OT_HRS           (0,+1)    EDIT    B,999.99
B.HOURLY_RT        (0,+14)   EDIT B99,999,999,999.999999
B.REG_PAY          (0,+1)    EDIT B,999,999.99
B.SHIFT            (0,+18,1)
B.DEPTID           (0,+1,10)
B.JOBCODE          (0,+1,6)
B.POSITION_NBR     (0,+1,8)
B.SEPCHK           (0,+1)    EDIT 9
B.ADDLPAY_REASON   (0,+1,3)
B.DED_TAKEN        (0,+1,1)
B.DED_SUBSET_ID    (0,+1,3)
B.DED_TAKEN_GENL   (0,+1,1)
B.DED_SUBSET_GENL  (0,+1,3)
B.STATE            (0,+1,2)
B.LOCALITY         (0,+1,10)
B.TAX_PERIODS      (0,+1)    EDIT 99
F.FREQUENCY_TYPE   (0,0,1)
B.TAX_METHOD       (0,+1,1)

  do Get-Other-Hours-Earnings
  NEXT-LISTING SKIPLINES=1 NEED=3

FROM  PS_PAY_EARNINGS B,
      PS_PAY_LINE C,
      PS_FREQUENCY_TBL F
WHERE B.COMPANY    = $Company
  AND B.PAYGROUP   = $PayGroup
  AND B.PAY_END_DT = $AsOfDate
  AND B.OFF_CYCLE  = 'N'
  AND B.SINGLE_CHECK_USE IN ('C', 'N')
  AND C.COMPANY    = $Company
  AND C.PAYGROUP   = $PayGroup
  AND C.PAY_END_DT = $AsOfDate
  AND C.OFF_CYCLE  = B.OFF_CYCLE
  AND C.PAGE_NUM      = B.PAGE_NUM
  AND C.LINE_NUM      = B.LINE_NUM
  AND C.SINGLE_CHECK_USE IN ('C', 'N')
  AND C.EMPL_TYPE IN
      (SELECT PRINT_EMPLTYPE
       FROM   PS_R_PAY009)
  AND B.PAY_FREQUENCY  = F.FREQUENCY_ID
  AND F.EFF_STATUS     = 'A'
  AND F.EFFDT          =
      (SELECT MAX(F1.EFFDT)
      FROM PS_FREQUENCY_TBL F1
      WHERE F1.FREQUENCY_ID   = F.FREQUENCY_ID
        AND F1.EFF_STATUS     = F.EFF_STATUS
        AND F1.EFFDT         <= B.PAY_END_DT)
ORDER BY B.PAGE_NUM,B.LINE_NUM,B.ADDL_NBR
end-SELECT

  move 'Y' to $EndPayPage

  if RTRIM($PriorPayGroup, ' ') <> ''
    do Get-Page-Balances
  end-if
end-procedure


begin-procedure Get-Other-Hours-Earnings
  move 1 to #HrsLine
  move 1 to #PayLine
begin-SELECT
ERNCD,OTH_HRS,OTH_PAY
  if &Oth_Hrs <> 0
    print &ErnCd     (#HrsLine,51,3)
    print &Oth_Hrs   (0,+1) edit 9,999.99
    add 3 to #HrsLine
  end-if
  if &Oth_Pay <> 0
    print &ErnCd     (#PayLine,100,3)
    print &Oth_Pay   (0,+1)   edit 9,999,999.99
    add 3 to #PayLine
  end-if
FROM  PS_PAY_OTH_EARNS
WHERE COMPANY    = $Company
  AND PAYGROUP   = $PayGroup
  AND PAY_END_DT = $AsOfDate
  AND OFF_CYCLE  = &B.Off_Cycle
  AND PAGE_NUM      = &B.PAGE_NUM
  AND LINE_NUM      = &B.LINE_NUM
  AND ADDL_NBR      = &B.ADDL_NBR
ORDER BY ERNCD
end-SELECT

  if #HrsLine > 4 or #PayLine > 4
    position (+1)
    move -1 to #priorADDL_NBR
  end-if

end-procedure

begin-procedure Get-Page-Balances
begin-SELECT
BALNC_LINES
BALNC_LINES_OK
BALNC_REG_PAY_HRS
BALNC_OT_HRS
BALNC_OTH_HRS
BALNC_OTH_EARNS
BALNC_REG_PAY
BALNC_HOURLY_RT

FROM  PS_PAY_PAGE
WHERE COMPANY    = $PriorCompany
  AND PAYGROUP   = $PriorPayGroup
  AND PAY_END_DT = $AsOfDate
  AND OFF_CYCLE  = $Off_Cycle
  AND PAGE_NUM      = #PAGE_NUM
  AND SINGLE_CHECK_USE IN ('C', 'N')
end-SELECT
end-procedure

begin-procedure Update-EmplType-Table

  do Delete-EmplType-Table

begin-SELECT
Y.EMPL_TYPE
  do Insert-EmplType
FROM   PS_PAYGROUP_TBL X,PS_PAYGRP_EMPLTYPE Y
WHERE  X.COMPANY         = $Company
  AND  X.PAYGROUP        = $PayGroup
  AND  X.EFFDT =
       (SELECT MAX(EFFDT)
        FROM   PS_PAYGROUP_TBL
        WHERE  COMPANY   = $Company
          AND  PAYGROUP  = $PayGroup
          AND  EFFDT    <= $AsOfDate)
  AND  Y.COMPANY         = $Company
  AND  Y.PAYGROUP        = $PayGroup
  AND  Y.EFFDT           = X.EFFDT
  AND  Y.PRINT_PAY_SHEET = 'Y'
end-SELECT

end-procedure


begin-procedure Insert-EmplType

begin-SQL
INSERT INTO PS_R_PAY009 (PRINT_EMPLTYPE) VALUES (&Y.Empl_Type)
end-SQL

end-procedure


begin-procedure Delete-EmplType-Table

begin-SQL on-error=Ignore
DELETE FROM PS_R_PAY009;
end-SQL

end-procedure


begin-procedure Company-Change
    new-page
end-procedure


begin-procedure PayGroup-Change
    new-page
end-procedure


begin-procedure Ignore
! dummy procedure to avoid SQL error message
end-procedure

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'payinit.sqc'   !Report Initialization and Timing
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
