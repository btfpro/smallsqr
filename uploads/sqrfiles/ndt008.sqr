!*************************************************
!  NDT008:  Section 129 Nondiscrimination Report *
!*************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:09:17:46                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************


#include 'setenv.sqc'    !Set environment

Begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
End-setup

!#define debugD  YES

#define  CURRENT_YEAR      C
#define  FORECASTED_YEAR   F

#define  ACTUAL_COL       46
#define  FORECAST_COL     85
#define  COUNT_COL        32
#define  PASS_COL         34
#define  RESULT_COL       46
#define  EE_WIDTH        119
#define  RESULT_WIDTH     87

!************************************************
begin-program
!************************************************

  do Init-Report

  display 'Program Began at: ' NoLine
  do Display-Time

  do Read-Run-Control

  move 'H' to $EE_Type
  do Select-EEs
  do EE-Sub-Total

  new-page
  move 'L' to $EE_Type
  move 0 to #Group_Change
  move '' to $Act_Emplid

  do Select-EEs
  do EE-Sub-Total

  new-page
  do Final-Results-Heading
  do Final-Results

  display 'Program Ended at: ' noline
  do Display-Time

  do StdAPI-Term

end-program


!************************************************
begin-procedure Init-Report
!************************************************

  do Init-DateTime
  do Get-Current-DateTime
  do Init-Number
  do StdAPI-Init

  let $ReportID   = 'NDT008'
  let $ReportTitle = 'Non-Discrimination Testing - Section 129 Results'
  display $ReportTitle
  display ' '

  let $Page_Header = 'Yes'

end-procedure


!************************************************
begin-Procedure Read-Run-Control
!************************************************

begin-SELECT
RC.PLAN_YEAR_BEGIN_DT,
RC.MONTH_END_DT,
RC.PROJECTION_PERCENT

FROM  PS_NDT_RUNCTL RC
end-SELECT

end-Procedure


!************************************************
begin-heading 9
!************************************************

#Include 'stdhdg01.sqc'

  if ($Page_Header = 'Yes')
    if ($EE_Type = 'H')
       print 'Highly Compensated Employees'               (4,1)
    else
       print 'Non Highly Compensated Employees'           (4,1)
    end-if

    print '------- Actual Year-to-Date -------'           (+3,{ACTUAL_COL},38)
    print '------- Forcasted Year-End --------'           (0,{FORECAST_COL})
    print 'Employee Name                  Employee ID   ' (+1,1)
    print 'Gross Earnings    129 Benefits Rcvd    '       ()
    print 'Gross Earnings    129 Benefits Rcvd'           ()
    print '='                                             (+1,1,{EE_WIDTH}) fill
  else
    print ''                                              (9,1)
  end-if

end-heading


!************************************************
begin-footing 2
!************************************************

print 'Company Confidential' (2,1) center

end-footing


!************************************************
begin-procedure Select-EEs
!************************************************

Begin-SELECT
N.EMPLID
N.YEAR_CD
E.NAME
#ifdef DB2ALL
DECIMAL(SUM(N.GRS_YTD),15,2) &GRS_YTD
#else
SUM(N.GRS_YTD) &GRS_YTD
#endif

  if $Act_Emplid = &N.EMPLID
     let #Group_Change = 0
  else
     let #Group_change = 1
     let #Gross_YTD = 0
  end-if
  let $Act_Emplid = &N.EMPLID
!  display 'Group Change: '
!  display #Group_Change
!  display &N.EMPLID

  if (&N.YEAR_CD = '{CURRENT_YEAR}')
    do Get-FSA-Benefits
    Add &GRS_YTD        to #SubAGrs
    Add &FSA_PD_AMT_YTD to #SubADed
    Add &GRS_YTD        to #SubFGrs
    Move &GRS_YTD       to #Gross_YTD
  else
    let #FSA_Forecast = &FSA_PD_AMT_YTD / ((100 - &RC.PROJECTION_PERCENT) / 100)
    Add #FSA_Forecast   to #SubFDed
    Add &GRS_YTD        to #SubFGrs
    Add &GRS_YTD        to #Gross_YTD
  end-if

  do Print-EEs

FROM PS_R_NDT_EMPL_YTD N,
     PS_PERSON_NAME  E
WHERE N.HCE_TYPE  = $EE_Type
  AND N.YEAR_CD   IN ('{CURRENT_YEAR}','{FORECASTED_YEAR}')
  AND E.EMPLID    = N.EMPLID
GROUP BY N.EMPLID, N.YEAR_CD, E.NAME
ORDER BY N.EMPLID ASC,
         N.YEAR_CD ASC
End-SELECT

end-procedure


!************************************************
begin-procedure Get-FSA-Benefits
!************************************************

  do Format-DateTime(&RC.Plan_Year_Begin_Dt, $out, {DEFCMP}, '', '')
  let #PlanYear = To_Number(SubStr($out, 1, 4))

Begin-SELECT
#ifdef DB2ALL
DECIMAL(SUM(B.FSA_PD_AMT_YTD),15,2) &FSA_PD_AMT_YTD
#else
SUM(B.FSA_PD_AMT_YTD) &FSA_PD_AMT_YTD
#endif

FROM PS_FSA_SUMMARY B
WHERE B.EMPLID    = &N.EMPLID
  AND B.PLAN_TYPE = '61'
  AND B.BALANCE_YEAR = #PlanYear
End-SELECT

end-procedure


!************************************************
begin-procedure Print-EEs
!************************************************


  if #Group_Change = 1
     print &E.Name         (+1,1,30)
     print &N.Emplid       (0,+1)
  end-if

  if (&N.YEAR_CD = '{CURRENT_YEAR}')
    print #Gross_YTD      (0,{ACTUAL_COL})    Edit $$$,$$$,$$0.99
    print &FSA_PD_AMT_YTD (0,+7)              Edit $$$,$$$,$$0.99
    add 1 to #EE_Count
  end-if
  if (&N.YEAR_CD = '{FORECASTED_YEAR}')
    print #Gross_YTD      (0,{FORECAST_COL})  Edit $$$,$$$,$$0.99
    print #FSA_Forecast   (0,+7)              Edit $$$,$$$,$$0.99
  end-if

end-procedure


!************************************************
begin-procedure EE-Sub-Total
!************************************************

  print '-'        (+1,1,{EE_WIDTH}) fill
  print 'Totals:'  (+1,1)
  print #EE_Count  (0,{COUNT_COL})      Edit 899,999

  print #SubAGrs   (0,{ACTUAL_COL})     Edit $$$,$$$,$$0.99
  print #SubADed   (0,+7)               Edit $$$,$$$,$$0.99

  if (&RC.PROJECTION_PERCENT > 0)
    print #SubFGrs   (0,{FORECAST_COL}) Edit $$$,$$$,$$0.99
    print #SubFDed   (0,+7)             Edit $$$,$$$,$$0.99
  end-if

  move 0 to #SubAGrs
  move 0 to #SubADed
  move 0 to #SubFGrs
  move 0 to #SubFDed
  move 0 to #EE_Count

end-procedure


!************************************************
begin-procedure Final-Results
!************************************************

  move 'PASSED.' to $Result

begin-SELECT
TEST_ID
PASSED
SLOB
CAFETERIA_PLAN
NHCE_LOOKUP_PCT
FIFTY5_CALC_PCT
ELIG_NHCE_COUNT
ELIG_HCE_COUNT
CALC_HARBOR_PCT
SAFE_HARBOR_PCT
UNSAFE_HARBOR_PCT
TTL_BENEFIT_PAID
PCT_BENEFIT_PAID
MIN_EMPLOYEE_COUNT

  let $Test_Id = RTRIM(&TEST_ID,' ')
  evaluate $Test_Id

  when = '5Pct'
    if (&Ttl_Benefit_Paid > 0)
       let #BenRatio = (&Pct_Benefit_Paid / &Ttl_Benefit_Paid) * 100
    end-if

  when = '55%'
    let #Ttl_NHCE_Cnt = &ELIG_NHCE_COUNT
    let #Ttl_HCE_Cnt  = &ELIG_HCE_COUNT

    if (&Elig_HCE_Count > 0)
      let #Avg_HCE_Benefits = &Pct_Benefit_Paid / &Elig_HCE_Count
    end-if
    if (&Elig_NHCE_Count > 0)
      let #Avg_NHCE_Benefits = &Ttl_Benefit_Paid / &Elig_NHCE_Count
    end-if

  end-evaluate

  do Print-Final-Results

FROM  PS_R_FINAL_RESULTS
ORDER BY TEST_ID ASC

end-SELECT

  print '-'     (+2,1,{RESULT_WIDTH}) fill
  print 'The Section 129 NonDiscrimination Test has ' (+2,1)
  print $Result ()

end-procedure


!************************************************
begin-procedure Final-Results-Heading
!************************************************

  let $Page_Header = 'No'

  print 'Final Results'      (+1) Center
  print '*'                  (+2,1,{RESULT_WIDTH}) fill center
  print 'All three tests must have been passed in order to pass Section 129' (+1) center
  print 'Failure of any one test, results in failure of the Section 129 NDT' (+1) center
  print '*'                  (+1,1,{RESULT_WIDTH}) fill center

  print 'Test Type'          (+5,1,32)
  print 'Pass'               (0,{PASS_COL},11)
  print 'Results / Analysis' (0,{RESULT_COL})
  print '-'                  (+1,1,{RESULT_WIDTH}) fill

end-procedure


!************************************************
begin-procedure Print-Final-Results
!************************************************

  evaluate $Test_Id

  when = 'Elig'

    print 'Eligible EE`s Test'             (+2,1,32)
    if (&Passed = 'M')
      print '?'                            (0,{PASS_COL},11)
    else
      print &Passed                        (0,{PASS_COL},11)
    end-if
    print 'Eligible NHCE Population .. '   (0,{RESULT_COL})
    print &Elig_NHCE_Count                 ()  Edit 99999999999999
    print 'Total NHCE Population ..... '   (+1,{RESULT_COL})
    print #Ttl_NHCE_Cnt                    ()  Edit 99999999999999
    print 'Eligible HCE Population ... '   (+1,{RESULT_COL})
    print &Elig_HCE_Count                  ()  Edit 99999999999999
    print 'Total HCE Population ...... '   (+1,{RESULT_COL})
    print #Ttl_HCE_Cnt                     ()  Edit 99999999999999
    print 'Lookup % Used ............. '   (+2,{RESULT_COL})
    print &NHCE_LookUp_Pct                 ()  Edit 99999999999999
    print 'UnSafe Harbor % From Table. '   (+1,{RESULT_COL})
    print &UnSafe_Harbor_Pct               ()  Edit 99999999990.99
    print 'Safe Harbor % From Table .. '   (+1,{RESULT_COL})
    print &Safe_Harbor_Pct                 ()  Edit 99999999990.99
    print 'Calculated Harbor % ....... '   (+1,{RESULT_COL})
    print &Calc_Harbor_Pct                 ()  Edit 99999999990.99
    print '  (Must exceed Safe Harbor) '   (+1,{RESULT_COL})

  when = '55%'

    print '55 Percent Average Test'        (+2,1,32)
    print &Passed                          (0,{PASS_COL},11)
    print 'S.L.O.B. Tested? .......... '   (0,{RESULT_COL},10)
    if (&Slob = 'Y')
      print 'Yes'                          (0,+11)
      print 'Cafeteria Exclusion Used? . ' (+1,{RESULT_COL},10)
      if (&Cafeteria_Plan = 'Y')
        print 'Yes'                        (0,+11)
      end-if
      if (&Cafeteria_Plan = 'N')
        print 'No'                         (0,+12)
      end-if
      if (&Cafeteria_Plan = '?')
        print '?'                          (0,+13)
      end-if
      print 'Total Employees in SLOB ... ' (+1,{RESULT_COL})
      print &Min_Employee_Count            ()  Edit 99999999999999
    end-if
    if (&Slob = 'N')
      print 'No'                           (0,+12)
    end-if
    if (&Slob = '?')
      print '?'                            (0,+13)
    end-if
    print 'Eligible NHCE Population .. '   (+2,{RESULT_COL})
    print &Elig_NHCE_Count                 ()  Edit 99999999999999
    print 'Average NHCE Benefit ...... '   (+1,{RESULT_COL})
    print #Avg_NHCE_Benefits               ()  Edit $$$,$$$,$$0.99
    print 'Eligible HCE Population ... '   (+1,{RESULT_COL})
    print &Elig_HCE_Count                  ()  Edit 99999999999999
    print 'Average HCE Benefit ....... '   (+1,{RESULT_COL})
    print #Avg_HCE_Benefits                ()  Edit $$$,$$$,$$0.99
    print 'Average Benefit Ratio % ... '   (+1,{RESULT_COL})
    print &Fifty5_Calc_Pct                 ()  Edit 99999999990.99
    print '  (Must be greater than 55%)'   (+1,{RESULT_COL})

  when = '5Pct'

    print '5 Percent Owner Test'           (+2,1,32)
    print &Passed                          (0,{PASS_COL},11)
    print 'Benefits Paid to 5% Owners. '   (0,{RESULT_COL})
    print &Pct_Benefit_Paid                ()  Edit $$$,$$$,$$0.99
    print 'Total Benefits Paid ....... '   (+1,{RESULT_COL})
    print &Ttl_Benefit_Paid                ()  Edit $$$,$$$,$$0.99
    print 'Benefit Ratio % ........... '   (+1,{RESULT_COL})
    print #BenRatio                        ()  Edit 99999999990.99
    print '  (Must be less than 25%)   '   (+1,{RESULT_COL})

  when-other

    print 'UNKNOWN TEST TYPE!!'            (+1,1)

  end-evaluate

  if (&Passed = 'N')
    move 'FAILED.' to $Result
  end-if
  if (&Passed = 'M')
    move 'possibly failed due to marginal result in Eligibility Test.' to $Result
  end-if

end-procedure


!************************************************
begin-procedure Display-Time
!************************************************

  do Get-Current-Datetime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

end-procedure

!***************************************************************************

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API

!*************************** End of NDT008 *********************************
