!***********************************************************************
!  TAX002RI:  Qtrly State Employee Wage List - RHODE ISLAND            *
!                                                                      *
!             NOTE: "#IFDEF TAXTEST" in main SELECT is used for        *
!                   testing this report against DEMO database          *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2007/11/01:12:19:55                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  731474                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'  !Set environment
#Include 'usarpt.sqc'  !Get USA variables

begin-setup

#include 'prt002.sqc'  !Printer and page-size initialization

end-setup

begin-report
  do Init-Report

  do Process-Main

  do Stdapi-Term

end-report

begin-procedure Init-Report
  display 'Quarterly Employee Wage Listing - Rhode Island'

  do Init-DateTime
  do Init-Number

  do Get-Tax-Reporting-Run-Controls
  do Get-Calendar-Year-Id
  do Stdapi-Init

  move $PeriodEndDate to $AsOfDate  !for included procedures

  do Initialize
end-procedure

begin-procedure Initialize
  move &TX.Balance_Year to $QtrBeginDate xxxx
  let #QtrBeginMonth = #QtrEndMonth - 2
  move #QtrBeginMonth to $QtrBeginMonth 09

  let $QtrBeginDate = $QtrBeginDate || '-' || $QtrBeginMonth || '-01'

  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($PeriodEndDate,$PeriodEndDate,{DEFYMD},'','')

  do DTU-DayOfWeek#($QtrBeginDate,#QtrBeginWeekday)
  if #QtrBeginWeekday <> 1
    let #BegOffsetDays = #QtrBeginWeekday - 1
    do DTU-Subtract-Days($QtrBeginDate,#BegOffsetDays,$EarnsBeginDate)
  else
    move $QtrBeginDate to $EarnsBeginDate
  end-if
  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($EarnsBeginDate,$SlctEarnsBeginDate,{DEFYMD},'','native')

  do DTU-DayOfWeek#($PeriodEndDate,#QtrEndWeekday)
  if #QtrEndWeekday <> 7
    let #EndOffsetDays = 7 - #QtrEndWeekday
    do DTU-Add-Days($PeriodEndDate,#EndOffsetDays,$EarnsEndDate)
  else
    move $PeriodEndDate to $EarnsEndDate
  end-if
  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($EarnsEndDate,$SlctEarnsEndDate,{DEFYMD},'','native')

  do DTU-Diff-Days($QtrBeginDate, $PeriodEndDate, #DaysInQtr)
  let #DaysInQtr = #DaysInQtr + 1

  create-array name=QtrWeeks size=1  field=WeekWorked:char:15
  create-array name=QtrDays  size=10 field=PayGroup:char:1
                                     field=WkSched:char:1
                                     field=WeekDay:number:100
                                     field=Week#:number:100
                                     field=WorkDay:char:100
                                     field=Wages:number:100
  move 0 to #StateMinimum
end-procedure

begin-heading 5
  uppercase $CompanyName
  print $CompanyName               (+2,03)
  if RTRIM(&Employer_ID_SUT, ' ') <> ''
    print &Employer_ID_SUT         (+1,03)
  else
    print &Employer_ID_SWT         (+1,03)
  end-if
  print 'Qtr'                      (0,15)
  print &TX.Balance_Qtr                  (0,+1)
  print &TX.Balance_Year          (0,+1)
  print 'Page Total '              (58,45)
  do Format-Number(#PageTotal, $out, '99999999.99')
  print $out                       (58,58)
  print 'All Pages Total '         (59,40)
  do Format-Number(&CompanyTotal, $out, '99999999.99')
  print $out                       (59,58)
end-heading

begin-procedure Process-Main

  Show 'Calendar Year: ' $Calendar_Year_Id
  Show 'Balance  Year: ' &TX.Balance_Year
  Show 'Balance  Qtr:  ' &TX.Balance_Qtr
  Show 'Asofdate:      ' $Asofdate

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

begin-SELECT
C.COMPANY () on-break print=never before=Company-Change
C.STATE
C.EMPLID
C.LOCALITY
C.TAX_CLASS
C.NLGRS_QTD

D1.NATIONAL_ID
PN.LAST_NAME
PN.FIRST_NAME
PN.MIDDLE_NAME

  do Process-Tax-Balance

FROM  PS_TAX_BALANCE C, PS_PERSON_NAME PN,
      PS_PERS_NID D1, PS_COMPANY_TBL A
WHERE C.EMPLID            = D1.EMPLID
  AND D1.COUNTRY          = {NID_COUNTRY}
  AND D1.NATIONAL_ID_TYPE = $PAYROLL_NID_TYPE
  AND PN.EMPLID           = C.EMPLID
#ifdef TAXTEST
  AND C.STATE             = 'CA'
#else
  AND C.STATE             = 'RI'
#endif
  AND C.LOCALITY          = ' '
  AND C.TAX_CLASS         = 'U'                    !Unemployment
  AND C.BALANCE_ID        = $Calendar_Year_Id
  AND C.BALANCE_YEAR      = &TX.Balance_Year
  AND C.BALANCE_QTR       = &TX.Balance_Qtr
  AND C.BALANCE_PERIOD    =
      (SELECT MAX(C1.BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE C1
       WHERE  C1.EMPLID        = C.EMPLID
         AND  C1.COMPANY       = C.COMPANY
         AND  C1.BALANCE_ID    = C.BALANCE_ID
         AND  C1.BALANCE_YEAR  = C.BALANCE_YEAR
         AND  C1.BALANCE_QTR   = C.BALANCE_QTR
         AND  C1.STATE         = C.STATE
         AND  C1.LOCALITY      = C.LOCALITY
         AND  C1.TAX_CLASS     = C.TAX_CLASS)
  AND C.NLGRS_QTD     > 0
  AND A.COMPANY         = C.COMPANY
  AND A.EFF_STATUS      = 'A'
  AND A.TAX_REPORT_TYPE = '2'
  AND A.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
       WHERE  COMPANY = A.COMPANY
         AND  EFFDT  <= $AsOfDate)
ORDER BY C.COMPANY, D1.NATIONAL_ID, C.STATE, C.LOCALITY, C.TAX_CLASS
end-SELECT
end-procedure

begin-procedure Process-Tax-Balance
  move $SSN   to $S123 xxx       !isolate first 3 digits

  if $S123 = &Temp_SSN_Mask or RTRIM(&D1.NATIONAL_ID, ' ') = ''
    print 'Applied For '          (+1,12)
  else
    print &D1.NATIONAL_ID         (+1,12) edit xxxbxxbxxxx
  end-if

  let $LastName   = rtrim(&PN.LAST_NAME, ' ')
  let $FirstName  = rtrim(&PN.FIRST_NAME, ' ')
  let $MidInitial = {ps-substr}(&PN.MIDDLE_NAME,1,1)

  print $LastName                 (0,30,20)
  print $FirstName                (0,+2)     edit x

  do Format-Number(&C.NLGrs_QTD, $NLGrs_QTD, '99999999.99')
  print $NLGrs_QTD                (0,58)
  add &C.NLGrs_QTD to #PageTotal

  move &C.EmplID to $EmplID
  do Get-Weeks
  move #WeeksWorked to #Weeks
  do Format-Number(#Weeks, $Weeks, '99')

  print $Weeks          (0,71)
         
  move 'PS_RC_TAX810RI D'  to $TAX810X1
  move 'PS_RC_TAX810RI D1' to $TAX810X2
  move 'PS_RC_TAX810RI D2' to $TAX810X3
  move 'PS_RC_TAX810RI D3' to $TAX810X4
  do Get-Hours

  if #Hours > 9999
     let $Hours = '9999'
  else
     let #Hours = #Hours + .99
     let #Hours = trunc (#Hours,0)
     do Format-Number(#Hours, $Hours, '9999')
  end-if

  print $Hours          (0,75)

  move '' to $NLGrs_QTD
  move '' to $Weeks
  move '' to $Hours

  add 1 to #Employees_On_Page

  if #Employees_On_Page = 50
    do Page-Complete
  end-if
end-procedure

begin-procedure Get-Total
begin-SELECT

#ifdef DB2ALL
DECIMAL(SUM(TB.NLGRS_QTD),15,3) &CompanyTotal
#else
SUM(TB.NLGRS_QTD) &CompanyTotal
#endif

FROM  PS_TAX_BALANCE TB, PS_COMPANY_TBL A2
WHERE TB.COMPANY       = &C.Company
#ifdef TAXTEST
  AND TB.STATE         = 'CA'
#else
  AND TB.STATE         = 'RI'
#endif
  AND TB.LOCALITY      = ' '
  AND TB.TAX_CLASS     = 'U'                 ! Unemployment
  AND TB.BALANCE_ID    = $Calendar_Year_Id
  AND TB.BALANCE_YEAR  = &TX.Balance_Year
  AND TB.BALANCE_QTR   = &TX.Balance_Qtr
  AND TB.NLGRS_QTD     > 0
  AND TB.BALANCE_PERIOD       =
      (SELECT MAX(C2.BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE C2
       WHERE  C2.EMPLID        = TB.EMPLID
         AND  C2.COMPANY       = TB.COMPANY
         AND  C2.BALANCE_ID    = TB.BALANCE_ID
         AND  C2.BALANCE_YEAR  = TB.BALANCE_YEAR
         AND  C2.BALANCE_QTR   = TB.BALANCE_QTR
         AND  C2.STATE         = TB.STATE
         AND  C2.LOCALITY      = TB.LOCALITY
         AND  C2.TAX_CLASS     = TB.TAX_CLASS)
  AND A2.COMPANY         = TB.COMPANY
  AND A2.EFF_STATUS      = 'A'
  AND A2.TAX_REPORT_TYPE = '2'
  AND A2.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
       WHERE  COMPANY = A2.COMPANY
         AND  EFFDT  <= $AsOfDate)
GROUP BY TB.COMPANY, TB.STATE
end-SELECT
end-procedure

begin-procedure Page-Complete
  new-page
  move 0 to #Employees_On_Page
  move 0 to #PageTotal
end-procedure

begin-procedure Company-Change
  if $Company <> ''
    new-page
  end-if

  move 0 to #PAGE_NUM
  move 0 to #PageTotal
  move 0 to #Employees_On_Page
  move &C.Company to $Company
  do Get-Company-Data

#ifdef TAXTEST
  move 'CA' to $State
#else
  move 'RI' to $State
#endif
  do Get-State-Tax-Data             !Employer ID
  do Get-Total
end-procedure


#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getstdta.sqc'  !Get-State-Tax-Data procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'  !Date math procedures
#Include 'getweeks.sqc'  !Get-Weeks procedure
#Include 'gethours.sqc'  !Get-Hours procedure
