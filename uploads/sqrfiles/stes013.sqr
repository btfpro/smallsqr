!-----------------------------------------------------------------------
! Report Name: STES013.SQR - Stock Purchase Disposition Receipt
!-----------------------------------------------------------------------
!
! Confidentiality Information:
!
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2007/06/11:04:13:11                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689716                                              !
!
!-----------------------------------------------------------------------
! Program Descr: Prints Employee Disposition Receipt
!
!
!-----------------------------------------------------------------------
! Prompts:
! Options:       None
! Tables:        RUN_CNTL_ST
! Sorts:         By Employee Name
!-----------------------------------------------------------------------

  #include 'setenv.sqc'
  #define COMPANY_TBL
!-----------------------------------------------------------------------
Begin-Setup
!-----------------------------------------------------------------------

  #include 'ptpsp125.sqc'               ! Portrait 125 Columns
  
End-Setup


!-----------------------------------------------------------------------
! Procedure: Begin-Program
! Descr:     Main Report procedure.
!-----------------------------------------------------------------------
Begin-Program

  do Init-Report
  do Main-Process
  do Reset
  do Successful-EOJ

End-Program

!-----------------------------------------------------------------------
! Procedure: Init-Report
! Descr:     Report initialization procedure.  Set titles, parameters.
!            This is called from the Begin-Program procedure.
!-----------------------------------------------------------------------
Begin-Procedure Init-Report

  let $ReportID = 'STES013'
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Define-Prcs-Vars
  do Get-Run-Control-Parms
  do Get-Current-Language
  do Get-Report-Language    ! Procedure that decides the report language
                            ! and then calls 'Report-Translation' procedure
                            ! that reads the language dep. text.

  if $prcs_process_instance = ''
  else
    do Get-SQR-Parms
  end-if

  show 'From Date:    ' $RC_FromDate
  show 'Thru Date:    ' $RC_ThruDate

  do Format-DateTime ($RC_FromDate, $FromDate, {DEFDATE}, '', '')
  do Format-DateTime ($RC_ThruDate, $ThruDate, {DEFDATE}, '', '')
  if $RC_FromDate <> ''
    let $FromThruLbl = $FromLbl || ': ' || $FromDate || '  ' || $ThruLbl || ': ' || $ThruDate
  end-if

  show 'Reprint:      ' $RC_Reprint_Prompt
  show 'Stock ID:     ' $RC_Stock_ID

  if $RC_Stock_Plan <> ''
    show 'Stock Plan:   ' $RC_Stock_Plan
  end-if

  if $RC_PrcsGrp <> ''
    show 'Prcs Group:   ' $RC_PrcsGrp
  end-if

  if $RC_Emplid <> ''
    show 'Emplid:       ' $RC_Emplid
  end-if

  do Build-Where-Clause

End-Procedure

!-----------------------------------------------------------------------
! Procedure: Report-Translation
! Descr:     This procedure is used to read language-dependent text from
!            the database.
!-----------------------------------------------------------------------
Begin-Procedure Report-Translation
  
  do Init_Report_Translation ('STOCK', $language_cd)
  do Append_Report_Translation ('STES013')

  do Get_Field_Information ('STOCK',  'FROM',             $FromLbl,         #DW)
  do Get_Field_Information ('STOCK',  'THRU',             $ThruLbl,         #DW)
  do Get_Field_Information ('STOCK',  'CURRENCY_CD',      $CurrencyLbl,     #DW)
  do Get_Field_Information ('STOCK',  'TOTAL',            $TotalLbl,        #DW)
  do Get_Field_Information ('STOCK',  'EMPLID',           $EmpIdLbl,        #DW)
  do Get_Field_Information ('STOCK',  'PURCHASE_DT',      $PurchDtLbl,      #DW)
  do Get_Field_Information ('STOCK',  'PURCHASE_PRICE',   $PurchPriceLbl,   #DW)
  do Get_Field_Information ('STOCK',  'PURCHASE_FMV',     $PurchFmvLbl,     #DW)
  do Get_Field_Information ('STOCK',  'GRANT_FMV',        $GrantFmvLbl,     #DW)
  do Get_Field_Information ('STOCK',  'DISPOSITION_PRICE',$DispPriceLbl,    #DW)
  do Get_Field_Information ('STOCK',  'DISPOSITION_DT',   $DispDtLbl,       #DW)
  do Get_Field_Information ('STOCK',  'ST_ORD_INCOME',    $OrdIncomeLbl,    #DW)
  do Get_Field_Information ('STOCK',  'SHARES_DISPOSED',  $SharesDispLbl,   #DW)

  do Get_Field_Information ('STES013','REPORT_TITLE',     $ReportTitle,     #DW)
  do Get_Field_Information ('STES013','PARTICIPANT_INFO', $ParticInfoLbl,   #DW)
  do Get_Field_Information ('STES013','NATIONAL_ID',      $NidLbl,          #DW)
  do Get_Field_Information ('STES013','FEDERAL_EIN',      $FedEinLbl,       #DW)
  do Get_Field_Information ('STES013','DISQUAL',          $DisqualLbl,      #DW)
  do Get_Field_Information ('STES013','QUAL',             $QualLbl,         #DW)

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Build-Where-Clause
!-----------------------------------------------------------------------

  let $SQLQuote             = ''''
  let $WhereEmplid          = ''
  let $WhereSort            = ''
  let $WhereDispNbr         = ''
  let $WhereFromThurDate    = ''
  let $WherePrcsGrp         = ''
  let $WhereStockPlan       = ''
  do Format-DateTime ($RC_FromDate, $FromDate, {DEFDATE}, '', '')
  do Format-DateTime ($RC_ThruDate, $ThruDate, {DEFDATE}, '', '')

  if $RC_STOCK_PLAN <> ''
    let $WhereStockPlan = 'and A.STOCK_PLAN = ' || $SQLQuote || $RC_STOCK_PLAN || $SQLQuote
  end-if

  if $RC_EMPLID <> ''
    let $WhereEmplid = 'and A.EMPLID = ' || $SQLQuote || $RC_EMPLID || $SQLQuote
  end-if

  if $RC_FROMDATE <> ''
    let $WhereFromThurDate = ' and D.DISPOSITION_DT BETWEEN '||$SQLQuote || $RC_FROMDATE  || $SQLQuote ||' and '||$SQLQuote || $RC_THRUDATE  || $SQLQuote
  end-if

  if #RC_DISPOSNNBR <> 0
    let $DispNumber   = #RC_DISPOSNNBR
    let $DispNumber1   = substr($DispNumber,1,8)
    !let $WhereDispNbr = 'and D.DISPOSITION_NBR = ' || $DispNumber
    let $WhereDispNbr = 'and D.DISPOSITION_NBR = ' || $DispNumber1
  end-if

  if $RC_PRCSGRP <> ''
    let $WherePrcsGrp = 'and A.PROCESS_GROUP = ' || $SQLQuote || $RC_PRCSGRP || $SQLQuote
  end-if

  evaluate $RC_DISPOSN_RECPT_SORT
    when  = 'C'
      let $WhereSort   = 'ORDER BY B.COUNTRY, B.POSTAL, C.NAME, C.DISQUAL_DISPOSN'
      break
    when = 'N'
      let $WhereSort   = 'ORDER BY C.NAME, D.DISQUAL_DISPOSN'
      break
    when = 'P'
      let $WhereSort   = 'ORDER BY A.PROCESS_GROUP, C.NAME, D.DISQUAL_DISPOSN'
      break
    when = 'S'
      let $WhereSort   = 'ORDER BY A.STOCK_ID, A.EMPLID, C.NAME, D.DISQUAL_DISPOSN, A.PERIOD_END_DT'
      break
  end-evaluate

  if $RC_Reprint = 'Y'
    let $WhereReprint       = ' and D.DISPOSN_RECEIPT_DT IS NOT NULL'
  else 
    let $WhereReprint       = ' and D.DISPOSN_RECEIPT_DT IS NULL'
  end-if

End-Procedure

!-----------------------------------------------------------------------
! Section: Main-Process
! Descr:   Main report logic
!-----------------------------------------------------------------------
Begin-Procedure Main-Process

Begin-Select

A.EMPLID                                                   () on-break print=never level=1 after=Do-Totals
A.STOCK_ID
A.STOCK_PLAN
A.OFFERING_ID
A.GRANT_DT
A.PERIOD_END_DT
A.GRANT_FMV
A.PURCHASE_FMV
A.PURCHASE_PRICE
A.PROCESS_GROUP
A.CURRENCY_CD
A.COUNTRY
B.ADDRESS1
B.ADDRESS2
B.ADDRESS3
B.CITY
B.STATE
B.POSTAL
B.COUNTRY
C.NAME
D.PERIOD_END_DT
D.DISQUAL_DISPOSN
D.DISPOSITION_STATUS
D.SHARES_DISPOSED
D.DISPOSITION_DT
D.DISPOSITION_NBR
D.ST_ORD_INCOME
D.DISPOSITION_PRICE
D.DISPOSN_RECEIPT_DT

  let $EmplId            = rtrim(&a.emplid, ' ')
  let $StockId           = rtrim(&a.stock_id, ' ')
  let $PeriodEndDt       = rtrim(&a.period_end_dt, ' ')
  let $StockPlan         = rtrim(&a.stock_plan,' ')
  let $OfferingId        = rtrim(&a.offering_id, ' ')
  let $GrantDt           = rtrim(&a.grant_dt, ' ')
  let $ProcessGroup      = rtrim(&a.process_group, ' ')
  let $CurrencyCd        = rtrim(&a.currency_cd, ' ')
  let #GrantFmv          = &a.grant_fmv
  let #PurchaseFmv       = &a.purchase_fmv
  let #PurchasePrice     = &a.purchase_price
  let $EAddress1         = rtrim(&b.address1, ' ')
  let $EAddress2         = rtrim(&b.address2, ' ')
  let $EAddress3         = rtrim(&b.address3, ' ')
  let $ECity             = rtrim(&b.city, ' ')
  let $EState            = rtrim(&b.state, ' ')
  let $EPostal           = rtrim(&b.postal, ' ')
  let $ECountry          = rtrim(&b.country, ' ')
  let $Name              = rtrim(&c.name, ' ')
  let $DisqualDisposn    = rtrim(&d.disqual_disposn, ' ')
  let $DispositionStatus = rtrim(&d.disposition_status, ' ')
  let #SharesDisposed    = &d.shares_disposed
  let $DispositionDt     = rtrim(&d.disposition_dt, ' ')
  let #DispositionNbr    = &d.disposition_nbr
  let #OrdIncome         = &d.st_ord_income
  let #DispositionPrice  = &d.disposition_price
  let $DisposnReceiptDt  = rtrim(&d.disposn_receipt_dt, ' ')

  do Get-National-Id
  do Get-Job-Data
  do Get-Stock-Company
  do Get-Stock-Plan-Descr
  do Get-Purchase-Discount
 
  if $JobCompany = $StockCompany
    let $Company         = $JobCompany
    do Get-Company-Info
    let $CorporationName = $CDescr
    let $CompanyName     = $CDescr
  else
    let $Company = $JobCompany
    do Get-Company-Info
    let $CompanyName     = $CDescr
    let $Company = $StockCompany
    do Get-Company-Info
    let $CorporationName = $CDescr
  end-if

  do Print-Report
  let $EmplidOld         = $EmplId
  let $DisqualDisposnOld = $DisqualDisposn

from PS_ST_ESPP_PURCH    A,
     PS_PERSON_ADDRESS   B,
     PS_PERSON_NAME      C,
     PS_ST_ESPP_DISPOSN  D
where A.STOCK_ID           = $RC_STOCK_ID
  and A.EMPLID             = B.EMPLID
  and (B.ADDRESS_TYPE      = 'MAIL'
   or (B.ADDRESS_TYPE      = 'HOME'
  and NOT EXISTS (select 'X'
                   from PS_PERSON_ADDRESS
                  where EMPLID       = B.EMPLID
                    and ADDRESS_TYPE = 'MAIL' )))
  and A.EMPLID             = C.EMPLID
  and A.EMPLID             = D.EMPLID
  and A.STOCK_ID           = D.STOCK_ID
  and A.STOCK_PLAN_TYPE    = D.STOCK_PLAN_TYPE
  and A.STOCK_PLAN         = D.STOCK_PLAN
  and A.OFFERING_ID        = D.OFFERING_ID
  and A.PERIOD_END_DT      = D.PERIOD_END_DT
  and A.PROCESS_GROUP      = D.PROCESS_GROUP
  AND D.DISPOSITION_STATUS = 'C'
[$WhereEmplid]
[$WhereDispNbr]
[$WhereFromThurDate]
[$WherePrcsGrp]
[$WhereStockPlan]
[$WhereSort]

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-National-Id
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Get-National-Id

  let $NationalId = ''

Begin-Select

PERS_NID.NATIONAL_ID

  let $NationalId = rtrim(&pers_nid.national_id, ' ')

 from PS_PERS_NID PERS_NID
where PERS_NID.EMPLID      = $Emplid
  and PERS_NID.PRIMARY_NID = 'Y'

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Job-Data
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Get-Job-Data

  do Define-PrimJob-Clause('JOB',$AsOfToday, $PRIM_JOB_CLAUSE)
  let $JobCompany    = ''
  let $TaxLocationCd = ''

Begin-Select

JOB.COMPANY
JOB.TAX_LOCATION_CD

  let $JobCompany    = rtrim(&job.company,' ')
  let $TaxLocationCd = rtrim(&job.tax_location_cd,' ')
  do Get-Tax-Country

 from PS_JOB JOB
where JOB.EMPLID   = $EmplId
  and JOB.EFFDT    = (select max(EFFDT)
                        from PS_JOB
                       where EMPLID   = JOB.EMPLID
                         and EMPL_RCD = JOB.EMPL_RCD
                         and EFFDT   <= $PeriodEndDt)
  and JOB.EMPL_RCD = [$PRIM_JOB_CLAUSE]
  and JOB.EFFSEQ   = (select max(EFFSEQ)
                        from PS_JOB
                       where EMPLID   = JOB.EMPLID
                         and EMPL_RCD = JOB.EMPL_RCD
                         and EFFDT    = JOB.EFFDT)
End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Tax-Country
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Get-Tax-Country

  let $TaxCountry = ''

Begin-Select

TAX_LOCATION1.COUNTRY

  let $TaxCountry = rtrim(&tax_location1.country,' ')

from PS_TAX_LOCATION1 TAX_LOCATION1
where TAX_LOCATION1.TAX_LOCATION_CD = $TaxLocationCd

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Stock-Company
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Get-Stock-Company

  let $StockCompany = ''
  let $StockDescr   = ''

Begin-Select

STOCK_TBL.COMPANY
STOCK_TBL.DESCR

  let $StockCompany = rtrim(&stock_tbl.company,' ')
  let $StockDescr   = rtrim(&stock_tbl.descr,' ')

from PS_STOCK_TBL STOCK_TBL
where STOCK_TBL.STOCK_ID = $StockId

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Stock-Plan-Descr
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Get-Stock-Plan-Descr

  let $StockPlanDescr = ''

Begin-Select

STOCK_PLAN_TBL.DESCR

  let $StockPlanDescr = rtrim(&stock_plan_tbl.descr,' ')

from PS_STOCK_PLAN_TBL STOCK_PLAN_TBL
where STOCK_PLAN_TBL.STOCK_ID        = $StockId
  and STOCK_PLAN_TBL.STOCK_PLAN_TYPE = 'E'
  and STOCK_PLAN_TBL.STOCK_PLAN      = $StockPlan

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Purchase-Discount
! Descr:   
!-----------------------------------------------------------------------
Begin-Procedure Get-Purchase-Discount

  let #PurchaseDiscount = 0

Begin-Select

ST_ESPP_PLAN.PURCHASE_DISCOUNT

  let #PurchaseDiscount = &st_espp_plan.purchase_discount

from PS_ST_ESPP_PLAN ST_ESPP_PLAN
where ST_ESPP_PLAN.STOCK_ID        = $StockId
  and ST_ESPP_PLAN.STOCK_PLAN_TYPE = 'E'
  and ST_ESPP_PLAN.STOCK_PLAN      = $StockPlan
  and ST_ESPP_PLAN.EFFDT           = (select max(EFFDT)
                                          from PS_ST_ESPP_PLAN
                                         where STOCK_ID        = ST_ESPP_PLAN.STOCK_ID
                                           and STOCK_PLAN_TYPE = ST_ESPP_PLAN.STOCK_PLAN_TYPE
                                           and STOCK_PLAN      = ST_ESPP_PLAN.STOCK_PLAN
                                           and EFFDT          <= $PeriodEndDt)
End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Company-Info
! Descr:   Retrieve the Company Name and Address
!-----------------------------------------------------------------------
Begin-Procedure Get-Company-Info

Begin-Select

COMPANY_TBL.EFFDT
COMPANY_TBL.DESCR
COMPANY_TBL.ADDRESS1
COMPANY_TBL.ADDRESS2
COMPANY_TBL.ADDRESS3
COMPANY_TBL.ADDRESS4
COMPANY_TBL.CITY
COMPANY_TBL.STATE
COMPANY_TBL.POSTAL
COMPANY_TBL.COUNTRY
COMPANY_TBL.FEDERAL_EIN

  !let $CDescr      = rtrim(&company_tbl.descr, ' ')
  let $COMPANY_TBL-DESCR = rtrim(&company_tbl.descr, ' ')
  do Get_Related_COMPANY_TBL($Company, &COMPANY_TBL.EFFDT)
  
  let $CDescr      = $COMPANY_TBL-DESCR  
  let $CAddress1   = rtrim(&company_tbl.address1, ' ')
  let $CAddress2   = rtrim(&company_tbl.address2, ' ')
  let $CAddress3   = rtrim(&company_tbl.address3, ' ')
  let $CAddress4   = rtrim(&company_tbl.address4, ' ')
  let $CCity       = rtrim(&company_tbl.city, ' ')
  let $CState      = rtrim(&company_tbl.state, ' ')
  let $CPostal     = rtrim(&company_tbl.postal, ' ')
  let $CCountry    = rtrim(&company_tbl.country, ' ')
    
   
from  PS_COMPANY_TBL COMPANY_TBL
where COMPANY_TBL.COMPANY = $Company
  and COMPANY_TBL.EFFDT   = (select max(EFFDT)
                               from PS_COMPANY_TBL
                              where COMPANY = COMPANY_TBL.COMPANY
                                and EFFDT  <= $AsOfToday)
  and COMPANY_TBL.EFF_STATUS = 'A'

End-Select

End-Procedure


!-----------------------------------------------------------------------
! Section: Print-Report
! Descr:   Prints the bulk of the Statement
!-----------------------------------------------------------------------
Begin-Procedure Print-Report

  if $EmplidOld <> $Emplid

    date-time () 'Day, Mon DD, YYYY  HH:MI PM' &PrintDate
    print &PrintDate                                       (01,000,   ) center bold
    print $ReportTitle                                     (+1,000,   ) center bold
    print $FromThruLbl                                     (+1,001,   ) center

    print $StockId                                         (+1,001,010)
    print $CorporationName                                 (+1,001,030)
    print $CAddress1                                       (+1,001,035)
    if $CAddress2 <> ''
      print $CAddress2                                     (+1,001,035)
    end-if
    if $CAddress3 <> ''
      print $CAddress3                                     (+1,001,035)
    end-if
    if $CAddress1 <> ''
      let $CityStZip = $CCity || ', ' || $CState || ' '
      let #Length = Length($CPostal)
      if $CCountry = 'USA'
        if #Length = 5
          let $Postal = edit($CPostal, 'XXXXX')
        else
          let $Postal = edit($CPostal, 'XXXXX-XXXX')
        end-if
      end-if
      let $CityStZip = $CityStZip || $Postal
      print $CityStZip                                     (+1,001,051)
    end-if
    let $CityStZip = ''
    let $Postal    = ''
    print $CCountry                                        (+1,001,003)
    print $FedEinLbl                                       (+1,001,011)
    print ':'                                              (  ,000,001)
    print &company_tbl.federal_ein                         (  , +1,010) edit XX-XXXXXXX

!--------------------------------------
! Participant Information
!--------------------------------------
    print $ParticInfoLbl                                   (14,001,030) underline
    print $EmpidLbl                                        (+1,001,006)
    print ':'                                              (  ,   ,001)
    print $Emplid                                          (  ,030,011)
    print $NidLbl                                          (+1,001,011)
    print ':'                                              (  ,   ,001)

    evaluate $TaxCountry
    when = 'USA'
      print $NationalId                                    (  ,030,011)  edit XXX-XX-XXXX
      break
    when = 'CAN'
      print $NationalId                                    (  ,030,013)  edit XXX-XXX-XXXXX
      break
    when-other
      print $NationalId                                    (  ,030,020)
      break
    end-evaluate

!--------------------------------------
! Employee Name / Address
!--------------------------------------
    do Rotate-Name
    print $Name                                            (15,075,045)
    print $EAddress1                                       (+1,075,035)
    if $EAddress2 <> ''
      print $EAddress2                                     (+1,075,035)
    end-if
    if $EAddress3 <> ''
      print $EAddress3                                     (+1,075,035)
    end-if
    if  rtrim($EAddress1,' ') <> ''
      let $CityStZip = rtrim($ECity,' ') || ', ' || rtrim($EState,' ') || ' '
      let #Length = Length($EPostal)
      if $ECountry = 'USA'
        if #Length = 5
          let $EPostal = edit($EPostal, 'XXXXX')
        else
          let $EPostal = edit($EPostal, 'XXXXX-XXXX')
        end-if
      end-if
      let $CityStZip = $CityStZip || $EPostal
      print $CityStZip                                     (+1,075,050)
    end-if
    if $ECountry <> ''
      print $ECountry                                      (+1,075,003)
    end-if
    if $DisqualDisposn = 'Y'
      print $DisqualLbl                                    (+3,001,   ) underline
    else
      print $QualLbl                                       (+3,001,   ) underline
    end-if
    do Print-Header
  else
    if $DisqualDisposnOld <> $DisqualDisposn
      if #TotalShares > 0
        print $TotalLbl                                    (+2,068,005)
        print ':'                                          (  ,000,001)
        print #TotalShares                                 (  ,076,018) edit 999,999,999.999999
        print #TotalIncome                                 (  ,115,015) edit $999,999,999.99
      end-if
      let #TotalShares = 0
      let #TotalIncome = 0
      if $DisqualDisposn = 'Y'
        print $DisqualLbl                                  (+3,001,   ) underline
      else
        print $QualLbl                                     (+3,001,   ) underline
      end-if
      do Print-Header
    end-if
  end-if

  do Print-Details
  do Update-Field

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Print-Header
!-----------------------------------------------------------------------
  print $PurchDtLbl                                        (+2,001,013)
  print $GrantFmvLbl                                       (  ,017,009)
  print $PurchPriceLbl                                     (  ,028,014)
  print $PurchFmvLbl                                       (  ,044,012)
  print $DispDtLbl                                         (  ,058,016)
  print $SharesDispLbl                                     (  ,079,015)
  print $DispPriceLbl                                      (  ,096,017)
  print $OrdIncomeLbl                                      (  ,115,015)
  print '-'                                                (+1,001,129) fill

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Print-Details
!-----------------------------------------------------------------------
  do Format-DateTime ($PeriodEndDt, $Date, {DEFDATE}, '', '')
  print $Date                                              (+1,001,010)
  print #GrantFmv                                          (  ,015,011) edit $999.999999
  print #PurchasePrice                                     (  ,031,011) edit $999.999999
  print #PurchaseFmv                                       (  ,045,011) edit $999.999999
  do Format-DateTime ($DispositionDt, $Date, {DEFDATE}, '', '')
  print $Date                                              (  ,058,010)
  print #SharesDisposed                                    (  ,076,018) edit 999,999,999.999999
  print #DispositionPrice                                  (  ,102,011) edit $999.999999
  print #OrdIncome                                         (  ,115,015) edit $999,999,999.99

  let #TotalShares = #TotalShares + #SharesDisposed
  let #TotalIncome = #TotalIncome + #OrdIncome

End-Procedure

!-----------------------------------------------------------------------
! Update receipt print date
!-----------------------------------------------------------------------
Begin-Procedure Update-Field

Begin-Sql
UPDATE PS_ST_ESPP_DISPOSN
   SET DISPOSN_RECEIPT_DT = $AsOfToday
 where EMPLID          = $Emplid
   and STOCK_ID        = $StockId
   and STOCK_PLAN_TYPE = 'E'
   and STOCK_PLAN      = $StockPlan
   and OFFERING_ID     = $OfferingId
   and PERIOD_END_DT   = $PeriodEndDt
   and PROCESS_GROUP   = $ProcessGroup
   and DISPOSITION_NBR = #DispositionNbr
End-Sql

End-Procedure

!-----------------------------------------------------------------------
! Section: Do-Totals
! Descr:
!-----------------------------------------------------------------------
Begin-Procedure Do-Totals

  if #TotalShares > 0
    print $TotalLbl                                        (+2,068,005)
    print ':'                                              (  ,000,001)
    print #TotalShares                                     (  ,076,018) edit 999,999,999.999999
    print #TotalIncome                                     (  ,115,015) edit $999,999,999.99
  end-if
  let #TotalShares = 0
  let #TotalIncome = 0
  new-page

End-Procedure

!-----------------------------------------------------------------------
! SQC Includes
!-----------------------------------------------------------------------
#include 'askftd.sqc'                  ! Routines to accept from - thru dates
#include 'curdttim.sqc'                ! Procedures: Get-Current-DateTime
#include 'datetime.sqc'                ! Procedures: Init-Datetime & Format-DateTime
#include 'eoj.sqc'                     ! End of Report Format
#include 'number.sqc'                  ! Procedures: Init-Number
#include 'prcsapi.sqc'                 ! Process Scheduler API
#include 'prcsdef.sqc'                 ! Update Process Open_Trans variable declaration
#include 'reset.sqc'                   ! Reset printer procedure
#include 'rotname1.sqc'                ! First Name, Last Name
#include 'sqrtrans.sqc'                ! Access Strings Table
#include 'strunctl.sqc'                ! Stock Admin's Run Control Record
#include 'getprimj.sqc'
#include 'getrplng.sqc'                !Gets the report language
#include 'rellang.sqc'                 ! Translations File 
