!***********************************************************************
!  TAX002ME:  Qtrly State Employee Wage List - MAINE                   *
!                                                                      *
!             REPORT DOES NOT HANDLE 'SEASONAL' WAGES                  *
!             NOTE: "#IFDEF TAXTEST" in main SELECT is used for        *
!                   testing this report against DEMO database          *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:05:53:21                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!#define TAXTEST
#include 'setenv.sqc'  !Set environment
#Include 'usarpt.sqc'  !Get USA variables

begin-setup

#include 'prt002a.sqc' !Printer and page-size initialization


end-setup

begin-report
  do Init-Report

  do Process-Main

  if #Employees_On_Page > 0 and #Employees_On_Page < 23
    do Page-Complete
  end-if

  do Stdapi-Term

end-report

begin-procedure Init-Report
  display 'Quarterly Employee Wage List - Maine'

  do Init-DateTime
  do Init-Number

  do Get-Tax-Reporting-Run-Controls

  move $PeriodEndDate to $AsOfDate  !for included procedures

  do Initialize
  do Get-Calendar-Year-Id
  do Stdapi-Init
  do Report-Run-Control
end-procedure

begin-procedure Initialize
#ifdef TAXTEST
  move 'CA' to $State
#else
  move 'ME' to $State
#endif
end-procedure

begin-procedure Report-Run-Control
begin-select

ME.ME_941_C1
FROM PS_RC_TAX002ME ME
WHERE ME.OPRID = $Prcs_OprID
  AND ME.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-SELECT
  move &ME.ME_941_C1       to $Me_941_C1_Rpt

end-procedure


begin-heading 10
  uppercase $CompanyName
  Evaluate &TX.Balance_Qtr
   when = 1
     move '0101' to $HoldStartDate
     move '0331' to $HoldEndDate
     move &TX.Balance_Year to #HoldYear
   when = 2
     move '0401' to $HoldStartDate
     move '0630' to $HoldEndDate
     move &TX.Balance_Year to #HoldYear
   when = 3
     move '0701' to $HoldStartDate
     move '0930' to $HoldEndDate
     move &TX.Balance_Year to #HoldYear
   when = 4
     move '1001' to $HoldStartDate
     move '1231' to $HoldEndDate
     move &TX.Balance_Year to #HoldYear
  end-evaluate

  let $id = RTRIM(&Employer_ID_SWT, ' ')
  do Unstring-ID

if $ME_941_C1_Rpt = 'C'
  print $CompanyName            (3,14)
  print $id4                       (5,14) edit xbxb-bxbxbxbxbxbxbxbxbxbx
else
  print $CompanyName                   (5,14)
  print $id4                       (7,14) edit xbxb-bxbxbxbxbxbxbxbxbxbx
end-if

if $ME_941_C1_Rpt = 'C'
  if RTRIM(&Employer_ID_SUT, ' ') <> ''
    print &Employer_ID_SUT            (7,14) edit xbxbxbxbxbxbxbxbxbxbxb
  end-if
end-if

  print $HoldStartDate                (9,14) edit xbxbbxbx
  print #HoldYear                       (,24) edit ~~xbx
  print $HoldEndDate                    (,32) edit xbxbbxbx
  print #HoldYear                       (,42) edit ~~xbx

if #PAGE_NUM = 1
  if $ME_941_C1_Rpt = 'C'
    do Format-Number(&TB.NLGrs_QTD, $out, 'b9999999V99')
    print $out                        (61,39) edit xbxbxbxbxbxbxbxbxbx
    do Format-Number(&TB1.TAX_QTD, $out, 'b9999999V99')
    print $out                          (,59) edit xbxbxbxbxbxbxbxbxbx
  else
    do Format-Number(&TB1.TAX_QTD, $out, 'b9999999V99')
    print $out                        (62,57) edit xbxbxbxbxbxbxbxbxbx
  end-if
end-if

if $ME_941_C1_Rpt = 'C'
  do Format-Number(#PageTotal, $out, 'b9999999V99')
  print $out                          (59,39) edit xbxbxbxbxbxbxbxbxbx
  do Format-Number(#PageTaxTotal, $out, 'b9999999V99')
  print $out                            (,59) edit xbxbxbxbxbxbxbxbxbx
else
  do Format-Number(#PageTaxTotal, $out, 'b9999999V99')
  print $out                          (60,57) edit xbxbxbxbxbxbxbxbxbx
end-if
do Format-Number(#PAGE_NUM, $out, '999')
print $out                             (65,6)
end-heading

begin-procedure Process-Main

  Show 'Calendar Year: ' $Calendar_Year_Id
  Show 'Balance  Year: ' &TX.Balance_Year
  Show 'Balance  Qtr:  ' &TX.Balance_Qtr
  Show 'Asofdate:      ' $Asofdate

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

begin-SELECT
C.COMPANY        () on-break print=never level=1 before=Company-Change
C.STATE
C.EMPLID         () on-break print=never level=2 after=EmplID-Change

C.TAX_CLASS
C.LOCALITY
C.TXGRS_QTD
C.NLGRS_QTD
C.TAX_QTD
D1.NATIONAL_ID   () on-break print=never level=2 save=$SSN
PN.LAST_NAME      () on-break print=never level=2 save=$LName
PN.FIRST_NAME     () on-break print=never level=2 save=$FName
PN.NAME_INITIALS  () on-break print=never level=2 save=$MName

  move &C.Company       to $Company
  do Process-Tax-Balance

FROM  PS_TAX_BALANCE C, PS_PERSON_NAME PN, PS_PERS_NID D1, PS_COMPANY_TBL A
WHERE D1.EMPLID           = C.EMPLID
  AND D1.COUNTRY          = {NID_COUNTRY}
  AND D1.NATIONAL_ID_TYPE = $PAYROLL_NID_TYPE
  AND PN.EMPLID           = C.EMPLID
#ifdef TAXTEST
  AND C.STATE             = 'CA'
#else
  AND C.STATE             = 'ME'
#endif
  AND C.LOCALITY          = ' '
  AND C.TAX_CLASS         IN ('U','H')
  AND C.BALANCE_ID        = $Calendar_Year_Id
  AND C.BALANCE_YEAR      = &TX.Balance_Year
  AND C.BALANCE_QTR       = &TX.Balance_Qtr
  AND C.BALANCE_PERIOD    =
      (SELECT MAX(C1.BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE C1
       WHERE  C1.EMPLID        = C.EMPLID
         AND  C1.COMPANY       = C.COMPANY
         AND C1.BALANCE_ID     = C.BALANCE_ID
         AND C1.BALANCE_YEAR   = C.BALANCE_YEAR
         AND C1.BALANCE_QTR    = C.BALANCE_QTR
         AND  C1.STATE         = C.STATE
         AND  C1.LOCALITY      = C.LOCALITY
         AND  C1.TAX_CLASS     = C.TAX_CLASS)
  AND ((C.NLGRS_QTD > 0 AND C.TAX_CLASS = 'U')
       OR (C.TAX_CLASS = 'H' AND C.TAX_QTD > 0))
  AND A.COMPANY = C.COMPANY
  AND A.EFF_STATUS = 'A'
  AND A.TAX_REPORT_TYPE = '2'
  AND A.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
       WHERE  COMPANY = A.COMPANY
         AND  EFFDT  <= $AsOfDate)
ORDER BY C.COMPANY, D1.NATIONAL_ID, C.EMPLID, C.STATE, C.LOCALITY, C.TAX_CLASS
end-SELECT
end-procedure

begin-procedure Process-Tax-Balance
IF &C.Tax_Class = 'U' and &C.NLGrs_QTD > 0
  do Format-Number(&C.NLGrs_QTD, $NLGrs_QTD, 'b999999V99')
  add &C.NLGrs_QTD to #PageTotal
else
  If &C.Tax_Class = 'U'
    move ' ' to $NLGrs_QTD
  end-if
end-if
if &C.Tax_Class = 'H' and  &C.Tax_Qtd > 0
  do Format-Number(&C.Tax_Qtd, $Tax_QTD, 'b999999V99')
  add &C.Tax_Qtd to #PageTaxTotal
else
  if &C.Tax_Class = 'H'
     move ' ' to $Tax_QTD
  end-if
end-if
end-procedure

begin-procedure EmplID-Change

  uppercase $LName
  uppercase $FName
  uppercase $MName

  let $LastName = rtrim($LName, ' ')
  let $FirstName = rtrim($FName, ' ')
  let $MidInitial = {ps-substr}($MName,1,1)
  string $LastName $FirstName $MidInitial by ' ' into $prtname
  move $SSN to $S123 xxx       !isolate first 3 digits

if $ME_941_C1_Rpt = 'C' and ($NLGrs_QTD > ' ' or $Tax_QTD > ' ')
  print $prtname (+2,6,19)
  if $S123 = &Temp_SSN_Mask or RTRIM($SSN, ' ') = ''
    print 'Applied For'      (0,27)
  else
    print $SSN               (0,27)  edit xxxbbxxbbxxxx
  end-if
  print  $NLGrs_QTD           (,41) edit xbxbxbxbxbxbxbxbx
  move '' to $NLGrs_QTD
  print  $Tax_QTD             (,61) edit xbxbxbxbxbxbxbxbx
  move '' to $Tax_QTD
  add 1 to #Employees_On_Page
else
  if $Tax_QTD > ' '
    print $prtname (+2,6,30)
    if $S123 = &Temp_SSN_Mask or RTRIM($SSN, ' ') = ''
      print 'Applied For'      (0,38)
    else
      print $SSN               (0,38)  edit xxxbbxxbbxxxx
    end-if
    print  $Tax_QTD             (,59) edit xbxbxbxbxbxbxbxbx
    move '' to $Tax_QTD
    add 1 to #Employees_On_Page
  end-if
end-if
  if #Employees_On_Page = 23
    do Page-Complete
  end-if
end-procedure

begin-procedure Get-Total
begin-SELECT

COUNT(*)          &EmplCount,

#ifdef DB2ALL
DECIMAL(SUM(TB.NLGRS_QTD),15,3) &TB.NLGrs_QTD
#else
SUM(TB.NLGRS_QTD)    &TB.NLGrs_QTD
#endif

FROM  PS_TAX_BALANCE TB, PS_COMPANY_TBL A2
WHERE  TB.COMPANY       = &C.Company
#ifdef TAXTEST
  AND TB.STATE         = 'CA'
#else
  AND TB.STATE         = 'ME'
#endif
  AND TB.LOCALITY      = ' '
  AND TB.TAX_CLASS     = 'U'                 ! Unemployment
  AND TB.BALANCE_ID    = $Calendar_Year_Id
  AND TB.BALANCE_YEAR  = &TX.Balance_Year
  AND TB.BALANCE_QTR   = &TX.Balance_Qtr
  AND TB.NLGRS_QTD     > 0
  AND TB.BALANCE_PERIOD       =
      (SELECT MAX(C2.BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE C2
       WHERE  C2.EMPLID        = TB.EMPLID
         AND  C2.COMPANY       = TB.COMPANY
         AND C2.BALANCE_ID    = TB.BALANCE_ID
         AND C2.BALANCE_YEAR  = TB.BALANCE_YEAR
         AND C2.BALANCE_QTR   = TB.BALANCE_QTR
         AND  C2.STATE         = TB.STATE
         AND  C2.LOCALITY      = TB.LOCALITY
         AND  C2.TAX_CLASS     = TB.TAX_CLASS)
  AND A2.COMPANY = TB.COMPANY
  AND A2.EFF_STATUS = 'A'
  AND A2.TAX_REPORT_TYPE = '2'
  AND A2.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
       WHERE  COMPANY = A2.COMPANY
         AND  EFFDT  <= $AsOfDate)
GROUP BY TB.COMPANY, TB.STATE
end-SELECT

  let #TotalPages = CEIL(&EmplCount/23)
end-procedure
begin-procedure Get-Total-Taxes
begin-SELECT


#ifdef DB2ALL
DECIMAL(SUM(TB1.TAX_QTD),15,3) &TB1.TAX_QTD
#else
SUM(TB1.TAX_QTD)    &TB1.TAX_QTD
#endif

FROM  PS_TAX_BALANCE TB1, PS_COMPANY_TBL A3
WHERE  TB1.COMPANY       = &C.Company
#ifdef TAXTEST
  AND TB1.STATE         = 'CA'
#else
  AND TB1.STATE         = 'ME'
#endif
  AND TB1.LOCALITY      = ' '
  AND TB1.TAX_CLASS     = 'H'                 ! ME withholding
  AND TB1.BALANCE_ID    = $Calendar_Year_Id
  AND TB1.BALANCE_YEAR  = &TX.Balance_Year
  AND TB1.BALANCE_QTR   = &TX.Balance_Qtr
  AND TB1.TAX_QTD     > 0
  AND TB1.BALANCE_PERIOD       =
      (SELECT MAX(C3.BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE C3
       WHERE  C3.EMPLID        = TB1.EMPLID
         AND  C3.COMPANY       = TB1.COMPANY
         AND C3.BALANCE_ID    = TB1.BALANCE_ID
         AND C3.BALANCE_YEAR  = TB1.BALANCE_YEAR
         AND C3.BALANCE_QTR   = TB1.BALANCE_QTR
         AND  C3.STATE         = TB1.STATE
         AND  C3.LOCALITY      = TB1.LOCALITY
         AND  C3.TAX_CLASS     = TB1.TAX_CLASS)
  AND A3.COMPANY = TB1.COMPANY
  AND A3.EFF_STATUS = 'A'
  AND A3.TAX_REPORT_TYPE = '2'
  AND A3.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
       WHERE  COMPANY = A3.COMPANY
         AND  EFFDT  <= $AsOfDate)
GROUP BY TB1.COMPANY, TB1.STATE
end-SELECT

end-procedure
begin-procedure Page-Complete
  add 1 to #PAGE_NUM

  new-page
  move 0 to #PageTotal
  move 0 to #PageTaxTotal
  move 0 to #Employees_On_Page
end-procedure

begin-procedure Company-Change
  if #Employees_On_Page < 23 and #Employees_On_Page > 0
    do Page-Complete
  end-if
  move 0 to #PAGE_NUM
  move 0 to #TotalPages
  move &C.Company to $Company
  do Get-Company-Data
#ifdef TAXTEST
  move 'CA' to $State
#else
  move 'ME' to $State
#endif
  do Get-State-Tax-Data             !Employer ID
  do Get-Total
  do Get-Total-Taxes
end-procedure


begin-procedure Unstring-ID

  find '-' in $id 0 #locn1
  if #locn1 <> -1
    unstring $id by '-' into $id1 $id2 $id3
    string $id1 $id2 $id3 by '' into $id4
  end-if


  find ' ' in $id 0 #locn2
  if #locn2 <> -1
    unstring $id by ' ' into $id1 $id2 $id3
    string $id1 $id2 $id3 by '' into $id4
  end-if

  If #locn1 = -1 and #locn2 = -1
    let $id4 = $id
  end-if

  do Get-Total-Taxes
end-procedure



#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getstdta.sqc'  !Get-State-Tax-Data procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers

#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'stdapi.sqc'    !Update Process API
