!***********************************************************************
!  T002CAHP:  Qtrly State Employee Wage List - CALIFORNIA              *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:05:40:50                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       HP version of core SQR TAX002CA                        *
! HP00006       E&G 7.5  System test fixes                             *
! HP99998       E&G 7.51 AU Merge                                      *
!***********************************************************************

#include 'setenv.sqc'  !Set environment
#Include 'usarpt.sqc'  !Get USA variables


begin-setup

#include 'prt002.sqc'  !Printer and page-size initialization

end-setup


begin-report
  do Init-Report

  do Process-Main
  do Generate-Report

  if #Employees_On_Page > 0 and #Employees_On_Page < 7
    do Page-Complete
  end-if

if #Count_S > 0
    display ''
    display 'Employess with negative amounts listings'
    display 'will be written to file: TAX002CA'
end-if

  do Delete-Work-File
  do Stdapi-Term

end-report

begin-procedure Init-Report
  display 'Quarterly Employee Wage List - California'

  do Init-DateTime
  do Init-Number

  do Get-Tax-Reporting-Run-Controls

  move $PeriodEndDate to $AsOfDate  !for included procedures
  do Get-Dates
  do Get-Current-DateTime

  do Stdapi-Init
  do Get-Calendar-Year-Id
  move 0 to #Count_S
  do Open-File
  do Delete-Work-File

  let #Max_CompOpt = 50
  let #CompOpt_Cnt = 0
  let #CompOpt_Idx = 0
  create-array name=CompOpt  size=50 field=Company:char
                                     field=Month1Count:number
                                     field=Month2Count:number
                                     field=Month3Count:number
                                     field=NoPayroll:char
                                     field=FinalRpt:char
                                     field=SepTaxRpt:char
end-procedure

begin-procedure Open-File
if $FileType = 'D'
   move 0 to #RecordCount
   if #FileExtension <> 0
      close 10
   end-if
   add 1 to #FileExtension
   move #FileExtension to $FileExtension 099
   let $FileID = '{IMPORTPREFIX}' || 'TAX002CA.' || $FileExtension
   open $FileID as 10 for-writing record=128:fixed
else

  open '{IMPORTPREFIX}TAX002CA{IMPORTSUFFIX}' as 10 for-writing record=275:fixed
end-if
end-procedure

begin-heading 19
  print 'DE 6'                     (1,6)
  print 'EDD 98098'                (0,26)

  print 'Page '                    (3,10)
  do Format-Number(#PAGE_NUM, $out, '999')
  print $out                       (0,15)
  print 'of '                      (0,19)
  do Format-Number(#TotalPages, $out, '999')
  print $out                       (0,22)
  print 'B0061098'                 (0,58) bold

  move '0' to $year4
  do Format-DateTime($PeriodEndDate, $out, {DEFMDY}, '', '')
  print 'QTR ENDED '               (5,6)
  print $out                       (5,16)
  move '0' to $year4
  do Format-DateTime($PeriodDueDate, $out, {DEFMDY}, '', '')
  print 'DUE '                     (5,25)
  print $out                       (5,29)
  move '0' to $year4
  do Format-DateTime($PeriodDelDate, $out, {DEFMDY}, '', '')
  print 'DELINQUENT '              (5,38)
  print $out                       (5,49)
  move &TX.Balance_Year to $EDD_Yr ~~xx
  print $EDD_Yr                    (5,74)
  print &TX.Balance_Qtr            (5,77)

  let $id = RTRIM($Employer_ID, ' ')
  do Unstring-ID
  print $id4                       (8,68) edit xxxbxxxxbx

  print $CompanyName               (13,10)

  print &CT.address1               (14,10)

  let $field = RTRIM(&CT.City, ' ')
  print $field                     (15,10)
  print &CT.State                  ()      edit ,bxx
  move  &CT.Postal                 to $Zip
  move  &CT.Postal                 to $ZipExtsn ~~~~~~xxxx

  if instr($Zip,'-',6) = 0
  and $ZipExtsn <> '    '
      let $Zip = substr($Zip,1,5) || '-' || substr($Zip,6,4)
  end-if
  print $Zip                       (0,+2)

  if #PAGE_NUM = 1 and
    ($Sep_Tax_Rpt = 'N' or ($Sep_Tax_Rpt = 'Y' and $TAX_CLASS = 'U'))
    do Format-Number(#Month1Count, $out, '9999')
    print $out                       (17,56) edit xbxxx
    do Format-Number(#Month2Count, $out, '9999')
    print $out                       (0,64) edit xbxxx
    do Format-Number(#Month3Count, $out, '9999')
    print $out                       (0,73) edit xbxxx
  end-if

  if $Ca_No_Payroll = 'Y'
    print 'X'                      (19,52)
  else
    print ' '                      (19,52)
  end-if
  if $Ca_Final_Rpt = 'Y'
    print 'X'                      (19,62)
  else
    print ' '                      (19,62)
  end-if

  evaluate $Wage_Plan_Cd
    when = 'S'
    when = 'J'
    when = 'A'
    when = 'P'
      print '                                                       '      (10,6)
      print ' '                         (19,12)
      print '                 '         (19,15)
      break
    when = 'U'
    when = 'L'
      print '                                                       '      (10,6)
      print 'X'                         (19,12)
      print 'VOLUNTARY PLAN DI'         (19,15)
      break
    when = 'R'
      print 'RELIGIOUS EXEMPT, SOLE STOCKHOLDER OR 3RD PARTY SICKPAY'      (10,6)
      print ' '                         (19,12)
      print '                 '         (19,15)
      break
  end-evaluate

  do Format-Number(#PageTotal, $out, '9999999999')
  print $out                       (51,13) edit xxbxxxbxxxbxx
  do Format-Number(#PageTotalTXGRS, $out, '9999999999')
  print $out                       (0,37) edit xxbxxxbxxxbxx
  do Format-Number(#PageTotalSTW, $out, '999999999')
  print $out                       (0,62) edit  xbxxxbxxxbxx

  if #PAGE_NUM = #TotalPages
    do Format-Number(#CoTotal, $out, '9999999999')
    print $out                     (54,12) edit xxbxxxbxxxbxx
    do Format-Number(#CoTotalTXGRS, $out, '9999999999')
    print $out                     (0,35) edit xxbxxxbxxxbxx
    do Format-Number(#CoTotalSTW, $out, '999999999')
    print $out                     (0,59)  edit xbxxxbxxxbxx

    print 'I declare that the information herein is' (56,6)
    print 'true and correct.'                        (57,6)
    print 'Signature:'                               (59,15)
    print 'Title:'                                   (59,47)
    print 'Date:                 Phone:'             (60,15)

    move 0 to #CoTotal
    move 0 to #CoTotalSTW
    move 0 to #CoTotalTXGRS
  end-if
end-heading


begin-procedure Process-Main

begin-SELECT
RC.COMPANY      () on-break level=1 print=never before=Get-Company-Info
RC.TAX_CLASS
RC.STATE
RC.EMPLID       () on-break level=2 print=never before=Reset-Dis-Ind
                                                after=Process-SWT       !HP99998
RC.LOCALITY
RC.TXGRS_QTD
RC.NLGRS_QTD
RC.TAX_QTD
A.TAX_REPORT_TYPE

  move &RC.COMPANY      to $Company
  move &RC.TAX_CLASS    to $Tax_Class
  move &RC.STATE        to $State
  move &RC.EMPLID       to $Emplid
  move &RC.LOCALITY     to $Locality

  if $Sep_Tax_Rpt = 'N'
     if &RC.TAX_CLASS = 'U'                                             !HP99998
        move $Sel_Employer_ID    to $Employer_ID                        !HP99998
        move &RC.TXGRS_QTD       to #TxGrs_QTD                          !HP99998
        move &RC.NLGRS_QTD       to #NlGrs_QTD                          !HP99998
        move &RC.TAX_QTD         to #Tax_QTD                            !HP99998
        do Insert-Work-Record                                           !HP99998
     else                                                               !HP99998
        if &RC.TAX_CLASS = 'H' or                                       !HP99998
           &RC.TAX_CLASS = 'A'                                          !HP99998
           add &RC.TXGRS_QTD     to #SWT_TxGrs_QTD                      !HP99998
           add &RC.NLGRS_QTD     to #SWT_NlGrs_QTD                      !HP99998
           add &RC.TAX_QTD       to #SWT_Tax_QTD                        !HP99998
        end-if                                                          !HP99998
     end-if                                                             !HP99998
  else
     if &RC.TAX_CLASS = 'U'
        move &Employer_ID_SUT    to $Employer_ID
        move 0                   to #TxGrs_QTD
        move &RC.NLGRS_QTD       to #NlGrs_QTD
        move 0                   to #Tax_QTD
        do Insert-Work-Record
     else
        if ((&RC.TAX_CLASS = 'D' and $Dis_Found = 'N') or
            (&RC.TAX_CLASS = 'E' and $Dis_Found = 'N'))
           move &Employer_ID_DIS    to $Employer_ID
           move 0                   to #TxGrs_QTD
           move &RC.NLGRS_QTD       to #NlGrs_QTD
           move 0                   to #Tax_QTD
           let $Dis_Found = 'Y'
           let $Tax_Class = 'E'
           do Insert-Work-Record
        else
           if &RC.TAX_CLASS = 'H' or                                    !HP99998
              &RC.TAX_CLASS = 'A'                                       !HP99998
              add &RC.TXGRS_QTD     to #SWT_TxGrs_QTD                   !HP99998
              add &RC.TAX_QTD       to #SWT_Tax_QTD                     !HP99998
           else                                                         !HP99998
              move &Employer_ID_SWT to $Employer_ID                     !HP99998
              move &RC.TXGRS_QTD    to #TxGrs_QTD                       !HP99998
              move 0                to #NlGrs_QTD                       !HP99998
              move &RC.TAX_QTD      to #Tax_QTD                         !HP99998
              do Insert-Work-Record                                     !HP99998
           end-if                                                       !HP99998
        end-if
     end-if
  end-if

FROM  PS_TAX_BALANCE RC, PS_COMPANY_TBL A
WHERE RC.STATE             = 'CA'
  AND RC.LOCALITY          = ' '
  AND RC.BALANCE_ID        = $Calendar_Year_Id
  AND RC.BALANCE_YEAR      = &TX.Balance_Year
  AND RC.BALANCE_QTR       = &TX.Balance_Qtr
  AND RC.TAX_CLASS IN  ('U','A','H','E','D')
  AND ((RC.NLGRS_QTD <> 0
       AND A.TAX_REPORT_TYPE = '2')
      OR (RC.TAX_QTD <> 0)
      OR (RC.TXGRS_QTD <> 0
       AND A.TAX_REPORT_TYPE = '2'))
  AND RC.BALANCE_PERIOD    =
      (SELECT MAX(RC1.BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE RC1
       WHERE  RC1.EMPLID        = RC.EMPLID
         AND  RC1.COMPANY       = RC.COMPANY
         AND  RC1.BALANCE_ID    = RC.BALANCE_ID
         AND  RC1.BALANCE_YEAR  = RC.BALANCE_YEAR
         AND  RC1.BALANCE_QTR   = RC.BALANCE_QTR
         AND  RC1.STATE         = RC.STATE
         AND  RC1.LOCALITY      = RC.LOCALITY
         AND  RC1.TAX_CLASS     = RC.TAX_CLASS)
  AND A.COMPANY = RC.COMPANY
  AND A.EFF_STATUS = 'A'
  AND A.TAX_REPORT_TYPE IN ('2', 'R')
  AND A.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
       WHERE  COMPANY = A.COMPANY
         AND  EFFDT  <= $AsOfDate)
ORDER BY RC.COMPANY, RC.STATE, RC.LOCALITY,
         RC.EMPLID, RC.TAX_CLASS
end-SELECT
end-procedure

begin-procedure Generate-Report

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

move 0 to #NLGrs_QTD
move 0 to #STW_QTD
move 0 to #TXGRS_QTD
move 0 to #Temp_PageTotal
move 0 to #Temp_PageTotalSTW
move 0 to #Temp_PageTotalTXGRS
move 0 to #Temp_CoTotal
move 0 to #Temp_CoTotalSTW
move 0 to #Temp_CoTotalTXGRS

begin-SELECT
C.COMPANY       () on-break level=1 print=never before=Company-Change
C.EMPLOYER_ID   () on-break level=2 print=never before=Employer-ID-Chg
D1.NATIONAL_ID
C.EMPLID        () on-break level=3 print=never before=Before-Emplid
                                                 after=After-Emplid
C.TAX_CLASS     () on-break level=4 print=never before=Before-Tax-Class
C.STATE
C.LOCALITY
C.TXGRS_QTD
C.NLGRS_QTD
C.TAX_QTD
D.LAST_NAME
D.FIRST_NAME
D.MIDDLE_NAME
AA.TAX_REPORT_TYPE

  move &AA.TAX_REPORT_TYPE to $AA.TAX_REPORT_TYPE

  if &C.Tax_Class = 'H' and &C.Tax_QTD < 0                              !HP99998
    move 'CA QTD Tax Withheld Negative' to $ErMsg
    do Write-Summary-Data
    move 'Y' to $DoNotProcess1
   end-if
                                                                        !HP99998
   if &C.Tax_Class = 'H'
      and (&C.Tax_QTD = 0 or &C.Tax_QTD > 0)
     move '' to $DoNotProcess1
  end-if

   if &C.Tax_Class = 'H' and &C.TXGrs_QTD < 0                           !HP99998
    move 'CA QTD PIT Wages Negative' to $ErMsg
    do Write-Summary-Data
    move 'Y' to $DoNotProcess2
  end-if

  if &C.Tax_Class = 'H'                                                 !HP99998
      and (&C.TXGrs_QTD = 0 or &C.TXGrs_QTD > 0)
    move '' to $DoNotProcess2
  end-if

   if &C.Tax_Class = 'U' and &C.NlGrs_QTD < 0
    move 'CA QTD SUI Wages Negative' to $ErMsg
    do Write-Summary-Data
    move 'Y' to $DoNotProcess3
  end-if

  if &C.Tax_Class = 'U' and (&C.NlGrs_QTD = 0 or &C.NlGrs_QTD > 0)
    move '' to $DoNotProcess3
  end-if

   if &C.Tax_Class = 'E' and &C.NlGrs_QTD < 0
    move 'CA QTD DIS Wages Negative' to $ErMsg
    do Write-Summary-Data
    move 'Y' to $DoNotProcess4
  end-if

  if &C.Tax_Class = 'E' and (&C.NlGrs_QTD = 0 or &C.NlGrs_QTD > 0)
    move '' to $DoNotProcess4
  end-if

FROM  PS_R_TAX002CA C  , PS_PERSON_NAME D, PS_PERS_NID D1, PS_COMPANY_TBL AA
WHERE D.EMPLID            = C.EMPLID
  AND D.EMPLID            = D1.EMPLID
  AND D1.COUNTRY          = {NID_COUNTRY}
  AND D1.NATIONAL_ID_TYPE = $Payroll_nid_type
  AND (C.NLGRS_QTD <> 0 or C.TAX_QTD <> 0 or C.TXGRS_QTD <> 0)
  AND AA.COMPANY = C.COMPANY
  AND AA.EFF_STATUS = 'A'
  AND AA.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
       WHERE  COMPANY = AA.COMPANY
         AND  EFFDT  <= $AsOfDate)
ORDER BY C.COMPANY, C.EMPLOYER_ID, D1.NATIONAL_ID,
         C.STATE, C.LOCALITY, C.EMPLID, C.TAX_CLASS
end-SELECT

if #Count_S > 0
    do Write-Totals
end-if

end-procedure

begin-procedure Before-Emplid

  move &C.EmplID       to $priorEmplID
  move &D1.NATIONAL_ID to $Temp_SSN
  let $LastName   = rtrim(&D.LAST_NAME, ' ')
  let $FirstName  = rtrim(&D.FIRST_NAME, ' ')
  let $MidInitial = {ps-substr}(&D.MIDDLE_NAME,1,1)


  do Get-Wage-Plan-Cd
  move &S.Wage_Plan_Cd to $Wage_Plan_Cd

  move '' to $DoNotProcess1
  move '' to $DoNotProcess2
  move '' to $DoNotProcess3
  move '' to $DoNotProcess4
end-procedure

begin-procedure After-Emplid

  if $AA.TAX_REPORT_TYPE = 'R'
    move 0 to #NlGrs_QTD
    move 0 to #TxGrs_QTD
    move 0 to #Temp_PageTotal
    move 0 to #Temp_PageTotalTXGRS
    move 0 to #Temp_CoTotal
    move 0 to #Temp_CoTotalTXGRS
  end-if

  if ($DoNotProcess1 = '' and $DoNotProcess2 = '' and
      $DoNotProcess3 = '' and $DoNotProcess4 = '')

   move $Temp_SSN  to $S123 xxx       !isolate first 3 digits

   if $S123 = &Temp_SSN_Mask or RTRIM($Temp_SSN, ' ') = ''              !HP00006
     print 'Applied For' (+2,11)
   else
     print $Temp_SSN     (+2,11)  edit xxxbxxbxxxx
   end-if

   uppercase $FirstName
   uppercase $MidInitial
   uppercase $LastName
   print $FirstName                 (0,27,18)
   print $MidInitial                (0,45,1)
   print $LastName                  (0,47,31)

   do Format-Number(#NLGrs_QTD, $out, '9999999999')
   print $out                 (+2,13) edit xxbxxxbxxxbxx
   do Format-Number(#TXGrs_QTD, $out, '9999999999')
   print $out                 (0,37) edit xxbxxxbxxxbxx
   do Format-Number(#STW_QTD, $out, '999999999')
   print $out                 (0,62)  edit xbxxxbxxxbxx

   add 1                    to #Employees_On_Page
   add #Temp_PageTotal      to #PageTotal
   add #Temp_PageTotalSTW   to #PageTotalSTW
   add #Temp_PageTotalTXGRS to #PageTotalTXGRS
   add #Temp_CoTotal        to #CoTotal
   add #Temp_CoTotalSTW     to #CoTotalSTW
   add #Temp_CoTotalTXGRS   to #CoTotalTXGRS

   if #Employees_On_Page = 7
      do Page-Complete
   end-if
  end-if
  move 0 to #NLGrs_QTD
  move 0 to #STW_QTD
  move 0 to #TXGRS_QTD
  move 0 to #Temp_PageTotal
  move 0 to #Temp_PageTotalSTW
  move 0 to #Temp_PageTotalTXGRS
  move 0 to #Temp_CoTotal
  move 0 to #Temp_CoTotalSTW
  move 0 to #Temp_CoTotalTXGRS
end-procedure

begin-procedure Before-Tax-Class

  move &C.Tax_Class to $Tax_Class

  if &C.Tax_Class = 'U' and &C.NlGrs_QTD > 0
    move &C.NLGrs_QTD to #NLGrs_QTD
    multiply 100 times #NLGrs_QTD
    add #NLGrs_QTD to #Temp_PageTotal
    add #NLGrs_QTD to #Temp_CoTotal
  end-if

  if &C.Tax_Class = 'E' and &C.NlGrs_QTD > 0
    move &C.NLGrs_QTD to #NLGrs_QTD
    multiply 100 times #NLGrs_QTD
    add #NLGrs_QTD to #Temp_PageTotal
    add #NLGrs_QTD to #Temp_CoTotal
  end-if

  if &C.Tax_Class = 'H' and &C.Tax_QTD > 0                              !HP99998
    move &C.Tax_QTD to #STW_QTD
    multiply 100 times #STW_QTD
    add #STW_QTD to #Temp_PageTotalSTW
    add #STW_QTD to #Temp_CoTotalSTW
  end-if

  if &C.Tax_Class = 'H' and &C.TXGrs_QTD > 0                            !HP99998
    move &C.TXGrs_QTD to #TXGRS_QTD
    multiply 100 times #TXGRS_QTD
    add #TXGRS_QTD to #Temp_PageTotalTXGRS
    add #TXGRS_QTD to #Temp_CoTotalTXGRS
  end-if

end-procedure

begin-procedure Get-Wage-Plan-Cd
begin-SELECT loops=1
S.WAGE_PLAN_CD
S.EFFDT
FROM  PS_STATE_TAX_DATA S
WHERE S.EMPLID        = &C.EmplID
  AND S.COMPANY       = &C.Company
  AND S.STATE         = 'CA'
  AND S.EFFDT        <= $PeriodEndDate
ORDER BY S.EFFDT DESC
end-SELECT
end-procedure

begin-procedure Get-Count

  move 0 to #EmplCount

begin-SELECT DISTINCT
TB.EMPLID

  add 1 to #EmplCount

FROM  PS_R_TAX002CA TB, PS_PERSON P1
WHERE TB.COMPANY       = &C.Company
  AND TB.EMPLOYER_ID   = &C.Employer_ID
  AND TB.EMPLID        = P1.EMPLID
  AND TB.TAX_CLASS    IN ('E', 'U', 'H')
end-SELECT

  let #TotalPages = CEIL((#EmplCount- #NegCount)/7)

end-procedure

begin-procedure Get-Negative-Count
  move 0 to #NegCount

begin-SELECT DISTINCT
AC.EMPLID

  add 1 to #NegCount

FROM  PS_R_TAX002CA AC, PS_PERSON P2
WHERE AC.COMPANY       = &C.Company
  AND AC.EMPLOYER_ID   = &C.Employer_ID
  AND AC.EMPLID        = P2.EMPLID
  AND ((AC.TAX_CLASS     = 'U'
       AND AC.NLGRS_QTD < 0)
      OR (AC.TAX_CLASS     = 'E'
       AND AC.NLGRS_QTD < 0)

      OR (AC.TAX_CLASS     = 'H'
       AND AC.TAX_QTD   < 0)
      OR (AC.TAX_CLASS     = 'H'
       AND AC.TXGRS_QTD < 0))                                           !HP99998
end-SELECT

end-procedure

begin-procedure Page-Complete
  add 1 to #PAGE_NUM
  new-page
  move 0 to #PageTotal
  move 0 to #PageTotalSTW
  move 0 to #PageTotalTXGRS
  move 0 to #Employees_On_Page
end-procedure

begin-procedure Employer-ID-Chg
  if #Employees_On_Page < 7 and #Employees_On_Page > 0
    do Page-Complete
  end-if

  let $Employer_ID = &C.Employer_ID

  move 0 to #PAGE_NUM
  do Get-Negative-Count
  do Get-Count
end-procedure

begin-procedure Company-Change
  if #Employees_On_Page < 7 and #Employees_On_Page > 0
    do Page-Complete
  end-if

  move 0 to #PAGE_NUM
  move &C.Company to $Company
  do Get-Company-Data

  let $Company_Found = 'N'
  let #CompOpt_Idx   = 1

  WHILE #CompOpt_Idx < #CompOpt_Cnt and $Company_Found = 'N'

     GET $Sel_Company
         #Month1Count
         #Month2Count
         #Month3Count
         $Ca_No_Payroll
         $Ca_Final_Rpt
         $Sep_Tax_Rpt
     From CompOpt(#CompOpt_Idx)
         Company
         Month1Count
         Month2Count
         Month3Count
         NoPayroll
         FinalRpt
         SepTaxRpt

     if $Sel_Company = $Company
        let $Company_Found = 'Y'
     end-if

     add 1 to #CompOpt_Idx

  END-WHILE

  move #Month1Count     to $Month1Count     0999999
  move #Month2Count     to $Month2Count     0999999
  move #Month3Count     to $Month3Count     0999999
end-procedure

begin-procedure Get-Company-Info

  move &RC.Company to $Company
  do Get-Company-Data
  move 'CA' to $State
  do Get-State-Tax-Data             !Employer ID

  let #Month1Count     = 0
  let #Month2Count     = 0
  let #Month3Count     = 0
  let $Ca_No_Payroll   = 'N'
  let $Ca_Final_Rpt    = 'N'
  let $Sep_Tax_Rpt     = 'N'

  if $Prcs_Process_Instance  =  ''
     do Employer-Prompts
  else
     do Company-Run-Control
  end-if

  if $Sep_Tax_Rpt = 'Y'
     let $Tmp_Employer_ID_SUT = RTRIM(&Employer_ID_SUT, ' ')
     let $Tmp_Employer_ID_SWT = RTRIM(&Employer_ID_SWT, ' ')
     let $Tmp_Employer_ID_DIS = RTRIM(&Employer_ID_DIS, ' ')

     if $Tmp_Employer_ID_SUT = ''
        display '*** Missing Employer ID (SUT) ***'
        display '****** Processing stopped *******'
        stop
     end-if

     if $Tmp_Employer_ID_SWT = ''
        display '*** Missing Employer ID (SWT) ***'
        display '****** Processing stopped *******'
        stop
     end-if

     if $Tmp_Employer_ID_DIS = ''
        display '*** Missing Employer ID (DIS) ***'
        display '****** Processing stopped *******'
        stop
     end-if

     if $Tmp_Employer_ID_SUT = $Tmp_Employer_ID_SWT or
        $Tmp_Employer_ID_SUT = $Tmp_Employer_ID_DIS or
        $Tmp_Employer_ID_SWT = $Tmp_Employer_ID_DIS
        display '*** Duplicate Employer ID with Separate Tax Report Opt ***'
        display '******************* Processing stopped *******************'
        stop
     end-if
  else
     if RTRIM (&Employer_ID_SUT, ' ') <> ''
        let $Sel_Employer_ID = &Employer_ID_SUT
     else
        let $Sel_Employer_ID = &Employer_ID_SWT
     end-if
  end-if

end-procedure

begin-procedure Reset-Dis-Ind
  move 0 to #SWT_TxGrs_QTD                                              !HP99998
  move 0 to #SWT_NlGrs_QTD                                              !HP99998
  move 0 to #SWT_Tax_QTD                                                !HP99998
  let $Dis_Found = 'N'
end-procedure
                                                                        !HP99998
begin-procedure Process-SWT                                             !HP99998
  if #SWT_TxGrs_QTD <> 0 or                                             !HP99998
     #SWT_NlGrs_QTD <> 0 or                                             !HP99998
     #SWT_Tax_QTD   <> 0                                                !HP99998
     if $Sep_Tax_Rpt = 'N'                                              !HP99998
        move $Sel_Employer_ID  to $Employer_ID                          !HP99998
     else                                                               !HP99998
        move &Employer_ID_SWT  to $Employer_ID                          !HP99998
     end-if                                                             !HP99998
     move 'H'                  to $Tax_Class                            !HP99998
     move #SWT_TxGrs_QTD       to #TxGrs_QTD                            !HP99998
     move #SWT_NlGrs_QTD       to #NlGrs_QTD                            !HP99998
     move #SWT_Tax_QTD         to #Tax_QTD                              !HP99998
     do Insert-Work-Record                                              !HP99998
  end-if                                                                !HP99998
end-procedure                                                           !HP99998

begin-procedure Employer-Prompts
  display ' '
  display 'Enter quarterly data for ' noline
  display $Company noline
  display ':'
  display '(Numbers should not include commas)'
  input $Month1Count     '   Month 1 employee count'
  input $Month2Count     '   Month 2 employee count'
  input $Month3Count     '   Month 3 employee count'
  move $Month1Count     to #Month1Count
  move $Month2Count     to #Month2Count
  move $Month3Count     to #Month3Count

  move #Month1Count     to $Month1Count     0999999
  move #Month2Count     to $Month2Count     0999999
  move #Month3Count     to $Month3Count     0999999

  while $Ca_No_Payroll = ' '
    input $Ca_No_Payroll 'Enter No Payroll DE 6 Option (Y/N)'
    uppercase $Ca_No_Payroll
    If INSTR ('YN',$Ca_No_Payroll,1) = 0
       display ' '
       display '***** Enter Y or N *****'
       display ' '
    end-if
  end-while

  while $Ca_Final_Rpt = ' '
    input $Ca_Final_Rpt 'Enter Final Report DE 6 Option (Y/N)'
    uppercase $Ca_Final_Rpt
    If INSTR ('YN',$Ca_Final_Rpt,1) = 0
       display ' '
       display '***** Enter Y or N *****'
       display ' '
    end-if
  end-while

  while $Sep_Tax_Rpt = ' '
    input $Sep_Tax_Rpt 'Enter Separate Tax Report Option (Y/N)'
    uppercase $Sep_Tax_Rpt
    If INSTR ('YN',$Sep_Tax_Rpt,1) = 0
       display ' '
       display '***** Enter Y or N *****'
       display ' '
    end-if
  end-while

  add  1  to #CompOpt_Idx
  if #CompOpt_Idx > #Max_CompOpt
     display '*** Company Option Table Over Maximum ***'
     display '********** Processing stopped ***********'
     stop
  else
     PUT &RC.Company
         #Month1Count
         #Month2Count
         #Month3Count
         $Ca_No_Payroll
         $Ca_Final_Rpt
         $Sep_Tax_Rpt
     INTO CompOpt (#CompOpt_Idx)
         Company
         Month1Count
         Month2Count
         Month3Count
         NoPayroll
         FinalRpt
         SepTaxRpt
  end-if

  move #CompOpt_Idx  to  #CompOpt_Cnt

end-procedure

begin-procedure Company-Run-Control

  let $RunCtl_Found = 'N'

begin-select
CA.CA_MONTH1_COUNT
CA.CA_MONTH2_COUNT
CA.CA_MONTH3_COUNT
CA.CA_NO_PAYROLL
CA.CA_FINAL_RPT
CA.SEP_TAX_RPT

  let $RunCtl_Found = 'Y'

FROM PS_RC_TAX810CA CA
WHERE CA.OPRID = $Prcs_OprID
  AND CA.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
  AND CA.COMPANY = &RC.Company
end-SELECT

  if $RunCtl_Found = 'Y'
     move &CA.CA_No_Payroll       to $Ca_No_Payroll
     move &CA.CA_Final_Rpt        to $Ca_Final_Rpt

     move &CA.CA_Month1_Count     to #Month1Count
     move &CA.CA_Month2_Count     to #Month2Count
     move &CA.CA_Month3_Count     to #Month3Count

     move &CA.Sep_Tax_Rpt  to $Sep_Tax_Rpt
  end-if

  move #Month1Count     to $Month1Count     0999999
  move #Month2Count     to $Month2Count     0999999
  move #Month3Count     to $Month3Count     0999999

  add  1  to #CompOpt_Idx
  if #CompOpt_Idx > #Max_CompOpt
     display '*** Company Option Table Over Maximum ***'
     display '********** Processing stopped ***********'
     stop
  else
     PUT &RC.Company
         #Month1Count
         #Month2Count
         #Month3Count
         $Ca_No_Payroll
         $Ca_Final_Rpt
         $Sep_Tax_Rpt
     INTO CompOpt (#CompOpt_Idx)
         Company
         Month1Count
         Month2Count
         Month3Count
         NoPayroll
         FinalRpt
         SepTaxRpt
  end-if

  move #CompOpt_Idx  to  #CompOpt_Cnt

end-procedure

begin-procedure Get-Dates
  move &TX.Balance_Year to $PeriodDueDate xxxx
  move &TX.Balance_Year to #DueYear
  move &TX.Balance_Qtr         to #QtrDueMonth
  multiply 3 times #QtrDueMonth
  add 1 to #QtrDueMonth
  if #QtrDueMonth = 13
    subtract 12 from #QtrDueMonth
    add 1 to #DueYear
    move #DueYear        to $PeriodDueDate xxxx
  end-if
  move #QtrDueMonth      to $QtrDueMonth 09

  concat $QtrDueMonth with $PeriodDueDate -xx
  concat '-01' with $PeriodDueDate

  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($PeriodDueDate, $PeriodDueDate, {DEFYMD}, '', 'native')

  move #DueYear          to $PeriodDelDate xxxx
  move #QtrDueMonth      to $QtrDelMonth 09

  concat $QtrDelMonth with $PeriodDelDate -xx-3
  if #QtrDueMonth = 4
    concat '0' with $PeriodDelDate
  else
    concat '1' with $PeriodDelDate
  end-if

  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($PeriodDelDate, $PeriodDelDate, {DEFYMD}, '', 'native')
end-procedure

begin-procedure Write-Summary-Data

  write 10 from  '  EmplID    ':12
                            $Sp:2
              '       Tax_QTD ':15
                            $Sp:2
              '   NL Gross QTD':15
                            $Sp:2
              '  PIT Wages QTD':15
                            $Sp:2
              ' Dis NL Grs QTD':15
                            $Sp:2


  move &C.EmplID        to $EmplID

  if $Sep_Tax_Rpt = 'N'
     move &C.Tax_QTD       to $Tax_QTD       99,999,999.99mi
     move &C.NlGrs_QTD     to $NlGrs_QTD     99,999,999.99mi
     move &C.TXGrs_QTD     to $TXGrs_QTD     99,999,999.99mi
     move 0                to $Dis_NlGrs_QTD 99,999,999.99mi
  else
     move 0                to $Tax_QTD       99,999,999.99mi
     move 0                to $NlGrs_QTD     99,999,999.99mi
     move 0                to $TXGrs_QTD     99,999,999.99mi
     move 0                to $Dis_NlGrs_QTD 99,999,999.99mi

     if &C.Tax_Class = 'E'
        move &C.NlGrs_QTD     to $Dis_Nlgrs_QTD 99,999,999.99mi
     else
        if &C.Tax_Class = 'U'
           move &C.NlGrs_QTD     to $NlGrs_QTD     99,999,999.99mi
        else
           move &C.Tax_QTD       to $Tax_QTD       99,999,999.99mi
           move &C.TXGrs_QTD     to $TXGrs_QTD     99,999,999.99mi
        end-if
     end-if
  end-if

  write 10 from  $EmplID:12
                     $Sp:2
                $Tax_QTD:15
                     $Sp:2
              $NlGrs_QTD:15
                     $Sp:2
              $TXGrs_QTD:15
                     $Sp:2
          $Dis_NlGrs_QTD:15
                     $Sp:2
                  $ErMsg:30

  write 10 from      $Sp:12

  if $Sep_Tax_Rpt = 'N'
     move &C.NlGrs_QTD to #C.NlGrs_QTD
     add #C.NlGrs_QTD  to #Neg_NlGrs_QTD
     move &C.Tax_QTD   to #C.Tax_QTD
     add #C.Tax_QTD    to #Neg_Tax_QTD
     move &C.TXGrs_QTD to #C.TXGrs_QTD
     add #C.TXGrs_QTD  to #Neg_TXGrs_QTD
  else
     if &C.Tax_Class = 'E'
        move &C.NlGrs_QTD     to #C.Dis_NlGrs_QTD
        add #C.Dis_NlGrs_QTD  to #Neg_Dis_NlGrs_QTD
     else
        if &C.Tax_Class = 'U'
           move &C.NlGrs_QTD to #C.NlGrs_QTD
           add #C.NlGrs_QTD  to #Neg_NlGrs_QTD
        else
           move &C.Tax_QTD   to #C.Tax_QTD
           add #C.Tax_QTD    to #Neg_Tax_QTD
           move &C.TXGrs_QTD to #C.TXGrs_QTD
           add #C.TXGrs_QTD  to #Neg_TXGrs_QTD
        end-if
     end-if
  end-if
  add 1 to #Count_S

end-procedure

begin-procedure Write-Totals

  move #Neg_Tax_QTD    to $Neg_Tax_QTD    99,999,999.99mi
  move #Neg_NlGrs_QTD  to $Neg_NlGrs_QTD  99,999,999.99mi
  move #Neg_TXGrs_QTD  to $Neg_TXGrs_QTD  99,999,999.99mi
  move #Neg_Dis_NlGrs_QTD to $Neg_Dis_NlGrs_QTD 99,999,999.99mi

  write 10 from 'Totals':6
                     $Sp:8
            $Neg_Tax_QTD:15
                     $Sp:2
          $Neg_NlGrs_QTD:15
                     $Sp:2
          $Neg_TXGrs_QTD:15
                     $Sp:2
      $Neg_Dis_NlGrs_QTD:15
                     $Sp:2

end-procedure

begin-procedure Unstring-ID

  find '-' in $id 0 #locn1
  if #locn1 <> -1
    unstring $id by '-' into $id1 $id2 $id3
    string $id1 $id2 $id3 by '' into $id4
  end-if

  find ' ' in $id 0 #locn2
  if #locn2 <> -1
    unstring $id by ' ' into $id1 $id2 $id3
    string $id1 $id2 $id3 by '' into $id4
  end-if

  If #locn1 = -1 and #locn2 = -1
    let $id4 = $id
  end-if

end-procedure

begin-procedure Insert-Work-Record

  let $Txgrs_QTD = #Txgrs_QTD
  let $Nlgrs_QTD = #Nlgrs_QTD
  let $Tax_QTD   = #Tax_QTD

  let $err-statement1 = 'TAX002CA, Insert-Error - INSERT-WORK-RECORD'
  let $err-statement2 = 'Key Values: TABLE PS_R_TAX002CA' ||
                        ', COMPANY ' || $Company ||
                        ', EMPLOYER_ID ' || $Employer_ID ||
                        ', STATE ' || $State ||
                        ', EMPLID ' || $Emplid ||
                        ', TAX_CLASS ' || $Tax_Class ||
                        ', LOCALITY ' || $Locality ||
                        ', TXGRS_QTD ' || $Txgrs_QTD ||
                        ', NLGRS_QTD ' || $Nlgrs_QYD ||
                        ', TAX_QTD ' || $Tax_QTD

begin-SQL on-error=Error-Display
  INSERT INTO PS_R_TAX002CA
        (COMPANY,
         EMPLOYER_ID,
         STATE,
         EMPLID,
         TAX_CLASS,
         LOCALITY,
         TXGRS_QTD,
         NLGRS_QTD,
         TAX_QTD)
 VALUES ($Company,
         $Employer_ID,
         $State,
         $EmplID,
         $Tax_Class,
         $Locality,
         #Txgrs_QTD,
         #Nlgrs_QTD,
         #Tax_QTD)
end-SQL
end-procedure

begin-procedure Delete-Work-File

  let $err-statement1 = 'TAX002CA, Delete-Error - DELETE-WORK-FILE'
  let $err-statement2 = ' '

begin-SQL On-Error=Error-Display
DELETE FROM PS_R_TAX002CA
end-SQL
end-procedure

#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getstdta.sqc'  !Get-State-Tax-Data procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'stdapi.sqc'    !Update Process API

#Include 'stderror.sqc'  !Routine for error display
