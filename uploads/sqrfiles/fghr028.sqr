!***********************************************************************
!  FGHR028: Position Audit Report                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:12:01:26                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'   !Set environment
begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup

begin-report
   do Init-DateTime
   do Init-Number
   do Get-Current-DateTime
   do Init-Report
   if $prcs_oprid=''
  goto last2
 end-if
  do Process-Main
  do Reset
  do Stdapi-Term
LAST2:
end-report


!********************************************
begin-procedure Init-Report

  do Get-Report-Language

  do Stdapi-Init
   if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

  do Sqr-Param

  if $prcs_process_instance = ''
    do Ask-As-Of-Date
    do Ask-Exception-Override
  else
    do Select-Parameters
    do Get-Values
  end-if

  move 'FGHR028' to $ReportID

  display $ReportTitle

  do Init_Printer
LAST1:
end-procedure

!********************************************
begin-procedure Get-Values
   let $language_cd = $prcs_language_cd
   do Get-As-Of-Date
   do Get-Exception-Override

end-procedure

!**********************************
! This procedure is used to read language-dependent text from the Strings table
!**********************************
Begin-Procedure Report-Translation
!**********************************
move 'POS008' to $ReportID
do Init_Report_Translation ($ReportID, $language_cd)
do Append_Report_Translation ('HR')

do Get_Field_Information ('POS008',     'REPORT_TITLE', $REPORTTITLE,   #DW)

do Get_Field_Information ('POS008',     'PD',           $PD,            #DW)
do Get_Field_Information ('POS008',     'PLAN',         $PLAN,          #DW)

do Get_Field_Information ('POS008',     'PAY_GRD1',     $PAYGR1,        #DW)
do Get_Field_Information ('POS008',     'PAY_GRD2',     $PAYGR2,        #DW)
do Get_Field_Information ('POS008',     'SHIFT',        $SHIFT,         #DW)
do Get_Field_Information ('POS008',     'UNION_CD1',    $UNION1,        #DW)
do Get_Field_Information ('POS008',     'UNION_CD2',    $UNION2,        #DW)
do Get_Field_Information ('POS008',     'EMPLID',       $EMPLID,        #DW)
do Get_Field_Information ('POS008',     'HOLIDAY1',     $HOL1,          #DW)
do Get_Field_Information ('POS008',     'HOLIDAY2',     $HOL2,          #DW)

do Get_Field_Information ('HR', 'STD_HRS1',     $HOURS1,        #DW)
do Get_Field_Information ('HR', 'STD_HRS2',     $HOURS2,        #DW)
do Get_Field_Information ('HR', 'STD_HRS_FREQ1',$HRS_FREQ1,     #DW)
do Get_Field_Information ('HR', 'STD_HRS_FREQ2',$HRS_FREQ2,     #DW)
do Get_Field_Information ('HR', 'LOCATION',     $LOC,           #DW)
do Get_Field_Information ('HR', 'AGENCY',       $AGENCY,        #DW)
do Get_Field_Information ('HR', 'COMPANY2',     $COMP2,         #DW)
do Get_Field_Information ('HR', 'REPORT_TO1',   $RPT1,          #DW)
do Get_Field_Information ('HR', 'REPORT_TO2',   $RPT2,          #DW)
do Get_Field_Information ('HR', 'DEPTID',       $DEPT,          #DW)
do Get_Field_Information ('HR', 'REQ_NBR2',     $REQNBR,        #DW)
do Get_Field_Information ('HR', 'POSITION_NBR1',$POSNO1,        #DW)
do Get_Field_Information ('HR', 'POSITION_NBR2',$POSNO2,        #DW)
do Get_Field_Information ('HR', 'EFFDT1',       $EFFDT1,        #DW)
do Get_Field_Information ('HR', 'EFFDT2',       $EFFDT2,        #DW)
do Get_Field_Information ('HR', 'POSITION_TITLE',$POSTITLE,     #DW)
do Get_Field_Information ('HR', 'REG_TEMP1',    $REG1,          #DW)
do Get_Field_Information ('HR', 'REG_TEMP2',    $REG2,          #DW)
do Get_Field_Information ('HR', 'FULL_PART_TM1',$FULL1,         #DW)
do Get_Field_Information ('HR', 'FULL_PART_TM2',$FULL2,         #DW)
do Get_Field_Information ('HR', 'EMPL_NAME',    $NAME,          #DW)
do Get_Field_Information ('HR', 'DEPARTMENT',   $DEPTNM,        #DW)
do Get_Field_Information ('HR', 'POSITION_PHONE',        $POSITION_PHONE,         #DW)

End-Procedure

begin-HEADING 7
#Include 'stdhdg03.sqc'
!******************************
!     column headings         *
!******************************
let $reg = $reg1 || '/'
let $full = $full1 || '/'
let $POSNO_EMP = $POSNO2 || '/' || $EMPLID
let $TITLE_NAME = $POSTITLE || '/' || $NAME
   print $DEPTNM                (+2,1)
   print $DeptId                (0,13)
   print $DeptName              (0,24)
   print $POSNO1                (+2,1)
   print $EFFDT1                (0,13)
   print $RPT1                  (0,57)

   print $PD                    (0,75)
   print $PAYGRP1               (0,83)

   print $PAYGR1                (0,90)
   print $REG                   (0,113)
   print $FULL                  (0,119)
   print $HOURS1                (0,126)
   print $HRS_FREQ1             (0,134)
   print $HOL1                  (0,147)
   print $UNION1                (0,173)

   print $POSNO_EMP             (+1,1)
   print $EFFDT2                (0,13)
   PRINT $TITLE_NAME            (0,25)
   print $RPT2                  (0,57)
   print $DEPT                  (0,67)
   print $REQNBR                (0,75)
   print $PLAN                  (0,83)
   print $PAYGR2                (0,90)
   print $AGENCY                (0,95)
   print $LOC                   (0,103)
   print $REG2                  (0,113)
   print $FULL2                 (0,119)
   print $HOURS2                (0,126)
   print $HRS_FREQ2             (0,134)
   print $HOL2                  (0,147)
   print $SHIFT                 (0,151)
   print $POSITION_PHONE        (0,158)
   print $UNION2                (0,173)

end-HEADING


!begin-FOOTING 1
   !print '* Business title on employment record does not match Position description.' (0,1)
!end-FOOTING

!***********************************************************************
!  PROC Process-Main
!         Main Procedure
!***********************************************************************
begin-procedure Process-Main

begin-SELECT
C.BUSINESS_UNIT
   LET $BU = RTRIM(&C.BUSINESS_UNIT,' ')
C.DEPTID           !on-break level=1 print=always procedure=Dept-Change
C.EMPLID           !on-break level=1 print=always
C.EMPL_RCD
C.EFFDT
!******************************Begin Name Change Format***************************************
   !E.NAME
E.NAME_DISPLAY
   !move &E.Name to $Name1
    move &E.NAME_DISPLAY to $Name1    
!******************************End   Name Change Format***************************************
C.REPORTS_TO
C.JOBCODE
C.GVT_PAY_PLAN
C.GRADE
C.COMPANY
C.LOCATION
C.REG_TEMP
C.FULL_PART_TIME
C.STD_HOURS
C.STD_HRS_FREQUENCY
C.HOLIDAY_SCHEDULE
C.SHIFT
D.POSITION_PHONE
D.BUSINESS_TITLE
A.POSITION_NBR     !on-break level=2 print=always
A.EFFDT
A.DESCR
A.REPORTS_TO
A.DEPTID
A.JOBCODE
B.GVT_PAY_PLAN
B.GRADE
A.COMPANY
A.LOCATION
A.REG_TEMP
A.FULL_PART_TIME
A.STD_HOURS
A.STD_HRS_FREQUENCY
A.SHIFT

  do Get-Union-Data
  if ($option = 'O')   !OverRides
    do Print-Position
  else
    if ((&A.descr             <> &D.business_title)    OR
        (&A.reports_to        <> &C.reports_to)        OR
        (&A.deptid            <> &C.deptid)            OR
        (&A.jobcode           <> &C.jobcode)           OR
        (&B.gvt_pay_plan      <> &C.gvt_pay_plan)      OR
        (&B.grade             <> &C.grade)             OR
        (&A.company           <> &C.company)           OR
        (&A.location          <> &C.location)          OR
        (&A.reg_temp          <> &C.reg_temp)          OR
        (&A.full_part_time    <> &C.full_part_time)    OR
        (&A.std_hours         <> &C.std_hours)         OR
        (&A.std_hrs_frequency <> &C.std_hrs_frequency) OR
        (&A.shift             <> &C.shift))

       do Print-Position
    end-if
  end-if
  NEXT-LISTING NEED=3
FROM  PS_POSITION_DATA A,
      PS_JOBCODE_TBL B,
      PS_GVT_JOB C,
      PS_EMPLOYMENT D,
      PS_PERSON_NAME E
WHERE C.POSITION_OVERRIDE [$Instatus]
  AND B.JOBCODE = A.JOBCODE
  AND B.SETID = (SELECT SETID
                 FROM PS_SET_CNTRL_REC
                 WHERE RECNAME = 'JOBCODE_TBL'
                  AND SETCNTRLVALUE = A.BUSINESS_UNIT)
  AND C.POSITION_NBR <> ' '
  AND A.POSITION_NBR = C.POSITION_NBR
  AND C.EMPL_STATUS IN ('A','P','L','S')
  AND C.EMPLID    = D.EMPLID
  AND C.EMPL_RCD  = D.EMPL_RCD
  AND C.EMPLID    = E.EMPLID
  AND A.EFFDT =
             (SELECT MAX(A1.EFFDT)
              FROM  PS_POSITION_DATA A1
              WHERE A1.POSITION_NBR = A.POSITION_NBR
                AND A1.EFFDT     <= $AsOfDate)
  AND B.EFFDT = (SELECT MAX(B1.EFFDT)
                from PS_JOBCODE_TBL B1
                where B1.JOBCODE = B.JOBCODE
                AND B1.SETID = B.SETID
                and B1.EFFDT <= $AsOfDate)
  AND C.EFFDT =
             (SELECT MAX(EFFDT)
              FROM  PS_JOB C1
              WHERE C1.EMPLID    = C.EMPLID
                AND C1.EMPL_RCD = C.EMPL_RCD
                AND C1.EFFDT    <= $AsOfDate)
   AND C.EFFSEQ =
              (SELECT MAX(EFFSEQ)
               FROM  PS_JOB C2
               WHERE C2.EMPLID    = C.EMPLID
                 AND C2.EMPL_RCD = C.EMPL_RCD
                 AND C2.EFFDT     = C.EFFDT)
ORDER BY C.DEPTID, C.EMPLID, A.POSITION_NBR

end-SELECT
end-procedure

begin-procedure Get-Union-Data
let $JL.UNION_CD = ' '

begin-Select
JL.UNION_CD
    let $JL.UNION_CD = &JL.UNION_CD
FROM PS_JOB JL
WHERE JL.EMPLID   = &C.EMPLID
  AND JL.EMPL_RCD = &C.EMPL_RCD
  AND JL.EFFDT = (SELECT MAX(EFFDT)
               FROM PS_JOB J2
               WHERE J2.EMPLID = JL.EMPLID
                 AND J2.EMPL_RCD = JL.EMPL_RCD
                 AND J2.EFFDT <= $AsOfDate)
  AND JL.EFFSEQ = (SELECT MAX(EFFSEQ)
                 FROM PS_JOB J3
                 WHERE J3.EMPLID = JL.EMPLID
                  AND J3.EMPL_RCD = JL.EMPL_RCD
                  AND J3.EFFDT = JL.EFFDT)
END-SELECT

end-procedure

begin-procedure Dept-Change
   new-page
end-procedure

begin-procedure Print-Position
  print &C.DeptID (+4,67) on-break level=1 print=always procedure=Dept-Change
  move &C.DeptID to $DeptID
  do Get-Department-Name
  print &C.Emplid           (0,1)
  do Format-DateTime(&C.EffDt, $out, {DEFDATE}, '', '')
  print $out                (0,13)
  print $Name1              (0,25)
  print &C.Reports_To       (0,57)
  print &C.JobCode          (0,77)
  print &C.gvt_pay_plan     (0,83)
  print &C.Grade            (0,90)
  print &C.Company          (0,95)
  print &C.Location         (0,103,5)
  print &C.Reg_Temp         (0,114)
  print &C.Full_Part_Time   (0,120)
  do Format-Number(&C.std_hours, $out, 'b999.99')
  print $out                (0,124)
  let $std_hrs_freq = rtrim(&C.STD_HRS_FREQUENCY, ' ')
  do Det-Annual-Factor($std_hrs_freq,&C.EFFDT,$freq_descrshort,$dummy1,#dummy2,$dummy3)
  print $freq_descrshort    (0,134)
  print &C.Holiday_Schedule (0,147)
  print &C.Shift            (0,154)
  print &D.Position_Phone   (0,158,12)
  print $JL.Union_Cd         (0,173)

  print &A.Position_Nbr     (-1,1)
  do Format-DateTime(&A.EffDt, $out, {DEFDATE}, '', '')
  print $out                (0,13)
  print &A.Descr            (0,25)
  if &A.Descr <> &D.Business_Title
     print '*'     (0,23)
  end-if
  print &A.Reports_To       (0,57)
  print &A.DeptID           (0,67)
  print &A.Jobcode          (0,77)
  print &B.gvt_pay_plan     (0,83)
  print &B.Grade            (0,90)
  print &A.Company          (0,95)
  print &A.Location         (0,103,5)
  print &A.Reg_Temp         (0,114)
  print &A.Full_Part_Time   (0,120)
  do Format-Number(&A.STD_Hours, $out, 'b999.99')
  print $out                (0,124)
  let $std_hrs_freq = rtrim(&A.STD_HRS_FREQUENCY, ' ')
  do Det-Annual-Factor($std_hrs_freq,&A.EFFDT,$freq_descrshort,$dummy1,#dummy2,$dummy3)
  print $freq_descrshort    (0,134)
  print &A.Shift            (0,154)
  print &D.Position_Phone   (0,158,12)
end-procedure

!***********************************************************************
#include 'fgrunctl.sqc'  !Get run control parameter values
#include 'fggetval.sqc'  !Get values mask routines
#include 'hrsecty.sqc'   !Get SQR Security parameters

#Include 'readxlat.sqc'  !Read the Translate Table
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getdptnm.sqc'  !Get Department Name procedure
#Include 'askaod.sqc'    !Get As Of Date
#Include 'askxovrd.sqc'  !Get Exception Override Input Param
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'useprntr.sqc'
#Include 'frquency.sqc'  !Det-Annual-Factor procedure

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
