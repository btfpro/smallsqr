!***********************************************************************
!  PAY752: List Payroll-GL Company ChartField Mappings                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/09/08:16:01:49                                 
!       $Release:  HR9                                                 
!      $Revision:  102                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !printer and page-size initialization
#include 'paycfprt.sqc'  !Print ChartField functions



begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'PAY752' to $ReportID

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  do Get-Report-Language
  move $Pay752_ReportTitle to $ReportTitle

  display ' '
  display $ReportTitle
  display ' '

  !------------------------------------------------------------------------------------------------------!
  ! Dynamic ChartFields variables used by the Common CF Print SQC                                        !
  !------------------------------------------------------------------------------------------------------!
  let $DynCF_ChartFields_Option = 'A'        !CF Configuration - 'P' = Pending Changes, 'A' - Current
  let $DynCF_LabelPosn_Option = 'T'          !ChartField Label Position - 'T' = above, 'S' = side
  let $DynCF_LabelUnderLine = 'N'            !ChartField Label Underline - 'Y' = Print, 'N' = Suppress
  let $DynCF_Alignment_Option = 'C'          !ChartField Label Alignment - 'L' = Left, 'R' = Right, 'C' = Center
  let $DynCF_CF_Headings = 'N'               !ChartField Label Heading - 'Y' = Print, 'N' = Suppress
  let $DynCF_LabelName_Option = 'L'          !ChartField Label - 'L' = LongName, 'S' = ShortName
  let $DynCF_Include_Affiliate = 'Y'         !Include Affiliate - 'Y' = Yes, 'N' = No
  let $DynCF_LanguageCd = $language_cd       !ChartField Language Code
  let #DynCF_StrCol = 35                     !ChartField Starting Column
  let #DynCF_EndCol = 170                    !ChartField Ending Column

  do Create-CF-Array
  ! do Add-to-Exclude-CF-List (' ')
  do Build-CF-Array

  let #StrLine    = 1
  !------------------------------------------------------------------------------------------------------!
  ! End of Dynamic ChartFields Variables setup                                                           !
  !------------------------------------------------------------------------------------------------------!

  let $Account          = ' '
  let $Fund_Code        = ' '
  let $DeptID           = ' '
  let $Program_Code     = ' '
  let $Class_Fld        = ' '
  let $Project_Id       = ' '
  let $Affiliate        = ' '
  let $Product          = ' '
  let $Operating_Unit   = ' '
  let $AltAcct          = ' '
  let $BudgetRef        = ' '
  let $Chartfield1      = ' '
  let $Chartfield2      = ' '
  let $Chartfield3      = ' '
  let $Affiliate_intra1 = ' '
  let $Affiliate_intra2 = ' '

  do Format-CF-Print-Line ($AccOunt, $DeptID, $Project_Id, $Product, $Fund_Code, $Program_Code,
                      $Class_Fld, $Affiliate, $Operating_Unit, $AltAcct, $BudgetRef, $Chartfield1,
                      $Chartfield2, $Chartfield3, $Affiliate_intra1, $Affiliate_intra2)

  let #CFReqLines = #DynCF_DetailPrtLine * 2

  let #Line = 8

end-procedure

! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation
! Read from PAY752 program ids

  do Init_Report_Translation($ReportID,$language_cd)

  do Get_Field_Information ('PAY752', 'REPORT_TITLE', $Pay752_ReportTitle, #dummy_width)

  do Get_Field_Information ('PAY752', 'COMPANY',      $Pay752_Company,     #dummy_width)
  do Get_Field_Information ('PAY752', 'BUS_UNIT',     $Pay752_BU,          #dummy_width)
  do Get_Field_Information ('PAY752', 'MAPPING_LEVEL', $Pay752_Level,       #dummy_width)
  do Get_Field_Information ('PAY752', 'EFFDT',        $Pay752_Effdt,       #dummy_width)
  do Get_Field_Information ('PAY752', 'GROUP',        $Pay752_Group,       #dummy_width)
  do Get_Field_Information ('PAY752', 'CODE',         $Pay752_Activity,    #dummy_width)
  do Get_Field_Information ('PAY752', 'DEPTID',       $Pay752_Deptid,      #dummy_width)
  do Get_Field_Information ('PAY752', 'JOBCODE',      $Pay752_Job,         #dummy_width)
  do Get_Field_Information ('PAY752', 'POSITION',     $Pay752_Position,    #dummy_width)
  do Get_Field_Information ('PAY752', 'EMPLOYEE',     $Pay752_Employee,    #dummy_width)


end-procedure

begin-heading 8

   #Include 'stdhdgtr.sqc'

   PRINT $Pay752_Company  (+1,1,10)
   PRINT '-'              (0,12,3) Fill
   PRINT $Company_Field   (0,16,3)
   PRINT $Pay752_BU       (+1,1,15)
   PRINT '-'              (0, 17, 3) Fill
   PRINT $BUSINESS_UNIT   (0, 21, 5)
   PRINT $Pay752_Level    (0, 50, 13)
   PRINT '-'              (0, 65, 3) Fill
   PRINT $Mapping_level   (0, 70, 10)
   PRINT $Level_Value     (0, 82, 15)
   PRINT $Pay752_EffDt    (0, 100, 14)
   PRINT '-'              (0, 116, 3) Fill
   PRINT $Effdt           (0, 120, 10)

   Print $Pay752_Group    (+1, 1, 25)
   Print ' '              (+1, 1, 1)

  let #Line = 8

end-heading

!***********************************************************************
!  PROC REPORT
!         Main Procedure
!***********************************************************************



BEGIN-PROCEDURE Process-Main
BEGIN-SELECT

A.COMPANY
A.BUSINESS_UNIT

   LET $COMPANY_FIELD = &A.COMPANY
   LET $BUSINESS_UNIT = &A.BUSINESS_UNIT

   do COMPANY_LEVEL

FROM PS_PYGL_CF_MAPPING A
END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC COMPANY LEVEL
!         Select Mapping levels
!***********************************************************************

BEGIN-PROCEDURE Company_Level
BEGIN-SELECT

L.DEPTID
L.JOBCODE
L.POSITION_NBR
L.EMPLID
L.EMPL_RCD
L.EFFDT
L.EFF_STATUS
L.COMPANY_LEVEL_INDC

   let $Deptid_level = &L.DEPTID
   let $Jobcode_level = &L.JOBCODE
   let $Position_level = &L.POSITION_NBR
   let $Empl_level = &L.EMPLID
   let #Empl_rec = &L.EMPL_RCD
   let $Effdt = &L.EFFDT
   let $Company_level_indc = &L.COMPANY_LEVEL_INDC

   IF $COMPANY_LEVEL_INDC = 'C'
      let $Mapping_level = $pay752_Company
      let $Level_Value   = ' '
   end-if
   IF $COMPANY_LEVEL_INDC = 'D'
      let $Mapping_level = $pay752_Deptid
      let $Level_Value   = $Deptid_Level
   end-if
  IF $COMPANY_LEVEL_INDC = 'J'
      let $Mapping_level = $pay752_Job
      let $Level_Value   = $Jobcode_Level
   end-if
  IF $COMPANY_LEVEL_INDC = 'P'
      let $Mapping_level = $pay752_Position
      let $Level_Value   = $Position_level
   end-if
  IF $COMPANY_LEVEL_INDC = 'A'
      let $Mapping_level = $pay752_Employee
      let $Empl_rec = to_char(#Empl_rec)
      STRING $Empl_level $Empl_rec BY ' ' INTO $Level_Value
   end-if

   DO Earnings_mappings

   DO Deduction_mappings

   Do USTax_Mappings

   Do CDNTax_Mappings

   new-page

FROM PS_PYGL_CF_CPNYLEV L
WHERE L.COMPANY = $Company_Field
AND L.BUSINESS_UNIT = $BUSINESS_UNIT
AND L.EFFDT = (SELECT MAX(M.EFFDT) FROM PS_PYGL_CF_CPNYLEV M
  WHERE M.COMPANY = L.COMPANY
  AND  M.BUSINESS_UNIT = L.BUSINESS_UNIT
  AND  M.DEPTID = L.DEPTID
  AND  M.JOBCODE = L.JOBCODE
  AND  M.POSITION_NBR = L.POSITION_NBR
  AND  M.EMPLID = L.EMPLID
  AND  M.EMPL_RCD = L.EMPL_RCD
  AND  M.COMPANY_LEVEL_INDC = L.COMPANY_LEVEL_INDC)
AND L.EFF_STATUS = 'A'

END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC EARNINGS_MAPPINGS
!         Select Earning Mapping Groups
!***********************************************************************

BEGIN-PROCEDURE Earnings_Mappings

   Let $Mapping_group = 'EARNINGS GROUP'


BEGIN-SELECT

E.PYGL_GROUPNAME
E.ACCT_CD


   let $Groupname = &E.PYGL_GROUPNAME
   let $Acct_cd   = &E.ACCT_CD

   if #Line + #CFReqLines > 58
       new-page
   end-if

   PRINT $Mapping_Group   (+1, 1, 20)
   PRINT $Groupname       (+1, 1, 25)
   Print ' '              (-1, 1, 1)
   let #Line = #Line + 1

   DO PRINT_ACCT_CODE_INFO

   PRINT $Pay752_Activity  (+1,1, 10)
   let #Line = #Line + 1

   Do Check_Default_Ern_Group

   if $DefaultGrp = 'Y'
       Do Print_Default_Group ('All Earnings')
   else
       DO PRINT_EARNINGS_IN_GROUP
   end-if

FROM PS_PYGL_CF_CPNYERN E
WHERE E.COMPANY = $Company_Field
AND E.BUSINESS_UNIT = $BUSINESS_UNIT
AND E.EFFDT = $Effdt
AND E.DEPTID = $DEPTID_LEVEL
AND E.JOBCODE = $Jobcode_level
AND E.POSITION_NBR = $Position_level
AND E.EMPLID = $Empl_level
AND E.EMPL_RCD = #Empl_rec


END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC DEDUCTION_MAPPINGS
!         Select Deduction Mapping Groups
!***********************************************************************

BEGIN-PROCEDURE Deduction_Mappings

   Let $Mapping_group = 'DEDUCTION GROUP'


BEGIN-SELECT

F.PYGL_GROUPNAME
F.ACCT_CD


   let $Groupname = &F.PYGL_GROUPNAME
   let $Acct_cd   = &F.ACCT_CD

   if #Line + #CFReqLines > 58
       new-page
   end-if

   PRINT $Mapping_Group   (+1, 1, 20)
   PRINT $Groupname       (+1, 1, 25)
   Print ' '              (-1, 1, 1)
   let #Line = #Line + 1

   DO PRINT_ACCT_CODE_INFO

   PRINT $Pay752_Activity  (+1,1, 10)
   let #Line = #Line + 1

   Do Check_Default_Ded_Group

   if $DefaultGrp = 'Y'
       Do Print_Default_Group ('All Deductions')
   else
       DO PRINT_DEDUCTIONS_IN_GROUP
   end-if

FROM PS_PYGL_CF_CPNYDED F
WHERE F.COMPANY = $Company_Field
AND F.BUSINESS_UNIT = $BUSINESS_UNIT
AND F.EFFDT = $Effdt
AND F.DEPTID = $DEPTID_LEVEL
AND F.JOBCODE = $Jobcode_level
AND F.POSITION_NBR = $Position_level
AND F.EMPLID = $Empl_level
AND F.EMPL_RCD = #Empl_rec


END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC USTAX_MAPPINGS
!         Select USTax  Mapping Groups
!***********************************************************************

BEGIN-PROCEDURE USTax_Mappings

   Let $Mapping_group = 'US TAX GROUP'


BEGIN-SELECT

G.PYGL_GROUPNAME
G.ACCT_CD


   let $Groupname = &G.PYGL_GROUPNAME
   let $Acct_cd   = &G.ACCT_CD

   if #Line + #CFReqLines > 58
       new-page
   end-if

   PRINT $Mapping_Group   (+1, 1, 20)
   PRINT $Groupname       (+1, 1, 25)
   Print ' '              (-1, 1, 1)
   let #Line = #Line + 1

   DO PRINT_ACCT_CODE_INFO

   PRINT $Pay752_Activity  (+1,1, 10)
   let #Line = #Line + 1

   Do Check_Default_Tax_Group

   if $DefaultGrp = 'Y'
       Do Print_Default_Group ('All Taxes')
   else
       DO PRINT_USTAXES_IN_GROUP
   end-if

FROM PS_PYGL_CF_CPNYTAX G
WHERE G.COMPANY = $Company_Field
AND G.BUSINESS_UNIT = $BUSINESS_UNIT
AND G.EFFDT = $Effdt
AND G.DEPTID = $DEPTID_LEVEL
AND G.JOBCODE = $Jobcode_level
AND G.POSITION_NBR = $Position_level
AND G.EMPLID = $Empl_level
AND G.EMPL_RCD = #Empl_rec


END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC CDNTAX_MAPPINGS
!         Select CDNTax  Mapping Groups
!***********************************************************************

BEGIN-PROCEDURE CDNTax_Mappings

   Let $Mapping_group = 'CDN TAX GROUP'


BEGIN-SELECT

H.PYGL_GROUPNAME
H.ACCT_CD


   let $Groupname = &H.PYGL_GROUPNAME
   let $Acct_cd   = &H.ACCT_CD

   if #Line + #CFReqLines > 58
       new-page
   end-if

   PRINT $Mapping_Group   (+1, 1, 20)
   PRINT $Groupname       (+1, 1, 25)
   Print ' '              (-1, 1, 1)
   let #Line = #Line + 1

   DO PRINT_ACCT_CODE_INFO

   PRINT $Pay752_Activity  (+1,1, 10)
   let #Line = #Line + 1

   Do Check_Default_Tax_Group

   if $DefaultGrp = 'Y'
       Do Print_Default_Group ('All Taxes')
   else
       DO PRINT_CDNTAXES_IN_GROUP
   end-if

FROM PS_PYGL_CF_CPNYCTX H
WHERE H.COMPANY = $Company_Field
AND H.BUSINESS_UNIT = $BUSINESS_UNIT
AND H.EFFDT = $Effdt
AND H.DEPTID = $DEPTID_LEVEL
AND H.JOBCODE = $Jobcode_level
AND H.POSITION_NBR = $Position_level
AND H.EMPLID = $Empl_level
AND H.EMPL_RCD = #Empl_rec


END-SELECT
END-PROCEDURE


!***********************************************************************
!  PROC PRINT ACCT CODE INFO
!         Select ChartFields
!***********************************************************************

BEGIN-PROCEDURE Print_Acct_code_info

BEGIN-SELECT
ACCT.ACCOUNT
ACCT.FUND_CODE
ACCT.DEPTID_CF
ACCT.PROGRAM_CODE
ACCT.CLASS_FLD
ACCT.PROJECT_ID
ACCT.AFFILIATE
ACCT.PRODUCT
ACCT.OPERATING_UNIT
ACCT.ALTACCT
ACCT.BUDGET_REF
ACCT.CHARTFIELD1
ACCT.CHARTFIELD2
ACCT.CHARTFIELD3
ACCT.AFFILIATE_INTRA1
ACCT.AFFILIATE_INTRA2

        let $Account          = &ACCT.ACCOUNT
        let $Fund_Code        = &ACCT.FUND_CODE
        let $DeptID           = &ACCT.DEPTID_CF
        let $Program_Code     = &ACCT.PROGRAM_CODE
        let $Class_Fld        = &ACCT.CLASS_FLD
        let $Project_Id       = &ACCT.PROJECT_ID
        let $Affiliate        = &ACCT.AFFILIATE
        let $Product          = &ACCT.PRODUCT
        let $Operating_Unit   = &ACCT.OPERATING_UNIT
        let $AltAcct          = &ACCT.ALTACCT
        let $BudgetRef        = &ACCT.BUDGET_REF
        let $Chartfield1      = &ACCT.CHARTFIELD1
        let $Chartfield2      = &ACCT.CHARTFIELD2
        let $Chartfield3      = &ACCT.CHARTFIELD3
        let $Affiliate_intra1 = &ACCT.AFFILIATE_INTRA1
        let $Affiliate_intra2 = &ACCT.AFFILIATE_INTRA2



FROM PS_ACCT_CD_TBL ACCT
WHERE ACCT.ACCT_CD = $Acct_cd


END-SELECT

        do Format-CF-Print-Line ($AccOunt, $DeptID, $Project_Id, $Product, $Fund_Code, $Program_Code,
                            $Class_Fld, $Affiliate, $Operating_Unit, $AltAcct, $BudgetRef, $Chartfield1,
                            $Chartfield2, $Chartfield3, $Affiliate_intra1, $Affiliate_intra2)

        let #ReqLines = #DynCF_DetailPrtLine * 2

        let #AdvLineNo = 0
        do Print-CF-Labels-and-Values (#AdvLineNo, #StrLine)
        let #Line = #Line + #ReqLines

        let #ReqLines = 2


END-PROCEDURE

!***********************************************************************
!  Check_Default_Ern_Group
!***********************************************************************
Begin-Procedure Check_Default_Ern_Group
Begin-Select
ERNDT.PYGL_ALLCODES

  let $DefaultGrp = &ERNDT.PYGL_ALLCODES

from PS_PYGL_ACTIVERNDT ERNDT
where ERNDT.COMPANY = $company_field
  and ERNDT.PYGL_GROUPNAME = $groupname
  and ERNDT.EFFDT = (select max(ERNDT1.EFFDT) from PS_PYGL_ACTIVERNDT ERNDT1
                      where ERNDT1.COMPANY = ERNDT.COMPANY
                        and ERNDT1.PYGL_GROUPNAME = ERNDT.PYGL_GROUPNAME
                        and ERNDT1.EFFDT <= $effdt)
End-Select
End-Procedure

!***********************************************************************
!  Check_Default_Ded_Group
!***********************************************************************
Begin-Procedure Check_Default_Ded_Group
Begin-Select
DEDDT.PYGL_ALLCODES

  let $DefaultGrp = &DEDDT.PYGL_ALLCODES

from PS_PYGL_ACTIVDEDDT DEDDT
where DEDDT.COMPANY = $company_field
  and DEDDT.PYGL_GROUPNAME = $groupname
  and DEDDT.EFFDT = (select max(DEDDT1.EFFDT) from PS_PYGL_ACTIVDEDDT DEDDT1
                      where DEDDT1.COMPANY = DEDDT.COMPANY
                        and DEDDT1.PYGL_GROUPNAME = DEDDT.PYGL_GROUPNAME
                        and DEDDT1.EFFDT <= $effdt)
End-Select
End-Procedure

!***********************************************************************
!  Check_Default_Tax_Group
!***********************************************************************
Begin-Procedure Check_Default_Tax_Group
Begin-Select
TAXDT.PYGL_ALLCODES

  let $DefaultGrp = &TAXDT.PYGL_ALLCODES

from PS_PYGL_ACTIVTAXDT TAXDT
where TAXDT.COMPANY = $company_field
  and TAXDT.PYGL_GROUPNAME = $groupname
  and TAXDT.EFFDT = (select max(TAXDT1.EFFDT) from PS_PYGL_ACTIVTAXDT TAXDT1
                      where TAXDT1.COMPANY = TAXDT.COMPANY
                        and TAXDT1.PYGL_GROUPNAME = TAXDT.PYGL_GROUPNAME
                        and TAXDT1.EFFDT <= $effdt)
End-Select
End-Procedure

!***********************************************************************
! Print_Default_Group
!***********************************************************************
Begin-Procedure Print_Default_Group ($DefaultGrpDescr)

   if #Line > 58
       new-page
   end-if

   PRINT $DefaultGrpDescr (+1, 1, 20)
   let #Line = #Line + 1

End-Procedure

!***********************************************************************
!  PROC PRINT EARNINGS IN GROUP
!         Select Earn codes
!***********************************************************************

BEGIN-PROCEDURE Print_Earnings_in_Group

BEGIN-SELECT
ERN.ERNCD

   LET $ERNCODE = &ERN.ERNCD

   if #Line > 58
       new-page
   end-if

   PRINT $ERNCODE (+1, 1, 3)
   let #Line = #Line + 1

FROM PS_PYGL_ACTIVERNMP ERN
WHERE ERN.COMPANY = $Company_Field
AND ERN.PYGL_GROUPNAME = $Groupname
AND ERN.EFFDT = (SELECT MAX(MAXA.EFFDT) FROM PS_PYGL_ACTIVERNMP MAXA
   WHERE MAXA.COMPANY = ERN.COMPANY
   AND MAXA.PYGL_GROUPNAME = ERN.PYGL_GROUPNAME
   AND MAXA.EFFDT <= $Effdt)

END-SELECT

   PRINT ' '               (+1, 1, 1)
   let #Line = #Line + 1

END-PROCEDURE

!***********************************************************************
!  PROC PRINT DEDUCTIONS IN GROUP
!         Select Deductions codes
!***********************************************************************

BEGIN-PROCEDURE Print_Deductions_in_Group

BEGIN-SELECT
DED.PLAN_TYPE
DED.DED_CLASS
DED.DEDCD
DED.DED_SLSTX_CLASS

   LET $PLAN_TYPE = &DED.PLAN_TYPE
   LET $DED_CLASS = &DED.DED_CLASS
   LET $DEDCD     = &DED.DEDCD
   LET $DED_SLSTX = &DED.DED_SLSTX_CLASS

   if #Line > 58
       new-page
   end-if

   PRINT $PLAN_TYPE (+1, 1, 3)
   PRINT $DED_CLASS (0, 5, 1)
   PRINT $DEDCD     (0, 7, 3)
   PRINT $DED_SLSTX (0, 11, 1)
   let #Line = #Line + 1

FROM PS_PYGL_ACTIVDEDMP DED
WHERE DED.COMPANY = $Company_Field
AND DED.PYGL_GROUPNAME = $Groupname
AND DED.EFFDT = (SELECT MAX(MAXB.EFFDT) FROM PS_PYGL_ACTIVDEDMP MAXB
   WHERE MAXB.COMPANY = DED.COMPANY
   AND MAXB.PYGL_GROUPNAME = DED.PYGL_GROUPNAME
   AND MAXB.EFFDT <= $Effdt)

END-SELECT

   PRINT ' '               (+1, 1, 1)
   let #Line = #Line + 1

END-PROCEDURE

!***********************************************************************
!  PROC PRINT USTAXES IN GROUP
!         Select USTax codes
!***********************************************************************

BEGIN-PROCEDURE Print_USTaxes_in_Group

BEGIN-SELECT
USTAX.STATE
USTAX.LOCALITY
USTAX.PYGL_TAX_CLASS

   LET $STATE     = &USTAX.STATE
   LET $LOCALITYS = &USTAX.LOCALITY
   LET $TAX_CLASS = &USTAX.PYGL_TAX_CLASS

   if #Line > 58
       new-page
   end-if


   PRINT $STATE             (+1, 1, 3)
   PRINT $LOCALITY          (0, 5, 10)
   PRINT $TAX_CLASS         (0, 16, 5)
   let #Line = #Line + 1

FROM PS_PYGL_ACTIVTAXMP USTAX
WHERE USTAX.COMPANY = $Company_Field
AND USTAX.PYGL_GROUPNAME = $Groupname
AND USTAX.PYGL_TAX_COUNTRY = 'USA'
AND USTAX.EFFDT = (SELECT MAX(MAXC.EFFDT) FROM PS_PYGL_ACTIVTAXMP MAXC
   WHERE MAXC.COMPANY = USTAX.COMPANY
   AND MAXC.PYGL_GROUPNAME = USTAX.PYGL_GROUPNAME
   AND MAXC.PYGL_TAX_COUNTRY = 'USA'
   AND MAXC.EFFDT <= $Effdt)

END-SELECT

   PRINT ' '               (+1, 1, 1)
   let #Line = #Line + 1

END-PROCEDURE

!***********************************************************************
!  PROC PRINT CDNTAXES IN GROUP
!         Select CDNTax codes
!***********************************************************************

BEGIN-PROCEDURE Print_CDNTaxes_in_Group

BEGIN-SELECT
CANTAX.WAGE_LOSS_PLAN
CANTAX.PYGL_TAX_CLASS

   LET $WAGE_PLAN = &CANTAX.WAGE_LOSS_PLAN
   LET $TAX_CLASS = &CANTAX.PYGL_TAX_CLASS

   if #Line > 58
       new-page
   end-if


   PRINT $WAGE_PLAN         (+1, 1, 3)
   PRINT $TAX_CLASS         (0, 5, 5)
   let #Line = #Line + 1

FROM PS_PYGL_ACTIVTAXMP CANTAX
WHERE CANTAX.COMPANY = $Company_Field
AND CANTAX.PYGL_GROUPNAME = $Groupname
AND CANTAX.PYGL_TAX_COUNTRY = 'CAN'
AND CANTAX.EFFDT = (SELECT MAX(MAXD.EFFDT) FROM PS_PYGL_ACTIVTAXMP MAXD
   WHERE MAXD.COMPANY = CANTAX.COMPANY
   AND MAXD.PYGL_GROUPNAME = CANTAX.PYGL_GROUPNAME
   AND MAXD.PYGL_TAX_COUNTRY = 'CAN'
   AND MAXD.EFFDT <= $Effdt)

END-SELECT

   PRINT ' '               (+1, 1, 1)
   let #Line = #Line + 1

END-PROCEDURE

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
#include 'readxlat.sqc'  !Read-Translate-Table procedure
