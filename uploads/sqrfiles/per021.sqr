!*******************************************
!  PER021:  Pending Future Actions         *
!*******************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:31:51                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!Procedures ending with "Scrty" and Record alias ending with "SC" are  *
!using SQR Security.                                                   *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
begin-setup
  #Include 'ptset02.sqc'   !Printer and page-size initialization
end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  let $curr_recalc = 'N'
  if $prcs_oprid=''
    goto last2
  end-if

  do Process-Main

  if $curr_recalc = 'Y'
    do Print-Footing
  end-if
  do Reset
  do Stdapi-Term
LAST2:
end-report

begin-heading 8
do Get_Field_Information ('PER021',     'REPORT_TITLE',         $REPORTTITLE,   #DW)
do Get_Field_Information ('PER021',     'CURRENT_STAT',         $CUR_STAT,      #DW)
  #Include 'stdhtr03.sqc'
do Get_Field_Information ('HR',         'ACTION',               $ACTION,        #DW)
do Get_Field_Information ('HR',         'REG_TEMP1',            $REG1,          #DW)
do Get_Field_Information ('HR',         'REG_TEMP2',            $REG2,          #DW)
do Get_Field_Information ('HR',         'FULL_PART_TM1',        $FULL1,         #DW)
do Get_Field_Information ('HR',         'FULL_PART_TM2',        $FULL2,         #DW)
do Get_Field_Information ('HR',         'CURRENCY_CD1',         $CUR1,          #DW)
do Get_Field_Information ('HR',         'CURRENCY_CD2',         $CUR2,          #DW)
do Get_Field_Information ('HR',         'COMPRATE',             $COMPRATE,      #DW)
do Get_Field_Information ('HR',         'EFFDT1',               $EFFDT1,        #DW)
do Get_Field_Information ('HR',         'EFFDT2',               $EFFDT2,        #DW)
do Get_Field_Information ('HR',         'EMPLID',               $EMPLID,        #DW)
do Get_Field_Information ('HR',         'ACTION_REASON1',       $ACT_RSN1,      #DW)
do Get_Field_Information ('HR',         'ACTION_REASON2',       $ACT_RSN2,      #DW)
do Get_Field_Information ('HR',         'EMPL_NAME',            $NAME,          #DW)
do Get_Field_Information ('HR',         'HIRE_DT1',             $HIRE_DT1,      #DW)
do Get_Field_Information ('HR',         'HIRE_DT2',             $HIRE_DT2,      #DW)
do Get_Field_Information ('HR',         'JOBCODE1',             $JOBCODE1,      #DW)
do Get_Field_Information ('HR',         'JOBCODE2',             $JOBCODE2,      #DW)
do Get_Field_Information ('HR',         'JOBTITLE',             $JOBTITLE,      #DW)
do Get_Field_Information ('HR',         'GRADE1',               $GRADE1,        #DW)
do Get_Field_Information ('HR',         'GRADE2',               $GRADE2,        #DW)
do Get_Field_Information ('HR',         'SUPERVISOR_NAME',      $SUPER,         #DW)
do Get_Field_Information ('HR',         'DEPTID',               $DEPTID,        #DW)
do Get_Field_Information ('HR',         'DEPARTMENT',           $DEPTNM,        #DW)
do Get_Field_Information ('HR',         'EMPL_TYPE1',           $EMP1,          #DW)
do Get_Field_Information ('HR',         'EMPL_TYPE2',           $EMP2,          #DW)
do Get_Field_Information ('HR',         'EMPL_RCD',             $RCD,           #DW)

let $empname = $NAME || '/'
LET $REG = $REG1 || '/'
LET $FULL = $FULL1 || '/'

PRINT   $empname                (+2,1,45)
PRINT   $EFFDT1                 (0,52,36)

!************* BEGIN RESOLUTION 154903 ******************

!PRINT   $ACT_RSN1               (0,75,10)
!PRINT   $EMP1                   (0,86,4)
!PRINT   $REG                    (0,91,4)
!PRINT   $FULL                   (0,96,27)
!PRINT   $JOBCODE1               (0,124,17)

!************* END RESOLUTION 154903 ******************

!************* BEGIN RESOLUTION 154903 ******************
! CHANGED $ACT_RSN1 TO $ACTION

PRINT   $ACTION                 (0,63,10)
PRINT   $EMP1                   (0,84,4)
PRINT   $REG                    (0,89,4)
PRINT   $FULL                   (0,94,27)
PRINT   $JOBCODE1               (0,122,17)

!************* END RESOLUTION 154903 ******************

PRINT   $GRADE1                 (0,142,7)
  if #MultiCurr
PRINT   $CUR1                   (0,150)
  end-if
PRINT   $SUPER                  (+1,10,23)
PRINT   $EMPLID                 (0,34,12)
PRINT   $RCD                    (0,47,4)
PRINT   $EFFDT2                 (0,52,10)

!************* BEGIN RESOLUTION 154903 ******************

!PRINT   $ACTION                 (0,63,11)
!PRINT   $ACT_RSN2               (0,75,10)
!PRINT   $EMP2                   (0,86,4)
!PRINT   $REG2                   (0,91,4)
!PRINT   $FULL2                  (0,96,5)
!PRINT   $DEPTID                 (0,102,10)
!PRINT   $DEPTNM                 (0,113,10)
!PRINT   $JOBCODE2               (0,124,6)

!************* END RESOLUTION 154903 ******************


!************* BEGIN RESOLUTION 154903 ******************
!CHANGED $ACTION TO $ACT_RSN1

PRINT   $ACT_RSN1               (0,63,7)
PRINT   $ACT_RSN2               (0,70,9)
PRINT   $EMP2                   (0,84,4)
PRINT   $REG2                   (0,89,4)
PRINT   $FULL2                  (0,94,5)
PRINT   $DEPTID                 (0,100,10)
PRINT   $DEPTNM                 (0,111,10)
PRINT   $JOBCODE2               (0,122,6)

!************* END RESOLUTION 154903 ******************


PRINT   $JOBTITLE               (0,131,10)
PRINT   $GRADE2                 (0,142,7)
  if #MultiCurr
PRINT   $CUR2                   (0,150,12)
  end-if


!************* BEGIN RESOLUTION 154903 ******************

!PRINT   $COMPRATE              (0,163)
PRINT   $COMPRATE               (0,164)

!************* END RESOLUTION 154903 ******************


end-heading



begin-procedure Init-Report

  move 'PER021' to $ReportID
  do Stdapi-Init
   if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

  do Security-Param
  if $prcs_process_instance = ''
    do Ask-As-Of-date
  else
    do Select-Parameters
  end-if
  do Init_Printer
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')
LAST1:
end-procedure

begin-procedure Get-Values

   let $language_cd = $prcs_language_cd
   do Get-As-Of-Date
   do Get-PER021-Parm

end-procedure

begin-procedure Process-Main

begin-SELECT
C.EFFDT                        ()        on-break print=never procedure=Check-Location
!**********************************************************************************************Begin Name Change Format*
 !A.NAME                         (+1,1,32) on-break print=always procedure=Check-Location
A.NAME_DISPLAY                   (+1,1,32) on-break print=always procedure=Check-Location
!**********************************************************************************************End   Name Change Format*
A.EMPLID                       (0,34)
C.EFFSEQ
C.CURRENCY_CD
C.SUPERVISOR_ID
B.EMPL_RCD                     (0,47,4)
C.ACTION
C.ACTION_REASON
C.EMPL_TYPE
C.REG_TEMP
C.FULL_PART_TIME
C.BUSINESS_UNIT
  LET $BU = RTRIM(&C.BUSINESS_UNIT,' ')
C.DEPTID
  move &C.DeptID to $DeptID
  do Get-Department-Name
C.JOBCODE
C.SETID_JOBCODE
C.SAL_ADMIN_PLAN
C.GRADE
C.COMPRATE
C.COMP_FREQUENCY
  do Get_Field_Information ('PER021',     'CURRENT_STAT',         $CUR_STAT,      #DW)
  print $CUR_STAT              (0,63,23)
  do Get-Predecessor-Job
  move &C.Supervisor_ID to $EmplID
  do Get-Employee-Name
  do Rotate-Name
  print $Name                  (+1,10,36)
  do Format-DateTime(&C.EffDt, $out, {DEFDATE}, '', '')
  print $out                   (0,52,10)
  move 'ACTION'  to $FieldName
  move &C.Action to $FieldValue
  do Read-Translate-Table
  print $XlatShortName         (0,63,11)
  move &C.Action         to $Action
  move &C.Action_Reason  to $Action_Reason
  move $AsOfDate to $RPTASOFDATE
  move &C.EffDt          to $AsOfDate
  do Get-Action-Reason
  move $RPTASOFDATE to $AsOfDate

  !************* BEGIN RESOLUTION 154903 ******************
  !print $Action_Reason_Descr   (0,75,10)
   print $Action_Reason_Descr   (+1,63,20)
  let #length = length($Action_Reason_Descr)
  if #length > 20
    do Get-Reason3
  end-if

  !************** END RESOLUTION 154903 ********************


!************* BEGIN RESOLUTION 154903 ******************
!HAVE MADE CHANGES IN $Action_Reason_Descr THEREFORE NEXT FIELDS TOO HAVE BEEN CHANGED

    if &C.Empl_Type <> &F.Empl_Type
   !print &C.Empl_Type         (0,86,4)
    print &C.Empl_Type         (0,84,4)
  end-if
  if &C.Reg_Temp <> &F.Reg_Temp
    !print &C.Reg_Temp         (0,91,4)
    print &C.Reg_Temp          (0,89,4)
  end-if
  if &C.Full_Part_Time <> &F.Full_Part_Time
  ! print &C.Full_Part_Time    (0,96,5)
    print &C.Full_Part_Time    (0,94,5)
  end-if
  if &C.DeptID <> &F.DeptID
  !print &C.DeptID            (0,102,10)
   print &C.DeptID            (0,100,10)
   move &C.DEPTID to $DeptID
   do Get-Department-Name

  !print $DeptNameAbbrv       (0,113,10)
   print $DeptNameAbbrv       (0,111,10)
  end-if
  if &C.JobCode <> &F.JobCode
    move &C.SETID_JOBCODE to $SETID
    move &C.JobCode to $Jobcode
    do Get-Job-Title
   !print &C.JobCode           (0,124,8)
    print &C.JobCode           (0,122,8)
    print $JobTitleAbbrv       (0,131,10)
  end-if
  if &C.Sal_Admin_Plan <> &F.Sal_Admin_Plan or &C.Grade <> &F.Grade
  !print &C.Sal_Admin_Plan    (0,142) edit xxx/
   print &C.Sal_Admin_Plan    (0,142) edit xxxx/
    print &C.Grade             ()
  end-if
  if &C.Comp_Frequency <> &F.Comp_Frequency or &C.CompRate <> &F.CompRate
    or &C.Currency_Cd <> &F.Currency_Cd
    !print &C.Currency_Cd      (0,150,4)
    print &C.Currency_Cd       (0,151,4)
    do Format-Number(&C.CompRate, $out, '999999999999.9999')

   !print $out                 (0,155)
   !print &C.Comp_Frequency    (0,173,5)
    print $out                 (0,156)
    print &C.Comp_Frequency    (0,174,5)
   !************** END RESOLUTION 154903 ********************
  end-if
  if $show_comp = 'Y'
    move 'Y' to $firstcomp
    do Get-Compensation-Components
  end-if
  NEXT-LISTING SKIPLINES=1 NEED=2

FROM  PS_PERSON_NAME A,
      PS_EMPLOYMENT B,
      PS_JOB C,
      PS_PERSON D,
      PS_FAST_SQRFUT_SEC SCRTY

WHERE B.EMPLID = A.EMPLID
  AND C.EMPLID = B.EMPLID
  AND C.EMPL_RCD = B.EMPL_RCD
  AND C.EFFDT > $AsOfDate
  AND SCRTY.OPRID = $prcs_oprid
  AND D.EMPLID = A.EMPLID
  AND C.PER_ORG = 'EMP'
  AND A.EMPLID = SCRTY.EMPLID
  AND B.EMPL_RCD = SCRTY.EMPL_RCD
ORDER BY A.EMPLID,C.EFFDT
end-SELECT

end-procedure

begin-procedure Get-Predecessor-Job
begin-SELECT
F.EMPLID
F.EMPL_RCD
F.EFFDT
F.EFFSEQ
F.STD_HOURS
F.STD_HRS_FREQUENCY
F.REG_REGION
F.PAID_HOURS
F.PAID_HRS_FREQUENCY
F.FTE
  if &F.REG_REGION = 'FRA'
     let #job_hours = &F.PAID_HOURS
     let $job_hrs_freq = &F.PAID_HRS_FREQUENCY
  else
     let #job_hours = &F.STD_HOURS
     let $job_hrs_freq = &F.STD_HRS_FREQUENCY
  end-if

!************* BEGIN RESOLUTION 154903 ******************
!HAVE MADE CHANGES IN THE EMPL_TYPE FIELD THEREFORE NEXT FIELDS TOO HAVE BEEN CHANGED

!F.EMPL_TYPE                    (0,86,4)
!F.REG_TEMP                     (0,91,4)
!F.FULL_PART_TIME               (0,96,5)

F.EMPL_TYPE                    (0,84,4)
F.REG_TEMP                     (0,89,4)
F.FULL_PART_TIME               (0,94,5)
F.BUSINESS_UNIT
  LET $BU = RTRIM(&F.BUSINESS_UNIT,' ')
F.DEPTID                       (0,100,10)
!F.DEPTID                       (0,102,10)
  move &F.DEPTID to $DeptID
  do Get-Department-Name

 !print $DeptNameAbbrv         (0,113,10)
 !F.JOBCODE                      (0,124,6)
  print $DeptNameAbbrv         (0,111,10)
F.JOBCODE                      (0,122,8)
F.SETID_JOBCODE
  move &F.SETID_JOBCODE to $SETID
  move &F.JobCode to $JobCode
  do Get-Job-Title
  print $JobTitleAbbrv         (0,131,10)
!F.SAL_ADMIN_PLAN               (0,142) EDIT XXX/
F.SAL_ADMIN_PLAN               (0,142) EDIT XXXX/
F.GRADE                        ()
F.CURRENCY_CD
  if #MultiCurr
  ! print &F.Currency_Cd       (0,150,3)
    print &F.Currency_Cd       (0,151,3)
  end-if
F.COMPRATE
  do Recalc-Job-Comprate(&F.EMPLID,&F.EMPL_RCD,&F.EFFDT,&F.EFFSEQ,&F.CURRENCY_CD,
                         &F.COMP_FREQUENCY,#job_hours,$job_hrs_freq,
                         &F.FTE,$AsOfDate,#job_comprate,$diff_curr)
  if $diff_curr = 'Y'
     let $curr_recalc = 'Y'
     ! print '*'                 (0,154)
     print '*'                 (0,155)
     do Format-Number(#job_comprate, $out, '999999999999.9999')
  else
  ! print ' '                 (0,154)
     print ' '                 (0,155)
     do Format-Number(&F.CompRate, $out, '999999999999.9999')
  end-if
  !  print $out                   (0,155)
  !F.COMP_FREQUENCY               (0,173,5)
  print $out                   (0,156)
F.COMP_FREQUENCY               (0,174,5)

!************* END RESOLUTION 154903 ******************

FROM  PS_JOB F
WHERE EMPLID    = &A.EmplID
  AND EMPL_RCD = &B.EMPL_RCD
  AND EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID    = &A.EmplID
         AND  EMPL_RCD = &B.EMPL_RCD
         AND  EFFDT     < &C.EffDt)
AND EFFSEQ = 
      (SELECT MAX(EFFSEQ)
       FROM PS_JOB G
       WHERE G.EMPLID = F.EMPLID
         AND G.EMPL_RCD = F.EMPL_RCD
         AND G.EFFDT = F.EFFDT)

end-SELECT
end-procedure

begin-procedure Get-Compensation-Components
  do Get_Field_Information ('HR',         'COMP_COMPONENTS',      $COMPONENTS,    #DW)
  print $COMPONENTS            (+1,109,32)
begin-SELECT
D.COMP_EFFSEQ
D.COMP_RATECD
  print &D.COMP_RATECD         (0,142,7)

!************* BEGIN RESOLUTION 154903 ******************
!HAVE MADE CHANGES IN THE CURRENCY_CD FIELD THEREFORE NEXT FIELDS TOO HAVE BEEN CHANGED

!D.CURRENCY_CD                 (0,150,4)
D.CURRENCY_CD                  (0,151,4)
D.COMPRATE
  do Format-Number(&D.CompRate, $out, '999999999999.9999')
  ! print $out                 (0,155)
  print $out                   (0,156)
!D.COMP_FREQUENCY              (0,173,5)
D.COMP_FREQUENCY               (0,174,5)

!************* END RESOLUTION 154903 ******************
  print ' '                    (+1,1,1)
FROM  PS_COMPENSATION D
WHERE D.EMPLID    = &A.EmplID
  AND D.EMPL_RCD = &B.EMPL_RCD
  AND D.EFFDT     = &C.Effdt
  AND D.EFFSEQ    = &C.Effseq
ORDER BY D.COMP_RATECD, D.COMP_EFFSEQ
end-SELECT
end-procedure

begin-procedure Check-Location
  if #current-line >= #sqr-max-lines - 4  !ensure both current and future are printed
    new-page
  end-if
end-procedure

begin-procedure Print-Footing

do Get_Field_Information ('HR',         'COMP_CURR_MSG',         $COMP_CURR_MSG, #DW)
PRINT   $COMP_CURR_MSG      (+3,1)

end-procedure


!************* BEGIN RESOLUTION 154903 ******************

begin-procedure Get-Reason3
 let $Reason3=substr($Action_Reason_Descr,21,10)
 print $Reason3 (+1,63,10)
 !show $Reason3
end-procedure

!************* END RESOLUTION 154903 ******************


#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askaod.sqc'    !Ask As Of Date input
#include 'hrsecty.sqc'   !Get SQR Security parameters
#Include 'rotname1.sqc'  !Rotate-Name procedure
#Include 'getempnm.sqc'  !Get-Employee-Name procedure
#Include 'getactrs.sqc'  !Get-Action-Reason procedure
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'datemath.sqc'  ! ROUTINES FOR DATEMATH
#Include 'currency.sqc'  !Recalc-Job-Comprate procedure
                         !Includes 'number.sqc' and 'frquency.sqc'
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
