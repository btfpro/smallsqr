! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
! LNGAUDIT: PS Language Table AUDIT report
!
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                                  *
!***********************************************************************
!                                                                      *
!----------------------------------------------------------------------!
! Procedure: SWPLANG-Main                                              !
!----------------------------------------------------------------------!
begin-procedure SWPLANG-Main

        let $ErrorFound = 'N'
        let $AuditTitle = 'Language Definition Audit'
        do SWAP-1
        do SWAP-2
        do SWAP-3
        do SWAP-4
        do SWAP-5
        do SWAP-6
        do SWAP-7
        do SWAP-8
        do SWAP-9

        if $ErrorFound = 'N'
            do PrintSummaryRecord
        end-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SWAP-1                                                    !
!                                                                      !
! Descr:     System table audit against PSRECDEFN table:               !
!                                                                      !
!            SWAP-1: Verify there are No Invalid Related Language      !
!                       Records                                        !
!----------------------------------------------------------------------!
begin-procedure SWAP-1
   move 0 to #rows
   let $AuditDescr = '(SWAP-1) Related Language Records Which Are Not ' ||
                     'Valid Records'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = 59
   let #numofhdr        =  3

   put 'Record Name'                  #Start1 21 into printarray(0)
   put 'Invalid Rel Language Name'    #Start2 31 into printarray(1)
   put 'Ownerid'                    #Start3  7 into printarray(2)



begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME                 &Swap1_Recname
A.RELLANGRECNAME          &Swap1_Relname
A.OBJECTOWNERID           &Swap1_ObjectOwnerid


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
          or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Swap1_RecName      (+1, #Start1)
   print &Swap1_RelName      ( 0, #Start2)
   print &Swap1_ObjectOwnerid ( 0,#Start3)

FROM PSRECDEFN A
WHERE A.RELLANGRECNAME <> ' '
AND A.RELLANGRECNAME NOT IN
    (SELECT B.RECNAME FROM PSRECDEFN B)
ORDER BY A.RECNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SWAP-2                                                    !
!                                                                      !
! Descr:     System table audit against PSRECDEFN table:               !
!                                                                      !
!            SWAP-2: Identify related language records that do not     !
!            Contain a LANGUAGE_CD Field as A Key                      !
!----------------------------------------------------------------------!
begin-procedure SWAP-2

   let $AuditDescr = '(SWAP-2) The field LANGUAGE_CD is NOT a key in the '||
                     'following Related Language Record(s)'
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = 59
   let #numofhdr        =  3

   put 'Record Name'                     #Start1 21 into printarray(0)
   put 'Rel Language Record'             #Start2 31 into printarray(1)
   put 'Ownerid'                         #Start3  7 into printarray(2)



begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME                 &Swap2_Recname
A.RELLANGRECNAME          &Swap2_Relname
A.OBJECTOWNERID           &Swap2_ObjectOwnerid

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
       or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Swap2_RecName      (+1, #Start1)
   print &Swap2_RelName      ( 0, #Start2)
   print &Swap2_ObjectOwnerid ( 0, #Start3)


FROM PSRECDEFN A
WHERE A.RELLANGRECNAME <> ' '
AND NOT EXISTS (SELECT 'X'  FROM PSRECFIELDDB K
WHERE K.RECNAME = A.RELLANGRECNAME
AND K.FIELDNAME='LANGUAGE_CD'
AND
#ifdef DB2
    SUBSTR(DIGITS((DECIMAL(K.USEEDIT, 11, 1))/2), 17, 1) = '5'
#else
    #ifdef ORACLE
        TRUNC(K.USEEDIT/2, 0)*2 <> K.USEEDIT
    #else
      #ifdef DB2UNIX
         INTEGER(K.USEEDIT/2)*2 <> K.USEEDIT
      #else
         ROUND(K.USEEDIT/2, 0)*2 <> K.USEEDIT
      #endif
    #endif
#endif
 )

ORDER BY 1
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure
!----------------------------------------------------------------------!
! Procedure: SWAP-3                                                    !
!                                                                      !
! Descr:     System table audit against PSRECDEFN table:               !
!                                                                      !
!            SWAP-3:Identify related language views that               !
!            Have The Wrong Structure Defined                          !
!----------------------------------------------------------------------!

begin-procedure SWAP-3
   let $AuditDescr = '(SWAP-3) The Following Related Language View(s) ' ||
                     'Have The Wrong Structure Defined'
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = #Start2 + 24
   let #Start4          = #Start3 + 24
   let #numofhdr        =  4

   put 'Record Name'                        #Start1 21 into printarray(0)
   put 'Rel Language Record'                #Start2 21 into printarray(1)
   put 'Unmatched Field'                    #Start3 20 into printarray(2)
   put 'Ownerid'                            #Start4  7 into printarray(3)


begin-SELECT on-Error=Rpt-SQL-Error
R.RECNAME                  &SWAP3_Recname
R.RELLANGRECNAME           &SWAP3_Relname
K.FIELDNAME                &SWAP3_FieldName
R.OBJECTOWNERID            &SWAP3_ObjectOwnerid


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
        or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &SWAP3_RecName      (+1, #Start1)
   print &SWAP3_RelName      ( 0, #Start2)
   print &SWAP3_FieldName    ( 0, #Start3)
   print &SWAP3_ObjectOwnerid ( 0, #Start4)

FROM PSRECDEFN R, PSRECFIELDDB K
WHERE R.RELLANGRECNAME <> ' '
AND R.RECTYPE in (1, 5, 6)
AND K.RECNAME = R.RELLANGRECNAME
AND K.FIELDNAME <> 'LANGUAGE_CD'
AND NOT EXISTS (SELECT 'X'  FROM PSRECFIELDDB P
WHERE P.RECNAME = R.RECNAME
AND P.FIELDNAME=K.FIELDNAME)
ORDER BY 1
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure
!----------------------------------------------------------------------!
! Procedure: SWAP-4                                                    !
!                                                                      !
! Descr:     System table audit against PSRECDEFN table:               !
!                                                                      !
!            SWAP-4:    Identify related language tables that          !
!            Have The Wrong Key Structure Defined                      !
!----------------------------------------------------------------------!

begin-procedure SWAP-4

   let $AuditDescr = '(SWAP-4) The Following Related Language Table(s) ' ||
                'Have The Wrong Key Structure Defined'
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = #Start2 + 24
   let #Start4          = #Start3 + 24
   let #Start5          = #Start4 + 30
   let #numofhdr        =  5

   put 'Record Name'                        #Start1 21 into printarray(0)
   put 'Rel Language Record'                #Start2 21 into printarray(1)
   put 'Unmatched Key Field'                #Start3 20 into printarray(2)
   put 'Exists Only On'                     #Start4 21 into printarray(3)
   put 'Ownerid'                            #Start5  7 into printarray(4)


begin-SELECT on-Error=Rpt-SQL-Error
R.RECNAME                 &SWAP4_Recname
R.RELLANGRECNAME          &SWAP4_Relname
K.FIELDNAME               &SWAP4_FieldName
'Base Record            ' &SWAP4_LIT
R.OBJECTOWNERID           &SWAP4_ObjectOwnerid


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
           or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &SWAP4_RecName      (+1, #Start1)
   print &SWAP4_RelName      ( 0, #Start2)
   print &SWAP4_FieldName    ( 0, #Start3)
   print &SWAP4_LIT          ( 0, #Start4)
   print &SWAP4_ObjectOwnerid ( 0, #Start5)

FROM PSRECDEFN R, PSRECFIELDDB K
where R.RECTYPE in (0, 7)
and R.RELLANGRECNAME <> ' '
and K.RECNAME = R.RECNAME
and
#ifdef DB2
    SUBSTR(DIGITS((DECIMAL(K.USEEDIT, 11, 1))/2), 17, 1) = '5'
#else
    #ifdef ORACLE
        TRUNC(K.USEEDIT/2, 0)*2 <> K.USEEDIT
    #else
        #ifdef DB2UNIX
          INTEGER(K.USEEDIT/2)*2 <> K.USEEDIT
        #else
          ROUND(K.USEEDIT/2, 0)*2 <> K.USEEDIT
        #endif
    #endif
#endif
and NOT EXISTS  (select 'X' from PSRECFIELDDB A
where A.RECNAME = R.RELLANGRECNAME
and A.FIELDNAME = K.FIELDNAME
and
#ifdef DB2
    SUBSTR(DIGITS((DECIMAL(A.USEEDIT, 11, 1))/2), 17, 1) = '5'
#else
    #ifdef ORACLE
        TRUNC(A.USEEDIT/2, 0)*2 <> A.USEEDIT
    #else
       #ifdef DB2UNIX
          INTEGER(A.USEEDIT/2)*2 <> A.USEEDIT
       #else
          ROUND(A.USEEDIT/2, 0)*2 <> A.USEEDIT
       #endif
    #endif
#endif
)
UNION
SELECT
R.RECNAME,
R.RELLANGRECNAME,
K.FIELDNAME,
'Related Language Record',
R.OBJECTOWNERID
from  PSRECDEFN R, PSRECFIELDDB K
where R.RECTYPE in (0, 7)
and R.RELLANGRECNAME <> ' '
and K.RECNAME = R.RELLANGRECNAME
and
#ifdef DB2
    SUBSTR(DIGITS((DECIMAL(K.USEEDIT, 11, 1))/2), 17, 1) = '5'
#else
    #ifdef ORACLE
        TRUNC(K.USEEDIT/2, 0)*2 <> K.USEEDIT
    #else
        #ifdef DB2UNIX
            INTEGER(K.USEEDIT/2)*2 <> K.USEEDIT
        #else
            ROUND(K.USEEDIT/2, 0)*2 <> K.USEEDIT
        #endif
    #endif
#endif
and K.FIELDNAME <> 'LANGUAGE_CD'
and NOT EXISTS   (select 'X' from PSRECFIELDDB B
where B.RECNAME = R.RECNAME
and B.FIELDNAME = K.FIELDNAME
and
#ifdef DB2
    SUBSTR(DIGITS((DECIMAL(B.USEEDIT, 11, 1))/2), 17, 1) = '5'
#else
    #ifdef ORACLE
        TRUNC(B.USEEDIT/2, 0)*2 <> B.USEEDIT
    #else
        #ifdef DB2UNIX
           INTEGER(B.USEEDIT/2)*2 <> B.USEEDIT
        #else
           ROUND(B.USEEDIT/2, 0)*2 <> B.USEEDIT
        #endif
    #endif
#endif
)
order by 1, 2, 4
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure
!----------------------------------------------------------------------!
! Procedure: SWAP-5                                                    !
!                                                                      !
! Descr:     System table audit against PSRECDEFN table:               !
!                                                                      !
!            SWAP-5: Identify related language RECORDS that            !
!            Have The Wrong Structure Defined                          !
!----------------------------------------------------------------------!

begin-procedure SWAP-5

   let $AuditDescr = '(SWAP-5) The Following Related Language Records ' ||
                     'Have The Wrong Structure Defined'
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = #Start2 + 24
   let #Start4          = #Start3 + 24
   let #Start5          = #Start4 + 10
   let #numofhdr        = 4

   put 'Record Name'               #Start1 21 into printarray(0)
   put 'Rel Language Record'       #Start2 21 into printarray(1)
   put 'Unmatched Field'           #Start3 20 into printarray(2)
   put 'Ownerid'                   #Start4  7 into printarray(3)



begin-SELECT on-Error=Rpt-SQL-Error
R.RECNAME                 &SWAP5_Recname
R.RELLANGRECNAME          &SWAP5_Relname
K.FIELDNAME               &SWAP5_FieldName
K.USEEDIT                 &SWAP5_UseEdit
R.OBJECTOWNERID           &SWAP5_ObjectOwnerid


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
       or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &SWAP5_RecName       (+1, #Start1)
   print &SWAP5_RelName       ( 0, #Start2)
   print &SWAP5_FieldName     ( 0, #Start3)
   print &SWAP5_ObjectOwnerid ( 0, #Start4)

FROM PSRECDEFN R,PSRECFIELDDB K
WHERE R.RELLANGRECNAME <> ' '
AND R.RECTYPE in (0, 7)
AND K.RECNAME = R.RELLANGRECNAME
AND K.FIELDNAME <> 'LANGUAGE_CD'
AND NOT EXISTS (SELECT 'X'  FROM PSRECFIELDDB P
WHERE P.RECNAME = R.RECNAME
AND P.FIELDNAME=K.FIELDNAME)
ORDER BY 1
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if
end-procedure
!----------------------------------------------------------------------!
! Procedure: SWAP-6                                                    !
!                                                                      !
! Descr:     System table audit against Related Language Tables:       !
!                                                                      !
!            SWAP-6: Identify related language records that            !
!            Have orphan rows.                                         !
!----------------------------------------------------------------------!

begin-procedure SWAP-6

   let $AuditDescr = '(SWAP-6) The Following Related Language Record(s) ' ||
                     'Have Orphan rows'
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #j = 0

begin-SELECT on-Error=Rpt-SQL-Error
R.RECNAME                 &Swap6_Recname
R.RELLANGRECNAME          &Swap6_Relname
K.FIELDNAME               &Swap6_FieldName
R.SQLTABLENAME            &Swap6_SQLRCName
Q.SQLTABLENAME            &Swap6_SQLRLName

  if rtrim(&Swap6_SQLRLName,' ')  = ''
     let $rlstrg = 'PS_' || &Swap6_Relname
   else
     let $rlstrg = &Swap6_SQLRLName
   end-if
   if RTRIM(&Swap6_SQLRCName,' ')  = ''
     let $rcstrg = 'PS_' || &Swap6_Recname
   else
     let $rcstrg = &Swap6_SQLRCName
   end-if
   put $rcstrg $rlstrg &Swap6_Fieldname into swparray(#j)
   let #j = 1 + #j

FROM PSRECDEFN R,PSRECFIELDDB K, PSRECDEFN Q
WHERE
#ifdef DB2
    SUBSTR(DIGITS((DECIMAL(K.USEEDIT, 11, 1))/2), 17, 1) = '5'
#else
    #ifdef ORACLE
        TRUNC(K.USEEDIT/2, 0)*2 <> K.USEEDIT
    #else
       #ifdef DB2UNIX
         INTEGER(K.USEEDIT/2)*2 <> K.USEEDIT
       #else
         ROUND(K.USEEDIT/2, 0)*2 <> K.USEEDIT
       #endif
    #endif
#endif
AND R.RELLANGRECNAME <> ' '
AND K.RECNAME = R.RELLANGRECNAME
AND K.RECNAME = Q.RECNAME
AND R.RECTYPE = 0
AND K.FIELDNAME <> 'LANGUAGE_CD'
ORDER BY 1
end-SELECT
    let #Array_Row_Count = #j
    do SWAPLANG-Process-Array
    do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure
!----------------------------------------------------------------------!
! Procedure: SWAPLANG-Process-Array                                    !
!                                                                      !
! Descr:     Execute the SQL stored in the swparray array              !
!                                                                      !
!            SWAP-6b: Identify related language records that            !
!            Have orphan rows in application tables.                   !
!----------------------------------------------------------------------!

begin-procedure SWAPLANG-Process-Array
   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = #Start2 + 25
   let #numofhdr        =  3

   put 'Record Name'                   #Start1 21 into printarray(0)
   put 'Rel Language Record'           #Start2 21 into printarray(1)
   put 'Field Name'                    #Start3 21 into printarray(2)


   let #l = 0
   get $recname $relname $fieldname from swparray(#l)
   let $rltmp = $relname
   let $rectmp = $recname

 #ifdef DB2UNIX
     While #l < #Array_Row_Count
     let $key = $fieldname
     let $sqlfrom = $relname||' A'
     let $sqlwhere = ' FROM '|| $recname||' B WHERE (A.'||$fieldname ||
                 '= B.' || $fieldname || ' OR ( A.' || $fieldname || ' IS NULL AND B.' ||
                 $fieldname || ' IS NULL))'
     While $recname = $rectmp and $relname = $rltmp
         let #l = #l + 1
         get $recname $relname $fieldname from swparray(#l)
         if $recname = $rectmp and $relname = $rltmp
            let $key = rtrim($key,' ') ||','|| $fieldname
            let $sqlwhere = $sqlwhere || ' and (A.'||$fieldname ||
                 '= B.' || $fieldname || ' OR ( A.' || $fieldname || ' IS NULL AND B.' ||
                 $fieldname || ' IS NULL))'
         end-if
     end-while

begin-SELECT on-Error=Rpt-SQL-Error
'X'

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
          or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if

   let #rows = #rows +1
   print $rectmp      (+1, #Start1)
   print $rltmp       ( 0, #Start2)
   print $key         ( 0, #Start3)
FROM [$sqlfrom]
WHERE NOT EXISTS (SELECT 'X' [$sqlwhere])
end-select

     let $rectmp = $recname
     let $rltmp = $relname


  end-while
#else
   While #l < #Array_Row_Count
     let $key = $fieldname
     let $sqlfrom = $relname||' A'
     let $sqlwhere = ' FROM '|| $recname||' B WHERE A.'||$fieldname ||
                 '= B.' || $fieldname
     While $recname = $rectmp and $relname = $rltmp
         let #l = #l + 1
         get $recname $relname $fieldname from swparray(#l)
         if $recname = $rectmp and $relname = $rltmp
            let $key = rtrim($key,' ') ||','|| $fieldname
            let $sqlwhere = $sqlwhere || ' and A.' || $fieldname ||
                     ' = B.'|| $fieldname
         end-if
     end-while

begin-SELECT on-Error=Rpt-SQL-Error
'X'

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
          or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if

   let #rows = #rows +1
   print $rectmp      (+1, #Start1)
   print $rltmp       ( 0, #Start2)
   print $key         ( 0, #Start3)
FROM [$sqlfrom]
WHERE NOT EXISTS (SELECT 'X' [$sqlwhere])
end-select

     let $rectmp = $recname
     let $rltmp = $relname


  end-while
#endif
end-procedure
!----------------------------------------------------------------------!
! Procedure: SWAP-7                                                    !
!                                                                      !
! Descr:     System table audit against PSRECFIELD table:              !
!                                                                      !
!            SWAP-7: Identify base RECORDS that                        !
!            Do not have a unique index                                !
!----------------------------------------------------------------------!

begin-procedure SWAP-7
   let $AuditDescr = '(SWAP-7) The Following Base Records ' ||
                     'Do Not Have An Unique Index'
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25

   let #numofhdr        = 2

   put 'Record Name'               #Start1 21 into printarray(0)
   put 'Base Record is:'           #Start2 21 into printarray(1)


begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME                 &SWAP7_Recname
'Missing Unique Index'    &SWAP7_MsgTxt



   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
       or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
   end-if

   let $nogo = 'Y'
   let $PRTREC = 'Y'
   Do SubRecChk
   If $PRTREC  = 'Y'
     let #rows = #rows +1
     do PrintSectionHeadings
     print &SWAP7_Recname       (+1, #Start1)
     print &SWAP7_MsgTxt        ( 0, #Start2)
   end-if

FROM PSRECDEFN A
WHERE A.RELLANGRECNAME <> ' '
AND A.RECTYPE IN ( 0, 7)
AND NOT EXISTS (SELECT 'X' FROM PSINDEXDEFN B
WHERE A.RECNAME = B.RECNAME
AND B.UNIQUEFLAG = 1)
ORDER BY 1
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if
end-procedure
!----------------------------------------------------------------------!
! Procedure: SubRecChk                                                 !
!                                                                      !
! Descr:     System table audit against PSRECFIELD table:              !
!                                                                      !
!            SubRecChk: Identify base RECORDS that                     !
!            Do not have a unique index or subrecords                  !
!----------------------------------------------------------------------!

begin-procedure SubRecChk


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if


begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME                 &SUBCHK_Recname
A.FIELDNAME               &SUBCHK_Fieldname
A.SUBRECORD               &SUBCHK_Subrecord

      if &SUBCHK_Subrecord = 'Y'
         Do MoreCkg
      end-if

FROM PSRECFIELD A
WHERE A.RECNAME = &SWAP7_Recname
end-SELECT

   if $nogo = 'Y'
      let $PRTREC = 'Y'
   end-if
#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if
end-procedure
!----------------------------------------------------------------------!
! Procedure: MoreCkg                                                   !
!                                                                      !
! Descr:     System table audit against PSRECFIELD and PSINDEXDEFN     !
!            table:                                                    !
!            MoreCkg: Identify base RECORDS that                       !
!            Do not have a unique index for subrecords                 !
!----------------------------------------------------------------------!

begin-procedure MoreCkg


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

let $nogo = 'N'
begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME

       let $PRTREC = 'N'

FROM PSRECFIELD A
WHERE A.RECNAME = &SWAP7_Recname
AND  A.SUBRECORD = 'Y'
AND EXISTS (SELECT 'X' FROM PSINDEXDEFN C
WHERE A.FIELDNAME = C.RECNAME
AND C.UNIQUEFLAG = 1)
end-SELECT


#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if
end-procedure

!----------------------------------------------------------------------!
! Procedure: SWAP-8                                                    !
!                                                                      !
! Descr:     System table audit against PSRECDEFN:  !
!                                                                      !
!            SWAP-8: Identify any mismatch between the RECTYPE of base and RLR                                 !
!----------------------------------------------------------------------!

begin-procedure SWAP-8
!Set flag to Y to audit PPT owned records. Will check the records in PPLTOOLS only
!Set flag to N to audit all records in the DB

   let $flag = 'Y'

   if $flag = 'Y'
      let $AuditDescr = '(SWAP-8) -Informational Only- The Following PeopleTools owned base records and RLRs' ||
                     ' have different record types'
   else
       let $AuditDescr = '(SWAP-8) -Informational Only- The Following base records and RLRs' ||
                     ' have different record types'
    end-if
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = #Start2 + 24
   let #Start4          = #Start3 + 28
   let #numofhdr        =  4
   let $quote = chr(39)

    put 'Base Record Name'      #Start1 18 into printarray(0)
   put 'Base Record Type'       #Start2 18 into printarray(1)
   put 'Rel Language Record Name'      #Start3 25 into printarray(2)
   put 'Rel Language Record Type'       #Start4 25 into printarray(3)

   if $flag = 'Y'
        let $where_clause = ' AND A.RECNAME IN (SELECT OBJECTVALUE1 FROM PSPROJECTITEM WHERE OBJECTTYPE = 0 AND PROJECTNAME = ' || $quote || 'PPLTOOLS' || $quote || ')'
   else
         let $where_clause = ''
    end-if

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME        &SWAP8_RecName1
A.RECTYPE         &SWAP8_RecType1
B.RECNAME        &SWAP8_RecName2
B.RECTYPE         &SWAP8_RecType2


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
          or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &SWAP8_RecName1    (+1, #Start1)
   print &SWAP8_RecType1   ( 0, #Start2)
   print &SWAP8_RecName2    (0, #Start3)
   print &SWAP8_RecType2   ( 0, #Start4)

FROM PSRECDEFN A, PSRECDEFN B 
WHERE 
    (( A.RECTYPE=1 AND A.RELLANGRECNAME = B.RECNAME AND B.RECTYPE = 0 ) OR
    ( A.RECTYPE=0 AND A.RELLANGRECNAME = B.RECNAME AND B.RECTYPE = 1 ))
[$where_clause]
end-SELECT

    do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if
end-procedure

!----------------------------------------------------------------------!
! Procedure: SWAP-9                                                    !
!                                                                      !
! Descr:     System table audit against BI Publisher Template File Related Language Tables:       !
!                                                                      !
!            SWAP-9: Identify orphan translation for BI Publisher template files !
!
!----------------------------------------------------------------------!

begin-procedure SWAP-9

   let $AuditDescr = '(SWAP-9) The Following Translated BI Publisher Template Files Are Orphans'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = #Start2 + 24
   let #Start4          = #Start3 + 28
   let #numofhdr        =  4


   put 'Template ID'               #Start1 21 into printarray(0)
   put 'EFFDT'                       #Start2 21 into printarray(1)
   put 'Template Language CD'           #Start3 20 into printarray(2)
   put 'XLIFF File ID'                               #Start4 30 into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
X1.TMPLDEFN_ID             &Swap9_Tmpldefn_id
X1.EFFDT                       &Swap9_Effdt
X1.TMPLLANGCD              &Swap9_Tmpllangcd
X1.XLIFF_FILEID              &Swap9_XLIFF_fileid

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
          or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if

   let #rows = #rows +1
   print &Swap9_Tmpldefn_id         (+1, #Start1)
   print &Swap9_Effdt                  ( 0, #Start2)
   print &Swap9_Tmpllangcd         ( 0, #Start3)
   print &Swap9_XLIFF_fileid         ( 0, #Start4)

FROM PSXPTMPLTRINFO X1
WHERE NOT EXISTS (SELECT 1 FROM PSXPTMPLFILEDEF Y1
WHERE X1.TMPLDEFN_ID = Y1.TMPLDEFN_ID
AND X1.EFFDT = Y1.EFFDT)
ORDER BY 1,2,3
end-SELECT
 
 
    do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure
