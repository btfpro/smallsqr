!***********************************************************************
!  BEN002:  Life Insurance Participants                                *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/09/12:10:42:34                                 !
!       $Release:  HR9                                                 !
!      $Revision:  106                                                 !
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'  !Set environment

Begin-Setup
  #Include 'ptpsl177.sqc'
  #Include 'ldpgmcur.sqc'   !Load-Lookup Table with Benefit Program Currency
End-Setup

#define col_sep                  1   !Column Separator
#define col_plan_type           10   !Plan Type
#define col_ben_plan            10   !Benefit Plan
#define col_dept_id             10   !Department ID
#define col_dept_name           10   !Department Name
#define col_empl_name           40   !Employee Name
#define col_empl_id             10   !Employee ID
#define col_empl_stat            4   !Employee Status
#define col_empl_type            4   !Employee Type
#define col_reg_temp             4   !Reg/Temp
#define col_full_part            5   !Full/Part
#define col_pay_grp              3   !Pay Group
#define col_covrg                4   !Coverage Type
#define col_formula             10   !Formula ID
#define col_enrollee             4   !Enrollee Type
#define col_sumdep               4   !Sum of Dependents
#define col_flat_amt            13   !Flat Amount
#define col_covrg_begin         10   !Coverage Begin

!***********************************************************************
Begin-Program
!***********************************************************************
  do Init-Report
  do Process-Main
  do StdAPI-Term
End-Program


!***********************************************************************
Begin-Procedure Init-Report
!***********************************************************************

  do Init-DateTime
  do Init-Number

  move $BaseCurr to $ReportCurr
  move $BaseRtType to $ReportRtType
  move 'W' to $ReportMsgType  !Warning
  do Get-Current-DateTime
  do StdAPI-Init

  if IsBlank($prcs_process_instance)
    do Ask-Values
  else
    do Get-Values
  end-if
  do Format-DateTime($AsOfDate,$AsOfDateRpt,{DEFMDY},'','')

  move 'BEN002' to $ReportID
  do Get-Report-Language
  let $ReportTitle  = $BEN002-REPORTTITLE
  display  'Report ID: ' noline
  display $ReportTitle

#Include 'ldplntyp.sqc'   !Load-Lookup Table with Plan Types

End-Procedure


!***************************************
Begin-Procedure Ask-Values
!***************************************

  do Ask-As-Of-Date

End-Procedure


!***************************************
Begin-Procedure Get-Values
!***************************************

  do Select-Parameters
  do Get-As-Of-Date

End-Procedure


!***********************************************************************
Begin-Procedure Report-Translation
!***********************************************************************

! Read from BEN002 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation('BEN1')

  do Get_Field_Information ('BEN002', 'REPORT_TITLE', $BEN002-REPORTTITLE, #CW)
  do Get_Field_Information ('BEN002', 'SETID',        $BEN002-SETID,       #CW)
  do Get_Field_Information ('BEN002', 'VENDOR',       $BEN002-VENDOR,      #CW)
  do Get_Field_Information ('BEN002', 'ASOFDATE',     $BEN002-ASOFDATE,    #CW)
  do Get_Field_Information ('BEN002', 'REG',          $BEN002-REG,         #CW)
  do Get_Field_Information ('BEN002', 'FULL',         $BEN002-FULL,        #CW)
  do Get_Field_Information ('BEN002', 'TEMP',         $BEN002-TEMP,        #CW)
  do Get_Field_Information ('BEN002', 'PART',         $BEN002-PART,        #CW)
  do Get_Field_Information ('BEN002', 'BEGIN',        $BEN002-BEGIN,       #CW)
  do Get_Field_Information ('BEN002', 'END',          $BEN002-END,         #CW)
  do Get_Field_Information ('BEN002', 'GROUP',        $BEN002-GROUP,       #CW)
  do Get_Field_Information ('BEN002', 'FACTOR',       $BEN002-FACTOR,      #CW)
  do Get_Field_Information ('BEN002', 'T01_L01A',     $BEN002-T01-L01A,    #CW)
  do Get_Field_Information ('BEN002', 'WAIVED',       $BEN002-WAIVED,      #CW)
  do Get_Field_Information ('BEN002', 'COMPANY_TOT',  $BEN002-COMPANY-TOT, #CW)
  do Get_Field_Information ('BEN002', 'PROV_TOT',     $BEN002-PROV-TOT,    #CW)

  do Get_Field_Information ('BEN1',   'EMPLOYEE',     $BEN1-EMPLOYEE,      #CW)
  do Get_Field_Information ('BEN1',   'NAME',         $BEN1-NAME,          #CW)
  do Get_Field_Information ('BEN1',   'BENEFIT',      $BEN1-BENEFIT,       #CW)
  do Get_Field_Information ('BEN1',   'DEPARTMENT',   $BEN1-DEPARTMENT,    #CW)
  do Get_Field_Information ('BEN1',   'EMPL',         $BEN1-EMPL,          #CW)
  do Get_Field_Information ('BEN1',   'PAY',          $BEN1-PAY,           #CW)
  do Get_Field_Information ('BEN1',   'STATUS',       $BEN1-STATUS,        #CW)
  do Get_Field_Information ('BEN1',   'COVERAGE',     $BEN1-COVERAGE,      #CW)
  do Get_Field_Information ('BEN1',   'ID',           $BEN1-ID,            #CW)
  do Get_Field_Information ('BEN1',   'PLAN_TYPE',    $BEN1-PLAN-TYPE,     #CW)
  do Get_Field_Information ('BEN1',   'PLAN',         $BEN1-PLAN,          #CW)
  do Get_Field_Information ('BEN1',   'TYPE',         $BEN1-TYPE,          #CW)
  do Get_Field_Information ('BEN1',   'FLAT_AMT',     $BEN1-FLAT-AMT,      #CW)
  do Get_Field_Information ('BEN1',   'PROVIDER',     $BEN1-PROVIDER,      #CW)
  do Get_Field_Information ('BEN1',   'COVERAGE_ABRV', $BEN1-COVRG,        #CW)
  do Get_Field_Information ('BEN1',   'COVERED_ABRV', $BEN1-COVERED,       #CW)
  do Get_Field_Information ('BEN1',   'PERSON_ABRV',  $BEN1-PERSON,        #CW)
  do Get_Field_Information ('BEN1',   'FORMULA',      $BEN1-FORMULA,       #CW)
  do Get_Field_Information ('BEN1',   'SUM',          $BEN1-SUM,           #CW)
  do Get_Field_Information ('BEN1',   'DEPENDENT_ABRV', $BEN1-DPND,        #CW)

End-Procedure


!***********************************************************************
Begin-Heading 9
!***********************************************************************

#Include 'stdhtr02.sqc'

  if (#MultiCurr)
!*** '* Amounts are converted to base currency - ' (3,65)
    print $BEN002-T01-L01A      (3,65)
    print $ReportCurr           (0,108)
    print '*'                   (7,150)
  end-if

  if ($Provider <> $PriorProvider) OR ($Setid <> $PriorSetid)
    if Not IsBlank($Provider) AND Not IsBlank($Setid)
      do Get-Provider-Name
    end-if
    move $Setid to $PriorSetid
    move $Provider to $PriorProvider
  end-if

  print $BEN002-SETID    (4,1,10)
  print $SetID           (0,13)
  print $BEN002-VENDOR   (+1,1,10)
  print $ProviderName    (0,13)
  print $BEN002-ASOFDATE (+1,1,10)
  print $AsOfDateRpt     (0,13)

  print ''                (+2,1,{col_plan_type})
  print $BEN1-BENEFIT     (0,+{col_sep},{col_ben_plan})
  print $BEN1-DEPARTMENT  (0,+{col_sep},{col_dept_id})
  print $BEN1-DEPARTMENT  (0,+{col_sep},{col_dept_name})
  print $BEN1-EMPLOYEE    (0,+{col_sep},{col_empl_name})
  print $BEN1-EMPLOYEE    (0,+{col_sep},{col_empl_id})
  print $BEN1-EMPL        (0,+{col_sep},{col_empl_stat})
  print $BEN1-EMPL        (0,+{col_sep},{col_empl_type})
  print $BEN002-REG       (0,+{col_sep},{col_reg_temp})
  print $BEN002-FULL      (0,+{col_sep},{col_full_part})
  print $BEN1-PAY         (0,+{col_sep},{col_pay_grp})
  print $BEN1-COVRG       (0,+{col_sep},{col_covrg})
  print $BEN1-FORMULA     (0,+{col_sep},{col_formula})
  print $BEN1-COVERED     (0,+{col_sep},{col_enrollee})
  print $BEN1-SUM         (0,+{col_sep},{col_sumdep})
  print ''                (0,+{col_sep},{col_flat_amt})
  print $BEN1-COVERAGE    (0,+{col_sep},{col_covrg_begin})

  print $BEN1-PLAN-TYPE   (+1,1,{col_plan_type})
  print $BEN1-PLAN        (0,+{col_sep},{col_ben_plan})
  print $BEN1-ID          (0,+{col_sep},{col_dept_id})
  print $BEN1-NAME        (0,+{col_sep},{col_dept_name})
  print $BEN1-NAME        (0,+{col_sep},{col_empl_name})
  print $BEN1-ID          (0,+{col_sep},{col_empl_id})
  print $BEN1-STATUS      (0,+{col_sep},{col_empl_stat})
  print $BEN1-TYPE        (0,+{col_sep},{col_empl_type})
  print $BEN002-TEMP      (0,+{col_sep},{col_reg_temp})
  print $BEN002-PART      (0,+{col_sep},{col_full_part})
  print $BEN002-GROUP     (0,+{col_sep},{col_pay_grp})
  print $BEN1-TYPE        (0,+{col_sep},{col_covrg})
  print $BEN1-ID          (0,+{col_sep},{col_formula})
  print $BEN1-PERSON      (0,+{col_sep},{col_enrollee})
  print $BEN1-DPND        (0,+{col_sep},{col_sumdep})
  print $BEN1-FLAT-AMT    (0,+{col_sep},{col_flat_amt})
  print $BEN002-BEGIN     (0,+{col_sep},{col_covrg_begin})

  print '='               (+1,1,{col_plan_type})                  Fill
  print '='               (0,+{col_sep},{col_ben_plan})           Fill
  print '='               (0,+{col_sep},{col_dept_id})            Fill
  print '='               (0,+{col_sep},{col_dept_name})          Fill
  print '='               (0,+{col_sep},{col_empl_name})          Fill
  print '='               (0,+{col_sep},{col_empl_id})            Fill
  print '='               (0,+{col_sep},{col_empl_stat})          Fill
  print '='               (0,+{col_sep},{col_empl_type})          Fill
  print '='               (0,+{col_sep},{col_reg_temp})           Fill
  print '='               (0,+{col_sep},{col_full_part})          Fill
  print '='               (0,+{col_sep},{col_pay_grp})            Fill
  print '='               (0,+{col_sep},{col_covrg})              Fill
  print '='               (0,+{col_sep},{col_formula})            Fill
  print '='               (0,+{col_sep},{col_enrollee})           Fill
  print '='               (0,+{col_sep},{col_sumdep})             Fill
  print '='               (0,+{col_sep},{col_flat_amt})           Fill
  print '='               (0,+{col_sep},{col_covrg_begin})        Fill

End-Heading


!***********************************************************************
Begin-Procedure Process-Main
!***********************************************************************

Begin-SELECT

J.COMPANY   ()   On-Break
                 PRINT=NEVER
                 LEVEL=1
                 PROCEDURE=COMPANY-CHANGE

C.SETID     ()   On-Break
                 PRINT=NEVER
                 LEVEL=1
                 PROCEDURE=COMPANY-CHANGE

C.VENDOR_ID ()   On-Break
                 PRINT=NEVER
                 LEVEL=2
                 PROCEDURE=PROVIDER-CHANGE

  move &J.Company   to $Company
  move &C.Setid     to $Setid
  move &C.Vendor_ID to $Provider
  add 1 to #ProviderTotal

B.PLAN_TYPE
  let $Plan_Type = &B.Plan_Type
#ifdef MICROSOFT
  let $Plan_Type = Edit(&B.Plan_Type, 'XXXX')
#endif
#ifdef DB2ALL
  if Not (#UNICODE_ENABLED)
    let $Plan_Type = Edit(&B.Plan_Type, 'XXXX')
  end-if
#endif
  LOOKUP PLAN-TYPES $Plan_Type $PlanDesc
  print $PlanDesc                (+1,1,{col_plan_type})

B.BENEFIT_PLAN
  move &B.BENEFIT_PLAN to $Benefit_Plan
D.DESCRSHORT
  move &D.DESCRSHORT to $BenefitNameAbbrv
  do Get-Benefit-Name-Lang
  print $BenefitNameAbbrv        (0,+{col_sep},{col_ben_plan})

J.DEPTID                         (0,+{col_sep},{col_dept_id})
J.SETID_DEPT
DT.DESCRSHORT
DT.EFFDT
N.NAME
  move &DT.DESCRSHORT to $DEPTNAME_ABBRV
  if $Curr_Language_cd <> $PSoptions_language_cd
     do Get-Department-Lang
  end-if

  print $DEPTNAME_ABBRV           (0,+{col_sep},{col_dept_name})
  print &N.NAME                   (0,+{col_sep},{col_empl_name})

J.EMPLID                          (0,+{col_sep},{col_empl_id})
J.EMPL_RCD
  if (#MultiCurr)
    do Get-Employee-Benefit-Program
  end-if

J.EMPL_STATUS                     (0,+{col_sep},{col_empl_stat})
J.EMPL_TYPE                       (0,+{col_sep},{col_empl_type})
J.REG_TEMP                        (0,+{col_sep},{col_reg_temp})
J.FULL_PART_TIME                  (0,+{col_sep},{col_full_part})
J.PAYGROUP                        (0,+{col_sep},{col_pay_grp})
B.EFFDT
B.FLAT_AMOUNT
K.COVERAGE_TYPE                   (0,+{col_sep},{col_covrg})
K.BN_FORMULA_ID                   (0,+{col_sep},{col_formula})
K.ENROLLE_TYPE                    (0,+{col_sep},{col_enrollee})
K.SUM_DEP_COVG                    (0,+{col_sep},{col_sumdep})

  if &K.Coverage_Type = '2'
     if &K.Sum_Dep_Covg = 'Y'
        do Get-Total-Coverage
        move &DepSum to #FlatAmount
     else
        move &B.Flat_Amount to #FlatAmount
     end-if
  end-if

  if (#MultiCurr) And ($ProgmCur <> $ReportCurr)
    do ConvertCurrency(#FlatAmount,$ProgmCur,$ReportCurr,
                       $ReportRtType,$AsOfDate,#FAOut,$ReportMsgType)
  else
    move #FlatAmount to #FAOut
  end-if

B.COVERAGE_ELECT_DT
B.COVERAGE_BEGIN_DT

  if &K.Coverage_Type = '2'
    do Format-Number(#FAout,$out,'9,999,999,999')
    print $out                   (0,+{col_sep},{col_flat_amt})
  else
    print ' '                    (0,+{col_sep},{col_flat_amt})
  end-if

  do Format-DateTime(&B.Coverage_Begin_Dt, $out, {DEFDATE}, '', '')
  print $out                   (0,+{col_sep},{col_covrg_begin})

  do Format-DateTime(&B.Coverage_Elect_Dt, $out1, {DEFCMP}, '', '')
  do Format-DateTime($AsOfToday, $out2, {DEFCMP}, '', '')
  if $out1 > $out2
    print '*'                  ()  !signify future effective date
  end-if

FROM  PS_JOB            J,
      PS_PERSON_NAME    N,
      PS_LIFE_ADD_BEN   B,
      PS_VENDOR         C,
      PS_BENEF_PLAN_TBL D,
      PS_DEPT_TBL       DT,
      PS_LIFE_ADD_TBL   K

WHERE J.EFFDT = (SELECT MAX(EFFDT)
                  FROM  PS_JOB
                 WHERE  EMPLID   = J.EMPLID
                   AND  EMPL_RCD = J.EMPL_RCD
                   AND  EFFDT   <= $AsOfDate)
  AND J.EFFSEQ = (SELECT MAX(EFFSEQ)
                  FROM  PS_JOB
                 WHERE  EMPLID   = J.EMPLID
                   AND  EMPL_RCD = J.EMPL_RCD
                   AND  EFFDT    = J.EFFDT)
  AND J.HR_STATUS = 'A'
  AND N.EMPLID   = J.EMPLID
  AND B.EMPLID   = J.EMPLID
  AND B.EMPL_RCD = J.EMPL_RCD
  AND B.COVERAGE_BEGIN_DT = (SELECT MAX(COVERAGE_BEGIN_DT)
                              FROM  PS_LIFE_ADD_BEN
                             WHERE  EMPLID             = B.EMPLID
                               AND  EMPL_RCD           = B.EMPL_RCD
                               AND  PLAN_TYPE          = B.PLAN_TYPE
                               AND  BENEFIT_NBR        = B.BENEFIT_NBR
                               AND  COVERAGE_BEGIN_DT <= $AsOfDate)
  AND ((B.COVERAGE_END_DT IS NULL) OR (B.COVERAGE_END_DT > $AsOfDate))
  AND B.COVERAGE_ELECT <> 'T'
  AND D.PLAN_TYPE    = B.PLAN_TYPE
  AND D.BENEFIT_PLAN = B.BENEFIT_PLAN
  AND D.EFFDT = (SELECT MAX(G.EFFDT)
                  FROM  PS_BENEF_PLAN_TBL G
                 WHERE  G.PLAN_TYPE = D.PLAN_TYPE
                   AND  G.BENEFIT_PLAN = D.BENEFIT_PLAN
                   AND  G.EFFDT <= $AsOfDate)
  AND C.SETID     = D.SETID
  AND C.VENDOR_ID = D.VENDOR_ID
  AND K.PLAN_TYPE = B.PLAN_TYPE
  AND K.BENEFIT_PLAN = B.BENEFIT_PLAN
  AND K.EFFDT = (SELECT MAX(L.EFFDT)
                  FROM  PS_LIFE_ADD_TBL L
                 WHERE  L.PLAN_TYPE = K.PLAN_TYPE
                   AND  L.BENEFIT_PLAN = K.BENEFIT_PLAN
                   AND  L.EFFDT <= $AsOfDate)
  AND DT.SETID  = J.SETID_DEPT
  AND DT.DEPTID = J.DEPTID
  AND DT.EFFDT  = (SELECT MAX(EFFDT)
                   FROM  PS_DEPT_TBL
                  WHERE  SETID     = DT.SETID
                    AND  DEPTID    = DT.DEPTID
                    AND  DT.EFFDT <= $AsOfDate)
  AND DT.EFF_STATUS = 'A'

ORDER BY J.COMPANY ASC,
         C.SETID ASC,
         C.VENDOR_ID ASC,
         B.PLAN_TYPE ASC,
         B.BENEFIT_PLAN ASC,
         J.DEPTID ASC,
         J.EMPLID ASC,
         J.EMPL_RCD DESC

End-SELECT

  move 'Y' to $End
  do Company-Change

End-Procedure


!***********************************************************************
Begin-Procedure Get-Employee-Benefit-Program
!***********************************************************************

Begin-SELECT
E.BENEFIT_PROGRAM
  if &E.Benefit_Program <> $priorBenefitProgram
    let $Benefit_Program = &E.Benefit_Program
#ifdef MICROSOFT
    let $Benefit_Program = Edit(&E.Benefit_Program, 'XXXX')
#endif
#ifdef DB2ALL
    if Not (#UNICODE_ENABLED)
      let $Benefit_Program = Edit(&E.Benefit_Program, 'XXXX')
    end-if
#endif
    LOOKUP BENEFIT-PROGRAM-CURRENCY $Benefit_Program $ProgmCur
    move &E.Benefit_Program to $priorBenefitProgram
  end-if

FROM PS_BEN_PROG_PARTIC E
WHERE E.EMPLID = &J.Emplid
  AND E.EMPL_RCD = &J.EMPL_RCD
  AND E.EFFDT =
      (SELECT MAX(I.EFFDT)
       FROM PS_BEN_PROG_PARTIC I
       WHERE I.EMPLID = E.EMPLID
         AND I.EMPL_RCD = E.EMPL_RCD
         AND I.EFFDT <= $AsOfDate)
End-SELECT

End-Procedure


!***********************************************************************
Begin-Procedure Get-Total-Coverage
!***********************************************************************

Begin-SELECT

#ifdef DB2ALL
DECIMAL(SUM(M.FLAT_AMOUNT),15,3) &DepSum
#else
SUM(M.FLAT_AMOUNT)  &DepSum
#endif

FROM  PS_LIFE_ADD_BENEFC M
WHERE EMPLID    = &J.EmplID
  AND EMPL_RCD = &J.EMPL_RCD
  AND PLAN_TYPE = &B.Plan_Type
  AND EFFDT     = &B.EffDt
End-SELECT

End-Procedure


!***********************************************************************
Begin-Procedure Company-Change
!***********************************************************************

  move 1 to #level
  do Provider-Change
  move 0 to #level

  do Format-Number(#CompanyTotal, $out, '99,999')
!***print ' Company Total:' (+2,1)
  print $BEN002-COMPANY-TOT   (+2,1,16)
  print $out                  (0,20)

  move 0 to #CompanyTotal

  if ($End = 'Y')
     do Reset
  end-if

  new-page

End-Procedure


!***********************************************************************
Begin-Procedure Provider-Change
!***********************************************************************

  do Format-Number(#ProviderTotal, $out, '99,999')
!***print 'Provider Total:' (+2,1)
  print $BEN002-PROV-TOT        (+2,1,16)
  print $out                    (0,20)

  add #ProviderTotal to #CompanyTotal
  move 0 to #ProviderTotal

  if (#level = 0)
    new-page
  end-if

End-Procedure


!***********************************************************************
Begin-Procedure Get-Department-Lang
!***********************************************************************

Begin-SELECT
X.DESCRSHORT

  if Not IsBlank(&X.DESCRSHORT)
     move &X.DESCRSHORT to $DEPTNAME_ABBRV
  end-if

FROM  PS_DEPT_TBL_LANG X
WHERE X.SETID       = &J.SETID_DEPT
  AND X.DEPTID      = &J.DEPTID
  AND X.EFFDT       = &DT.EFFDT
  AND X.LANGUAGE_CD = $curr_language_cd

END-SELECT
End-Procedure

!***********************************************************************
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines
#Include 'getprvnm.sqc'  !Get-Provider-Name procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getbennm.sqc'  !Get-Benefit-Name-Lang procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date AND time formatting
#Include 'benasof.sqc'   !Ask-As-Of-Date procedure
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
!***********************************************************************
