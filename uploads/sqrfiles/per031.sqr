!********************************************************
!  PER031:  EEO-4 Report -- Federally specified format  *
!********************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:37:04                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
!***********************************************************************

#include 'setenv.sqc'           !Set environment
#Include 'setup31.sqc'          !printer and page-size initialization

!***********************************************************************
begin-report
!***********************************************************************

  do Init-Number
  do Init-DateTime
  do Get-Current-DateTime
  do Init-Report
  
! ----- Fix for 592323 Starts
  ALTER-PRINTER point-size=9  
! ----- Fix for 592323 Ends

  do Process-Main
  do Reset
  do Stdapi-Term

end-report

!***********************************************************************
begin-procedure Company-Constants
!***********************************************************************

!---- fix 568773 begins
  move ' '             to $ControlNo
  move ' ' to $OfficeName
  move ' '      to $ContactName
  move ' '   to $ContactTitle
  move ' '       to $ContactPhone
  move ' '       to $OfficialName
!---- fix 568773 Ends

end-procedure

!***********************************************************************
begin-heading 15
!***********************************************************************

  print 'Rev. EEO-4 1995'                        (1,2,49)
  print &E.Descr                                 (0,52,64)
  page-number                                    (0,117) 'Page '
  print 'State and Local Government Information' (+1,48)
  print $Year                                    (+1,58,4)
  print 'EEO-4 Report'                           (0,63)
  print &E.Descr                                 (+1,1)
  print $OfficeName                              (+1,1)
  print $Address1                                (+1,1)
  print $City                                    (+1,1,53)
  print 'Control Number'                         (0,55,14)
  print $ControlNo                               (0,70)

  if $PROCESS_TYPE = 'R'

    move 'EEO4_FUNCTION' to $FieldName
    move $Function       to $FieldValue
    let  $prtFunc  =  $Function || ':'
    do Read-Translate-Table
    print 'FUNCTION'                               (+2,1,8)
    print $prtFunc                                 (0,10,3)
    print $XlatLongName                            (0,14)
  else

    print 'FUNCTIONS:'                             (+2,1,11)
    print $EEO4_FUNCLIST                           (0,13)
  end-if

  evaluate #FPT
    when = 0  !Full-Time

        print '1. Full-Time Employees'                 (+2,56)
        print 'Salaries'                               (+2,22,11)
        print 'Total  ----------- Male ------------  ' (0,34,0)
        
!-----Fix for 592323 Starts
        !print '---------- Female -----------'          ()
        print '---------- Female -----------'          (, +10, ,)
!-----Fix for 592323 Ends
  
        print 'Job Category'                           (+1,1,32)
        !**************Begin Resolution - 619239 ******************
        !print '  A      B     C     D     E     F    ' (0,34,0) 
        print '  A      B     C     D     E          F    ' (0,34,0)
        !**************End Resolution - 619239 ********************
  
!-----Fix for 592323 Starts
        !print '  G     H     I     J     K'            ()
        !**************Begin Resolution - 619239 ******************
        !print '  G     H     I     J     K'            (0,+10, ,) 
        print '  G     H     I     J         K'            (0,+10, ,)
        !**************End Resolution - 619239 ********************
        
!-----Fix for 592323 Ends
        !**************Begin Resolution - 619239 ******************
        !print '        Wht   Blk   Hsp   Asn  AmInd  ' (+1,34,0)
        print '        Wht   Blk   Hsp   Asn/PcIs  AmInd  ' (+1,34,0)
        !**************End Resolution - 619239 ********************

!-----Fix for 592323 Starts
        !print ' Wht   Blk   Hsp   Asn  AmInd'          ()
        !**************Begin Resolution - 619239 ******************
        !print ' Wht   Blk   Hsp   Asn  AmInd'          (, +10, ,)  
        print ' Wht   Blk   Hsp   Asn/PcIs  AmInd'          (, +10, ,)  
        !**************End Resolution - 619239 ********************
!-----Fix for 592323 Ends

        let $prtchk = 'F'
    when = 1                         !Part-Time

        print '2. Other Than Full-Time Employees'      (+2,49)
        print 'Total  ----------- Male ------------  ' (+2,34,0)
        
!-----Fix for 592323 Starts
        !print '---------- Female -----------'          ()
        print '---------- Female -----------'          (, +10, ,)
!-----Fix for 592323 Ends        
        
        print 'Job Category'                           (+1,1,32) 
        !**************Begin Resolution - 619239 ******************
        !print '  A      B     C     D     E     F    ' (0,34,0) 
        print '  A      B     C     D     E          F    ' (0,34,0)
        !**************End Resolution - 619239 ********************

!-----Fix for 592323 Starts
        !print '  G     H     I     J     K'            ()
        !**************Begin Resolution - 619239 ******************
        !print '  G     H     I     J     K'            (0,+10,0) 
        print '  G     H     I     J         K'            (0,+10,0)
        !**************End Resolution - 619239 ********************
        
!-----Fix for 592323 Ends
        
        !**************Begin Resolution - 619239 ******************
        !print '        Wht   Blk   Hsp   Asn  AmInd  ' (+1,34,0)
        print '        Wht   Blk   Hsp   Asn/PcIs  AmInd  ' (+1,34,0)
        !**************End Resolution - 619239 ********************
        
!-----Fix for 592323 Starts
        !print ' Wht   Blk   Hsp   Asn  AmInd'          ()
        !**************Begin Resolution - 619239 ******************
        !print ' Wht   Blk   Hsp   Asn  AmInd'          (, +10,0)  
        print ' Wht   Blk   Hsp   Asn/PcIs  AmInd'          (, +10,0)  
        !**************End Resolution - 619239 ********************
!-----Fix for 592323 Ends        

    when > 1  !New Hire Totals

       if $prtchk = 'F'

          print '3.  New Hires During Fiscal Year - Permanent Full Time Only' (+2,37)
          print 'Total  ----------- Male ------------  ' (+2,34,0)
          
!-----Fix for 592323 Starts          
          !print '---------- Female -----------'          ()
          print '---------- Female -----------'          (, +10, 0)
!-----Fix for 592323 Ends        
         
          
          print 'Job Category'                           (+1,1,32)
          !**************Begin Resolution - 619239 ******************
          !print '  A      B     C     D     E     F    ' (0,34,0) 
          print '  A      B     C     D     E          F    ' (0,34,0)
          !**************End Resolution - 619239 ********************

!-----Fix for 592323 Starts
          !print '  G     H     I     J     K'            ()
          !**************Begin Resolution - 619239 ******************
          !print '  G     H     I     J     K'            (0,+10,0) 
          print '  G     H     I     J         K'            (0,+10,0) 
          !**************End Resolution - 619239 ********************
          
!-----Fix for 592323 Ends
          !**************Begin Resolution - 619239 ******************   
          !print '        Wht   Blk   Hsp   Asn  AmInd  ' (+1,34,0)
          print '        Wht   Blk   Hsp   Asn/PcIs  AmInd  ' (+1,34,0) 
          !**************End Resolution - 619239 ********************

!-----Fix for 592323 Starts
          !print ' Wht   Blk   Hsp   Asn  AmInd'          ()
          !**************Begin Resolution - 619239 ******************
          !print ' Wht   Blk   Hsp   Asn  AmInd'          (, +10,0)
          print ' Wht   Blk   Hsp   Asn/PcIs  AmInd'          (, +10,0)
          !**************End Resolution - 619239 ********************
!-----Fix for 592323 Ends

          let $prtchk = 'T'
       end-if

    end-evaluate

end-heading

!***********************************************************************
begin-procedure Init-Report
!***********************************************************************

  move 'PER031' to $ReportID
  move 'EEO-4 State and Local Government Information' to $ReportTitle
  display $ReportTitle
  display ''

  do Company-Constants
  do Init-Array
  do Delete-Worktable

  do Stdapi-Init
  if $prcs_process_instance = ''
    do Ask-Calendar-Year
  else
    do Select-Parameters
  end-if

  display ''

end-procedure

!***********************************************************************
begin-procedure Get-Values
!***********************************************************************

   do Get-From-Thru-Date

end-procedure

!***********************************************************************
begin-procedure Init-Array
!
! This procedure creates and loads data into the Salary-Ranges array
! and Totals array.
!***********************************************************************

  create-array name=Salary-Ranges size=8 -
    field=LowSal:number field=HighSal:number

  move 7 to #maxSalaryLevel
  put   100 15900 into Salary-Ranges(0) LowSal HighSal
  put 16000 19900 into Salary-Ranges(1) LowSal HighSal
  put 20000 24900 into Salary-Ranges(2) LowSal HighSal
  put 25000 32900 into Salary-Ranges(3) LowSal HighSal
  put 33000 42900 into Salary-Ranges(4) LowSal HighSal
  put 43000 54900 into Salary-Ranges(5) LowSal HighSal
  put 55000 69900 into Salary-Ranges(6) LowSal HighSal
  put 70000     0 into Salary-Ranges(7) LowSal HighSal

  create-array name=Totals size=3 -     !0=Full-time  1=Part-time  2=New Hires
    field=LINE_NUM:number field=TotalLit1:char field=TotalLit2:char -
    field=count:number:11 field=startCol:number:11

  put 65 '   Total'    'Full Time' into Totals(0) LINE_NUM TotalLit1 TotalLit2
  put 74 'Total Other' 'Than F-T'  into Totals(1) LINE_NUM TotalLit1 TotalLit2
  put 83 '   Total'    'New Hires' into Totals(2) LINE_NUM TotalLit1 TotalLit2

!-----Fix for 592323 Starts
!  put 33 40 46 52 58 64 71 77 83 89 95 into Totals(0) -  
!**************Begin Resolution - 619239 ******************
    !put 33 40 48 55 63 71 79 87 94 102 110 into Totals(0) -
    put 33 40 48 55 63 76 84 92 99 107 119 into Totals(0) -
!**************End Resolution - 619239 ********************
!-----Fix for 592323 Ends

    startCol(0) startCol(1) startCol(2) startCol(3) startCol(4) startCol(5) -
    startCol(6) startCol(7) startCol(8) startCol(9) startCol(10)

end-procedure

!***********************************************************************
begin-procedure Process-Main
!
! This is the Main report procedure.
!***********************************************************************

  do display-progess('Format Time Period    ')
  do Build-Time-Period
  do display-progess('Get Establishment List')
  do Get-Establishment
  do display-progess('Retrieve EEO4 Data    ')
  do Build-EEO4-Data

#ifdef debugT
begin-SELECT
COUNT(*)   &R_PER031_CNT
  display '   Rows in workfile: ' noline
  display &R_PER031_CNT
FROM PS_R_PER031
end-SELECT
#end-if

  do display-progess('Evaluate EEO4 Data    ')
  do Eval-EEO4-Data
  do display-progess('Clear WorkTable       ')
  do Delete-Worktable
  do display-progess('Report End            ')

end-procedure

!***********************************************************************
begin-procedure Build-Time-Period
!
! Set the date for the Reporting Year 07/01 (Pre Yr) - 06/30 (Yr)
!***********************************************************************

  let $End_Date = $Thrudate
  let $Begin_Date = $Fromdate

! move $Fromdate to $Begin_CMP
! let $End_CMP = $End_CMP || '0630'
! do Format-DateTime($THRUDATE, $End_Date, {DEFMDY}, '', 'NATIVE')
! move #Calendar_Year to #Begin_Year
! subtract 1 from #Begin_Year
! do Format-Number(#Begin_Year, $Begin_CMP, '9999')
! let $Begin_CMP = $Begin_CMP || '0701'
! do Format-DateTime($FROMDATE, $Begin_Date, {DEFMDY}, '', 'NATIVE')

end-procedure

!***********************************************************************
begin-procedure Get-Establishment
!
! This procedure retrieve Organization's descriptive data from the
! PS_ESTAB_TBL database record.
!***********************************************************************

begin-SELECT
E.ESTABID,
E.DESCR,
E.ADDRESS1,
E.CITY,
E.STATE,
E.POSTAL

FROM  PS_ESTAB_TBL E
WHERE E.HQUNIT = 'Y'
  AND E.EFF_STATUS = 'A'
  AND E.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_ESTAB_TBL
       WHERE  ESTABID = E.ESTABID
         AND  EFFDT  <= $End_Date)

end-SELECT

  let $Address1 = rtrim(&E.Address1,' ')
  let $City    = rtrim(&E.City,' ')
  concat &E.State with $City ,bxxbb
  move &E.POSTAL  to $Postal
  concat $Postal  with $City

end-procedure

!***********************************************************************
begin-procedure Build-EEO4-Data
!
! This procedure gets the EEO data from various system tables and inserts
! the results into a working tbl(PS_R_PER031-see proc Insert-Worktable)
!***********************************************************************

  do display-progess('...Active Employees   ')

begin-SELECT
A.SEX,
ETH.ETHNIC_GROUP,
B.EFFDT,
B.JOBCODE,
B.DEPTID,
B.ANNUAL_RT,
B.FULL_PART_TIME,
B.REG_TEMP,
B.SETID_DEPT,
B.SETID_JOBCODE

  let $SetidDept    = RTRIM(&B.SETID_DEPT, ' ')
  let $SetidJobcode = RTRIM(&B.SETID_JOBCODE, ' ')
  move &A.Sex          to $Sex
  move &ETH.Ethnic_Group to $EthnicGroup
  do Analyze-Sex-EthnicGroup              !returns column # (1-10) in #EEOcol
  move &B.EffDt   to $EffDt
  move &B.JobCode to $JobCode
  move &B.DeptID  to $DeptID

  if  &B.Full_Part_Time = 'F' and !Full-Time
      &B.Reg_Temp = 'R'           !Regular

     if &B.Annual_Rt >= 100

        move 0 to #FPT
        do Analyze-Rate
        do Insert-Worktable
     end-if
  else

     move 1 to #FPT
     move 0 to #SalaryLevel
     do Insert-Worktable
  end-if

FROM  PS_PERSONAL_DT_FST A,
      PS_JOB B,
      PS_DIVERS_ETHNIC DVR,
      PS_ETHNIC_GRP_TBL ETH
WHERE A.EMPLID = B.EMPLID
  AND DVR.EMPLID = A.EMPLID
  AND B.PER_ORG = 'EMP'
  AND B.EFFDT =
      (SELECT MAX(H.EFFDT)
       FROM PS_JOB H
       WHERE H.EMPLID = B.EMPLID
!******************Begin Resolution - 574133********************
!         AND H.EMPL_RCD = B.EMPL_RCD
          AND B.EMPL_RCD = (SELECT MAX(H.EMPL_RCD)
                    FROM PS_JOB H
                    WHERE H.EMPLID = B.EMPLID
                    AND H.EFFDT = B.EFFDT)
!******************End Resolution   - 574133********************

         AND H.EFFDT <= $End_Date)
  AND B.EFFSEQ =
      (SELECT MAX(I.EFFSEQ)
       FROM PS_JOB I
       WHERE I.EMPLID = B.EMPLID
         AND I.EMPL_RCD = B.EMPL_RCD
         AND I.EFFDT = B.EFFDT)
  AND B.HR_STATUS = 'A'                      !HP99999
  AND DVR.PRIMARY_INDICATOR = 'Y' 
  AND DVR.SETID = ETH.SETID 
  AND DVR.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
  AND ETH.EFFDT = (SELECT MAX(E2.EFFDT) FROM PS_ETHNIC_GRP_TBL E2 
                  WHERE E2.SETID = ETH.SETID 
                  AND E2.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
                  AND E2.EFFDT <= $End_Date)
  AND ETH.ETHNIC_GROUP  <> '6'               !Not Applicable
  AND B.EEO_CLASS     <> 'E'                 !Exclude from counts

end-SELECT

  move 2 to #FPT  !New Hires
  move 0 to #SalaryLevel

  do display-progess('...Hires/Rehires      ')

begin-SELECT
C.SEX,
ETHC.ETHNIC_GROUP,
D.EFFDT,
D.JOBCODE,
D.DEPTID,
D.SETID_DEPT,
D.SETID_JOBCODE

  let $SetidDept    = RTRIM(&D.SETID_DEPT, ' ')
  let $SetidJobcode = RTRIM(&D.SETID_JOBCODE, ' ')
  move &C.Sex to $Sex
  move &ETHC.Ethnic_Group to $EthnicGroup
  do Analyze-Sex-EthnicGroup             !returns column #(1-10) in #EEOcol
  move &D.EffDt   to $EffDt
  move &D.JobCode to $JobCode
  move &D.DeptID  to $DeptID
  do Insert-Worktable

FROM  PS_PERSONAL_DT_FST C,
      PS_JOB D,
      PS_DIVERS_ETHNIC DVRC,
      PS_ETHNIC_GRP_TBL ETHC
WHERE D.EMPLID = C.EMPLID
  AND DVRC.EMPLID = C.EMPLID
  AND D.PER_ORG = 'EMP'
  AND D.HR_STATUS = 'A'                      !HP99999
  AND DVRC.PRIMARY_INDICATOR = 'Y' 
  AND DVRC.SETID = ETHC.SETID 
  AND DVRC.ETHNIC_GRP_CD = ETHC.ETHNIC_GRP_CD 
  AND ETHC.EFFDT = (SELECT MAX(ETHC2.EFFDT) FROM PS_ETHNIC_GRP_TBL ETHC2 
                  WHERE ETHC2.SETID = ETHC.SETID 
                  AND ETHC2.ETHNIC_GRP_CD = ETHC.ETHNIC_GRP_CD 
                  AND ETHC2.EFFDT <= $End_Date)
  AND ETHC.ETHNIC_GROUP  <> '6'              !Not Applicable
  AND D.EEO_CLASS     <> 'E'                 !Exclude from counts
  AND D.FULL_PART_TIME = 'F'
  AND D.REG_TEMP       = 'R'
  AND D.ACTION IN ('HIR','REH')
  AND D.EFFDT BETWEEN  $Begin_Date AND $End_Date
end-SELECT

end-procedure

!***********************************************************************
begin-procedure Eval-EEO4-Data
!
! Evaluate the entire group to determine if there are more 999 Full Time
! employees (Regular Processing) or Less then 999 (Special Processing)
!***********************************************************************

let $prtchk = 'F'          ! Print Check flag for type 3. heading
let #InitSw1 = 0
let #InitSw2 = 0
let $EEO4_FUNC1 = ''
let $EEO4_FUNC2 = ''
let $PROCESS_TYPE ='R'     !R - Regular / S - Special

  do display-progess('...Count Population   ')

begin-SELECT
COUNT(*)   &EmplCnt

   move &EmplCnt to #EmplCnt
   if #EmplCnt > 999
      let $EEO4_FUNC1 = ''
      do EEO4-Report
   else
      do Special-Process-EEO4-Data
   end-if

FROM  PS_R_PER031    F1,
      PS_JOBCODE_TBL G1,
      PS_DEPT_TBL    H1
WHERE F1.FPT  = '0000'     !Full Time employees only
  AND G1.SETID = F1.SETID_JOBCODE
  AND G1.JOBCODE = F1.JOBCODE
  AND G1.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_JOBCODE_TBL
       WHERE  SETID = G1.SETID
         AND JOBCODE = G1.JOBCODE
         AND  EFFDT  <= F1.EFFDT)
  AND G1.EEO4CODE <> 'N'
  AND H1.SETID = F1.SETID_DEPT
  AND H1.DEPTID = F1.DEPTID
  AND H1.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_DEPT_TBL
       WHERE  SETID = H1.SETID
         AND  DEPTID = H1.DEPTID
         AND  EFFDT <= F1.EFFDT)
  AND H1.EEO4_FUNCTION <> '99'
end-SELECT

end-procedure

!***********************************************************************
begin-procedure Special-Process-EEO4-Data
!
!  Separate the EEO4 Function group into those that contain 100 or more
!  Full time employees and those that are less then 100
!***********************************************************************

  do display-progess('...Process By Groups  ')

begin-SELECT
H2.EEO4_FUNCTION,
COUNT(*)    &FuncCnt

   move &FuncCnt to #FuncCnt
   if #FuncCnt > 99

      if #InitSw1 = 0
         let $EEO4_FUNC1 = '  AND  H.EEO4_FUNCTION IN (''' || &H2.EEO4_FUNCTION || ''''
         let #InitSw1 = 1
      else
         let $EEO4_FUNC1 = $EEO4_FUNC1 || ',''' || &H2.EEO4_FUNCTION || ''''
      end-if
   else

      if #InitSw2 = 0
         let $EEO4_FUNC2 = '  AND HS.EEO4_FUNCTION IN (''' || &H2.EEO4_FUNCTION || ''''
         let $EEO4_FUNCLIST = $EEO4_FUNCLIST || &H2.EEO4_FUNCTION
         let #InitSw2 = 1
      else
         let $EEO4_FUNC2 = $EEO4_FUNC2 || ',''' || &H2.EEO4_FUNCTION || ''''
         let $EEO4_FUNCLIST = $EEO4_FUNCLIST || ' ' || &H2.EEO4_FUNCTION
      end-if
   end-if

FROM  PS_R_PER031    F2,
      PS_JOBCODE_TBL G2,
      PS_DEPT_TBL    H2
WHERE F2.FPT  = '0000'     !Full Time employees oinly
  AND G2.SETID = F2.SETID_JOBCODE
  AND G2.JOBCODE = F2.JOBCODE
  AND G2.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_JOBCODE_TBL
       WHERE  SETID = G2.SETID
         AND JOBCODE = G2.JOBCODE
         AND  EFFDT  <= F2.EFFDT)
  AND G2.EEO4CODE <> 'N'
  AND H2.SETID = F2.SETID_DEPT
  AND H2.DEPTID = F2.DEPTID
  AND H2.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_DEPT_TBL
       WHERE  SETID = H2.SETID
         AND  DEPTID = H2.DEPTID
         AND  EFFDT <= F2.EFFDT)
  AND H2.EEO4_FUNCTION <> '99'
GROUP BY H2.EEO4_FUNCTION
ORDER BY H2.EEO4_FUNCTION
end-SELECT

   if #InitSw1 = 1
      let $EEO4_FUNC1 = $EEO4_FUNC1 || ')'
      let $PROCESS_TYPE ='R'
      do EEO4-Report
   end-if

   if #InitSw2 = 1
      if #InitSw1 = 1
        new-page
      end-if
      let $EEO4_FUNC2 = $EEO4_FUNC2 || ')'
      let $PROCESS_TYPE ='S'
      do EEO4-Report
   end-if

end-procedure

!***********************************************************************
begin-procedure Analyze-Rate
!
! Evaluate/analyze the salary rate or level.
!***********************************************************************

  move #maxSalaryLevel to #SalaryLevel
  while #SalaryLevel >= 0
    get #LowSal from Salary-Ranges(#SalaryLevel) LowSal
    if &B.Annual_Rt >= #LowSal
      break                              !exit the "while"
    end-if
    subtract 1 from #SalaryLevel
  end-while

end-procedure

!***********************************************************************
begin-procedure Insert-Worktable
!
! Insert temporary data into working table (PS_R_PER031).
!***********************************************************************

  do Format-Number(#FPT, $FPT, '0999')
  do Format-Number(#EEOCol, $EEOCol, '0999')
  do Format-Number(#SalaryLevel, $SalaryLevel, '0999')
  let $sql-statement = 'PER031.SQR,Insert-Worktable,Insert,PS_R_PER031'

begin-SQL On-Error=SQL-Error
INSERT INTO PS_R_PER031
(FPT,EEOCOL,SALARY_LEVEL,EFFDT,JOBCODE,DEPTID,SETID_DEPT,SETID_JOBCODE)
VALUES
($FPT,$EEOcol,$SalaryLevel,$EffDt,$JobCode,$DeptID,$SetidDept,$SetidJobcode)
end-SQL

end-procedure

!***********************************************************************
begin-procedure EEO4-Report
!***********************************************************************
! Create the report with break values on:
!  1. PS_DEPT_TBL.EEO4_FUNCTION  -  ON-BREAK EXECUTE PROC Function-Change
!  2. PS_R_PER031.FPT            -  ON-BREAK EXECUTE PROC FullPart-Change
!  3. PS_JOBCODE_TBL.EEO4CODE    -  ON-BREAK EXECUTE PROC JobCategory-Change
!  4. PS_R_PER031.SALARY_LEVEL   -  ON-BREAK EXECUTE PROC Level-Change
! ORDER BY EEO4_FUNCTION,FPT,EEO4CODE,SALARY_LEVEL,EEOCOL
!***********************************************************************

  do display-progess('Generate EEO4 Report  ')

if $PROCESS_TYPE = 'R'

begin-SELECT
H.EEO4_FUNCTION () on-break print=never level=1 procedure=Function-Change
F.FPT           () on-break print=never level=2 procedure=FullPart-Change
G.EEO4CODE      () on-break print=never level=3 procedure=JobCategory-Change
F.SALARY_LEVEL  () on-break print=never level=4 procedure=Level-Change
F.EEOCOL,COUNT(*) &EeCount

  if &H.EEO4_Function <> $Old_Function
    do Print-Job-Category
  end-if

  move &H.EEO4_Function to $Function
  move &H.EEO4_Function to $Old_Function
  move &F.FPT           to #FPT
  move &G.EEO4code      to #EEO4code
  move &F.Salary_Level  to #SalaryLevel
  move &F.EEOcol        to #EEOcol

  GET #startCol from TOTALS(0) STARTCOL(#EEOCOL)
  do Format-Number(&EeCount, $out, '999999')
  print $out (0,#startCol)
  ARRAY-ADD &EeCount to TOTALS(#FPT) COUNT(#EEOCOL)

  add &EeCount       to #Total

FROM  PS_R_PER031 F,
      PS_JOBCODE_TBL G,
      PS_DEPT_TBL H
WHERE G.JOBCODE = F.JOBCODE
  AND G.SETID = F.SETID_JOBCODE
  AND G.EEO4CODE <> 'N'                      !Not counted for EEO reporting
  AND G.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_JOBCODE_TBL
       WHERE  JOBCODE = G.JOBCODE
         AND SETID = G.SETID
         AND  EFFDT  <= F.EFFDT)
  AND H.DEPTID = F.DEPTID
  AND H.SETID = F.SETID_DEPT
  AND H.EEO4_FUNCTION <> '99'                !Not counted for EEO reporting
  AND H.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_DEPT_TBL
       WHERE  DEPTID = H.DEPTID
         AND SETID = H.SETID
         AND  EFFDT <= F.EFFDT)
#ifdef MVS
  \$EEO4_FUNC1\
#else
  [$EEO4_FUNC1]
#endif
GROUP BY EEO4_FUNCTION,FPT,EEO4CODE,SALARY_LEVEL,EEOCOL
ORDER BY EEO4_FUNCTION,FPT,EEO4CODE,SALARY_LEVEL,EEOCOL
end-SELECT

else

  let #prt_job_sw = 0

begin-SELECT
FS.FPT           () on-break print=never level=1 procedure=FullPart-Change
GS.EEO4CODE      () on-break print=never level=2 procedure=JobCategory-Change
FS.SALARY_LEVEL  () on-break print=never level=3 procedure=Level-Change
FS.EEOCOL,COUNT(*) &EeCountS

  if #prt_job_sw = 0
    do Print-Job-Category
    let #prt_job_sw = 1
  end-if

  move &FS.FPT           to #FPT
  move &GS.EEO4code      to #EEO4code
  move &FS.Salary_Level  to #SalaryLevel
  move &FS.EEOcol        to #EEOcol

  GET #startCol from TOTALS(0) STARTCOL(#EEOCOL)
  do Format-Number(&EeCountS, $out, '999999')
  print $out (0,#startCol)
  ARRAY-ADD &EeCountS to TOTALS(#FPT) COUNT(#EEOCOL)

  add &EeCountS       to #Total

FROM  PS_R_PER031 FS,
      PS_JOBCODE_TBL GS,
      PS_DEPT_TBL HS
WHERE GS.JOBCODE = FS.JOBCODE
  AND GS.SETID = FS.SETID_JOBCODE
  AND GS.EEO4CODE <> 'N'                      !Not counted for EEO reporting
  AND GS.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_JOBCODE_TBL
       WHERE  JOBCODE = GS.JOBCODE
         AND SETID = GS.SETID
         AND  EFFDT  <= FS.EFFDT)
  AND HS.DEPTID = FS.DEPTID
  AND HS.SETID = FS.SETID_DEPT
  AND HS.EEO4_FUNCTION <> '99'                !Not counted for EEO reporting
  AND HS.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_DEPT_TBL
       WHERE  DEPTID = HS.DEPTID
         AND SETID = HS.SETID
         AND  EFFDT <= FS.EFFDT)
#ifdef MVS
  \$EEO4_FUNC2\
#else
  [$EEO4_FUNC2]
#endif
GROUP BY FPT,EEO4CODE,SALARY_LEVEL,EEOCOL
ORDER BY FPT,EEO4CODE,SALARY_LEVEL,EEOCOL
end-SELECT

end-if

  do Level-Change
  move 3 to #Last
  do Print-Totals

end-procedure

!***********************************************************************
begin-procedure Function-Change
!
! Procedure executed when Function changes.
!***********************************************************************

  do Level-Change

  move 3 to #Last
  do Print-Totals                   !print remaining totals for prior Function

  new-page

  if $PROCESS_TYPE = 'R'
     move &H.EEO4_Function to $Function
     move &F.FPT to #Last
  else
     move $EEO4_FUNC2 to $Function
     move &FS.FPT to #Last
  end-if

  move 0 to #FPT
  do Print-Totals                  !when no FT and/or PT empls in Function

end-procedure

!***********************************************************************
begin-procedure FullPart-Change
!
! Procedure executed when change between Full Time and Part,
! within the same Function.
!***********************************************************************

  do Level-Change

  if $PROCESS_TYPE = 'R'
    move &F.FPT to #Last
  else
     move &FS.FPT to #Last
  end-if

  do Print-Totals
  do Print-Job-Category

end-procedure

!***********************************************************************
begin-procedure JobCategory-Change
!
! Procedure executed when there is a Job Category change within
! the same Function.
!***********************************************************************

  do Level-Change
  do Print-Job-Category

end-procedure

!***********************************************************************
begin-procedure Print-Job-Category
!
! Procedure to print info. for Job Category (data obtained from Xlat).
!***********************************************************************

  move 'EEO4CODE'  to $FieldName
  if $PROCESS_TYPE = 'R'
    move &G.EEO4code to $FieldValue
  else
    move &GS.EEO4code to $FieldValue
  end-if
  do Read-Translate-Table
  print $XlatShortName (+1,1,18)

  if $PROCESS_TYPE = 'R'
    move &F.FPT to #FPT
  else
    move &FS.FPT to #FPT
  end-if

  if #FPT = 0  !Full-Time
    print '$'          (0,20)
  end-if

end-procedure

!***********************************************************************
begin-procedure Level-Change
!
! Procedure executed when there is a Salary Level changes within
! the same Function.
!***********************************************************************

  if #FPT = 0                                  !Full-Time section

    move #EEO4code to #LINE_NUM
    subtract 1 from   #LINE_NUM
    multiply 8 times  #LINE_NUM
    add #SalaryLevel     to #LINE_NUM
    add 1          to #LINE_NUM

    get #LowSal #HighSal from Salary-Ranges(#SalaryLevel) LowSal HighSal
    divide 1000 into #LowSal
    divide 1000 into #HighSal
    do Format-Number(#LowSal, $out, '99.9')
    print $out    (0,21,5)

    if #HighSal = 0
      print ' Plus'  ()
    else
      print '-'      ()
      do Format-Number(#HighSal, $out, '99.9')
      print $out ()
    end-if
  else  !Part-Time and New Hires sections

    move #FPT to #i
    subtract 1 from #i
    get #LINE_NUM from Totals(#i) LINE_NUM
    add #EEO4code to #LINE_NUM
  end-if

  do Format-Number(#LINE_NUM, $out, '09')
  print $out       (0,15)

  get #startCol from Totals(0) startCol(0)
  do Format-Number(#Total, $out, '999999')
  print $out       (0,#startCol)

  array-add #Total to Totals(#FPT) Count(0)
  move 0 to #Total
  if #FPT = 0
    position (+1)
  end-if

end-procedure

!***********************************************************************
begin-procedure Print-Totals
!
! Procedure to print Totals (Full Time, Part Time, & new Hires).
!***********************************************************************

  while #FPT < #Last

    get $Lit1 $Lit2 #LINE_NUM from Totals(#FPT) TotalLit1 TotalLit2 LINE_NUM
    if #FPT = 0  !have already spaced forward with Level-Change
      print $Lit1  (+1,2)
    else
      if #FPT = 1
        print $Lit1  (+2,2)
      else
      end-if
    end-if
    print $Lit2  (+1,3,11)

    do Format-Number(#LINE_NUM, $out, '99')
    print $out (0,15)

    move 0 to #i
    while #i <= 10
      get #Count    from Totals(#FPT) Count(#i)
      get #startCol from Totals(0)    startCol(#i)
      do Format-Number(#Count, $out, '999999')
      print $out (0,#startCol)
      put 0 into Totals(#FPT) Count(#i)
      add 1 to #i
    end-while

    evaluate #FPT
      when = 0                              !Full-Time totals printed above
        position (+1)
        new-page
      when = 1                              !Part-Time totals printed above
        position (+1)
        new-page
      when = 2                              !New Hire totals printed above
                                            !Subheader for New Hire Totals is now printed
                                            !in the begin-heading section when #FPT = 3
        print 'List of Agencies in this Function' (+3,1)
        position (+1)
        do List-Agencies
        do Print-Footing
    end-evaluate

    add 1 to #FPT
  end-while

end-procedure

!***********************************************************************
begin-procedure List-Agencies
!
! Procedure to print the List of Agencies after print all Function info.
!***********************************************************************

if $PROCESS_TYPE = 'R'

  if RTRIM($Function, ' ') <> ''

begin-SELECT
M1.DEPTID   (+1,1)
M1.DESCR    (0,13)

FROM  PS_DEPT_TBL M1,
      PS_R_PER031 N1,
      PS_JOBCODE_TBL P1
WHERE M1.EEO4_FUNCTION   = $Function
  AND P1.JOBCODE     =  N1.JOBCODE
  AND P1.SETID       =  N1.SETID_JOBCODE
  AND P1.EEO4CODE   <> 'N'
  AND P1.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_JOBCODE_TBL
       WHERE  JOBCODE = P1.JOBCODE
         AND  SETID   = P1.SETID
         AND  EFFDT  <= N1.EFFDT)
  AND M1.DEPTID       =  N1.DEPTID
  AND M1.SETID        =  N1.SETID_DEPT
  AND M1.EEO4_FUNCTION <> '99'
  AND M1.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_DEPT_TBL
       WHERE  DEPTID  = M1.DEPTID
         AND SETID    = M1.SETID
         AND  EFFDT  <= N1.EFFDT)
GROUP BY M1.DESCR, M1.DEPTID
ORDER BY M1.DESCR, M1.DEPTID
end-SELECT

  end-if

else

  if RTRIM($EEO4_FUNC2, ' ') <> ''

    let #FuncLen = length($EEO4_FUNC2) - 25
    let $TmpFunc = substr($EEO4_FUNC2,26,#FuncLen)

begin-SELECT
M2.DEPTID   (+1,1,11)
M2.DESCR    (0,13)

FROM  PS_DEPT_TBL    M2,
      PS_R_PER031    N2,
      PS_JOBCODE_TBL P2
WHERE M2.EEO4_FUNCTION IN
#ifdef MVS
  \$TmpFunc\
#else
  [$TmpFunc]
#endif
  AND P2.JOBCODE     =  N2.JOBCODE
  AND P2.SETID       =  N2.SETID_JOBCODE
  AND P2.EEO4CODE   <> 'N'
  AND P2.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_JOBCODE_TBL
       WHERE  JOBCODE = P2.JOBCODE
         AND  SETID   = P2.SETID
         AND  EFFDT  <= N2.EFFDT)
  AND M2.DEPTID       = N2.DEPTID
  AND M2.SETID        = N2.SETID_DEPT
  AND M2.EEO4_FUNCTION <> '99'
  AND M2.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_DEPT_TBL
       WHERE  DEPTID  = M2.DEPTID
         AND SETID    = M2.SETID
         AND  EFFDT  <= N2.EFFDT)
GROUP BY M2.DESCR, M2.DEPTID
ORDER BY M2.DESCR, M2.DEPTID
end-SELECT

  end-if

end-if

end-procedure

!***********************************************************************
begin-procedure Print-Footing
!
! Procedure to print the Footing after printing all Function info.
!***********************************************************************


  print 'CERTIFICATION. I certify that the information given in this ' (+4,1,0)
!----Fix for 592323 Starts
!  print 'report is correct and true to the best of my knowledge and'   ()
!  print 'was reported in accordance with accompanying instructions. '  (+1,1,0)
!  print '(Willfully false statements on this report are punishable'    ()
!  print 'by law, U.S. Code, Title 18, Section 1001.)'                  (+1,1)
!  print 'Name of Contact Person: '  (+2,1,0)
!  print $ContactName                ()
!  print 'Title of Contact Person: ' (0,60,0)
!  print $ContactTitle               ()
!  print 'Address: '                 (+1,1,0)
!  print $Address1                   ()
!  print ', '                        ()
!  print $City                       ()
!  print 'Telephone:'        (0,68,0)
!  print $ContactPhone               ()
!  print 'Authorized Official: '     (+1,1)
!  print 'Name Typed: '              (+1,1,0)
!  print $OfficialName               ()
!  print 'Signature:'                (+1,1,78)
!  print 'Date:'                     (0,80)

  print 'report is correct and true to the best of my '   (, +16, 0)  
  print 'knowledge and was reported in accordance with accompanying instructions. '  (+1,1,0)
  print '(Willfully false statements on '     (, +18, 0)              
  print 'this report are punishable by law, U.S. Code, Title 18, Section 1001.)'   (+1,1) 
  print 'Name of Contact Person: '  (+2,1,0)
  print $ContactName                (, +3, 0)   
  print 'Title of Contact Person: ' (0,68,0)     
  print $ContactTitle               (, +3, 0)   
  print 'Address: '                 (+1,1,0)    
  print $Address1                   (, +3, 0)   
  print ', '                        (, +4, 0)   
  print $City                       (, +3, 0)   
  print 'Telephone:'                (0,68,0)    
  print $ContactPhone               (, +3, 0)   
  print 'Authorized Official: '     (+1,1)      
  print 'Name Typed: '              (+1,1,0)    
  print $OfficialName               (, +3, 0)   
  print 'Signature:'                (+1,1,78)
  print 'Date:'                     (0,68)      
!----Fix for 592323 Ends

end-procedure

!***********************************************************************
begin-procedure Delete-Worktable
!
! Procedure to Delete (clean-up) data from the working table (PS_R_PER031)
!***********************************************************************

  let $sql-statement = 'PER031.SQR,Delete-Worktable,Delete,PS_R_PER031'

begin-SQL On-Error=SQL-Error
{PTTRUNCATE} PS_R_PER031;
end-SQL

end-procedure

!********************************************
begin-procedure display-progess($dispmsg)
!********************************************

display $dispmsg noline
display ' (' noline
do get-current-datetime
display $_asofnow  noline
display ')'

end-procedure

!***********************************************************************

#include 'stdapi.sqc'    !Routine to Update Run status
#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askcalyr.sqc'  !Ask Calendar Year input

#Include 'eeogroup.sqc'  !Analyze-Sex-EthnicGroup procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers

!***********************************************************************
