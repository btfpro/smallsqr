! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
!  wfcont - busproc image upgrade                             *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
! This utility upgrades workflow definitions so that they use images   *
! from the content repository.  Unique names must be generated for the *
! new entries in the content defn table.                               *
!                                                                      *
! The utility should be run after the xxxxxx.SQL upgrade script.       *
!                                                                      *
!***********************************************************************

! Environment Include Files:

#include 'setenv.sqc'

#define C_ObjName       1
#define C_ObjType       30
#define C_CompName      35
#define C_CompType      65
#define C_NewCont       70

#define C_Unchanged 'Unchanged'

begin-setup
  declare-variable 
    integer  #comptype
    integer  #objtype
  end-declare
end-setup

!----------------------------------------------------------------------!
begin-report
!----------------------------------------------------------------------!


    do Begin-Transaction
    do Initialize
    do Add-Busproc-Images

    do Terminate

    if $run_mode = 'U'
        #debug show 'Commiting transaction...'
        do Commit-Transaction
    else
        #debug show 'Rolling back transaction...'
        do Rollback-Transaction
    end-if

    do Get-Current-DateTime
    show 'End Time: ' $AsOfToday ' ' $AsOfNow

end-report


#include 'setup01.sqc'

!----------------------------------------------------------------------!
begin-procedure Initialize
!----------------------------------------------------------------------!
    do Init-DateTime
    do Init-Number
    move 'wfcont' to $ReportID
    move 'Upgrade - workflow images' to $ReportTitle
    display $ReportTitle
    do Get-Current-DateTime
    do Create_Code_Arrays
    do Get-Operator-Input

    let $detail_mode = 'Y'
    let $rename_mode = 'Y'

    let $projectname = $ReportID
    ! do Create-Project ($projectname, 'upgrade workflow images', $ReportID)

    show ' '
    show 'Begin Time: ' $AsOfToday ' ' $AsOfNow

end-procedure

#include 'progtype.sqc'  !Build PCM progtype array

!----------------------------------------------------------------------!
begin-procedure Get-Operator-Input
!----------------------------------------------------------------------!

    input $run_mode 'Choose mode (R=Report-Only, U=Update)'
    let $run_mode = upper($run_mode)
    if $run_mode = 'U'
        let $run_text = 'Update'
        display 'Running in Update mode'
    else
        display 'Running in Report-Only mode.  No updates will be made.'
        let $run_text = 'Report-only (no updates)'
    end-if

end-procedure ! Get-Operator-Input

!----------------------------------------------------------------------!
begin-procedure Terminate
!----------------------------------------------------------------------!
    do Reset
end-procedure

!----------------------------------------------------------------------!
begin-heading 9
!----------------------------------------------------------------------!
   #include 'stdhdg01.sqc'

   print 'Report Mode: '        (5, 1)
   print $run_text              (5, 15)
   print 'Object Name'      (7, {C_ObjName})
   print 'Type'             (7, {C_ObjType})
   print 'Comp Name'        (7, {C_CompName})
   print 'Type'             (7, {C_CompType})
   print 'Content Name'     (7, {C_NewCont})
   print '--------------------' (8, {C_ObjName})
   print '----'                 (8, {C_ObjType})
   print '--------------------' (8, {C_CompName})
   print '----'                 (8,  {C_CompType})
   print '--------------------' (8, {C_NewCont})

end-heading

!----------------------------------------------------------------------
begin-procedure Add-Busproc-Images
!----------------------------------------------------------------------
!  This procedure inserts the images found in PSBUSPITEMIMG into
!  PSCONTDEFN.  The stumbling block can be creating a name for the 
!  image since it was only referenced by workflow keys in the past
!  and therefore did not have a unique name.
!----------------------------------------------------------------------

#debug show 'inserting business process images...'
let $busprocflag = 'Y'

BEGIN-SELECT ON-ERROR=SQL-ERROR
BP1.OBJNAME
BP1.OBJTYPE
BP1.COMPNAME
BP1.COMPTYPE
BP1.ITEM_IMAGE      &bpimage

        let $objname = upper(rtrim(&BP1.OBJNAME, ' '))
        let #objtype = &BP1.OBJTYPE
        let $compname = upper(rtrim(&BP1.COMPNAME, ' '))
        let #comptype = &BP1.COMPTYPE
        do Alter-ContName
        do Add-Cont-Defn

    FROM PSBUSPITEMIMG BP1
    ORDER BY BP1.OBJNAME, BP1.OBJTYPE

END-SELECT

let $busprocflag = 'N'

BEGIN-SELECT ON-ERROR=SQL-ERROR
VA1.OBJNAME
VA1.OBJNAME2
VA1.OBJTYPE
VA1.COMPNAME
VA1.COMPTYPE
VA1.ITEM_IMAGE      &vaimage

        let $objname = upper(rtrim(&VA1.OBJNAME, ' '))
        let #objtype = &VA1.OBJTYPE
        let $compname = upper(rtrim(&VA1.COMPNAME, ' '))
        let #comptype = &VA1.COMPTYPE
        do Alter-ContName
        do Add-Cont-Defn

    FROM PSVAITEMIMG VA1
    ORDER BY VA1.OBJNAME, VA1.OBJTYPE

END-SELECT


end-procedure ! Add-Busproc-Images

!----------------------------------------------------------------------
begin-procedure Alter-ContName
!----------------------------------------------------------------------
!  Compose new content name by adding a number designator to
!  end of new name.  If old name was already 30 characters, chop off last
!  one or two characters to make space for designator.
!  If new name is already in use, increment the number and try again.
!  NOTE: This handles up to 99 duplicate content names.
!----------------------------------------------------------------------

    let $contname_in_use = 'N'

    if length($objname) > 13
        let $objname = substr($objname, 1, 13)
    end-if
    if length($compname) > 13
        let $compname = substr($compname, 1, 13)
    end-if
    let $ContName =  'PT_' || $objname || '_' || $compname
   
    
    ! set the new name to be uppercase and free of blanks
    do Clean-Value($ContName, $NewContname)
     
    while 1
        do Check-Already-Used

        if $contname_in_use = 'N'
            break
        else
            let $endchar = to_char(#cnt)


            if length($ContName) < 30
                if #cnt < 10
                    let $NewContName = $ContName || $endchar
                else
                    let $NewContName = substr($ContName, 1, 28) || $endchar
                end-if
            else
                if #cnt < 10
                    let $NewContName = substr($ContName, 1, 29) || $endchar
                else
                    let $NewContName = substr($ContName, 1, 28) || $endchar
                end-if
            end-if

            if #cnt > 99
                show 'FATAL ERROR: More than 99 duplicates for panel group ' $ContName
                stop
            end-if

            let #cnt = #cnt + 1
        end-if

    end-while

    print $objname          (+1, {C_ObjName})
    print #objtype          (0, {C_ObjType})  
    print $compname         (0, {C_CompName})
    print #comptype         (0, {C_CompType}) 
    print $NewContName      (0, {C_NewCont})


  !  do Update-Contname

end-procedure



!----------------------------------------------------------------------
begin-procedure Check-Already-Used
!----------------------------------------------------------------------

BEGIN-SELECT ON-ERROR=SQL-ERROR

COUNT(*)      &M2.COUNT

    if &M2.COUNT > 0
        let $contname_in_use = 'Y'
        show 'content name already in use: ' $NewContName 
    else
        let $contname_in_use = 'N'
    end-if

FROM PSCONTDEFN M2
WHERE M2.CONTNAME = $NewContName
END-SELECT

end-procedure ! Check-Already-Used


!----------------------------------------------------------------------
begin-procedure Add-Cont-Defn
!----------------------------------------------------------------------

! we are either putting this into PSBUSPROCITEM or PSVAITEM
! but the image always goes into PSCONTDEFN the same way

if $busprocflag = 'Y'

    BEGIN-SQL ON-ERROR=SQL-ERROR

        UPDATE PSBUSPROCITEM
            SET CONTNAME = $NewContName
        WHERE
            OBJNAME = &BP1.OBJNAME AND OBJTYPE = &BP1.OBJTYPE AND 
            COMPNAME = &BP1.COMPNAME AND COMPTYPE = &BP1.COMPTYPE

    END-SQL
    BEGIN-SQL ON-ERROR=SQL-ERROR

        INSERT INTO PSCONTDEFN (
            CONTNAME,
            ALTCONTNUM,
            CONTFMT,
            VERSION,
            CONTTYPE,
            CONTSTYLE,
            DESCR,
            URL,
            COMPALG,
            LASTUPDDTTM,
            LASTUPDOPRID,
            CONTDATA)
        VALUES (
            $NewContName,
            1,
            'DIB',
            1,
            1,
            0,
            ' ',
            ' ',
            0,
            ' ',
            ' ',
            &bpimage)

    END-SQL
else 
    BEGIN-SQL ON-ERROR=SQL-ERROR

        UPDATE PSVAITEM
            SET CONTNAME = $NewContName
        WHERE
            OBJNAME = &VA1.OBJNAME AND OBJNAME2 = &VA1.OBJNAME2 AND 
            OBJTYPE = &VA1.OBJTYPE AND 
            COMPNAME = &VA1.COMPNAME AND COMPTYPE = &VA1.COMPTYPE

    END-SQL

    BEGIN-SQL ON-ERROR=SQL-ERROR

        INSERT INTO PSCONTDEFN (
            CONTNAME,
            ALTCONTNUM,
            CONTFMT,
            VERSION,
            CONTTYPE,
            CONTSTYLE,
            DESCR,
            URL,
            COMPALG,
            LASTUPDDTTM,
            LASTUPDOPRID,
            CONTDATA)
        VALUES (
            $NewContName,
            1,
            'DIB',
            1,
            1,
            0,
            ' ',
            ' ',
            0,
            ' ',
            ' ',
            &vaimage)

    END-SQL
end-if



end-procedure ! Add-Cont-Defn

!----------------------------------------------------------------------
begin-procedure Clean-Value($value, :$new_value)
!----------------------------------------------------------------------
!  This procedure upper cases the input value, converts spaces to
!  underscores (_), and removes &, %, ?, and * characters.
!----------------------------------------------------------------------

   let $new_value = ''
   let $temp = upper(rtrim($value,' '))
   let $value = $temp
   let #length = length($value)

   let #i = 1
   while #i <= #length
      let $single_byte = substr($value,#i,1)
      evaluate $single_byte
         when = '&'
            let $new_byte = ''
         when = '%'
            let $new_byte = ''
         when = '?'
            let $new_byte = ''
         when = '*'
            let $new_byte = ''
         when = ' '
            let $new_byte = '_'
         when-other
            let $new_byte = $single_byte
      end-evaluate
      let $new_value = $new_value || $new_byte
      add 1 to #i
   end-while

   if $new_value = ''
      let $new_value = 'BLANK'
      #debug show 'Blank panel group name reset to ' $new_value
   end-if

end-procedure

#Include 'reset.sqc'     !Reset printer procedure
#Include 'projapi.sqc'   ! Project Definition API
#Include 'prcsapi.sqc'   ! Process Scheduler API
#include 'curdttim.sqc'  ! Get-Current-DateTime procedure
#Include 'number.sqc'    !Routines to format numbers
#Include 'datetime.sqc'  ! Routines for date and time formatting
