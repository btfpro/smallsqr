!***********************************************************************
!  PI710.SQR:INTERFACE RECORD DEFINITION TABLE                         *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/08/25:15:03:43                        
!       $Release:  HR9                                        
!      $Revision:  102                                        
!                                                                      *
!***********************************************************************


#include 'setenv.sqc'  !Set environment
#include 'setup32.sqc' !Printer and page-size initialization


begin-report

  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


!**************************
begin-procedure Init-Report
!**************************

  move 'PI710' to $ReportID
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  do Get-Report-Language

  move $Pi710_ReportTitle to $ReportTitle
  display ' '
  display $ReportTitle
  display ' '

end-procedure


! This procedure is used to read language-dependent text from the database.
!*********************************
begin-procedure Report-Translation
!*********************************

! Read from PI710 program ids
do Init_Report_Translation($ReportID,$Language_Cd)

  do Get_Field_Information ('PI710', 'REPORT_TITLE', $Pi710_ReportTitle, #dummy_width)
  do Get_Field_Information ('PI710', 'FILEID', $Pi710_FileId, #dummy_width)
  do Get_Field_Information ('PI710', 'FILEDESCR', $Pi710_FileDescr, #dummy_width)
  do Get_Field_Information ('PI710', 'EFFDT', $Pi710_EffDt, #dummy_width)
  do Get_Field_Information ('PI710', 'RECORD_SEQ_ID1', $Pi710_RecordSeqId1, #dummy_width)
  do Get_Field_Information ('PI710', 'RECORD_SEQ_ID2', $Pi710_RecordSeqId2, #dummy_width)
  do Get_Field_Information ('PI710', 'RECORD_SEQ_ID3', $Pi710_RecordSeqId3, #dummy_width)
  do Get_Field_Information ('PI710', 'RECORD_DESCR', $Pi710_RecordDescr, #dummy_width)
  do Get_Field_Information ('PI710', 'RECORD_TYPE_OCC1', $Pi710_RecordTypeOcc1, #dummy_width)
  do Get_Field_Information ('PI710', 'RECORD_TYPE_OCC2', $Pi710_RecordTypeOcc2, #dummy_width)
  do Get_Field_Information ('PI710', 'RECORD_TYPE_OCC3', $Pi710_RecordTypeOcc3, #dummy_width)
  do Get_Field_Information ('PI710', 'PRIMARY_PS_REC', $Pi710_Primary_PS_Rec, #dummy_width)
  do Get_Field_Information ('PI710', 'INSTID', $Pi710_InstId, #dummy_width)
  do Get_Field_Information ('PI710', 'PROCID', $Pi710_ProcId, #dummy_width)
  do Get_Field_Information ('PI710', 'PROC_DESCR', $Pi710_ProcDescr, #dummy_width)
  do Get_Field_Information ('PI710', 'RECORD_TERM1', $Pi710_RecordTerm, #dummy_width)
  do Get_Field_Information ('PI710', 'RECORD_TERM2', $Pi710_RecordTermVal, #dummy_width)
  do Get_Field_Information ('PI710', 'RECORD_TERM3', $Pi710_RecordTermLen, #dummy_width)
  do Get_Field_Information ('PI710', 'PI_PROCESS_PHASE', $Pi710_PiProcessPhase, #dummy_width)
  do Get_Field_Information ('PI710', 'REC_PROCESS', $Pi710_RecProcess, #dummy_width)
  do Get_Field_Information ('PI710', 'PI_BASE_REC_SEQ1', $Pi710_BaseRecSeq1, #dummy_width)
  do Get_Field_Information ('PI710', 'PI_BASE_REC_SEQ2', $Pi710_BaseRecSeq2, #dummy_width)


end-procedure


begin-heading 7
#Include 'stdhdgtr.sqc'

  print $Pi710_RecordSeqId1   (6,37,46)
  print $Pi710_RecordTypeOcc1 (,85,44)
  print $Pi710_RecProcess     (,131,23)
  print $Pi710_RecordTerm     (,156,15)
  print $Pi710_BaseRecSeq1    (,174,4)
  print $Pi710_FileId         (7,1,9)
  print $Pi710_FileDescr      (,11,12)
  print $Pi710_EffDt          (,25,10)
  print $Pi710_RecordSeqId2   (,37,6)
  print $Pi710_RecordSeqId3   (,45,6)
  print $Pi710_RecordDescr    (,53,30)
  print $Pi710_RecordTypeOcc2 (,85,6)
  print $Pi710_RecordTypeOcc3 (,93,6)
  print $Pi710_Primary_PS_Rec (,101,20)
  print $Pi710_InstId         (,123,7)
  print $Pi710_ProcId         (,131,6)
  print $Pi710_PiProcessPhase (,138,5)
  print $Pi710_ProcDescr      (,144,10)
  print $Pi710_RecordTermVal  (,156,7)
  print $Pi710_RecordTermLen  (,163,6)
  print $Pi710_BaseRecSeq2    (,174,3)

end-HEADING


!****************************
begin-procedure Process-Main
!****************************

begin-SELECT

A.PI_FILE_ID                 (+1,1,9)
B.DESCRSHORT
A.EFFDT
    do Format-DateTime(&A.EFFDT, $out, {DEFDATE}, '', '')
    print $out               (,25,10)
A.PI_RECORD_SEQ              (,37,6)
A.PI_RECORD_ID               (,45,6)
A.DESCR
A.PI_RECORD_TYPE             (,85,6)
A.REC_OCCUR_IND              (,93,6)
A.PRIMARY_PS_REC             (,101,20)
A.PI_INSTANCE_ID             (,123,7)
A.REC_TERM_VAL               (,156,7)
A.REC_TERM_LEN

  let $prnt_b_descrshort      = &B.DESCRSHORT
  let $prnt_a_descr           = &A.DESCR
  let $basedate               = &A.EFFDT

!---------------------------------------------------------------!
! Only retrieve data from the related language table if         !
! the operator language is not the same to the installation     !
! language or $curr_language_cd  is different from $language_cd !
!---------------------------------------------------------------!

  if $Curr_language_cd <> $Psoptions_language_cd
     do Get-Rel-Lang-Descr
  end-if

  PRINT $PRNT_B_DESCRSHORT          (,11,12)
  PRINT $PRNT_A_DESCR               (,53,30)

  if &A.REC_TERM_LEN > 0
     print &A.REC_TERM_LEN           (,163,5)
  end-if

A.PI_BASE_REC_SEQ

  if &A.PI_BASE_REC_SEQ > 0
     print &A.PI_BASE_REC_SEQ        (,174,3)
  end-if

B.PI_PROCESS_TYPE
A.PI_PROCESS_ID                      (,131,6)
  do Get-Process-Name


FROM PS_PI_DEFN_RECORD A, PS_PI_DEFN_FILE B
WHERE A.PI_FILE_ID = B.PI_FILE_ID AND A.EFFDT = B.EFFDT
ORDER BY A.PI_FILE_ID, A.EFFDT DESC, A.PI_RECORD_SEQ

end-SELECT

end-procedure


!**********************************
begin-procedure Get-Rel-Lang-Descr
!**********************************

begin-SELECT

BL.DESCRSHORT
AL.DESCR

  let $prnt_b_descrshort = &BL.DESCRSHORT
  let $prnt_a_descr      = &AL.DESCR

FROM PS_PI_DEFN_R_LANG AL, PS_PI_DEFN_F_LANG BL
WHERE AL.PI_FILE_ID  = &A.PI_FILE_ID
  AND AL.PI_FILE_ID  = BL.PI_FILE_ID
  AND AL.PI_RECORD_SEQ   = &A.PI_RECORD_SEQ
  AND AL.LANGUAGE_CD = $Curr_language_cd
  AND BL.LANGUAGE_CD = $Curr_language_cd
  AND AL.EFFDT       =
      (SELECT MAX(EFFDT)
       FROM PS_PI_DEFN_R_LANG
       WHERE PI_FILE_ID  = AL.PI_FILE_ID
         AND LANGUAGE_CD = AL.LANGUAGE_CD
         AND EFFDT      <= $Basedate)
  AND AL.EFFDT       = BL.EFFDT


end-SELECT

end-procedure


!*******************************
begin-procedure Get-Process-Name
!*******************************

let #row = 1

begin-SELECT

C.PI_PROCESS_PHASE
C.DESCRSHORT

  let $prnt_descrshort = &C.DESCRSHORT

!---------------------------------------------------------------!
! Only retrieve data from the related language table if         !
! the operator language is not the same to the installation     !
! language or $curr_language_cd  is different from $language_cd !
!---------------------------------------------------------------!

  if $Curr_language_cd <> $Psoptions_language_cd
     do Get-Rel-Lang-Pi710
  end-if

  if #row = 1
      print &C.PI_PROCESS_PHASE  (,139,3)
      print $prnt_descrshort     (,144,10)
  else
      print &C.PI_PROCESS_PHASE  (+1,139,4)
      print $prnt_descrshort     (,144,10)
  end-if

  let #row = #row + 1


FROM  PS_PI_PROCESS_TBL C
WHERE C.PI_PROCESS_ID = &A.PI_PROCESS_ID
 AND  C.PRCS_TYPE = 'R'
 AND (
         (&B.PI_PROCESS_TYPE = 'I' AND C.PI_PROCESS_PHASE = 'I')
      OR (&B.PI_PROCESS_TYPE = 'E' AND C.PI_PROCESS_PHASE IN ('C','E','I'))
     )

end-SELECT

end-procedure Get-Process-Name


!*********************************
begin-procedure Get-Rel-Lang-Pi710
!*********************************

begin-SELECT

CL.DESCRSHORT

    let $prnt_descrshort = Cond(RTRIM(&CL.DESCRSHORT,' ')='', &C.DESCRSHORT, &CL.DESCRSHORT)

FROM   PS_PI_PROC_TB_LANG CL, PS_PI_PROCESS_TBL C1
WHERE  CL.PI_PROCESS_ID    = &A.PI_PROCESS_ID
 AND   CL.PI_PROCESS_PHASE = &C.PI_PROCESS_PHASE
 AND   CL.LANGUAGE_CD      = $Curr_language_cd
 AND   CL.PI_PROCESS_ID    = C1.PI_PROCESS_ID
 AND   C1.PRCS_TYPE        = 'R'
 AND   C1.PI_PROCESS_PHASE = CL.PI_PROCESS_PHASE
! AND (
!         (&B.PI_PROCESS_TYPE = 'I' AND C1.PI_PROCESS_PHASE = 'I')
!      OR (&B.PI_PROCESS_TYPE = 'E' AND C1.PI_PROCESS_PHASE IN ('C','E','I'))
!     )


end-SELECT

end-procedure



#Include 'reset.sqc'     !Reset printer procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'sqrtrans.sqc'  !Translate SQR strings to a given language
#Include 'getrplng.sqc'  !Gets the report language

