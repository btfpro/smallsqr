!***********************************************************************
!  ABS007NL:  Wet Poortwachter - Longterm Illnesses                    *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2006/08/29:09:23:36                                 !
!       $Release:  HR9                                                 !
!      $Revision:  102                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
Begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

begin-report

  let #minimum-weeks = 4  !report on illness of duration of at least 4 weeks

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


begin-heading 7
  do Get_Field_Information ('ABS007NL', 'REPORT_TITLE',    $REPORTTITLE,   #DW)
  #Include 'stdhdgtr.sqc'

  print $DURATION_LBL                    (+2,2,12)
  print $NAME_LBL                        (0,15,30)
  print $EMPLID_LBL                      (0,47,12)
  print $DEPTNAME_LBL                    (0,60,12)
  print $ORIG_BEGIN_DT_LBL               (0,75,15)
  print $ABSENCE_TYPE_LBL                (0,90,18)
  print $WEEKS_LBL                       (+1,2,12)
  print $FISCAL_NBR_LBL                  (0,15,30)
  print $DEPTID_LBL                      (0,60,12)
  print $REASON_LBL                      (0,90,18)
  print $BIRTHDATE_LBL                   (+1,15,32)
  print $ACTION_DT_LBL                   (0,75,15)
  print $ACTION_LBL                      (0,90,28)
  print $ACTION_STATUS_LBL               (0,120,10)

end-heading

begin-procedure Init-Report

  move 'ABS007NL' to $ReportID
  move 'Longterm Illness Report' to $ReportTitle
  display $ReportTitle

  do Stdapi-Init

  if $prcs_process_instance = ''
    do Ask-Company-code
  else
    do Select-Parameters
  end-if
do Init_Report_Translation ('ABS007NL', $language_cd)
do Get_Field_Information ('ABS007NL', 'DURATION_ABS',    $DURATION_LBL,   #DW)
do Get_Field_Information ('ABS007NL', 'NAME',            $NAME_LBL,   #DW)
do Get_Field_Information ('ABS007NL', 'EMPLID',          $EMPLID_LBL,   #DW)
do Get_Field_Information ('ABS007NL', 'DEPTID',          $DEPTID_LBL,   #DW)
do Get_Field_Information ('ABS007NL', 'DEPTNAME',        $DEPTNAME_LBL,   #DW)
do Get_Field_Information ('ABS007NL', 'ORIG_BEGIN_DT',   $ORIG_BEGIN_DT_LBL, #DW)
do Get_Field_Information ('ABS007NL', 'ABSENCE_TYPE',    $ABSENCE_TYPE_LBL,   #DW)
do Get_Field_Information ('ABS007NL', 'WEEKS',           $WEEKS_LBL,   #DW)
do Get_Field_Information ('ABS007NL', 'FISCAL_NBR',      $FISCAL_NBR_LBL,   #DW)
do Get_Field_Information ('ABS007NL', 'REASON',          $REASON_LBL,   #DW)
do Get_Field_Information ('ABS007NL', 'BIRTHDATE',       $BIRTHDATE_LBL,   #DW)
do Get_Field_Information ('ABS007NL', 'ACTION',          $ACTION_LBL,   #DW)
do Get_Field_Information ('ABS007NL', 'ACTION_DT',       $ACTION_DT_LBL,   #DW)
do Get_Field_Information ('ABS007NL', 'ACTION_STATUS',   $ACTION_STATUS_LBL,   #DW)

end-procedure

begin-procedure Get-Values
   let $language_cd = $PRCS_LANGUAGE_CD
   do Get-Company-Code
end-procedure


!***********************************************************************
begin-procedure Process-Main
!***********************************************************************

Begin-SELECT
I.INSTALLED_GP_NLD
FROM PS_INSTALLATION I
End-SELECT

if &I.INSTALLED_GP_NLD = 'Y'
   do Get-GP-Absence-Data
else
   do Get-HR-Absence-Data
end-if

end-procedure Process-Main


!***********************************************************************
begin-procedure Get-HR-Absence-Data
!***********************************************************************

Begin-SELECT
HRA.EMPLID
    let $EMPLID = &HRA.EMPLID
HRA.EMPL_RCD
    let #EMPL_RCD = &HRA.EMPL_RCD
HRA.BEGIN_DT
    let $BEGIN_DT = &HRA.BEGIN_DT      
HRA.RETURN_DT
    let $RETURN_DT = &HRA.RETURN_DT      
HRA.ABSENCE_TYPE
    let #ORIG_EMPL_RCD_BEL = &HRA.EMPL_RCD
    let $ORIG_BEGIN_DT = &HRA.BEGIN_DT
    let $ORIG_ABS_TYPE_BEL = &HRA.ABSENCE_TYPE
HRA.REASON
    let $reason = &HRA.REASON
HRJOB.DEPTID   
HRJOB.SETID_DEPT
    let $DeptID = &HRJOB.DEPTID
    let $SetID_Dept = &HRJOB.SETID_DEPT
TYP.DESCRSHORT
    let $AbsType = &TYP.DESCRSHORT

    do Convert-To-DTU-Date(&HRA.BEGIN_DT,$ORIG-BEGIN-DT-DTU)
    let $Open-Illness = 'N'
    if &HRA.RETURN_DT <> ''
      do HR-Find-Open-Recurrence
    else
      let $Open-Illness = 'Y'
    end-if


    if $Open-Illness = 'Y'
      do Convert-To-DTU-Date(&HRA.BEGIN_DT,$BEGIN-DT-DTU)
      do Convert-To-DTU-Date($SysDateTime, $SYSTEM-DT-DTU)

      do dtu-diff-days($BEGIN-DT-DTU,$SYSTEM-DT-DTU,#ILLNESS-DAYS)

      move '1' to $Year4
      move '-' to $DDelimiter
      do Format-DateTime(&HRA.BEGIN_DT, $ORIG-BEGIN-DT-DMY, {DEFDMY}, '', '')

      let #ILLNESS-WEEKS = #ILLNESS-DAYS / 7

      if #ILLNESS-WEEKS >= #minimum-weeks
        do Process-Employee-Record
      end-if

    end-if

FROM    PS_ABSENCE_HIST HRA,
        PS_JOB HRJOB,
        PS_ABS_TYPE_TBL TYP

        WHERE HRA.BEGIN_DT <= $AsOfToday
        AND HRA.ABS_RECURRENCE = 'N'
        AND HRJOB.EMPLID = HRA.EMPLID
        AND HRJOB.EMPL_RCD = HRA.EMPL_RCD
        AND HRJOB.EFFDT = (SELECT MAX(EFFDT)
                       FROM PS_JOB
                       WHERE EMPLID = HRJOB.EMPLID AND EMPL_RCD = HRJOB.EMPL_RCD
                       AND EFFDT <= $AsOfToday)
        AND HRJOB.EFFSEQ = (SELECT MAX(EFFSEQ)
                       FROM PS_JOB
                       WHERE EMPLID = HRJOB.EMPLID AND EMPL_RCD = HRJOB.EMPL_RCD AND EFFDT = HRJOB.EFFDT)
        AND HRJOB.REG_REGION IN (SELECT REG.REG_REGION
                       FROM PS_REG_REGION_TBL REG
                       WHERE REG.COUNTRY = 'NLD')
        AND ($Company_Code = 'ALL' OR HRJOB.COMPANY = $Company_Code)
        AND TYP.ABSENCE_TYPE=HRA.ABSENCE_TYPE
        AND TYP.SETID = (SELECT SETID
              FROM PS_SET_CNTRL_REC
              WHERE SETCNTRLVALUE = HRJOB.REG_REGION
              AND  RECNAME = 'ABS_TYPE_TBL')
ORDER BY HRA.BEGIN_DT ASC, HRA.EMPLID

End-SELECT

end-procedure Get-HR-Absence-Data


!***********************************************************************
begin-procedure HR-Find-Open-Recurrence
!***********************************************************************

Begin-SELECT
HRA2.EMPL_RCD
HRA2.BEGIN_DT      
HRA2.RETURN_DT
HRA2.ABSENCE_TYPE
HRA2.ABS_RECURRENCE

    let #ORIG_EMPL_RCD_BEL = &HRA2.EMPL_RCD
    let $ORIG_BEGIN_DT = &HRA2.BEGIN_DT
    let $ORIG_ABS_TYPE_BEL = &HRA2.ABSENCE_TYPE
    if &HRA2.RETURN_DT <> ''
      do HR-Find-Open-Recurrence
    else
      let $Open-Illness = 'Y'
    end-if

FROM  PS_ABSENCE_HIST HRA2
WHERE HRA2.ABS_RECURRENCE = 'Y'
  AND HRA2.EMPLID = $EMPLID
  AND HRA2.ORIG_EMPL_RCD_BEL = #ORIG_EMPL_RCD_BEL
  AND HRA2.ORIG_BEGIN_DT_BEL = $ORIG_BEGIN_DT
  AND HRA2.ORIG_ABS_TYPE_BEL = $ORIG_ABS_TYPE_BEL

End-SELECT

end-procedure HR-Find-Open-Recurrence



!***********************************************************************
begin-procedure Get-GP-Absence-Data
!***********************************************************************

Begin-SELECT
GPA.EMPLID
    let $EMPLID = &GPA.EMPLID
GPA.EMPL_RCD
    let #EMPL_RCD = &GPA.EMPL_RCD
GPA.BGN_DT
    let $BEGIN_DT = &GPA.BGN_DT   
GPNLABS.GPNL_ACT_RTRN_DT
    let $RETURN_DT = &GPNLABS.GPNL_ACT_RTRN_DT      
GPA.ORIG_BEGIN_DT
    let $ORIG_BEGIN_DT = &GPA.ORIG_BEGIN_DT
GPA.ABSENCE_REASON
    let $reason = &GPA.ABSENCE_REASON
GPJOB.DEPTID   
GPJOB.SETID_DEPT
    let $DeptID = &GPJOB.DEPTID
    let $SetID_Dept = &GPJOB.SETID_DEPT
PIN.PIN_NM
    let $AbsType = &PIN.PIN_NM

    if &GPA.ORIG_BEGIN_DT <> ''
       do Convert-To-DTU-Date(&GPA.ORIG_BEGIN_DT,$BEGIN-DT-DTU)
    else
       let $ORIG_BEGIN_DT = &GPA.BGN_DT
       do Convert-To-DTU-Date(&GPA.BGN_DT,$BEGIN-DT-DTU)
    end-if
    do Convert-To-DTU-Date($SysDateTime, $SYSTEM-DT-DTU)

    do dtu-diff-days($BEGIN-DT-DTU,$SYSTEM-DT-DTU,#ILLNESS-DAYS)

    move '1' to $Year4
    move '-' to $DDelimiter
    do Format-DateTime(&GPA.ORIG_BEGIN_DT, $ORIG-BEGIN-DT-DMY, {DEFDMY}, '', '')

    let #ILLNESS-WEEKS = (#ILLNESS-DAYS + 1) / 7

    if #ILLNESS-WEEKS >= #minimum-weeks
      do Process-Employee-Record
    end-if


FROM    PS_GP_ABS_EVENT GPA,
        PS_JOB GPJOB,
        PS_GP_PIN PIN,
        PS_GPNL_ABS_EVENT GPNLABS

        WHERE PIN.PIN_TYPE = 'AT'
        AND PIN.COUNTRY = 'NLD'
        AND PIN.PIN_NUM = GPA.PIN_TAKE_NUM
        AND GPA.BGN_DT <= $AsOfToday
        AND GPNLABS.EMPLID = GPA.EMPLID
        AND GPNLABS.EMPL_RCD = GPA.EMPL_RCD 
        AND GPNLABS.BGN_DT = GPA.BGN_DT
        AND GPNLABS.PIN_TAKE_NUM = PIN.PIN_NUM
        AND GPNLABS.END_DT = GPA.END_DT
        AND (GPNLABS.GPNL_ACT_RTRN_DT IS NULL OR GPNLABS.GPNL_ACT_RTRN_DT > $AsOfToday)
        AND GPJOB.EMPLID = GPA.EMPLID
        AND GPJOB.EMPL_RCD = GPA.EMPL_RCD
        AND GPJOB.EFFDT = (SELECT MAX(EFFDT)
                       FROM PS_JOB
                       WHERE EMPLID = GPJOB.EMPLID AND EMPL_RCD = GPJOB.EMPL_RCD
                       AND EFFDT <= $AsOfToday)
        AND GPJOB.EFFSEQ = (SELECT MAX(EFFSEQ)
                       FROM PS_JOB
                       WHERE EMPLID = GPJOB.EMPLID AND EMPL_RCD = GPJOB.EMPL_RCD AND EFFDT = GPJOB.EFFDT)
        AND ($Company_Code = 'ALL' OR GPJOB.COMPANY = $Company_Code)
ORDER BY GPA.ORIG_BEGIN_DT ASC, GPA.EMPLID

End-SELECT

end-procedure Get-GP-Absence-Data


!***********************************************************************
begin-procedure Process-Employee-Record
!***********************************************************************

      do Get-Dept-Name
      do Get-Personal-Data
      do Get-National-ID
      do Get-Action-List
      do Print-Report

end-procedure Process-Employee-Record


!***********************************************************************
begin-procedure Get-Dept-Name
!***********************************************************************

#define DEPT_TBL

begin-SELECT
DEPT.DESCRSHORT
DEPT.EFFDT

     let $DEPT_TBL-DESCRSHORT = &DEPT.DESCRSHORT
     do Get_Related_DEPT_TBL($DeptID, &DEPT.EFFDT, $SetID_Dept)

FROM  PS_DEPT_TBL DEPT
WHERE DEPT.SETID = $SetID_Dept
  AND DEPT.DEPTID = $DeptID
  AND DEPT.EFFDT = (SELECT MAX(EFFDT) FROM PS_DEPT_TBL
                    WHERE SETID = DEPT.SETID AND DEPTID = DEPT.DEPTID)

end-SELECT

end-procedure Get-Dept-Name


!***********************************************************************
begin-procedure Get-Personal-Data
!***********************************************************************

Begin-SELECT
PERS.BIRTHDATE
NAMES.NAME      
   move '1' to $Year4
   move '-' to $DDelimiter
   do Format-DateTime(&PERS.birthdate, $Birthdate, {DEFDMY}, '', '')
   let $Name = &NAMES.NAME

FROM    PS_PERSON PERS, PS_PERSON_NAME NAMES
WHERE   PERS.EMPLID = $EMPLID
  AND   NAMES.EMPLID = $EMPLID

End-SELECT

end-procedure Get-Personal-Data


!***********************************************************************
begin-procedure Get-Action-List
!***********************************************************************

#define CHKLST_ITEM_TBL

   let $ActionDate = ''
   let $ActionStatus = ''
   let $CHKLST_ITEM_TBL-DESCR = ''

Begin-SELECT
CHK.STATUS_DT
CHK.CHKLST_ITEM_CD
CHK.BRIEFING_STATUS
ITM.DESCR
ITM.EFFDT
   move '1' to $Year4
   move '-' to $DDelimiter
   do Format-DateTime(&CHK.STATUS_DT, $ActionDate, {DEFDMY}, '', '')

   let $CHKLST_ITEM_TBL-DESCR = &ITM.DESCR

   let $FieldName = 'BRIEFING_STATUS'
   let $FieldValue = &CHK.BRIEFING_STATUS
   do Read-Translate-Table
   let $ActionStatus = $XlatShortName

   do Get_Related_CHKLST_ITEM_TBL(&CHK.CHKLST_ITEM_CD, &ITM.EFFDT)
   

FROM  PS_EMPL_CHKLST_ITM CHK, PS_CHKLST_ITEM_TBL ITM
WHERE CHK.EMPLID = $EMPLID
  AND CHK.CHKLST_ITEM_CD IN
      (SELECT CHKLST_ITEM_CD FROM PS_CHECKLIST_ITEM WHERE CHECKLIST_CD = 'NLDABS')
  AND CHK.STATUS_DT > $ORIG_BEGIN_DT
  AND CHK.STATUS_DT = (SELECT MAX(STATUS_DT)
      FROM PS_EMPL_CHKLST_ITM
      WHERE EMPLID = CHK.EMPLID AND CHKLST_ITEM_CD IN
       (SELECT CHKLST_ITEM_CD FROM PS_CHECKLIST_ITEM WHERE CHECKLIST_CD = 'NLDABS'))
  AND ITM.CHKLST_ITEM_CD = CHK.CHKLST_ITEM_CD
  AND ITM.EFFDT = (SELECT MAX(EFFDT)
      FROM PS_CHKLST_ITEM_TBL
      WHERE CHKLST_ITEM_CD = ITM.CHKLST_ITEM_CD)

End-SELECT

end-procedure Get-Action-List

!***********************************************************************
begin-procedure Print-Report
!***********************************************************************

      graphic                    (+1,1,132) horz-line

      print #ILLNESS-WEEKS       (+2,5,3) edit 999
      print $Name                (0,15,32)
      print $EMPLID              (0,47,12)
      print $DEPT_TBL-DESCRSHORT (0,60,12)
      print $ORIG-BEGIN-DT-DMY   (0,75,10)
      print $AbsType             (0,90,14)
      print $national_id         (+1,15,32)
      print $DEPTID              (0,60,12)
      print $reason              (0,90,30)
      print $Birthdate           (+1,15,10)
      print $ActionDate          (0,75,10)
      print $CHKLST_ITEM_TBL-DESCR   (0,90,28)
      print $ActionStatus        (0,120,10)


end-procedure Print-Report


!********************************************************************
! Retrieve the Social Security Number for The Netherlands
!********************************************************************
begin-procedure Get-National-ID

let $national_id = ''

begin-select
ND.NATIONAL_ID
   let $national_id = &ND.national_id

from PS_PERS_NID ND
where ND.EMPLID = $emplid
  and ND.COUNTRY = 'NLD'
  and ND.NATIONAL_ID_TYPE = 'PR'
end-select

end-procedure Get-National-ID



#include 'stdapi.sqc'    !Routine to update run status
#include 'hrctlnld.sqc'  !Get NL run control parameter values
#include 'hrgetnld.sqc'  !Get NL values mask routines
#include 'askcmpcd.sqc'  !Get Company input

#Include 'readxlat.sqc'  !Read Translate Table procedure
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'sqrtrans.sqc'
#Include 'rellang.sqc'
