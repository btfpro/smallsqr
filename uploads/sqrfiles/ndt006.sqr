!*********************************************************
!  NDT006:  Section 129 - 55% Average Benefits Test      *
!*********************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:09:16:38                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
!
!                   55% Average Benefits Test
!
! This is the second report in the Section 129 Nondiscrimination Testing.
!
! The SQR NDT001 and SQR NDT005 must have been run prior to this report
! and the on-line run control set with the desired options.
!***************************************************************************

#include 'setenv.sqc'    !Set environment

Begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

!#define debugD  YES

#define  CURRENT_YEAR   C

!************************************************
begin-program
!************************************************

  do Init-Report

  display 'Program Began at: ' NoLine
  do Display-Time

  do Main-Report

  display 'Program Ended at: ' noline
  do Display-Time

  do StdAPI-Term

end-program


!************************************************
begin-procedure Init-Report
!************************************************

  do Init-DateTime
  do Get-Current-DateTime

  do Check-Run-Control

  move 'NDT006' to $ReportID
  move 'Section 129 NDT 55% Avg Benefits Test (Part 2 of 3)' to $ReportTitle
  if (&RC.SLOB = 'Y')
    concat ' (By SLOB)' with $ReportTitle
  end-if
  display $ReportTitle
  display ' '
  display ' '
  display 'Prior to running this program, you should have verified that the'
  display 'SQR Program NDT001 was run for Section 129 only.'
  display ' '

  do StdAPI-Init

end-procedure


!************************************************
begin-procedure Main-Report
!************************************************

  do Reset-the-Results
  do Count-And-Sum-EEs('L', #NHCE, #BNHCE)
  do Count-And-Sum-EEs('H', #HCE,  #BHCE)
  do Calculations

  if (#NHCE <> 0) And (#HCE <> 0) And (#BHCE <> 0)
    do Display-Results
    do Set-Final-Result
  end-if

end-procedure


!************************************************
begin-procedure Check-Run-Control
!************************************************

begin-SELECT
RC.SLOB,
RC.MIN_EMPLOYEE_COUNT,
RC.CAFETERIA_PLAN,
RC.PLAN_YEAR_BEGIN_DT,
RC.MONTH_END_DT

FROM  PS_NDT_RUNCTL RC
end-SELECT

end-procedure


!************************************************
begin-procedure Reset-the-Results
!************************************************

  display  'Status: Clearing Previous Results ...'

let $sql-statement = 'NDT006.SQR,Reset-the-Results,R_Final_Results'
begin-SQL on-error=SQL-Error

DELETE FROM PS_R_FINAL_RESULTS
 WHERE TEST_ID = '55%';

INSERT INTO PS_R_FINAL_RESULTS
(TEST_ID,PASSED, TTL_BENEFIT_PAID, PCT_BENEFIT_PAID, NHCE_LOOKUP_PCT,
 ELIG_NHCE_COUNT, ELIG_HCE_COUNT,   CALC_HARBOR_PCT,  SAFE_HARBOR_PCT,
 UNSAFE_HARBOR_PCT, SLOB, CAFETERIA_PLAN, FIFTY5_CALC_PCT,
 MIN_EMPLOYEE_COUNT)
VALUES
('55%','N',0,0,0,0,0,0,0,0,'?','?',0,0);

end-SQL

end-procedure


!*************************************************************
begin-procedure Count-And-Sum-EEs($HCE_Type, :#Cnt, :#BenPaid)
!*************************************************************

  if ($HCE_Type = 'L')
    let $HCE_Descr = 'NHCE'
  else
    let $HCE_Descr = 'HCE'
  end-if
  let $Str = 'Status: Counting and Summing Benefits Paid for '
  let $Str = $Str || $HCE_Descr || ' Population ...'
  display $Str

begin-SELECT
COUNT(DISTINCT EMPLID) &CNT

FROM  PS_R_NDT_EMPL_YTD
WHERE YEAR_CD  = '{CURRENT_YEAR}'
AND   HCE_TYPE = $HCE_Type
end-SELECT

  let #Cnt = &CNT

  do Format-DateTime(&_RC.Plan_Year_Begin_Dt, $out, {DEFCMP}, '', '')
  let #PlanYear = To_Number(SubStr($out, 1, 4))

begin-SELECT
#ifdef DB2ALL
DECIMAL(SUM(B.FSA_PD_AMT_YTD),15,2) &BENEFITS
#else
SUM(B.FSA_PD_AMT_YTD) &BENEFITS
#endif

FROM  PS_FSA_SUMMARY B
WHERE B.EMPLID IN
      (SELECT DISTINCT EMPLID
         FROM PS_R_NDT_EMPL_YTD
        WHERE HCE_TYPE = $HCE_Type
          AND YEAR_CD  = '{CURRENT_YEAR}')
  AND B.PLAN_TYPE = '61'
  AND B.BALANCE_YEAR = #PlanYear
end-SELECT

  let #BenPaid = &BENEFITS

end-procedure


!************************************************
begin-procedure Calculations
!************************************************

  display 'Status: Performing Calculations ...'

  if (#NHCE = 0)
    display ''
    display 'There are no NHCE`s. Test cannot proceed'
  end-if
  if (#HCE = 0)
    display ''
    display 'There are no HCE`s. Test cannot proceed'
  end-if
  if (#BHCE = 0)
    display ''
    display 'No Eligible Benefits were paid to HCE`s. Test cannot proceed'
  end-if

  if (#NHCE <> 0) And (#HCE <> 0) And (#BHCE <> 0)
    let #ANHCE     = #BNHCE/#NHCE
    let #AHCE      = #BHCE/#HCE
    let #AvgBen    = #ANHCE/#AHCE
    let #AvgBenPct = #AvgBen * 100
    let #TtlEE     = #HCE + #NHCE
    let #TtlBen    = #BNHCE + #BHCE
  end-if

end-procedure


!************************************************
begin-procedure Display-Results
!************************************************

  display ' '
  display '************      Quick Results     **************'
  display ' '
  display '           Total Non-excludable Benefits'
  display 'NHCE`s  =       '        noline
  display #BNHCE                    $$$,$$$,$$9.00
  display 'HCE`s   =       '        noline
  display #BHCE                     $$$,$$$,$$9.00
  display 'Total   =       '        noline
  display #TtlBen                   $$$,$$$,$$9.00
  display ' '
  display '           Total Non-excludable Employees'
  display 'NHCE`s  =              ' noline
  display #NHCE                     999,999
  display 'HCE`s   =              ' noline
  display #HCE                      999,999
  display 'Total   =              ' noline
  display #TtlEE                    999,999
  display ' '
  display 'Average Benefits Ratio ' noline
  display #AvgBenPct                999.00 noline
  display '%'
  display ' '

  if (#AvgBen >= .55)
     move 'Y' to $Passed
     display 'Test Passed'
  else
     move 'N' to $Passed
     display 'Test Failed'
  end-if

  if (&RC.Slob = 'Y') And (#TtlEE < &RC.Min_Employee_Count)
    move 'N' to $Passed
    display 'Test Failed Minimum Required Employees'
  end-if

  display ' '
  display '**************************************************'
  display ' '

end-procedure


!************************************************
begin-procedure Set-Final-Result
!************************************************

let $sql-statement = 'NDT006.SQR,Set-Final-Result,R_Final_Results,Update'
begin-SQL on-error=SQL-Error
UPDATE PS_R_FINAL_RESULTS
   SET PASSED             = $Passed,
       SLOB               = &RC.SLOB,
       CAFETERIA_PLAN     = &RC.CAFETERIA_PLAN,
       ELIG_NHCE_COUNT    = #NHCE,
       ELIG_HCE_COUNT     = #HCE,
       TTL_BENEFIT_PAID   = #BNHCE,
       PCT_BENEFIT_PAID   = #BHCE,
       FIFTY5_CALC_PCT    = #AvgBenPct,
       MIN_EMPLOYEE_COUNT = #TtlEE
 WHERE TEST_ID = '55%';
end-SQL

end-procedure


!************************************************
begin-procedure Display-Time
!************************************************

  do Get-Current-Datetime
  display $AsOfNow
  display ''

end-procedure

!***************************************************************************

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'stdapi.sqc'    !Update Process API

!**************************** End of NDT006 ********************************

