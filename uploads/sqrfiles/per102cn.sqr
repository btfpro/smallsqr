!***********************************************************************
!  PER102CN:  Canadian Official Languages Report & Interface           *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:02:10                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
Begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  if $start-error <> 'Y'
    do Report
  end-if
  do Stdapi-Term
  do Reset
end-report

!********************************************
begin-procedure Init-Report

  move 'PER102CN' to $ReportID
  move 'Official Languages Report' to $ReportTitle
  display $ReportTitle
  display ' '

  do Stdapi-init

  if $prcs_process_instance = ''
     display 'This process cannot be run outside the Process scheduler'
     let $start_error = 'Y'
  else
     let $start_error = 'N'
     do Select-Parameters
  end-if

end-procedure

!********************************************
begin-procedure Get-Values

  do Get-As-Of-Date
  let $companyclause = $company
  if $company = ''
    let $companyfilter = ''
  else
    let $companyfilter = 'AND D.COMPANY = '''||$companyclause||''''
  end-if

end-procedure

begin-procedure Get-As-Of-Date
  let $AsOfDate = &RUN_CNTL_HR.asofdate

  if $AsOfDate = ''
     move $AsOfToday to $AsOfDate
  end-if
end-procedure

!**************************************************************************
!    Report procedure
!**************************************************************************

begin-procedure Report
let $OldCompany = ' '
let #seq_num = 0
begin-SELECT
A.EMPLID,
A.LANG_CD,
A.BILINGUALISM_CODE,
B.CAN_NOC_CD,
C.GEOLOC_CODE,
C.TBS_OFFICE_CD_CAN,
D.LOCATION,
D.COMPANY,
D.REG_TEMP,
D.CONTRACT_NUM,
B.SEASONAL
   move &B.CAN_NOC_CD to $can_noc_code
   move &D.COMPANY to $Company
   If $Company <> $OldCompany
      let #Seq_num = #seq_num + 1
      let $OldCompany = $Company
   if #seq_num > 1
         close 10
     end-if
     if #seq_num < 10
         let $filename = $company||'0'||to_char(#seq_num)||'.emp'
     else
         let $filename = $company||to_char(#seq_num)||'.emp'
     end-if
     let $fname = '{IMPORTPREFIX}'||$filename||'{IMPORTSUFFIX}'
     open $fname as 10 for-writing record=188
   End-if
   move ' ' to $Occ_Cat
   move &A.Emplid               to $emplid
   move &A.LANG_CD                    to $language
   move &A.Bilingualism_Code            to $bilingual_code
   move &C.Geoloc_Code                  to $geoloc_code
   move &C.TBS_OFFICE_CD_CAN        to $tbs_office_cd
   let $Location = rtrim(&D.Location, ' ')
   if rtrim($bilingual_code,' ') = ''
      let $bilingual_code = '0'
   end-if
   if $bilingual_code = '3'
      let $bilingual_code = '1'
   end-if
   if $language = 'CFR' or $language = 'FRA'
      let $lang_value = '2'
   else
      let $lang_value = '1'
   end-if
   IF &D.REG_TEMP = 'T' and &B.SEASONAL <> 'Y'
      do check-Contract-Data
   Else
      do Is-Valid-Record
   End-if
   Move ' ' to $lang_value
   move ' ' to $Company
   move ' ' to $Emplid
   move ' ' to $Language
   move ' ' to $Bilingual_Code
   move ' ' to $Geoloc_Code
   move ' ' to $Office_Type
   move ' ' to $Location
   move ' ' to $can_noc_code

FROM  PS_PERSONAL_DATA A,
      PS_JOBCODE_TBL B,
      PS_LOCATION_TBL C,
      PS_JOB D,
      PS_EMPLOYMENT E,
      PS_REG_REGION_TBL F

WHERE A.EMPLID      = E.EMPLID
  AND A.FT_STUDENT  = 'N'
  AND E.EMPL_RCD   = (SELECT MIN(E2.EMPL_RCD) FROM PS_EMPLOYMENT E2
                                WHERE E2.EMPLID = E.EMPLID)
  AND D.EMPLID      = E.EMPLID
  AND D.HR_STATUS   = 'A'
  AND D.PER_ORG  = 'EMP'
  AND D.EFFDT       = (SELECT MAX(JB.EFFDT)
                       FROM PS_JOB JB
                       WHERE JB.EMPLID    = D.EMPLID
                         AND JB.EMPL_RCD = D.EMPL_RCD
                         AND JB.EFFDT    <= $AsOfDate)
  AND D.EFFSEQ      = (SELECT MAX(J2.EFFSEQ)
                       FROM  PS_JOB J2
                       WHERE J2.EMPLID    = D.EMPLID
                         AND J2.EMPL_RCD = D.EMPL_RCD
                         AND J2.EFFDT     = D.EFFDT)
  AND B.JOBCODE     = D.JOBCODE
  AND B.SETID = D.SETID_JOBCODE
  AND B.EFFDT       = (SELECT MAX(JC.EFFDT)
                       FROM PS_JOBCODE_TBL JC
                       WHERE JC.JOBCODE   = B.JOBCODE
                         AND JC.SETID = B.SETID
                         AND JC.EFFDT    <= $AsOfDate)
  AND C.LOCATION    = D.LOCATION
  AND C.SETID = D.SETID_LOCATION
  AND C.EFFDT       = (SELECT MAX(EFFDT)
                       FROM   PS_LOCATION_TBL
                       WHERE  LOCATION    = C.LOCATION
                         AND SETID = C.SETID
                         AND EFFDT      <= $AsOfDate)
  AND F.REG_REGION = D.REG_REGION
  AND F.COUNTRY = 'CAN'
  [$companyfilter]
  ORDER BY D.COMPANY
end-SELECT

if #seq_num > 0
   close 10
end-if

end-procedure

!**************************************************************************
begin-procedure Is-Valid-Record
!**************************************************************************

do Get-OCC-GROUP
do Get-Language-Requirements
do Write-Records

End-Procedure

!**************************************************************************
begin-procedure check-Contract-Data
!**************************************************************************

begin-select
A.CONTRACT_BEGIN_DT,
A.CONTRACT_END_DT
  move &A.CONTRACT_BEGIN_DT to $cont_begin_date
  move &A.CONTRACT_END_DT to $cont_end_date
  if isnull($cont_end_date) = 1 or isblank($cont_end_date) = 1
      do is-valid-record
      exit-select
  else
!       do Format-DateTime($cont_end_date, $cont_end_date, {DEFYMD}, '','')
!       do Format-DateTime($cont_begin_date, $cont_begin_date, {DEFYMD}, '','')
       do Convert-To-DTU-Date($cont_begin_date,$cont_begin_date)
       do Convert-To-DTU-Date($cont_end_date,$cont_end_date)

      do DTU-Diff-months($cont_begin_date, $cont_end_date, #num_months)
      if #num_months >= 3
         do is-valid-record
         exit-select
      end-if
  end-if

FROM PS_CONTRACT_DATA A
WHERE   A.EMPLID = $emplid
AND A.CONTRACT_STATUS = 'A'
end-select

end-procedure

!**************************************************************************
begin-procedure Get-OCC-Group
!**************************************************************************
begin-SELECT

CN.CAN_NOC_OCC_GROUP
   move &CN.CAN_NOC_OCC_GROUP    to $Occ_Cat
FROM PS_CAN_NOC_TBL CN
WHERE CN.CAN_NOC_CD = $can_noc_code
  AND CN.EFFDT = (SELECT MAX(EFFDT) FROM PS_CAN_NOC_TBL CN2
                  WHERE CN2.CAN_NOC_CD = CN.CAN_NOC_CD
                    AND CN2.EFFDT <= $AsOfDate)
END-SELECT

End-Procedure

!**************************************************************************
begin-procedure Get-Language-Requirements
!**************************************************************************

let $pub_svc_lng = '0'
let $intrl_ncr_lng = '0'
let $intrl_on_lng = '0'
let $intrl_mnt_lng = '0'
let $intrl_qc_lng = '0'
let $intrl_nb_lng = '0'
let $supr_comm_ncr = '0'
let $supr_comm_on = '0'
let $supr_comm_mnt = '0'
let $supr_comm_qc = '0'
let $supr_comm_nb = '0'

begin-SELECT
A.PUB_SVC_LNG_CAN,
A.INTRL_NCR_LNG_CAN,
A.INTRL_ON_LNG_CAN,
A.INTRL_MNT_LNG_CAN,
A.INTRL_QC_LNG_CAN,
A.INTRL_NB_LNG_CAN,
A.SUPR_COMM_NCR_CAN,
A.SUPR_COMM_ON_CAN,
A.SUPR_COMM_MNT_CAN,
A.SUPR_COMM_QC_CAN,
A.SUPR_COMM_NB_CAN
   move &A.PUB_SVC_LNG_CAN to   $pub_svc_lng
   move &A.INTRL_NCR_LNG_CAN to $intrl_ncr_lng
   move &A.INTRL_ON_LNG_CAN to  $intrl_on_lng
   move &A.INTRL_MNT_LNG_CAN to $intrl_mnt_lng
   move &A.INTRL_QC_LNG_CAN to  $intrl_qc_lng
   move &A.INTRL_NB_LNG_CAN to  $intrl_nb_lng
   move &A.SUPR_COMM_NCR_CAN to $supr_comm_ncr
   move &A.SUPR_COMM_ON_CAN to  $supr_comm_on
   move &A.SUPR_COMM_MNT_CAN to $supr_comm_mnt
   move &A.SUPR_COMM_QC_CAN to  $supr_comm_qc
   move &A.SUPR_COMM_NB_CAN to  $supr_comm_nb
 FROM PS_PERS_OFFLNG_CAN A
 WHERE A.EMPLID = $emplid
end-select

End-Procedure

!**************************************************************************
!    Write out the Records
!**************************************************************************
begin-procedure Write-Records

   write 10 from $Company:3
                 $Emplid:10
                 $Lang_value:1
                 $Occ_Cat:2
                 $Bilingual_Code:1
                 $Geoloc_Code:10
                 $pub_svc_lng:1
                 $intrl_ncr_lng:1
                 $intrl_on_lng:1
                 $intrl_mnt_lng:1
                 $intrl_qc_lng:1
                 $intrl_nb_lng:1
                 $supr_comm_ncr:1
                 $supr_comm_on:1
                 $supr_comm_mnt:1
                 $supr_comm_qc:1
                 $supr_comm_nb:1
                 $tbs_office_cd:10

end-procedure

!*****************************************************************
#include 'stdapi.sqc'    !Routine to update run Status
#include 'hrrnctl1.sqc'  !Get run control parameter values
!#include 'hrgetval.sqc'  !Get values mask routines
#include 'askaod.sqc'    !Ask-As-Of-Date procedure

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'


