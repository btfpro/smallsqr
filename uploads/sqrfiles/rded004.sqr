!*******************************************************************
! RDED004:  Terminated Employees Processed for Retro Deductions    *
!*******************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2006/07/19:09:21:15                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
#define a 16                    ! emplid 16
#define b 6                     ! EMPL_RCD 6
#define e 8                     ! benefit_program 8
#define f 15                    ! plan_type 15
#define g 11                    ! benefit_plan 11
#define h 11                    ! dedcd 11
#define i 10                    ! ded_class 10
#define c 15                    ! pay_end_dt 15
#define j 12                    ! deduct_amt 15
#define k 12                    ! new_deduct_amt 15
#define l 12                    ! deduct_amt_ovrd 15
#define m 12                    ! retroded_ded_amt 15
#define n 7                     ! OK_to_process 7

#define a1 1                     ! emplid 16
#define b1 17                    ! EMPL_RCD 6
#define e1 23                    ! benefit_program 8
#define f1 31                    ! plan_type 15
#define g1 46                    ! benefit_plan 11
#define h1 57                    ! dedcd 11
#define i1 68                    ! ded_class 10
#define c1 78                    ! pay_end_dt 15
#define j1 93                    ! deduct_amt 15
#define k1 105                   ! new_deduct_amt 15
#define l1 117                   ! deduct_amt_ovrd 15
#define m1 129                   ! retroded_ded_amt 15
#define n1 141                   ! OK_to_process 7

#define a2 15                    ! emplid 16
#define b2 5                     ! EMPL_RCD 6
#define e2 7                     ! benefit_program 8
#define f2 14                    ! plan_type 15
#define g2 10                    ! benefit_plan 11
#define h2 10                    ! dedcd 11
#define i2 9                     ! ded_class 10
#define c2 14                    ! pay_end_dt 15
#define j2 11                    ! deduct_amt 15
#define k2 11                    ! new_deduct_amt 15
#define l2 11                    ! deduct_amt_ovrd 15
#define m2 11                    ! retroded_ded_amt 15
#define n2 7                     ! OK_to_process 7


#include 'setenv.sqc' !Set environment

!**********************************
 begin-program
!**********************************

  do Init-Report
  do ReportByEmplid
  do Stdapi-Term

end-program

!**********************************
begin-procedure Init-Report
!**********************************

  do Init-DateTime
  do Init-Number
  do Stdapi-Init

  move 'RDED004' to $ReportID
  !Retroactive Deductions Loaded to Paysheet for Terminated Employees
  do Get-Report-Language
  let $ReportTitle  = $RDED004-REPORTTITLE
  display $ReportID
  display $ReportTitle

  do Get-Current-DateTime
  do Parameter-Initialization

end-procedure

!**********************************
begin-procedure Parameter-Initialization
!**********************************

  if $Prcs_Process_Instance = ''
    Display 'This SQR must run from PeopleSoft'
  else
    do Select-Parameters
    move $C.Retro_pay_End_Dt to $Retro_Pay_End_Dt
  end-if

end-procedure

!**********************************
Begin-Procedure Report-Translation
!**********************************

! Read from RDED004 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation('BEN1')

  do Get_Field_Information ('RDED004','REPORT_TITLE', $RDED004-REPORTTITLE,#CW)

  do Get_Field_Information ('BEN1',   'PLAN',          $BEN1-PLAN,           #CW)
  do Get_Field_Information ('BEN1',   'BENEFIT',       $BEN1-BENEFIT,        #CW)
  do Get_Field_Information ('BEN1',   'DATE',          $BEN1-DATE,           #CW)
  do Get_Field_Information ('BEN1',   'EMPL',          $BEN1-EMPL,           #CW)
  do Get_Field_Information ('BEN1',   'PROGRAM',       $BEN1-PROGRAM,        #CW)
  do Get_Field_Information ('BEN1',   'TYPE',          $BEN1-TYPE,           #CW)
  do Get_Field_Information ('BEN1',   'PROCESS',       $BEN1-PROCESS,        #CW)
  do Get_Field_Information ('BEN1',   'EMPLOYEE',      $BEN1-EMPLOYEE,       #CW)
  do Get_Field_Information ('BEN1',   'DEDCTON',       $BEN1-DEDCTON,        #CW)
  do Get_Field_Information ('BEN1',   'PLAN',          $BEN1-PLAN,           #CW)
  do Get_Field_Information ('BEN1',   'ID',            $BEN1-ID,             #CW)
  do Get_Field_Information ('BEN1',   'CODE',          $BEN1-CODE,           #CW)
  do Get_Field_Information ('BEN1',   'RCD_NO',        $BEN1-RCD-NO,         #CW)
  do Get_Field_Information ('BEN1',   'PAY',           $BEN1-PAY,            #CW)
  do Get_Field_Information ('BEN1',   'CLASS',         $BEN1-CLASS,          #CW)
  do Get_Field_Information ('BEN1',   'END_DATE',      $BEN1-END-DATE,       #CW)
  do Get_Field_Information ('BEN1',   'AMT',           $BEN1-AMT,            #CW)
  do Get_Field_Information ('BEN1',   'OVERRIDE',      $BEN1-OVERRIDE,       #CW)
  do Get_Field_Information ('BEN1',   'DEDUCT_AMT',    $BEN1-DEDUCT-AMT,     #CW)
  do Get_Field_Information ('BEN1',   'OLD_DEDUCT',    $BEN1-OLD-DEDUCT,     #CW)
  do Get_Field_Information ('BEN1',   'NEW_DEDUCT',    $BEN1-NEW-DEDUCT,     #CW)
  do Get_Field_Information ('BEN1',   'RETROACTIVE',   $BEN1-RETROACTIVE,    #CW)
  do Get_Field_Information ('BEN1',   'EMPLOYEE_TOT',  $BEN1-EMPLOYEE-TOT,   #CW)
  do Get_Field_Information ('BEN1',   'DED_KEY_SUBTOT',$BEN1-DED-KEY-SUBTOT, #CW)
  do Get_Field_Information ('BEN1',   'OK_TO',         $BEN1-OK-TO,          #CW)

End-Procedure

!**********************************
begin-setup
!**********************************

#Include 'ptpsl177.sqc'  !Printer and page-size initialization

end-setup

!**********************************
begin-heading 8
!**********************************

  #Include 'stdhdgtr.sqc'

!Column Heading line 1
  print $BEN1-EMPLOYEE       (+2,{a1},{a})
  print $BEN1-EMPL           (0,{b1},{b})
  print $BEN1-BENEFIT        (0,{e1},{e})
  print $BEN1-PLAN           (0,{f1},{f})
  print $BEN1-BENEFIT        (0,{g1},{g})
  print $BEN1-DEDCTON        (0,{h1},{h})
  print $BEN1-DEDCTON        (0,{i1},{i})
  print $BEN1-PAY            (0,{c1},{c})
  print $BEN1-OLD-DEDUCT     (0,{j1},{j})
  print $BEN1-NEW-DEDUCT     (0,{k1},{k})
  print $BEN1-DEDUCT-AMT     (0,{l1},{l})
  print $BEN1-RETROACTIVE    (0,{m1},{m})
  print $BEN1-OK-TO          (0,{n1},{n})

!Column Heading line 2
  print $BEN1-ID             (+1,{a1},{a})
  print $BEN1-RCD-NO         (0,{b1},{b})
  print $BEN1-PROGRAM        (0,{e1},{e})
  print $BEN1-TYPE           (0,{f1},{f})
  print $BEN1-PLAN           (0,{g1},{g})
  print $BEN1-CODE           (0,{h1},{h})
  print $BEN1-CLASS          (0,{i1},{i})
  print $BEN1-END-DATE       (0,{c1},{c})
  print $BEN1-AMT            (0,{j1},{j})
  print $BEN1-AMT            (0,{k1},{k})
  print $BEN1-OVERRIDE       (0,{l1},{l})
  print $BEN1-DEDUCT-AMT     (0,{m1},{m})
  print $BEN1-PROCESS        (0,{n1},{n})

!Column Heading line 3
  print '='            (+1,{a1},{a2})  FILL
  print '='            (0,{b1},{b2})   FILL
  print '='            (0,{e1},{e2})   FILL
  print '='            (0,{f1},{f2})   FILL
  print '='            (0,{g1},{g2})   FILL
  print '='            (0,{h1},{h2})   FILL
  print '='            (0,{i1},{i2})   FILL
  print '='            (0,{c1},{c2})   FILL
  print '='            (0,{j1},{j2})   FILL
  print '='            (0,{k1},{k2})   FILL
  print '='            (0,{l1},{l2})   FILL
  print '='            (0,{m1},{m2})   FILL
  print '='            (0,{n1},{n2})   FILL

end-heading

!**********************************
begin-procedure ReportByEmplid
!**********************************

begin-SELECT
A.EMPLID                 (+1,{A1},{A})  on-break skiplines=3 level=1 after=Empl-Total
A.EMPL_RCD              (0,{B1},{B})  on-break skiplines=3 level=2
B.BENEFIT_PROGRAM        (0,{E1},{E})  on-break skiplines=3 level=3
B.PLAN_TYPE
    let $fieldname='PLAN_TYPE'
    let $fieldvalue=&B.Plan_Type
    do read-translate-table
    print $xlatshortname (0,{f1},{f})  on-break skiplines=3 level=4
B.BENEFIT_PLAN           (0,{G1},{G})  on-break skiplines=3 level=5
B.DEDCD                  (0,{H1},{H})  on-break skiplines=3 level=6
B.DED_CLASS              (0,{I1},{I})  on-break skiplines=3 level=7 after=Ben-Total
B.PAY_END_DT
    do Format-DateTime(&B.pay_end_dt,$out,{DEFDATE},'','')
    print $out           (0,{c1},{c})
B.DEDUCT_AMT             (0,{J1},{J}) EDIT '99,999.99ps'
B.NEW_DEDUCT_AMT         (0,{K1},{K}) EDIT '99,999.99ps'
B.DEDUCT_AMT_OVRD        (0,{L1},{L}) EDIT '99,999.99ps'
B.RETRODED_DED_AMT       (0,{M1},{M}) EDIT '99,999.99ps'
B.OK_TO_PROCESS          (0,{N1},{N})
    Add &B.Retroded_Ded_Amt to #Empl-Total
    Add &B.Retroded_Ded_Amt to #Ben-Total

FROM  PS_RETRODED_RQST A,
      PS_RETRODED_DEDS B
WHERE A.RETRODED_SEQ_NO = B.RETRODED_SEQ_NO
AND   A.RETRODED_PRCS_FLAG  = 'P'
AND   B.TERM_EMPL_PRCS='Y'
AND   A.RETRO_PAY_END_DT = $Retro_Pay_End_Dt
ORDER BY A.EMPLID,
  A.EMPL_RCD,
  B.BENEFIT_PROGRAM,
  B.PLAN_TYPE,
  B.BENEFIT_PLAN,
  B.DEDCD,
  B.DED_CLASS,
  B.PAY_END_DT
end-SELECT

end-procedure

!**********************************
begin-procedure Empl-Total
!**********************************

  Display 'Running Empl-Total'
  print $BEN1-EMPLOYEE-TOT                 (+2,98,30)
  print #Empl-Total                        (0,+1,10) edit '99,999.99ps'
  let #Empl-Total=0

end-procedure

!**********************************
begin-procedure Ben-Total
!**********************************

  Display 'Running Ben-Total'
  print '----------'                       (+1,129,10)
  print $BEN1-DED-KEY-SUBTOT               (+1,98,30)
  print #Ben-Total                         (0,+1,10) edit '99,999.99ps'
  let #Ben-Total=0

end-procedure

!**********************************

#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'reset.sqc'     !Reset Printer

#Include 'rdedrctl.sqc'  !Get-Run-Control procedure

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language

!************************ End Of Report *****************************
