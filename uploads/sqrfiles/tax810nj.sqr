!***********************************************************************
!  TAX810NJ:  Qtrly Wage List - Tape - NEW JERSEY                      *
!                                                                      *
!             NOTE: "#IFDEF TAXTEST" in main SELECT is used for        *
!                   testing this report against DEMO database          *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2007/03/01:16:55:13                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  698735                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup31.sqc' !Printer and page-size initialization
#include 'usarpt.sqc'  ! NID_COUNTRY defined

begin-report
  do Init-Report

! These variables are used by rptsmmry.sqc
  Let $Prnt_CoTxGrs = 'N'
  Let $Prnt_CoExGrs = 'N'

  do Process-Main

 ! close 10

  if $RecordWritten = 'Y'
    display ''
    display 'Upon successful conclusion of this program, the following'
    display 'file will have been created:'
    display ''
    display '  TAX810NJ  contains 160-character records in the unique format'
    display '            required for the reporting of quarterly UI wages'
    display '            to the New Jersey Department of Labor.'
    display ''
    display 'Follow the instructions from the department for preparing'
    display 'and submitting the file.'
    display ''
  else
    do Print-Summary-Data('NoData')
  end-if

  do Stdapi-Term

end-report

begin-procedure Init-Report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Get-Calendar-Year-Id
  do Stdapi-Init

  do Initialization
  move 'TAX810NJ' to $ReportID

  move 'New Jersey Quarterly UI Wage Report' to $ReportTitle
  display ''
  display 'Creating File for New Jersey UI Wage Reporting'

end-procedure

begin-procedure Initialization
#ifdef TAXTEST
  move 'CA'              to $State
#else
  move 'NJ'              to $State
#endif

  do Get-Tax-Reporting-Run-Controls
  move &TX.Balance_Year to $RptYear 9999
  move $RptYear          to $RptYearLst ~~~x
  move $RptYearLst       to $RptYearNum 9
  move $RptYear          to $RptYear ~~xx
  move $PeriodEndDate    to $AsOfDate

  display ' '
  display 'Processing balances for '   noline
  display $RptQtrYr

  move 160 to #RecordLength
  add 2 to #RecordLength

  if $Prcs_Process_Instance = ''
     do Prompts-Data
  else
     do Select-Parameters
     do Convert-Parameters
  end-if

  move &TX.Balance_Qtr to $Qtr

  move &TX.Balance_Year to $QtrBeginDate xxxx
  let #QtrBeginMonth = #QtrEndMonth - 2
  move #QtrBeginMonth to $QtrBeginMonth 09

  let $QtrBeginDate = $QtrBeginDate || '-' || $QtrBeginMonth || '-01'

  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($PeriodEndDate,$PeriodEndDate,{DEFYMD},'','')

  do DTU-DayOfWeek#($QtrBeginDate,#QtrBeginWeekday)
  if #QtrBeginWeekday <> 1
    let #BegOffsetDays = #QtrBeginWeekday - 1
    do DTU-Subtract-Days($QtrBeginDate,#BegOffsetDays,$EarnsBeginDate)
  else
    move $QtrBeginDate to $EarnsBeginDate
  end-if
  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($EarnsBeginDate,$SlctEarnsBeginDate,{DEFYMD},'','native')

  do DTU-DayOfWeek#($PeriodEndDate,#QtrEndWeekday)
  if #QtrEndWeekday <> 7
    let #EndOffsetDays = 7 - #QtrEndWeekday
    do DTU-Add-Days($PeriodEndDate,#EndOffsetDays,$EarnsEndDate)
  else
    move $PeriodEndDate to $EarnsEndDate
  end-if
  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($EarnsEndDate,$SlctEarnsEndDate,{DEFYMD},'','native')

  do Open-File

  create-array name=QtrWeeks size=1  field=WeekWorked:char:15
  create-array name=QtrDays  size=10 field=PayGroup:char:1
                                     field=WkSched:char:1
                                     field=WeekDay:number:100
                                     field=Week#:number:100
                                     field=WorkDay:char:100
                                     field=Wages:number:100
end-procedure

begin-procedure Open-File

   move 0 to #RecordCount

   open '{IMPORTPREFIX}TAX810NJ{IMPORTSUFFIX}' as 10 for-writing record=160:fixed
end-procedure

begin-procedure Process-Main

  move $MagAuthNo to $MagAuthNo 0999

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

begin-SELECT
M.COMPANY
M.FEDERAL_EIN
M.DESCR
M.ADDRESS1
M.CITY
M.STATE
M.POSTAL

  move &M.Company to $Company
  move &M.Descr   to $CompanyName

  move '' to $priorEmplID
  do Read-Employee-Data

FROM  PS_COMPANY_TBL M
WHERE M.EFF_STATUS = 'A'
  AND M.TAX_REPORT_TYPE = '2'
  AND M.EFFDT =
  (SELECT MAX(EFFDT)
     FROM PS_COMPANY_TBL
     WHERE  COMPANY = M.COMPANY
       AND  EFFDT  <= $AsOfDate)
ORDER BY COMPANY
end-SELECT
  if #Count_F > 0
    do Print-Summary-Data('FileTotal')
  end-if
end-procedure

begin-procedure Read-Employee-Data
begin-SELECT
C.COMPANY    () on-break print=never before=Before-Company
                                     AFTER=AFTER-COMPANY
C.EMPLID
C.NLGRS_QTD
C.TXGRS_QTD
D1.NATIONAL_ID
D.LAST_NAME
D.FIRST_NAME
D.MIDDLE_NAME

  if &C.NlGrs_QTD > 0 and &C.TxGrs_QTD >= 0
    do Process-Employee
  else
    do Print-Summary-Data('NegWage')
  end-if

FROM  PS_TAX_BALANCE C, PS_PERSON_NAME D, PS_PERS_NID D1
WHERE C.COMPANY       = &M.Company
  AND D.EMPLID        = C.EMPLID
  AND C.TAX_CLASS     = 'U'
  AND C.BALANCE_ID    = $Calendar_Year_Id
  AND C.BALANCE_YEAR  = &TX.Balance_Year
  AND C.BALANCE_QTR   = &TX.Balance_Qtr
#ifdef TAXTEST
  AND C.STATE         = 'CA'
#else
  AND C.STATE         = 'NJ'
#endif
  AND C.LOCALITY      = ' '
  AND C.BALANCE_PERIOD  =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE
       WHERE  EMPLID        = C.EMPLID
         AND  COMPANY       = C.COMPANY
         AND  BALANCE_ID    = C.BALANCE_ID
         AND  BALANCE_YEAR  = C.BALANCE_YEAR
         AND  BALANCE_QTR   = C.BALANCE_QTR
         AND  STATE         = C.STATE
         AND  LOCALITY      = C.LOCALITY
         AND  TAX_CLASS     = C.TAX_CLASS)
  AND C.NLGRS_QTD <> 0
  AND D.EMPLID            = D1.EMPLID
  AND D1.COUNTRY          = {NID_Country}
  AND D1.NATIONAL_ID_TYPE = $Payroll_NID_Type
ORDER BY D1.NATIONAL_ID
end-SELECT
end-procedure

begin-procedure Process-Employee
  move &D1.NATIONAL_ID to $S123 xxx       !isolate first 3 digits
  if $S123 = &Temp_SSN_Mask or RTRIM(&D1.NATIONAL_ID, ' ') = ''
    move '000000000'   to $NATIONAL_ID
  else
    move &D1.NATIONAL_ID        to $NATIONAL_ID
  end-if

  let $LastName   = rtrim(&D.LAST_NAME, ' ')
  let $FirstName  = rtrim(&D.FIRST_NAME, ' ')
  let $MidInitial = {ps-substr}(&D.MIDDLE_NAME,1,1)
  uppercase $LastName
  uppercase $FirstName

  let $Name = $LastName || ' ' || $FirstName || ' ' || $MidInitial

  move &C.NlGrs_QTD to #NlGrs_QTD
  add #NlGrs_QTD to #Co_NlGrs_QTD
  multiply 100 times #NlGrs_QTD
  do Format-Number(#NlGrs_QTD,  $NlGrs_QTD,  '099999999999')

  move &C.EmplID to $EmplID

  do Get-Weeks
  if #WeeksWorked > #MaxWeeks
    move #MaxWeeks to #Weeks
  else
    move #WeeksWorked to #Weeks
  end-if
  do Format-Number(#Weeks, $Weeks, '09')

  do Write-B-Record
end-procedure

begin-procedure Before-Company
  do Get-Company-Data
  do Get-Total
#ifdef TAXTEST
  move 'CA' to $State
#else
  move 'NJ' to $State
#endif
  do Get-State-Tax-Data             !Employer ID
  if RTRIM(&Employer_ID_SUT,' ') = ''
    display '*** State Unemployment ID missing in Company State Tax Table ***'
    show 'For company : ' $Company
    display '*********************** Processing stopped *********************'
    stop
  end-if
  let $StateEIN = EDIT(RTRIM(&Employer_ID_SUT,' '),'099999999999')

  do Write-A-Record

#ifdef TAXTEST              !Reset so Getweeks will work
  move 'CA' to $State
#endif

end-procedure

begin-procedure Get-Total
begin-SELECT

COUNT(*)          &EmplCount
#ifdef DB2ALL
DECIMAL(SUM(TB.NLGRS_QTD),15,3) &CompanyTotal
#else
SUM(TB.NLGRS_QTD) &CompanyTotal
#endif

FROM  PS_TAX_BALANCE TB
WHERE TB.COMPANY       = &C.Company
#ifdef TAXTEST
  AND TB.STATE         = 'CA'
#else
  AND TB.STATE         = 'NJ'
#endif
  AND TB.LOCALITY      = ' '
  AND TB.TAX_CLASS     = 'U'                 ! Unemployment
  AND TB.BALANCE_ID    = $Calendar_Year_Id
  AND TB.BALANCE_YEAR  = &TX.Balance_Year
  AND TB.BALANCE_QTR   = &TX.Balance_Qtr
  AND TB.NLGRS_QTD     > 0
  AND TB.BALANCE_PERIOD       =
      (SELECT MAX(C2.BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE C2
       WHERE  C2.EMPLID        = TB.EMPLID
         AND  C2.COMPANY       = TB.COMPANY
         AND C2.BALANCE_ID    = TB.BALANCE_ID
         AND C2.BALANCE_YEAR  = TB.BALANCE_YEAR
         AND C2.BALANCE_QTR   = TB.BALANCE_QTR
         AND  C2.STATE         = TB.STATE
         AND  C2.LOCALITY      = TB.LOCALITY
         AND  C2.TAX_CLASS     = TB.TAX_CLASS)
GROUP BY TB.COMPANY, TB.STATE
end-SELECT
end-procedure

begin-procedure After-Company
  if #Count_S > 0
    do Print-Summary-Data('CoTotal')

    add #Co_NlGrs_QTD to #Tot_NlGrs_QTD
    add #Count_S to #Count_F

    move 0 to #Co_NlGrs_QTD
    move 0 to #Count_S
    new-page
  end-if
end-procedure

begin-procedure Write-A-Record

  move &M.Federal_EIN  to $FedEIN 099999999
  move &M.Descr        to $ErName
  move &M.Address1     to $ErAddress
  move &M.City         to $ErCity
  let $ErState = rtrim(&M.State, ' ')
  move &M.Postal       to $Zip

  uppercase $ErName
  uppercase $ErAddress
  uppercase $ErCity

  move &CompanyTotal to #TEMP
  multiply 100 times #TEMP
  do Format-Number (#TEMP,  $B_NlGrs,  '09999999999999')

  move &EmplCount to $B_Count 099999

  write 10 from 'M':1     !  1
          $StateEIN:12    !  2 -  13
                $Sp:2     ! 14 -  15
            $ErName:36    ! 16 -  51
         $ErAddress:35    ! 52 -  86
            $ErCity:20    ! 87 - 106
           $ErState:2     !107 - 108
                $Sp:3     !109 - 111
               $Zip:5     !112 - 116
                $Sp:4     !117 - 120
               $Qtr:1     !121
        $RptYearNum:1     !122
           $B_Count:6     !123 - 128
           $B_NlGrs:14    !129 - 142
            $FedEIN:9     !143 - 151
         $MagAuthNo:4     !152 - 155
                $Sp:5     !156 - 160

  add 1 to #RecordCount
  move 'Y' to $RecordWritten
end-procedure

begin-procedure Write-B-Record

  write 10 from 'B':1
       $NATIONAL_ID:9
              $Name:30
         $NlGrs_QTD:12
             $Weeks:2
                $Sp:106

   if $NATIONAL_ID = '000000000'
     display '   '
     display ' WARNING  WARNING  WARNING '
     display ' No valid SSN found for employee ' noline
     display $Name noline
     display '.   Employee reported with SSN = 000000000. '
     display '  '
   end-if

  add 1 to #RecordCount
  add 1 to #Count_S
  move '' to $NlGrs_QTD
  move 0  to #NlGrs_QTD
end-procedure

begin-procedure Ignore
end-procedure

begin-procedure Prompts-Data
  display ' '
  input $MaxWeeks 'Base weeks for each employee cannot exceed (from Form WR-30)' type=number
  input $StateMinimum 'Enter minimum weekly earnings for base week (from Form WR-30)' type=number
  input $MagAuthNo 'Enter your Magnetic Authorization Number'

  move $MaxWeeks to #MaxWeeks
  move $StateMinimum to #StateMinimum
end-procedure

begin-procedure Convert-Parameters

  move #RC_QTR_UI.Tape_Auth_Number  to $MagAuthNo 0999
  move #RC_QTR_UI.Maximum_Weeks to #MaxWeeks
  move #MaxWeeks to $MaxWeeks
  move #RC_QTR_UI.NJ_State_Minimum  to #StateMinimum
  move #StateMinimum to $StateMinimum

  move $RC_QTR_UI.Reporting_Medium to $FileType
  move $RC_QTR_UI.Diskette_Type to $DisketteType
end-procedure

#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getstdta.sqc'  !Get-State-Tax-Data procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getfrmat.sqc'  !Get-Diskette-Format procedure
#Include 'rptsmmry.sqc'  !Print-Summary-Data procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getweeks.sqc'  !Get-Weeks procedure
#Include 'datemath.sqc'  !Date math procedures
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'stdapi.sqc'    !Update Process API
#Include 'txrnctl1.sqc'  !Get-Run-Control procedure
