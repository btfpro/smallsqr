
!***********************************************************************
!  GETTXDTA    :   Get Employee Tax Data for Update                    *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2012, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2012/07/16:14:02:45                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  872684                                              !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Tax Programs which insert into FED_TAX_DATA, STATE_TAX_DATA and/or   *
! LOCAL_TAX_DATA - TAX103.SQR, TAX113.SQR, TAX504.SQR, TAX516AZ.SQR    *
! AND TAX516OK.SQR                                                     *
!***********************************************************************

begin-procedure Get-Fed-Tax-Data

  if $Program = 'TAX103'
     let $Select-A-Date-Less = RTRIM($FEB15DT, ' ')
     let $Select-A-Date-Greater = $JAN01DT

     move ' ( A.EFFDT = (SELECT MAX(EFFDT) FROM PS_FED_TAX_DATA A1 '
         to $Select-A-FED-1A
     move  '  WHERE  A1.EMPLID  = A.EMPLID '   to  $Select-A-FED-1B
     move ' AND A1.COMPANY = A.COMPANY '       to $Select-A-FED-1C
     move ' AND A1.EFFDT <= '''                to  $Select-A-FED-1D

     move $Select-A-Date-Less                  to $Select-A-Fed-1DA

     move ''' '                                to  $Select-A-FED-QUOTE
     move ' AND A1.EFFDT >= '''                to  $Select-A-FED-1E
     move $Select-A-Date-Greater               to $Select-A-FED-1EA
     move ')'                                  to  $Select-A-FED-1EB

     move ' OR A.EFFDT > '''                   to $Select-A-FED-1F

     let $Select-A-FED-1 = $Select-A-FED-1A || $Select-A-FED-1B ||
                           $Select-A-FED-1C ||  $Select-A-FED-1D ||
                           $Select-A-FED-1DA || $Select-A-FED-QUOTE   || $Select-A-FED-1E ||
                           $Select-A-FED-1EA || $Select-A-FED-QUOTE   || $Select-A-FED-1EB ||
                           $Select-A-FED-1F || $Select-A-FED-1DA || $Select-A-FED-QUOTE ||
                           $Select-A-FED-1EB

     move ' AND A.W4_PRCSS = '''       to  $Select-A-FED-2A
     move 'S'                          to  $Select-A-FED-2B
     move ''' '                        to  $Select-A-FED-2C

     let $Select-A-FED-2 = $Select-A-FED-2A || $Select-A-FED-2B ||
                           $Select-A-FED-2C
     move 'AND A.FWT_ADDL_AMT = 0 '    to  $Select-A-FED-3
     move 'AND A.FWT_ADDL_PCT = 0 '    to  $Select-A-FED-4
     move 'ORDER BY A.EMPLID, A.COMPANY, A.EFFDT ASC' to $Order-A-By
  end-if

  if $Program = 'TAX113'
     let $Select-A-Date-Less = $Duedt
     let $Select-A-Date-Greater = $JAN01DT

     move ' A.EFFDT = (SELECT MAX(EFFDT) FROM PS_FED_TAX_DATA A1 '
         to $Select-A-FED-1A
     move  '  WHERE  A1.EMPLID  = A.EMPLID '   to  $Select-A-FED-1B
     move ' AND A1.COMPANY = A.COMPANY '       to $Select-A-FED-1C
     move ' AND A1.EFFDT <= '''                to  $Select-A-FED-1D

     move $Select-A-Date-Less                  to $Select-A-Fed-1DA

     move ''' '                                to  $Select-A-FED-QUOTE
     move ' AND A1.EFFDT >= '''                to  $Select-A-FED-1E
     move $Select-A-Date-Greater               to $Select-A-FED-1EA
     move ')'                                  to  $Select-A-FED-1EB
     let $Select-A-FED-1 = $Select-A-FED-1A || $Select-A-FED-1B ||
                           $Select-A-FED-1C ||  $Select-A-FED-1D ||
                           $Select-A-FED-1DA || $Select-A-FED-QUOTE   || $Select-A-FED-1E ||
                           $Select-A-FED-1EA || $Select-A-FED-QUOTE   || $Select-A-FED-1EB

     move 'AND A.W5_PRCSS = '''        to  $Select-A-FED-2A
     move 'S'                          to  $Select-A-FED-2B
     move ''' '                        to  $Select-A-FED-2C
     let $Select-A-FED-2 = $Select-A-FED-2A || $Select-A-FED-2B ||
                           $Select-A-FED-2C
     move 'AND A.EIC_STATUS <> '''     to  $Select-A-FED-3A
     move 'N'                          to  $Select-A-FED-3B
     move ''' '                        to  $Select-A-FED-3C
     let $Select-A-FED-3 = $Select-A-FED-3A || $Select-A-FED-3B ||
                           $Select-A-FED-3C

     move ' '                          to  $Select-A-FED-4
     move 'ORDER BY A.EMPLID, A.COMPANY, A.EFFDT ASC' to $Order-A-By
  end-if

  if $Program = 'TAX504'
     move ' A.COMPANY = '''                    to  $Select-A-FED-1A
     move $COMP.COMPANY                        to  $Select-A-FED-1B
     move ''' '                                to  $Select-A-FED-1C
     let $Select-A-FED-1 = $Select-A-FED-1A || $Select-A-FED-1B ||
                           $Select-A-FED-1C
     move ' AND A.EMPLID = '''                 to  $Select-A-FED-2A
     move $PERS.EMPLID                         to  $Select-A-FED-2B
     move ''' '                                to  $Select-A-FED-2C
     let $Select-A-FED-2 = $Select-A-FED-2A || $Select-A-FED-2B ||
                           $Select-A-FED-2C

     move  'AND A.EFFDT = (SELECT MAX(EFFDT) FROM PS_FED_TAX_DATA A1 ' to $Select-A-FED-3A
     move  '  WHERE  A1.EMPLID  = '''          to  $Select-A-FED-3B
     move   $PERS.EMPLID                       to  $Select-A-FED-3C
     move ''' '                                to  $Select-A-FED-3-Quote
     move ' AND A1.COMPANY = '''               to  $Select-A-FED-3D
     move  $COMP.COMPANY                       to  $Select-A-FED-3E
     move ' AND A1.EFFDT < '''                 to  $Select-A-FED-3F
     move $AsOfDate                            to  $Select-A-FED-3G
     move ''')'                                to  $Select-A-FED-3H

     let $Select-A-FED-3 = $Select-A-FED-3A || $Select-A-FED-3B ||
         $Select-A-FED-3C || $Select-A-FED-3-Quote || $Select-A-FED-3D ||
         $Select-A-FED-3E || $Select-A-FED-3-Quote || $Select-A-FED-3F ||
         $Select-A-FED-3G || $Select-A-FED-3H
     move ' '                                  to  $Select-A-Fed-4
     move ' '                                  to $Order-A-By
  end-if

  if $Program = 'TAX516AZ'
     move 'N' to $FedSyncFlag
     move ' A.COMPANY = '''                    to  $Select-A-FED-1A
     move $COMPANY                             to  $Select-A-FED-1B
     move ''' '                                to  $Select-A-FED-1C
     let $Select-A-FED-1 = $Select-A-FED-1A || $Select-A-FED-1B ||
                           $Select-A-FED-1C
     move ' AND A.EMPLID = '''                 to  $Select-A-FED-2A
     move $EMPLID                              to  $Select-A-FED-2B
     move ''' '                                to  $Select-A-FED-2C
     let $Select-A-FED-2 = $Select-A-FED-2A || $Select-A-FED-2B ||
                           $Select-A-FED-2C

     move  'AND A.EFFDT = '''                  to  $Select-A-FED-3A
     move $EFFDT                               to  $Select-A-FED-3B
     move ''' '                                to  $Select-A-FED-3C

     let $Select-A-FED-3 = $Select-A-FED-3A || $Select-A-FED-3B ||
         $Select-A-FED-3C
     move ' '                                  to  $Select-A-Fed-4
     move ' '                                  to  $Order-A-By
  end-if

  if $Program = 'TAX516OK'
     move 'N' to $FedSyncFlag
     move ' A.COMPANY = '''                    to  $Select-A-FED-1A
     move $COMPANY                             to  $Select-A-FED-1B
     move ''' '                                to  $Select-A-FED-1C
     let $Select-A-FED-1 = $Select-A-FED-1A || $Select-A-FED-1B ||
                           $Select-A-FED-1C
     move ' AND A.EMPLID = '''                 to  $Select-A-FED-2A
     move $EMPLID                              to  $Select-A-FED-2B
     move ''' '                                to  $Select-A-FED-2C
     let $Select-A-FED-2 = $Select-A-FED-2A || $Select-A-FED-2B ||
                           $Select-A-FED-2C

     move  'AND A.EFFDT = '''                  to  $Select-A-FED-3A
     move $EFFDT                               to  $Select-A-FED-3B
     move ''' '                                to  $Select-A-FED-3C

     let $Select-A-FED-3 = $Select-A-FED-3A || $Select-A-FED-3B ||
         $Select-A-FED-3C
     move ' '                                  to  $Select-A-Fed-4
     move ' '                                  to  $Order-A-By
  end-if

begin-SELECT
A.EMPLID,
A.COMPANY,
A.EFFDT,
A.DATE_OF_ENTRY,
A.SPECIAL_FWT_STATUS,
A.FWT_MAR_STATUS,
A.FWT_ALLOWANCES,
A.FWT_ADDL_AMT,
A.FWT_ADDL_PCT,
A.FUT_EXEMPT,
A.EIC_STATUS,
A.STATUTORY_EE,
A.DECEASED,
A.PENSION_PLAN,
A.LEGAL_REP,
A.DEFERRED_COMP,
A.USE_TOTAL_WAGE,
A.LAST_ACTION,
A.W5_PRCSS,
A.W4_PRCSS,
A.LOCK_IN_RECVD,
A.LOCK_IN_LIMIT,
A.COUNTRY,
A.TREATY_ID,
A.TREATY_EXP_DT,
A.FORM_1001_RECD,
A.FORM_1001_SUBMT_DT,
A.FORM_1001_EXP_DT,
A.FORM_8233_RECD,
A.FORM_8233_SUBMT_DT,
A.FORM_8233_EXP_DT,
A.TAXPAYER_ID_NO,
A.FORM_1078_RECD,
A.FORM_1078_SUBMT_DT,
A.THIRDPARTY_SICKPAY,
A.W4_NAME_CHECK,
A.PY_FLAG_FOR_IRS,
A.PY_FLAG_FOR_IRS_DT,
A.MARRIED_FILE_SINGL,
A.NRA_EXEMPT_WHRULE,
A.NQDC_W2_RPTG

  if $Program = 'TAX103'
     do Emplid-Check-A
     if &A.W4_PRCSS = 'W' and &A.EFFDT <= $FEB15dt
       let $Notify='N'
     end-if
  end-if
  if $Program = 'TAX113'
     do Emplid-Check-A
     if &A.W5_PRCSS = 'W' and &A.EFFDT <= $Duedt
       let $Notify='N'
     end-if
  end-if
  if $Program = 'TAX516AZ'

    if $AlreadyUpdated = 'Y'
      let $err-flag = 'Y'
      do AlreadyUpdated
    else
      if &A.EFFDT < $EFFDT
        do Fed-State-Sync
        let $err-flag = 'Y'
      else
        move &A.EFFDT to $A.EFFDT
        move 'Y' to $AlreadyUpdated
      end-if
    end-if

    move 'Y' to $FedSyncFlag
  end-if

  if $Program = 'TAX516OK'

    move &A.FWT_MAR_STATUS  to $FWTMarStatus
    if $AlreadyUpdated = 'Y'
      let $err-flag = 'Y'
      do AlreadyUpdated
    else
      if &A.EFFDT < $EFFDT
        do Fed-State-Sync
        let $err-flag = 'Y'
      else
        move &A.EFFDT to $A.EFFDT
        move 'Y' to $AlreadyUpdated
      end-if
    end-if

    move 'Y' to $FedSyncFlag
  end-if

FROM PS_FED_TAX_DATA A
WHERE
  [$Select-A-FED-1]
  [$Select-A-FED-2]
  [$Select-A-FED-3]
  [$Select-A-FED-4]
  [$Order-A-By]
end-SELECT

  evaluate $Program
     when = 'TAX516AZ'
     when = 'TAX516OK'

       if $FedSyncFlag = 'N'
         do Fed-State-Sync
         let $err-flag = 'Y'
       end-if
       move '                           ' to $error
       break

  end-evaluate

end-procedure


begin-procedure Select-FED-Data-B

  if $Program = 'TAX103'
     let $Select-B-Date-Less = $FEB15DT
     let $Select-B-Date-Greater = $JAN01DT

     move ' AND ( B.EFFDT = (SELECT MAX(EFFDT) FROM PS_FED_TAX_DATA B1 '
         to $Select-B-FED-1A
     move '  WHERE  B1.EMPLID  = B.EMPLID '    to  $Select-B-FED-1B
     move ' AND B1.COMPANY = B.COMPANY '       to  $Select-B-FED-1C
     move ' AND B1.EFFDT <= '''                to  $Select-B-FED-1D

     move $Select-B-Date-Less                  to  $Select-B-Fed-1DA

     move ''' '                                to  $Select-B-FED-QUOTE
     move ' AND B1.EFFDT >= '''                to  $Select-B-FED-1E
     move $Select-B-Date-Greater               to  $Select-B-FED-1EA
     move ')'                                  to  $Select-B-FED-1EB
     move ' OR B.EFFDT > '''                   to  $Select-B-FED-1F

     let $Select-B-FED-1 = $Select-B-FED-1A || $Select-B-FED-1B ||
                           $Select-B-FED-1C || $Select-B-FED-1D ||
                           $Select-B-FED-1DA || $Select-B-FED-QUOTE || $Select-B-FED-1E ||
                           $Select-B-FED-1EA || $Select-B-FED-QUOTE || $Select-B-FED-1EB ||
                           $Select-B-FED-1F || $Select-B-FED-1DA || $Select-B-FED-QUOTE ||
                           $Select-B-FED-1EB

     let $Select-B-FED-2 = ' AND B.W4_PRCSS = '|| '''S'''
     let $Select-B-FED-3 = ' AND B.FWT_ADDL_AMT = 0 '
     let $Select-B-FED-4 = ' AND B.FWT_ADDL_PCT = 0 '
  end-if

  if $Program = 'TAX113'
     let $Select-B-Date-Less = $Duedt
     let $Select-B-Date-Greater = $JAN01DT

     move ' AND B.EFFDT = (SELECT MAX(EFFDT) FROM PS_FED_TAX_DATA B1 '
         to $Select-B-FED-1A
     move '  WHERE  B1.EMPLID  = B.EMPLID '    to  $Select-B-FED-1B
     move ' AND B1.COMPANY = B.COMPANY '       to  $Select-B-FED-1C
     move ' AND B1.EFFDT <= '''                to  $Select-B-FED-1D

     move $Select-B-Date-Less                  to  $Select-B-Fed-1DA

     move ''' '                                to  $Select-B-FED-QUOTE
     move ' AND B1.EFFDT >= '''                to  $Select-B-FED-1E
     move $Select-B-Date-Greater               to  $Select-B-FED-1EA
     move ')'                                  to  $Select-B-FED-1EB

     let $Select-B-FED-1 = $Select-B-FED-1A || $Select-B-FED-1B ||
                           $Select-B-FED-1C || $Select-B-FED-1D ||
                           $Select-B-FED-1DA || $Select-B-FED-QUOTE || $Select-B-FED-1E ||
                           $Select-B-FED-1EA || $Select-B-FED-QUOTE || $Select-B-FED-1EB

     let $Select-B-FED-2 = ' AND B.W5_PRCSS = ' || '''S'''
     let $Select-B-FED-3 = ' AND B.EIC_STATUS <> ' || '''N'''
     let $Select-B-FED-4 = ''
  end-if

begin-SELECT
B.EMPLID,
B.COMPANY,
B.EFFDT,
B.DATE_OF_ENTRY,
B.SPECIAL_FWT_STATUS,
B.FWT_MAR_STATUS,
B.FWT_ALLOWANCES,
B.FWT_ADDL_AMT,
B.FWT_ADDL_PCT,
B.FUT_EXEMPT,
B.EIC_STATUS,
B.STATUTORY_EE,
B.DECEASED,
B.PENSION_PLAN,
B.LEGAL_REP,
B.DEFERRED_COMP,
B.USE_TOTAL_WAGE,
B.LAST_ACTION,
B.W5_PRCSS,
B.W4_PRCSS,
B.LOCK_IN_RECVD,
B.LOCK_IN_LIMIT,
B.COUNTRY,
B.TREATY_ID,
B.TREATY_EXP_DT,
B.FORM_1001_RECD,
B.FORM_1001_SUBMT_DT,
B.FORM_1001_EXP_DT,
B.FORM_8233_RECD,
B.FORM_8233_SUBMT_DT,
B.FORM_8233_EXP_DT,
B.TAXPAYER_ID_NO,
B.FORM_1078_RECD,
B.FORM_1078_SUBMT_DT,
B.THIRDPARTY_SICKPAY,
B.W4_NAME_CHECK,
B.PY_FLAG_FOR_IRS,
B.PY_FLAG_FOR_IRS_DT,
B.MARRIED_FILE_SINGL,
B.NRA_EXEMPT_WHRULE,
B.NQDC_W2_RPTG


  if $Program = 'TAX103'
    do Emplid-Check-B
    if &B.W4_PRCSS = 'W' and &B.EFFDT <= $FEB15dt
       let $Notify='N'
    end-if
  end-if
  if $Program = 'TAX113'
     do EMPLID-Check-B
     if &B.W5_PRCSS = 'W' and &B.EFFDT <= $Duedt
       let $Notify='N'
     end-if
  end-if


FROM PS_FED_TAX_DATA B
WHERE B.COMPANY = $SCompany
  [$Select-B-FED-1]
  [$Select-B-FED-2]
  [$Select-B-FED-3]
  [$Select-B-FED-4]
ORDER BY
B.EMPLID,
B.COMPANY,
B.EFFDT ASC
end-SELECT

end-procedure

begin-procedure Insert-New-Fed-Row

  Evaluate $Program

    When = 'TAX103'
    When = 'TAX113'
      do Populate-TAX103-TAX113-Fields
      break
    When = 'TAX504'
    When = 'TAX516AZ'
    When = 'TAX516OK'
      do Populate-FED-Fields
      break
  end-evaluate

  let $sql-statement = 'Insert-New-Fed-Row,Insert into PS_FED_TAX_DATA'
BEGIN-SQL on-error = SQL-Error
INSERT INTO PS_FED_TAX_DATA
(EMPLID,
COMPANY,
EFFDT,
SPECIAL_FWT_STATUS,
FWT_MAR_STATUS,
FWT_ALLOWANCES,
FWT_ADDL_AMT,
FWT_ADDL_PCT,
FUT_EXEMPT,
EIC_STATUS,
STATUTORY_EE,
DECEASED,
PENSION_PLAN,
LEGAL_REP,
DEFERRED_COMP,
USE_TOTAL_WAGE,
LAST_ACTION,
W4_PRCSS,
W5_PRCSS,
LOCK_IN_RECVD,
LOCK_IN_LIMIT,
LAST_UPDATE_DATE,
DATE_OF_ENTRY,
COUNTRY,
FORM_1001_RECD,
FORM_1001_SUBMT_DT,
FORM_1001_EXP_DT,
FORM_8233_RECD,
FORM_8233_SUBMT_DT,
FORM_8233_EXP_DT,
TAXPAYER_ID_NO,
TREATY_EXP_DT,
TREATY_ID,
FORM_1078_RECD,
FORM_1078_SUBMT_DT,
THIRDPARTY_SICKPAY,
W4_NAME_CHECK,
PY_FLAG_FOR_IRS,
PY_FLAG_FOR_IRS_DT,
CREATION_DT,
MARRIED_FILE_SINGL,
NRA_EXEMPT_WHRULE,
NQDC_W2_RPTG
)
VALUES
($UPD_EMPLID,
$UPD_COMPANY,
$UPD_EFFDT,
$UPD_SPECIAL_FWT_STATUS,
$UPD_FWT_MAR_STATUS,
#UPD_FWT_ALLOWANCES,
#UPD_FWT_ADDL_AMT,
#UPD_FWT_ADDL_PCT,
$UPD_FUT_EXEMPT,
$UPD_EIC_STATUS,
$UPD_STATUTORY_EE,
$UPD_DECEASED,
$UPD_PENSION_PLAN,
$UPD_LEGAL_REP,
$UPD_DEFERRED_COMP,
$UPD_USE_TOTAL_WAGE,
$UPD_LAST_ACTION,
$UPD_W4_PRCSS,
$UPD_W5_PRCSS,
$UPD_LOCK_IN_RECVD,
#UPD_LOCK_IN_LIMIT,
$UPD_LAST_UPDATE_DATE,
$UPD_DATE_OF_ENTRY,
$UPD_COUNTRY,
$UPD_FORM_1001_RECD,
$UPD_FORM_1001_SUBMT_DT,
$UPD_FORM_1001_EXP_DT,
$UPD_FORM_8233_RECD,
$UPD_FORM_8233_SUBMT_DT,
$UPD_FORM_8233_EXP_DT,
$UPD_TAXPAYER_ID_NO,
$UPD_TREATY_EXP_DT,
$UPD_TREATY_ID,
$UPD_FORM_1078_RECD,
$UPD_FORM_1078_SUBMT_DT,
$UPD_THIRDPARTY_SICKPAY,
$UPD_W4_NAME_CHECK,
$UPD_PY_FLAG_FOR_IRS,
$UPD_PY_FLAG_FOR_IRS_DT,
$UPD_CREATION_DT,
$UPD_MARRIED_FILE_SINGL,
$UPD_NRA_EXEMPT_WHRULE,
$UPD_NQDC_W2_RPTG
)
END-SQL

  if $Program = 'TAX516AZ'

     move 'Y' to $InsertedFed
  end-if

  if $Program = 'TAX516OK'

     move 'Y' to $InsertedFed
  end-if

end-procedure

begin-procedure Populate-TAX103-TAX113-Fields

  let $UPD_EMPLID = $GEMPLID
  let $UPD_COMPANY = $GCOMPANY
  let $UPD_EFFDT = $Udate
  let $UPD_SPECIAL_FWT_STATUS = $GFWTSTATUS
  let $UPD_FWT_MAR_STATUS = $GMARSTATUS
  let #UPD_FWT_ALLOWANCES = #GFWTALLW
  let #UPD_FWT_ADDL_AMT = #GADDLAMT
  let #UPD_FWT_ADDL_PCT = #GADDLPCT
  let $UPD_FUT_EXEMPT = $GFUT_EXEMPT
  let $UPD_EIC_STATUS = $GEIC_STATUS
  let $UPD_STATUTORY_EE = $GSTATUTORY_EE
  let $UPD_DECEASED = $GDECEASED
  let $UPD_PENSION_PLAN = $GPENSION_PLAN
  let $UPD_LEGAL_REP = $GLEGAL_REP
  let $UPD_DEFERRED_COMP = $GDEFERRED_COMP
  let $UPD_USE_TOTAL_WAGE = $GUSE_TOTAL_WAGE
  let $UPD_LAST_ACTION = 'C'
  let $UPD_W4_PRCSS = $GW4PRCSS
  let $UPD_W5_PRCSS = $GW5PRCSS
  let $UPD_LOCK_IN_RECVD = $GLOCK_IN_RECVD
  let #UPD_LOCK_IN_LIMIT = #GLOCK_IN_LIMIT
  let $UPD_LAST_UPDATE_DATE =   $AsOfToday
  let $UPD_DATE_OF_ENTRY = $GDATE_OF_ENTRY
  let $UPD_COUNTRY = $GCOUNTRY
  let $UPD_FORM_1001_RECD = $GFORM_1001_RECD
  let $UPD_FORM_1001_SUBMT_DT = $GFORM_1001_SUBMT
  let $UPD_FORM_1001_EXP_DT = $GFORM_1001_EXP_DT
  let $UPD_FORM_8233_RECD = $GFORM_8233_RECD
  let $UPD_FORM_8233_SUBMT_DT = $GFORM_8233_SUBMT
  let $UPD_FORM_8233_EXP_DT = $GFORM_8233_EXP_DT
  let $UPD_TAXPAYER_ID_NO = $GTAXPAYER_ID_NO
  let $UPD_TREATY_EXP_DT = $GTREATY_EXP_DT
  let $UPD_TREATY_ID = $GTREATY_ID
  let $UPD_FORM_1078_RECD = $GFORM_1078_RECD
  let $UPD_FORM_1078_SUBMT_DT = $GFORM_1078_SUBMT
  let $UPD_THIRDPARTY_SICKPAY = $GTHIRDPARTY_SICKPAY
  let $UPD_W4_NAME_CHECK = 'N'
  let $UPD_PY_FLAG_FOR_IRS = 'N'
!  let $UPD_PY_FLAG_FOR_IRS_DT = NULL
  let $UPD_CREATION_DT = $AsOfToday
  let $UPD_MARRIED_FILE_SINGL = $GMARRIED_FILE_SINGL
  let $UPD_NRA_EXEMPT_WHRULE = $GNRA_EXEMPT_WHRULE
  let $UPD_NQDC_W2_RPTG = $GNQDC_W2_RPTG

  if $Program = 'TAX103'
     do Last-Valid-Form-W-4
     
     let $UPD_SPECIAL_FWT_STATUS = 'N'
!    let $UPD_FWT_MAR_STATUS = 'S'
!    let #UPD_FWT_ALLOWANCES = 0
!    let #UPD_FWT_ADDL_AMT = 0
!    let #UPD_FWT_ADDL_PCT = 0
     let $UPD_FWT_MAR_STATUS = $PMARSTATUS
     let #UPD_FWT_ALLOWANCES = #PFWTALLW
     let #UPD_FWT_ADDL_AMT   = #PFWTAMT
     let #UPD_FWT_ADDL_PCT   = #PFWTPCT 
     let $UPD_W4_PRCSS = 'N'
  end-if

  if $Program = 'TAX113'
    !let $UPD_FUT_EXEMPT = 'N'
     let $UPD_W5_PRCSS = 'N'
     let $UPD_EIC_STATUS = 'N'
  end-if
end-procedure

begin-procedure Populate-FED-Fields

  let $Prior_EFFDT = &A.EFFDT

  let $UPD_EMPLID = &A.EMPLID
  let $UPD_COMPANY = &A.COMPANY
  let $UPD_EFFDT = $AsOfDate
  let $UPD_SPECIAL_FWT_STATUS = &A.SPECIAL_FWT_STATUS
  let $UPD_FWT_MAR_STATUS = &A.FWT_MAR_STATUS
  let #UPD_FWT_ALLOWANCES = &A.FWT_ALLOWANCES
  let #UPD_FWT_ADDL_AMT = &A.FWT_ADDL_AMT
  let #UPD_FWT_ADDL_PCT = &A.FWT_ADDL_PCT
  let $UPD_FUT_EXEMPT = &A.FUT_EXEMPT
  let $UPD_EIC_STATUS = &A.EIC_STATUS
  let $UPD_STATUTORY_EE = &A.STATUTORY_EE
  let $UPD_DECEASED = &A.DECEASED
  let $UPD_PENSION_PLAN = &A.PENSION_PLAN
  let $UPD_LEGAL_REP = &A.LEGAL_REP
  let $UPD_DEFERRED_COMP = &A.DEFERRED_COMP
  let $UPD_USE_TOTAL_WAGE = &A.USE_TOTAL_WAGE
  let $UPD_LAST_ACTION = &A.LAST_ACTION
  let $UPD_W4_PRCSS = &A.W4_PRCSS
  let $UPD_W5_PRCSS = &A.W5_PRCSS
  let $UPD_LOCK_IN_RECVD = &A.LOCK_IN_RECVD
  let #UPD_LOCK_IN_LIMIT = &A.LOCK_IN_LIMIT
  let $UPD_LAST_UPDATE_DATE =   $AsOfToday
  let $UPD_DATE_OF_ENTRY = &A.DATE_OF_ENTRY
  let $UPD_COUNTRY = &A.COUNTRY
  let $UPD_FORM_1001_RECD = &A.FORM_1001_RECD
  let $UPD_FORM_1001_SUBMT_DT = &A.FORM_1001_SUBMT_DT
  let $UPD_FORM_1001_EXP_DT = &A.FORM_1001_EXP_DT
  let $UPD_FORM_8233_RECD = &A.FORM_8233_RECD
  let $UPD_FORM_8233_SUBMT_DT = &A.FORM_8233_SUBMT_DT
  let $UPD_FORM_8233_EXP_DT = &A.FORM_8233_EXP_DT
  let $UPD_TAXPAYER_ID_NO = &A.TAXPAYER_ID_NO
  let $UPD_TREATY_EXP_DT = &A.TREATY_EXP_DT
  let $UPD_TREATY_ID = &A.TREATY_ID
  let $UPD_FORM_1078_RECD = &A.FORM_1078_RECD
  let $UPD_FORM_1078_SUBMT_DT = &A.FORM_1078_SUBMT_DT
  let $UPD_THIRDPARTY_SICKPAY = &A.THIRDPARTY_SICKPAY
  let $UPD_W4_NAME_CHECK = &A.W4_NAME_CHECK
  let $UPD_PY_FLAG_FOR_IRS = &A.PY_FLAG_FOR_IRS
!  let $UPD_PY_FLAG_FOR_IRS_DT = NULL
  let $UPD_CREATION_DT = $AsOfToday
  let $UPD_MARRIED_FILE_SINGL = &A.MARRIED_FILE_SINGL
  let $UPD_NRA_EXEMPT_WHRULE = &A.NRA_EXEMPT_WHRULE
  let $UPD_NQDC_W2_RPTG = &A.NQDC_W2_RPTG

  if $Program = 'TAX504'
     let $UPD_PENSION_PLAN = $Pension_Plan_Found
     let $UPD_DEFERRED_COMP = $Deferred_Comp
     let $UPD_THIRDPARTY_SICKPAY = $Third_Party_Sick
  let $UPD_LAST_ACTION = 'C'
  end-if
  if $Program = 'TAX516AZ'
     let $sql-statement = 'TAX516AZ.SQR,Insert-New-Fed-Tax-Row,Insert,PS_FED_TAX_DATA'
     let $UPD_EFFDT = $NewEffDt
   end-if
   if $Program = 'TAX516OK'
     let $sql-statement = 'TAX516OK.SQR,Insert-New-Fed-Tax-Row,Insert,PS_FED_TAX_DATA'
     let $UPD_EFFDT = $NewEffDt
   end-if
end-procedure

begin-procedure Get-State-Tax-Data

  Evaluate $Program

    When = 'TAX103'
    When = 'TAX113'
      move ' C.EMPLID = '''        to  $Select-A-Get-STATE-1A
      move $UPD_EMPLID             to  $Select-A-Get-STATE-1B
      move ''' '                   to  $Select-A-Get-STATE-1C
      let $Select-A-Get-STATE-1 =  $Select-A-Get-STATE-1A   ||
                                   $Select-A-Get-STATE-1B  ||   $Select-A-Get-STATE-1C
      move 'AND C.COMPANY = '''    to  $Select-A-Get-STATE-2A
      move $UPD_COMPANY            to  $Select-A-Get-STATE-2B
      move ''' '                   to  $Select-A-Get-STATE-2C
      let $Select-A-Get-STATE-2 =  $Select-A-Get-STATE-2A   ||
                                   $Select-A-Get-STATE-2B  ||   $Select-A-Get-STATE-2C
      move 'AND C.EFFDT = '''      to  $Select-A-Get-STATE-3A
      move $GEFFDT                 to  $Select-A-Get-STATE-3B
      move ''' '                   to  $Select-A-Get-STATE-3C
      let $Select-A-Get-STATE-3 =  $Select-A-Get-STATE-3A  ||
                                   $Select-A-Get-STATE-3B  ||   $Select-A-Get-STATE-3C
      move ' '                     to  $Select-A-Get-STATE-4
      break
    When = 'TAX504'
      move ' C.EMPLID = '''        to  $Select-A-Get-STATE-1A
      move $UPD_EMPLID             to  $Select-A-Get-STATE-1B
      move ''' '                   to  $Select-A-Get-STATE-1C
      let $Select-A-Get-STATE-1 =  $Select-A-Get-STATE-1A   ||
                                   $Select-A-Get-STATE-1B  ||   $Select-A-Get-STATE-1C
      move 'AND C.COMPANY = '''    to  $Select-A-Get-STATE-2A
      move $UPD_COMPANY            to  $Select-A-Get-STATE-2B
      move ''' '                   to  $Select-A-Get-STATE-2C
      let $Select-A-Get-STATE-2 =  $Select-A-Get-STATE-2A   ||
                                   $Select-A-Get-STATE-2B  ||   $Select-A-Get-STATE-2C
      move 'AND C.EFFDT = '''      to  $Select-A-Get-STATE-3A
      move $Prior_EFFDT            to  $Select-A-Get-STATE-3B
      move ''' '                   to  $Select-A-Get-STATE-3C
      let $Select-A-Get-STATE-3 =  $Select-A-Get-STATE-3A   || $Select-A-Get-STATE-3B  ||
                                   $Select-A-Get-STATE-3C
      move ' '                     to  $Select-A-Get-STATE-4
      break
    When = 'TAX516AZ'
      move 'N' to $UpdateNeeded
      move 'N' to $InsertedFed
      move ' C.EMPLID = '''       to  $Select-A-Get-STATE-1A
      move $EMPLID                to  $Select-A-Get-STATE-1B
      move ''' '                  to  $Select-A-Get-STATE-1C
      let $Select-A-Get-STATE-1 =  $Select-A-Get-STATE-1A   ||
                                   $Select-A-Get-STATE-1B  ||   $Select-A-Get-STATE-1C
      move 'AND C.COMPANY = '''   to  $Select-A-Get-STATE-2A
      move $COMPANY               to  $Select-A-Get-STATE-2B
      move ''' '                  to  $Select-A-Get-STATE-2C
      let $Select-A-Get-STATE-2 =  $Select-A-Get-STATE-2A   ||
                                   $Select-A-Get-STATE-2B  ||   $Select-A-Get-STATE-2C
      move 'AND C.STATE = '''     to  $Select-A-Get-STATE-3A
      move 'AZ'                   to  $Select-A-Get-STATE-3B
      move ''' '                  to  $Select-A-Get-STATE-3C
      let $Select-A-Get-STATE-3 =  $Select-A-Get-STATE-3A   || $Select-A-Get-STATE-3B  ||
                                   $Select-A-Get-STATE-3C
      move 'AND C.EFFDT = '''   to  $Select-A-Get-STATE-4A
      move $EFFDT               to  $Select-A-Get-STATE-4B
      move ''' '                  to  $Select-A-Get-STATE-4C
      let $Select-A-Get-STATE-4 =  $Select-A-Get-STATE-4A   || $Select-A-Get-STATE-4B  ||
                                   $Select-A-Get-STATE-4C
      break

    When = 'TAX516OK'
      move 'N' to $UpdateNeeded
      move 'N' to $InsertedFed
      move ' C.EMPLID = '''       to  $Select-A-Get-STATE-1A
      move $EMPLID                to  $Select-A-Get-STATE-1B
      move ''' '                  to  $Select-A-Get-STATE-1C
      let $Select-A-Get-STATE-1 =  $Select-A-Get-STATE-1A   ||
                                   $Select-A-Get-STATE-1B  ||   $Select-A-Get-STATE-1C
      move 'AND C.COMPANY = '''   to  $Select-A-Get-STATE-2A
      move $COMPANY               to  $Select-A-Get-STATE-2B
      move ''' '                  to  $Select-A-Get-STATE-2C
      let $Select-A-Get-STATE-2 =  $Select-A-Get-STATE-2A   ||
                                   $Select-A-Get-STATE-2B  ||   $Select-A-Get-STATE-2C
      move 'AND C.STATE = '''     to  $Select-A-Get-STATE-3A
      move 'OK'                   to  $Select-A-Get-STATE-3B
      move ''' '                  to  $Select-A-Get-STATE-3C
      let $Select-A-Get-STATE-3 =  $Select-A-Get-STATE-3A   || $Select-A-Get-STATE-3B  ||
                                   $Select-A-Get-STATE-3C
      move 'AND C.EFFDT = '''   to  $Select-A-Get-STATE-4A
      move $EFFDT               to  $Select-A-Get-STATE-4B
      move ''' '                  to  $Select-A-Get-STATE-4C
      let $Select-A-Get-STATE-4 =  $Select-A-Get-STATE-4A   || $Select-A-Get-STATE-4B  ||
                                   $Select-A-Get-STATE-4C
      break
    end-evaluate

begin-SELECT
C.EMPLID,
C.COMPANY,
C.EFFDT,
C.STATE,
C.RESIDENT,
C.NON_RES_DECLARED,
C.SPECIAL_SWT_STATUS,
C.SWT_MAR_STATUS,
C.SWT_ALLOWANCES,
C.SWT_ADDL_ALLOWNCES,
C.WAGE_PLAN_CD,
C.ANNL_EXEMPTION_AMT,
C.PERCENT_OF_FWT,
C.SWT_ADDL_AMT,
C.SWT_ADDL_PCT,
C.SDI_STATUS,
C.SUT_EXEMPT,
C.UI_JURISDICTION,
C.ADDL_AMT_ADJ,
C.WT4A_FILED,
C.LOCK_IN_RECVD,
C.LOCK_IN_LIMIT,
C.RETIREMENT_PLAN,
C.EIC_STATUS_ST,
C.HLTH_COV_IND,
C.PNA_FLI_STATUS,
C.RES_ADDL_ALLOW

  Evaluate $Program
    when = 'TAX103'
    when = 'TAX113'
    when = 'TAX504'
      do Insert-New-St-Row
      break
    when = 'TAX516AZ'

      let $C.State = RTRIM(&C.State,' ')
      if $C.STATE = 'AZ'
        do Process-State
      end-if
      break
    when = 'TAX516OK'
      do Process-State
      break
  end-evaluate

FROM PS_STATE_TAX_DATA C
WHERE [$Select-A-Get-STATE-1]
      [$Select-A-Get-STATE-2]
      [$Select-A-Get-STATE-3]
      [$Select-A-Get-STATE-4]
end-SELECT

end-procedure

begin-procedure Insert-New-St-Row

  do Populate-State

  let $sql-statement = 'Insert-New-St-Row,Insert into PS_STATE_TAX_DATA'
BEGIN-SQL on-error = SQL-Error
INSERT INTO PS_STATE_TAX_DATA
(EMPLID,
COMPANY,
EFFDT,
STATE,
RESIDENT,
NON_RES_DECLARED,
SPECIAL_SWT_STATUS,
SWT_MAR_STATUS,
SWT_ALLOWANCES,
SWT_ADDL_ALLOWNCES,
WAGE_PLAN_CD,
ANNL_EXEMPTION_AMT,
PERCENT_OF_FWT,
SWT_ADDL_AMT,
SWT_ADDL_PCT,
SDI_STATUS,
SUT_EXEMPT,
UI_JURISDICTION,
ADDL_AMT_ADJ,
WT4A_FILED,
LOCK_IN_RECVD,
LOCK_IN_LIMIT,
RETIREMENT_PLAN,
EIC_STATUS_ST,
HLTH_COV_IND,
PNA_FLI_STATUS,
RES_ADDL_ALLOW,
CREATION_DT)
VALUES
($UPD_ST_EMPLID,
$UPD_ST_COMPANY,
$UPD_ST_EFFDT,
$UPD_ST_STATE,
$UPD_ST_RESIDENT,
$UPD_ST_NON_RES_DECLARED,
$UPD_ST_SPECIAL_SWT_STATUS,
$UPD_ST_SWT_MAR_STATUS,
#UPD_ST_SWT_ALLOWANCES,
#UPD_ST_SWT_ADDL_ALLOWNCES,
$UPD_ST_WAGE_PLAN_CD,
#UPD_ST_ANNL_EXEMPTION_AMT,
#UPD_ST_PERCENT_OF_FWT,
#UPD_ST_SWT_ADDL_AMT,
#UPD_ST_SWT_ADDL_PCT,
$UPD_ST_SDI_STATUS,
$UPD_ST_SUT_EXEMPT,
$UPD_ST_UI_JURISDICTION,
$UPD_ST_ADDL_AMT_ADJ,
$UPD_ST_WT4A_FILED,
$UPD_ST_LOCK_IN_RECVD,
#UPD_ST_LOCK_IN_LIMIT,
$UPD_ST_RETIREMENT_PLAN,
$UPD_ST_EIC_STATUS_ST,
$UPD_ST_HLTH_COV_IND,
$UPD_ST_PNA_FLI_STATUS,
#UPD_ST_RES_ADDL_ALLOW,
$UPD_ST_CREATION_DT)
end-sql

  Evaluate $Program
     when = 'TAX516AZ'
     when = 'TAX516OK'
       do Get-Other-State-Data
       break

  end-evaluate

end-procedure

begin-procedure Populate-State

  let $UPD_ST_EMPLID = &C.EMPLID
  let $UPD_ST_COMPANY = &C.COMPANY
  let $UPD_ST_EFFDT = &C.EFFDT
  let $UPD_ST_STATE = &C.STATE
  let $UPD_ST_RESIDENT =  &C.RESIDENT
  let $UPD_ST_NON_RES_DECLARED = &C.NON_RES_DECLARED
  let $UPD_ST_SPECIAL_SWT_STATUS = &C.SPECIAL_SWT_STATUS
  let $UPD_ST_SWT_MAR_STATUS = &C.SWT_MAR_STATUS
  let #UPD_ST_SWT_ALLOWANCES = &C.SWT_ALLOWANCES
  let #UPD_ST_SWT_ADDL_ALLOWNCES = &C.SWT_ADDL_ALLOWNCES
  let $UPD_ST_WAGE_PLAN_CD = &C.WAGE_PLAN_CD
  let #UPD_ST_ANNL_EXEMPTION_AMT = &C.ANNL_EXEMPTION_AMT
  let #UPD_ST_PERCENT_OF_FWT =  &C.PERCENT_OF_FWT
  let #UPD_ST_SWT_ADDL_AMT = &C.SWT_ADDL_AMT
  let #UPD_ST_SWT_ADDL_PCT = &C.SWT_ADDL_PCT
  let $UPD_ST_SDI_STATUS =  &C.SDI_STATUS
  let $UPD_ST_SUT_EXEMPT = &C.SUT_EXEMPT
  let $UPD_ST_UI_JURISDICTION =  &C.UI_JURISDICTION
  let $UPD_ST_ADDL_AMT_ADJ = &C.ADDL_AMT_ADJ
  let $UPD_ST_WT4A_FILED = &C.WT4A_FILED
  let $UPD_ST_LOCK_IN_RECVD =  &C.LOCK_IN_RECVD
  let #UPD_ST_LOCK_IN_LIMIT =  &C.LOCK_IN_LIMIT
  let $UPD_ST_RETIREMENT_PLAN = &C.RETIREMENT_PLAN
  let $UPD_ST_EIC_STATUS_ST = &C.EIC_STATUS_ST
  let $UPD_ST_HLTH_COV_IND = &C.HLTH_COV_IND
  let $UPD_ST_PNA_FLI_STATUS = &C.PNA_FLI_STATUS
  let #UPD_ST_RES_ADDL_ALLOW = &C.RES_ADDL_ALLOW
  let $UPD_ST_CREATION_DT = $AsOfToday

  Evaluate $Program
    When = 'TAX103'
    When = 'TAX113'
      let $UPD_ST_EFFDT = $Udate
      break
    When = 'TAX504'
      let $UPD_ST_EFFDT = $AsOfDate
      break
    When = 'TAX516AZ'
      let $UPD_ST_EFFDT = $NewEffDt
      if $UpdateNeeded = 'Y'  and $ActionType = 'U'
        let #UPD_ST_PERCENT_OF_FWT =  #NewPercent
      end-if
      break
    When = 'TAX516OK'
      let $UPD_ST_EFFDT = $NewEffDt
      if $UpdateNeeded = 'Y'  and $ActionType = 'U'
        let $UPD_ST_SWT_MAR_STATUS =  $NewStatus
      end-if
      break

  end-evaluate

end-procedure


begin-procedure Get-Other-State-Data

    Evaluate $Program
    When = 'TAX516AZ'
      move ' C2.EMPLID = '''      to  $Select-Get-STATE-1A
      move $EMPLID                to  $Select-Get-STATE-1B
      move ''' '                  to  $Select-Get-STATE-1C
      let $Select-Get-STATE-1 =  $Select-Get-STATE-1A   ||
                                 $Select-Get-STATE-1B  ||   $Select-Get-STATE-1C
      move 'AND C2.COMPANY = '''  to  $Select-Get-STATE-2A
      move $COMPANY               to  $Select-Get-STATE-2B
      move ''' '                  to  $Select-Get-STATE-2C
      let $Select-Get-STATE-2 =  $Select-Get-STATE-2A   ||
                                 $Select-Get-STATE-2B  ||   $Select-Get-STATE-2C
      move 'AND C2.STATE <> '''   to  $Select-Get-STATE-3A
      move 'AZ'                   to  $Select-Get-STATE-3B
      move ''' '                  to  $Select-Get-STATE-3C
      let $Select-Get-STATE-3 =  $Select-Get-STATE-3A   || $Select-Get-STATE-3B  ||
                                 $Select-Get-STATE-3C
      move 'AND C2.EFFDT = '''    to  $Select-Get-STATE-4A
      move $EFFDT                 to  $Select-Get-STATE-4B
      move ''' '                  to  $Select-Get-STATE-4C
      let $Select-Get-STATE-4 =  $Select-Get-STATE-4A   || $Select-Get-STATE-4B  ||
                                 $Select-Get-STATE-4C
      break

    When = 'TAX516OK'
      move ' C2.EMPLID = '''      to  $Select-Get-STATE-1A
      move $EMPLID                to  $Select-Get-STATE-1B
      move ''' '                  to  $Select-Get-STATE-1C
      let $Select-Get-STATE-1 =  $Select-Get-STATE-1A   ||
                                 $Select-Get-STATE-1B  ||   $Select-Get-STATE-1C
      move 'AND C2.COMPANY = '''  to  $Select-Get-STATE-2A
      move $COMPANY               to  $Select-Get-STATE-2B
      move ''' '                  to  $Select-Get-STATE-2C
      let $Select-Get-STATE-2 =  $Select-Get-STATE-2A   ||
                                 $Select-Get-STATE-2B  ||   $Select-Get-STATE-2C
      move 'AND C2.STATE <> '''   to  $Select-Get-STATE-3A
      move 'OK'                   to  $Select-Get-STATE-3B
      move ''' '                  to  $Select-Get-STATE-3C
      let $Select-Get-STATE-3 =  $Select-Get-STATE-3A   || $Select-Get-STATE-3B  ||
                                 $Select-Get-STATE-3C
      move 'AND C2.EFFDT = '''    to  $Select-Get-STATE-4A
      move $EFFDT                 to  $Select-Get-STATE-4B
      move ''' '                  to  $Select-Get-STATE-4C
      let $Select-Get-STATE-4 =  $Select-Get-STATE-4A   || $Select-Get-STATE-4B  ||
                                 $Select-Get-STATE-4C
      break
    end-evaluate


begin-SELECT
C2.EMPLID,
C2.COMPANY,
C2.EFFDT,
C2.STATE,
C2.RESIDENT,
C2.NON_RES_DECLARED,
C2.SPECIAL_SWT_STATUS,
C2.SWT_MAR_STATUS,
C2.SWT_ALLOWANCES,
C2.SWT_ADDL_ALLOWNCES,
C2.WAGE_PLAN_CD,
C2.ANNL_EXEMPTION_AMT,
C2.PERCENT_OF_FWT,
C2.SWT_ADDL_AMT,
C2.SWT_ADDL_PCT,
C2.SDI_STATUS,
C2.SUT_EXEMPT,
C2.UI_JURISDICTION,
C2.ADDL_AMT_ADJ,
C2.WT4A_FILED,
C2.LOCK_IN_RECVD,
C2.LOCK_IN_LIMIT,
C2.RETIREMENT_PLAN,
C2.EIC_STATUS_ST,
C2.HLTH_COV_IND,
C2.PNA_FLI_STATUS,
C2.RES_ADDL_ALLOW

   if $ActionType = 'U' AND $UpdateNeeded = 'Y'
        if $InsertedFed = 'N'
          do Insert-New-Fed-Row
        end-if
       do Insert-State-Other-Tax-Row
    end-if
    move '                           ' to $error

FROM PS_STATE_TAX_DATA C2
WHERE [$Select-Get-STATE-1]
  [$Select-Get-STATE-2]
  [$Select-Get-STATE-3]
  [$Select-Get-STATE-4]
end-SELECT

END-PROCEDURE

begin-procedure Insert-State-Other-Tax-Row

  let $sql-statement = 'Insert-State-Other-Tax-Row,Insert into PS_STATE_TAX_DATA'
BEGIN-SQL on-error = SQL-Error
INSERT INTO PS_STATE_TAX_DATA
(EMPLID,
COMPANY,
EFFDT,
STATE,
RESIDENT,
NON_RES_DECLARED,
SPECIAL_SWT_STATUS,
SWT_MAR_STATUS,
SWT_ALLOWANCES,
SWT_ADDL_ALLOWNCES,
WAGE_PLAN_CD,
ANNL_EXEMPTION_AMT,
PERCENT_OF_FWT,
SWT_ADDL_AMT,
SWT_ADDL_PCT,
SDI_STATUS,
SUT_EXEMPT,
UI_JURISDICTION,
ADDL_AMT_ADJ,
WT4A_FILED,
LOCK_IN_RECVD,
LOCK_IN_LIMIT,
RETIREMENT_PLAN,
EIC_STATUS_ST,
HLTH_COV_IND,
PNA_FLI_STATUS,
RES_ADDL_ALLOW,
CREATION_DT)
VALUES
(&C2.EMPLID,
&C2.COMPANY,
$NewEffDt,
&C2.STATE,
&C2.RESIDENT,
&C2.NON_RES_DECLARED,
&C2.SPECIAL_SWT_STATUS,
&C2.SWT_MAR_STATUS,
&C2.SWT_ALLOWANCES,
&C2.SWT_ADDL_ALLOWNCES,
&C2.WAGE_PLAN_CD,
&C2.ANNL_EXEMPTION_AMT,
&C2.PERCENT_OF_FWT,
&C2.SWT_ADDL_AMT,
&C2.SWT_ADDL_PCT,
&C2.SDI_STATUS,
&C2.SUT_EXEMPT,
&C2.UI_JURISDICTION,
&C2.ADDL_AMT_ADJ,
&C2.WT4A_FILED,
&C2.LOCK_IN_RECVD,
&C2.LOCK_IN_LIMIT,
&C2.RETIREMENT_PLAN,
&C2.EIC_STATUS_ST,
&C2.HLTH_COV_IND,
&C2.PNA_FLI_STATUS,
&C2.RES_ADDL_ALLOW,
$AsOfToday)
end-sql


end-procedure


begin-procedure Get-Local-Tax-Data

  Evaluate $Program

    When = 'TAX103'
    When = 'TAX113'
      move 'WHERE D.EMPLID = '''  to  $Select-A-LOCAL-1A
      move $UPD_EMPLID            to  $Select-A-LOCAL-1B
      move ''' '                  to  $Select-A-LOCAL-1C
      let $Select-A-LOCAL-1 =  $Select-A-LOCAL-1A   || $Select-A-LOCAL-1B  ||   $Select-A-LOCAL-1C
      move 'AND D.COMPANY = '''   to  $Select-A-LOCAL-2A
      move $UPD_COMPANY           to  $Select-A-LOCAL-2B
      move ''' '                  to  $Select-A-LOCAL-2C
      let $Select-A-LOCAL-2 =  $Select-A-LOCAL-2A   || $Select-A-LOCAL-2B  ||   $Select-A-LOCAL-2C
      move $GEFFDT                to  $Select-A-LOCAL-3
      break
    When = 'TAX504'
      move 'WHERE D.EMPLID = '''  to  $Select-A-LOCAL-1A
      move $UPD_EMPLID            to  $Select-A-LOCAL-1B
      move ''' '                  to  $Select-A-LOCAL-1C
      let $Select-A-LOCAL-1 =  $Select-A-LOCAL-1A   || $Select-A-LOCAL-1B  ||   $Select-A-LOCAL-1C
      move 'AND D.COMPANY = '''   to  $Select-A-LOCAL-2A
      move $UPD_COMPANY           to  $Select-A-LOCAL-2B
      move ''' '                  to  $Select-A-LOCAL-2C
      let $Select-A-LOCAL-2 =  $Select-A-LOCAL-2A   || $Select-A-LOCAL-2B  ||   $Select-A-LOCAL-2C
      move $Prior_EFFDT           to  $Select-A-LOCAL-3
      break
    When = 'TAX516AZ'
      let $sql-statement = 'TAX516AZ.SQR,Insert-Local-Tax-Row,Insert,PS_LOCAL_TAX_DATA'
      move 'WHERE D.EMPLID = '''  to  $Select-A-LOCAL-1A
      move $EMPLID                to  $Select-A-LOCAL-1B
      move ''' '                  to  $Select-A-LOCAL-1C
      let $Select-A-LOCAL-1 =  $Select-A-LOCAL-1A   || $Select-A-LOCAL-1B  ||   $Select-A-LOCAL-1C
      move 'AND D.COMPANY = '''   to  $Select-A-LOCAL-2A
      move $COMPANY               to  $Select-A-LOCAL-2B
      move ''' '                  to  $Select-A-LOCAL-2C
      let $Select-A-LOCAL-2 =  $Select-A-LOCAL-2A   || $Select-A-LOCAL-2B  ||   $Select-A-LOCAL-2C
      move $EFFDT                 to  $Select-A-LOCAL-3
      break
    When = 'TAX516OK'
     let $sql-statement = 'TAX516OK.SQR,Insert-Local-Tax-Row,Insert,PS_LOCAL_TAX_DATA'
      move 'WHERE D.EMPLID = '''  to  $Select-A-LOCAL-1A
      move $EMPLID                to  $Select-A-LOCAL-1B
      move ''' '                  to  $Select-A-LOCAL-1C
      let $Select-A-LOCAL-1 =  $Select-A-LOCAL-1A   || $Select-A-LOCAL-1B  ||   $Select-A-LOCAL-1C
      move 'AND D.COMPANY = '''   to  $Select-A-LOCAL-2A
      move $COMPANY               to  $Select-A-LOCAL-2B
      move ''' '                  to  $Select-A-LOCAL-2C
      let $Select-A-LOCAL-2 =  $Select-A-LOCAL-2A   || $Select-A-LOCAL-2B  ||   $Select-A-LOCAL-2C
      move $EFFDT                 to  $Select-A-LOCAL-3
      break
  end-evaluate

begin-SELECT
D.EMPLID,
D.COMPANY,
D.EFFDT
D.STATE,
D.LOCALITY,
D.RESIDENT,
D.LWT_ALLOWANCES,
D.LWT_AMT,
D.LWT_PCT,
D.LOCALITY_LINK,
D.SPECIAL_LWT_STATUS,
D.LWT_MAR_STATUS

  Evaluate $Program
  when = 'TAX103'
  when = 'TAX113'
  when = 'TAX504'
    do Insert-Local-Record
    break
   when = 'TAX516AZ'
     if $ActionType = 'U'  and $UpdateNeeded = 'Y'
       do Insert-Local-Record
     end-if
     break
   when = 'TAX516OK'
     if $ActionType = 'U'  and $UpdateNeeded = 'Y'
       do Insert-Local-Record
     end-if
     break

  end-evaluate

FROM PS_LOCAL_TAX_DATA D
[$Select-A-LOCAL-1]
[$Select-A-LOCAL-2]
  AND D.EFFDT   = $Select-A-LOCAL-3
end-SELECT
end-procedure

begin-procedure Insert-Local-Record

  do Populate-Local

  let $sql-statement = 'Insert-Local-Record,Insert into PS_LOCAL_TAX_DATA'
BEGIN-SQL on-error = SQL-Error
INSERT INTO PS_LOCAL_TAX_DATA
(EMPLID,
 COMPANY,
 EFFDT,
 STATE,
 LOCALITY,
 RESIDENT,
 LWT_ALLOWANCES,
 LWT_AMT,
 LWT_PCT,
 LOCALITY_LINK,
 SPECIAL_LWT_STATUS,
 LWT_MAR_STATUS,
 CREATION_DT)
 VALUES
($UPD_LC_EMPLID,
 $UPD_LC_COMPANY,
 $UPD_LC_EFFDT,
 $UPD_LC_STATE,
 $UPD_LC_LOCALITY,
 $UPD_LC_RESIDENT,
 #UPD_LC_LWT_ALLOWANCES,
 #UPD_LC_LWT_AMT,
 #UPD_LC_LWT_PCT,
 $UPD_LC_LOCALITY_LINK,
 $UPD_LC_SPECIAL_LWT_STATUS,
 $UPD_LC_LWT_MAR_STATUS,
 $UPD_LC_CREATION_DT)
end-sql
end-procedure

begin-procedure  Populate-Local
  let $UPD_LC_EMPLID = &D.EMPLID
  let $UPD_LC_COMPANY = &D.COMPANY
  let $UPD_LC_EFFDT = &D.EFFDT
  let $UPD_LC_STATE = &D.STATE
  let $UPD_LC_LOCALITY = &D.LOCALITY
  let $UPD_LC_RESIDENT = &D.RESIDENT
  let #UPD_LC_LWT_ALLOWANCES = &D.LWT_ALLOWANCES
  let #UPD_LC_LWT_AMT = &D.LWT_AMT
  let #UPD_LC_LWT_PCT = &D.LWT_PCT
  let $UPD_LC_LOCALITY_LINK = &D.LOCALITY_LINK
  let $UPD_LC_SPECIAL_LWT_STATUS = &D.SPECIAL_LWT_STATUS
  let $UPD_LC_LWT_MAR_STATUS = &D.LWT_MAR_STATUS
  let $UPD_LC_CREATION_DT = $AsOfToday

  Evaluate $Program

    When = 'TAX103'
    When = 'TAX113'
      let $UPD_LC_EFFDT = $Udate
      break
    When = 'TAX504'
      let $UPD_LC_EFFDT = $AsOfDate
      break
    When = 'TAX516AZ'
    When = 'TAX516OK'
      let $UPD_LC_EFFDT = $NewEffDt
  end-evaluate

end-procedure

begin-procedure Last-Valid-Form-W-4

     let $PMARSTATUS = 'S'
     let #PFWTALLW   = 0
     let #PFWTAMT    = 0
     let #PFWTPCT    = 0
     
begin-SELECT
E.EMPLID,
E.COMPANY,
E.EFFDT,
E.SPECIAL_FWT_STATUS,
E.FWT_MAR_STATUS,
E.FWT_ALLOWANCES,
E.FWT_ADDL_AMT,
E.FWT_ADDL_PCT

     let $PMARSTATUS = &E.FWT_MAR_STATUS
     let #PFWTALLW   = &E.FWT_ALLOWANCES
     let #PFWTAMT    = &E.FWT_ADDL_AMT
     let #PFWTPCT    = &E.FWT_ADDL_PCT  

FROM PS_FED_TAX_DATA E
WHERE E.EMPLID  = $GEMPLID  
  AND E.COMPANY = $GCOMPANY
  AND E.EFFDT   = (SELECT MAX(EFFDT)
                   FROM PS_FED_TAX_DATA E1
                   WHERE E1.EMPLID  = E.EMPLID
                     AND E1.COMPANY = E.COMPANY
                     AND E1.SPECIAL_FWT_STATUS = 'N')
end-SELECT
end-procedure

#include 'sqlerr.sqc'     !SQL error processing
