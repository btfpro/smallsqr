!***********************************************
!  CMP007:  Automated Step Increase            *
!***********************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:11:32:52                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
Begin-Setup
#Include 'ptpsl177.sqc'  !Printer and page-size initialization
End-Setup

#define col1   1         !Emplid
#define col2   13        !Name
#define col3   54        !Prev Effdt

#define col31   65        !Prev Seq

#define col4   69        !Prev Plan
#define col5   78        !Prev Grade
#define col6   84        !Prev Step
#define col6a  92        !Prev Setp Entry Dt
#define col7   114       !New Effdt

#define col71   125       !New Seq

#define col8   129       !New Plan
#define col9   139       !New Grade
#define col10  145       !New Step
#define col10a 153       !New Step Entry Dt

#define PERSON_NAME
#define BUS_UNIT_TBL_HR
#define SAL_PLAN_TBL
#define GB_GROUP_TBL
#define PSXLATITEM
#include 'rellang.sqc'

!-----------------------------------------------------------------------
begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

!-----------------------------------------------------------------------
begin-procedure Init-Report
  move 'CMP007' to $ReportID
  do Stdapi-Init
  if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

  if $prcs_process_instance <> ''
    do select-parameters
  end-if
do Init_Printer
do Init_Report_translation ($ReportID, $language_cd)
do Append_Report_Translation ('HR')
last1:
end-procedure

!-----------------------------------------------------------------------
begin-heading 9

do Get_Field_Information ('CMP007', 'REPORT_TITLE', $REPORTTITLE, #DW)
do Get_Field_Information ('CMP007', 'EMPLID', $EMPL, #DW)
do Get_Field_Information ('CMP007', 'NAME', $EMPLNAME, #DW)
do Get_Field_Information ('CMP007', 'NEW', $NEW, #DW)
do Get_Field_Information ('CMP007', 'PREV', $PREV, #DW)
do Get_Field_Information ('CMP007', 'NEW_EFF', $NEW_EFF, #DW)
do Get_Field_Information ('CMP007', 'PREV_EFF', $PREV_EFF, #DW)
do Get_Field_Information ('CMP007', 'EFFSEQ', $EFFSEQ, #DW)
do Get_Field_Information ('CMP007', 'SAL_ADMIN_PLAN', $PLAN, #DW)
do Get_Field_Information ('CMP007', 'GRADE', $GRADE, #DW)
do Get_Field_Information ('CMP007', 'STEP', $STEP, #DW)
do Get_Field_Information ('CMP007', 'STEP_ENTRY_DT', $STEP_ENTRY_DT, #DW)
do Get_Field_Information ('CMP007', 'DATE', $DATE, #DW)

do Get_Field_Information ('CMP007', 'FROMDATE', $FROM_DATE, #DW)
do Get_Field_Information ('CMP007', 'THRUDATE', $THRU_DATE, #DW)
do Get_Field_Information ('CMP007', 'SP_INCREM_TYPE', $SP_INCREM_TYPE, #DW)
do Get_Field_Information ('CMP007', 'NEW_JOB_EFFDT', $NEW_JOB_EFFDT, #DW)
do Get_Field_Information ('HR', 'BUS_UNIT', $BUS_UNIT, #DW)
do Get_Field_Information ('HR', 'GROUP_ID', $GROUP_ID, #DW)
do Get_Field_Information ('HR', 'SAL_ADMIN_PLAN', $SP, #DW)

#Include 'stdhdg01.sqc'

 ! Step Increment Type
   LET $H1 = ' '
   STRING $SP_INCREM_TYPE $IncremTypeDescr BY ': ' INTO $H1
   print $H1 (3,1)

 ! Dates
   LET $DateBased = ' '
   LET $HourBased = ' '
   STRING $FROM_DATE ': ' $FROMDT ' - ' $THRU_DATE ': ' $THRUDT BY '' INTO $DateBased 
   STRING $NEW_JOB_EFFDT $JOBDT BY ': ' INTO $HourBased 
   IF $IncremType = 'D'
      print  $DateBased (3,) center
      else
          IF $IncremType = 'H'
             print  $HourBased (3,) center
          else
             IF $IncremType = 'E'
                print  $DateBased (3,) center
                print  $HourBased (+1,) center
             end-if
          END-IF
   END-IF
   
 ! Process By   
   LET $H1 = ' '
   IF $PROCESS_BY = 'G' 
      STRING $GROUP_ID ': ' $GROUP ' ' $GB_GROUP_TBL-DESCR BY '' INTO $H1 
      print $H1 (4,1)
   ELSE
      IF $PROCESS_BY = 'L' 
         LET $H2 = ' '
         STRING $BUS_UNIT ': ' $BU ' ' $BUS_UNIT_TBL_HR-DESCR BY '' INTO $H1
         print  $H1 (4,1)
         LET $H1 = ' '
         STRING $SP ': ' $SAL_PLAN ' ' $SAL_PLAN_TBL-DESCR BY '' INTO $H1 
         print  $H1 (+1,1)
     END-IF
   END-IF

  print $PREV           (6,{col4})
  print $NEW            (6,{col8})
  print '-----------------------------------------------'  (7,{col3},99)
  print '------------------------------------------------'  (7,{col7})
  print $EMPL           (8,{col1},11)
  print $EMPLNAME       (8,{col2},40)
  print $PREV_EFF       (8,{col3},13)
  print $PLAN           (8,{col4},10)
  print $GRADE          (8,{col5},5)
  print $STEP           (8,{col6},7)
  print $STEP_ENTRY_DT  (8,{col6a},21)
  print $NEW_EFF        (8,{col7},13)
  print $PLAN           (8,{col8},9)
  print $GRADE          (8,{col9},5)
  print $STEP           (8,{col10},7)
  print $STEP_ENTRY_DT  (8,{col10a})

  print $DATE           (9,{col3},13)
  print $EFFSEQ         (9,{col31},3)

  print $DATE           (9,{col7},13)
  print $EFFSEQ         (9,{col71},3)

  print $DATE           (9,{col6a})
  print $DATE           (9,{col10a})

end-heading

!-----------------------------------------------------------------------
begin-procedure Get-Values

  let $language_cd = $prcs_language_cd
  let $OPRID = &RUN_CNTL_HR.OPRID
  let $RUN_CNTL_ID = &RUN_CNTL_HR.RUN_CNTL_ID

let $IncremType = ' '
begin-select
SP_INCREM_TYPE
 let $IncremType  = RTRIM(&SP_INCREM_TYPE, ' ')
FROM PS_RUN_CNTL_HR_SP
WHERE OPRID = $OPRID AND RUN_CNTL_ID = $RUN_CNTL_ID
END-SELECT

 if $IncremType = 'H'
    let $AsOfDate = &RUN_CNTL_HR.JOB_EFFDT
 else
    let $AsOfDate = &RUN_CNTL_HR.THRUDATE
 end-if

 ! Step Increment Type
  let $FieldName = 'SP_INCREM_TYPE'
  let $FieldValue = $IncremType
  do Read-Translate-Table
  LET $PSXLATITEM-XLATLONGNAME = $XlatLongName
  DO  Get_Related_PSXLATITEM($AsOfDate,$FieldName,$FieldValue)
  let $IncremTypeDescr = $PSXLATITEM-XLATLONGNAME

 ! Date Based
  let $FROMDATE  = RTRIM(&RUN_CNTL_HR.FROMDATE, ' ')
  let $THRUDATE  = RTRIM(&RUN_CNTL_HR.THRUDATE, ' ')
  do Format-DateTime($FROMDATE, $FROMDT, {DEFDATE}, '', '')
  do Format-DateTime($THRUDATE, $THRUDT, {DEFDATE}, '', '')

 ! Hours Based
  let $JobEffdt  = RTRIM(&RUN_CNTL_HR.JOB_EFFDT, ' ')
  do Format-DateTime($JobEffdt, $JOBDT, {DEFDATE}, '', '')

  let $PROCESS_BY  = RTRIM(&RUN_CNTL_HR.PROCESS_BY, ' ')

 ! Process by Group
  let $GROUP  = RTRIM(&RUN_CNTL_HR.GB_GROUP_ID, ' ')

 ! Process by Plan
  let $BU  = RTRIM(&RUN_CNTL_HR.BUSINESS_UNIT, ' ')
  let $SAL_PLAN  = RTRIM(&RUN_CNTL_HR.SAL_ADMIN_PLAN, ' ')

 IF $PROCESS_BY = 'G' 
   ! Get Group definition
     let $GB_Group_ID = $GROUP
     let $AsOfDate = $THRUDATE
     do Get-GB-Group-Descr
     LET $GB_GROUP_TBL-DESCR = $Group_Descr
     DO Get_Related_GB_GROUP_TBL($THRUDATE, $GROUP)
 ELSE
     IF $PROCESS_BY = 'L' 
        ! Get Sal Admin Plan definition
          do Get-Business-Unit-Name
          LET $BUS_UNIT_TBL_HR-DESCR = $BU_DESCR
          DO Get_Related_BUS_UNIT_TBL_HR($BU)
          do Get-Setid  ($BU, 'SAL_PLAN_TBL', $Setid)
          do Get-Plan-Descr ($Setid, $SAL_PLAN, $THRUDATE, $PLAN_DESCR)
          LET $SAL_PLAN_TBL-DESCR = $PLAN_DESCR
          DO Get_Related_SAL_PLAN_TBL($THRUDATE, $SAL_PLAN,$Setid)
     END-IF
 END-IF

end-procedure

!-----------------------------------------------------------------------
begin-procedure Process-Main

begin-SELECT
B.NAME
T.EMPLID
T.EMPL_RCD
T.EFFDT
T.EFFSEQ
T.SAL_ADMIN_PLAN
T.GRADE
T.STEP
T.STEP_ENTRY_DT
T.EFFDT_USED
T.OLD_PLAN
T.OLD_GRADE
T.OLD_STEP
T.OLD_ST_ENTRY_DT
T.JOB_EFFSEQ

  let $PERSON_NAME-NAME = &B.NAME

  !do Get_Related_PERSON_NAME(&T.EMPLID)

  do Write-Report

FROM  PS_CMP007_TMP T,
      PS_PERSON_NAME B
WHERE T.OPRID = $OPRID
AND   T.RUN_CNTL_ID = $RUN_CNTL_ID
AND   T.EMPLID = B.EMPLID
end-SELECT
end-procedure

!-----------------------------------------------------------------------
begin-procedure Get-Plan-Descr ($Setid, $SAL_PLAN, $FROMDATE, :$PLAN_DESCR)
begin-SELECT
A.DESCR 
 LET $PLAN_DESCR = &A.DESCR
FROM PS_SAL_PLAN_TBL A 
WHERE A.SETID = $Setid AND A.SAL_ADMIN_PLAN = $SAL_PLAN
AND A.EFFDT = (SELECT MAX(B.EFFDT) 
               FROM PS_SAL_PLAN_TBL B 
               WHERE A.SETID = B.SETID AND A.SAL_ADMIN_PLAN = B.SAL_ADMIN_PLAN AND B.EFFDT <= $FROMDATE)
end-SELECT
end-procedure

!-----------------------------------------------------------------------
begin-procedure Write-Report

  print &T.EMPLID                  (+1,{col1},11)
  print $PERSON_NAME-NAME          (0,{col2},40)

 ! Previous Job Data
  do Format-DateTime(&T.EFFDT_USED, $out, {DEFDATE}, '', '')
  print $out                       (0,{col3},13)
  print &T.JOB_EFFSEQ              (0,{col31},2)
  print &T.OLD_PLAN                (0,{col4},10)
  print &T.OLD_GRADE               (0,{col5},5)
  do Format-Number(&T.OLD_STEP, $out, '99')
  print $out                       (0,{col6},7)
  do Format-DateTime(&T.OLD_ST_ENTRY_DT, $out, {DEFDATE}, '', '')
  print $out                       (0,{col6a},21)

 ! New Job Data
  do Format-DateTime(&T.EFFDT, $out, {DEFDATE}, '', '')
  print $out                       (0,{col7},13)
  print &T.EFFSEQ                   (0,{col71},2)
  print &T.SAL_ADMIN_PLAN          (0,{col8},9)
  print &T.GRADE                   (0,{col9},5)
  do Format-Number(&T.STEP, $out, '99')
  print $out                       (0,{col10},7)
  do Format-DateTime(&T.STEP_ENTRY_DT, $out, {DEFDATE}, '', '')
  print $out                       (0,{col10a})

end-procedure

!-----------------------------------------------------------------------
#Include 'getgbgrp.sqc'  !Get GB Group Description
#Include 'getsetid.sqc'  !Get Set Id from the Tableset Record Detail
#Include 'getbunam.sqc'  !Get Business Unit Name from the BUS_UNIT_TBL_HR
#Include 'hrrnctl1.sqc'  !Get run control parameter values
#Include 'hrgetval.sqc'  !Get values mask routines
#Include 'reset.sqc'     !Reset printer
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'datemath.sqc'  ! ROUTINES FOR DATEMATH
#Include 'number.sqc'    !Routines to format numbers
#Include 'curdttim.sqc'  !Routines to get current date/time
#Include 'stdapi.sqc'    !Routines to Update Run Status
#include 'hrsecty.sqc'   !Get SQR Security parameters
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
#Include 'readxlat.sqc'  !Read the Translate Table for the desired values. 
