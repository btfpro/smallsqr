!***********************************************************************
!  UVPUT03:  Rel 9 Upgrade - EE Garn Payee Data                        *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      !
!                $Date:  2006/05/25:16:23:46                           !
!             $Release:  HR9                                           !
!            $Revision:  102                                           !
!                                                                      !
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#include 'setup32.sqc'  !printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


begin-procedure Init-Report
  move 'UVPYT03' to $ReportID

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  do Get-Report-Language
  move $UVPYT03_ReportTitle to $ReportTitle
  display ' '
  display $ReportTitle
  display ' '

end-procedure


! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation
! Read from UVPYT03 program ids
  do Init_Report_Translation($ReportID,$language_cd)

  do Get_Field_Information ('UVPYT03', 'REPORT_TITLE',  $Uvpyt03_ReportTitle, #dummy_width)
  do Get_Field_Information ('UVPYT03', 'SECTION_A1',    $Uvpyt03_SectionA1,   #dummy_width)
  do Get_Field_Information ('UVPYT03', 'SECTION_A2',    $Uvpyt03_SectionA2,   #dummy_width)
  do Get_Field_Information ('UVPYT03', 'SECTION_B1',    $Uvpyt03_SectionB1,   #dummy_width)
  do Get_Field_Information ('UVPYT03', 'SECTION_B2',    $Uvpyt03_SectionB2,   #dummy_width)
  do Get_Field_Information ('UVPYT03', 'NOTE_FIX',      $Uvpyt03_NoteFix,     #dummy_width)
  do Get_Field_Information ('UVPYT03', 'NOTE_FIX_A',    $Uvpyt03_NoteFixA,    #dummy_width)
  do Get_Field_Information ('UVPYT03', 'NOTE_FIX_B',    $Uvpyt03_NoteFixB,    #dummy_width)
  do Get_Field_Information ('UVPYT03', 'NOTE_FIX_C',    $Uvpyt03_NoteFixC,    #dummy_width)
  do Get_Field_Information ('UVPYT03', 'NOTE_HIST',     $Uvpyt03_NoteHist,    #dummy_width)
  do Get_Field_Information ('UVPYT03', 'NOTE_HIST_A',   $Uvpyt03_NoteHistA,   #dummy_width)
  do Get_Field_Information ('UVPYT03', 'NOTE',          $Uvpyt03_Note,        #dummy_width)
  do Get_Field_Information ('UVPYT03', 'EMPLID',        $Uvpyt03_Emplid,      #dummy_width)
  do Get_Field_Information ('UVPYT03', 'COMPANY',       $Uvpyt03_Company,     #dummy_width)
  do Get_Field_Information ('UVPYT03', 'GARNID',        $Uvpyt03_GarnID,      #dummy_width)
  do Get_Field_Information ('UVPYT03', 'STATUS',        $Uvpyt03_Status,      #dummy_width)
  do Get_Field_Information ('UVPYT03', 'SETID',         $Uvpyt03_SetID,       #dummy_width)
  do Get_Field_Information ('UVPYT03', 'VENDOR',        $Uvpyt03_VendorID,    #dummy_width)
  do Get_Field_Information ('UVPYT03', 'VNDR_LOC',      $Uvpyt03_Location,    #dummy_width)
  do Get_Field_Information ('UVPYT03', 'ADDR_SEQ',      $Uvpyt03_AddrSeq,     #dummy_width)
  do Get_Field_Information ('UVPYT03', 'TOTAL_1',       $Uvpyt03_Total1,      #dummy_width)
  do Get_Field_Information ('UVPYT03', 'TOTAL_B1',      $Uvpyt03_TotalB1,     #dummy_width)
  do Get_Field_Information ('UVPYT03', 'TOTAL_B2',      $Uvpyt03_TotalB2,     #dummy_width)

end-procedure


begin-HEADING 12

  #Include 'stdhdgtr.sqc'

  If #Section = 1
     do SectionA1-Heading
  end-if

  If #Section = 2
     do SectionA2-Heading
  end-if

  If #Section = 3
     do SectionB1-Heading
  end-if

  If #Section = 4
     do SectionB2-Heading
  end-if

  do Columns-Heading

end-HEADING

begin-procedure SectionA1-Heading

  print $Uvpyt03_SectionA1      (+2,10)
  print $Uvpyt03_NoteFix        (+2,15)
  print $Uvpyt03_NoteFixA       (+1,15)
  print $Uvpyt03_NoteFixB       (+1,15)
  print $Uvpyt03_NoteFixC       (+1,15)

end-procedure

begin-procedure SectionA2-Heading

  print $Uvpyt03_SectionA2      (+2,10)
  print $Uvpyt03_NoteHist       (+2,15)
  print $Uvpyt03_NoteHistA      (+1,15)
  print ' '                     (+2,15)

end-procedure

begin-procedure SectionB1-Heading

  print $Uvpyt03_SectionB1      (+2,10)
  print $Uvpyt03_NoteFix        (+2,15)
  print $Uvpyt03_NoteFixA       (+1,15)
  print $Uvpyt03_NoteFixB       (+1,15)
  print $Uvpyt03_NoteFixC       (+1,15)

end-procedure

begin-procedure SectionB2-Heading

  print $Uvpyt03_SectionB2      (+2,10)
  print $Uvpyt03_NoteHist       (+2,15)
  print $Uvpyt03_NoteHistA      (+1,15)
  print ' '                     (+2,15)

end-procedure

begin-procedure Columns-Heading

  print $Uvpyt03_Emplid         (+2,10)
  print $Uvpyt03_Company        (0,28)
  print $Uvpyt03_GarnID         (0,46)
  print $Uvpyt03_Status         (0,64)
  print $Uvpyt03_SetID          (0,82)
  print $Uvpyt03_VendorID       (0,100)
  print $Uvpyt03_Location       (0,118)
  print $Uvpyt03_AddrSeq        (0,136)

end-procedure


!***********************************************************************
!  PROC REPORT                                                         *
!         Main Procedure                                               *
!***********************************************************************

BEGIN-PROCEDURE Process-Main

  do Find-Diff-Remit-Vendor
  let $Print_Crit = ' WHERE N.UPG_GARN = ''D'''
  do List-Upgrade-Table

  do List-Diff-Remit-Vendor-Hist

  do Find-Multiple-Loc
  let $Print_Crit = ' WHERE N.UPG_GARN = ''L'''
  do List-Upgrade-Table

  do List-Multiple-Loc-Hist

END-PROCEDURE

!***********************************************************************
!  Find-Diff-Remit-Vendor                                              *
!***********************************************************************

BEGIN-PROCEDURE Find-Diff-Remit-Vendor

  let $Status_Crit = ' AND G.GARN_STATUS IN (''A'', ''R'') '
  let #Section = 1

BEGIN-SELECT
A.SETID
A.VENDOR_ID

  Let $Setid    = &A.SETID
  Let $VendorID = &A.VENDOR_ID

  do Find-Garn-Spec

FROM PS_VENDOR A
 WHERE A.HRMS_CLASS = 'G'
   AND NOT EXISTS (SELECT 'X' FROM PS_VENDOR B
                    WHERE B.SETID = A.REMIT_SETID
                      AND B.VENDOR_ID = A.REMIT_VENDOR)
 ORDER BY A.SETID, A.VENDOR_ID

END-SELECT

END-PROCEDURE

!***********************************************************************
!  List-Diff-Remit-Vendor-Hist                                         *
!***********************************************************************

BEGIN-PROCEDURE List-Diff-Remit-Vendor-Hist

  move 0 to #Count
  let $Status_Crit = ' AND G.GARN_STATUS NOT IN  (''A'', ''R'') '
  New-Page
  let #Section = 2

BEGIN-SELECT
A1.SETID
A1.VENDOR_ID

  Let $Setid    = &A1.SETID
  Let $VendorID = &A1.VENDOR_ID

  do Find-Garn-Spec

FROM PS_VENDOR A1
 WHERE A1.HRMS_CLASS = 'G'
   AND NOT EXISTS (SELECT 'X' FROM PS_VENDOR B1
                    WHERE B1.SETID = A1.REMIT_SETID
                      AND B1.VENDOR_ID = A1.REMIT_VENDOR)
 ORDER BY A1.SETID, A1.VENDOR_ID

END-SELECT

  if #Count = 0
    print $Uvpyt03_Note (+3,10)
  else
    print $Uvpyt03_TotalB1 (+3,10)
    print #Count           (0,103,9) edit b,bbb,bb9
  end-if

END-PROCEDURE

!***********************************************************************
!  Find-Multiple-Loc                                                   *
!***********************************************************************

BEGIN-PROCEDURE Find-Multiple-Loc

  let $Status_Crit = ' AND G.GARN_STATUS IN (''A'', ''R'') '
  New-Page
  let #Section = 3

BEGIN-SELECT
C.SETID
C.VENDOR_ID
COUNT(C.VENDOR_ID) &MultiLoc

  move &C.SETID         to $Setid
  move &C.VENDOR_ID     to $VendorID
  move &MultiLoc        to #MultiLoc

  if #MultiLoc > 1
     do Find-Garn-Spec
  end-if

FROM PS_VENDOR_LOC C
 WHERE EXISTS (SELECT 'X' FROM PS_VENDOR D
                          WHERE D.SETID = C.SETID
                            AND D.VENDOR_ID = C.VENDOR_ID
                            AND D.HRMS_CLASS = 'G')
 GROUP BY C.SETID, C.VENDOR_ID
 ORDER BY COUNT(C.VENDOR_ID) DESC, C.SETID, C.VENDOR_ID

END-SELECT

END-PROCEDURE

!***********************************************************************
!  List-Multiple-Loc-Hist                                              *
!***********************************************************************

BEGIN-PROCEDURE List-Multiple-Loc-Hist

  move 0 to #Count
  let $Status_Crit = ' AND G.GARN_STATUS NOT IN (''A'', ''R'') '
  New-Page
  let #Section = 4

BEGIN-SELECT
C1.SETID
C1.VENDOR_ID
COUNT(C1.VENDOR_ID) &MultiLoc1

  move &C1.SETID         to $Setid
  move &C1.VENDOR_ID     to $VendorID
  move &MultiLoc1        to #MultiLoc

  if #MultiLoc > 1
     do Find-Garn-Spec
  end-if

FROM PS_VENDOR_LOC C1
 WHERE EXISTS (SELECT 'X' FROM PS_VENDOR D1
                          WHERE D1.SETID = C1.SETID
                            AND D1.VENDOR_ID = C1.VENDOR_ID
                            AND D1.HRMS_CLASS = 'G')
 GROUP BY C1.SETID, C1.VENDOR_ID
 ORDER BY COUNT(C1.VENDOR_ID) DESC, C1.SETID, C1.VENDOR_ID

END-SELECT

  if #Count = 0
    print $Uvpyt03_Note (+3,10)
  else
    print $Uvpyt03_TotalB2 (+3,10)
    print #Count           (0,92,9) edit b,bbb,bb9
  end-if

END-PROCEDURE

!***********************************************************************
!  Find-Garn-Spec                                                      *
!***********************************************************************
BEGIN-PROCEDURE Find-Garn-Spec

BEGIN-SELECT
G.EMPLID
G.COMPANY
G.GARNID
G.GARN_STATUS
G.SETID
G.VENDOR_ID
G.VNDR_LOC
G.ADDRESS_SEQ_NUM

  add 1 to #Count

  move &G.EMPLID          to $Emplid
  move &G.COMPANY         to $Company
  move &G.GARNID          to $GarnID

  move 'GARN_STATUS'      to $FieldName
  move &G.Garn_Status     to $FieldValue
  do Read-Translate-Table
  move $XlatShortName     to $GarnStatus

  move &G.SETID           to $SetID
  move &G.VENDOR_ID       to $VendorID
  move &G.VNDR_LOC        to $VndrLoc
  move &G.ADDRESS_SEQ_NUM to $AddressSeq

  if #section = 2 or
     #section = 4
     do Print-Garn-Spec

  else
     if #Section = 1
        move 'D' to $UsedFlag
     end-if

     if #section = 3
        move 'L' to $UsedFlag
     end-if

     do Insert-Upgrade-Table
  end-if

FROM PS_GARN_SPEC G
 WHERE G.SETID = $Setid
   AND G.VENDOR_ID = $VendorId

#ifdef MVS
  \$Status_Crit\
#else
  [$Status_Crit]
#endif

   AND NOT EXISTS (SELECT 'X' FROM PS_UPG_GARN_SPEC U
                    WHERE U.EMPLID         = G.EMPLID
                      AND U.COMPANY        = G.COMPANY
                      AND U.GARNID         = G.GARNID)

ORDER BY G.EMPLID, G.GARNID

END-SELECT
END-PROCEDURE

!***********************************************************************
!  Insert-Upgrade-Table                                                *
!***********************************************************************
BEGIN-PROCEDURE Insert-Upgrade-Table

BEGIN-SQL  on-error=Ignore
  INSERT INTO PS_UPG_GARN_SPEC (UPG_GARN,
                             EMPLID,
                             COMPANY,
                             GARNID,
                             GARN_STATUS,
                             SETID,
                             VENDOR_ID,
                             VNDR_LOC,
                             ADDRESS_SEQ_NUM)
                     VALUES ($UsedFlag,
                             &G.Emplid,
                             &G.Company,
                             &G.Garnid,
                             &G.Garn_Status,
                             &G.Setid,
                             &G.Vendor_Id,
                             &G.Vndr_Loc,
                             &G.Address_Seq_Num)
END-SQL
END-PROCEDURE

BEGIN-PROCEDURE Ignore
  !Dummy procedure to avoid error if zero row selected for processing
END-PROCEDURE

!***********************************************************************
!  List-Upgrade-Table                                                  *
!***********************************************************************

BEGIN-PROCEDURE List-Upgrade-Table

  move 0 to #Count

BEGIN-SELECT
N.EMPLID
N.COMPANY
N.GARNID
N.GARN_STATUS
N.SETID
N.VENDOR_ID
N.VNDR_LOC
N.ADDRESS_SEQ_NUM

  add 1 to #Count

  move &N.EMPLID          to $Emplid
  move &N.COMPANY         to $Company
  move &N.GARNID          to $GarnID

  move 'GARN_STATUS'      to $FieldName
  move &N.Garn_Status     to $FieldValue
  do Read-Translate-Table
  move $XlatShortName     to $GarnStatus

  move &N.SETID           to $Setid
  move &N.VENDOR_ID       to $VendorID
  move &N.VNDR_LOC        to $VndrLoc
  move &N.ADDRESS_SEQ_NUM to $AddressSeq

  do Print-Garn-Spec

FROM PS_UPG_GARN_SPEC N

#ifdef MVS
  \$Print_Crit\
#else
  [$Print_Crit]
#endif

 ORDER BY N.EMPLID, N.COMPANY, N.GARNID

END-SELECT

  if #Count = 0
    print $Uvpyt03_Note   (+3,10)
  else
    print $Uvpyt03_Total1 (+3,10)
    print #Count          (0,68,9) edit b,bbb,bb9
  end-if

END-PROCEDURE

!***********************************************************************
!  Print-Garn-Spec                                                     *
!***********************************************************************
BEGIN-PROCEDURE Print-Garn-Spec

  print $EmplID            (+1,10)
  print $Company           (0,28)
  print $GarnID            (0,46)
  print $GarnStatus        (0,64)
  print $Setid             (0,82)
  print $VendorID          (0,100)
  print $VndrLoc           (0,118)
  print $AddressSeq        (0,136)

END-PROCEDURE

#include 'reset.sqc'     !Reset printer procedure
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'stdapi.sqc'    !Update Process API
#include 'sqrtrans.sqc'  !Translate SQR strings to given language
#include 'getrplng.sqc'  !Get the report language
#include 'readxlat.sqc'  !Read-Translate-Table procedure
