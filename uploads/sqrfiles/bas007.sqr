!****************************************************
! BAS007: Dependent/Beneficiary Election Report
!****************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:08:34:03                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'  !Set Database Environment

Begin-Setup
  #Include 'ptpsp125.sqc'
End-Setup

#define col_emplid              11      !Employee ID
#define col_name                26      !Employee or Dependent Name
#define col_dep_id               3      !Dependent ID
#define col_date                10      !Any Date
#define col_plan_type           12      !Plan Type and Short Description
#define col_benef_pct            3      !Precent Beneficiary Paid
#define col_flat_amt             8      !Flat Amount
#define col_excess               6      !Excess
#define col_contingent          10      !Contingent
#define col_sep                  1      !Column Separator

!*************************************
Begin-Program
!*************************************

  do Init-Report

  display 'Report Begin at: ' noline
  do display-time

  do Process-Main

  display 'Report Ended at: ' noline
  do display-time

  do Reset
  do StdAPI-Term

End-Program

!*************************************
Begin-Procedure Init-Report
!*************************************

  do Init-DateTime
  do Get-Current-DateTime
  do StdAPI-Init

  let $ReportID    = 'BAS007'
  do Get-Report-Language
  let $ReportTitle  = $BAS007-REPORTTITLE
  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ''

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-Values
  end-if

End-Procedure

!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from BAS007 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation('BEN1')

  do Get_Field_Information ('BAS007', 'REPORT_TITLE', $BAS007-REPORTTITLE, #CW)
  do Get_Field_Information ('BAS007', 'DEP',          $BAS007-DEP,         #CW)
  do Get_Field_Information ('BAS007', 'BEN',          $BAS007-BEN,         #CW)
  do Get_Field_Information ('BAS007', 'DEP_BEN_NM',   $BAS007-DEP-BEN-NM,  #CW)
  do Get_Field_Information ('BAS007', 'PCT',          $BAS007-PCT,         #CW)
  do Get_Field_Information ('BAS007', 'EXCESS',       $BAS007-EXCESS,      #CW)
  do Get_Field_Information ('BAS007', 'CONTNG',       $BAS007-CONTNG,      #CW)

  do Get_Field_Information ('BEN1',   'EMPLOYEE',     $BEN1-EMPLOYEE,      #CW)
  do Get_Field_Information ('BEN1',   'NAME',         $BEN1-NAME,          #CW)
  do Get_Field_Information ('BEN1',   'EVENT',        $BEN1-EVENT,         #CW)
  do Get_Field_Information ('BEN1',   'ID',           $BEN1-ID,            #CW)
  do Get_Field_Information ('BEN1',   'FLAT',         $BEN1-FLAT,          #CW)
  do Get_Field_Information ('BEN1',   'DATE',         $BEN1-DATE,          #CW)
  do Get_Field_Information ('BEN1',   'PLAN_TYPE',    $BEN1-PLAN-TYPE,     #CW)
  do Get_Field_Information ('BEN1',   'WORK',         $BEN1-WORK,          #CW)
  do Get_Field_Information ('BEN1',   'HOME',         $BEN1-HOME,          #CW)
  do Get_Field_Information ('BEN1',   'DESCR1',       $BEN1-DESCR1,        #CW)
  do Get_Field_Information ('BEN1',   'AMT1',         $BEN1-AMT1,          #CW)

End-Procedure

!*************************************
Begin-Procedure Ask-Values
!*************************************

   do Ask-Schedule-Id

End-Procedure

!*************************************
Begin-Procedure Get-Values
!*************************************

   do Select-Parameters
   do Get-Schedule-Id

End-Procedure

!*************************************
Begin-Heading 8
!*************************************

#Include 'stdhtr12.sqc'

 print $BEN1-EMPLOYEE                (+2,1,{col_emplid})
 print $BEN1-EMPLOYEE                (0,+{col_sep},{col_name})
 print $BAS007-DEP                   (0,+{col_sep},{col_dep_id})
 print ' '                           (0,+{col_sep},{col_name})
 print $BEN1-EVENT                   (0,+{col_sep},{col_date})
 print ' '                           (0,+{col_sep},{col_plan_type})
 print $BAS007-BEN                   (0,+{col_sep},{col_benef_pct})
 print $BEN1-FLAT                    (0,+{col_sep},{col_flat_amt})
 print ' '                           (0,+{col_sep},{col_excess})
 print ' '                           (0,+{col_sep},{col_contingent})

 print $BEN1-ID                      (+1,1,{col_emplid})
 print $BEN1-NAME                    (0,+{col_sep},{col_name})
 print $BEN1-ID                      (0,+{col_sep},{col_dep_id})
 print $BAS007-DEP-BEN-NM            (0,+{col_sep},{col_name})
 print $BEN1-DATE                    (0,+{col_sep},{col_date})
 print $BEN1-PLAN-TYPE               (0,+{col_sep},{col_plan_type})
 print $BAS007-PCT                   (0,+{col_sep},{col_benef_pct})
 print $BEN1-AMT1                    (0,+{col_sep},{col_flat_amt})
 print $BAS007-EXCESS                (0,+{col_sep},{col_excess})
 print $BAS007-CONTNG                (0,+{col_sep},{col_contingent})

 print '='                           (+1,1,{col_emplid})                Fill
 print '='                           (0,+{col_sep},{col_name})          Fill
 print '='                           (0,+{col_sep},{col_dep_id})        Fill
 print '='                           (0,+{col_sep},{col_name})          Fill
 print '='                           (0,+{col_sep},{col_date})          Fill
 print '='                           (0,+{col_sep},{col_plan_type})     Fill
 print '='                           (0,+{col_sep},{col_benef_pct})     Fill
 print '='                           (0,+{col_sep},{col_flat_amt})      Fill
 print '='                           (0,+{col_sep},{col_excess})        Fill
 print '='                           (0,+{col_sep},{col_contingent})    Fill

End-Heading

!*************************************
Begin-Procedure Process-Main
!*************************************

  let #DepOffset = {col_emplid} + {col_sep} + {col_name} + {col_sep} + 1

Begin-SELECT
A.SCHED_ID          ()                        On-Break Print=Never
                                              LEVEL=1 AFTER=BREAK-CHANGE
  move &A.Sched_Id to $SchedId

A.BENEFIT_PROGRAM   ()                        On-Break Print=Never
                                              LEVEL=1 AFTER=BREAK-CHANGE
  move &A.Benefit_Program to $BenProgram

A.EMPLID            (+1,1,{COL_EMPLID})       On-Break Print=Change/Top-Page
                                              LEVEL=2 SKIPLINES=1
A.EMPL_RCD

C.NAME              (0,+{COL_SEP},{COL_NAME}) On-Break Print=Change/Top-Page
                                              LEVEL=2

B.DEPENDENT_BENEF   (0,#DEPOFFSET,{COL_DEP_ID}) On-Break Print=Change/Top-Page
                                                LEVEL=3 SKIPLINES=1

D.NAME              (0,+{COL_SEP},{COL_NAME})   On-Break Print=Change/Top-Page
                                                LEVEL=3
A.EVENT_DT
  do Format-Datetime(&A.Event_Dt, $Out, {DEFDATE}, '', '')
  print $Out                 (0,+{col_sep},{col_date})
  move &A.Event_Dt to $Effdt

B.PLAN_TYPE
 move 'PLAN_TYPE' to $Fieldname
 move &B.Plan_Type to $Fieldvalue
 do Read-Translate-Table
 let $Out = &B.Plan_Type || '-' || $Xlatshortname
 print $Out                  (0,+{col_sep},{col_plan_type})

B.BENEF_PCT
  if (&B.Benef_Pct <= 0)
    print ' '                (0,+{col_sep},{col_benef_pct})
  else
    print &B.Benef_Pct       (0,+{col_sep},{col_benef_pct})
  end-if

B.FLAT_AMOUNT
  if (&B.Flat_Amount <= 0)
    print ' '                (0,+{col_sep},{col_flat_amt})
  else
    print &B.Flat_Amount     (0,+{col_sep},{col_flat_amt})
  end-if

B.EXCESS
  if (&B.Excess <> 'Y')
    print ' '                (0,+{col_sep},{col_excess})
  else
    print $BAS007-EXCESS     (0,+{col_sep},{col_excess})
  end-if

B.CONTINGENT
  if (&B.Contingent <> 'Y')
    print ' '                (0,+{col_sep},{col_contingent})
  else
    print $BAS007-CONTNG     (0,+{col_sep},{col_contingent})
  end-if

FROM  PS_BAS_PARTIC      A,
      PS_BAS_PARTIC_DPND B,
      PS_PERSON_NAME     C,
      PS_DEP_BEN_NAME D

WHERE A.SCHED_ID LIKE $Sched_Id
AND   A.EVENT_STATUS <> 'V'
AND   A.PROCESS_IND  = 'N'
AND   A.BAS_PROCESS_STATUS IN ('PR','NT','ET','EE', 'FE','RE')
AND   B.SCHED_ID     = A.SCHED_ID
AND   B.EMPLID       = A.EMPLID
AND   B.BENEFIT_RCD_NBR = A.BENEFIT_RCD_NBR
AND   B.EVENT_ID     = A.EVENT_ID
AND   C.EMPLID       = A.EMPLID
AND   D.EMPLID       = B.EMPLID
AND   D.DEPENDENT_BENEF = B.DEPENDENT_BENEF
AND   D.EFFDT = (SELECT MAX(D1.EFFDT) 
                 FROM PS_DEP_BEN_NAME D1
                 WHERE D1.EMPLID = D.EMPLID
                 AND   D1.DEPENDENT_BENEF = D.DEPENDENT_BENEF
                 AND   D1.EFFDT <= $AsOfToday)
                 
                 
                 

ORDER BY A.SCHED_ID ASC,
         A.EVENT_DT ASC,
         A.BENEFIT_PROGRAM ASC,
         A.EMPLID ASC,
         A.EMPL_RCD ASC,
         B.DEPENDENT_BENEF ASC,
         B.PLAN_TYPE ASC

End-SELECT
End-Procedure

!*************************************
Begin-Procedure Break-Change
!*************************************

  New-Page

End-Procedure

!*************************************
Begin-Procedure Display-Time
!*************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

!*************************************

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Format-DateTime
#Include 'getpgmnm.sqc'  !Get-Benefit-Program-Name procedure
#Include 'getschnm.sqc'  !Get-SchedId-Name procedure
#Include 'getsched.sqc'  !Ask-Schedule-Id Procedure
#Include 'readxlat.sqc'  !Read-Translate-Table Procedure

#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language

!****************************** End Of Report *******************************

