!***********************************************************************
! MXSTP008.SQR   STPS DC-5 Training and Development External           *
!                          Registration Application.                   *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:13:51:42                                 *
!       $Release:  HR9                                                 *
!      $Revision:  101                                                 *
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'   !Set environment

Begin-Setup
#include 'setupdb.sqc'
 Declare-Printer   THIS_REPORT
  Type=HPLASERJET
  Font=5
  Point-Size=14
  Pitch=17
  Symbol-Set=19U     ! ASCII symbol set
 End-Declare
 
 Declare-Layout THIS_REPORT
  Orientation=Portrait
  Top-Margin= .35
  Left-Margin=.2
  Max-Lines=82
  Max-Columns=130
  Char-Width= 6.5  !4.3    ! 7.2
  Line-Height=9     ! 72/printer_point-size
 End-Declare
 
 Declare-Report THIS_REPORT
  Printer-Type=HPLASERJET
  LayOut=THIS_REPORT
 End-Declare

End-Setup

begin-report
  move '1' to $ReportDateType
  move '1' to $Reportyear4
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
!  do Declare-Printer
  do Init-Report
  do Select-Parameters
  do Report
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do Stdapi-Term
  !do Reset
end-report


begin-procedure Init-Report
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  move 'MXSTP008' to $ReportID
  let $ReportTitle = 'STPS DC-5 Solicitud de Registro de Agente Capacitador Externo'
  display $ReportTitle
end-procedure Init-Report


begin-heading 46
  !position  (1)
print $Comp_Descr           (14,2)
print $RFC_ER_1             (18,2)
print $RFC_ER_2             (18,5)
print $RFC_ER_3             (18,8)
print $RFC_ER_4             (18,17)
print $RFC_ER_5             (18,20)
print $RFC_ER_6             (18,23)
print $RFC_ER_7             (18,26)
print $RFC_ER_8             (18,29)
print $RFC_ER_9             (18,32)
print $RFC_ER_10            (18,38)
print $RFC_ER_11            (18,41)
print $RFC_ER_12            (18,44)

print $IMS_ER_1             (18,53)
print $IMS_ER_2             (18,56)
print $IMS_ER_3             (18,59)
print $IMS_ER_4             (18,62)
print $IMS_ER_5             (18,65)
print $IMS_ER_6             (18,68)
print $IMS_ER_7             (18,71)
print $IMS_ER_8             (18,74)
print $IMS_ER_9             (18,77)
print $IMS_ER_10            (18,80)
print $IMS_ER_11            (18,86)

print $Address1             (20,2)
print $Address2             (21,2)
print $Address3             (22,2)
print $City                 (27,2)
print $Postal1              (27,29)
print $Postal2              (27,32)
print $Postal3              (27,35)
print $Postal4              (27,38)
print $Postal5              (27,41)
print $Municip              (27,44,27)
print $State_Desc           (30,2)
print $Phone                (30,37)

evaluate $App_Type
  when = '0010'
     print 'X'              (34,32)
     break
  when = '0020'
     print 'X'              (37,32)
     break
  when = '0030'
     print 'X'              (34,84)
     break
  when = '0040'
     print 'X'              (37,84)
     break
end-evaluate

page-number                 (41,7)
last-page                   () '       '
print ''                    (46,1)
end-heading


!begin-procedure Declare-Printer
!  let #fontstd  = 5
!  let #sizestd  = 6
!  let #fontsm   = 5
!  let #sizesm   = 8
!  let #fontmed  = 5
!  let #sizemed  = 10
!  let #fontgr   = 5
!  let #sizegr   = 12
!  let #fontxgr  = 5
!  let #sizexgr  = 14
!  declare printer
!    type          = HPLASERJET
!    orientation   = portrait
!    top-margin    = 0.35
!    left-margin   = 0.0   !0.5
!    symbol-set    = 19U
!    font          = 5
!    font-style    = fixed
!    point-size    = 14 !12
!    line-size     = 9
!end-procedure Declare-Printer


begin-procedure Report
  do Get-Report-Data
  do Get-Location-Data
  if $Plan_Type = '0010'
     do Get-Course-Info
  else
     do Get-Program-Data
  end-if
end-procedure Report


begin-procedure Select-Parameters
begin-select
RC.COMPANY
RC.ESTABID
RC.APP_TYPE_MEX
RC.PLAN_TYPE_MEX
RC.TRN_PROGRAM
RC.ACCUM_HRS

  let $Company   = &RC.COMPANY
  let $ESTABID = rtrim(&RC.ESTABID,' ')
  let $App_Type  = &RC.APP_TYPE_MEX
  let $Plan_Type   = &RC.PLAN_TYPE_MEX
  let $Train_Prog  = &RC.TRN_PROGRAM
  let #Accum_Hrs   = &RC.ACCUM_HRS

  let $IMS_ER_S  = substr($ESTABID,1,11)
  let $IMS_ER_1  = substr($IMS_ER_S,1,1)
  let $IMS_ER_2  = substr($IMS_ER_S,2,1)
  let $IMS_ER_3  = substr($IMS_ER_S,3,1)
  let $IMS_ER_4  = substr($IMS_ER_S,4,1)
  let $IMS_ER_5  = substr($IMS_ER_S,5,1)
  let $IMS_ER_6  = substr($IMS_ER_S,6,1)
  let $IMS_ER_7  = substr($IMS_ER_S,7,1)
  let $IMS_ER_8  = substr($IMS_ER_S,8,1)
  let $IMS_ER_9  = substr($IMS_ER_S,9,1)
  let $IMS_ER_10 = substr($IMS_ER_S,10,1)
  let $IMS_ER_11 = substr($IMS_ER_S,11,1)

FROM PS_RUN_STPS_MEX RC
WHERE RC.OPRID       = $Prcs_OprID
  AND RC.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-select
end-procedure Select-Parameters

begin-procedure Get-Report-Data
begin-select
C.DESCR
CM.RFC_ER_ID_MEX
  let $Comp_Descr = &C.DESCR
  let $RFC_ER_ID  = &CM.RFC_ER_ID_MEX
  let $RFC_ER_ID  = rtrim($RFC_ER_ID,' ')
  let $RFC_ER_S   = substr($RFC_ER_ID,1,12)
  let $RFC_ER_1   = substr($RFC_ER_S,1,1)
  let $RFC_ER_2   = substr($RFC_ER_S,2,1)
  let $RFC_ER_3   = substr($RFC_ER_S,3,1)
  let $RFC_ER_4   = substr($RFC_ER_S,4,1)
  let $RFC_ER_5   = substr($RFC_ER_S,5,1)
  let $RFC_ER_6   = substr($RFC_ER_S,6,1)
  let $RFC_ER_7   = substr($RFC_ER_S,7,1)
  let $RFC_ER_8   = substr($RFC_ER_S,8,1)
  let $RFC_ER_9   = substr($RFC_ER_S,9,1)
  let $RFC_ER_10  = substr($RFC_ER_S,10,1)
  let $RFC_ER_11  = substr($RFC_ER_S,11,1)
  let $RFC_ER_12  = substr($RFC_ER_S,12,1)
  do Get-Comp-Descr-Lang

FROM PS_COMPANY_TBL     C,
     PS_COMPANY_TBL_MEX CM

WHERE C.COMPANY = $Company
and C.COMPANY = CM.COMPANY
and C.EFFDT = (SELECT MAX(EFFDT) FROM PS_COMPANY_TBL
               WHERE COMPANY = C.COMPANY
               AND EFFDT <= $AsofToday)
and CM.EFFDT = C.EFFDT
end-select
end-procedure Get-Report-Data


begin-procedure Get-Comp-Descr-Lang
begin-SELECT
CTL.DESCR
  if rtrim(&CTL.Descr,' ') <> ''
     let $Comp_Descr  = rtrim(&CTL.Descr,' ')
  end-if
FROM  PS_COMPNY_TBL_LANG CTL
WHERE CTL.COMPANY     = $Company
  AND CTL.LANGUAGE_CD = 'ESP'
  AND CTL.EFFDT       =
     (SELECT MAX(EFFDT)
      FROM   PS_COMPNY_TBL_LANG
      WHERE  COMPANY     = $Company
        AND  LANGUAGE_CD = CTL.LANGUAGE_CD
        AND  EFFDT      <= $AsofToday)
end-SELECT
end-procedure Get-Comp-Descr-Lang


begin-procedure Get-Location-Data
begin-select
IMS.ESTABID
IMS.ADDRESS1
IMS.ADDRESS2
IMS.ADDRESS3
IMS.ADDRESS4
IMS.CITY
IMS.POSTAL
IMS.STATE
  let $Address1 = &IMS.ADDRESS1
  let $Address2 = &IMS.ADDRESS2
  let $Address3 = &IMS.ADDRESS3
  let $Municip  = &IMS.ADDRESS4
  let $City     = rtrim(&IMS.CITY,' ')
  let $Postal   = substr(&IMS.POSTAL,1,5)
  let $Postal1  = substr($POSTAL,1,1)
  let $Postal2  = substr($POSTAL,2,1)
  let $Postal3  = substr($POSTAL,3,1)
  let $Postal4  = substr($POSTAL,4,1)
  let $Postal5  = substr($POSTAL,5,1)
  let $State    = &IMS.STATE
  do Get-State-Name
  do Get-Phones
from PS_ESTAB_TBL IMS
Where IMS.ESTABID = $ESTABID
and IMS.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL
               WHERE ESTABID = IMS.ESTABID
               AND EFF_STATUS = 'A'
               AND EFFDT <= $AsofToday)
end-select
end-procedure Get-Location-Data


begin-procedure Get-State-Name
begin-select
SN.DESCR
  let $State_Desc = &SN.DESCR
FROM PS_STATE_NAMES_TBL SN
WHERE SN.COUNTRY = 'MEX'
  AND SN.STATE = $State
end-select
end-procedure Get-State-Name


begin-procedure Get-Phones
begin-select
PHONE
  let $phone = $Phone || '  ' || rtrim(&PHONE,' ')
FROM PS_COMP_PHONE_TBL
WHERE COMPANY = $Company
end-select
end-procedure Get-Phones


begin-procedure Get-Program-Data
  move 1 to #Cons_Number
begin-select
T.DESCR
  let $Prog_Desc = &T.DESCR
  print #Cons_Number            (+2,2) edit 09999
  print $Prog_Desc              (,11,20)
  print #Accum_Hrs              (,81)
  do Get-Course-Data
FROM PS_TRN_PROGRM_TBL T
WHERE T.TRN_PROGRAM = $Train_Prog
and T.COURSE_STATUS = 'A'
end-select
end-procedure Get-Program-Data


begin-procedure Get-Course-Data
  let $First = 'Y'
begin-select
STPS.COURSE
STPS.DESCR
  let $Course_Desc = &STPS.DESCR
  if $First = 'Y'
     print $Course_Desc            (,44,29)
     move 'N' to $First
  else
     print $Course_Desc            (+1,44,29)
  end-if
FROM PS_RUN_STPS2_MEX STPS
WHERE STPS.OPRID       = $Prcs_OprID
  AND STPS.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-select
end-procedure Get-Course-Data


begin-procedure Get-Course-Info
  move 1 to #Cons_Number
begin-select
STPS2.COURSE
STPS2.DESCR
STPS2.HRS_UNITS
  let $Course = &STPS2.COURSE
  let $Course_Desc = &STPS2.DESCR
  let #Course_Hrs = &STPS2.HRS_UNITS
  do Get-Course-Content
  do Print-Course-Data
  add 1 to #Cons_Number
FROM PS_RUN_STPS2_MEX STPS2
WHERE STPS2.OPRID       = $Prcs_OprID
  AND STPS2.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-select
end-procedure Get-Course-Info


begin-procedure Get-Course-Content
 move '' to $Course_Content
begin-select
CD.DESCRLONG
  let $Course_Content = &CD.DESCRLONG
FROM PS_COURSE_DESCR CD
WHERE CD.COURSE = $Course
AND CD.COURSE_DESCR_TYPE = 'CC'
AND CD.EFFDT = (SELECT MAX(EFFDT) FROM PS_COURSE_DESCR
                WHERE COURSE = $Course
                AND COURSE_DESCR_TYPE = 'CC'
                AND EFFDT <= $AsOfToday)
end-select
end-procedure Get-Course-Content


begin-procedure Print-Course-Data
  print #Cons_Number            (+2,2) edit 09999
  print $Course_Desc            (,9,20)
  print #Course_Hrs             (,71)
  print $Course_Content         (,37,29) wrap 28 15
end-procedure Print-Course-Data

!*****************************************************************
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#include 'datemath.sqc'  !Date math routines
#include 'askcalyr.sqc'  !Ask-Calendar-Year
