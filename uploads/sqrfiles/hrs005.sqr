!***************************************
!  HRS005:  Candidate Listing          *
!***************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/09/27:00:00:42                                 !
!       $Release:  HR9                                                 !
!      $Revision:  104                                                 !
!                                                                      *
!***********************************************************************
!Porcedures ending with "Scrty" and Record alias ending with "SC" are
!using SQR Seurity.
!***********************************************************************
#include 'setenv.sqc'   !Set environment
begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup


begin-Report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
   if $prcs_oprid=''
  goto last2
 end-if

  do Report

  do Stdapi-Term
last2:
end-report

begin-Heading 8
do Get_Field_Information ('HRS005',     'REPORT_TITLE',         $REPORTTITLE,   #DW)
  #Include 'stdhdgtr.sqc'
do Get_Field_Information ('HRS005',     'DEPARTMENT',           $DEPT,          #DW)
do Get_Field_Information ('HRS005',     'TITLE_RECRUIT1',       $RECRUIT1,      #DW)
do Get_Field_Information ('HRS005',     'TITLE_RECRUIT2',       $RECRUIT2,      #DW)
do Get_Field_Information ('HRS005',     'CANDIDATE_NAME1',      $CANDIDATE1,    #DW)
do Get_Field_Information ('HRS005',     'CANDIDATE_NAME2',      $CANDIDATE2,    #DW)
do Get_Field_Information ('HRS005',     'OFFER',                $OFFER,         #DW)
do Get_Field_Information ('HRS005',     'STATUS_STEP1',         $STAT1,         #DW)
do Get_Field_Information ('HRS005',     'STATUS_STEP2',         $STAT2,         #DW)
do Get_Field_Information ('HR',         'REQ_NBR1',             $REQ1,          #DW)
do Get_Field_Information ('HR',         'REQ_NBR2',             $REQ2,          #DW)
do Get_Field_Information ('HR',         'JOBCODE1',             $JOB1,          #DW)
do Get_Field_Information ('HR',         'JOBCODE2',             $JOB2,          #DW)
do Get_Field_Information ('HR',         'POSITION_NBR1',        $POS1,          #DW)
do Get_Field_Information ('HR',         'POSITION_NBR2',        $POS2,          #DW)
do Get_Field_Information ('HR',         'DATE_APPROVED1',       $DATE1,         #DW)
do Get_Field_Information ('HR',         'DATE_APPROVED2',       $DATE2,         #DW)
do Get_Field_Information ('HR',         'NEW_REPL1',            $REPL1,         #DW)
do Get_Field_Information ('HR',         'NEW_REPL2',            $REPL2,         #DW)
do Get_Field_Information ('HR',         'STATUS',               $STATUS,        #DW)
do Get_Field_Information ('HR',         'TITLE',                $TITLE,         #DW)
do Get_Field_Information ('HRS005',     'APPLICATIONS',         $APPLICATIONS,         #DW)
do Get_Field_Information ('HRS005',     'REFERRALS',         $REFERRALS,         #DW)
do Get_Field_Information ('HRS005',     'INTERVIEWS',         $INTERVIEWS,         #DW)
do Get_Field_Information ('HRS005',     'NEW',         $NEW,         #DW)
do Get_Field_Information ('HRS005',     'REPLACE',         $REPLACE,         #DW)
do Get_Field_Information ('HRS005',     'DEPT_TOT',         $DEPT_TOT,         #DW)


  String $DEPT ':' by '' into $deptadd
  print $deptadd       (3,1,11)
  let $HdgDeptID=RTRIM($DeptID,' ')
  print $HdgDeptID     (0,13)
  if $DeptID <> $PriorDeptID
    do Get-Department-Name
    print $DeptName    (0,+2)
    move $DeptID to $PriorDeptID
  end-if


PRINT $REQ1             (+3,1,6)
PRINT $JOB1             (0,8,7)
PRINT $POS1             (0,16,19)

!String $REPL1 '/' by '' into $repladd
!print $repladd          (0,36,4)

!String $RECRUIT1 '/' by '' into $recruitadd
!print $recruitadd       (0,41,40)

!PRINT $DATE1            (0,82,10)
PRINT $CANDIDATE1       (0,93,40)
PRINT $STAT1            (0,134)
PRINT $REQ2             (+1,1,6)
PRINT $JOB2             (0,8,7)
PRINT $POS2             (0,16,8)
PRINT $STATUS           (0,25,10)
!PRINT $REPL2            (0,36,4)
PRINT $RECRUIT2         (0,41,41)
!PRINT $DATE2            (0,82,10)
PRINT $CANDIDATE2       (0,93,40)
PRINT $STAT2            (0,134,20)
PRINT $OFFER            (0,155)

  LET #line = 1         ! resolution 301350
  let #nextline = #line + 1   ! resolution 301350

end-Heading

!********************************************
begin-procedure Init-Report

  move 'HRS005' to $ReportID
  display ' '

  do Stdapi-Init

  if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

  do Security-Param

  if $prcs_process_instance = ''
    ! No Prompt
  else
    do Select-Parameters
  end-if

do Init_Printer
do Get-Values
do Init_Report_Translation ($ReportID, $language_cd)
do Append_Report_Translation ('HR')
last1:
end-procedure

!********************************************
begin-procedure Get-Values
   do Get-Current-Language
   let $language_cd = $curr_language_cd
end-procedure

!***********************************************************************
!  PROC REPORT
!         Main Procedure
!***********************************************************************

BEGIN-PROCEDURE Report

do Installation-Values

BEGIN-SELECT DISTINCT
A.BUSINESS_UNIT
  LET $BU = RTRIM(&A.BUSINESS_UNIT,' ')
A.DEPTID          () on-break print=never level=1 procedure=Dept-Change
  move &A.DeptID to $DeptID
A.HRS_JOB_OPENING_ID       (1,1,6)  on-break  level=2 procedure=Req-Change
  move &A.HRS_JOB_OPENING_ID TO $jobreq
A.JOBCODE                (0,8,7)
A.POSITION_NBR           (0,16,8)
  if $PositionMgmt <> 'N'
     move &A.Position_Nbr to $Position_Nbr
     do Get-Position-Title
     print $PosName         (0,41,40)
  else
    move &A.JOBCODE TO $JOBCODE
    do Get-Job-Title
    print $JobTitle          (0,41,40)
  end-if

A.STATUS_CODE      
  move &A.STATUS_CODE to $JO_StatusCode

STS1.DESCRSHORT    
  move &STS1.DESCRSHORT to $JO_StatusDesc

  if $Curr_Language_Cd <> $PSOptions_Language_Cd
    do GetJOSTSLng
  end-if

  print $JO_StatusDesc         (0,25,10)


!A.REQ_NEW_POSN
!  if &A.Req_New_Posn = 'Y'
!    print $NEW           (0,36,4)
!  else
!    print $REPLACE           (0,36,4)
!  end-if

A.RECRUITER_ID
  let $EMPLID = &A.RECRUITER_ID
  let $EMPLID = RTRIM($EMPLID, ' ')
  DO Get-Employee-Name
  PRINT $Name                      (2,41)

!A.AUTHORIZATION_DT         &A.Authorization_Dt

!  if not IsNULL(&A.Authorization_Dt)
!    do Format-DateTime(&A.Authorization_Dt, $out, {DEFDATE}, '', '')
!    print  $out (1,82)
!  end-if

  do Get-Candidates

FROM PS_HRS_JO_I A
    ,PS_HRS_STS_JO_VW STS1
    ,PS_FAST_SQR_SEC_VW SCRTY

WHERE A.STATUS_CODE = STS1.STATUS_CODE
  AND A.ORIGINATOR_ID = SCRTY.EMPLID
[$SecurityClause]

ORDER BY A.DEPTID, A.HRS_JOB_OPENING_ID
END-SELECT
  move 'Y' to $End
  do Dept-Change
END-PROCEDURE Report


!***********************************************************************
!  PROC Get-Candidates
!***********************************************************************

BEGIN-PROCEDURE Get-Candidates
  move 1 to #line
BEGIN-SELECT

C.HRS_PERSON_ID            
 
AE1.NAME_DISPLAY                     
STS2.DESCRSHORT
D.STATUS_CODE      
  move &D.STATUS_CODE to $APP_StatusCode

  move &STS2.DESCRSHORT to $APP_StatusDesc

  if $Curr_Language_Cd <> $PSOptions_Language_Cd
    do GetAPPSTSLng
  end-if

C.HRS_JOB_OPENING_ID
C.HRS_RCMNT_ID

  

  do Determine-Step
  
    PRINT ' '                  (#line,0)               ! resolution 301350
    print &C.HRS_PERSON_ID            (#line,93,40)           ! resolution 301350
!    print &STS2.DESCRSHORT     (#line,134)
    print $APP_StatusDesc      (#line,134)
  
    let #nextline = #line + 1
    PRINT ' '                  (#nextline,0)           ! resolution 301350
    print &AE1.NAME_DISPLAY            (#nextline,93,40)       ! resolution 301350  
  
  print $Step              (#nextline,134)
  add 1 to #Applications
  add 2 to #line

 FROM PS_HRS_RCMNT_I C,
      PS_HRS_APPLICANT D,
      PS_HRS_APP_NAME_I AE1,
      PS_HRS_STS_APP_VW STS2
WHERE C.HRS_JOB_OPENING_ID      = &A.HRS_JOB_OPENING_ID  !ice 724006003
  AND C.HRS_PERSON_ID           = D.HRS_PERSON_ID
  AND D.STATUS_CODE      = STS2.STATUS_CODE
  AND C.HRS_PERSON_ID           = AE1.HRS_PERSON_ID
  !AND AE1.EFFDT = (SELECT MAX(EFFDT)
  !                   FROM PS_APPL_DATA_EFFDT
  !                  WHERE HRS_PERSON_ID = C.HRS_PERSON_ID
  !                    AND EFFDT <= $AsOfToday)

ORDER BY C.HRS_PERSON_ID

END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC GetJOSTSLng
!***********************************************************************

BEGIN-PROCEDURE GetJOSTSLng

BEGIN-SELECT

C.DESCRSHORT   
  move &C.DESCRSHORT to $JO_StatusDesc

FROM PS_HRS_STS_JO_LVW C
WHERE C.STATUS_CODE = $JO_StatusCode

END-SELECT

END-PROCEDURE


!***********************************************************************
!  PROC GetAPPSTSLng
!***********************************************************************

BEGIN-PROCEDURE GetAPPSTSLng

BEGIN-SELECT

D.DESCRSHORT   
  move &D.DESCRSHORT to $APP_StatusDesc

FROM PS_HRS_STS_APP_LVW D
WHERE D.STATUS_CODE = $APP_StatusCode

END-SELECT

END-PROCEDURE


!***********************************************************************
!  PROC Determine-Step
!***********************************************************************

BEGIN-PROCEDURE Determine-Step

  move '' to $Step

BEGIN-SELECT
R.HRS_PERSON_ID
  move 'Referral' to $Step
  add 1 to #Referrals
  EXIT-SELECT
 FROM PS_HRS_APP_RTE_DTL R
WHERE R.HRS_PERSON_ID    = &C.HRS_PERSON_ID
  AND R.HRS_RCMNT_ID     = &C.HRS_RCMNT_ID
END-SELECT

BEGIN-SELECT
E1.HRS_JOB_OPENING_ID
E.HRS_PERSON_ID
  move 'Interview' to $Step
  add 1 to #Interviews
  EXIT-SELECT
 FROM PS_HRS_RCM_INT E,
  PS_HRS_RCMNT_I E1
WHERE E.HRS_PERSON_ID = E1.HRS_PERSON_ID
  AND E.HRS_RCMNT_ID      = E1.HRS_RCMNT_ID
  AND E.HRS_PERSON_ID    = &C.HRS_PERSON_ID
  AND E.HRS_RCMNT_ID      = &C.HRS_RCMNT_ID
ORDER BY E1.HRS_JOB_OPENING_ID, E.HRS_PERSON_ID
END-SELECT

BEGIN-SELECT
FF.HRS_JOB_OPENING_ID
FF.HRS_PERSON_ID
F.OFFER_DT
DTL1.CURRENCY_CD &curin
DTL1.OFFER_AMT
  do Format-Amt(&DTL1.Offer_Amt, $out, '9999999999.99',&curin, $curout)
  print $out (#line,144)
DTL1.OFFER_FREQUENCY
  move 'OFFER_FREQUENCY' to $FieldName
  move &DTL1.OFFER_FREQUENCY to $FieldValue
  do Read-Translate-Table
  print ' / '              (0,0)
  print $XlatShortName     (0,0)
  print $curout            (0,+1)
FROM PS_HRS_RCMNT_I FF,
     PS_HRS_OFFER_MAX_I F,
     PS_HRS_OFF_DTL_I DTL1
WHERE FF.HRS_PERSON_ID      = &C.HRS_PERSON_ID
  AND FF.HRS_JOB_OPENING_ID = &A.HRS_JOB_OPENING_ID
  AND FF.HRS_PERSON_ID      = F.HRS_PERSON_ID
  AND FF.HRS_RCMNT_ID      = F.HRS_RCMNT_ID
  AND F.HRS_PERSON_ID      = DTL1.HRS_PERSON_ID
  AND F.HRS_RCMNT_ID      = DTL1.HRS_RCMNT_ID
  AND F.HRS_OFF_ID      = DTL1.HRS_OFF_ID
  ORDER BY FF.HRS_JOB_OPENING_ID, FF.HRS_PERSON_ID, F.OFFER_DT DESC
END-SELECT

END-PROCEDURE

!***********************************************************************
!  PROC Req-Change
!***********************************************************************

BEGIN-PROCEDURE Req-Change
  next-listing skiplines=1
  
  if $APPLICATIONS = ''
    do Get_Field_Information ('HRS005',     'APPLICATIONS',         $APPLICATIONS,         #DW)
    do Get_Field_Information ('HRS005',     'REFERRALS',         $REFERRALS,         #DW)
    do Get_Field_Information ('HRS005',     'INTERVIEWS',         $INTERVIEWS,         #DW)
  end-if


  
  print $APPLICATIONS  (1,18)
  do Format-Number(#Applications, $out, '9999')
  print $out           (0,+1)
  print $REFERRALS     (0,48)
  do Format-Number(#Referrals, $out, '9999')
  print $out           (0,+1)
  print $INTERVIEWS    (0,78)
  do Format-Number(#Interviews, $out, '9999')
  print $out           (0,+1)
  add #Applications to #ApplicationsDept
  add #Referrals    to #ReferralsDept
  add #Interviews   to #InterviewsDept
  move 0 to #Applications
  move 0 to #Referrals
  move 0 to #Interviews
  next-listing need=3 skiplines=1
END-PROCEDURE

!***********************************************************************
!  PROC Inatallation-Values
!***********************************************************************

BEGIN-PROCEDURE Installation-Values

begin-SELECT
I.POSITION_MGMT
   move &I.POSITION_MGMT to $PositionMgmt
FROM PS_INSTALLATION I
end-SELECT

END-PROCEDURE


!***********************************************************************
!  PROC Dept-Change
!***********************************************************************

BEGIN-PROCEDURE Dept-Change
  do Req-Change
  print $DEPT_TOT          (1,3)
  print $APPLICATIONS  (0,18)
  do Format-Number(#ApplicationsDept, $out, '9999')
  print $out      (0,+1)
  print $REFERRALS     (0,48)
  do Format-Number(#ReferralsDept, $out, '9999')
  print $out           (0,+1)
  print $INTERVIEWS    (0,78)
  do Format-Number(#InterviewsDept, $out, '9999')
  print $out        (0,+1)
  move 0 to #ApplicationsDept
  move 0 to #ReferralsDept
  move 0 to #InterviewsDept
  if $End = 'Y'
    do Reset
  end-if
  new-page
END-PROCEDURE


!****************************************************************

#include 'prcslng.sqc'   !Get language code
#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'hrsecty.sqc'   !Get SQR Security parameters

#Include 'getempnm.sqc'  !Get-Employee-Name and Get-Applicant-Name
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getposnm.sqc'  !Get-Department-Name procedure
#Include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
