!**************************************
! TC001: Benefits Statement Report
!**************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:38:03                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'   !Set environment
#Include 'setup32.sqc'  !Printer and page-size initialization

#define PERSONAL_DATA

!************
Begin-Report
!************

  do Init-Report
  do Get-Compensation-Tree
  do Process-Main
  do StdAPI-Term

End-Report

!******************************
Begin-Procedure Init-Report
!******************************

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do StdAPI-Init

  move 'TC001' to $ReportID

  do Get-Report-Language

  if $prcs_process_instance = ''
!    do Ask-Runcntrl
  else
    do Get-Run-Control-Value
  end-if
 ! Format Thrudate for printing
 
    do Format-DateTime($Thru_date, $Thru_date_out, {DEFDATE}, '', '')
   show 'Thru date: ' $Thru_date
   show 'Thru date out: ' $Thru_date_out
End-Procedure

!*****************************************************
Begin-Heading 11
!*****************************************************
  print '            '    (1,1)
  print 'PeopleSoft'      (+1, 1)          center
  print $ReportTitle      (+1, 1)          center
  let #RptCol = {ColR} - 15
   Do Change-Page
End-Heading

!************************************
Begin-Procedure Report-Translation
!************************************

     do Init_Report_Translation($ReportID,$language_cd)

     do Get_Field_Information ('TC001', 'REPORT_TITLE', $ReportTitle, #CW)
     do Get_Field_Information ('TC001', 'ASOFDATE', $AsofDate, #CW)
     do Get_Field_Information ('TC001', 'AMOUNT_TYPE', $AmountType, #CW)
     do Get_Field_Information ('TC001', 'EE_AMOUNT', $EmployeeAmount, #CW)
     do Get_Field_Information ('TC001', 'ER_AMOUNT', $EmployerAmount, #CW)
     do Get_Field_Information ('TC001', 'TOTAL_COMP', $TotalComp, #CW)

!   $ReportTitle    -- 'Benefits Statement Report'
!   $AsofDate       -- 'As of Date: '
!   $AmountType     -- '(From Actual Payroll Amount)'
!   $EmployeeAmount -- 'Employee Amount'
!   $EmployerAmount -- 'Employer Amount'
!   $TotalComp      -- 'Total Compensation for'

 
 
End-Procedure



!***************************
Begin-Procedure Process-Main
!***************************

Begin-SELECT distinct
L.GB_GROUP_ID
    Let $Group_id = &L.GB_GROUP_ID
L.EMPLID                          () on-break level=1 print=Never
                                     PROCEDURE = Print-Total-Compensation
    Let $Emplid = &L.EMPLID
L.EMPL_RCD
    Let #Empl_rcdn = &L.EMPL_RCD
L.SETID_DEPT
L.DEPTID
L.SETID_LOCATION
L.LOCATION
P.NAME,

P.LAST_NAME_SRCH
P.FIRST_NAME_SRCH
   let $NAME = rtrim(&P.NAME,' ')

   Do Get-Empl-Address ($Emplid,'HOME', $AddressFound)
          
   Let $COUNTRY  = $GETADDR_Country
   let $ADDRESS1 = $GETADDR_Address1
   let $ADDRESS2 = $GETADDR_Address2
   let $ADDRESS3 = $GETADDR_Address3
   let $ADDRESS4 = $GETADDR_Address4
   let $HOUSE_TYPE = $GETADDR_HOUSE_TYPE
   let $ADDR_FIELD1 = $GETADDR_ADDR_FIELD1
   let $ADDR_FIELD2 = $GETADDR_ADDR_FIELD2
   let $ADDR_FIELD3 = $GETADDR_ADDR_FIELD3
   let $NUM1 = $GETADDR_NUM1
   let $NUM2 =$GETADDR_NUM2
   let $CITY = $GETADDR_CITY
   let $STATE =$GETADDR_STATE
   let $POSTAL = $GETADDR_POSTAL
   let $COUNTY = $GETADDR_COUNTY
   let $GEO_CODE =$GETADDR_GEO_CODE
   let $IN_CITY_LIMIT =$GETADDR_IN_CITY_LIMIT

   do ADFORMAT                ! Formats the address based on Country
   do Compress-Address         ! Removes blank lines from the formatted address

   if $Amount_Type = 'C'
      Do Get-MCOMP-AMT
   End-if

   Do Get-TC-AMT

FROM PS_TC_BEN_GRP S,
     PS_TC_EE_DETAIL L,
     PS_PERSON_NAME P

WHERE  S.OPRID = $prcs_oprid
 AND   S.RUN_CNTL_ID = $prcs_run_cntl_id
 AND   S.TC_PLAN_ID      = $Tc_Plan_id
 AND   S.TC_PLAN_EFFDT    = $Tc_Plan_Effdt
 AND   L.TC_PLAN_ID      = $Tc_Plan_id
 AND   L.EFFDT    <= $Tc_Plan_Effdt
 AND   (L.GB_GROUP_ID = S.GB_GROUP_ID OR L.GB_GROUP_ID = '')
 AND   P.EMPLID = L.EMPLID



ORDER BY [$Order_By]
          L.EMPLID,
          L.EMPL_RCD
End-Select

     Do Print-Total-Compensation

End-Procedure Process-Main

!********************************
Begin-Procedure Get-MCOMP-AMT
!********************************

   Do Init-Field
!   Let #TotalEE = 0
!   Let #TotalER = 0

Begin-SELECT
LM.EMPLID
LM.EMPL_RCD
LM.TO_COMP_AMT

   Let #TC_AMT = &LM.TO_COMP_AMT
   Display #TC_AMT

   Display $Freq

   If $Freq = 'Q'
      Let #TC_AMT = #TC_AMT * 4
   End-If
   If $Freq = 'M'
      Let #TC_AMT = #TC_AMT * 12
   End-If

   Display #TC_AMT

KM.TC_CATEGORY1
   Let $Category1 = rtrim(&KM.TC_CATEGORY1, ' ')

   If $Category1 <> '' and $Category1 <> $Old_Category1
      Print $Category1            (+1, 5)
      Let $Old_Category1 = $Category1
   End-if

KM.TC_CATEGORY2
   Let $Category2 = rtrim(&KM.TC_CATEGORY2, ' ')

   If $Category2 <> '' and $Category2 <> $Old_Category2
      Print $Category2            (+1, 15)
      Let  $Old_Category2 = $Category2
   End-if


KM.TC_CATEGORY3
   Let $Category3 = rtrim(&KM.TC_CATEGORY3, ' ')

   If $Category3 <> '' and $Category3 <> $Old_Category3
      Print $Category3            (+1, 25)
      Let  $Old_Category3 = $Category3
   End-if


KM.TC_CATEGORY4
   Let $Category4 = rtrim(&KM.TC_CATEGORY4, ' ')

   If $Category4 <> '' and $Category4 <> $Old_Category4
      Print $Category4            (+1, 35)
      Let  $Old_Category4 = $Category4
   End-if

KM.TC_CATEGORY5
   Let $Category5 = rtrim(&KM.TC_CATEGORY5, ' ')

   If $Category5 <> '' and $Category5 <> $Old_Category5
      Print $Category5            (+1, 45)
      Let  $Old_Category5 = $Category5
   End-if

KM.TC_CATEGORY6
   Let $Category6 = rtrim(&KM.TC_CATEGORY6, ' ')

   If $Category6 <> '' and $Category6 <> $Old_Category6
      Print $Category6            (+1, 55)
      Let  $Old_Category6 = $Category6
   End-if


KM.TC_CATEGORY7
   Let $Category7 = rtrim(&KM.TC_CATEGORY7, ' ')

   If $Category7 <> '' and $Category7 <> $Old_Category7
      Print $Category7            (+1, 65)
      Let  $Old_Category7 = $Category7
   End-if

KM.TC_CATEGORY8
   Let $Category8 = rtrim(&KM.TC_CATEGORY8, ' ')

   If $Category8 <> '' and $Category8 <> $Old_Category8
      Print $Category8            (+1, 75)
      Let  $Old_Category8 = $Category8
   End-if

KM.TC_CATEGORY9
   Let $Category9 = rtrim(&KM.TC_CATEGORY9, ' ')

   If $Category9 <> '' and $Category9 <> $Old_Category9
      Print $Category9            (+1, 85)
      Let  $Old_Category9 = $Category9
   End-if

KM.TC_CATEGORY10
   Let $Category10 = rtrim(&KM.TC_CATEGORY10, ' ')

   If $Category10 <> '' and $Category10 <> $Old_Category10
      Print $Category10            (+1, 95)
      Let  $Old_Category10 = $Category10
   End-if

KM.TC_CATEGORY11
   Let $Category11 = rtrim(&KM.TC_CATEGORY11, ' ')

   If $Category11 <> '' and $Category11 <> $Old_Category11
      Print $Category11            (+1, 105)
      Let  $Old_Category11 = $Category11
   End-if

KM.TC_CATEGORY12
   Let $Category12 = rtrim(&KM.TC_CATEGORY12, ' ')

   If $Category12 <> '' and $Category12 <> $Old_Category12
      Print $Category12            (+1, 115)
      Let  $Old_Category12 = $Category12
   End-if

KM.TC_CATEGORY13
   Let $Category13 = rtrim(&KM.TC_CATEGORY13, ' ')

   If $Category13 <> '' and $Category13 <> $Old_Category13
      Print $Category13            (+1, 125)
      Let  $Old_Category13 = $Category13
   End-if

KM.TC_CATEGORY14
   Let $Category14 = rtrim(&KM.TC_CATEGORY14, ' ')

   If $Category14 <> '' and $Category14 <> $Old_Category14
      Print $Category14            (+1, 135)
      Let  $Old_Category14 = $Category14
   End-if

DM.ORG_COST
   Let $Org_Cost = &DM.ORG_COST
SM.MAP_BASED
   Let $Map_Based = &SM.MAP_BASED

   If $Org_Cost = 'Y'
        Let #TC_ER = #TC_AMT

        If $Map_Based = 'D' and $Amount_Type = 'P'
           Let #TC_ER = 0
        End-If

        Let #TotalER = #TotalER + #TC_ER
    else
        Let #TC_EE = #TC_AMT

        If $Map_Based = 'D' and $Amount_Type = 'P'
           Let #TC_EE = 0
        End-If

        Let #TotalEE = #TotalEE + #TC_EE
    End-If

LM.COMPENSATION_ID

   Let $CompID = rtrim(&LM.COMPENSATION_ID, ' ')

    If $CompID <> $Old_CompID
       Print $CompID                 (+1, +3) Bold
       Let $Old_CompID = $CompID
    End-if

    If #TC_EE > 0.0
       Print #TC_EE ( 0, 100) Edit '999,999,999.99'
    End-if
    If #TC_ER > 0.0
       Print #TC_ER ( 0, 124) Edit '999,999,999.99'
    End-if


FROM PS_TC_CATEGORY_WRK KM,
     PS_TC_EE_DETAIL LM,
     PS_TC_COMP_SOURCE SM,
     PS_TC_COMP_DEFN DM
WHERE  LM.TC_PLAN_ID      = $Tc_Plan_id
AND    LM.EFFDT = $Tc_Plan_Effdt
AND    LM.COMPENSATION_ID = KM.COMPENSATION_ID
AND    LM.GB_GROUP_ID = $Group_id
AND    LM.EMPLID = $Emplid
AND    LM.EMPL_RCD = #Empl_rcdn
AND    LM.THRU_DATE = (SELECT MAX(LM1.THRU_DATE)
                       FROM PS_TC_EE_DETAIL LM1
                      WHERE LM1.TC_PLAN_ID = LM.TC_PLAN_ID
                      AND   LM1.EFFDT = LM.EFFDT
                      AND   LM1.TC_COMP_SOURCE_ID= LM.TC_COMP_SOURCE_ID
                      AND   LM1.GB_GROUP_ID = LM.GB_GROUP_ID
                      AND   LM1.EMPLID = LM.EMPLID
                      AND   LM1.EMPL_RCD = LM.EMPL_RCD
                      AND   LM1.THRU_DATE <= $Thru_Date)
AND     SM.TC_MEASURE = $Amount_Type
AND     SM.MAP_BASED IN ('M', 'D')
AND     LM.TC_COMP_SOURCE_ID = SM.TC_COMP_SOURCE_ID
AND     DM.COMPENSATION_ID = LM.COMPENSATION_ID
ORDER BY  LM.COMPENSATION_ID

End-Select
End-Procedure

!***************************
Begin-Procedure Get-TC-AMT
!***************************

  Do Init-Field

  DISPLAY $FROM_DATE
  DISPLAY $THRU_DATE
Begin-SELECT
LV.EMPLID
LV.EMPL_RCD
SUM(LV.TO_COMP_AMT)       &TC_COMP_AMT_VC
SUM(LV.TO_PAYROLL_AMT)    &TC_PAYROLL_AMT
  if $Amount_Type = 'C'
     Let #TC_AMT = &TC_COMP_AMT_VC
  else
     Let #TC_AMT = &TC_PAYROLL_AMT
  end-if

KV.TC_CATEGORY1
   Let $Category1 = rtrim(&KV.TC_CATEGORY1, ' ')

   If $Category1 <> '' and $Category1 <> $Old_Category1
      Print $Category1            (+1, 5)
      Let $Old_Category1 = $Category1
   End-if

KV.TC_CATEGORY2
   Let $Category2 = rtrim(&KV.TC_CATEGORY2, ' ')

   If $Category2 <> '' and $Category2 <> $Old_Category2
      Print $Category2            (+1, 15)
      Let  $Old_Category2 = $Category2
   End-if


KV.TC_CATEGORY3
   Let $Category3 = rtrim(&KV.TC_CATEGORY3, ' ')

   If $Category3 <> '' and $Category3 <> $Old_Category3
      Print $Category3            (+1, 25)
      Let  $Old_Category3 = $Category3
   End-if


KV.TC_CATEGORY4
   Let $Category4 = rtrim(&KV.TC_CATEGORY4, ' ')

   If $Category4 <> '' and $Category4 <> $Old_Category4
      Print $Category4            (+1, 35)
      Let  $Old_Category4 = $Category4
   End-if

KV.TC_CATEGORY5
   Let $Category5 = rtrim(&KV.TC_CATEGORY5, ' ')

   If $Category5 <> '' and $Category5 <> $Old_Category5
      Print $Category5            (+1, 45)
      Let  $Old_Category5 = $Category5
   End-if

KV.TC_CATEGORY6
   Let $Category6 = rtrim(&KV.TC_CATEGORY6, ' ')

   If $Category6 <> '' and $Category6 <> $Old_Category6
      Print $Category6            (+1, 55)
      Let  $Old_Category6 = $Category6
   End-if


KV.TC_CATEGORY7
   Let $Category7 = rtrim(&KV.TC_CATEGORY7, ' ')

   If $Category7 <> '' and $Category7 <> $Old_Category7
      Print $Category7            (+1, 65)
      Let  $Old_Category7 = $Category7
   End-if

KV.TC_CATEGORY8
   Let $Category8 = rtrim(&KV.TC_CATEGORY8, ' ')

   If $Category8 <> '' and $Category8 <> $Old_Category8
      Print $Category8            (+1, 75)
      Let  $Old_Category8 = $Category8
   End-if

KV.TC_CATEGORY9
   Let $Category9 = rtrim(&KV.TC_CATEGORY9, ' ')

   If $Category9 <> '' and $Category9 <> $Old_Category9
      Print $Category9            (+1, 85)
      Let  $Old_Category9 = $Category9
   End-if

KV.TC_CATEGORY10
   Let $Category10 = rtrim(&KV.TC_CATEGORY10, ' ')

   If $Category10 <> '' and $Category10 <> $Old_Category10
      Print $Category10            (+1, 95)
      Let  $Old_Category10 = $Category10
   End-if

KV.TC_CATEGORY11
   Let $Category11 = rtrim(&KV.TC_CATEGORY11, ' ')

   If $Category11 <> '' and $Category11 <> $Old_Category11
      Print $Category11            (+1, 105)
      Let  $Old_Category11 = $Category11
   End-if

KV.TC_CATEGORY12
   Let $Category12 = rtrim(&KV.TC_CATEGORY12, ' ')

   If $Category12 <> '' and $Category12 <> $Old_Category12
      Print $Category12            (+1, 115)
      Let  $Old_Category12 = $Category12
   End-if

KV.TC_CATEGORY13
   Let $Category13 = rtrim(&KV.TC_CATEGORY13, ' ')

   If $Category13 <> '' and $Category13 <> $Old_Category13
      Print $Category13            (+1, 125)
      Let  $Old_Category13 = $Category13
   End-if

KV.TC_CATEGORY14
   Let $Category14 = rtrim(&KV.TC_CATEGORY14, ' ')

   If $Category14 <> '' and $Category14 <> $Old_Category14
      Print $Category14            (+1, 135)
      Let  $Old_Category14 = $Category14
   End-if

DV.ORG_COST
   Let $Org_Cost = &DV.ORG_COST

   If $Org_Cost = 'Y'
        Let #TC_ER = #TC_AMT

        If $Map_Based = 'D' and $Amount_Type = 'C'
           Let #TC_ER = 0
        End-If

        Let #TotalER = #TotalER + #TC_ER
    else
        Let #TC_EE = #TC_AMT

        If $Map_Based = 'D' and $Amount_Type = 'C'
           Let #TC_EE = 0
        End-If

        Let #TotalEE = #TotalEE + #TC_EE
    End-If

LV.COMPENSATION_ID

  Let $CompID = rtrim(&LV.COMPENSATION_ID, ' ')

    If $CompID <> $Old_CompID
       Print $CompID                 (+1, +3) Bold
       Let $Old_CompID = $CompID
    End-if

    If #TC_EE > 0.0
       Print #TC_EE ( 0, 100) Edit '999,999,999.99'
    End-if
    If #TC_ER > 0.0
       Print #TC_ER ( 0, 120) Edit '999,999,999.99'
    End-if
LV.TC_COMP_SOURCE_ID

FROM PS_TC_CATEGORY_WRK KV,
     PS_TC_EE_DETAIL LV,
     PS_TC_COMP_SOURCE SV,
     PS_TC_COMP_DEFN DV
WHERE  LV.TC_PLAN_ID      = $Tc_Plan_id
AND    LV.EFFDT = $Tc_Plan_Effdt
AND    LV.COMPENSATION_ID = KV.COMPENSATION_ID
AND    LV.GB_GROUP_ID = $Group_id
AND    LV.EMPLID = $Emplid
AND    LV.EMPL_RCD = #Empl_rcdn
AND    (LV.FROM_DATE >= $From_Date and LV.FROM_DATE <= $Thru_Date)
AND    (LV.THRU_DATE >= $From_Date and LV.THRU_DATE <= $Thru_Date)
AND    LV.TC_COMP_SOURCE_ID <> 'BENEFITS'
AND    SV.TC_MEASURE = $Amount_Type
AND    SV.MAP_BASED IN ('E', 'D', 'T', 'U', 'V', 'N')
AND    LV.TC_COMP_SOURCE_ID = SV.TC_COMP_SOURCE_ID
AND    DV.COMPENSATION_ID = LV.COMPENSATION_ID
Group By LV.EMPLID,
         LV.EMPL_RCD,
         LV.COMPENSATION_ID,
         LV.TC_COMP_SOURCE_ID,
         KV.TC_CATEGORY1,
         KV.TC_CATEGORY2,
         KV.TC_CATEGORY3,
         KV.TC_CATEGORY4,
         KV.TC_CATEGORY5,
         KV.TC_CATEGORY6,
         KV.TC_CATEGORY7,
         KV.TC_CATEGORY8,
         KV.TC_CATEGORY9,
         KV.TC_CATEGORY10,
         KV.TC_CATEGORY11,
         KV.TC_CATEGORY12,
         KV.TC_CATEGORY13,
         KV.TC_CATEGORY14,
         DV.ORG_COST
End-Select

End-Procedure


!*******************************
begin-procedure Change-Page
!*******************************
 Show $Name
 Show #RptCol
if $ADDLINE1 <> ''
   print $ADDLINE1  (+2,1)
end-if
Print $AsofDate (0,#RptCol)
display $Thru_Date
Print $Thru_Date_out     (0, +1)

if $ADDLINE2 <> ''
   print $ADDLINE2  (+1,1)
else
   print ' '  (+1,1)
end-if
If $Amount_Type = 'P'
   Print $AmountType    (0,#RptCol)
End-if
 Show #RptCol
if $ADDLINE3 <> ''
   print $ADDLINE3  (+1,1)
end-if
if $ADDLINE31 <> ''
   print $ADDLINE31 (+1,1)
end-if
if $ADDLINE4 <> ''
   print $ADDLINE4  (+1,1)
end-if
if $ADDLINE5 <> ''
   print $ADDLINE5  (+1,1)
end-if
if $ADDLINE6 <> ''
   print $ADDLINE6  (+1,1)
end-if
print ' '                             (+2,1)
Print $EmployeeAmount    (+1,100)
Print $EmployerAmount   (,125)

end-procedure Change-Page


!********************************************
Begin-Procedure Print-Total-Compensation
!********************************************

   print $TotalComp (+2,5)  bold
   print #TotalEE (,90) Edit '999,999,999,999.99' bold
   print $Base_Currency (,+2) bold
   print #TotalER (,120) Edit '999,999,999,999.99' bold
   print $Base_Currency (,+2) bold

   Do Init-Field

   Let #TotalEE = 0
   Let #TotalER = 0

   new-page

End-Procedure Emplyee-Total

!********************************************
Begin-Procedure Init-Field
!********************************************

   Let $Old_Category1 = ''
   Let $Old_Category2 = ''
   Let $Old_Category3 = ''
   Let $Old_Category4 = ''
   Let $Old_Category5 = ''
   Let $Old_Category6 = ''
   Let $Old_Category7 = ''
   Let $Old_Category8 = ''
   Let $Old_Category9 = ''
   Let $Old_Category10 = ''
   Let $Old_Category11 = ''
   Let $Old_Category12 = ''
   Let $Old_Category13 = ''
   Let $Old_Category14 = ''
   Let $Old_CompID = ''

End-Procedure Init-Field

! *----------------------------------------------------------------------*
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Format-DateTime procedures
#Include 'stdapi.sqc'    !Update Process API
#Include 'number.sqc'    !Routines to format numbers
#Include 'adformat.sqc'  !Global address format
#Include 'tccomp.sqc'    !Read Total Compensation Tree.
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'rellang.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
#Include 'getaddr.sqc'   !Get Persons Current Home Address
! *------------------------* End Of Report *-----------------------------*
