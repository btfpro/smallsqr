!******************************************
!  PAY007:  Deductions In Arrears Report  *
!******************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:04:26:36                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'  !Set environment
#include 'setup31.sqc' !Printer and page-size initialization

begin-report
  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  move 'PAY007' to $ReportID
  do Get-Report-Language
  move $Pay007_ReportTitle to $ReportTitle

  do Payroll-Report-Initialization
end-procedure

begin-heading 7

  #Include 'stdhtrpi.sqc'
  #Include 'stdhtr04.sqc'
  print $Pay007_Ded_Cd1                                (+2,1)
  print $Pay007_Ded_Descr1                             (0,9)
  print $Pay007_Plan_Type1                             (0,40)
  print $Pay007_Ben_Rcd_Nbr1                           (0,65)
  print $Pay007_Arr_Bal1                               (0,108)
  print $Pay007_Ded_Cd2                                (+1,1)
  print $Pay007_Ded_Descr2                             (0,9)
  print $Pay007_Plan_Type2                             (0,40)
  print $Pay007_EmpId                                  (0,52)
  print $Pay007_Ben_Rcd_Nbr2                           (0,65)
  print $Pay007_Nm                                     (0,74)
  print $Pay007_Arr_Bal2                               (0,108)

end-heading

! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation
! Read from PAY007  program ids
   do Init_Report_Translation($ReportID,$language_cd)

   do Get_Field_Information ('PAY007', 'REPORT_TITLE', $Pay007_ReportTitle, #dummy_width)
   do Get_Field_Information ('PAY007', 'DED_CD1',      $Pay007_Ded_Cd1,     #dummy_width)
   do Get_Field_Information ('PAY007', 'DED_DESCR1',   $Pay007_Ded_Descr1,  #dummy_width)
   do Get_Field_Information ('PAY007', 'PLAN_TYPE1',   $Pay007_Plan_Type1,  #dummy_width)
   do Get_Field_Information ('PAY007', 'BEN_RCD_NBR1', $Pay007_Ben_Rcd_Nbr1,#dummy_width)
   do Get_Field_Information ('PAY007', 'ARR_BAL1',     $Pay007_Arr_Bal1,    #dummy_width)
   do Get_Field_Information ('PAY007', 'DED_CD2',      $Pay007_Ded_Cd2,     #dummy_width)
   do Get_Field_Information ('PAY007', 'DED_DESCR2',   $Pay007_Ded_Descr2,  #dummy_width)
   do Get_Field_Information ('PAY007', 'PLAN_TYPE2',   $Pay007_Plan_Type2,  #dummy_width)
   do Get_Field_Information ('PAY007', 'EMPID',        $Pay007_EmpId,       #dummy_width)
   do Get_Field_Information ('PAY007', 'BEN_RCD_NBR2', $Pay007_Ben_Rcd_Nbr2,#dummy_width)
   do Get_Field_Information ('PAY007', 'NM',           $Pay007_Nm,          #dummy_width)
   do Get_Field_Information ('PAY007', 'ARR_BAL2',     $Pay007_Arr_Bal2,    #dummy_width)
   do Get_Field_Information ('PAY007', 'GR_TOT',       $Pay007_Gr_Tot,      #dummy_width)
   do Get_Field_Information ('PAY007', 'COMP_TOT',     $Pay007_Comp_Tot,    #dummy_width)
   do Get_Field_Information ('PAY007', 'DED_TOT',      $Pay007_Ded_Tot,     #dummy_width)
   do Get_Field_Information ('PAY007', 'NO_DATATXT',   $Pay007_No_DataTxt,  #dummy_width)
end-procedure

begin-procedure Report
  move '*' to $Company

begin-SELECT DISTINCT
A.COMPANY     ()     on-break print=never level=1 procedure=Company-Change
A.PAY_END_DT
E.DEDCD       (+1,1) on-break skiplines=2 level=2 procedure=Deduction-Change
B.EMPLID      (0,52)
E.BENEFIT_RCD_NBR  (0,66)
B.NAME        (0,74,30)

#ifdef DB2ALL
DECIMAL(E.ARREARS_BAL,15,3)   &E.Arrears_bal
#else
E.ARREARS_BAL           &E.Arrears_bal
#endif

E.PLAN_TYPE

  print &E.Arrears_bal  (0,105) EDIT 999,999.99

  move &A.Pay_End_Dt to $PayEndDate
  add &E.Arrears_Bal to #DeductionTotal

  if &A.Company <> $Company
    move &A.Company to $Company
    do Get-Company-Data  !for $DeductionTblID
    move ' ' to $DedCd
  end-if

  if &E.DedCd <> $DedCd or &E.Plan_Type <> $PlanType
    move &E.DedCd     to $DedCd
    move &E.Plan_Type to $PlanType
    do Get-Deduction-Name
    print $DeductionName (0,9)

#ifdef DB2ALL
    move &E.Plan_Type to $Plan_Type  xxxx
#else
#ifdef MICROSOFT
    move &E.Plan_Type to $Plan_Type  xxxx
#else
    move &E.Plan_Type to $Plan_Type
#endif
#endif

    let $FieldName  = 'PLAN_TYPE'
    let $FieldValue = $Plan_Type
    do Read-Translate-Table
    move $XLatShortName to $PlanTypeName

    print $PlanTypeName  (0,40)
  end-if

FROM  PS_PAY_CALENDAR  A,
      PS_PAY_CHECK     B,
      PS_DED_ARREARS   E
WHERE [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = B.COMPANY
  AND B.PAYGROUP   = A.PAYGROUP
  AND B.PAY_END_DT = A.PAY_END_DT
  AND E.COMPANY    = A.COMPANY
  AND E.EMPLID     = B.EMPLID
  AND E.ARREARS_BAL > 0
GROUP BY A.COMPANY, A.PAY_END_DT, E.DEDCD, B.EMPLID, E.BENEFIT_RCD_NBR, B.NAME, E.ARREARS_BAL, E.PLAN_TYPE
ORDER BY A.COMPANY,
         A.PAY_END_DT,
         E.PLAN_TYPE,
         E.DEDCD,
         B.NAME,
         B.EMPLID,
         E.BENEFIT_RCD_NBR
end-SELECT


  if $company = '*'
    do Get-Header-Info-For-Blank-Report
  else
    move 1 to #level
    do Company-Change
    print $Pay007_Gr_Tot (+2,87)
    do Format-Number(#GrandTotal, $out, '9,999,999.99')
    print $out   (0,103)
  end-if

  do Reset

end-procedure

begin-procedure Company-Change
  do Deduction-Change
  print $Pay007_Comp_Tot  (+2,87)
  do Format-Number(#CompanyTotal, $out, '9,999,999.99')
  print $out    (0,103)
  add #CompanyTotal to #GrandTotal
  move 0 to #CompanyTotal
  if #level = 0
    new-page
  end-if
end-procedure

begin-procedure Deduction-Change
  print $Pay007_Ded_Tot (+2,87)
  do Format-Number(#DeductionTotal, $out, '9,999,999.99')
  print $out   (0,103)
  add #DeductionTotal to #CompanyTotal
  move 0 to #DeductionTotal
end-procedure


begin-procedure Get-Header-Info-For-Blank-Report

begin-SELECT
PPC.COMPANY
PPC.PAYGROUP
PPC.PAY_END_DT

  move &PPC.Company     to $Company
  move &PPC.PayGroup    to $PayGroup
  move &PPC.Pay_End_Dt  to $PayEndDate

  print '       '          (+2,2)
  print $Pay007_No_DataTxt ()
  NEW-PAGE

FROM PS_PAY_CALENDAR PPC
where PPC.RUN_ID = $SlctRunID
end-select

end-procedure

#Include 'payinit.sqc'   !Report Initialization and Timing
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getdednm.sqc'  !Get-Deduction-Name procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
#include 'readxlat.sqc'  !Read-Translate-Table procedure
