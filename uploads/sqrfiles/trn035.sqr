!*********************************************************
!  TRN035:  Budget Training By Gender & SPC Distribution *
!*********************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:46:36                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization

#define TRN_DEMAND
#define TRN_CATALOG_TBL
#define BUDGET_PERIOD
#define BUS_UNIT_TBL_HR
#define COURSE_TBL
#define DEPT_TBL
#include 'rellang.sqc'

#define C01    1
#define C011  10 
#define C02   20
#define C021  27
#define C0211 31 
#define C022  38
#define C03   51
#define C031  78
#define C04   89
#define C05   107
#define C06   118
#define C07   126
#define C08   134
#define C081  136
#define C09   144
#define C10   152
#define C11   160
#define C12   168
#define C13   176

!************************************************************************
! Report Section
!************************************************************************

begin-report
   do Init-DateTime
   do Init-Number
   do Get-Current-DateTime
   do Init-Report
!--ADDED FOR FIX 302027 STARTS
  do Find-Date-Format
!--ADDED FOR FIX 302027 ENDS
   do Process-Main
   do Reset
   do Stdapi-Term
end-report

!************************************************************************
! Procedure Init-Report
!************************************************************************

begin-procedure Init-Report

  move 'TRN035' to $ReportID
! Process Scheduler setup
  do Stdapi-Init
  if $prcs_process_instance = ' '
    !No Prompt
  else
     do Select-Parameters
  end-if
  let $language_cd = $prcs_language_cd
  do Init_Printer
  do Init_Report_Translation($ReportID, $language_cd)
  do Append_Report_Translation($ReportID)
  do Get_Field_Information($ReportID, 'REPORT_TITLE', $ReportTitle, #DW)
 
  display ' '
  display $ReportTitle
  display ' '
   
  display 'language_cd'
  display $language_cd
  display 'prcs_language_cd'
  display $prcs_language_cd

end-procedure

!--ADDED FOR FIX 302027 STARTS
begin-procedure Find-Date-Format

let $REC_FOUND = 'N'
begin-SELECT
A.USER_OPTION_VALUE
  let $REC_FOUND = 'Y'
FROM PSUSERPRSNLOPTN A

WHERE A.OPRID = $prcs_oprid
  AND A.USEROPTN = 'DFRMT'
end-SELECT

IF $REC_FOUND = 'N'
  let $DT_FMT = 'M'
ELSE
  LET $DT_FMT = &A.USER_OPTION_VALUE
  LET $DT_FMT = RTRIM($DT_FMT,' ')
END-If
 
end-procedure !Find-Date-Format
!--ADDED FOR FIX 302027 ENDS

!************************************************************************
! Section Heading
!************************************************************************

begin-heading 11

!--COMMENTED FOR FIX 302027 STARTS
!#Include 'stdhdg01.sqc'
!--COMMENTED FOR FIX 302027 ENDS

!---ADDED FOR FIX 590517 STARTS
    do Append_Report_Translation ('STDHDGTR')
    if $Program_Read = 'Y'
      do Get_Field_Information ('STDHDGTR', 'STDHDG_CO_NM',   $stdhdg_co_nm,   #dummy_width)
      do Get_Field_Information ('STDHDGTR', 'STDHDG_REP_ID',  $stdhdg_rep_id,  #dummy_width)
      do Get_Field_Information ('STDHDGTR', 'STDHDG_PAGE_NO', $stdhdg_page_no, #dummy_width)
      do Get_Field_Information ('STDHDGTR', 'STDHDG_RUN_DT',  $stdhdg_run_dt,  #dummy_width)
      do Get_Field_Information ('STDHDGTR', 'STDHDG_RUN_TM',  $stdhdg_run_tm,  #dummy_width)
      do Get_Field_Information ('STDHDGTR', 'STDHDG_END_REP', $stdhdg_end_rep, #dummy_width)
    end-if 
!---ADDED FOR FIX 590517 ENDS

!--ADDED FOR FIX 302027 STARTS
  print '            '    (1,1)
  !----COMMENTED FOR FIX 590517 STARTS
  !print 'PeopleSoft'      ()          center
  !print 'Report ID:  '    (+1,1)
  !print $ReportID         ()
  !----COMMENTED FOR FIX 590517 ENDS
    
  !----ADDED FOR FIX 590517 STARTS
     print $stdhdg_co_nm      ()          center
     print $stdhdg_rep_id     (+1,1)
     print $ReportID         (, +1)
  !----ADDED FOR FIX 590517 ENDS

  
  uppercase $ReportTitle
  print $ReportTitle      ()          center
  let #RptCol = {ColR} - 2
  
  !----COMMENTED FOR FIX 590517 STARTS  
  !page-number             (0,#RptCol)  'Page No.  '
  !print 'Run Date '       (+1,#RptCol)
  !----COMMENTED FOR FIX 590517 ENDS
  
  !----ADDED FOR FIX 590517 STARTS
     print $stdhdg_page_no   (0,#RptCol)
     print #page-count       (0,+2)      edit 88888888
     print $stdhdg_run_dt    (+1,#RptCol)
  !----ADDED FOR FIX 590517 ENDS

  let $RepDate = StrToDate($ReportDate,{PTRPTDATE})
      evaluate $DT_FMT
       when = 'M'
            do Format-DateTime($RepDate,$Rep_dt,{DEFMDY},'','')
            break
       when = 'D'
            do Format-DateTime($RepDate,$Rep_dt,{DEFDMY},'','')
            break
       when-Other
            do Format-DateTime($RepDate,$Rep_dt,{DEFYMD},'','')
            break
       end-evaluate
!-----Commented for fix 590517 Starts
!  print $Rep_dt           () 
!  print 'Run Time '       (+1,#RptCol)
!  print $ReportTime       ()
!-----Commented for fix 590517 Ends

!----ADDED FOR FIX 590517 STARTS
  print $Rep_dt              (, +2)
  print $stdhdg_run_tm       (+1,#RptCol)
  print $ReportTime          (, +2)
!----ADDED FOR FIX 590517 ENDS

!--ADDED FOR FIX 302027 ENDS

print $BUDGET_PERIOD_LBL         (+1,{C01})
print $BUDGET_PERIOD             (,{C02})
print $BP_DESCR                          (,{C0211})

print $BUSINESS_UNIT_LBL         (+1,{C01})
print $BUSINESS_UNIT             (,{C02})
print $BU_DESCR                          (,{C0211})

print $DEPTID_LBL                        (+1,{C01})
print $DEPTID                            (,{C02})
print $T_DEPTID_DESCR        (,{C0211})

print $COURSE_LBL                        (+1,{C01})
print $COURSE                            (,{C02})
print $T_COURSE_DESCR            (,{C0211},27)

print $DISTRIBUTION_LBL          (+1,{C06})
print $DISTRIBUTION_LBL          (,{C081})

print $BY_GENDER_LBL             (+1,{C06})
print $BY_CATEGORY_LBL           (,{C081})

let #placement_num = {C08}-{C06}-1
print '=' (+1,{C06},#placement_num) fill

let #placement_num = {C13}-{C081}
print '=' (,{C081},#placement_num) fill

print $DEPTID_LBL2                       (+1,{C01})
print $DEMAND_ID_LBL             (,{C011})
print $COURSE_LBL2                       (,{C02})
print $CATEGORY_CD_LBL           (,{C021})
print $SUB_CATEGORY_LBL          (,{C022})
print $COURSE_DESCR_LBL          (,{C03},27)
print $EMPLID_LBL                        (,{C031})
IF $TRN_PLN_CAT_SW='1' 
print $SCENARIO_LBL              (,{C04})
ELSE
print $TRN_PLN_CATEGORY_LBL              (,{C04})
END-IF
let $DEMAND_LBL = lpad($DEMAND_LBL, {C06}-{C05}, ' ')
print $DEMAND_LBL                        (,{C05})
let $GENDER_M_LBL = lpad($GENDER_M_LBL, {C07}-{C06}, ' ')
print $GENDER_M_LBL                      (,{C06})
let $GENDER_F_LBL = lpad($GENDER_F_LBL, {C08}-{C07}, ' ')
print $GENDER_F_LBL                      (,{C07})
let $CATEGORY_ONQ_LBL = lpad($CATEGORY_ONQ_LBL, {C09}-{C081}, ' ')
print $CATEGORY_ONQ_LBL          (,{C081})
let $CATEGORY_OQ_LBL = lpad($CATEGORY_OQ_LBL, {C10}-{C09}, ' ')
print $CATEGORY_OQ_LBL           (,{C09})
let $CATEGORY_E_LBL = lpad($CATEGORY_E_LBL, {C11}-{C10}, ' ')
print $CATEGORY_E_LBL            (,{C10})
let $CATEGORY_AM_LBL = lpad($CATEGORY_AM_LBL, {C12}-{C11}, ' ')
print $CATEGORY_AM_LBL           (,{C11})
let $CATEGORY_IC_LBL = lpad($CATEGORY_IC_LBL, {C13}-{C12}, ' ')
print $CATEGORY_IC_LBL           (,{C12})

end-heading

!***********************************************************************
!  Get Values 
!***********************************************************************

begin-procedure Get-Values
  let $BUDGET_PERIOD = RTRIM(&RUN_CNTL_HR.BUDGET_PERIOD, ' ')
  let $BUSINESS_UNIT = RTRIM(&RUN_CNTL_HR.BUSINESS_UNIT, ' ')
  let $DEPTID = RTRIM(&RUN_CNTL_HR.DEPTID, ' ')
  let $COURSE = RTRIM(&RUN_CNTL_HR.COURSE, ' ')
  let $TRN_PLN_CAT_SW = RTRIM(&RUN_CNTL_HR.TRN_PLN_CAT_SW , ' ')  
end-procedure

!************************************************************************
! Procedure Main
!************************************************************************

begin-procedure Process-Main

        do Get-Translat-Info     ! Global
        
        do Retrieve-Budget-Period-Descr 
        do Retrieve-Business-Unit-Descr 
        
        if $DEPTID <> ' '
           do Retrieve-department-Descr 
           do Print-Distribution-By-Deptid
        else
           if $COURSE <> ' '
                  do Retrieve-Course-Descr      
                  do Print-Distribution-By-Course
           else
                  do Print-Distribution
           end-if
        end-if
        
end-procedure

!***********************************************************************
!  Print Distribution
!***********************************************************************

begin-procedure Print-Distribution
#ifdef debugx
           display 'Entering TRN035.SQR: Print-Distribution'
#end-if

        IF $TRN_PLN_CAT_SW='1' 
          let $Orderby=' A.BUDGET_PERIOD, A.BUSINESS_UNIT, B.SCENARIO, B.DEPTID, A.DEMAND_ID'
        else
          let $Orderby=' A.TRN_PLN_CATEGORY, A.COURSE'
        end-if

begin-SELECT ON-ERROR=SQL-Error
A.COURSE                                                                        &A.COURSE
A.DESCR                                                                         &A.DESCR
B.SCENARIO                                                                      &B.SCENARIO
B.DEPTID                                                                        &B.DEPTID
B.DMND_F_APVD_FRA                                                               &B.DMND_F_APVD_FRA
B.DMND_M_APVD_FRA                                                               &B.DMND_M_APVD_FRA
B.DMND_ONQ_APVD_FRA                                                             &B.DMND_ONQ_APVD_FRA
B.DMND_OQ_APVD_FRA                                                              &B.DMND_OQ_APVD_FRA
B.DMND_E_APVD_FRA                                                               &B.DMND_E_APVD_FRA
B.DMND_AM_APVD_FRA                                                              &B.DMND_AM_APVD_FRA
B.DMND_IC_APVD_FRA                                                              &B.DMND_IC_APVD_FRA
B.DEMAND_APPROVED                                                               &B.DEMAND_APPROVED
A.DEMAND_ID                                                                     &A.DEMAND_ID
A.BUDGET_PERIOD                                                                 &A.BUDGET_PERIOD
A.BUSINESS_UNIT                                                                 &A.BUSINESS_UNIT
A.TRN_PLN_CATEGORY                                                              &A.TRN_PLN_CATEGORY

        let $SCENARIO = &B.SCENARIO
        let $TRN_PLN_CATEGORY=&A.TRN_PLN_CATEGORY
        let $COURSE_A = &A.COURSE
        let $DEPTID_B = &B.DEPTID
        
        if ($SCENARIO = $SCENARIO_OLD and $COURSE_A = $COURSE_OLD and $DEPTID_B = $DEPTID_OLD)
        or ($SCENARIO_OLD = ' ' and $COURSE_OLD = ' ' and $DEPTID_OLD = ' ')
        else
           print $DEPTID_OLD             (+1,{C01})
           print $DEMAND_ID                      (,{C011})
           print $COURSE_OLD             (,{C02})
           print $CATEGORY_CD            (,{C021})
           print $SUB_CATEGORY_CD        (,{C022})
           print $COURSE_DESCR           (,{C03}, 27)
           IF $TRN_PLN_CAT_SW='1'
             print $SCENARIO_OLD            (,{C04})
           ELSE
             move 'TRN_PLN_CATEGORY'     to $FieldName
             move $TRN_PLN_CATEGORY_OLD  to $FieldValue          
             do Read-Translate-Table
             let $XlatLongName=substr($XlatLongName,1,17)
             print $XlatLongName          (,{C04})
           END-IF
           print #DEMAND_APPROVED        (,{C05})  EDIT 999999
           print #DMND_M_APVD_FRA        (,{C06})  EDIT 999999
           print #DMND_F_APVD_FRA        (,{C07})  EDIT 999999
           print #DMND_ONQ_APVD_FRA  (,{C081}) EDIT 999999
           print #DMND_OQ_APVD_FRA       (,{C09})  EDIT 999999
           print #DMND_E_APVD_FRA        (,{C10})  EDIT 999999
           print #DMND_AM_APVD_FRA       (,{C11})  EDIT 999999
           print #DMND_IC_APVD_FRA       (,{C12})  EDIT 999999
        end-if
        
        let $TRN_DEMAND-DESCR = &A.DESCR
        do Get_Related_TRN_DEMAND(&A.BUDGET_PERIOD,&A.BUSINESS_UNIT,&A.DEMAND_ID)
        let $COURSE_DESCR = $TRN_DEMAND-DESCR

        let #DMND_F_APVD_FRA = &B.DMND_F_APVD_FRA
        let #DMND_M_APVD_FRA = &B.DMND_M_APVD_FRA
        let #DMND_ONQ_APVD_FRA = &B.DMND_ONQ_APVD_FRA
        let #DMND_OQ_APVD_FRA = &B.DMND_OQ_APVD_FRA
        let #DMND_E_APVD_FRA = &B.DMND_E_APVD_FRA
        let #DMND_AM_APVD_FRA = &B.DMND_AM_APVD_FRA
        let #DMND_IC_APVD_FRA = &B.DMND_IC_APVD_FRA
        let #DEMAND_APPROVED = &B.DEMAND_APPROVED
        let $DEMAND_ID = &A.DEMAND_ID
        
        do Find-Course ($COURSE_A, $CATEGORY_CD, $SUB_CATEGORY_CD, $REAL_COURSE, $COURSE_DESCR) 
        
        if ($SCENARIO = $SCENARIO_OLD and $COURSE_A = $COURSE_OLD and $DEPTID_B = $DEPTID_OLD)
           let #DMND_F_APVD_FRA = #DMND_F_APVD_FRA + #DMND_F_APVD_FRA_OLD
           let #DMND_M_APVD_FRA = #DMND_M_APVD_FRA + #DMND_M_APVD_FRA_OLD
           let #DMND_ONQ_APVD_FRA = #DMND_ONQ_APVD_FRA + #DMND_ONQ_APVD_FRA_OLD
           let #DMND_OQ_APVD_FRA = #DMND_OQ_APVD_FRA + #DMND_OQ_APVD_FRA_OLD
           let #DMND_E_APVD_FRA = #DMND_E_APVD_FRA + #DMND_E_APVD_FRA_OLD
           let #DMND_AM_APVD_FRA = #DMND_AM_APVD_FRA + #DMND_AM_APVD_FRA_OLD
           let #DMND_IC_APVD_FRA = #DMND_IC_APVD_FRA + #DMND_IC_APVD_FRA_OLD
           let #DEMAND_APPROVED = #DEMAND_APPROVED + #DEMAND_APPROVED_OLD
        end-if
        
        let $SCENARIO_OLD = $SCENARIO
        let $TRN_PLN_CATEGORY_OLD = $TRN_PLN_CATEGORY
        let $COURSE_OLD = $COURSE_A
        let $COURSE_DESCR_OLD = $COURSE_DESCR
        let $DEPTID_OLD = $DEPTID_B
        let #DMND_F_APVD_FRA_OLD = #DMND_F_APVD_FRA
        let #DMND_M_APVD_FRA_OLD = #DMND_M_APVD_FRA
        let #DMND_ONQ_APVD_FRA_OLD = #DMND_ONQ_APVD_FRA
        let #DMND_OQ_APVD_FRA_OLD = #DMND_OQ_APVD_FRA
        let #DMND_E_APVD_FRA_OLD = #DMND_E_APVD_FRA
        let #DMND_AM_APVD_FRA_OLD = #DMND_AM_APVD_FRA
        let #DMND_IC_APVD_FRA_OLD = #DMND_IC_APVD_FRA
        let #DEMAND_APPROVED_OLD = #DEMAND_APPROVED
        
        let #DMND_F_APVD_FRA_T = #DMND_F_APVD_FRA_T + #DMND_F_APVD_FRA
        let #DMND_M_APVD_FRA_T = #DMND_M_APVD_FRA_T + #DMND_M_APVD_FRA
        let #DMND_ONQ_APVD_FRA_T = #DMND_ONQ_APVD_FRA_T + #DMND_ONQ_APVD_FRA
        let #DMND_OQ_APVD_FRA_T = #DMND_OQ_APVD_FRA_T + #DMND_OQ_APVD_FRA
        let #DMND_E_APVD_FRA_T = #DMND_E_APVD_FRA_T + #DMND_E_APVD_FRA
        let #DMND_AM_APVD_FRA_T = #DMND_AM_APVD_FRA_T + #DMND_AM_APVD_FRA
        let #DMND_IC_APVD_FRA_T = #DMND_IC_APVD_FRA_T + #DMND_IC_APVD_FRA
        let #DEMAND_APPROVED_T = #DEMAND_APPROVED_T + #DEMAND_APPROVED

#ifdef debugx
        display $DEPTID_B
        display $COURSE_A
        display $COURSE_DESCR
        display $SCENARIO
        display #DMND_M_APVD_FRA
        display #DMND_F_APVD_FRA
        display #DMND_ONQ_APVD_FRA
        display #DMND_OQ_APVD_FRA
        display #DMND_E_APVD_FRA
        display #DMND_AM_APVD_FRA
        display #DMND_IC_APVD_FRA
        display ' '
#end-if
        
from PS_TRN_DEMAND A, PS_TRN_SIMULATION B, PS_TRN_SCENARIO C
where A.BUDGET_PERIOD = $BUDGET_PERIOD
and A.BUSINESS_UNIT = $BUSINESS_UNIT
and A.EE_DEMAND_SW = 'N'
and A.BUDGET_PERIOD = B.BUDGET_PERIOD
and A.BUSINESS_UNIT = B.BUSINESS_UNIT
and A.DEMAND_ID = B.DEMAND_ID
and B.BUDGET_PERIOD = C.BUDGET_PERIOD
and B.BUSINESS_UNIT = C.BUSINESS_UNIT
and B.DEPTID = C.DEPTID
and B.SCENARIO = C.SCENARIO
and C.SCENARIO_STATUS = 'A'
order by [$Orderby]
end-SELECT

          print $DEPTID_OLD              (+1,{C01})
          print $DEMAND_ID               (,{C011})
          print $COURSE_OLD              (,{C02})
          print $CATEGORY_CD             (,{C021})
          print $SUB_CATEGORY_CD         (,{C022})
          print $COURSE_DESCR_OLD        (,{C03},27)
          IF $TRN_PLN_CAT_SW='1'
             print $SCENARIO_OLD            (,{C04})
          ELSE
             move 'TRN_PLN_CATEGORY'     to $FieldName
             move $TRN_PLN_CATEGORY_OLD  to $FieldValue          
             do Read-Translate-Table
             let $XlatLongName=substr($XlatLongName,1,17)
             print $XlatLongName           (,{C04})
          END-IF
          print #DEMAND_APPROVED         (,{C05})  EDIT 999999
          print #DMND_M_APVD_FRA         (,{C06})  EDIT 999999
          print #DMND_F_APVD_FRA         (,{C07})  EDIT 999999
          print #DMND_ONQ_APVD_FRA       (,{C081}) EDIT 999999
          print #DMND_OQ_APVD_FRA        (,{C09})  EDIT 999999
          print #DMND_E_APVD_FRA         (,{C10})  EDIT 999999
          print #DMND_AM_APVD_FRA        (,{C11})  EDIT 999999
          print #DMND_IC_APVD_FRA        (,{C12})  EDIT 999999
           
          let #placement_num = {C13}-{C01}
          print '-' (+1,{C01},#placement_num) fill
          print $GENERAL_TOT_LBL                           (+1,{C01})
          
          print #DEMAND_APPROVED_T                         (,{C05})    EDIT 999999
          print #DMND_M_APVD_FRA_T                         (,{C06})    EDIT 999999
          print #DMND_F_APVD_FRA_T                         (,{C07})    EDIT 999999
          print #DMND_ONQ_APVD_FRA_T               (,{C081})   EDIT 999999
          print #DMND_OQ_APVD_FRA_T                (,{C09})    EDIT 999999
          print #DMND_E_APVD_FRA_T                         (,{C10})    EDIT 999999
          print #DMND_AM_APVD_FRA_T                (,{C11})    EDIT 999999
          print #DMND_IC_APVD_FRA_T                (,{C12})    EDIT 999999
           
          print ''                                                         (+1,{C01})
   
          do Print-Individuals
          do Print-Total
           
#ifdef debugx
           display 'Exiting TRN035.SQR: Print-Distribution'
#end-if
end-procedure

!***********************************************************************
!  Print Distribution by Course
!***********************************************************************

begin-procedure Print-Distribution-By-Course
#ifdef debugx
           display 'Entering TRN035.SQR: Print-Distribution-By-Course'
#end-if

        IF $TRN_PLN_CAT_SW='1' 
          let $Orderby=' D.BUDGET_PERIOD, D.BUSINESS_UNIT, E.SCENARIO, E.DEPTID, D.DEMAND_ID'
        else
          let $Orderby=' D.TRN_PLN_CATEGORY, D.COURSE'
        end-if

begin-SELECT ON-ERROR=SQL-Error
D.COURSE                                                                    &D.COURSE
D.DESCR                                                                     &D.DESCR
E.SCENARIO                                                                  &E.SCENARIO
E.DEPTID                                                                    &E.DEPTID
E.DMND_F_APVD_FRA                                                           &E.DMND_F_APVD_FRA
E.DMND_M_APVD_FRA                                                           &E.DMND_M_APVD_FRA
E.DMND_ONQ_APVD_FRA                                                         &E.DMND_ONQ_APVD_FRA
E.DMND_OQ_APVD_FRA                                                          &E.DMND_OQ_APVD_FRA
E.DMND_E_APVD_FRA                                                           &E.DMND_E_APVD_FRA
E.DMND_AM_APVD_FRA                                                          &E.DMND_AM_APVD_FRA
E.DMND_IC_APVD_FRA                                                          &E.DMND_IC_APVD_FRA
E.DEMAND_APPROVED                                                           &E.DEMAND_APPROVED
D.DEMAND_ID                                                                 &D.DEMAND_ID
D.BUDGET_PERIOD                                                             &D.BUDGET_PERIOD
D.BUSINESS_UNIT                                                             &D.BUSINESS_UNIT
D.TRN_PLN_CATEGORY                                                          &D.TRN_PLN_CATEGORY

        let $SCENARIO = &E.SCENARIO
        let $TRN_PLN_CATEGORY=&D.TRN_PLN_CATEGORY
        let $COURSE_D = &D.COURSE
        let $DEPTID_E = &E.DEPTID
        
        if ($SCENARIO = $SCENARIO_OLD and $COURSE_D = $COURSE_OLD and $DEPTID_E = $DEPTID_OLD)
        or ($SCENARIO_OLD = ' ' and $COURSE_OLD = ' ' and $DEPTID_OLD = ' ')
        else
           print $DEPTID_OLD             (+1,{C01})
           print $DEMAND_ID                      (,{C011})
           print $COURSE_OLD             (,{C02})
           print $CATEGORY_CD            (,{C021})
           print $SUB_CATEGORY_CD        (,{C022})
           print $COURSE_DESCR           (,{C03}, 27)

           IF $TRN_PLN_CAT_SW='1'
             print $SCENARIO_OLD            (,{C04})
           ELSE
             move 'TRN_PLN_CATEGORY'     to $FieldName
             move $TRN_PLN_CATEGORY_OLD  to $FieldValue          
             do Read-Translate-Table
             let $XlatLongName=substr($XlatLongName,1,17)
             print $XlatLongName           (,{C04})
           END-IF
           print #DEMAND_APPROVED        (,{C05})  EDIT 999999
           print #DMND_M_APVD_FRA        (,{C06})  EDIT 999999
           print #DMND_F_APVD_FRA        (,{C07})  EDIT 999999
           print #DMND_ONQ_APVD_FRA  (,{C081}) EDIT 999999
           print #DMND_OQ_APVD_FRA       (,{C09})  EDIT 999999
           print #DMND_E_APVD_FRA        (,{C10})  EDIT 999999
           print #DMND_AM_APVD_FRA       (,{C11})  EDIT 999999
           print #DMND_IC_APVD_FRA       (,{C12})  EDIT 999999
        end-if
        
        let $TRN_DEMAND-DESCR = &D.DESCR
        do Get_Related_TRN_DEMAND(&D.BUDGET_PERIOD,&D.BUSINESS_UNIT,&D.DEMAND_ID)
        let $COURSE_DESCR = $TRN_DEMAND-DESCR

        let #DMND_F_APVD_FRA = &E.DMND_F_APVD_FRA
        let #DMND_M_APVD_FRA = &E.DMND_M_APVD_FRA
        let #DMND_ONQ_APVD_FRA = &E.DMND_ONQ_APVD_FRA
        let #DMND_OQ_APVD_FRA = &E.DMND_OQ_APVD_FRA
        let #DMND_E_APVD_FRA = &E.DMND_E_APVD_FRA
        let #DMND_AM_APVD_FRA = &E.DMND_AM_APVD_FRA
        let #DMND_IC_APVD_FRA = &E.DMND_IC_APVD_FRA
        let #DEMAND_APPROVED = &E.DEMAND_APPROVED
        let $DEMAND_ID = &D.DEMAND_ID
        
        do Find-Course ($COURSE_D, $CATEGORY_CD, $SUB_CATEGORY_CD, $REAL_COURSE, $COURSE_DESCR) 
        
        if ($SCENARIO = $SCENARIO_OLD and $COURSE_D = $COURSE_OLD and $DEPTID_E = $DEPTID_OLD)
           let #DMND_F_APVD_FRA = #DMND_F_APVD_FRA + #DMND_F_APVD_FRA_OLD
           let #DMND_M_APVD_FRA = #DMND_M_APVD_FRA + #DMND_M_APVD_FRA_OLD
           let #DMND_ONQ_APVD_FRA = #DMND_ONQ_APVD_FRA + #DMND_ONQ_APVD_FRA_OLD
           let #DMND_OQ_APVD_FRA = #DMND_OQ_APVD_FRA + #DMND_OQ_APVD_FRA_OLD
           let #DMND_E_APVD_FRA = #DMND_E_APVD_FRA + #DMND_E_APVD_FRA_OLD
           let #DMND_AM_APVD_FRA = #DMND_AM_APVD_FRA + #DMND_AM_APVD_FRA_OLD
           let #DMND_IC_APVD_FRA = #DMND_IC_APVD_FRA + #DMND_IC_APVD_FRA_OLD
           let #DEMAND_APPROVED = #DEMAND_APPROVED + #DEMAND_APPROVED_OLD
        end-if
        
        let $SCENARIO_OLD = $SCENARIO
        let $TRN_PLN_CATEGORY_OLD = $TRN_PLN_CATEGORY
        let $COURSE_OLD = $COURSE_D
        let $COURSE_DESCR_OLD = $COURSE_DESCR
        let $DEPTID_OLD = $DEPTID_E
        let #DMND_F_APVD_FRA_OLD = #DMND_F_APVD_FRA
        let #DMND_M_APVD_FRA_OLD = #DMND_M_APVD_FRA
        let #DMND_ONQ_APVD_FRA_OLD = #DMND_ONQ_APVD_FRA
        let #DMND_OQ_APVD_FRA_OLD = #DMND_OQ_APVD_FRA
        let #DMND_E_APVD_FRA_OLD = #DMND_E_APVD_FRA
        let #DMND_AM_APVD_FRA_OLD = #DMND_AM_APVD_FRA
        let #DMND_IC_APVD_FRA_OLD = #DMND_IC_APVD_FRA
        let #DEMAND_APPROVED_OLD = #DEMAND_APPROVED
        
        let #DMND_F_APVD_FRA_T = #DMND_F_APVD_FRA_T + #DMND_F_APVD_FRA
        let #DMND_M_APVD_FRA_T = #DMND_M_APVD_FRA_T + #DMND_M_APVD_FRA
        let #DMND_ONQ_APVD_FRA_T = #DMND_ONQ_APVD_FRA_T + #DMND_ONQ_APVD_FRA
        let #DMND_OQ_APVD_FRA_T = #DMND_OQ_APVD_FRA_T + #DMND_OQ_APVD_FRA
        let #DMND_E_APVD_FRA_T = #DMND_E_APVD_FRA_T + #DMND_E_APVD_FRA
        let #DMND_AM_APVD_FRA_T = #DMND_AM_APVD_FRA_T + #DMND_AM_APVD_FRA
        let #DMND_IC_APVD_FRA_T = #DMND_IC_APVD_FRA_T + #DMND_IC_APVD_FRA
        let #DEMAND_APPROVED_T = #DEMAND_APPROVED_T + #DEMAND_APPROVED

from PS_TRN_DEMAND D, PS_TRN_SIMULATION E, PS_TRN_SCENARIO F
where D.BUDGET_PERIOD = $BUDGET_PERIOD
and D.BUSINESS_UNIT = $BUSINESS_UNIT
and D.COURSE = $COURSE
and D.EE_DEMAND_SW = 'N'
and D.BUDGET_PERIOD = E.BUDGET_PERIOD
and D.BUSINESS_UNIT = E.BUSINESS_UNIT
and D.DEMAND_ID = E.DEMAND_ID
and D.BUDGET_PERIOD = F.BUDGET_PERIOD
and D.BUSINESS_UNIT = F.BUSINESS_UNIT
and E.DEPTID = F.DEPTID
and E.SCENARIO = F.SCENARIO
and F.SCENARIO_STATUS = 'A'
order by [$Orderby]
end-SELECT

          print $DEPTID_OLD              (+1,{C01})
          print $DEMAND_ID               (,{C011})
          print $COURSE_OLD              (,{C02})
          print $CATEGORY_CD             (,{C021})
          print $SUB_CATEGORY_CD         (,{C022})
          print $COURSE_DESCR_OLD        (,{C03},27)
          IF $TRN_PLN_CAT_SW='1'
             print $SCENARIO_OLD            (,{C04})
          ELSE
             move 'TRN_PLN_CATEGORY'     to $FieldName
             move $TRN_PLN_CATEGORY_OLD      to $FieldValue          
             do Read-Translate-Table
             let $XlatLongName=substr($XlatLongName,1,17)
             print $XlatLongName           (,{C04})
          END-IF
          print #DEMAND_APPROVED         (,{C05})  EDIT 999999
          print #DMND_M_APVD_FRA         (,{C06})  EDIT 999999
          print #DMND_F_APVD_FRA         (,{C07})  EDIT 999999
          print #DMND_ONQ_APVD_FRA       (,{C081}) EDIT 999999
          print #DMND_OQ_APVD_FRA        (,{C09})  EDIT 999999
          print #DMND_E_APVD_FRA         (,{C10})  EDIT 999999
          print #DMND_AM_APVD_FRA        (,{C11})  EDIT 999999
          print #DMND_IC_APVD_FRA        (,{C12})  EDIT 999999
           
          let #placement_num = {C13}-{C01}
          print '-' (+1,{C01},#placement_num) fill
          print $GENERAL_TOT_LBL                           (+1,{C01})
          
          print #DEMAND_APPROVED_T                         (,{C05})  EDIT 999999
          print #DMND_M_APVD_FRA_T                         (,{C06})  EDIT 999999
          print #DMND_F_APVD_FRA_T                         (,{C07})  EDIT 999999
          print #DMND_ONQ_APVD_FRA_T               (,{C081}) EDIT 999999
          print #DMND_OQ_APVD_FRA_T                (,{C09})  EDIT 999999
          print #DMND_E_APVD_FRA_T                         (,{C10})  EDIT 999999
          print #DMND_AM_APVD_FRA_T                (,{C11})  EDIT 999999
          print #DMND_IC_APVD_FRA_T                (,{C12})  EDIT 999999
           
          print ''                                                         (+1,{C01})
   
          do Print-Individuals-By-Course
          do Print-Total
           
#ifdef debugx
           display 'Exiting TRN035.SQR: Print-Distribution-By-Course'
#end-if
end-procedure

!***********************************************************************
!  Print Distribution by Department
!***********************************************************************

begin-procedure Print-Distribution-By-Deptid
#ifdef debugx
           display 'Entering TRN035.SQR: Print-Distribution-By-Deptid'
#end-if

        IF $TRN_PLN_CAT_SW='1' 
           let $Orderby=' G.BUDGET_PERIOD, G.BUSINESS_UNIT, H.SCENARIO, H.DEPTID, G.DEMAND_ID'
        else
           let $Orderby=' G.TRN_PLN_CATEGORY, G.COURSE'
        end-if

begin-SELECT ON-ERROR=SQL-Error
G.COURSE                                                                 &G.COURSE
G.DESCR                                                                  &G.DESCR
H.SCENARIO                                                               &H.SCENARIO
H.DEPTID                                                                 &H.DEPTID
H.DMND_F_APVD_FRA                                                        &H.DMND_F_APVD_FRA
H.DMND_M_APVD_FRA                                                        &H.DMND_M_APVD_FRA
H.DMND_ONQ_APVD_FRA                                                      &H.DMND_ONQ_APVD_FRA
H.DMND_OQ_APVD_FRA                                                       &H.DMND_OQ_APVD_FRA
H.DMND_E_APVD_FRA                                                        &H.DMND_E_APVD_FRA
H.DMND_AM_APVD_FRA                                                       &H.DMND_AM_APVD_FRA
H.DMND_IC_APVD_FRA                                                       &H.DMND_IC_APVD_FRA
H.DEMAND_APPROVED                                                        &H.DEMAND_APPROVED
G.DEMAND_ID                                                              &G.DEMAND_ID
G.BUDGET_PERIOD                                                          &G.BUDGET_PERIOD
G.BUSINESS_UNIT                                                          &G.BUSINESS_UNIT
G.TRN_PLN_CATEGORY                                                       &G.TRN_PLN_CATEGORY

        let $SCENARIO = &H.SCENARIO
        let $TRN_PLN_CATEGORY=&G.TRN_PLN_CATEGORY
        let $COURSE_G = &G.COURSE
        let $DEPTID_H = &H.DEPTID
        
        if ($SCENARIO = $SCENARIO_OLD and $COURSE_G = $COURSE_OLD and $DEPTID_H = $DEPTID_OLD)
        or ($SCENARIO_OLD = ' ' and $COURSE_OLD = ' ' and $DEPTID_OLD = ' ')
        else
           print $DEPTID_OLD             (+1,{C01})
           print $DEMAND_ID                      (,{C011})
           print $COURSE_OLD             (,{C02})
           print $CATEGORY_CD            (,{C021})
           print $SUB_CATEGORY_CD        (,{C022})
           print $COURSE_DESCR           (,{C03}, 27)
           
           IF $TRN_PLN_CAT_SW='1'
              print $SCENARIO_OLD            (,{C04})
           ELSE
              move 'TRN_PLN_CATEGORY'     to $FieldName
              move $TRN_PLN_CATEGORY_OLD  to $FieldValue          
              do Read-Translate-Table
              let $XlatLongName=substr($XlatLongName,1,17)
              print $XlatLongName           (,{C04})
           END-IF

           print #DEMAND_APPROVED        (,{C05})  EDIT 999999
           print #DMND_M_APVD_FRA        (,{C06})  EDIT 999999
           print #DMND_F_APVD_FRA        (,{C07})  EDIT 999999
           print #DMND_ONQ_APVD_FRA  (,{C081}) EDIT 999999
           print #DMND_OQ_APVD_FRA       (,{C09})  EDIT 999999
           print #DMND_E_APVD_FRA        (,{C10})  EDIT 999999
           print #DMND_AM_APVD_FRA       (,{C11})  EDIT 999999
           print #DMND_IC_APVD_FRA       (,{C12})  EDIT 999999
        end-if
        
        let $TRN_DEMAND-DESCR = &G.DESCR
        do Get_Related_TRN_DEMAND(&G.BUDGET_PERIOD,&G.BUSINESS_UNIT,&G.DEMAND_ID)
        let $COURSE_DESCR = $TRN_DEMAND-DESCR

        let #DMND_F_APVD_FRA = &H.DMND_F_APVD_FRA
        let #DMND_M_APVD_FRA = &H.DMND_M_APVD_FRA
        let #DMND_ONQ_APVD_FRA = &H.DMND_ONQ_APVD_FRA
        let #DMND_OQ_APVD_FRA = &H.DMND_OQ_APVD_FRA
        let #DMND_E_APVD_FRA = &H.DMND_E_APVD_FRA
        let #DMND_AM_APVD_FRA = &H.DMND_AM_APVD_FRA
        let #DMND_IC_APVD_FRA = &H.DMND_IC_APVD_FRA
        let #DEMAND_APPROVED = &H.DEMAND_APPROVED
        let $DEMAND_ID = &G.DEMAND_ID
        
        do Find-Course ($COURSE_G, $CATEGORY_CD, $SUB_CATEGORY_CD, $REAL_COURSE, $COURSE_DESCR) 
        
        if ($SCENARIO = $SCENARIO_OLD and $COURSE_G = $COURSE_OLD and $DEPTID_H = $DEPTID_OLD)
           let #DMND_F_APVD_FRA = #DMND_F_APVD_FRA + #DMND_F_APVD_FRA_OLD
           let #DMND_M_APVD_FRA = #DMND_M_APVD_FRA + #DMND_M_APVD_FRA_OLD
           let #DMND_ONQ_APVD_FRA = #DMND_ONQ_APVD_FRA + #DMND_ONQ_APVD_FRA_OLD
           let #DMND_OQ_APVD_FRA = #DMND_OQ_APVD_FRA + #DMND_OQ_APVD_FRA_OLD
           let #DMND_E_APVD_FRA = #DMND_E_APVD_FRA + #DMND_E_APVD_FRA_OLD
           let #DMND_AM_APVD_FRA = #DMND_AM_APVD_FRA + #DMND_AM_APVD_FRA_OLD
           let #DMND_IC_APVD_FRA = #DMND_IC_APVD_FRA + #DMND_IC_APVD_FRA_OLD
           let #DEMAND_APPROVED = #DEMAND_APPROVED + #DEMAND_APPROVED_OLD
        end-if
        
        let $SCENARIO_OLD = $SCENARIO
        let $TRN_PLN_CATEGORY_OLD = $TRN_PLN_CATEGORY
        let $COURSE_OLD = $COURSE_G
        let $COURSE_DESCR_OLD = $COURSE_DESCR
        let $DEPTID_OLD = $DEPTID_H
        let #DMND_F_APVD_FRA_OLD = #DMND_F_APVD_FRA
        let #DMND_M_APVD_FRA_OLD = #DMND_M_APVD_FRA
        let #DMND_ONQ_APVD_FRA_OLD = #DMND_ONQ_APVD_FRA
        let #DMND_OQ_APVD_FRA_OLD = #DMND_OQ_APVD_FRA
        let #DMND_E_APVD_FRA_OLD = #DMND_E_APVD_FRA
        let #DMND_AM_APVD_FRA_OLD = #DMND_AM_APVD_FRA
        let #DMND_IC_APVD_FRA_OLD = #DMND_IC_APVD_FRA
        let #DEMAND_APPROVED_OLD = #DEMAND_APPROVED
        
        let #DMND_F_APVD_FRA_T = #DMND_F_APVD_FRA_T + #DMND_F_APVD_FRA
        let #DMND_M_APVD_FRA_T = #DMND_M_APVD_FRA_T + #DMND_M_APVD_FRA
        let #DMND_ONQ_APVD_FRA_T = #DMND_ONQ_APVD_FRA_T + #DMND_ONQ_APVD_FRA
        let #DMND_OQ_APVD_FRA_T = #DMND_OQ_APVD_FRA_T + #DMND_OQ_APVD_FRA
        let #DMND_E_APVD_FRA_T = #DMND_E_APVD_FRA_T + #DMND_E_APVD_FRA
        let #DMND_AM_APVD_FRA_T = #DMND_AM_APVD_FRA_T + #DMND_AM_APVD_FRA
        let #DMND_IC_APVD_FRA_T = #DMND_IC_APVD_FRA_T + #DMND_IC_APVD_FRA
        let #DEMAND_APPROVED_T = #DEMAND_APPROVED_T + #DEMAND_APPROVED

from PS_TRN_DEMAND G, PS_TRN_SIMULATION H, PS_TRN_SCENARIO I
where G.BUDGET_PERIOD = $BUDGET_PERIOD
and G.BUSINESS_UNIT = $BUSINESS_UNIT
and H.DEPTID = $DEPTID
and G.EE_DEMAND_SW = 'N'
and G.BUDGET_PERIOD = H.BUDGET_PERIOD
and G.BUSINESS_UNIT = H.BUSINESS_UNIT
and G.DEMAND_ID = H.DEMAND_ID
and H.BUDGET_PERIOD = I.BUDGET_PERIOD
and H.BUSINESS_UNIT = I.BUSINESS_UNIT
and H.DEPTID = I.DEPTID
and H.SCENARIO = I.SCENARIO
and I.SCENARIO_STATUS = 'A'
order by [$Orderby]
end-SELECT

          print $DEPTID_OLD                      (+1,{C01})
          print $DEMAND_ID                       (,{C011})
          print $COURSE_OLD                      (,{C02})
          print $CATEGORY_CD             (,{C021})
          print $SUB_CATEGORY_CD         (,{C022})
          print $COURSE_DESCR_OLD        (,{C03},27)
          
          IF $TRN_PLN_CAT_SW='1'
             print $SCENARIO_OLD            (,{C04})
          ELSE
             move 'TRN_PLN_CATEGORY'     to $FieldName
             move $TRN_PLN_CATEGORY_OLD  to $FieldValue          
             do Read-Translate-Table
             let $XlatLongName=substr($XlatLongName,1,17)
             print $XlatLongName           (,{C04})
          END-IF
          print #DEMAND_APPROVED         (,{C05})  EDIT 999999
          print #DMND_M_APVD_FRA         (,{C06})  EDIT 999999
          print #DMND_F_APVD_FRA         (,{C07})  EDIT 999999
          print #DMND_ONQ_APVD_FRA   (,{C081}) EDIT 999999
          print #DMND_OQ_APVD_FRA        (,{C09})  EDIT 999999
          print #DMND_E_APVD_FRA         (,{C10})  EDIT 999999
          print #DMND_AM_APVD_FRA        (,{C11})  EDIT 999999
          print #DMND_IC_APVD_FRA        (,{C12})  EDIT 999999
           
          let #placement_num = {C13}-{C01}
          print '-' (+1,{C01},#placement_num) fill
          print $GENERAL_TOT_LBL                           (+1,{C01})
          
          print #DEMAND_APPROVED_T                         (,{C05})  EDIT 999999
          print #DMND_M_APVD_FRA_T                         (,{C06})  EDIT 999999
          print #DMND_F_APVD_FRA_T                         (,{C07})  EDIT 999999
          print #DMND_ONQ_APVD_FRA_T               (,{C081}) EDIT 999999
          print #DMND_OQ_APVD_FRA_T                (,{C09})  EDIT 999999
          print #DMND_E_APVD_FRA_T                         (,{C10})  EDIT 999999
          print #DMND_AM_APVD_FRA_T                (,{C11})  EDIT 999999
          print #DMND_IC_APVD_FRA_T                (,{C12})  EDIT 999999
           
          print ''                                                         (+1,{C01})
   
          do Print-Individuals-By-Deptid
          do Print-Total
           
#ifdef debugx
           display 'Exiting TRN035.SQR: Print-Distribution-By-Deptid'
#end-if
end-procedure


!***********************************************************************
!  Gets the strings printed in this report (Globalization)
!***********************************************************************

begin-procedure Get-Translat-Info

   do Get_Field_Information($ReportID, 'BUDGET_PERIOD_LBL'  , $BUDGET_PERIOD_LBL       , #DW)
   do Get_Field_Information($ReportID, 'BUSINESS_UNIT_LBL'  , $BUSINESS_UNIT_LBL           , #DW)
   do Get_Field_Information($ReportID, 'DISTRIBUTION_LBL'   , $DISTRIBUTION_LBL        , #DW)
   do Get_Field_Information($ReportID, 'DEPTID_LBL'             , $DEPTID_LBL                      , #DW)
   do Get_Field_Information($ReportID, 'DEPTID_LBL2'            , $DEPTID_LBL2                     , #DW)
   do Get_Field_Information($ReportID, 'DEMAND_ID_LBL'          , $DEMAND_ID_LBL                   , #DW)
   do Get_Field_Information($ReportID, 'COURSE_LBL'             , $COURSE_LBL                      , #DW)
   do Get_Field_Information($ReportID, 'COURSE_LBL2'            , $COURSE_LBL2                     , #DW)
   do Get_Field_Information($ReportID, 'CATEGORY_CD_LBL'        , $CATEGORY_CD_LBL                 , #DW)
   do Get_Field_Information($ReportID, 'SUB_CATEGORY_LBL'       , $SUB_CATEGORY_LBL                , #DW)
   do Get_Field_Information($ReportID, 'COURSE_DESCR_LBL'       , $COURSE_DESCR_LBL                , #DW)
   do Get_Field_Information($ReportID, 'SCENARIO_LBL'           , $SCENARIO_LBL            , #DW)
   do Get_Field_Information($ReportID, 'DEMAND_LBL'             , $DEMAND_LBL              , #DW)
   do Get_Field_Information($ReportID, 'BY_GENDER_LBL'          , $BY_GENDER_LBL           , #DW)
   do Get_Field_Information($ReportID, 'BY_CATEGORY_LBL'    , $BY_CATEGORY_LBL             , #DW)
   do Get_Field_Information($ReportID, 'GENDER_M_LBL'       , $GENDER_M_LBL            , #DW)
   do Get_Field_Information($ReportID, 'GENDER_F_LBL'       , $GENDER_F_LBL                , #DW)
   do Get_Field_Information($ReportID, 'CATEGORY_ONQ_LBL'   , $CATEGORY_ONQ_LBL        , #DW)
   do Get_Field_Information($ReportID, 'CATEGORY_OQ_LBL'    , $CATEGORY_OQ_LBL         , #DW)
   do Get_Field_Information($ReportID, 'CATEGORY_E_LBL'     , $CATEGORY_E_LBL          , #DW)
   do Get_Field_Information($ReportID, 'CATEGORY_AM_LBL'    , $CATEGORY_AM_LBL             , #DW)
   do Get_Field_Information($ReportID, 'CATEGORY_IC_LBL'    , $CATEGORY_IC_LBL         , #DW)
   do Get_Field_Information($ReportID, 'GENERAL_TOT_LBL'    , $GENERAL_TOT_LBL         , #DW)
   do Get_Field_Information($ReportID, 'INDIV_TOT_LBL'          , $INDIV_TOT_LBL           , #DW)
   do Get_Field_Information($ReportID, 'TOTAL_LBL'              , $TOTAL_LBL               , #DW)
   do Get_Field_Information($ReportID, 'EMPLID_LBL'             , $EMPLID_LBL              , #DW)
   do Get_Field_Information($ReportID, 'TRN_PLN_CAT_LBL'             , $TRN_PLN_CATEGORY_LBL              , #DW)   
   
end-procedure Get-Translat-Info

!***********************************************************************
!  Gets the Course Category, Sub-Category and Real from PS_TRN_CATALOG_TBL
!***********************************************************************

begin-procedure Find-Course($Course, :$Category_Cd, :$Sub_Category_Cd, :$RealCourse, :$CourseDescr)
#ifdef debugx
           display 'Entering TRN035.SQR: Find-Course'
#end-if

BEGIN-SELECT ON-ERROR=SQL-Error
CATEGORY_CD      &CATEGORY_CD
SUB_CATEGORY_CD  &SUB_CATEGORY_CD
REAL_COURSE              &REAL_COURSE
DESCR                    &DESCR

   let $Category_Cd = &CATEGORY_CD
   let $Sub_Category_Cd = &SUB_CATEGORY_CD
   let $RealCourse = &REAL_COURSE

   let $TRN_CATALOG_TBL-DESCR = &DESCR
   do Get_Related_TRN_CATALOG_TBL(&CATEGORY_CD,$Course,&SUB_CATEGORY_CD)
   let $CourseDescr = $TRN_CATALOG_TBL-DESCR

FROM PS_TRN_CATALOG_TBL
WHERE COURSE = $Course
END-SELECT

#ifdef debugx
           display 'Exiting TRN035.SQR: Find-Course'
#end-if
end-procedure Find-Course($Course, :$Category_Cd, :$Sub_Category_Cd, :$RealCourse, :$CourseDescr)

!***********************************************************************
!  Gets Budget Period Description
!***********************************************************************

begin-procedure Retrieve-Budget-Period-Descr
#ifdef debugx
           display 'Entering TRN035.SQR: Retrieve-Budget-Period-Descr'
#end-if

BEGIN-SELECT ON-ERROR=SQL-Error
DESCR      &BP_DESCR

   let $BUDGET_PERIOD-DESCR = &BP_DESCR
   do Get_Related_BUDGET_PERIOD($BUDGET_PERIOD)
   let $BP_DESCR = $BUDGET_PERIOD-DESCR

FROM PS_BUDGET_PERIOD
WHERE BUDGET_PERIOD = $BUDGET_PERIOD
END-SELECT

#ifdef debugx
           display 'Exiting TRN035.SQR: Retrieve-Budget-Period-Descr'
#end-if
end-procedure Retrieve-Budget-Period-Descr

!***********************************************************************
!  Gets Business Unit Description
!***********************************************************************

begin-procedure Retrieve-Business-Unit-Descr
#ifdef debugx
           display 'Entering TRN035.SQR: Retrieve-Business-Unit-Descr'
#end-if

BEGIN-SELECT ON-ERROR=SQL-Error
DESCR      &BU_DESCR

   let $BUS_UNIT_TBL_HR-DESCR = &BU_DESCR
   do Get_Related_BUS_UNIT_TBL_HR($BUSINESS_UNIT)
   let $BU_DESCR = $BUS_UNIT_TBL_HR-DESCR

FROM PS_BUS_UNIT_TBL_HR
WHERE BUSINESS_UNIT = $BUSINESS_UNIT
END-SELECT

#ifdef debugx
           display 'Exiting TRN035.SQR: Retrieve-Business-Unit-Descr'
#end-if
end-procedure Retrieve-Business-Unit-Descr

!***********************************************************************
!  Gets Course Description
!***********************************************************************

begin-procedure Retrieve-Course-Descr
#ifdef debugx
           display 'Entering TRN035.SQR: Retrieve-Course-Descr'
#end-if

BEGIN-SELECT ON-ERROR=SQL-Error
DESCR      &COURSE_DESCR

   let $COURSE_TBL-DESCR = &COURSE_DESCR
   do Get_Related_COURSE_TBL($COURSE)
   let $T_COURSE_DESCR = substr(&COURSE_DESCR, 1, 27)
   
FROM PS_COURSE_TBL
WHERE COURSE = $COURSE
END-SELECT

#ifdef debugx
           display 'Exiting TRN035.SQR: Retrieve-Course-Descr'
#end-if
end-procedure Retrieve-Course-Descr

!***********************************************************************
!  Gets Department Description
!***********************************************************************

begin-procedure Retrieve-Department-Descr
#ifdef debugx
           display 'Entering TRN035.SQR: Retrieve-Deptid-Descr'
#end-if

BEGIN-SELECT ON-ERROR=SQL-Error
DEPT.DEPTID     &DEPT.DEPTID
DEPT.EFFDT      &DEPT.EFFDT
DEPT.SETID      &DEPT.SETID
DEPT.DESCR      &DEPT.DESCR

   let $DEPT_TBL-DESCR = &DEPT.DESCR
   do Get_Related_DEPT_TBL(&DEPT.DEPTID,&DEPT.EFFDT,&DEPT.SETID)
   let $T_DEPTID_DESCR = $DEPT_TBL-DESCR

FROM PS_DEPT_TBL DEPT
WHERE DEPT.DEPTID = $DEPTID
AND DEPT.EFFDT = (SELECT MAX(EFFDT) FROM PS_DEPT_TBL WHERE DEPTID = DEPT.DEPTID AND SETID = DEPT.SETID AND EFFDT <= $AsOfToday)
END-SELECT

#ifdef debugx
           display 'Exiting TRN035.SQR: Retrieve-Deptid-Descr'
#end-if
end-procedure Retrieve-Department-Descr

!***********************************************************************
!  Prints Individual Demands
!***********************************************************************

begin-procedure Print-Individuals

begin-SELECT ON-ERROR=SQL-Error
Q.DEPTID                                                                &Q.DEPTID
M.EMPLID                                                                &M.EMPLID
M.EMPL_RCD                                                              &M.EMPL_RCD
M.COURSE                                                                &M.COURSE
M.DEMAND_ID                                                             &M.DEMAND_ID
M.TOTAL_DEMAND                                                          &M.TOTAL_DEMAND
P.SEX                                                                   &P.SEX
M.BUDGET_PERIOD
M.BUSINESS_UNIT
M.TRN_PLN_CATEGORY                                                      &M.TRN_PLN_CATEGORY
C1.SCENARIO                                                             &C1.SCENARIO


        let $SCENARIO = &C1.SCENARIO
        let $TRN_PLN_CATEGORY=&M.TRN_PLN_CATEGORY
        let $DEPTID_Q = &Q.DEPTID
        let $EMPLID = &M.EMPLID
        let #EMPL_RCD = &M.EMPL_RCD
        let $COURSE_M = &M.COURSE
        let $DEMAND_ID = &M.DEMAND_ID
        let #TOTAL_DEMAND = &M.TOTAL_DEMAND
        let $SEX = &P.SEX
        
        do Find-Course ($COURSE_M, $CATEGORY_CD, $SUB_CATEGORY_CD, $REAL_COURSE, $COURSE_DESCR) 
        
        if $SEX = 'M' 
           let #DEMAND_M = #TOTAL_DEMAND
           let #DEMAND_F = 0
        else
           let #DEMAND_F = #TOTAL_DEMAND
           let #DEMAND_M = 0
        end-if
        
        let #DEMAND_IC  = 0
        let #DEMAND_AM  = 0
        let #DEMAND_E   = 0
        let #DEMAND_OQ  = 0
        let #DEMAND_ONQ = 0
        
        do Get-Category-2483-Fra
        
        let #DEMAND_F_T     = #DEMAND_F_T + #DEMAND_F
        let #DEMAND_M_T     = #DEMAND_M_T + #DEMAND_M
        let #DEMAND_ONQ_T   = #DEMAND_ONQ_T + #DEMAND_ONQ
        let #DEMAND_OQ_T    = #DEMAND_OQ_T + #DEMAND_OQ
        let #DEMAND_E_T     = #DEMAND_E_T + #DEMAND_E
        let #DEMAND_AM_T    = #DEMAND_AM_T + #DEMAND_AM
        let #DEMAND_IC_T    = #DEMAND_IC_T + #DEMAND_IC
        let #TOTAL_DEMAND_T = #TOTAL_DEMAND_T + #TOTAL_DEMAND
        
        print $DEPTID_Q                  (+1,{C01})
        print $DEMAND_ID                 (,{C011})
        print $COURSE_M                  (,{C02})
        IF $TRN_PLN_CAT_SW='1'
             print $SCENARIO             (,{C04})
        ELSE
             move 'TRN_PLN_CATEGORY'     to $FieldName
             move $TRN_PLN_CATEGORY      to $FieldValue
             do Read-Translate-Table
             let $XlatLongName=substr($XlatLongName,1,17)
             print $XlatLongName         (,{C04})
        END-IF        
        print $CATEGORY_CD               (,{C021})
        print $SUB_CATEGORY_CD   (,{C022})
        print $COURSE_DESCR              (,{C03},27)  
        print $EMPLID                    (,{C031})  
        print #TOTAL_DEMAND              (,{C05})  EDIT 999999
        print #DEMAND_M                  (,{C06})  EDIT 999999
        print #DEMAND_F                  (,{C07})  EDIT 999999
        print #DEMAND_ONQ                (,{C081}) EDIT 999999
        print #DEMAND_OQ                 (,{C09})  EDIT 999999
        print #DEMAND_E                  (,{C10})  EDIT 999999
        print #DEMAND_AM                 (,{C11})  EDIT 999999
        print #DEMAND_IC                 (,{C12})  EDIT 999999

from PS_TRN_DEMAND_EE M, PS_PERSONAL_DT_FST P, PS_JOB_CURR_VW Q, PS_TRN_SIMULATION B1, PS_TRN_SCENARIO C1
where M.BUDGET_PERIOD = $BUDGET_PERIOD
and M.BUSINESS_UNIT = $BUSINESS_UNIT
and P.EMPLID = M.EMPLID
and Q.EMPLID = M.EMPLID
and Q.EMPL_RCD = M.EMPL_RCD
and M.BUDGET_PERIOD = B1.BUDGET_PERIOD
and M.BUSINESS_UNIT = B1.BUSINESS_UNIT
and M.DEMAND_ID = B1.DEMAND_ID
and B1.BUDGET_PERIOD = C1.BUDGET_PERIOD
and B1.BUSINESS_UNIT = C1.BUSINESS_UNIT
and B1.DEPTID = C1.DEPTID
and B1.DEPTID = Q.DEPTID
and B1.SCENARIO = C1.SCENARIO
and C1.SCENARIO_STATUS = 'A'
order by M.BUDGET_PERIOD, M.BUSINESS_UNIT, Q.DEPTID, M.EMPLID, M.COURSE, M.DEMAND_ID
end-SELECT   
end-procedure Print-Individuals

!***********************************************************************
!  Gets the 2483 Category
!***********************************************************************

begin-procedure Get-Category-2483-Fra
#ifdef debugx
           display 'Entering TRN035.SQR: Get-Category-2483-Fra'
#end-if

begin-SELECT ON-ERROR=SQL-Error
O.CATEGORY_2483_FRA                                               &O.CATEGORY_2483_FRA

        let $CATEGRORY_2483_FRA = &O.CATEGORY_2483_FRA
        
        if $CATEGRORY_2483_FRA = 'CAD'
           let #DEMAND_IC = #TOTAL_DEMAND
        end-if
        if $CATEGRORY_2483_FRA = 'AGM'
           let #DEMAND_AM = #TOTAL_DEMAND
        end-if
        if $CATEGRORY_2483_FRA = 'EMP'
           let #DEMAND_E = #TOTAL_DEMAND
        end-if
        if $CATEGRORY_2483_FRA = 'OQU'
           let #DEMAND_OQ = #TOTAL_DEMAND
        end-if
        if $CATEGRORY_2483_FRA = 'ONQ'
           let #DEMAND_ONQ = #TOTAL_DEMAND
        end-if
        
from PS_TRN_DEMAND_EE M1, PS_JOB N, PS_EMPL_CTG_L1 O, PS_TRN_SIMULATION B2, PS_TRN_SCENARIO C2
where M1.BUDGET_PERIOD = $BUDGET_PERIOD
and M1.BUSINESS_UNIT = $BUSINESS_UNIT
and M1.EMPLID = $EMPLID
and M1.EMPL_RCD = #EMPL_RCD
and M1.EMPLID = N.EMPLID
and M1.EMPL_RCD = N.EMPL_RCD
and N.EFFDT = (select MAX(EFFDT) from PS_JOB where EMPLID = N.EMPLID and EMPL_RCD = N.EMPL_RCD and EFFDT <= M1.CREATION_DT)
and N.EFFSEQ = (select MAX(EFFSEQ) from PS_JOB where EMPLID = N.EMPLID and EMPL_RCD = N.EMPL_RCD and EFFDT = N.EFFDT)
and N.SETID_LBR_AGRMNT = O.SETID
and N.LABOR_AGREEMENT = O.LABOR_AGREEMENT
and N.EMPL_CTG = O.EMPL_CTG
and O.EFFDT = (select MAX(EFFDT) from PS_EMPL_CTG_L1 where SETID = O.SETID and LABOR_AGREEMENT = O.LABOR_AGREEMENT and EMPL_CTG = O.EMPL_CTG and EFFDT <= M1.CREATION_DT)
and O.EFF_STATUS = 'A'
and M1.BUDGET_PERIOD = B2.BUDGET_PERIOD
and M1.BUSINESS_UNIT = B2.BUSINESS_UNIT
and M1.DEMAND_ID = B2.DEMAND_ID
and B2.BUDGET_PERIOD = C2.BUDGET_PERIOD
and B2.BUSINESS_UNIT = C2.BUSINESS_UNIT
and B2.DEPTID = C2.DEPTID
and B2.DEPTID = N.DEPTID
and B2.SCENARIO = C2.SCENARIO
and C2.SCENARIO_STATUS = 'A'
end-SELECT   

#ifdef debugx
           display 'Exiting TRN035.SQR: Get-Category-2483-Fra'
#end-if
end-procedure Get-Category-2483-Fra

!***********************************************************************
!  Prints Total Demands
!***********************************************************************

begin-procedure Print-Total
#ifdef debugx
           display 'Entering TRN035.SQR: Print-Total'
#end-if

        let #placement_num = {C13}-{C01}
        print '-' (+1,{C01},#placement_num) fill

        print $INDIV_TOT_LBL             (+1,{C01})
        print #TOTAL_DEMAND_T            (,{C05})  EDIT 999999
        print #DEMAND_M_T                        (,{C06})  EDIT 999999
        print #DEMAND_F_T                        (,{C07})  EDIT 999999
        print #DEMAND_ONQ_T              (,{C081}) EDIT 999999
        print #DEMAND_OQ_T                       (,{C09})  EDIT 999999
        print #DEMAND_E_T                        (,{C10})  EDIT 999999
        print #DEMAND_AM_T                       (,{C11})  EDIT 999999
        print #DEMAND_IC_T                       (,{C12})  EDIT 999999
   
        let #DEMAND_F_TT = #DEMAND_F_T + #DMND_F_APVD_FRA_T
        let #DEMAND_M_TT = #DEMAND_M_T + #DMND_M_APVD_FRA_T
        let #DEMAND_ONQ_TT = #DEMAND_ONQ_T + #DMND_ONQ_APVD_FRA_T
        let #DEMAND_OQ_TT = #DEMAND_OQ_T + #DMND_OQ_APVD_FRA_T
        let #DEMAND_E_TT = #DEMAND_E_T + #DMND_E_APVD_FRA_T
        let #DEMAND_AM_TT = #DEMAND_AM_T + #DMND_AM_APVD_FRA_T
        let #DEMAND_IC_TT = #DEMAND_IC_T + #DMND_IC_APVD_FRA_T
        let #TOTAL_DEMAND_TT = #TOTAL_DEMAND_T + #DEMAND_APPROVED_T

        let #placement_num = {C13}-{C01}
        print '=' (+2,{C01},#placement_num) fill
        
        print $TOTAL_LBL                         (+1,{C01})
        print #TOTAL_DEMAND_TT           (,{C05})  EDIT 999999
        print #DEMAND_M_TT                       (,{C06})  EDIT 999999
        print #DEMAND_F_TT                       (,{C07})  EDIT 999999
        print #DEMAND_ONQ_TT             (,{C081}) EDIT 999999
        print #DEMAND_OQ_TT                      (,{C09})  EDIT 999999
        print #DEMAND_E_TT                       (,{C10})  EDIT 999999
        print #DEMAND_AM_TT                      (,{C11})  EDIT 999999
        print #DEMAND_IC_TT                      (,{C12})  EDIT 999999
        
#ifdef debugx
           display 'Exiting TRN035.SQR: Print-Total'
#end-if
end-procedure Print-Total

!***********************************************************************
!  Prints Individual Demands By Course
!***********************************************************************

begin-procedure Print-Individuals-By-Course
#ifdef debugx
           display 'Entering TRN035.SQR: Print-Individuals-By-Course'
#end-if

begin-SELECT ON-ERROR=SQL-Error
QQ.DEPTID                                                               &QQ.DEPTID
MM.EMPLID                                                               &MM.EMPLID
MM.EMPL_RCD                                                             &MM.EMPL_RCD
MM.COURSE                                                               &MM.COURSE
MM.DEMAND_ID                                                            &MM.DEMAND_ID
MM.TOTAL_DEMAND                                                         &MM.TOTAL_DEMAND
PP.SEX                                                                  &PP.SEX
MM.BUDGET_PERIOD
MM.BUSINESS_UNIT
C3.SCENARIO                                                             &C3.SCENARIO
MM.TRN_PLN_CATEGORY                                                     &MM.TRN_PLN_CATEGORY

        let $SCENARIO = &C3.SCENARIO
        let $TRN_PLN_CATEGORY=&MM.TRN_PLN_CATEGORY
        let $DEPTID_Q = &QQ.DEPTID
        let $EMPLID = &MM.EMPLID
        let #EMPL_RCD = &MM.EMPL_RCD
        let $COURSE_M = &MM.COURSE
        let $DEMAND_ID = &MM.DEMAND_ID
        let #TOTAL_DEMAND = &MM.TOTAL_DEMAND
        let $SEX = &PP.SEX
        
        do Find-Course ($COURSE_M, $CATEGORY_CD, $SUB_CATEGORY_CD, $REAL_COURSE, $COURSE_DESCR) 
        
        if $SEX = 'M' 
           let #DEMAND_M = #TOTAL_DEMAND
           let #DEMAND_F = 0
        else
           let #DEMAND_F = #TOTAL_DEMAND
           let #DEMAND_M = 0
        end-if
        
        let #DEMAND_IC  = 0
        let #DEMAND_AM  = 0
        let #DEMAND_E   = 0
        let #DEMAND_OQ  = 0
        let #DEMAND_ONQ = 0
        
        do Get-Category-2483-Fra
        
        let #DEMAND_F_T     = #DEMAND_F_T + #DEMAND_F
        let #DEMAND_M_T     = #DEMAND_M_T + #DEMAND_M
        let #DEMAND_ONQ_T   = #DEMAND_ONQ_T + #DEMAND_ONQ
        let #DEMAND_OQ_T    = #DEMAND_OQ_T + #DEMAND_OQ
        let #DEMAND_E_T     = #DEMAND_E_T + #DEMAND_E
        let #DEMAND_AM_T    = #DEMAND_AM_T + #DEMAND_AM
        let #DEMAND_IC_T    = #DEMAND_IC_T + #DEMAND_IC
        let #TOTAL_DEMAND_T = #TOTAL_DEMAND_T + #TOTAL_DEMAND
        
        print $DEPTID_Q                  (+1,{C01})
        print $DEMAND_ID                 (,{C011})
        print $COURSE_M                  (,{C02})
        print $CATEGORY_CD               (,{C021})
        IF $TRN_PLN_CAT_SW='1'
             print $SCENARIO             (,{C04})
        ELSE
             move 'TRN_PLN_CATEGORY'     to $FieldName
             move $TRN_PLN_CATEGORY      to $FieldValue
             do Read-Translate-Table
             let $XlatLongName=substr($XlatLongName,1,17)
             print $XlatLongName         (,{C04})
        END-IF        
        print $SUB_CATEGORY_CD           (,{C022})
        print $COURSE_DESCR              (,{C03}, 27)
        print $EMPLID                    (,{C031})  
        print #TOTAL_DEMAND              (,{C05})  EDIT 999999
        print #DEMAND_M                  (,{C06})  EDIT 999999
        print #DEMAND_F                  (,{C07})  EDIT 999999
        print #DEMAND_ONQ                (,{C081}) EDIT 999999
        print #DEMAND_OQ                 (,{C09})  EDIT 999999
        print #DEMAND_E                  (,{C10})  EDIT 999999
        print #DEMAND_AM                 (,{C11})  EDIT 999999
        print #DEMAND_IC                 (,{C12})  EDIT 999999

from PS_TRN_DEMAND_EE MM, PS_PERSONAL_DT_FST PP, PS_JOB_CURR_VW QQ, PS_TRN_SIMULATION B3, PS_TRN_SCENARIO C3
where MM.BUDGET_PERIOD = $BUDGET_PERIOD
and MM.BUSINESS_UNIT = $BUSINESS_UNIT
and MM.COURSE = $COURSE
and PP.EMPLID = MM.EMPLID
and QQ.EMPLID = MM.EMPLID
and QQ.EMPL_RCD = MM.EMPL_RCD
and MM.BUDGET_PERIOD = B3.BUDGET_PERIOD
and MM.BUSINESS_UNIT = B3.BUSINESS_UNIT
and MM.DEMAND_ID = B3.DEMAND_ID
and B3.BUDGET_PERIOD = C3.BUDGET_PERIOD
and B3.BUSINESS_UNIT = C3.BUSINESS_UNIT
and B3.DEPTID = C3.DEPTID
and B3.SCENARIO = C3.SCENARIO
and B3.DEPTID = QQ.DEPTID
and C3.SCENARIO_STATUS = 'A'
order by MM.BUDGET_PERIOD, MM.BUSINESS_UNIT, QQ.DEPTID, MM.EMPLID, MM.COURSE, MM.DEMAND_ID
end-SELECT   

#ifdef debugx
           display 'Exiting TRN035.SQR: Print-Individuals-By-Course'
#end-if
end-procedure Print-Individuals-By-Course

!***********************************************************************
!  Prints Individual Demands By Department
!***********************************************************************

begin-procedure Print-Individuals-By-Deptid
#ifdef debugx
           display 'Entering TRN035.SQR: Print-Individuals-By-Deptid'
#end-if

begin-SELECT ON-ERROR=SQL-Error
QA.DEPTID                                                               &QA.DEPTID
MA.EMPLID                                                               &MA.EMPLID
MA.EMPL_RCD                                                             &MA.EMPL_RCD
MA.COURSE                                                               &MA.COURSE
MA.DEMAND_ID                                                            &MA.DEMAND_ID
MA.TOTAL_DEMAND                                                         &MA.TOTAL_DEMAND
PA.SEX                                                                  &PA.SEX
MA.BUDGET_PERIOD
MA.BUSINESS_UNIT
MA.TRN_PLN_CATEGORY                                                     &MA.TRN_PLN_CATEGORY
C4.SCENARIO                                                             &C4.SCENARIO

        let $SCENARIO = &C4.SCENARIO
        let $TRN_PLN_CATEGORY=&MA.TRN_PLN_CATEGORY

        let $DEPTID_Q = &QA.DEPTID
        let $EMPLID = &MA.EMPLID
        let #EMPL_RCD = &MA.EMPL_RCD
        let $COURSE_M = &MA.COURSE
        let $DEMAND_ID = &MA.DEMAND_ID
        let #TOTAL_DEMAND = &MA.TOTAL_DEMAND
        let $SEX = &PA.SEX
        
        do Find-Course ($COURSE_M, $CATEGORY_CD, $SUB_CATEGORY_CD, $REAL_COURSE, $COURSE_DESCR) 
        
        if $SEX = 'M' 
           let #DEMAND_M = #TOTAL_DEMAND
           let #DEMAND_F = 0
        else
           let #DEMAND_F = #TOTAL_DEMAND
           let #DEMAND_M = 0
        end-if
        
        let #DEMAND_IC  = 0
        let #DEMAND_AM  = 0
        let #DEMAND_E   = 0
        let #DEMAND_OQ  = 0
        let #DEMAND_ONQ = 0
        
        do Get-Category-2483-Fra
        
        let #DEMAND_F_T     = #DEMAND_F_T + #DEMAND_F
        let #DEMAND_M_T     = #DEMAND_M_T + #DEMAND_M
        let #DEMAND_ONQ_T   = #DEMAND_ONQ_T + #DEMAND_ONQ
        let #DEMAND_OQ_T    = #DEMAND_OQ_T + #DEMAND_OQ
        let #DEMAND_E_T     = #DEMAND_E_T + #DEMAND_E
        let #DEMAND_AM_T    = #DEMAND_AM_T + #DEMAND_AM
        let #DEMAND_IC_T    = #DEMAND_IC_T + #DEMAND_IC
        let #TOTAL_DEMAND_T = #TOTAL_DEMAND_T + #TOTAL_DEMAND
        
        print $DEPTID_Q                  (+1,{C01})
        print $DEMAND_ID                 (,{C011})
        print $COURSE_M                  (,{C02})
        print $CATEGORY_CD               (,{C021})
        IF $TRN_PLN_CAT_SW='1'
             print $SCENARIO             (,{C04})
        ELSE
             move 'TRN_PLN_CATEGORY'     to $FieldName
             move $TRN_PLN_CATEGORY      to $FieldValue
             do Read-Translate-Table
             let $XlatLongName=substr($XlatLongName,1,17)
             print $XlatLongName         (,{C04})
        END-IF
        print $SUB_CATEGORY_CD           (,{C022})
        print $COURSE_DESCR              (,{C03}, 27)  
        print $EMPLID                    (,{C031})  
        print #TOTAL_DEMAND              (,{C05})  EDIT 999999
        print #DEMAND_M                  (,{C06})  EDIT 999999
        print #DEMAND_F                  (,{C07})  EDIT 999999
        print #DEMAND_ONQ                (,{C081}) EDIT 999999
        print #DEMAND_OQ                 (,{C09})  EDIT 999999
        print #DEMAND_E                  (,{C10})  EDIT 999999
        print #DEMAND_AM                 (,{C11})  EDIT 999999
        print #DEMAND_IC                 (,{C12})  EDIT 999999

from PS_TRN_DEMAND_EE MA, PS_PERSONAL_DT_FST PA, PS_JOB_CURR_VW QA, PS_TRN_SIMULATION B4, PS_TRN_SCENARIO C4
where MA.BUDGET_PERIOD = $BUDGET_PERIOD
and MA.BUSINESS_UNIT = $BUSINESS_UNIT
and QA.DEPTID = $DEPTID
and PA.EMPLID = MA.EMPLID
and QA.EMPLID = MA.EMPLID
and QA.EMPL_RCD = MA.EMPL_RCD
and MA.BUDGET_PERIOD = B4.BUDGET_PERIOD
and MA.BUSINESS_UNIT = B4.BUSINESS_UNIT
and MA.DEMAND_ID = B4.DEMAND_ID
and B4.BUDGET_PERIOD = C4.BUDGET_PERIOD
and B4.BUSINESS_UNIT = C4.BUSINESS_UNIT
and B4.DEPTID = C4.DEPTID
and B4.DEPTID = QA.DEPTID
and B4.SCENARIO = C4.SCENARIO
and C4.SCENARIO_STATUS = 'A'
order by MA.BUDGET_PERIOD, MA.BUSINESS_UNIT, QA.DEPTID, MA.EMPLID, MA.COURSE, MA.DEMAND_ID
end-SELECT   

#ifdef debugx
           display 'Exiting TRN035.SQR: Print-Individuals-By-Deptid'
#end-if
end-procedure Print-Individuals-By-Deptid

!***************************************************************
!Include SQCs
!***************************************************************
#include 'prcsapi.sqc'
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#include 'datemath.sqc'  !Routines for date calculation
!
#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'
#Include 'readxlat.sqc'  !Read Translate Table


