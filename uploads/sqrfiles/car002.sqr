
!***********************************************************************
! Report Name: CAR002.SQR - Print P11D Section A (UK specific)         *
!***********************************************************************
!                                                                      *
! Confidentiality Information:                                         *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2006/07/19:11:28:19                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
! This report is used to print the results from the CAR001 process in  *
! a format similar to the UK government form P11D. It is not the P11D  *
! itself, but could be used to verify with the employee that the       *
! details are correct.                                                 *
!***********************************************************************
!                                                                      *
! Tables Referenced:                    Read  Delete  Update  Insert   *
!                                       ----  ------  ------  ------   *
!                    PS_P11D_SEC_A_UK     x                            *
!                    PS_PERSON_NAME       x                            *
!                    PS_PERSON            X                            *
!                    PS_RUN_CNTL_CAR      x                            *
!                                                                      *
! Related programs:  askcar.sqc                                        *
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'    !Set environment
begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup
!-----------------------------------------------------------------------
! Uncomment this line to enable 'debug' display statements
!-----------------------------------------------------------------------
!#define TESTMODE 1

!-----------------------------------------------------------------------
begin-report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($AsOfToday, $AsOfToday_YMD, {DEFYMD}, '', '')

  do Init-Report

  do Process-Main

  do Reset
  do Stdapi-Term

end-report

!-----------------------------------------------------------------------
! Get parameters and set process scheduler variables
!-----------------------------------------------------------------------
begin-procedure Init-Report

  move 'CAR002' to $ReportID
  move 'Print P11D Section A' to $ReportTitle
  display $ReportTitle
  display ''

  do Stdapi-Init

  do Set-Constants

  if $prcs_process_instance = ''
    do Ask-CAR001
    if #empl_rcd = -1
      let $empl_rcd_char = ''
    else
      let $empl_rcd_char = to_char(#empl_rcd)
    end-if
  else
    let $language_cd = $PRCS_LANGUAGE_CD
    do Select-Parameters
  end-if

  do Set-Values

  do Init_Printer

#ifdef TESTMODE
  let $temp = '  $language_cd: ' || $language_cd
  print $temp (+1,1)
  let $temp = '  $tax_year_end_uk: ' || $tax_year_end_uk
  print $temp (+1,1)
  let $temp = '  $emplid: ' || $emplid
  print $temp (+1,1)
  let $temp = '  #empl_rcd: ' || to_char(#empl_rcd)
  print $temp (+1,1)
  let $temp = '  $empl_rcd_char: ' || $empl_rcd_char
  print $temp (+1,1)
#end-if

end-procedure Init-Report

!------------------------------------------------------------------------
! Get report parameters
!------------------------------------------------------------------------
begin-procedure Select-Parameters

#ifdef TESTMODE
  print 'CAR002' (+1,1)
  print 'in Select-Parameters' (+1,1)
  let $temp = '  $prcs_oprid: ' || $prcs_oprid
  print $temp (+1,1)
  let $temp = '  $prcs_run_cntl_id: ' || $prcs_run_cntl_id
  print $temp (+1,1)
#end-if

begin-select

PS_RUN_CNTL_CAR.TAX_YEAR_END_UK
PS_RUN_CNTL_CAR.EMPLID
PS_RUN_CNTL_CAR.EMPL_RCD_CHAR
   let $tax_year_end_uk = RTRIM(&PS_RUN_CNTL_CAR.TAX_YEAR_END_UK, ' ')
   let $emplid          = RTRIM(&PS_RUN_CNTL_CAR.EMPLID, ' ')
   let $empl_rcd_char   = RTRIM(&PS_RUN_CNTL_CAR.EMPL_RCD_CHAR, ' ')
   let #empl_rcd        = to_number(&PS_RUN_CNTL_CAR.EMPL_RCD_CHAR)
from PS_RUN_CNTL_CAR
where OPRID       = $prcs_oprid
  and RUN_CNTL_ID = $prcs_run_cntl_id

end-select

end-procedure Select-Parameters

!-----------------------------------------------------------------------
! Initialise constants
!-----------------------------------------------------------------------
begin-procedure Set-Constants

  let $plan_type      = '5A'

  let $tax_st_day     = '06'
  let $tax_st_month   = '04'
  let $tax_end_day    = '05'
  let $tax_end_month  = '04'

  let $actual_mileage = 'A'
  let $active         = 'A'
  let $language_cd    = 'ENG'
  let $low            = 'L'
  let $medium         = 'M'
  let $high           = 'H'
  let $on             = 'Y'
  let $off            = 'N'
  let $true           = 'Y'
  let $false          = 'N'
  let $unknown        = 'X'

  let #period_length  = 30
  let #max_acc_price  = 100

  let #engine_limit_1 = 1400
  let #engine_limit_2 = 2000

  let $petrol         = 'PET'
  let $diesel         = 'DIE'
  let $other          = 'OTH'
  let $electric       = 'ELE'
  let $euro4          = 'EUD'
  let $hybrid         = 'HPE'
  let $liquefied      = 'LPG'
  let $retro          = 'RET'
  let $gas            = 'GAS'
  let $rotary         = 'REP'
  let $gaspet         = 'GAP'


end-procedure Set-Constants

!-----------------------------------------------------------------------
! Initialise local variables
!-----------------------------------------------------------------------
begin-procedure Set-Values

  if $tax_year_end_uk = '0'
    ! Set default
    let $month_part = {ps-substr}($AsOfToday_YMD,6,2)
    let $year_part = {ps-substr}($AsOfToday_YMD,1,4)
    if $month_part < $tax_end_month
      let #year_part = to_number($year_part) - 1
      let $year_part = to_char(#year_part)
    end-if
    let $tax_year_end_uk = $year_part
  end-if
#ifdef TESTMODE
  let $temp = '  $AsOfToday_YMD: ' || $AsOfToday_YMD
  print $temp (+1,1)
  let $temp = '  $month_part: ' || $month_part
  print $temp (+1,1)
  let $temp = '  $year_part: ' || $year_part
  print $temp (+1,1)
#end-if

  ! Work out start and end dates of tax year

  let $tax_end_year = $tax_year_end_uk
  let $tax_st_year  = to_char(to_number($tax_end_year) - 1)
  let $tax_year_st_YMD  = $tax_st_year || '-' || $tax_st_month || '-' || $tax_st_day
  let $tax_year_end_YMD = $tax_end_year || '-' || $tax_end_month || '-' || $tax_end_day

  ! Set native database values for start and end dates of tax year

  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($tax_year_st_YMD,$tax_year_st_N,{DEFYMD},'','native')
  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($tax_year_end_YMD,$tax_year_end_N,{DEFYMD},'','native')

#ifdef TESTMODE
  let $temp = '  $tax_year_st_YMD: ' || $tax_year_st_YMD
  print $temp (+1,1)
  let $temp = '  $tax_year_end_YMD: ' || $tax_year_end_YMD
  print $temp (+1,1)
  let $temp = '  $tax_year_st_N: ' || $tax_year_st_N
  print $temp (+1,1)
  let $temp = '  $tax_year_end_N: ' || $tax_year_end_N
  print $temp (+1,1)
#end-if

end-procedure Set-Values

!------------------------------------------------------------------------
! Main processing
!------------------------------------------------------------------------
begin-procedure Process-Main

if $emplid = ''
  let $where = 'where PS_P11D_SEC_A_UK.TAX_YEAR_END_UK = ''' || $tax_year_end_uk || ''''
  if $empl_rcd_char <> ''
    let $where = $where || ' and PS_P11D_SEC_A_UK.EMPL_RCD = ' || to_char(#empl_rcd)
  end-if
else
  let $where = 'where PS_P11D_SEC_A_UK.TAX_YEAR_END_UK = ''' || $tax_year_end_uk || '''' || ' and PS_P11D_SEC_A_UK.EMPLID = ''' || $emplid || ''''
  if $empl_rcd_char <> ''
    let $where = $where || ' and PS_P11D_SEC_A_UK.EMPL_RCD = ' || to_char(#empl_rcd)
  end-if
end-if

#ifdef TESTMODE
  let $temp = '  $where: ' || $where
  print $temp (+1,1)
#end-if

let #record_count = 0
let #emplid_count = 0
let $last_emplid  = ' '

begin-select

PS_P11D_SEC_A_UK.EMPLID

PS_P11D_SEC_A_UK.CAR_ID

PS_P11D_SEC_A_UK.MAKE_AND_MODEL

PS_P11D_SEC_A_UK.REGISTRATION_DT
  let $registration_dt_N = &PS_P11D_SEC_A_UK.REGISTRATION_DT
  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($registration_dt_N, $registration_dt_DMY, {DEFDMY}, '', '')

PS_P11D_SEC_A_UK.AVAILABLE_FROM_DT
  let $available_from_dt_N = &PS_P11D_SEC_A_UK.AVAILABLE_FROM_DT
  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($available_from_dt_N, $available_from_dt_DMY, {DEFDMY}, '', '')

PS_P11D_SEC_A_UK.AVAILABLE_TO_DT
  let $available_to_dt_N = &PS_P11D_SEC_A_UK.AVAILABLE_TO_DT
  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($available_to_dt_N, $available_to_dt_DMY, {DEFDMY}, '', '')

PS_P11D_SEC_A_UK.AVAILABLE_TO_STR
PS_P11D_SEC_A_UK.BUSINESS_MILEAGE_1
PS_P11D_SEC_A_UK.BUSINESS_MILEAGE_2
PS_P11D_SEC_A_UK.BUSINESS_MILEAGE_3
PS_P11D_SEC_A_UK.UNAVAILABLE_DAYS
PS_P11D_SEC_A_UK.PAYMENT_RECEIVED
PS_P11D_SEC_A_UK.LIST_PRICE
PS_P11D_SEC_A_UK.ACCESSORIES_PRICE1
PS_P11D_SEC_A_UK.ACCESSORIES_PRICE2
PS_P11D_SEC_A_UK.TOTAL_CAR_AND_ACC
PS_P11D_SEC_A_UK.CAPITAL_CONT
PS_P11D_SEC_A_UK.CAR_BENEFIT_CHARGE
PS_P11D_SEC_A_UK.FUEL_PROVIDED
PS_P11D_SEC_A_UK.FUEL_REIMBURSED
PS_P11D_SEC_A_UK.ENGINE_TYPE_CD
PS_P11D_SEC_A_UK.ENGINE_SIZE_1
PS_P11D_SEC_A_UK.ENGINE_SIZE_2
PS_P11D_SEC_A_UK.ENGINE_SIZE_3
PS_P11D_SEC_A_UK.FUEL_BEN_CHARGE

  ! Update total record count.
  let #record_count = #record_count + 1

  ! Get name and NI number for employee
  do Get-Name-And-Num

  ! Check if the emplid is the same as the last record processed.
  if &PS_P11D_SEC_A_UK.EMPLID <> $last_emplid
    let #emplid_count = 1
  else
    let #emplid_count = #emplid_count + 1
  end-if
  let $last_emplid = &PS_P11D_SEC_A_UK.EMPLID

  ! Print employees details for given car
  if #emplid_count = 1
    do Print-Page
  end-if
  if #emplid_count > 1
    if #emplid_count = 2
      let $print_column2 = 'Y'
    end-if
    if $print_column2 = 'Y'
      do Print-Col2
      let $print_column2 = 'N'
    else
      do Print-Page
      let $print_column2 = 'Y'
    end-if
  end-if

from PS_P11D_SEC_A_UK
[$where]
order by EMPLID, CAR_ID

end-select

if #record_count = 0
  print 'End of Report (No records found)' (+1,1)
end-if

end-procedure Process-Main

!------------------------------------------------------------------------
! Print employee's details for given car - column 1 (new page)
!------------------------------------------------------------------------
begin-procedure Print-Page

  if #record_count > 1
    new-page
  end-if

  print 'Employees name:'                                (1,1,18)

!**********Begin Name Display change**********************
!print &PS_PERSON_NAME.NAME                              (1,20,54)
print &PS_PERSON_NAME.NAME_DISPLAY                     (1,20,54)
! **********End Name Display change**********************

  print 'NI Number:'                                       (1,75,12)
  print &PS_PERS_NID.NATIONAL_ID                           (1,88)
  do blank-line
  do blank-line

  print 'Car 1                           Car 2'            (4,60)
  do blank-line

  print 'Make and Model'                                   (6,1,53)
  print &PS_P11D_SEC_A_UK.MAKE_AND_MODEL                   (6,55)
  do blank-line

  print 'Date first registered'                            (8,1,53)
  print $registration_dt_DMY                               (8,55)
  do blank-line

  print 'Available to director/employee from'              (10,1,53)
  print $available_from_dt_DMY                             (10,55)
  print '                                 to'              (11,1,53)
  if $available_to_dt_DMY = ''
    print &PS_P11D_SEC_A_UK.AVAILABLE_TO_STR               (11,55)
  else
    print $available_to_dt_DMY                             (11,55)
  end-if
  do blank-line

  print 'Director/employees business mileage in car'       (13,1,53)
  if &PS_P11D_SEC_A_UK.BUSINESS_MILEAGE_1 = 'Y'
    print '2,499 or less'                                  (13,55)
  end-if
  if &PS_P11D_SEC_A_UK.BUSINESS_MILEAGE_2 = 'Y'
    print '2,500 - 17,999'                                 (13,55)
  end-if
  if &PS_P11D_SEC_A_UK.BUSINESS_MILEAGE_3 = 'Y'
    print '18,000 or more'                                 (13,55)
  end-if
  ! Note: an 'X' indicates that actual mileage is not available.
  ! There may be an estimate record but this is not acceptable
  ! for the P11D.
  if &PS_P11D_SEC_A_UK.BUSINESS_MILEAGE_1 = 'X'
    print 'not known'                                      (13,55)
  end-if
  do blank-line

  print 'Payment received for private use of car'          (15,1,53)
  print &PS_P11D_SEC_A_UK.PAYMENT_RECEIVED                 (15,55) edit 99,999,999.99
  do blank-line

  print '(a) Price of the car'                             (17,1,53)
  print &PS_P11D_SEC_A_UK.LIST_PRICE                       (17,55) edit 99,999,999.99

  print '(b) Price of optional accessories available when' (18,1)
  print '    car first available to director/employee'     (19,1,53)
  print &PS_P11D_SEC_A_UK.ACCESSORIES_PRICE1               (19,55) edit 99,999,999.99

  print '           Total car and accessories (a+b)'       (20,1,53)
  print &PS_P11D_SEC_A_UK.TOTAL_CAR_AND_ACC                (20,55) edit 99,999,999.99
  do blank-line

  print 'Price of accessories added after car first made'  (22,1)
  print 'available to director/employee'                   (23,1,53)
  print &PS_P11D_SEC_A_UK.ACCESSORIES_PRICE2               (23,55) edit 99,999,999.99
  do blank-line

  print 'Capital contributions made by director/employee'  (25,1)
  print 'towards cost of car or accessories'               (26,1,53)
  print &PS_P11D_SEC_A_UK.CAPITAL_CONT                     (26,55) edit 99,999,999.99
  do blank-line

  print 'Car Benefit Charge'                               (28,1,53)
  print &PS_P11D_SEC_A_UK.CAR_BENEFIT_CHARGE               (28,55) edit 99,999,999.99

  do blank-line
  do blank-line

  ! Fuel section

  print 'Fuel provided other than for business travel'     (31,1,53)
  if &PS_P11D_SEC_A_UK.FUEL_PROVIDED = 'Y'
    print 'Yes'                                            (31,55)
  else
    print 'No'                                             (31,55)
  end-if
  print 'Director/employee required to reimburse full cost' (32,1,53)
  if &PS_P11D_SEC_A_UK.FUEL_REIMBURSED = 'Y'
    print 'Yes'                                            (32,55)
  else
    print 'No'                                             (32,55)
  end-if
  print 'If yes, did he/she actually do so'                (33,1,53)
  if &PS_P11D_SEC_A_UK.FUEL_REIMBURSED = 'Y'
    print 'Yes'                                            (33,55)
  else
    print 'No'                                             (33,55)
  end-if

  print 'Engine Type'                                      (34,1,53)
  if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'PET'
    print 'Petrol'                                         (34,55)
  else
    if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'DEI'
      print 'Deisel'                                       (34,55)
    else
      if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'ELE'
        print 'Electric'                                   (34,55)
      else
        if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'EUD'
          print 'Euro4'                                    (34,55)
        else
          if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'HPE'
            print 'Hybrid'                                 (34,55)
          else
            if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'LPG'
              print 'Liquefied'                            (34,55)
            else
              if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'RET'
                print 'Retro'                              (34,55)
              else
                if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'GAS'
                  print 'Gas'                              (34,55)
                else
                  if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'REP'
                    print 'Rotary'                         (34,55)
                  else
                    if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'GAP'
                      print 'GasPet'                       (34,55)
                    else
                      print 'Other'                        (34,55)
                    end-if
                  end-if
                end-if
              end-if
            end-if
          end-if
        end-if
      end-if
    end-if
  end-if

  print 'Engine Size'                                      (35,1,53)
  if &PS_P11D_SEC_A_UK.ENGINE_SIZE_1 = 'Y'
    print '1400CC or less'                                 (35,55)
  end-if
  if &PS_P11D_SEC_A_UK.ENGINE_SIZE_2 = 'Y'
    print '1401cc - 2000cc'                                (35,55)
  end-if
  if &PS_P11D_SEC_A_UK.ENGINE_SIZE_3 = 'Y'
    print 'over 2000cc'                                    (35,55)
  end-if

  print 'Fuel Benefit charge'                              (37,1,53)
  print &PS_P11D_SEC_A_UK.FUEL_BEN_CHARGE                  (37,55) edit 99,999,999.99


end-procedure Print-Page

!-----------------------------------------------------------------------
! Print blank line
!-----------------------------------------------------------------------
begin-procedure blank-line
  print ' ' (+1,1)
end-procedure blank-line

!------------------------------------------------------------------------
! Print employee's details for given car - column 2 (same page)
!------------------------------------------------------------------------
begin-procedure Print-Col2

  print &PS_P11D_SEC_A_UK.MAKE_AND_MODEL                   (6,85)

  print $registration_dt_DMY                               (8,85)

  print $available_from_dt_DMY                             (10,85)

  if $available_to_dt_DMY = ''
    print &PS_P11D_SEC_A_UK.AVAILABLE_TO_STR               (11,85)
  else
    print $available_to_dt_DMY                             (11,85)
  end-if

  if &PS_P11D_SEC_A_UK.BUSINESS_MILEAGE_1 = 'Y'
    print '2,499 or less'                                  (13,85)
  end-if
  if &PS_P11D_SEC_A_UK.BUSINESS_MILEAGE_2 = 'Y'
    print '2,500 - 17,999'                                 (13,85)
  end-if
  if &PS_P11D_SEC_A_UK.BUSINESS_MILEAGE_3 = 'Y'
    print '18,000 or more'                                 (13,85)
  end-if
  ! Note: an 'X' indicates that actual mileage is not available.
  ! There may be an estimate record but this is not acceptable
  ! for the P11D.
  if &PS_P11D_SEC_A_UK.BUSINESS_MILEAGE_1 = 'X'
    print 'not known'                                      (13,85)
  end-if

  print &PS_P11D_SEC_A_UK.PAYMENT_RECEIVED                 (16,85) edit 99,999,999.99

  print &PS_P11D_SEC_A_UK.LIST_PRICE                       (17,85) edit 99,999,999.99

  print &PS_P11D_SEC_A_UK.ACCESSORIES_PRICE1               (19,85) edit 99,999,999.99

  print &PS_P11D_SEC_A_UK.TOTAL_CAR_AND_ACC                (20,85) edit 99,999,999.99

  print &PS_P11D_SEC_A_UK.ACCESSORIES_PRICE2               (23,85) edit 99,999,999.99

  print &PS_P11D_SEC_A_UK.CAPITAL_CONT                     (26,85) edit 99,999,999.99

  print &PS_P11D_SEC_A_UK.CAR_BENEFIT_CHARGE               (28,85) edit 99,999,999.99

  ! Fuel section

  if &PS_P11D_SEC_A_UK.FUEL_PROVIDED = 'Y'
    print 'Yes'                                            (31,85)
  else
    print 'No'                                             (31,85)
  end-if
  if &PS_P11D_SEC_A_UK.FUEL_REIMBURSED = 'Y'
    print 'Yes'                                            (32,85)
  else
    print 'No'                                             (32,85)
  end-if
  if &PS_P11D_SEC_A_UK.FUEL_REIMBURSED = 'Y'
    print 'Yes'                                            (33,85)
  else
    print 'No'                                             (33,85)
  end-if


  if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'PET'
    print 'Petrol'                                         (34,85)
  else
    if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'DEI'
      print 'Deisel'                                       (34,85)
    else
      if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'ELE'
        print 'Electric'                                   (34,85)
      else
        if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'EUD'
          print 'Euro4'                                    (34,85)
        else
          if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'HPE'
            print 'Hybrid'                                 (34,85)
          else
            if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'LPG'
              print 'Liquefied'                            (34,85)
            else
              if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'RET'
                print 'Retro'                              (34,85)
              else
                if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'GAS'
                  print 'Gas'                              (34,85)
                else
                  if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'REP'
                    print 'Rotary'                         (34,85)
                  else
                    if &PS_P11D_SEC_A_UK.ENGINE_TYPE_CD = 'GAP'
                      print 'GasPet'                       (34,85)
                    else
                      print 'Other'                        (34,85)
                    end-if
                  end-if
                end-if
              end-if
            end-if
          end-if
        end-if
      end-if
    end-if
  end-if

  if &PS_P11D_SEC_A_UK.ENGINE_SIZE_1 = 'Y'
    print '1400CC or less'                                 (35,85)
  end-if
  if &PS_P11D_SEC_A_UK.ENGINE_SIZE_2 = 'Y'
    print '1401cc - 2000cc'                                (35,85)
  end-if
  if &PS_P11D_SEC_A_UK.ENGINE_SIZE_3 = 'Y'
    print 'over 2000cc'                                    (35,85)
  end-if

  print &PS_P11D_SEC_A_UK.FUEL_BEN_CHARGE                  (37,85) edit 99,999,999.99

end-procedure Print-Col2

!----------------------------------------------------------------------
! Get the employee's name and NI number
!----------------------------------------------------------------------
begin-procedure Get-Name-And-Num

begin-select

!************Begin SQR NAME DISPLAY**************
!PS_PERSON_NAME.NAME 
PS_PERSON_NAME.NAME_DISPLAY 
!************End SQR NAME DISPLAY************** 

 
from PS_PERSON_NAME

where PS_PERSON_NAME.EMPLID = &PS_P11D_SEC_A_UK.EMPLID
end-select

begin-select
PS_PERS_NID.NATIONAL_ID
from PS_PERSON, PS_PERS_NID
where PS_PERSON.EMPLID = &PS_P11D_SEC_A_UK.EMPLID
      AND PS_PERS_NID.EMPLID =  &PS_P11D_SEC_A_UK.EMPLID
      AND PS_PERS_NID.COUNTRY = 'GBR'
      AND (PS_PERS_NID.NATIONAL_ID_TYPE = 'PR' OR PS_PERS_NID.NATIONAL_ID_TYPE = 'PR_9')
end-select

end-procedure Get-Name-And-Num

!-----------------------------------------------------------------------
! Include files
!-----------------------------------------------------------------------
#include 'askcar.sqc'    !Ask values for parameters

#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
