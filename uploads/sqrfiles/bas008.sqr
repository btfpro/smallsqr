!*****************************************
!  BAS008 : Flagged Participant Report
!*****************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:08:34:37                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'

Begin-Setup
  #Include 'ptpsl177.sqc'
End-Setup

#define col_sched_id             6      !Schedule ID
#define col_emplid              12      !Emplid ID
#define col_name                25      !Employee Name
#define col_benefit_rcd          4      !Benefit Rcd No
#define col_empl_rcd             8      !Empl Rcd No
#define col_event_id             6      !Event Id
#define col_status               8      !Process/Event Status
#define col_date                10      !Any Date
#define col_addr_data           24      !Address Eligibility Header
#define col_mj_data             25      !MultiJob Eligibility Header
#define col_job_data            20      !Job Eligibility Header
#define col_effseq               6      !EffSeq
#define col_flag                 4      !Any Flag
#define col_source               6      !BAS Action Source
#define col_priority             8      !Event Priority
#define col_row_count            3      !Row Counter for printing

#define col_sep                  1      !Column Separator
#define col_sep3                 3      !Column Separator3

!*************************************
Begin-Program
!*************************************

  do Init-Report

  display 'Report Begin at: ' noline
  do display-time

  do Process-Main

  display 'Report Ended at: ' noline
  do display-time

  do Reset
  do StdAPI-Term

End-Program

!*************************************
Begin-Procedure Init-Report
!*************************************

  do Init-DateTime
  do Get-Current-DateTime
  do Init-Number
  do StdAPI-Init

  let $ReportID    = 'BAS008'
  do Get-Report-Language
  let $ReportTitle  = $BAS008-REPORTTITLE
  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ''

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-Values
  end-if

End-Procedure

!*************************************
Begin-Procedure Ask-Values
!*************************************

  do Ask-Schedule-Id
  do Ask-From-Thru-Date
  do Ask-Flag-Variables

End-Procedure

!*************************************
Begin-Procedure Ask-Flag-Variables
!*************************************

  While (($Addr_Elig_Chg <> 'Y') And ($Addr_Elig_Chg <> 'N'))

    input $Addr_Elig_Chg 'Include Addr_Elig_Chg flagged events on Report (Y/N)?'
    let $Addr_Elig_Chg = RTRIM(UPPER($Addr_Elig_Chg), ' ')

  End-While

  While (($MJ_Elig_Chg <> 'Y') And ($MJ_Elig_Chg <> 'N'))

    input $MJ_Elig_Chg 'Include MultiJob_Elig_Chg flagged events on Report (Y/N)?'
    let $MJ_Elig_Chg = RTRIM(UPPER($MJ_Elig_Chg), ' ')

  End-While

  While (($Job_Elig_Chg <> 'Y') And ($Job_Elig_Chg <> 'N'))

    input $Job_Elig_Chg 'Include Job_Elig_Chg flagged events on Report (Y/N)?'
    let $Job_Elig_Chg = RTRIM(UPPER($Job_Elig_Chg), ' ')

  End-While

  While (($BAS_Evt_Disconnect <> 'Y') And ($BAS_Evt_Disconnect <> 'N'))

    input $BAS_Evt_Disconnect 'Include Disconnected/Reconnected Events on Report (Y/N)?'
    let $BAS_Evt_Disconnect = RTRIM(UPPER($BAS_Evt_Disconnect), ' ')

  End-While

  While (($BAS_Event_Chg <> 'Y') And ($BAS_Event_Chg <> 'N'))

    input $BAS_Event_Chg 'Include Out of Sequence Events on Report (Y/N)?'
    let $BAS_Event_Chg = RTRIM(UPPER($BAS_Event_Chg), ' ')

  End-While

  While (($Incl_Summary <> 'Y') And ($Incl_Summary <> 'N'))

    input $Incl_Summary 'Include Summary on Report (Y/N)?'
    let $Incl_Summary = RTRIM(UPPER($Incl_Summary), ' ')

  End-While

End-Procedure


!*************************************
Begin-Procedure Get-Values
!*************************************

  do Select-Parameters
  do Get-Schedule-Id
  do Get-From-Thru-Date
  do Get-Flag-Variables

End-Procedure

!*************************************
Begin-Procedure Report-Translation
!*************************************
! Read from BAS008 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation('BEN1')

  do Get_Field_Information ('BAS008', 'REPORT-TITLE', $BAS008-REPORTTITLE, #CW)
  do Get_Field_Information ('BAS008', 'TITLE-A',      $BAS008-TITLE-A,     #CW)
  do Get_Field_Information ('BAS008', 'TITLE-B',      $BAS008-TITLE-B,     #CW)
  do Get_Field_Information ('BAS008', 'TITLE-C',      $BAS008-TITLE-C,     #CW)
  do Get_Field_Information ('BAS008', 'TITLE-D',      $BAS008-TITLE-D,     #CW)
  do Get_Field_Information ('BAS008', 'TITLE-E',      $BAS008-TITLE-E,     #CW)
  do Get_Field_Information ('BAS008', 'TITLE-F',      $BAS008-TITLE-F,     #CW)
  do Get_Field_Information ('BAS008', 'NBR',          $BAS008-NBR,         #CW)
  do Get_Field_Information ('BAS008', 'ADDR_DATA',    $BAS008-ADDR-DATA,   #CW)
  do Get_Field_Information ('BAS008', 'MJ_DATA',      $BAS008-MJ-DATA,     #CW)
  do Get_Field_Information ('BAS008', 'JOB_DATA',     $BAS008-JOB-DATA,    #CW)
  do Get_Field_Information ('BAS008', 'ADDR_ELIG',    $BAS008-ADDR-ELIG,   #CW)
  do Get_Field_Information ('BAS008', 'MJ_ELIG',      $BAS008-MJ-ELIG,     #CW)
  do Get_Field_Information ('BAS008', 'JOB_ELIG',     $BAS008-JOB-ELIG,    #CW)
  do Get_Field_Information ('BAS008', 'EMPLRCD',      $BAS008-EMPLRCD,     #CW)
  do Get_Field_Information ('BAS008', 'EFFDT',        $BAS008-EFFDT,       #CW)
  do Get_Field_Information ('BAS008', 'EFFSEQ',       $BAS008-EFFSEQ,      #CW)
  do Get_Field_Information ('BAS008', 'FLGDT',        $BAS008-FLGDT,       #CW)
  do Get_Field_Information ('BAS008', 'DISCONNECT',   $BAS008-DISCONNECT,  #CW)
  do Get_Field_Information ('BAS008', 'FLAG',         $BAS008-FLAG,        #CW)
  do Get_Field_Information ('BAS008', 'OUT_OF_SEQ',   $BAS008-OUT-OF-SEQ,  #CW)
  do Get_Field_Information ('BAS008', 'PRIORITY',     $BAS008-PRIORITY,    #CW)
  do Get_Field_Information ('BAS008', 'EVENT_DATA',   $BAS008-EVENT-DATA,  #CW)
  do Get_Field_Information ('BAS008', 'SOURCE',       $BAS008-SOURCE,      #CW)

  do Get_Field_Information ('BEN1',   'SCHED',        $BEN1-SCHED,         #CW)
  do Get_Field_Information ('BEN1',   'EMPLOYEE',     $BEN1-EMPLOYEE,      #CW)
  do Get_Field_Information ('BEN1',   'ID',           $BEN1-ID,            #CW)
  do Get_Field_Information ('BEN1',   'NAME',         $BEN1-NAME,          #CW)
  do Get_Field_Information ('BEN1',   'BEN',          $BEN1-BEN,           #CW)
  do Get_Field_Information ('BEN1',   'RCD_NO',       $BEN1-RCD-NO,        #CW)
  do Get_Field_Information ('BEN1',   'EVENT',        $BEN1-EVENT,         #CW)
  do Get_Field_Information ('BEN1',   'DATE',         $BEN1-DATE,          #CW)
  do Get_Field_Information ('BEN1',   'PROCESS',      $BEN1-PROCESS,       #CW)
  do Get_Field_Information ('BEN1',   'STATUS',       $BEN1-STATUS,        #CW)

 End-Procedure

!*************************************
Begin-Heading 7
!*************************************

#Include 'stdhtr08.sqc'

 evaluate $Report_Type
    when = 'A'
       print ' '                (+2,1,{col_row_count})
       print $BEN1-SCHED        (0,+{col_sep},{col_sched_id})
       print $BEN1-EMPLOYEE     (0,+{col_sep},{col_emplid})
       print $BEN1-EMPLOYEE     (0,+{col_sep},{col_name})
       print $BEN1-BEN          (0,+{col_sep},{col_benefit_rcd})
       print $BEN1-EVENT        (0,+{col_sep},{col_event_id})
       print $BEN1-EVENT        (0,+{col_sep},{col_date})
       print $BEN1-EVENT        (0,+{col_sep},{col_status})
       print $BEN1-PROCESS      (0,+{col_sep},{col_status})
       print $BAS008-ADDR-DATA  (0,+{col_sep3},{col_addr_data})

       print $BAS008-NBR        (+1,1,{col_row_count})
       print $BEN1-ID           (0,+{col_sep},{col_sched_id})
       print $BEN1-ID           (0,+{col_sep},{col_emplid})
       print $BEN1-NAME         (0,+{col_sep},{col_name})
       print $BEN1-RCD-NO       (0,+{col_sep},{col_benefit_rcd})
       print $BEN1-ID           (0,+{col_sep},{col_event_id})
       print $BEN1-DATE         (0,+{col_sep},{col_date})
       print $BEN1-STATUS       (0,+{col_sep},{col_status})
       print $BEN1-STATUS       (0,+{col_sep},{col_status})
       print $BAS008-FLGDT      (0,+{col_sep3},{col_date})
       print $BAS008-EFFDT      (0,+{col_sep},{col_date})

       print '='                (+1,1,{col_row_count})                  Fill
       print '='                (0,+{col_sep},{col_sched_id})           Fill
       print '='                (0,+{col_sep},{col_emplid})             Fill
       print '='                (0,+{col_sep},{col_name})               Fill
       print '='                (0,+{col_sep},{col_benefit_rcd})        Fill
       print '='                (0,+{col_sep},{col_event_id})           Fill
       print '='                (0,+{col_sep},{col_date})               Fill
       print '='                (0,+{col_sep},{col_status})             Fill
       print '='                (0,+{col_sep},{col_status})             Fill
       print '='                (0,+{col_sep3},{col_date})              Fill
       print '='                (0,+{col_sep},{col_date})               Fill

      break

    when = 'B'
       print ' '                (+2,1,{col_row_count})
       print $BEN1-SCHED        (0,+{col_sep},{col_sched_id})
       print $BEN1-EMPLOYEE     (0,+{col_sep},{col_emplid})
       print $BEN1-EMPLOYEE     (0,+{col_sep},{col_name})
       print $BEN1-BEN          (0,+{col_sep},{col_benefit_rcd})
       print $BEN1-EVENT        (0,+{col_sep},{col_event_id})
       print $BEN1-EVENT        (0,+{col_sep},{col_date})
       print $BEN1-EVENT        (0,+{col_sep},{col_status})
       print $BEN1-PROCESS      (0,+{col_sep},{col_status})
       print $BAS008-MJ-DATA    (0,+{col_sep3},{col_mj_data})

       print $BAS008-NBR        (+1,1,{col_row_count})
       print $BEN1-ID           (0,+{col_sep},{col_sched_id})
       print $BEN1-ID           (0,+{col_sep},{col_emplid})
       print $BEN1-NAME         (0,+{col_sep},{col_name})
       print $BEN1-RCD-NO       (0,+{col_sep},{col_benefit_rcd})
       print $BEN1-ID           (0,+{col_sep},{col_event_id})
       print $BEN1-DATE         (0,+{col_sep},{col_date})
       print $BEN1-STATUS       (0,+{col_sep},{col_status})
       print $BEN1-STATUS       (0,+{col_sep},{col_status})
       print $BAS008-FLGDT      (0,+{col_sep3},{col_date})
       print $BAS008-EMPLRCD    (0,+{col_sep},{col_empl_rcd})

       print '='                (+1,1,{col_row_count})                  Fill
       print '='                (0,+{col_sep},{col_sched_id})           Fill
       print '='                (0,+{col_sep},{col_emplid})             Fill
       print '='                (0,+{col_sep},{col_name})               Fill
       print '='                (0,+{col_sep},{col_benefit_rcd})        Fill
       print '='                (0,+{col_sep},{col_event_id})           Fill
       print '='                (0,+{col_sep},{col_date})               Fill
       print '='                (0,+{col_sep},{col_status})             Fill
       print '='                (0,+{col_sep},{col_status})             Fill
       print '='                (0,+{col_sep3},{col_date})              Fill
       print '='                (0,+{col_sep},{col_empl_rcd})           Fill

      break

    when = 'C'
       print ' '                (+2,1,{col_row_count})
       print $BEN1-SCHED        (0,+{col_sep},{col_sched_id})
       print $BEN1-EMPLOYEE     (0,+{col_sep},{col_emplid})
       print $BEN1-EMPLOYEE     (0,+{col_sep},{col_name})
       print $BEN1-BEN          (0,+{col_sep},{col_benefit_rcd})
       print $BEN1-EVENT        (0,+{col_sep},{col_event_id})
       print $BEN1-EVENT        (0,+{col_sep},{col_date})
       print $BEN1-EVENT        (0,+{col_sep},{col_status})
       print $BEN1-PROCESS      (0,+{col_sep},{col_status})
       print $BAS008-JOB-DATA   (0,+{col_sep3},{col_job_data})

       print $BAS008-NBR        (+1,1,{col_row_count})
       print $BEN1-ID           (0,+{col_sep},{col_sched_id})
       print $BEN1-ID           (0,+{col_sep},{col_emplid})
       print $BEN1-NAME         (0,+{col_sep},{col_name})
       print $BEN1-RCD-NO       (0,+{col_sep},{col_benefit_rcd})
       print $BEN1-ID           (0,+{col_sep},{col_event_id})
       print $BEN1-DATE         (0,+{col_sep},{col_date})
       print $BEN1-STATUS       (0,+{col_sep},{col_status})
       print $BEN1-STATUS       (0,+{col_sep},{col_status})
       print $BAS008-FLGDT      (0,+{col_sep3},{col_date})
       print $BAS008-EMPLRCD    (0,+{col_sep},{col_empl_rcd})
       print $BAS008-EFFDT      (0,+{col_sep},{col_date})
       print $BAS008-EFFSEQ     (0,+{col_sep},{col_effseq})

       print '='                (+1,1,{col_row_count})                  Fill
       print '='                (0,+{col_sep},{col_sched_id})           Fill
       print '='                (0,+{col_sep},{col_emplid})             Fill
       print '='                (0,+{col_sep},{col_name})               Fill
       print '='                (0,+{col_sep},{col_benefit_rcd})        Fill
       print '='                (0,+{col_sep},{col_event_id})           Fill
       print '='                (0,+{col_sep},{col_date})               Fill
       print '='                (0,+{col_sep},{col_status})             Fill
       print '='                (0,+{col_sep},{col_status})             Fill
       print '='                (0,+{col_sep3},{col_date})              Fill
       print '='                (0,+{col_sep},{col_empl_rcd})           Fill
       print '='                (0,+{col_sep},{col_date})               Fill
       print '='                (0,+{col_sep},{col_effseq})             Fill

      break

    when = 'D'
       print ' '                (+2,1,{col_row_count})
       print $BEN1-SCHED        (0,+{col_sep},{col_sched_id})
       print $BEN1-EMPLOYEE     (0,+{col_sep},{col_emplid})
       print $BEN1-EMPLOYEE     (0,+{col_sep},{col_name})
       print $BEN1-BEN          (0,+{col_sep},{col_benefit_rcd})
       print $BEN1-EVENT        (0,+{col_sep},{col_event_id})
       print $BEN1-EVENT        (0,+{col_sep},{col_date})
       print $BEN1-EVENT        (0,+{col_sep},{col_status})
       print $BEN1-PROCESS      (0,+{col_sep},{col_status})
       print $BAS008-DISCONNECT (0,+{col_sep3},{col_date})
       print ' '                (0,+{col_sep},{col_flag})
       print $BAS008-EVENT-DATA (0,+{col_sep},18)

       print $BAS008-NBR        (+1,1,{col_row_count})
       print $BEN1-ID           (0,+{col_sep},{col_sched_id})
       print $BEN1-ID           (0,+{col_sep},{col_emplid})
       print $BEN1-NAME         (0,+{col_sep},{col_name})
       print $BEN1-RCD-NO       (0,+{col_sep},{col_benefit_rcd})
       print $BEN1-ID           (0,+{col_sep},{col_event_id})
       print $BEN1-DATE         (0,+{col_sep},{col_date})
       print $BEN1-STATUS       (0,+{col_sep},{col_status})
       print $BEN1-STATUS       (0,+{col_sep},{col_status})
       print $BAS008-FLAG       (0,+{col_sep3},{col_flag})
       print $BEN1-DATE         (0,+{col_sep},{col_date})
       print $BAS008-EMPLRCD    (0,+{col_sep},{col_empl_rcd})
       print $BAS008-EFFSEQ     (0,+{col_sep},{col_effseq})
       print $BAS008-SOURCE     (0,+{col_sep},{col_source})

       print '='                (+1,1,{col_row_count})                  Fill
       print '='                (0,+{col_sep},{col_sched_id})           Fill
       print '='                (0,+{col_sep},{col_emplid})             Fill
       print '='                (0,+{col_sep},{col_name})               Fill
       print '='                (0,+{col_sep},{col_benefit_rcd})        Fill
       print '='                (0,+{col_sep},{col_event_id})           Fill
       print '='                (0,+{col_sep},{col_date})               Fill
       print '='                (0,+{col_sep},{col_status})             Fill
       print '='                (0,+{col_sep},{col_status})             Fill
       print '='                (0,+{col_sep3},{col_flag})              Fill
       print '='                (0,+{col_sep},{col_date})               Fill
       print '='                (0,+{col_sep},{col_empl_rcd})           Fill
       print '='                (0,+{col_sep},{col_effseq})             Fill
       print '='                (0,+{col_sep},{col_source})             Fill

      break

    when = 'E'
       print ' '                (+2,1,{col_row_count})
       print $BEN1-SCHED        (0,+{col_sep},{col_sched_id})
       print $BEN1-EMPLOYEE     (0,+{col_sep},{col_emplid})
       print $BEN1-EMPLOYEE     (0,+{col_sep},{col_name})
       print $BEN1-BEN          (0,+{col_sep},{col_benefit_rcd})
       print $BEN1-EVENT        (0,+{col_sep},{col_event_id})
       print $BEN1-EVENT        (0,+{col_sep},{col_date})
       print $BEN1-EVENT        (0,+{col_sep},{col_status})
       print $BEN1-PROCESS      (0,+{col_sep},{col_status})
       print $BAS008-OUT-OF-SEQ (0,+{col_sep3},{col_date})
       print $BEN1-EVENT        (0,+{col_sep},{col_priority})

       print $BAS008-NBR        (+1,1,{col_row_count})
       print $BEN1-ID           (0,+{col_sep},{col_sched_id})
       print $BEN1-ID           (0,+{col_sep},{col_emplid})
       print $BEN1-NAME         (0,+{col_sep},{col_name})
       print $BEN1-RCD-NO       (0,+{col_sep},{col_benefit_rcd})
       print $BEN1-ID           (0,+{col_sep},{col_event_id})
       print $BEN1-DATE         (0,+{col_sep},{col_date})
       print $BEN1-STATUS       (0,+{col_sep},{col_status})
       print $BEN1-STATUS       (0,+{col_sep},{col_status})
       print $BEN1-DATE         (0,+{col_sep3},{col_date})
       print $BAS008-PRIORITY   (0,+{col_sep},{col_priority})

       print '='                (+1,1,{col_row_count})                  Fill
       print '='                (0,+{col_sep},{col_sched_id})           Fill
       print '='                (0,+{col_sep},{col_emplid})             Fill
       print '='                (0,+{col_sep},{col_name})               Fill
       print '='                (0,+{col_sep},{col_benefit_rcd})        Fill
       print '='                (0,+{col_sep},{col_event_id})           Fill
       print '='                (0,+{col_sep},{col_date})               Fill
       print '='                (0,+{col_sep},{col_status})             Fill
       print '='                (0,+{col_sep},{col_status})             Fill
       print '='                (0,+{col_sep3},{col_date})              Fill
       print '='                (0,+{col_sep},{col_priority})           Fill

      break

    when = 'F'
       print ' '                (+2,1,{col_row_count})
       print $BEN1-SCHED        (0,+{col_sep},{col_sched_id})
       print $BEN1-EMPLOYEE     (0,+{col_sep},{col_emplid})
       print $BEN1-EMPLOYEE     (0,+{col_sep},{col_name})
       print $BEN1-BEN          (0,+{col_sep},{col_benefit_rcd})
       print $BEN1-EVENT        (0,+{col_sep},{col_event_id})
       print $BEN1-EVENT        (0,+{col_sep},{col_date})
       print $BEN1-EVENT        (0,+{col_sep},{col_status})
       print $BEN1-PROCESS      (0,+{col_sep},{col_status})
       print $BAS008-ADDR-ELIG  (0,+{col_sep},{col_date})
       print ' '                (0,+{col_sep},{col_flag})
       print $BAS008-MJ-ELIG    (0,+{col_sep},{col_date})
       print ' '                (0,+{col_sep},{col_flag})
       print $BAS008-JOB-ELIG   (0,+{col_sep},{col_date})
       print ' '                (0,+{col_sep},{col_flag})
       print $BAS008-DISCONNECT (0,+{col_sep},{col_date})
       print ' '                (0,+{col_sep},{col_flag})
       print $BAS008-OUT-OF-SEQ (0,+{col_sep},{col_date})

       print $BAS008-NBR        (+1,1,{col_row_count})
       print $BEN1-ID           (0,+{col_sep},{col_sched_id})
       print $BEN1-ID           (0,+{col_sep},{col_emplid})
       print $BEN1-NAME         (0,+{col_sep},{col_name})
       print $BEN1-RCD-NO       (0,+{col_sep},{col_benefit_rcd})
       print $BEN1-ID           (0,+{col_sep},{col_event_id})
       print $BEN1-DATE         (0,+{col_sep},{col_date})
       print $BEN1-STATUS       (0,+{col_sep},{col_status})
       print $BEN1-STATUS       (0,+{col_sep},{col_status})
       print $BAS008-FLAG       (0,+{col_sep},{col_flag})
       print $BEN1-DATE         (0,+{col_sep},{col_date})
       print $BAS008-FLAG       (0,+{col_sep},{col_flag})
       print $BEN1-DATE         (0,+{col_sep},{col_date})
       print $BAS008-FLAG       (0,+{col_sep},{col_flag})
       print $BEN1-DATE         (0,+{col_sep},{col_date})
       print $BAS008-FLAG       (0,+{col_sep},{col_flag})
       print $BEN1-DATE         (0,+{col_sep},{col_date})
       print $BAS008-FLAG       (0,+{col_sep},{col_flag})
       print $BEN1-DATE         (0,+{col_sep},{col_date})

       print '='                (+1,1,{col_row_count})                  Fill
       print '='                (0,+{col_sep},{col_sched_id})           Fill
       print '='                (0,+{col_sep},{col_emplid})             Fill
       print '='                (0,+{col_sep},{col_name})               Fill
       print '='                (0,+{col_sep},{col_benefit_rcd})        Fill
       print '='                (0,+{col_sep},{col_event_id})           Fill
       print '='                (0,+{col_sep},{col_date})               Fill
       print '='                (0,+{col_sep},{col_status})             Fill
       print '='                (0,+{col_sep},{col_status})             Fill
       print '='                (0,+{col_sep},{col_flag})               Fill
       print '='                (0,+{col_sep},{col_date})               Fill
       print '='                (0,+{col_sep},{col_flag})               Fill
       print '='                (0,+{col_sep},{col_date})               Fill
       print '='                (0,+{col_sep},{col_flag})               Fill
       print '='                (0,+{col_sep},{col_date})               Fill
       print '='                (0,+{col_sep},{col_flag})               Fill
       print '='                (0,+{col_sep},{col_date})               Fill
       print '='                (0,+{col_sep},{col_flag})               Fill
       print '='                (0,+{col_sep},{col_date})               Fill

      break

  end-evaluate

End-Heading

!*************************************
Begin-Procedure Process-Main
!*************************************

  if $Addr_Elig_Chg = 'Y'
    do Addr-Elig-Chg-Events
    new-page
  end-if

  if $MJ_Elig_Chg = 'Y'
    do MultiJob-Elig-Chg-Events
    new-page
  end-if

  if $Job_Elig_Chg = 'Y'
    do Job-Elig-Chg-Events
    new-page
  end-if

  if $BAS_Evt_Disconnect = 'Y'
    do Disconnected-Events
    new-page
  end-if

  if $BAS_Event_Chg = 'Y'
    do Out-of-Sequence-Events
    new-page
  end-if

  if $Incl_Summary = 'Y'
    do Flagged-Event-Summary
    new-page
  end-if

End-Procedure

!*************************************
Begin-Procedure Addr-Elig-Chg-Events
!*************************************

  let $ReportTitle = $BAS008-TITLE-A
  let $Report_Type = 'A'
  move 0 to #row_cnt

Begin-Select

  add 1 to #row_cnt

  print #row_cnt                         (+1,1,{COL_ROW_COUNT}) edit 999

PA.SCHED_ID                              (0,+{COL_SEP},{COL_SCHED_ID})
PA.EMPLID                                (0,+{COL_SEP},{COL_EMPLID})
DA.NAME                                  (0,+{COL_SEP},{COL_NAME})
PA.BENEFIT_RCD_NBR                          (0,+{COL_SEP},{COL_BENEFIT_RCD})
PA.EVENT_ID                              (0,+{COL_SEP},{COL_EVENT_ID})
PA.EVENT_DT
  do Format-Datetime(&PA.Event_Dt, $Out, {DEFDATE}, '', '')
  print $Out          (0,+{col_sep},{col_date})
PA.EVENT_STATUS                          (0,+{COL_SEP},{COL_STATUS})
PA.BAS_PROCESS_STATUS                    (0,+{COL_SEP},{COL_STATUS})
PA.ADDR_ELIG_CHG_DT
  do Format-Datetime(&PA.Addr_Elig_Chg_Dt, $Out, {DEFDATE}, '', '')
  print $Out          (0,+{col_sep3},{col_date})
PA.ADDR_EFFDT
  do Format-Datetime(&PA.Addr_EffDt, $Out, {DEFDATE}, '', '')
  print $Out          (0,+{col_sep},{col_date})

From  PS_BAS_PARTIC    PA,
      PS_PERSON_NAME   DA

Where PA.SCHED_ID LIKE $Sched_Id
And PA.ADDR_ELIG_CHG_DT BETWEEN $FromDate and $ThruDate
And DA.EMPLID = PA.EMPLID
And PA.ADDR_ELIG_CHG = 'Y'

Order By PA.SCHED_ID ASC,
         PA.EMPLID ASC,
         PA.BENEFIT_RCD_NBR ASC

End-Select
End-Procedure

!***************************************
Begin-Procedure MultiJob-Elig-Chg-Events
!***************************************

  let $ReportTitle = $BAS008-TITLE-B
  let $Report_Type = 'B'
  move 0 to #row_cnt

Begin-Select

  add 1 to #row_cnt

  print #row_cnt                         (+1,1,{COL_ROW_COUNT}) edit 999

PU.SCHED_ID                              (0,+{COL_SEP},{COL_SCHED_ID})
PU.EMPLID                                (0,+{COL_SEP},{COL_EMPLID})
DU.NAME                                  (0,+{COL_SEP},{COL_NAME})
PU.BENEFIT_RCD_NBR                          (0,+{COL_SEP},{COL_BENEFIT_RCD})
PU.EVENT_ID                              (0,+{COL_SEP},{COL_EVENT_ID})
PU.EVENT_DT
  do Format-Datetime(&PU.Event_Dt, $Out, {DEFDATE}, '', '')
  print $Out                             (0,+{col_sep},{col_date})

PU.EVENT_STATUS                          (0,+{COL_SEP},{COL_STATUS})
PU.BAS_PROCESS_STATUS                    (0,+{COL_SEP},{COL_STATUS})
PU.MJ_ELIG_CHG_DT
  do Format-Datetime(&PU.MJ_Elig_Chg_Dt, $Out, {DEFDATE}, '', '')
  print $Out                             (0,+{col_sep3},{col_date})

PU.EMPL_RCD                             (0,+{COL_SEP},{COL_EMPL_RCD})


From  PS_BAS_PARTIC    PU,
      PS_PERSON_NAME DU

Where PU.SCHED_ID LIKE $Sched_Id
And PU.MJ_ELIG_CHG_DT BETWEEN $FromDate and $ThruDate
And DU.EMPLID = PU.EMPLID
And PU.MJ_ELIG_CHG = 'Y'

Order By PU.SCHED_ID ASC,
         PU.EMPLID ASC,
         PU.BENEFIT_RCD_NBR ASC

End-Select
End-Procedure

!*************************************
Begin-Procedure Job-Elig-Chg-Events
!*************************************

  let $ReportTitle = $BAS008-TITLE-C
  let $Report_Type = 'C'
  move 0 to #row_cnt

Begin-Select

  add 1 to #row_cnt

  print #row_cnt                         (+1,1,{COL_ROW_COUNT}) edit 999

PJ.SCHED_ID                              (0,+{COL_SEP},{COL_SCHED_ID})
PJ.EMPLID                                (0,+{COL_SEP},{COL_EMPLID})
DJ.NAME                                  (0,+{COL_SEP},{COL_NAME})
PJ.BENEFIT_RCD_NBR                          (0,+{COL_SEP},{COL_BENEFIT_RCD})
PJ.EVENT_ID                              (0,+{COL_SEP},{COL_EVENT_ID})
PJ.EVENT_DT
  do Format-Datetime(&PJ.Event_Dt, $Out, {DEFDATE}, '', '')
  print $Out          (0,+{col_sep},{col_date})
PJ.EVENT_STATUS                          (0,+{COL_SEP},{COL_STATUS})
PJ.BAS_PROCESS_STATUS                    (0,+{COL_SEP},{COL_STATUS})
PJ.JOB_ELIG_CHG_DT
  do Format-Datetime(&PJ.Job_Elig_Chg_Dt, $Out, {DEFDATE}, '', '')
  print $Out          (0,+{col_sep3},{col_date})
PJ.EMPL_RCD                             (0,+{COL_SEP},{COL_EMPL_RCD})
PJ.JOB_EFFDT
  do Format-Datetime(&PJ.Job_EffDt, $Out, {DEFDATE}, '', '')
  print $Out          (0,+{col_sep},{col_date})
PJ.JOB_EFFSEQ                            (0,+{COL_SEP},{COL_EFFSEQ})

From  PS_BAS_PARTIC    PJ,
      PS_PERSON_NAME DJ

Where PJ.SCHED_ID LIKE $Sched_Id
And  PJ.JOB_ELIG_CHG_DT BETWEEN $FromDate and $ThruDate
And DJ.EMPLID = PJ.EMPLID
And PJ.JOB_ELIG_CHG = 'Y'

Order By PJ.SCHED_ID ASC,
         PJ.EMPLID ASC,
         PJ.BENEFIT_RCD_NBR ASC

End-Select
End-Procedure

!*************************************
Begin-Procedure Disconnected-Events
!*************************************

  let $ReportTitle = $BAS008-TITLE-D
  let $Report_Type = 'D'
  move 0 to #row_cnt

Begin-Select

  add 1 to #row_cnt

  print #row_cnt                         (+1,1,{COL_ROW_COUNT}) edit 999

PD.SCHED_ID                              (0,+{COL_SEP},{COL_SCHED_ID})
PD.EMPLID                                (0,+{COL_SEP},{COL_EMPLID})
DD.NAME                                  (0,+{COL_SEP},{COL_NAME})
PD.BENEFIT_RCD_NBR                          (0,+{COL_SEP},{COL_BENEFIT_RCD})
PD.EVENT_ID                              (0,+{COL_SEP},{COL_EVENT_ID})
PD.EVENT_DT
  do Format-Datetime(&PD.Event_Dt, $Out, {DEFDATE}, '', '')
  print $Out          (0,+{col_sep},{col_date})
PD.EVENT_STATUS                          (0,+{COL_SEP},{COL_STATUS})
PD.BAS_PROCESS_STATUS                    (0,+{COL_SEP},{COL_STATUS})
PD.BAS_EVT_DISCONNECT                    (0,+{COL_SEP3},{COL_FLAG})
PD.BAS_EVT_DISC_DT
  do Format-Datetime(&PD.BAS_Evt_Disc_Dt, $Out, {DEFDATE}, '', '')
  print $Out          (0,+{col_sep},{col_date})
PD.EVENT_EMPLRCD                         (0,+{COL_SEP},{COL_EMPL_RCD})
PD.EVENT_EFFSEQ                          (0,+{COL_SEP},{COL_EFFSEQ})
PD.BAS_ACTION_SOURCE                     (0,+{COL_SEP},{COL_SOURCE})

From  PS_BAS_PARTIC    PD,
      PS_PERSON_NAME DD

Where PD.SCHED_ID LIKE $Sched_Id
And PD.BAS_EVT_DISC_DT BETWEEN $FromDate and $ThruDate
And DD.EMPLID = PD.EMPLID
And PD.BAS_EVT_DISCONNECT = 'Y'

Order By PD.SCHED_ID ASC,
         PD.EMPLID ASC,
         PD.BENEFIT_RCD_NBR ASC

End-Select
End-Procedure

!*************************************
Begin-Procedure Out-of-Sequence-Events
!*************************************

  let $ReportTitle = $BAS008-TITLE-E
  let $Report_Type = 'E'
  move 0 to #row_cnt

Begin-Select

  add 1 to #row_cnt

  print #row_cnt                         (+1,1,{COL_ROW_COUNT}) edit 999

PS.SCHED_ID                              (0,+{COL_SEP},{COL_SCHED_ID})
PS.EMPLID                                (0,+{COL_SEP},{COL_EMPLID})
DS.NAME                                  (0,+{COL_SEP},{COL_NAME})
PS.BENEFIT_RCD_NBR                          (0,+{COL_SEP},{COL_BENEFIT_RCD})
PS.EVENT_ID                              (0,+{COL_SEP},{COL_EVENT_ID})
PS.EVENT_DT
  do Format-Datetime(&PS.Event_Dt, $Out, {DEFDATE}, '', '')
  print $Out          (0,+{col_sep},{col_date})
PS.EVENT_STATUS                          (0,+{COL_SEP},{COL_STATUS})
PS.BAS_PROCESS_STATUS                    (0,+{COL_SEP},{COL_STATUS})
PS.BAS_EVENT_CHG_DT
  do Format-Datetime(&PS.BAS_Event_Chg_Dt, $Out, {DEFDATE}, '', '')
  print $Out          (0,+{col_sep3},{col_date})
PS.EVENT_PRIORITY                        (0,+{COL_SEP},{COL_PRIORITY})

From  PS_BAS_PARTIC    PS,
      PS_PERSON_NAME DS

Where PS.SCHED_ID LIKE $Sched_Id
And PS.BAS_EVENT_CHG_DT BETWEEN $FromDate and $ThruDate
And DS.EMPLID = PS.EMPLID
And PS.BAS_EVENT_CHG = 'Y'

Order By PS.SCHED_ID ASC,
         PS.EMPLID ASC,
         PS.BENEFIT_RCD_NBR ASC

End-Select
End-Procedure

!*************************************
Begin-Procedure Flagged-Event-Summary
!*************************************

  let $ReportTitle = $BAS008-TITLE-F
  let $Report_Type = 'F'
  move 0 to #row_cnt

Begin-Select

  add 1 to #row_cnt

  print #row_cnt                         (+1,1,{COL_ROW_COUNT}) edit 999

P.SCHED_ID                              (0,+{COL_SEP},{COL_SCHED_ID})
P.EMPLID                                (0,+{COL_SEP},{COL_EMPLID})
D.NAME                                  (0,+{COL_SEP},{COL_NAME})
P.BENEFIT_RCD_NBR                          (0,+{COL_SEP},{COL_BENEFIT_RCD})
P.EVENT_ID                              (0,+{COL_SEP},{COL_EVENT_ID})
P.EVENT_DT
  do Format-Datetime(&P.Event_Dt, $Out, {DEFDATE}, '', '')
  print $Out          (0,+{col_sep},{col_date})
P.EVENT_STATUS                          (0,+{COL_SEP},{COL_STATUS})
P.BAS_PROCESS_STATUS                    (0,+{COL_SEP},{COL_STATUS})
P.ADDR_ELIG_CHG                         (0,+{COL_SEP},{COL_FLAG})
P.ADDR_ELIG_CHG_DT
  do Format-Datetime(&P.Addr_Elig_Chg_Dt, $Out, {DEFDATE}, '', '')
  print $Out          (0,+{col_sep},{col_date})
P.MJ_ELIG_CHG                           (0,+{COL_SEP},{COL_FLAG})
P.MJ_ELIG_CHG_DT
  do Format-Datetime(&P.MJ_Elig_Chg_Dt, $Out, {DEFDATE}, '', '')
  print $Out          (0,+{col_sep},{col_date})
P.JOB_ELIG_CHG                          (0,+{COL_SEP},{COL_FLAG})
P.JOB_ELIG_CHG_DT
  do Format-Datetime(&P.Job_Elig_Chg_Dt, $Out, {DEFDATE}, '', '')
  print $Out          (0,+{col_sep},{col_date})
P.BAS_EVT_DISCONNECT                    (0,+{COL_SEP},{COL_FLAG})
P.BAS_EVT_DISC_DT
  do Format-Datetime(&P.BAS_Evt_Disc_Dt, $Out, {DEFDATE}, '', '')
  print $Out          (0,+{col_sep},{col_date})
P.BAS_EVENT_CHG                         (0,+{COL_SEP},{COL_FLAG})
P.BAS_EVENT_CHG_DT
  do Format-Datetime(&P.BAS_Event_Chg_Dt, $Out, {DEFDATE}, '', '')
  print $Out          (0,+{col_sep},{col_date})

From  PS_BAS_PARTIC    P,
      PS_PERSON_NAME  D

Where P.SCHED_ID LIKE $Sched_Id
And (P.ADDR_ELIG_CHG_DT BETWEEN $FromDate and $ThruDate
     Or P.MJ_ELIG_CHG_DT BETWEEN $FromDate and $ThruDate
     Or P.JOB_ELIG_CHG_DT BETWEEN $FromDate and $ThruDate
     Or P.BAS_EVT_DISC_DT BETWEEN $FromDate and $ThruDate
     Or P.BAS_EVENT_CHG_DT BETWEEN $FromDate and $ThruDate)
And D.EMPLID = P.EMPLID

Order By P.SCHED_ID ASC,
         P.EMPLID ASC,
         P.BENEFIT_RCD_NBR ASC

End-Select
End-Procedure

!*************************************
Begin-Procedure Display-Time
!*************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

!*************************************

#Include 'readxlat.sqc' !Get translate Values
#Include 'number.sqc'
#Include 'datetime.sqc'
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'getsched.sqc'  !Ask-Schedule-Id Procedure
#Include 'benftd.sqc'    !Ask-From-Thru-Date procedure

#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language

!****************************** End Of Report *******************************

