!***********************************************************************
!  TAX710: Print contents of Tax Form Definition Table                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:06:29:30                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'TAX710' to $ReportID

  do Init-DateTime
  do Get-Current-DateTime
  do Stdapi-Init

  do Get-Report-Language
  move $Tax710_ReportTitle to $ReportTitle
  display $ReportTitle

  if $Prcs_Process_Instance = ''
    do Prompts
  else
     do Select-Parameters
     do Convert-Parameters
  end-if
end-procedure

! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation
! Read from TAX710 program ids
  do Init_Report_Translation($ReportID,$language_cd)
  do Get_Field_Information ('TAX710', 'REPORTTITLE', $Tax710_ReportTitle, #dummy_width)
  do Get_Field_Information ('TAX710', 'FORMID',      $Tax710_FormID,      #dummy_width)
  do Get_Field_Information ('TAX710', 'EFFDT1',      $Tax710_EffDt1,      #dummy_width)
  do Get_Field_Information ('TAX710', 'ERN_CD1',     $Tax710_Ern_Cd1,     #dummy_width)
  do Get_Field_Information ('TAX710', 'DED_CD1',     $Tax710_Ded_Cd1,     #dummy_width)
  do Get_Field_Information ('TAX710', 'TX_FORMS1',   $Tax710_Tx_Forms1,   #dummy_width)
  do Get_Field_Information ('TAX710', 'EFFDT2',      $Tax710_EffDt2,      #dummy_width)
  do Get_Field_Information ('TAX710', 'BOX2',        $Tax710_Box2,        #dummy_width)
  do Get_Field_Information ('TAX710', 'DESCR2',      $Tax710_Descr2 ,     #dummy_width)
  do Get_Field_Information ('TAX710', 'ERN_CD2',     $Tax710_Ern_Cd2,     #dummy_width)
  do Get_Field_Information ('TAX710', 'DED_PLNTYP2', $Tax710_Ded_PlnTyp2, #dummy_width)
  do Get_Field_Information ('TAX710', 'DED_CD2',     $Tax710_Ded_Cd2,     #dummy_width)
  do Get_Field_Information ('TAX710', 'DED_CLS2',    $Tax710_Ded_Cls2,    #dummy_width)
  do Get_Field_Information ('TAX710', 'TX_JURIS2',   $Tax710_Tx_Juris2,   #dummy_width)
  do Get_Field_Information ('TAX710', 'TX_STATE2',   $Tax710_Tx_State2,   #dummy_width)
  do Get_Field_Information ('TAX710', 'TX_LOC2',     $Tax710_Tx_Loc2,     #dummy_width)
  do Get_Field_Information ('TAX710', 'TX_CLS2',     $Tax710_Tx_Cls2,     #dummy_width)
  do Get_Field_Information ('TAX710', 'TX_AMTTYP2',  $Tax710_Tx_AmtTyp2,  #dummy_width)
end-procedure

begin-HEADING 8
  #Include 'stdhdgtr.sqc'

  print $Tax710_FormID                                         (3,1)
  print $TaxForm_ID                                           (,+3)

  move 'REPORT_COUNTRY' to $FieldName
  move $Country         to $FieldValue
  do Read-Translate-Table
  let $Title2_Left = rtrim($XlatLongName, ' ')
  move $Title2_Left to $Title2
  concat ' - '     with $Title2

  move 'TAXFORM_OPT'    to $FieldName
  move $TaxformOpt      to $FieldValue
  do Read-Translate-Table
  let $Title2_Right = rtrim($XlatLongName, ' ')
  concat $Title2_Right with $Title2

  print $Title2                                               () center

  print $Tax710_EffDt1                                        (+3,1)
  print $Tax710_Ern_Cd1                                       (0,52)
  print $Tax710_Ded_Cd1                                       (0,70)
  print $Tax710_Tx_Forms1                                     (0,120)

  print $Tax710_EffDt2                                        (+1,1)
  print $Tax710_Box2                                          (0,14)
  print $Tax710_Descr2                                        (0,20)
  print $Tax710_Ern_Cd2                                       (0,57)
  print $Tax710_Ded_PlnTyp2                                   (0,70)
  print $Tax710_Ded_Cd2                                       (0,85)
  print $Tax710_Ded_Cls2                                      (0,94)
  print $Tax710_Tx_Juris2                                     (0,120)
  print $Tax710_Tx_State2                                     (0,134)
  print $Tax710_Tx_Loc2                                       (0,140)
  print $Tax710_Tx_Cls2                                       (0,151)
  print $Tax710_Tx_AmtTyp2                                    (0,163)

end-HEADING

!***********************************************************************
!  PROC PROCESS-MAIN
!         Main Procedure
!***********************************************************************

BEGIN-PROCEDURE Process-Main
  let #Line = 1
  let $PrtSw = 'N'
  if $CurrentOnly = 'Y'
    move 'AND A.EFFDT = (SELECT MAX(EFFDT) FROM PS_TAXFORM_TBL AA WHERE AA.TAXFORM_ID = A.TAXFORM_ID)' to $SlctEffdt
    move 'ORDER BY A.TAXFORM_ID, B.BOX' to $OrderBy
  else
    move ' ' to $SlctEffdt
    move 'ORDER BY A.TAXFORM_ID, A.EFFDT DESC, B.BOX' to $OrderBy
  end-if

  if $TaxformOpt = 'A'
    move ' ' to $SlctIn
  else
    do Build-Select
  end-if

  if $Country = 'U'
    do Taxform-US
  else
    if $Country = 'C'
      do Taxform-CAN
    else
      do Taxform-US
      do Taxform-CAN
    end-if
  end-if

END-PROCEDURE


BEGIN-PROCEDURE Taxform-US

  move ', PS_USA_TAXFORM_VW C' to $SlctFrom
  do Get-Entries

END-PROCEDURE


BEGIN-PROCEDURE Taxform-CAN

  move ', PS_CAN_TAXFORM_VW C' to $SlctFrom
  do Get-Entries

END-PROCEDURE


BEGIN-PROCEDURE Get-Entries
BEGIN-SELECT

A.TAXFORM_ID              () on-break print=never level=1 after=After-Form

  do Break-Page
  move 'TAXFORM_ID'  to $FieldName
  move &A.TaxForm_ID to $FieldValue
  move &A.TaxForm_ID to $TaxFormID
  do Read-Translate-Table
  move $XlatShortName to $TaxForm_ID

A.EFFDT
  do Format-DateTime(&A.EffDt, $out, {DEFDATE}, '', '')
  print $out              (#Line,1) !on-break print=change/top-page
  move &A.EffDt to $EffDt

B.BOX                     (0,14)
  move &B.Box to $Box
B.DESCR                 !  (0,20)

        let $Prnt_Descr = &B.DESCR
          if $Curr_language_cd <> $Psoptions_Language_Cd
         do Lang-Record-Details
        end-if
        Print $Prnt_Descr               (0,20)

  do Get-Codes

 ! NEXT-LISTING SKIPLINES=2

 FROM PS_TAXFORM_TBL A, PS_TAXFORM_BOX B

#ifdef MVS
  \$SLCTFROM\
#else
  [$SlctFrom]
#endif

WHERE
#ifdef MVS
  \$SLCTIN\
#else
  [$SlctIn]
#endif

      A.TAXFORM_ID = C.FIELDVALUE
  AND B.TAXFORM_ID = A.TAXFORM_ID
#ifdef MVS
  \$SLCTEFFDT\
#else
  [$SlctEffdt]
#endif

  AND B.EFFDT      = A.EFFDT

#ifdef MVS
  \$ORDERBY\
#else
  [$OrderBy]
#endif

END-SELECT
END-PROCEDURE


begin-procedure Build-Select

  move ' ' to $SlctIn
  move 'N' to $Taxform-Found
  move 'Y' to $First-Taxform

begin-select
N.TAXFORM_ID

  move 'Y' to $Taxform-Found
  if $First-Taxform = 'Y'
     move 'N' to $First-Taxform
     move 'A.TAXFORM_ID IN (''' to $SlctIn
  else
     concat ', '''     with $SlctIn
  end-if
  concat &N.Taxform_ID with $SlctIn
  concat ''''         with $SlctIn

FROM PS_RC_TAX710 N
WHERE N.OPRID = $Prcs_OprID
  AND N.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
  AND N.TAXFORM_ID <> ' '

end-select

  if $Taxform-Found = 'Y'
     concat ') AND ' with $SlctIn
  end-if

end-procedure


BEGIN-PROCEDURE Lang-Record-Details
BEGIN-SELECT
LNG_R.DESCR

        let $Prnt_Descr = Cond(Rtrim(&LNG_R.DESCR,' ')='', $Prnt_Descr, &LNG_R.DESCR)

FROM PS_TAXFORM_BX_LANG LNG_R
WHERE LNG_R.TAXFORM_ID  = $TaxformId
  AND LNG_R.BOX         = $Box
  AND LNG_R.LANGUAGE_CD = $Curr_language_cd
  AND LNG_R.EFFDT          = (SELECT MAX(EFFDT) FROM PS_TAXFORM_BX_LANG RR
                                     WHERE RR.TAXFORM_ID  = $TaxformId
                                       AND RR.BOX         = $Box
                                       AND RR.EFFDT      <= $Effdt
                                       AND RR.LANGUAGE_CD = $Curr_language_cd)
END-SELECT
END-PROCEDURE



BEGIN-PROCEDURE Get-Tax-Codes

 ! let #Line = 1

BEGIN-SELECT

T.TAXFORM_ID
T.EFFDT
T.BOX
T.JURISDICTION_TYPE

  if $PrtSw = 'Y' and #Line = 1
    do Print-Effdt-Box-Descr
  end-if

  move 'JURISDICTION_TYPE'  to $FieldName
  move &T.Jurisdiction_Type to $FieldValue
  do Read-Translate-Table
  print $XlatShortName    (#Line,120,10)

T.STATE          (0,134)
T.LOCALITY       (0,140)
T.TAX_CLASS

  move 'TAX_CLASS'  to $FieldName
  move &T.TAX_Class to $FieldValue
  do Read-Translate-Table
  print $XlatShortName    (0,151)

T.AMOUNT_TYPE

  move 'AMOUNT_TYPE'  to $FieldName
  move &T.Amount_Type to $FieldValue
  do Read-Translate-Table
  print $XlatShortName    (0,164)

  do Adjust-Prt-Line

 FROM PS_TAXFORM_TAX T
WHERE T.TAXFORM_ID = $TaxFormID
  AND T.EFFDT      = $EffDt
  AND T.BOX        = $Box

ORDER BY T.TAXFORM_ID, T.EFFDT DESC, T.BOX,
         T.JURISDICTION_TYPE, T.STATE, T.LOCALITY, T.TAX_CLASS

END-SELECT
END-PROCEDURE

BEGIN-PROCEDURE Get-Earnings-Codes

 ! let #Line = 1

BEGIN-SELECT

ID.TAXFORM_ID
ID.EFFDT
ID.BOX
ID.ERNCD

  if $PrtSw = 'Y' and #Line = 1
    do Print-Effdt-Box-Descr
  end-if

  move &ID.ERNCD to $Erncd
  print $Erncd (#Line,57)

  do Adjust-Prt-Line

 FROM PS_TAXFORM_ERN ID
WHERE ID.TAXFORM_ID = $TaxFormID
  AND ID.EFFDT      = $EffDt
  AND ID.BOX        = $Box

ORDER BY ID.TAXFORM_ID, ID.EFFDT DESC, ID.BOX, ID.ERNCD

END-SELECT
END-PROCEDURE

BEGIN-PROCEDURE Get-Deduction-Codes

 ! let #Line = 1

BEGIN-SELECT

J.TAXFORM_ID
J.EFFDT
J.BOX
J.PLAN_TYPE

  if $PrtSw = 'Y' and #Line = 1
    do Print-Effdt-Box-Descr
  end-if

  move &J.Plan_Type to $PlanType
  print $PlanType (#Line,70)

  move 'PLAN_TYPE'  to $FieldName
  move &J.Plan_Type to $FieldValue
  do Read-Translate-Table
  print $XlatShortName    (0,74)

J.DEDCD          (0,85)
J.DED_CLASS      (0,94)

  move 'DED_CLASS'  to $FieldName
  move &J.Ded_Class to $FieldValue
  do Read-Translate-Table
  print $XlatShortName    (0,97)

J.DED_SLSTX_CLASS

  if &J.DED_SLSTX_CLASS <> 'B' and &J.DED_SLSTX_CLASS <> ' '
    print &J.DED_SLSTX_CLASS      (0,108)
    move 'DED_SLSTX_CLASS'  to $FieldName
    move &J.Ded_SlsTx_Class to $FieldValue
    do Read-Translate-Table
    print $XlatShortName    (0,111)
  end-if

  do Adjust-Prt-Line

 FROM PS_TAXFORM_DED J
WHERE J.TAXFORM_ID = $TaxFormID
  AND J.EFFDT      = $EffDt
  AND J.BOX        = $Box

ORDER BY J.TAXFORM_ID, J.EFFDT DESC, J.BOX,
         J.PLAN_TYPE, J.DEDCD, J.DED_CLASS, J.DED_SLSTX_CLASS

END-SELECT
END-PROCEDURE


BEGIN-PROCEDURE Get-Codes

  move 'N' to $PrtSw
  do Get-Tax-Codes
  do Get-Earnings-Codes
  do Get-Deduction-Codes

    if #Line >= 42
      Let $break_page = 'Y'
    else
      if $PrtSw = 'N'
        add 3 to #Line
      else
        if #Line <> 1
          add 2 to #Line
        end-if
      end-if
    end-if

END-PROCEDURE


BEGIN-PROCEDURE Adjust-Prt-Line
  move 'Y' to $PrtSw
  if #Line = 44
    new-page
    move 1 to #Line
  else
    add  1 to #Line
  end-if
END-PROCEDURE


BEGIN-PROCEDURE Print-Effdt-Box-Descr
    do Format-DateTime($EffDt, $out, {DEFDATE}, '', '')
    print $out                      (#Line,1)
    Print $Box                      (0,14)
    Print $Prnt_Descr               (0,20)
END-PROCEDURE


BEGIN-PROCEDURE Prompts
  while $CurrentOnly = ''
    input $CurrentOnly 'Current Table entries only? (Y/N)'
    uppercase $CurrentOnly
    if INSTR('YN',$CurrentOnly,1) = 0
      move '' to $CurrentOnly
    end-if
  end-while

  while $Country = ''
    input $Country 'Enter U.S. (U) or Canada (C) or both (B)'
    uppercase $Country
    if INSTR('UCB',$Country,1) = 0
      move '' to $Country
    end-if
  end-while
END-PROCEDURE

BEGIN-PROCEDURE After-Form
  let $break_page = 'Y'
END-PROCEDURE


begin-procedure Convert-Parameters

  move $RC_QTR_UI.Current_Only     to $CurrentOnly
  move $RC_QTR_UI.Report_Country   to $Country
  move $RC_QTR_UI.Taxform_Opt      to $TaxformOpt
end-procedure

Begin-Procedure Break-Page
 If $break_page = 'Y'
   new-page
   move 1 to #Line
   Let $break_page = 'N'
 end-if
End-Procedure

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'txrnctl1.sqc'  !Process Scheduler Run Controls
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language

