
!***********************************************************************
!  TAX960PR:  Create W-2PR Print File (for Puerto Rico)                *
!***********************************************************************
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2007/01/17:11:43:09                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  654914                                              !
!                                                                      *
!***********************************************************************

#DEFINE WCOLUMN1 2    !Set up first print column of W2 form
#DEFINE WCOLUMN2 42   !Set up mid-point column of W2 form
#DEFINE SIZE_OF_FONT 8  !Used for Printing
#include 'setenv.sqc' !Set environment

!
! Definitions of WCOLUMN1, WCOLUMN2, and SIZE_OF_FONT variables are
! listed above.  If you require larger print, the above #DEFINE
! SIZE_OF_FONT should be changed to 6.
!

begin-setup
   #if {SIZE_OF_FONT} = '6'
    #Include 'setup03i.sqc'  !printer and page-size init - impact
  #else

    #include 'setupdb.sqc'               ! Database specific setup

    #ifndef MVS
    #ifndef OS400
    printer-init <27>E<27>(0N<27>&l8D<27>&l0E<27>&l88F<27>&l-05Z
    !                |      |      |       |       |         |
    !                |      |      |       |       |         |
    !                    Short edge offset (-05 decipoints)<--
    !                |      |      |       |        --> 88 text lines
    !                |      |      |        --> top margin = 0 lines
    !                |      |       --> 8 lines per inch
    !                |     --> ISO 8859-1 symbol set
    !                 --> Reset
    #else
    printer-init <39>E<39>(0N<39>&l8D<39>&l0E<39>&l88F
    #endif
    #else
    printer-init <39>E<39>(0N<39>&l8D<39>&l0E<39>&l88F
    #endif

    page-size 88 96

  #endif
end-setup

begin-report
  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
  display ''
  display 'Printing W-2 PR'

  date-time () hh:mi:ss &t1
  display &t1

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Initialization

  if $PRCS_Process_Instance = ''
     do Prompts
  else
     do Select-US-Year-End-Parameters
     do Convert-Parameters
  end-if

  if &TX.Align_Count > 0
    do Print-Alignment-Forms
  end-if

  do Report-File-Create
  if &TX.Align_Count > 0
    add #Align_Count to #T_Count
  end-if

  if $EE_Selected = 'Y'
    do Delete-Sel-Employees-Table
  end-if

  if $EmployeeFound = 'N'
    display ' '
    display '****** No Employee Records Selected ******'
    display ' '
    new-page
    print '********************************'  (+3,1)
    print '  No Employee Records Selected  '  (+1,1)
    print '********************************'  (+1,1)
  else
    display ''
    display 'Upon successful conclusion of this program, one file will have'
    display 'been created:'
    display ''
    display '{IMPORTPREFIX}TAX960PR.LIS contains print images for paper W-2s.'
    display ''
    do Print-Grand-Totals
  end-if

  date-time () hh:mi:ss &t2
  display &t2
end-procedure

begin-procedure Initialization
  do Get-Current-DateTime
  move '1' to $MMLZero
  move '1' to $Year4
  do Format-DateTime($AsOfToday, $910Date, {DEFYMD},'','')

  move $910Date to $AsOfYear xxxx   !extract the current year
  move $AsOfYear  to #AsOfYear
  move #AsOfYear  to #saveAsOfYear
  subtract 1    from #AsOfYear

  do Get-Tax-Reporting-Run-Controls

  if RTRIM(&TX.Form_ID,' ') = ''
    display '*********************************************************'
    display 'Form ID not specified on Tax Reporting Parameters Panel  '
    display 'Program stopped'
    display '*********************************************************'
    stop
  end-if

  let $Form_ID = RTRIM(&TX.Form_ID,' ')
!  default FORM_ID is W-2PR
  if $Form_ID <> 'W-2PR'
    if $Form_ID <> 'W-2PRL'
      display '*********************************************************'
      display 'Form ID W-2PR or W-2PRL not specified on Tax Reporting   '
      display 'Parameters Panel - Program stopped                       '
      display '*********************************************************'
      stop
    end-if
  end-if

  move &TX.Balance_Year to $CalYear 9999

  let $Yr = SUBSTR($CalYear,4,1)

  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')


  if &TX.Balance_Year <> #AsOfYear and $Prcs_Process_Instance = ''
    display ''
    display 'Current Year is not one greater than Tax Reporting Year.'
    display 'Current Year is    ' noline
    display  #saveAsOfYear  9999
    display 'Tax Reporting Year ' noline
    display &TX.Balance_Year
    input $Answer maxlen=1 'Do you want to continue? (Y/N)'
    uppercase $Answer
    if $Answer <> 'Y'
      stop
    end-if
  end-if

  do Load-W2-PRT

!  move 0 to #T_Count
  move  0 to #Form#
  move &TX.Employees_Per_Page to #EmployeesPerPage

  if $Layout_Style = '4CORNER'
    COLUMNS {WCOLUMN1} {WCOLUMN2}
    move 4 to #FormsPerPage
  end-if

  if $Layout_Style = '2VERTICAL'
    COLUMNS {WCOLUMN1}
    move 2 to #FormsPerPage
  end-if

  if $Layout_Style = '4VERTICAL'
    COLUMNS {WCOLUMN1}
    move 4 to #FormsPerPage
  end-if

  if #EmployeesPerPage  > #FormsPerPage
    display '*********************************************************'
    display 'Employees Per Page specifed on Tax Reporting Parameters  '
    display 'Panel is greater than the number of forms per page       '
    display 'for the Form ID selected.                                '
    display '*********************************************************'
    stop
  end-if

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT


end-procedure

begin-procedure Report-File-Create
  move 'N' to $EmployeeFound

begin-SELECT
A.W2_REPORTING_CO
A.DESCR
A.FEDERAL_EIN
A.ADDRESS1
A.ADDRESS2
A.CITY
A.STATE
A.POSTAL
A.COUNTRY
A.BUSI_TERM_DT

  move &A.Federal_EIN     to $A.Federal_EIN 099999999
  move &A.Descr           to $A.Descr
  move &A.Address1        to $A.Address1
  move &A.Address2        to $A.Address2
  move &A.Country         to $A.Country
  let  $A.City            =  RTRIM(&A.City,' ')
  let $A.State = rtrim(&A.State, ' ')
  move &A.Postal          to $A.Zip
  move &A.W2_Reporting_Co to $A.W2_Reporting_Co
  move $RC_US_YE.Telephone_Nbr     to $Telephone_Nbr

  if isnull(&A.BUSI_TERM_DT)
     let $A.ClosingDate = ' '
  else
     do Format-DateTime(&A.BUSI_TERM_DT, $A.ClosingDate, {DEFMDY},'','')
  end-if

  UPPERCASE $A.Descr
  UPPERCASE $A.Address1
  UPPERCASE $A.Address2
  UPPERCASE $A.Country
  UPPERCASE $A.City

  let $A.Federal_EIN = substr($A.Federal_EIN,1,#YE_ER_ID_Box_Size)
  let $A.Descr = substr($A.Descr,1,#YE_ER_Name_Box_Size)
  let $A.Address1 = substr($A.Address1,1,#YE_ER_Address1_Box_Size)
  let $A.Address2 = substr($A.Address2,1,#YE_ER_Address2_Box_Size)

  move 0 to #I_Count

  if $Form_ID = 'W-2PR'
    move ' ' to #Control_Num_Beg
    move ' ' to #Control_Num_End
    do Execute-File-Create
  else

    if $Form_ID = 'W-2PRL'
      if  $RC_US_YE.Reprint_Prompt = 'N'
        do read-control-no
        if $FoundControlNumber = 'Y'
          do Execute-File-Create
        end-if
      else
        do Execute-File-Create
      end-if
    end-if
  end-if


FROM  PS_W2_COMPANY A
WHERE A.CALENDAR_YEAR    = &TX.Balance_Year
  [$A.SelectedW2Co]        !Null string if not W-2PRL
  AND A.W2_REPORTING_CO  = A.COMPANY
  AND A.W2_REPORTING_CO <> ' '
ORDER BY A.W2_REPORTING_CO
end-SELECT

end-procedure

Begin-Procedure Execute-File-Create

  evaluate $SortCode1

    when = '1'
    when = '2'
    when = '5'
! smh
! Control numbers only valid for Laser W-2 for Puerto Rico

   if RTRIM(&TX.Form_ID,' ') <> 'W-2PRL'
     move 0 to #Control_Num_Beg
   end-if

    do Read-Employee-Data

    break

    when = '3'
    when = '4'
    when = '6'
      do W2-Sort
    break
  end-evaluate

  if $Form_ID  = 'W-2PRL'
    if &RC_US_YE.Reprint_Prompt = 'N'
       display '   '
       display 'W2 Reporting Co ' noline
       display &PR.W2_REPORTING_CO  noline
       display '  Control Number Begin  '  noline
       display $Control_Num_Beg            noline
       display '  Control Number End   '   noline
       display $Control_Num_End
       display ' '
    end-if
  end-if

End-Procedure
!SMH
begin-procedure read-control-no

  move 'N' to $FoundControlNumber
  move 'N' to $ValidControlNumber
  move 0 to #Control_Num_Beg
  move 0 to #Control_Num_End

  move 'AND W.W2_REPORTING_CO IN (''' to $A.SelectedW2Co
  move ' ' to $SelectedW2Co

begin-SELECT
PR.CONTROL_NUM_BEG
PR.W2_REPORTING_CO
PR.RUN_RPT

   if &PR.Control_Num_Beg <> ''
     move 'Y' to $ValidControlNumber
   end-if

   let $PR_W2_REPORTING_CO = rtrim(&PR.W2_REPORTING_CO,' ')

   if $PR_W2_REPORTING_CO <> ''
     move 'Y' to $FoundControlNumber
     move &PR.W2_REPORTING_CO to $SelectedW2Co
     let $A.SelectedW2Co = $A.SelectedW2Co || $SelectedW2Co || ''','''
     move &PR.Control_Num_Beg to #Control_Num_Beg
     move #Control_Num_Beg to $Control_Num_Beg 000000009
     move #Control_Num_Beg to #Control_Num_End

   end-if

FROM  PS_RC_TAX960PRN PR
WHERE PR.OPRID         = $Prcs_OprID
  AND PR.RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
  AND PR.W2_REPORTING_CO = &A.W2_Reporting_Co
  AND PR.RUN_RPT         = 'Y'
end-SELECT

  let $A.SelectedW2Co = SUBSTR($A.SelectedW2Co,1,LENGTH($A.SelectedW2Co) - 2)
  let $A.SelectedW2Co = $A.SelectedW2Co ||')'
!SMH
  move   &PR.Run_Rpt to $RunRpt
  if $RunRpt = 'Y'
    if ($FoundControlNumber = 'N'  or
        $ValidControlNumber = 'N' )

          display '          '
          display 'W2_Reporting_Co  ' noline
          display &A.W2_Reporting_Co

          display '*********************************************************'
          display 'W2_Reporting_Co and/or Control Number were not entered   '
          display 'for selected form W-2PRL - Program stopped'
          display '*********************************************************'
          stop
    end-if
  end-if

end-procedure

begin-procedure Read-Employee-Data
  move ' ' to $company

begin-SELECT
E.COMPANY
E.EMPLID           () on-break level=1 print=never before=Before-EmplID
E.TAXFORM_ID
E.SEQUENCE_NUMBER  () on-break level=2 print=never after=After-Seq
E.CONTROL_NUMBER
E.W2_STATE
E.EMPLOYER_ID_SWT
E.SSN
E.YE_FNAME
E.YE_MIDDLE_NAME
E.YE_LNAME
E.YE_SUFFIX
E.ADDRESS1
E.ADDRESS2
E.CITY
E.STATE
E.POSTAL
E.COUNTRY
E.DECEASED
E.SPOUSE_SSN
E.MAR_STATUS
EE.PROCESS_FLAG
P.NAME
W.W2_REPORTING_CO

  add 1 to #EE_Count
  move &E.TaxForm_ID      to $E.TaxForm_ID
  move &E.Sequence_Number to #E.Sequence_Number
  move &E.W2_State to $E.W2_State

  if RTRIM(&E.Employer_ID_SWT,' ') <> ''
    move &E.Employer_ID_SWT to $E.Employer_ID_SWT
    let $E.Employer_ID_SWT = substr($E.Employer_ID_SWT,1,#YE_State_ID_Box_Size)
  end-if

!smh

  if $RC_US_YE.Reprint_Prompt = 'N'
    if #Intermediate_Total_Cnt <> 0
      if #I_Count <> 0
        #ifdef TAXTEST
          if #I_Count <> 15
            do  Print-Intermediate-Total
          end-if
        #endif
        #ifndef TAXTEST
          if #I_Count <> 41
            do  Print-Intermediate-Total
          end-if
        #endif
      end-if
    end-if
  end-if


  if RTRIM(&TX.FORM_ID, ' ') = 'W-2PRL'
    if $RC_US_YE.Reprint_Prompt = 'N'
      if #Intermediate_Total_Cnt <> 0
        if #I_Count <> 0
          #ifdef TAXTEST
            if #I_Count <> 15
              do  Print-Intermediate-Total
            end-if
          #endif
          #ifndef TAXTEST
            if #I_Count <> 41
              do  Print-Intermediate-Total
            end-if
          #endif
        end-if
       end-if
     end-if
   end-if

  if RTRIM(&TX.FORM_ID, ' ') = 'W-2PRL'
    if $RC_US_YE.Reprint_Prompt = 'Y'
      move &E.Control_Number to $Control_Num_End
    else
      if &W.W2_REPORTING_CO = $W2ReportingCo
        Let #Control_Num_End = #Control_Num_End + 1
        Let $Control_Num_End=lpad(TO_CHAR(#Control_Num_End),9,'0')
      else
        move &W.W2_REPORTING_CO to $W2ReportingCo
        Let $Control_Num_End=lpad(TO_CHAR(#Control_Num_End),9,'0')
      end-if
    end-if
  end-if
!smh

  move 'Y' to $EmployeeFound

FROM  PS_YE_EE EE, PS_YE_DATA E, PS_NAMES P, PS_W2_COMPANY W
WHERE W.W2_REPORTING_CO  = &A.W2_Reporting_Co
  [$A.SelectedW2Co]          !NULL String if form not W-2PRL
  AND W.COMPANY          = E.COMPANY
  AND W.CALENDAR_YEAR    = E.CALENDAR_YEAR
  AND E.COMPANY          = EE.COMPANY
  AND E.EMPLID           = EE.EMPLID
  AND E.TAXFORM_ID       = 'P'
  AND E.TAXFORM_ID       = EE.TAXFORM_ID
  AND E.CALENDAR_YEAR    = EE.CALENDAR_YEAR
  AND E.CALENDAR_YEAR    = &TX.Balance_Year
  AND P.EMPLID           = EE.EMPLID
  AND P.NAME_TYPE = 'PRI'
  AND P.EFFDT =
      (SELECT MAX(PX.EFFDT)
       FROM PS_NAMES PX
       WHERE  PX.EMPLID    = P.EMPLID
         AND  PX.NAME_TYPE = P.NAME_TYPE 
         AND  PX.EFFDT    <= $AsOfDate)
  [$E.SelectedEEs]             !NULL string if SELECT EEs option not used

  AND EE.PROCESS_FLAG   <> 'V'
[$Sort2]
end-SELECT

!SMH

if RTRIM(&TX.FORM_ID, ' ') = 'W-2PRL'
  if $RC_US_YE.Reprint_Prompt = 'N'
    if #Control_Num_End <> 0
     Let $ControlNumEnd=lpad(TO_CHAR(#Control_Num_End),8,'0')
   begin-sql
     UPDATE PS_RC_TAX960PRN
     SET CONTROL_NUM_END = $ControlNumEnd
     WHERE OPRID         = $Prcs_OprID
     AND RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
     AND W2_REPORTING_CO = &A.W2_Reporting_Co
     end-SQL
   end-if
else

    begin-sql
     UPDATE PS_RC_US_YE
     SET REPRINT_PROMPT = 'N'
     WHERE OPRID         = $Prcs_OprID
     AND RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
    end-SQL
  end-if
end-if
!SMH
    move 0 to #EE_Count

end-procedure

begin-procedure Before-EmplID
  display 'processing ' noline
  display &E.Company  noline
  display ' '  noline
  display &E.w2_state     noline
  display ' '  noline
  display &p.name     noline
  display ' '  noline
  display &E.EmplID

  move &E.EmplID   to $E.EmplID

  move &E.SSN to $S123 xxx
  if $S123 = &Temp_SSN_Mask or RTRIM(&E.SSN, ' ') = ''
    move 'Applied For' to $E.SSN
  else
    move &E.SSN to $E.SSN xxx-xx-xxxx
  end-if


  move &E.Mar_Status to $E.Mar_Status

  move &E.Spouse_SSN to $S123 xxx
     if $S123 = &Temp_SSN_Mask or RTRIM(&E.SSN, '0') = ''
       move '           ' to $E.Spouse_SSN
     else
       move &E.Spouse_SSN to $E.Spouse_SSN xxx-xx-xxxx
     end-if

  move &E.YE_FNAME to $E.Name
  move &E.YE_FNAME to $FirstName
  move &E.YE_MIDDLE_NAME to $E.MiddleName

  move &E.YE_LNAME to $E.Lname
  move &E.YE_LNAME to $LastName
  move &E.YE_SUFFIX to $E.Suffix
  let $E.Name = rtrim($E.Name, ' ')  || ' '
  let $E.MiddleName = rtrim($E.MiddleName, ' ') || ' '
  let $E.Lname = rtrim($E.Lname, ' ')  || ' '
  let $E.Suffix =rtrim($E.Suffix, ' ')  || ' '
  if $E.MiddleName <> ' '
    let $E.YE_Name = $E.Name || $E.MiddleName || $E.Lname || $E.Suffix
  else
    let $E.YE_Name = $E.Name || $E.Lname || $E.Suffix
  end-if

  move $E.YE_Name to $YE_Name
  move $YE_Name to $E.YE_Name

  let $LastName = $E.Lname || $E.Suffix
  if &E.Deceased = 'Y'
    if INSTR($E.W2_Name,'DECD',1) = 0
      concat ' DECD'   with $LastName
    end-if
  end-if
  move &E.Address1        to $E.Address1
  move &E.Address2        to $E.Address2
  move &E.Country         to $E.Country
  let  $E.City            =  RTRIM(&E.City,' ')
  let $E.State = rtrim(&E.State, ' ')
  move &E.Postal          to $E.Zip

  uppercase $E.Address1
  uppercase $E.Address2
  uppercase $E.Country
  uppercase $E.City

  let $E.Control_Number = substr($E.Control_Number,1,#YE_Control_Nbr_Box_Size)
  let $E.SSN = substr($E.SSN,1,#YE_EE_SSN_Box_Size)
  let $E.YE_Name = substr($E.YE_Name,1,#YE_EE_FullName_Box_Size)
  let $E.Address1 = substr($E.Address1,1,#YE_EE_Address1_Box_Size)
  let $E.Address2 = substr($E.Address2,1,#YE_EE_Address2_Box_Size)

  let $E.YE_FName = substr($E.YE_Fname,1,#YE_EE_FName_Box_Size)
  let $E.YE_LName = substr($E.YE_LName,1,#YE_EE_LName_Box_Size)

  if #I_Count = 0
    move 0 to #Form#
  end-if

  move 0 to #FedWages
end-procedure

begin-procedure After-Seq
  do Load-Amounts
  do Print-W2
  if &TX.Balance_year < 2003
    if &E.Sequence_Number = 1
      add 1 to #I_Count
    end-if
  end-if

  #ifdef TAXTEST
     if #I_Count = 15
        do Print-Intermediate-Total
     end-if
  #endif
  #ifndef TAXTEST
    if #I_Count = 41
      do Print-Intermediate-Total
    end-if
  #endif

!smh

if RTRIM(&TX.FORM_ID, ' ') = 'W-2PRL'
  if $RC_US_YE.Reprint_Prompt = 'N'

   begin-sql
     UPDATE PS_YE_DATA
     SET CONTROL_NUMBER = $Control_Num_End
     WHERE COMPANY        = &A.W2_Reporting_Co
     AND CALENDAR_YEAR    = &TX.Balance_Year
     AND TAXFORM_ID       = 'P'
     AND EMPLID         = $E.Emplid
   end-SQL
  end-if
end-if
!smh

end-procedure

begin-procedure Print-W2
  move 1 to #j

  while #j <= #FormsPerPage/#EmployeesPerPage  !loop for individual ee's
    do Next-Form
    do Print-ER-Data
    do Print-EE-Data
    do Print-Fed-State-Amounts
    add 1 to #j
  end-while

  move 0 to #Cost_Pension_Annuity
  move 0 to #Wages
  move 0 to #Commissions
  move 0 to #Allowance
  move 0 to #Tips
  move 0 to #Total_Comm_Allow_Tips
  move 0 to #Reimbursed_Expense
  move 0 to #Tax_Withheld
  move 0 to #Retire_Fund
  move 0 to #CODA_Plans
  move 0 to #Sal_Act_No_324
  move 0 to #SS_Wages
  move 0 to #SS_Tax
  move 0 to #Med_Wages
  move 0 to #Med_Tax
  move 0 to #SS_Tips
  move 0 to #Uncoll_SS_Tax_On_Tips
  move 0 to #Uncoll_Med_Tax_on_Tips
end-procedure

begin-procedure Print-ER-Data
  !do Print-Value($Yr,#L_Y,#C_Y,'Year ')                  year is now pre-printed on form
  if &TX.BALANCE_YEAR < 2005

    do Print-Value($A.Federal_EIN,#L_06,#C_06,'Box 06')
  else
    do Print-Value($A.Federal_EIN,#L_05,#C_05,'Box 05')
  end-if
  do Print-Value($A.Descr,#L_02A,#C_02A,'Box 2A')
  do Print-Value($A.Address1,#L_02B,#C_02B,'Box 2B')
  if RTRIM($A.Address2, ' ') <> ''
    do Print-Value($A.Address2,#L_02C,#C_02C,'Box 2C')
    move 'N' to $LineShift
  else
    move 'Y' to $LineShift
  end-if
  if #Align_Count = 0
    if $A.Country = 'USA'
      move $A.Zip            to $A.ZipExtsn ~~~~~~xxxx
      if instr($A.Zip,'-',6) = 0
      and $A.ZipExtsn <> '    '
        let $A.Zip = substr($A.Zip,1,5) || '-' || substr($A.Zip,6,4)
      end-if
      let $02D = $A.City || ' ' || $A.State || ' ' || $A.Zip
      if length($02D) > #YE_State_City_Zip_Box_Size
          let #newlen = length($A.City) + #YE_State_City_Zip_Box_Size - length($02D)
          let $02D = substr($A.City,1,#newlen) || ' ' || $A.State || ' ' || $A.Zip
      end-if
    else
      let $02D = $A.City || ' ' || $A.State || ' ' ||
              $A.Country || ' ' || $A.Zip
      if length($02D) > #YE_State_City_Zip_Box_Size
          let #newlen = length($A.City) + #YE_State_City_Zip_Box_Size - length($02D)
          let $02D = substr($A.City,1,#newlen) || ' ' || $A.State || ' ' ||
                  $A.Country || ' ' || $A.Zip
      end-if
    end-if
  end-if
  if $LineShift = 'Y'
    let #PrintLine = #L_02C
  else
    let #PrintLine = #L_02D
  end-if
  do Print-Value($02D,#PrintLine,#C_02D,'Box 2D')

  if RTRIM($Telephone_Nbr, ' ') <> ''
     do Print-Value($Telephone_Nbr,#L_02E,#C_02E,'Box 2E')
  end-if
  if RTRIM($A.ClosingDate, ' ') <> ''
     do Print-Value($A.ClosingDate,#L_02F,#C_02F,'Box 2F')
  end-if

!smh
if RTRIM(&TX.FORM_ID, ' ') = 'W-2PRL'
  do Print-Value($Control_Num_End,#L_02G,#C_02G,'Box 2G')
else
  let $Space = '                           '
  do Print-Value($Space,#L_02G,#C_02G,'Box 2G')
end-if
!smh

end-procedure

begin-procedure Print-EE-Data

  add 1 to #T_Count
  do Print-Value($E.SSN,#L_03,#C_03,'Box 03')
  do Print-Value($FirstName,#L_01A,#C_01A,'Box 1A')
  do Print-Value($LastName,#L_01B,#C_01B,'Box 1B')
  do Print-Value($E.Address1,#L_01C,#C_01C,'Box 1C')
  if RTRIM($E.Address2, ' ') <> ''
    do Print-Value($E.Address2,#L_01D,#C_01D,'Box 1D')
    move 'N' to $LineShift
  else
    move 'Y' to $LineShift
  end-if
  if #Align_Count = 0
    if $E.Country = 'USA'
      move $E.Zip            to $E.ZipExtsn ~~~~~~xxxx
      if instr($E.Zip,'-',6) = 0
      and $E.ZipExtsn <> '    '
        let $E.Zip = substr($E.Zip,1,5) || '-' || substr($E.Zip,6,4)
      end-if
      let $01E = $E.City || ' ' || $E.State || ' ' || $E.Zip
      if length($01E) > #YE_State_City_Zip_Box_Size
          let #newlen = length($E.City) + #YE_EE_State_City_Zip - length($01E)
          let $01E = substr($E.City,1,#newlen) || ' ' || $E.State || ' ' ||
                  $E.Zip
      end-if
    else
      let $01E = $E.City || ' ' || $E.State || ' ' ||
                $E.Country || ' ' || $E.Zip
      if length($01E) > #YE_State_City_Zip_Box_Size
          let #newlen = length($E.City) + #YE_EE_State_City_Zip - length($01E)
          let $01E = substr($E.City,1,#newlen) || ' ' || $E.State || ' ' ||
                  $E.Country || ' ' || $E.Zip
      end-if
    end-if
  end-if
  if $LineShift = 'Y'
    let #PrintLine = #L_01D                ! ?????
  else
    let #PrintLine = #L_01E
  end-if
  do Print-Value($01E,#PrintLine,#C_01E,'Box 1E')


 if $AlignForms = 'Y'
   if &TX.BALANCE_YEAR < 2005
     do Print-Value($E.Spouse_SSN,#L_05,#C_05,'Box 05')
   end-if
   if &TX.BALANCE_YEAR < 2006
     do Print-Value('X',#L_04B,#C_04B,'Box 04B')
   end-if
   move 'N' to $AlignForms
 else
 if $E.Mar_Status = 'S'
   if &TX.BALANCE_YEAR < 2006
     do Print-Value('X',#L_04A,#C_04A,'Box 04A')
    end-if
 else
   if $E.Mar_Status = 'M'
     if &TX.BALANCE_YEAR < 2005
       do Print-Value($E.Spouse_SSN,#L_05,#C_05,'Box 05')
     end-if
     if &TX.BALANCE_YEAR < 2006
       do Print-Value('X',#L_04B,#C_04B,'Box 04B')
     end-if
   end-if
 end-if
end-if

end-procedure

begin-procedure Load-Amounts
begin-SELECT
C.W2_REPORTING_CO
D.STATE
D.BOX
#ifdef DB2ALL
DECIMAL(SUM(D.W2_AMOUNT),15,3) &D.W2_Amount
#else
SUM(D.W2_AMOUNT) &D.W2_Amount
#endif
  move &D.W2_Amount to #Amount

   let $D.Box = RTRIM(&D.Box,' ')

   do Evaluate-PR-Boxes

FROM  PS_YE_AMOUNTS D, PS_W2_COMPANY C
WHERE C.W2_REPORTING_CO = &A.W2_Reporting_Co
  AND C.COMPANY         = D.COMPANY
  AND C.CALENDAR_YEAR   = D.CALENDAR_YEAR
  AND D.EMPLID          = $E.Emplid
  AND D.CALENDAR_YEAR   = &TX.Balance_Year
  AND D.TAXFORM_ID      = $E.TaxForm_ID
  AND D.SEQUENCE_NUMBER = #E.Sequence_Number
GROUP BY C.W2_REPORTING_CO, D.STATE, D.BOX
ORDER BY C.W2_REPORTING_CO, D.STATE, D.BOX
end-SELECT
end-procedure

begin-procedure Print-Fed-State-Amounts

  if #T_Count > #Align_Count
    if #j = 1
      add  #Cost_Pension_Annuity to #Cost_Pension_Annuity_I
      add  #Wages to #Wages_I
      add  #Total_Comm_Allow_Tips to #Total_Comm_Allow_Tips_I
      add  #Commissions to #Commissions_I
      add  #Allowance to #Allowance_I
      add  #Tips to #Tips_I
      add  #Reimbursed_Expense to #Reimbursed_Expense_I
      add  #Tax_Withheld to #Tax_Withheld_I
      add  #Retire_Fund to #Retire_Fund_I
      add  #CODA_Plans to #CODA_Plans_I
      add  #Sal_Act_No_324 to #Sal_Act_No_324_I
      add  #SS_Wages to #SS_Wages_I
      add  #SS_Tax to #SS_Tax_I
      add  #Med_Wages to #Med_Wages_I
      add  #Med_Tax to #Med_Tax_I
      add  #SS_Tips to #SS_Tips_I
      add  #Uncoll_SS_Tax_On_Tips to #SS_Tax_Tips_I
      add  #Uncoll_Med_Tax_On_Tips to #Med_Tax_Tips_I

      add  #Cost_Pension_Annuity to #Cost_Pension_Annuity_T
      add  #Wages to #Wages_T
      add  #Total_Comm_Allow_Tips to #Total_Comm_Allow_Tips_T
      add  #Commissions to #Commissions_T
      add  #Allowance to #Allowance_T
      add  #Tips to #Tips_T
      add  #Reimbursed_Expense to #Reimbursed_Expense_T
      add  #Tax_Withheld to #Tax_Withheld_T
      add  #Retire_Fund to #Retire_Fund_T
      add  #CODA_Plans to #CODA_Plans_T
      add  #Sal_Act_No_324 to #Sal_Act_No_324_T
      add  #SS_Wages to #SS_Wages_T
      add  #SS_Tax to #SS_Tax_T
      add  #Med_Wages to #Med_Wages_T
      add  #Med_Tax to #Med_Tax_T
      add  #SS_Tips to #SS_Tips_T
      add  #Uncoll_SS_Tax_On_Tips to #SS_Tax_Tips_T
      add  #Uncoll_Med_Tax_On_Tips to #Med_Tax_Tips_T
    end-if
  end-if

  if &TX.BALANCE_YEAR > 2004
    do Format-2005-Prt

  else
    do Format-Prior-2005-Prt
  end-if

  if &TX.BALANCE_YEAR > 2002
     do Format-Current-Fields

  else
     do Format-Prior-Fields
  end-if
end-procedure

begin-procedure  Format-2005-Prt

  do Format-Number(#Cost_Pension_Annuity, $out, $F06)   !Pension/Annuity
  do Print-Value($out,#L_06,#C_06,'Box 06')

  do Format-Number(#Wages, $out, $F07)                  !PR Wages
  do Print-Value($out,#L_07,#C_07,'Box 07')

  do Format-Number(#Commissions, $out, $F08)            !Commissions
  do Print-Value($out,#L_08,#C_08,'Box 08')

  do Format-Number(#Allowance, $out, $F09)              !Allowances
  do Print-Value($out,#L_09,#C_09,'Box 09')

  do Format-Number(#Tips, $out, $F10)                   !Tips
  do Print-Value($out,#L_10,#C_10,'Box 10')

  do Format-Number(#Total_Comm_Allow_Tips, $out, $F11)  !Total wages/comm/
  do Print-Value($out,#L_11,#C_11,'Box 11')             ! allowances/tips

  do Format-Number(#Reimbursed_Expense, $out, $F12)     !Reimbursed exp
  do Print-Value($out,#L_12,#C_12,'Box 12')

  do Format-Number(#Tax_Withheld, $out, $F13)           !PR tax w/h
  do Print-Value($out,#L_13,#C_13,'Box 13')

  do Format-Number(#Retire_Fund, $out, $F14)            !Retirement fund
  do Print-Value($out,#L_14,#C_14,'Box 14')

  do Format-Number(#CODA_Plans, $out, $F15)             !CODA contrib
  do Print-Value($out,#L_15,#C_15,'Box 15')

  do Format-Number(#Sal_Act_No_324, $out, $F16)         !Sal_Act_No_324
  do Print-Value($out,#L_16,#C_16,'Box 16')

end-procedure

begin-procedure Format-Prior-2005-Prt

  do Format-Number(#Cost_Pension_Annuity, $out, $F07)   !Pension/Annuity
  do Print-Value($out,#L_07,#C_07,'Box 07')

  do Format-Number(#Wages, $out, $F08)                  !PR Wages
  do Print-Value($out,#L_08,#C_08,'Box 08')

  do Format-Number(#Commissions, $out, $F09)            !Commissions
  do Print-Value($out,#L_09,#C_09,'Box 09')

  do Format-Number(#Allowance, $out, $F10)              !Allowances
  do Print-Value($out,#L_10,#C_10,'Box 10')

  do Format-Number(#Tips, $out, $F11)                   !Tips
  do Print-Value($out,#L_11,#C_11,'Box 11')

  do Format-Number(#Total_Comm_Allow_Tips, $out, $F12)  !Total wages/comm/
  do Print-Value($out,#L_12,#C_12,'Box 12')             ! allowances/tips

  do Format-Number(#Reimbursed_Expense, $out, $F13)     !Reimbursed exp
  do Print-Value($out,#L_13,#C_13,'Box 13')

  do Format-Number(#Tax_Withheld, $out, $F14)           !PR tax w/h
  do Print-Value($out,#L_14,#C_14,'Box 14')

  do Format-Number(#Retire_Fund, $out, $F15)            !Retirement fund
  do Print-Value($out,#L_15,#C_15,'Box 15')

  do Format-Number(#CODA_Plans, $out, $F16)             !CODA contrib
  do Print-Value($out,#L_16,#C_16,'Box 16')
end-procedure

begin-procedure Format-Current-Fields

  do Format-Number(#SS_Wages, $out, $F17)              !SS wages
  do Print-Value($out,#L_17,#C_17,'Box 17')

  do Format-Number(#SS_Tax, $out, $F18)              !SS taxes
  do Print-Value($out,#L_18,#C_18,'Box 18')

  do Format-Number(#Med_Wages, $out, $F19)              !Med wages
  do Print-Value($out,#L_19,#C_19,'Box 19')

  do Format-Number(#Med_Tax, $out, $F20)              !Med wages
  do Print-Value($out,#L_20,#C_20,'Box 20')

  do Format-Number(#SS_Tips, $out, $F21)              !Med wages
  do Print-Value($out,#L_21,#C_21,'Box 21')

  do Format-Number(#Uncoll_SS_Tax_On_Tips, $out, $F22)   !Uncoll SS Taxes on TIPS
  do Print-Value($out,#L_22,#C_22,'Box 22')

  do Format-Number(#Uncoll_Med_Tax_On_Tips, $out, $F23)  !Uncoll MED Taxes on TIPS
  do Print-Value($out,#L_23,#C_23,'Box 23')

end-procedure

begin-procedure Format-Prior-Fields

  do Format-Number(#SS_Wages, $out, $F18)              !SS wages
  do Print-Value($out,#L_18,#C_18,'Box 18')

  do Format-Number(#SS_Tax, $out, $F19)              !SS taxes
  do Print-Value($out,#L_19,#C_19,'Box 19')

  do Format-Number(#Med_Wages, $out, $F20)              !Med wages
  do Print-Value($out,#L_20,#C_20,'Box 20')

  do Format-Number(#Med_Tax, $out, $F21)              !Med wages
  do Print-Value($out,#L_21,#C_21,'Box 21')

  do Format-Number(#SS_Tips, $out, $F22)              !Med wages
  do Print-Value($out,#L_22,#C_22,'Box 22')

  do Format-Number(#Uncoll_SS_Tax_On_Tips, $out, $F23)              !Med wages
  do Print-Value($out,#L_23,#C_23,'Box 23')

  do Format-Number(#Uncoll_Med_Tax_On_Tips, $out, $F24)              !Med wages
  do Print-Value($out,#L_24,#C_24,'Box 24')

  do Format-Number(#SubTotals, $out, $F17)
  do Print-Value(' ',#L_17,#C_17,'Box 17')                 !Subtotal checkbox
end-procedure

begin-procedure Print-Intermediate-Total
  add 1 to #Intermediate_Total_Cnt
  move 1 to #j
  add 1 to #Control_Num_End
  while #j <= #FormsPerPage/#EmployeesPerPage  !loop for individual ee's
    do Next-Form
    add 1 to #T_Count
    do Print-ER-Data

    if &TX.BALANCE_YEAR > 2004
      do Format-2005-Prt-Int

    else
      do Format-Prior-2005-Prt-Int
    end-if

    add 1 to #j

  end-while

  move 0 to #Cost_Pension_Annuity_I
  move 0 to #Wages_I
  move 0 to #Commissions_I
  move 0 to #Allowance_I
  move 0 to #Tips_I
  move 0 to #Total_Comm_Allow_Tips_I
  move 0 to #Reimbursed_Expense_I
  move 0 to #Tax_Withheld_I
  move 0 to #Retire_Fund_I
  move 0 to #CODA_Plans_I
  move 0 to #Sal_Act_No_324_I
  move 0 to #SS_Wages_I
  move 0 to #SS_Tax_I
  move 0 to #Med_Wages_I
  move 0 to #Med_Tax_I
  move 0 to #SS_Tips_I
  move 0 to #SS_Tax_Tips_I
  move 0 to #Med_Tax_Tips_I
  move 0 to #I_Count
end-procedure

begin-procedure Format-2005-Prt-Int

    do Format-Number(#Cost_Pension_Annuity_I, $out, $F06)   !Pension
    do Print-Value($out,#L_06,#C_06,'Box 06')

    do Format-Number(#Wages_I, $out, $F07)                  !PR wages
    do Print-Value($out,#L_07,#C_07,'Box 07')

    do Format-Number(#Commissions_I, $out, $F08)            !Commissions
    do Print-Value($out,#L_08,#C_08,'Box 08')

    do Format-Number(#Allowance_I, $out, $F9)               !Allowances
    do Print-Value($out,#L_9,#C_9,'Box 09')

    do Format-Number(#Tips_I, $out, $F10)                   !Tips
    do Print-Value($out,#L_10,#C_10,'Box 10')

    do Format-Number(#Total_Comm_Allow_Tips_I, $out, $F11)  !Total wages/comm/
    do Print-Value($out,#L_11,#C_11,'Box 11')               !allow/tips

    do Format-Number(#Reimbursed_Expense_I, $out, $F12)     !Reimbursed exp
    do Print-Value($out,#L_12,#C_12,'Box 12')

    do Format-Number(#Tax_Withheld_I, $out, $F13)           !PR tax w/h
    do Print-Value($out,#L_13,#C_13,'Box 13')

    do Format-Number(#Retire_Fund_I, $out, $F14)            !Retirement
    do Print-Value($out,#L_14,#C_14,'Box 14')

    do Format-Number(#CODA_Plans_I, $out, $F15)             !CODA
    do Print-Value($out,#L_15,#C_15,'Box 15')

    do Format-Number(#Sal_Act_No_324_I, $out, $F16)         !Salary Act No. 324 wages
    do Print-Value($out,#L_15,#C_15,'Box 15')

    do Format-Number(#SS_Wages_I, $out, $F17)               !
    do Print-Value($out,#L_17,#C_17,'Box 17')

    do Format-Number(#SS_Tax_I, $out, $F18)                 !
    do Print-Value($out,#L_18,#C_18,'Box 18')

    do Format-Number(#Med_Wages_I, $out, $F19)              !
    do Print-Value($out,#L_19,#C_19,'Box 19')

    do Format-Number(#Med_Tax_I, $out, $F20)                !
    do Print-Value($out,#L_20,#C_20,'Box 20')

    do Format-Number(#SS_Tips_I, $out, $F21)                !
    do Print-Value($out,#L_21,#C_21,'Box 21')

    do Format-Number(#SS_Tax_Tips_I, $out, $F22)            !
    do Print-Value($out,#L_22,#C_22,'Box 22')

    do Format-Number(#Med_Tax_Tips_I, $out, $F23)           !
    do Print-Value($out,#L_23,#C_23,'Box 23')

!    do Format-Number(#SubTotals, $out, $F17)
!    do Print-Value('X',#L_17,#C_17,'Box 17')  !Subtotal checkbox

end-procedure

begin-procedure Format-Prior-2005-Prt-Int


    do Format-Number(#Cost_Pension_Annuity_I, $out, $F07)  !Pension
    do Print-Value($out,#L_07,#C_07,'Box 07')

    do Format-Number(#Wages_I, $out, $F08)                 !PR wages
    do Print-Value($out,#L_08,#C_08,'Box 08')

    do Format-Number(#Commissions_I, $out, $F09)           !Commissions
    do Print-Value($out,#L_09,#C_09,'Box 09')

    do Format-Number(#Allowance_I, $out, $F10)             !Allowances
    do Print-Value($out,#L_10,#C_10,'Box 10')

    do Format-Number(#Tips_I, $out, $F11)                  !Tips
    do Print-Value($out,#L_11,#C_11,'Box 11')

    do Format-Number(#Total_Comm_Allow_Tips_I, $out, $F12) !Total wages/comm/
    do Print-Value($out,#L_12,#C_12,'Box 12')              !allow/tips

    do Format-Number(#Reimbursed_Expense_I, $out, $F13)    !Reimbursed exp
    do Print-Value($out,#L_13,#C_13,'Box 13')

    do Format-Number(#Tax_Withheld_I, $out, $F14)          !PR tax w/h
    do Print-Value($out,#L_14,#C_14,'Box 14')

    do Format-Number(#Retire_Fund_I, $out, $F15)           !Retirement
    do Print-Value($out,#L_15,#C_15,'Box 15')

    do Format-Number(#CODA_Plans_I, $out, $F16)            !CODA
    do Print-Value($out,#L_16,#C_16,'Box 16')

    do Format-Number(#SS_Wages_I, $out, $F18)              !
    do Print-Value($out,#L_18,#C_18,'Box 18')

    do Format-Number(#SS_Tax_I, $out, $F19)                !
    do Print-Value($out,#L_19,#C_19,'Box 19')

    do Format-Number(#Med_Wages_I, $out, $F20)             !
    do Print-Value($out,#L_20,#C_20,'Box 20')

    do Format-Number(#Med_Tax_I, $out, $F21)               !
    do Print-Value($out,#L_21,#C_21,'Box 21')

    do Format-Number(#SS_Tips_I, $out, $F22)               !
    do Print-Value($out,#L_22,#C_22,'Box 22')

    do Format-Number(#SS_Tax_Tips_I, $out, $F23)           !
    do Print-Value($out,#L_23,#C_23,'Box 23')

    do Format-Number(#Med_Tax_Tips_I, $out, $F24)          !
    do Print-Value($out,#L_24,#C_24,'Box 24')

    do Format-Number(#SubTotals, $out, $F17)
    do Print-Value('X',#L_17,#C_17,'Box 17')  !Subtotal checkbox

end-procedure

begin-procedure Print-Grand-Totals

  if #Cost_Pension_Annuity_T > 0
    do Format-Number(#Cost_Pension_Annuity_T, $out,'999,999,999,999.99')          !Pension/annuity
    display 'Pension/annuity             ' noline
    display $out
  end-if

  if #Wages_T > 0
    do Format-Number(#Wages_T, $out,'999,999,999,999.99')          !PR Wages
    display 'PR Wages                    ' noline
    display $out
  end-if

  if #Commissions_T > 0
    do Format-Number(#Commissions_T, $out,'999,999,999,999.99')          !Commissions
    display 'Commissions                 ' noline
    display $out
  end-if

  if #Allowance_T > 0
    do Format-Number(#Allowance_T, $out,'999,999,999,999.99')          !Allowances
    display 'Allowances                  ' noline
    display $out
  end-if

  if #Tips_T > 0
    do Format-Number(#Tips_T, $out,'999,999,999,999.99')          !Tips
    display 'Tips                        ' noline
    display $out
  end-if

  if #Total_Comm_Allow_Tips_T > 0
    do Format-Number(#Total_Comm_Allow_Tips_T, $out,'999,999,999,999.99')          !Total wages/comm/
    display 'Total wages/comm/allow/tip  ' noline         ! allowances/tips
    display $out
  end-if

  if #Reimbursed_Expense_T > 0
    do Format-Number(#Reimbursed_Expense_T, $out,'999,999,999,999.99')          !Reimbursed expenses
    display 'Reimbursed expenses         ' noline
    display $out
  end-if

  if #Tax_Withheld_T > 0
    do Format-Number(#Tax_Withheld_T, $out,'999,999,999,999.99')          !PR tax withheld
    display 'PR tax withheld             ' noline
    display $out
  end-if

  if #Retire_Fund_T > 0
    do Format-Number(#Retire_Fund_T, $out,'999,999,999,999.99')          !Retirement fund
    display 'Retirement fund             ' noline
    display $out
  end-if

  if #CODA_Plans_T > 0
    do Format-Number(#CODA_Plans_T, $out,'999,999,999,999.99')          !CODA contributions
    display 'CODA contributions          ' noline
    display $out
  end-if

  if #Sal_Act_No_324_T > 0
    do Format-Number(#Sal_Act_No_324_T, $out,'999,999,999,999.99')      !Sal Act No. 324 Contrib
    display 'Salary Act No. 324 Wages    ' noline
    display $out
  end-if

  if #SS_Wages_T > 0
    do Format-Number(#SS_Wages_T, $out,'999,999,999,999.99')          !Soc sec wages
    display 'Soc sec wages               ' noline
    display $out
  end-if

  if #SS_Tax_T > 0
    do Format-Number(#SS_Tax_T, $out,'999,999,999,999.99')          !Soc sec tax withheld
    display 'Soc sec tax withheld        ' noline
    display $out
  end-if

  if #Med_Wages_T > 0
    do Format-Number(#Med_Wages_T, $out,'999,999,999,999.99')          !Medicare wages and tips
    display 'Medicare wages and tips     ' noline
    display $out
  end-if

  if #Med_Tax_T > 0
    do Format-Number(#Med_Tax_T, $out,'999,999,999,999.99')          !Medicare tax withheld
    display 'Medicare tax withheld       ' noline
    display $out
  end-if

  if #SS_Tips_T > 0
    do Format-Number(#SS_Tips_T, $out,'999,999,999,999.99')          !Soc sec tips
    display 'Soc sec tips                ' noline
    display $out
  end-if

  if #SS_Tax_Tips_T > 0
    do Format-Number(#SS_Tax_Tips_T, $out,'999,999,999,999.99')          !Uncollected soc sec
    display 'Uncoll soc sec tax on tips  ' noline         ! tax on tips
    display $out
  end-if

  if #Med_Tax_Tips_T > 0
    do Format-Number(#Med_Tax_Tips_T, $out,'999,999,999,999.99')          !Uncollected Medicare
    display 'Uncoll Medicare tax on tip  ' noline         ! tax on tips
    display $out
  end-if

  do Format-Number(#T_Count, $out,'999,999,999')
  display 'Total forms including alignment and subtotals'  noline
  display $out

end-procedure

begin-procedure Next-Form
  evaluate $Layout_Style
    when = '4CORNER'
      do Next-Form-FourCorner
      break
    when = '4VERTICAL'
      do Next-Form-FourVertical
      break
    when = '2VERTICAL'
      do Next-Form-TwoVertical
      break
  end-evaluate
end-procedure

begin-procedure Next-Form-FourCorner
  if #Form# <> 4
    add  1 to #Form#
  else
    move 1 to #Form#
  end-if

  evaluate #Form#
    when = 1
      new-page
      do Print-Value(' ',#Top_Margin,1,'Top Margin')
      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      break
    when = 2
      next-column
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      break
    when = 3
      next-listing
      do Print-Value(' ',#Center_Split,1,'Center Split')
      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      break
    when = 4
      next-column
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
  end-evaluate
end-procedure

begin-procedure Next-Form-FourVertical
  if #Form# <> 4
    add 1 to #Form#
  else
    move 1 to #form#
  end-if

  evaluate #Form#                 !use to position for next forms
    when = 1
      new-page
      do Print-Value(' ',#Top_Margin,1,'Top Margin')
      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      break
    when = 2
      next-listing
      do Print-Value(' ',#Top_Split,1,'Top Split')
      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      break
    when = 3
      next-listing
      do Print-Value(' ',#Center_Split,1,'Center Split')
      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      break
    when = 4
      next-listing
      do Print-Value(' ',#Bottom_Split,1,'Bottom Split')
      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
  end-evaluate
end-procedure

begin-procedure Next-Form-TwoVertical
  if #Form# <> 2
    add 1 to #Form#
  else
    move 1 to #form#
  end-if

  evaluate #Form#                 !use to position for next forms
    when = 1
      new-page
      next-column
      do Print-Value(' ',#Top_Margin,1,'Top Margin')
      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      break
    when = 2
      next-listing
      do Print-Value(' ',#Center_Split,1,'Center Split')
      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
  end-evaluate
end-procedure

begin-procedure Load-W2-PRT

begin-SELECT
F.LAYOUT_STYLE
F.TOP_MARGIN
F.TOP_SPLIT
F.CENTER_SPLIT
F.BOTTOM_SPLIT
F.LAST_PRINT_LINE
F.LOCALS_PER_FORM
F.TAXFORM_ID

  let $Layout_Style = RTRIM(&F.Layout_Style,' ')

  move &F.Top_Margin       to #Top_Margin
  move &F.Top_Split        to #Top_Split
  move &F.Center_Split     to #Center_Split
  move &F.Bottom_Split     to #Bottom_Split
  move &F.Last_Print_Line  to #Last_Print_Line
  move &F.Locals_Per_Form  to #Locals_Per_Form
  move &F.Taxform_Id       to $Taxform_Id

! encode '<27>E<27>(0N<27>&l6D<27>&l0E<27>&l66F' into $SetupString
! print $SetupString (1,1)
!            |    |       |       |       |
!            |    |       |       |        --> 66 text lines
!            |    |       |        --> top margin = 0 lines
!            |    |        --> 6 lines per inch
!            |     --> ISO 8859-1 symbol set
!             --> Reset

FROM  PS_TAXFORM_FORM F
WHERE F.FORM_ID = &TX.Form_ID
AND F.TAXFORM_ID = 'P'
  AND F.EFFDT   =
      (SELECT MAX(EFFDT)
       FROM   PS_TAXFORM_TBL
       WHERE  TAXFORM_ID = F.TAXFORM_ID
         AND  EFFDT  <= $AsOfDate)
end-SELECT

!smh
  do assign-year-end-variables
!smh

begin-SELECT
P.BOX
P.PRINT_LINE
P.PRINT_COL
P.PRINT_FORMAT
P.PRINT_TEXT

  let $P.Box = RTRIM(&P.Box,' ')
  evaluate $P.Box
    when = $YE_EE_FName                               !First name
      move &P.Print_Line   to #L_01A
      move &P.Print_Col    to #C_01A
      let $F1A = RTRIM(&P.Print_Format,' ')
      let #YE_EE_FName_Box_Size = TO_NUMBER(SUBSTR($F1A,3,INSTR($F1A,')',1)-2))
      break
    when = $YE_EE_LName                               !Surname
      move &P.Print_Line   to #L_01B
      move &P.Print_Col    to #C_01B
      let $F1B = RTRIM(&P.Print_Format,' ')
      let #YE_EE_LName_Box_Size = TO_NUMBER(SUBSTR($F1B,3,INSTR($F1B,')',1)-2))
      break
    when = $YE_EE_Address1                            !Employee address
      move &P.Print_Line   to #L_01C
      move &P.Print_Col    to #C_01C
      let $F1C = RTRIM(&P.Print_Format,' ')
      let #YE_EE_Address1_Box_Size = TO_NUMBER(SUBSTR($F1C,3,INSTR($F1C,')',1)-2))
      break
    when = $YE_EE_Address2                            !Employee address
      move &P.Print_Line   to #L_01D                  !
      move &P.Print_Col    to #C_01D
      let $F1D = RTRIM(&P.Print_Format,' ')
      let #YE_EE_Address2_Box_Size = TO_NUMBER(SUBSTR($F1D,3,INSTR($F1D,')',1)-2))
      break
    when = $YE_State_City_Zip                         !Employee address
      move &P.Print_Line   to #L_01E
      move &P.Print_Col    to #C_01E
      let $F1E = RTRIM(&P.Print_Format,' ')
      let #YE_EE_State_City_Zip = TO_NUMBER(SUBSTR($F1E,3,INSTR($F1E,')',1)-2))
      break
    when = $YE_ER_Name                                !Employer name
      move &P.Print_Line   to #L_02A
      move &P.Print_Col    to #C_02A
      let $F2A = RTRIM(&P.Print_Format,' ')
      let #YE_ER_Name_Box_Size = TO_NUMBER(SUBSTR($F2A,3,INSTR($F2A,')',1)-2))
      break
    when = $YE_ER_Address1                            !Employer
      move &P.Print_Line   to #L_02B                  ! address 1
      move &P.Print_Col    to #C_02B
      let $F2B = RTRIM(&P.Print_Format,' ')
      let #YE_ER_Address1_Box_Size = TO_NUMBER(SUBSTR($F2B,3,INSTR($F2B,')',1)-2))
      break
    when = $YE_ER_Address2                            !Employer
      move &P.Print_Line   to #L_02C                  ! address 2
      move &P.Print_Col    to #C_02C
      let $F2C = RTRIM(&P.Print_Format,' ')
      let #YE_ER_Address2_Box_Size = TO_NUMBER(SUBSTR($F2C,3,INSTR($F2C,')',1)-2))
      break
    when = $YE_ER_State_City_Zip                      !Employer
      move &P.Print_Line   to #L_02D                  ! address 3
      move &P.Print_Col    to #C_02D
      let $F2D = RTRIM(&P.Print_Format,' ')
      let #YE_State_City_Zip_Box_Size = TO_NUMBER(SUBSTR($F2D,3,INSTR($F2D,')',1)-2))
      break
    when = $YE_ER_Phone                               !Employer
      move &P.Print_Line   to #L_02E                  !phone nbr
      move &P.Print_Col    to #C_02E
      let $F2E = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_ER_Closing                             !Employer
      move &P.Print_Line   to #L_02F                  !Closing Date
      move &P.Print_Col    to #C_02F
      let $F2F = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_ER_Control_Number                      !Control Number
      move &P.Print_Line   to #L_02G
      move &P.Print_Col    to #C_02G
      let $F2G = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_EE_SSN                                 !SSN
      move &P.Print_Line   to #L_03
      move &P.Print_Col    to #C_03
      let $F03 = RTRIM(&P.Print_Format,' ')
      let #YE_EE_SSN_Box_Size = TO_NUMBER(SUBSTR($F03,3,INSTR($F03,')',1)-2))
      break
    when = $YE_Civil_Status_Single                    !Single
      move &P.Print_Line   to #L_04A
      move &P.Print_Col    to #C_04A
      let $F4A = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Civil_Status_Married                   !Married
      move &P.Print_Line   to #L_04B
      move &P.Print_Col    to #C_04B
      let $F4B = RTRIM(&P.Print_Format,' ')
      break

  end-evaluate

  if &TX.BALANCE_YEAR > 2004

        do Est-2005-Print
  else
     do Est-Prior-2004-Print
  end-if

  if &TX.BALANCE_YEAR < 2003

     do Est-Prior-2003-Print
  else
     do Est-2003-Print
  end-if

FROM  PS_TAXFORM_PRT P
WHERE P.FORM_ID = &TX.Form_ID
AND P.TAXFORM_ID = 'P'
  AND P.EFFDT   =
      (SELECT MAX(EFFDT)
       FROM   PS_TAXFORM_TBL
       WHERE  TAXFORM_ID = P.TAXFORM_ID
         AND  EFFDT  <= $AsOfDate)
ORDER BY P.BOX
end-SELECT

end-procedure

begin-procedure Est-2005-Print

  evaluate $P.Box

    when = $YE_ER_ID                                  !EIN
      move &P.Print_Line   to #L_05
      move &P.Print_Col    to #C_05
      let $F05 = RTRIM(&P.Print_Format,' ')
      let #YE_ER_ID_Box_Size = TO_NUMBER(SUBSTR($F05,3,INSTR($F05,')',1)-2))
      break
    when = $YE_Cost_Pension_Annuity                   !Pension
      move &P.Print_Line   to #L_06
      move &P.Print_Col    to #C_06
      let $F06 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Wages                                  !PR wages
      move &P.Print_Line   to #L_07
      move &P.Print_Col    to #C_07
      let $F07 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Commissions                            !Commissions
      move &P.Print_Line   to #L_08
      move &P.Print_Col    to #C_08
      let $F08 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Allowance                              !Allowances
      move &P.Print_Line   to #L_09
      move &P.Print_Col    to #C_09
      let $F09 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Tips                                   !Tips
      move &P.Print_Line   to #L_10
      move &P.Print_Col    to #C_10
      let $F10 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Total8-11                              !Total wages/comm/
      move &P.Print_Line   to #L_11                   !allow/tips
      move &P.Print_Col    to #C_11
      let $F11 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Reimbursed_Expense                     !Reimbursed exp
      move &P.Print_Line   to #L_12
      move &P.Print_Col    to #C_12
      let $F12 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Tax_Withheld                           !PR taxes
      move &P.Print_Line   to #L_13
      move &P.Print_Col    to #C_13
      let $F13 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Retire_Fund                            !Retirement fund
      move &P.Print_Line   to #L_14
      move &P.Print_Col    to #C_14
      let $F14 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_CODA_Plans                             !CODA contributions
      move &P.Print_Line   to #L_15
      move &P.Print_Col    to #C_15
      let $F15 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Sal_Act_No_324                         !Salary Act No. 324 Wages
      move &P.Print_Line   to #L_16
      move &P.Print_Col    to #C_16
      let $F16 = RTRIM(&P.Print_Format,' ')
      break
  end-evaluate
end-procedure

begin-procedure Est-Prior-2004-Print

    evaluate $P.Box
    when = $YE_Spouse_SSN                             !Spouse SSN
      move &P.Print_Line   to #L_05
      move &P.Print_Col    to #C_05
      let $F05 = RTRIM(&P.Print_Format,' ')
      let #YE_Spouse_SSN_Box_Size = TO_NUMBER(SUBSTR($F05,3,INSTR($F05,')',1)-2))
      break
    when = $YE_ER_ID                                  !EIN
      move &P.Print_Line   to #L_06
      move &P.Print_Col    to #C_06
      let $F06 = RTRIM(&P.Print_Format,' ')
      let #YE_ER_ID_Box_Size = TO_NUMBER(SUBSTR($F06,3,INSTR($F06,')',1)-2))
      break
    when = $YE_Cost_Pension_Annuity                   !Pension
      move &P.Print_Line   to #L_07
      move &P.Print_Col    to #C_07
      let $F07 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Wages                                  !PR wages
      move &P.Print_Line   to #L_08
      move &P.Print_Col    to #C_08
      let $F08 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Commissions                            !Commissions
      move &P.Print_Line   to #L_09
      move &P.Print_Col    to #C_09
      let $F09 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Allowance                              !Allowances
      move &P.Print_Line   to #L_10
      move &P.Print_Col    to #C_10
      let $F10 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Tips                                   !Tips
      move &P.Print_Line   to #L_11
      move &P.Print_Col    to #C_11
      let $F11 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Total8-11                              !Total wages/comm/
      move &P.Print_Line   to #L_12                   !allow/tips
      move &P.Print_Col    to #C_12
      let $F12 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Reimbursed_Expense                     !Reimbursed exp
      move &P.Print_Line   to #L_13
      move &P.Print_Col    to #C_13
      let $F13 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Tax_Withheld                           !PR taxes
      move &P.Print_Line   to #L_14
      move &P.Print_Col    to #C_14
      let $F14 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Retire_Fund                            !Retirement fund
      move &P.Print_Line   to #L_15
      move &P.Print_Col    to #C_15
      let $F15 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_CODA_Plans                             !CODA contributions
      move &P.Print_Line   to #L_16
      move &P.Print_Col    to #C_16
      let $F16 = RTRIM(&P.Print_Format,' ')
      break
   end-evaluate
end-procedure

begin-procedure Est-Prior-2003-Print
  evaluate $P.Box
    when = $YE_SubTotals                              !Subtotals
      move &P.Print_Line   to #L_17
      move &P.Print_Col    to #C_17
      let $F17 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_SS_Wages                               !SS wages
      move &P.Print_Line   to #L_18
      move &P.Print_Col    to #C_18
      let $F18 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_SS_Tax                                 !SS taxes
      move &P.Print_Line   to #L_19
      move &P.Print_Col    to #C_19
      let $F19 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Med_Wages                              !Medicare wages
      move &P.Print_Line   to #L_20
      move &P.Print_Col    to #C_20
      let $F20 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Med_Tax                                !Medicare taxes
      move &P.Print_Line   to #L_21
      move &P.Print_Col    to #C_21
      let $F21 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_SS_Tips                                !SS tips
      move &P.Print_Line   to #L_22
      move &P.Print_Col    to #C_22
      let $F22 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_SS_Tax_Tips                            !Uncollected
      move &P.Print_Line   to #L_23                   ! SS tax on tips
      move &P.Print_Col    to #C_23
      let $F23 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Med_Tax_Tips                           !Uncollected
      move &P.Print_Line   to #L_24                   ! Med tax on tips
      move &P.Print_Col    to #C_24
      let $F24 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Year
      move &P.Print_Line   to #L_Y
      move &P.Print_Col    to #C_Y
      break
  end-evaluate
end-procedure

begin-procedure Est-2003-Print
  evaluate $P.Box
    when = $YE_SS_Wages                               !SS wages
      move &P.Print_Line   to #L_17
      move &P.Print_Col    to #C_17
      let $F17 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_SS_Tax                                 !SS taxes
      move &P.Print_Line   to #L_18
      move &P.Print_Col    to #C_18
      let $F18 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Med_Wages                              !Medicare wages
      move &P.Print_Line   to #L_19
      move &P.Print_Col    to #C_19
      let $F19 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Med_Tax                                !Medicare taxes
      move &P.Print_Line   to #L_20
      move &P.Print_Col    to #C_20
      let $F20 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_SS_Tips                                !SS tips
      move &P.Print_Line   to #L_21
      move &P.Print_Col    to #C_21
      let $F21 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_SS_Tax_Tips                            !Uncollected
      move &P.Print_Line   to #L_22                   ! SS tax on tips
      move &P.Print_Col    to #C_22
      let $F22 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Med_Tax_Tips                           !Uncollected
      move &P.Print_Line   to #L_23                   ! Med tax on tips
      move &P.Print_Col    to #C_23
      let $F23 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Year
      move &P.Print_Line   to #L_Y
      move &P.Print_Col    to #C_Y
      break
  end-evaluate
end-procedure

begin-procedure Prompts

  while $LinesPerInch = ''
    display ''
    display 'Print 6 or 8 lines per inch?'
    input $LinesPerInch 'Enter 6 or 8'
    if INSTR('68',$LinesPerInch,1) = 0
      display 'Enter 6 or 8'
      move '' to $LinesPerInch
    end-if
  end-while

  do Prompt-for-Sort

  while $SelectEEs = ''
    display ''
    display 'Regular processing or Select employees?'
    input $SelectEEs 'Enter R or S'
    uppercase $SelectEEs
    if INSTR('RS',$SelectEEs,1) = 0
      display 'Enter R or S'
      move '' to $SelectEEs
    end-if
  end-while

  if $SelectEEs = 'S'
    display 'Enter EmplID or hit ENTER to stop selecting'
    move 'AND E.EmplID in (''' to $E.SelectedEEs
    move 'AND S.EmplID in (''' to $S.SelectedEEs
    move 'AND J.EmplID in (''' to $J.SelectedEEs
    move ' ' to $SelectedEmplID
    while $SelectedEmplID <> ''
      input $SelectedEmplID ' '
      uppercase $SelectedEmplID
      if $SelectedEmplID <> ''
        let $E.SelectedEEs = $E.SelectedEEs || $SelectedEmplID || ''','''
        let $S.SelectedEEs = $S.SelectedEEs || $SelectedEmplID || ''','''
        let $J.SelectedEEs = $J.SelectedEEs || $SelectedEmplID || ''','''
        move 'Y' to $EE_Selected
      end-if
    end-while

    if $EE_Selected <> 'Y'
      display ''
      display 'No employees selected. Program stopped.'
      display ''
      stop
    end-if

    let $E.SelectedEEs = SUBSTR($E.SelectedEEs,1,LENGTH($E.SelectedEEs) - 2)
    let $E.SelectedEEs = $E.SelectedEEs || ')'

    let $S.SelectedEEs = SUBSTR($S.SelectedEEs,1,LENGTH($S.SelectedEEs) - 2)
    let $S.SelectedEEs = $S.SelectedEEs || ')'

    let $J.SelectedEEs = SUBSTR($J.SelectedEEs,1,LENGTH($J.SelectedEEs) - 2)
    let $J.SelectedEEs = $J.SelectedEEs || ')'
  else
    move '' to $E.SelectedEEs
    move '' to $S.SelectedEEs
    move '' to $J.SelectedEEs
  end-if
end-procedure

begin-procedure Load-Test-Data


  let $FirstName =
         LPAD($x,TO_NUMBER(SUBSTR($F1A,3,INSTR($F1A,')',1)-2)),'X')

  let $LastName =
         LPAD($x,TO_NUMBER(SUBSTR($F1B,3,INSTR($F1B,')',1)-2)),'X')

  let $E.Address1 =
         LPAD($x,TO_NUMBER(SUBSTR($F1C,3,INSTR($F1C,')',1)-2)),'X')

  let $E.Address2 =
         LPAD($x,TO_NUMBER(SUBSTR($F1D,3,INSTR($F1D,')',1)-2)),'X')

  let $01E=
         LPAD($x,TO_NUMBER(SUBSTR($F1E,3,INSTR($F1E,')',1)-2)),'X')

  let $A.Descr =
         LPAD($x,TO_NUMBER(SUBSTR($F2A,3,INSTR($F2A,')',1)-2)),'X')

  let $A.Address1 =
         LPAD($x,TO_NUMBER(SUBSTR($F2B,3,INSTR($F2B,')',1)-2)),'X')

  let $A.Address2 =
         LPAD($x,TO_NUMBER(SUBSTR($F2C,3,INSTR($F2C,')',1)-2)),'X')

  let $02D =
         LPAD($x,TO_NUMBER(SUBSTR($F2D,3,INSTR($F2D,')',1)-2)),'X')

  let $Telephone_Nbr =
         LPAD($x,TO_NUMBER(SUBSTR($F2E,3,INSTR($F2E,')',1)-2)),'X')

  let $A.ClosingDate =
         LPAD($x,TO_NUMBER(SUBSTR($F2F,3,INSTR($F2F,')',1)-2)),'X')

  let $E.SSN =
         LPAD($x,TO_NUMBER(SUBSTR($F03,3,INSTR($F03,')',1)-2)),'X')

  let $E.Spouse_SSN =
         LPAD($x,TO_NUMBER(SUBSTR($F05,3,INSTR($F05,')',1)-2)),'X')


  let $A.Federal_EIN =
         LPAD($x,TO_NUMBER(SUBSTR($F06,3,INSTR($F06,')',1)-2)),'X')

  let $E.Mar_Status = 'S'
  move $F05 to $05
  let $05 = TRANSLATE($05,'Bb','99')              !Spouse SSN

  if &TX.BALANCE_YEAR  < 2005
    move $05 to #05
  else
    let $A.Federal_EIN =
       LPAD($x,TO_NUMBER(SUBSTR($F05,3,INSTR($F05,')',1)-2)),'X')
  end-if

!smh
  move $F2G to $2G
  let $2G = TRANSLATE($2G,'Bb','99')              !Control Number
  move $2G to #Control_Num_End
!smh

  move $F07 to $07
  let $07 = TRANSLATE($07,'Bb','99')              !Pension
  move $07 to #Cost_Pension_Annuity

  move $F08 to $08
  let $08 = TRANSLATE($08,'Bb','99')              !Wages
  move $08 to #Wages

  move $F09 to $09
  let $09 = TRANSLATE($09,'Bb','99')              !Commissions
  move $09 to #Commissions

  move $F10 to $10
  let $10 = TRANSLATE($10,'Bb','99')              !Allowances
  move $10 to #Allowance

  move $F11 to $11
  let $11 = TRANSLATE($11,'Bb','99')              !Tips
  move $11 to #Tips

  move $F12 to $12
  let $12 = TRANSLATE($12,'Bb','99')              !Totals 8 - 12
  move $12 to #Total_Comm_Allow_Tips

  move $F13 to $13
  let $13 = TRANSLATE($13,'Bb','99')              !Reimbursed expenses
  move $13 to #Reimbursed_Expense

  move $F14 to $14
  let $14 = TRANSLATE($14,'Bb','99')              !PR tax w/h
  move $14 to #Tax_Withheld

  move $F15 to $15
  let $15 = TRANSLATE($15,'Bb','99')              !Retirement
  move $15 to #Retire_Fund

  move $F16 to $16
  let $16 = TRANSLATE($16,'Bb','99')              !PR tax w/h
  move $16 to #CODA_Plans

  move $F16 to $16
  let $16 = TRANSLATE($16,'Bb','99')              !Salary Act No. 324 Wages
  move $16 to #Sal_Act_No_324

  move $F17 to $17
  let $17 = TRANSLATE($17,'Bb','99')              !SS wages
  move $17 to #SS_Wages

  move $F18 to $18
  let $18 = TRANSLATE($18,'Bb','99')              !SS tax
  move $18 to #SS_Tax

  move $F19 to $19
  let $19 = TRANSLATE($19,'Bb','99')              !Medicare wages
  move $19 to #Med_Wages

  move $F20 to $20
  let $20 = TRANSLATE($20,'Bb','99')              !Medicare tax
  move $20 to #Med_Tax

  move $F21 to $21
  let $21 = TRANSLATE($21,'Bb','99')              !SS tips
  move $21 to #SS_Tips

  move $F22 to $22
  let $22 = TRANSLATE($22,'Bb','99')              !SS tax on tips
  move $22 to #SS_Tax_Tips

  move $F23 to $23
  let $23 = TRANSLATE($23,'Bb','99')              !Medicare tax
  move $23 to #Med_Tax_Tips                                 ! on tips


end-procedure

begin-procedure Print-Alignment-Forms
  move &TX.Align_Count to #Align_Count
  move 'Y' to $AlignForms
  move 1 to #j
  let #Align_Count = #Align_Count * #FormsPerPage
  move #EmployeesPerPage to #temp
  move #FormsPerPage to #EmployeesPerPage
  move 1 to #k
  while #k <= #Align_Count
    do Load-Test-Data
    do Print-W2
    add 1 to #k
  end-while
  move 0 to #Align_Count
  move #temp to #EmployeesPerPage
  move '' to $priorLocality
end-procedure

begin-procedure Print-Value($String,#Line,#Col,$Identifier)
  !DISPLAY $String
  !DISPLAY #Line
  !DISPLAY #Col
  !DISPLAY $Identifier
  if #Line > 0
    print $String (#Line,#Col)
  else
    display ''
    display '***************************************'
    display 'Print Line not defined for ' noline
    display $Identifier
    display 'in Tax Form Print Parameters Table.'
    display 'Program Stopped.'
    display '***************************************'
    display ''
    stop
  end-if
end-procedure

begin-procedure Convert-Parameters

  move $RC_US_YE.Reg_Select_Proc   to $SelectEEs
  move $RC_US_YE.Lines_Per_Inch    to $LinesPerInch
  move $RC_US_YE.Sort_Code1        to $SortCode1
  move $RC_US_YE.Sort_Code3        to $SortCode3
  if $RC_US_YE.Reprint_Descr = 'C'
    move 'CORRECTED'               to $ReprintDescr
    else
    if $RC_US_YE.Reprint_Descr = 'R'
      move 'REISSUED STATEMENT '     to $ReprintDescr
    else
      move '                   '     to $ReprintDescr
    end-if
  end-if

  if $SelectEEs = 'S'
    do Read-EEs
  end-if

  do Create-Order-By

end-procedure

begin-procedure Create-Order-By

  move 'ORDER BY E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2

  if $SortCode1 <> '1'
    display ' '
    display 'Selected As-Of Date for retrieving the sorted data.'
    display $AsofDate

    evaluate $SortCode3
      when = '1'               !ID
        evaluate $SortCode1
          when = '2'
            move 'ORDER BY E.W2_STATE, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
          when = '3'
            move 'ORDER BY J.PAYGROUP, S.EMPLID' to $Sort1
          when = '4'
            move 'ORDER BY J.DEPTID, S.EMPLID' to $Sort1
          when = '5'
            move 'ORDER BY E.POSTAL, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
          when = '6'
            move 'ORDER BY K.MAIL_DROP, S.EMPLID' to $Sort1
          when = '7'
            move 'ORDER BY E.W2_STATE, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
        end-evaluate

      when = '2'               !SSN
        evaluate $SortCode1
          when = '2'
            move 'ORDER BY E.W2_STATE, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
          when = '3'
            move 'ORDER BY J.PAYGROUP, S1.NATIONAL_ID' to $Sort1
          when = '4'
            move 'ORDER BY J.DEPTID, S1.NATIONAL_ID' to $Sort1
          when = '5'
            move 'ORDER BY E.POSTAL, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
          when = '6'
            move 'ORDER BY K.MAIL_DROP, S1.NATIONAL_ID' to $Sort1
          when = '7'
            move 'ORDER BY E.W2_STATE, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
        end-evaluate

      when = '3'               !Name
        evaluate $SortCode1
          when = '2'
            move 'ORDER BY E.W2_STATE,P.NAME, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
          when = '3'
            move 'ORDER BY J.PAYGROUP, S.NAME, S1.NATIONAL_ID' to $Sort1
          when = '4'
            move 'ORDER BY J.DEPTID, S.NAME, S1.NATIONAL_ID' to $Sort1
          when = '5'
            move 'ORDER BY E.POSTAL, P.NAME, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
          when = '6'
            move 'ORDER BY K.MAIL_DROP, S.NAME, S1.NATIONAL_ID' to $Sort1
          when = '7'
            move 'ORDER BY E.W2_STATE, P.NAME, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
        end-evaluate

      when = ''               ! None  - default Emplid
        evaluate $SortCode1
          when = '2'
            move 'ORDER BY E.W2_STATE, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
          when = '3'
            move 'ORDER BY J.PAYGROUP, S.EMPLID' to $Sort1
          when = '4'
            move 'ORDER BY J.DEPTID, S.EMPLID' to $Sort1
          when = '5'
            move 'ORDER BY E.POSTAL, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
          when = '6'
            move 'ORDER BY K.MAIL_DROP, S.EMPLID' to $Sort1
          when = '7'
            move 'ORDER BY E.W2_STATE, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
        end-evaluate

    end-evaluate
  else
    evaluate $SortCode3
      when = '1'
        move 'ORDER BY E.EMPLID, E.SEQUENCE_NUMBER, E.COMPANY' to $Sort2
      when = '2'
        move 'ORDER BY E.SSN, E.SEQUENCE_NUMBER, E.COMPANY'    to $Sort2
      when = '3'
        move 'ORDER BY P.NAME, E.SSN, E.SEQUENCE_NUMBER, E.COMPANY' to $Sort2
      when = ''
        move 'ORDER BY E.EMPLID, E.SEQUENCE_NUMBER, E.COMPANY' to $Sort2
    end-evaluate
  end-if
end-procedure


begin-procedure Read-EEs

move 'AND E.EMPLID IN (''' to $E.SelectedEEs
move 'AND S.EMPLID IN (''' to $S.SelectedEEs
move 'AND J.EMPLID IN (''' to $J.SelectedEEs
move ' ' to $SelectedEmplID

begin-SELECT
C.SELECTED_EE

  move &C.Selected_EE     to $SelectedEmplID

  let $E.SelectedEEs = $E.SelectedEEs || $SelectedEmplID || ''','''
  let $S.SelectedEEs = $S.SelectedEEs || $SelectedEmplID || ''','''
  let $J.SelectedEEs = $J.SelectedEEs || $SelectedEmplID || ''','''
  move 'Y' to $EE_Selected

FROM  PS_RC_TAX960PR C
WHERE C.OPRID         = $Prcs_OprID
  AND C.RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
end-SELECT


let $E.SelectedEEs = SUBSTR($E.SelectedEEs,1,LENGTH($E.SelectedEEs) - 2)
let $E.SelectedEEs = $E.SelectedEEs || ')'

let $S.SelectedEEs = SUBSTR($S.SelectedEEs,1,LENGTH($S.SelectedEEs) - 2)
let $S.SelectedEEs = $S.SelectedEEs || ')'

let $J.SelectedEEs = SUBSTR($J.SelectedEEs,1,LENGTH($J.SelectedEEs) - 2)
let $J.SelectedEEs = $J.SelectedEEs || ')'

end-procedure

begin-procedure Delete-Sel-Employees-Table
begin-SQL on-error=Ignore
  DELETE FROM PS_RC_TAX960PR
  WHERE OPRID       = $Prcs_OprID
    AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID

end-SQL
end-procedure

begin-procedure Ignore
! dummy procedure to avoid SQL error message on delete of empty table
end-procedure

#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'w2sort.sqc'    !Routines to sorting W-2s
#Include 'txrnctl2.sqc'  !US Year End Process Scheduler Run Controls
#Include 'stdapi.sqc'    !Update Process API
#Include 'w2.sqc'        !Routine for W2 Year End Box variables
#Include 'w2prbox.sqc'   !Evaluate-PR-Boxes
