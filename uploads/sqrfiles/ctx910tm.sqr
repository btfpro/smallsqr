!***********************************************************************
!  CTX910TM: CANADA Magnetic Media Reporting - T4                      *
!                                                                      *
!             NOTE: "#IFDEF TAXTEST" in main SELECT is used for        *
!                   testing this report against DEMO database          *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:03:29:25                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment

#Include 'setup32.sqc'  !printer and page-size init
#Include 'ctxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure

begin-report
  do Init-Report

  do Process-Main

  if $FileType = 'D'
    close 20
  else
    close 10
  end-if

 #ifdef PRCSSCHD
  do StdAPI-Term
 #endif

end-report

begin-heading 3
  #Include 'stdhdg01.sqc'
  print 'Business Number  '  (3,1)
  print $ReportingID       (0,33)
  print $CalYear           (3,,)      center
end-heading

begin-procedure Init-Report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Get-Calendar-Year-Id

 #ifdef PRCSSCHD
  do StdAPI-Init
 #endif

  do Initialization
  move 'CTX910TM' to $ReportID

 if $FileType = 'D'
  display ''
  display 'Creating Diskette File for CANADA T4 Reporting'
 else
  display ''
  display 'Creating Tape File for CANADA T4 Reporting'
 end-if

end-procedure

begin-procedure Initialization

  do Get-Current-DateTime
  move '1' to $MMLZero
  move '1' to $Year4
  do Format-DateTime($AsOfToday, $910Date, {DEFYMD},'','')

  move $910Date to $AsOfYear xxxx   !extract the current year
  move $AsOfYear  to #AsOfYear
  move #AsOfYear  to #saveAsOfYear
  subtract 1    from #AsOfYear

  do Get-Can-Tax-Processing-Params

  move 'Canada T4 Magnetic Media Summary Report' to $ReportTitle
  move &TX.Balance_Year to $RptYear 9999
  move $RptYear          to $CalendarYr
  move $RptYear          to $RptYear ~~xx
  move $PeriodEndDate    to $AsOfDate

  move &TX.Balance_Year to $CalYear 9999
  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')

  if &TX.Balance_Year <> #AsOfYear and $Prcs_Process_Instance = ''
    display ''
    display 'Current Year is not one greater than Tax Reporting Year.'
    display 'Current Year is    ' noline
    display  #saveAsOfYear  9999
    display 'Tax Reporting Year ' noline
    display &TX.Balance_Year
    input $Answer maxlen=1 'Current Year is not one greater than Tax Reporting Year. Do you want to continue? (Y/N)'
    uppercase $Answer
    if $Answer <> 'Y'
      stop
    end-if
  end-if

   move 400 to #RecordLength
   add 2 to #RecordLength

  do Array-Create

  do Initialize-OtherInfo-Array

  if $PRCS_Process_Instance = ''
     do Prompts
     do Evaluate-File-Type
  else
#ifdef PRCSSCHD
     do Select-Canadian-YrEnd-Parameters
     do Convert-Parameters
#endif
  end-if

  if $FileType = 'D'
      do Calculate-Diskette-Capacity                  !npa
  end-if

  do Open-File

  do Initialize-Detail
  do Initialize-Summary

end-procedure

begin-procedure Open-File
if $FileType = 'D'
   move 0 to #RecordCount
   if #FileExtension <> 0
      close 20
   else
#ifdef MPE
  let $feq='FILE CTXTM.DAT; REC=-400,,F,ASCII'
  call system using $feq #status
  open 'CTXTM.DAT' as 10 for-writing record=400:fixed
#else
  open '{IMPORTPREFIX}CTXTM{IMPORTSUFFIX}' as 10 for-writing record=400:fixed
#endif

   end-if
   add 1 to #FileExtension
#ifdef MPE
   move #FileExtension to $FileExtension 9
   let $FileID = 'CTXTM' || $FileExtension || '.DAT'
   let $feq='FILE ' || $FileID || '; REC=-400,,F,ASCII'
   call system using $feq #status
#else
   #ifdef OS400
      move #FileExtension to $FileExtension 099
      let $FileID = 'CTXTM' || '(D' || $FileExtension || ')'
   #else
      #ifdef MVS
         move #FileExtension to $FileExtension 099
         let $FileID = 'CTXTM' || $FileExtension
      #else
         move #FileExtension to $FileExtension 099
         let $FileID = '{IMPORTPREFIX}' || 'CTXTM.' || $FileExtension
      #endif
   #endif
#endif
   open $FileID as 20 for-writing record=400:fixed
else
#ifdef MPE
  let $feq='FILE CTXTM.DAT; REC=-400,,F,ASCII'
  call system using $feq #status
  open 'CTXTM.DAT' as 10 for-writing record=400:fixed
#else
  open '{IMPORTPREFIX}CTXTM{IMPORTSUFFIX}' as 10 for-writing record=400:fixed
#endif

end-if
end-procedure


begin-procedure Array-Create

  create-array name=OtherInfo size=40   -
    field=OtherInfo_Box_Num:char        -
    field=OtherInfo_Box_Amt:number

end-procedure


begin-procedure Initialize-OtherInfo-Array

  move 0 to #load
  move 0 to #loadamt
  move ' ' to $loadspace
  while #load < 40

    put $loadspace #loadamt into OtherInfo(#load)
        OtherInfo_Box_Num OtherInfo_Box_Amt

    add 1 to #load

  end-while

end-procedure


begin-procedure Process-Main
  do Write-Transmitter-Record


begin-SELECT
S.COMPANY
S.REPORTING_ID   () on-break print=never after=Write-Summary-Record
S.WAGE_LOSS_PLAN
S.PROVINCE
S.SEQUENCE_NUMBER
S.TAXFORM_ID
S.UI_EXEMPT
S.EMPLOYMENT_CODE
E.EMPLID
E.SIN
E.SLIP_SURNAME
E.SLIP_FIRST_NAME
E.SLIP_INITIAL
E.ADDRESS1
E.ADDRESS2
E.CITY
E.PROVINCE
E.COUNTRY
E.POSTAL
E.DECEASED

  do Save-Employee-Data
  move 0 to #SaveBox14
  move 'N' to $UIEarnFound
  do Check-For-Negative-Amt

  if $FoundNegative = 'N'

    do Get-Detail-Data
    do Accumulate-ER-UI-Prem
    if $UIEarnFound = 'N' and
      $UIExempt <> '1'
        do Check-UI-Earnings
    end-if

    if $OtherInfoBxFnd = 'N'
      do Write-T4-Record
    else
      if $MoreThan6Bx = 'N'
        do Write-T4-Record
      else
        do Write-T4-Record
        do Process-Additional-T4
      end-if
    end-if

  else
    do Error-Report
    do Initialize-Detail
  end-if

FROM PS_CAN_YE_EMPL  E,
     PS_CAN_YE_SLIP  S
WHERE E.CALENDAR_YEAR = &TX.Balance_Year
  AND S.CALENDAR_YEAR = &TX.Balance_Year
  AND S.TAXFORM_ID = 'T'
  AND S.COMPANY = E.COMPANY
  AND E.EMPLID = S.EMPLID
  AND E.SEQUENCE_NUMBER = S.SEQUENCE_NUMBER
  AND S.YE_SLIP_PROCESS = 'O'
ORDER BY S.REPORTING_ID ASC, E.SLIP_SURNAME ASC,
                             E.SLIP_FIRST_NAME ASC, E.EMPLID ASC
end-SELECT

end-procedure

begin-procedure Check-UI-Earnings

  let #RoundUIEarnings = 0
  let #RoundSaveBox14  = 0
  let #BoxAmt          = 0

begin-SELECT
C.TXGRS_YTD

      if &C.TXGRS_YTD <> 0

        do PS_SQR_Round(&C.TXGRS_YTD, 2 , #RoundUIEarnings)
        do PS_SQR_Round(#SaveBox14, 2, #RoundSaveBox14)
        if #RoundUIEarnings = #RoundSaveBox14
          move #SaveBox14 to #BoxAmt

          let #BoxAmt = 100 * #BoxAmt
          do Format-Number(#BoxAmt, $UIEarnings, '0999999')

        end-if
      end-if


FROM PS_CAN_TAX_BALANCE C
WHERE C.COMPANY = &S.Company
  AND C.EMPLID = &E.Emplid
  AND C.WAGE_LOSS_PLAN = &S.Wage_Loss_Plan
  AND C.BALANCE_ID = $Calendar_Year_Id
  AND C.BALANCE_YEAR = &TX.Balance_Year
  AND C.PROVINCE = &S.PROVINCE
  AND C.TAX_CLASS_CAN = 'EIE'
  AND C.BALANCE_PERIOD         =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_CAN_TAX_BALANCE
       WHERE  EMPLID        = C.EMPLID
         AND  COMPANY       = C.COMPANY
         AND  BALANCE_ID    = C.BALANCE_ID
         AND  BALANCE_YEAR  = C.BALANCE_YEAR
         AND  PROVINCE      = C.PROVINCE
         AND  WAGE_LOSS_PLAN = C.WAGE_LOSS_PLAN
         AND  TAX_CLASS_CAN = C.TAX_CLASS_CAN)

end-SELECT

end-procedure

begin-procedure Save-Employee-Data

  if &S.Company <> $PriorCompany
     move &S.Company to $Company
     do Get-Company-Data
     move &CT.Descr to $CompanyName
  end-if
  move &S.Company to $PriorCompany

  move &S.Reporting_ID to $ReportingID
  move &S.Wage_Loss_Plan to $WageLossPlan

  if &S.UI_Exempt = 'Y'
     move '1' to $UIExempt
  end-if

  let $E_Surname = substr(&E.SLIP_Surname, 1, 20)
  do convert-to-char($E_Surname, $E_Surname)

  move &E.SLIP_First_Name to $E_FirstName
  do convert-to-char($E_FirstName, $E_FirstName)

  move &E.SLIP_Initial to $E_Initial
  do convert-to-char($E_Initial, $E_Initial)

  move &E.SIN to $SIN
  if  rtrim($SIN, ' ') = '' OR
      rtrim($SIN, ' ') = '999999999'
      move '000000000' to $SIN
  end-if
  move &E.EmplID to $EmplID
  move &E.Address1 to $E_Street
  do convert-to-char($E_Street, $E_Street)

  move &E.Address2 to $E_Street2
  do convert-to-char($E_Street2, $E_Street2)

  move &E.City to $E_City
  do convert-to-char($E_City, $E_City)

  let $E_Province = rtrim(&E.Province, ' ')
  move &E.Country to $E_Country
  let $WorkProvince = rtrim(&S.Province, ' ')

  if $E_Country = 'CAN'
     move &E.POSTAL to $PostalCd
     do Check-Postal-Code
     move $PostalCd to $E_PostalCode
  else
     move &E.Postal to $E_PostalCode
  end-if

  if rtrim(&S.Employment_Code, ' ') <> ''
    move &S.Employment_Code to $E_EmploymentCode
  end-if

  uppercase $E_Surname
  uppercase $E_FirstName
  uppercase $E_Initial
  uppercase $E_Street
  uppercase $E_Street2
  uppercase $E_City
  uppercase $E_Province
  uppercase $E_Country
  uppercase $E_PostalCode
  uppercase $E_WorkProvince

end-procedure


begin-procedure Check-For-Negative-Amt

  let $FoundNegative = 'N'

begin-SELECT
NA.BOX
NA.CAN_YE_BOX_AMT

  if &NA.CAN_YE_BOX_AMT < 0
    move 'Y' to $FoundNegative
  end-if

FROM PS_CAN_YE_DETAIL  NA
WHERE NA.COMPANY = &S.Company
  AND NA.EMPLID  = &E.EmplID
  AND NA.CALENDAR_YEAR = &TX.Balance_Year
  AND NA.SEQUENCE_NUMBER = &S.Sequence_Number
  AND NA.TAXFORM_ID = &S.Taxform_ID
  AND NA.WAGE_LOSS_PLAN = &S.Wage_Loss_Plan
  AND NA.PROVINCE = &S.Province

end-SELECT

end-procedure


begin-procedure Get-Detail-Data

  let #NumOfOtherInfo    = 0
  let #OtherInfoBoxCount = 0
  let #OtherInfo_i       = 0
  let $MoreThan6Bx       = 'N'
  let $OtherInfoBxFnd    = 'N'

begin-SELECT
D.BOX
D.CAN_YE_BOX_TEXT
D.CAN_YE_BOX_AMT

  do Save-Detail-Data

  do Process-Other-Info-Box

FROM PS_CAN_YE_DETAIL  D
WHERE D.COMPANY = &S.Company
  AND D.EMPLID  = &E.EmplID
  AND D.CALENDAR_YEAR = &TX.Balance_Year
  AND D.SEQUENCE_NUMBER = &S.Sequence_Number
  AND D.TAXFORM_ID = &S.Taxform_ID
  AND D.WAGE_LOSS_PLAN = &S.Wage_Loss_Plan
  AND D.PROVINCE = &S.Province
ORDER BY D.BOX ASC

end-SELECT

end-procedure

begin-procedure Save-Detail-Data

  let $Box = RTRIM(&D.Box, ' ')

  if $Box = '28c' or $Box = '28C' or
     $Box = '28q' or $Box = '28Q'
     move '1' to $CPPExempt
  end-if

  if $Box = '50'
     let $PensionPlanID = RTRIM(&D.CAN_YE_Box_Text, ' ')
     let $PensionPlanID = lpad($PensionPlanId, 7, '0')
  end-if

  let #BoxAmt = 100 * &D.CAN_YE_Box_Amt

  if #BoxAmt > 0 and $FoundNegative = 'N'
    evaluate $Box

       when = '14'
          do Format-Number(#BoxAmt, $TotIncome, '0999999999')
          add #BoxAmt to #SumTotIncome
          let #SaveBox14 = #BoxAmt / 100

       when = '16'
          do Format-Number(#BoxAmt, $CPPContrib, '099999')
          add #BoxAmt to #SumCPPContrib

       !the calculation of Er contribution at 3% for 1997
          if &TX.Balance_Year = 1997
            let #tempBox16 = #BoxAmt * 1.02564
            add #tempBox16 to #SumErCPPContrib
          else
            add #BoxAmt to #SumErCPPContrib
          end-if

       when = '17'
          do Format-Number(#BoxAmt, $QPPContrib, '099999')
          add #BoxAmt to #SumQPPContrib

       when = '18'
          do Format-Number(#BoxAmt, $UIPrem, '099999')
          add #BoxAmt to #SumUIPrem

       when = '20'
          do Format-Number(#BoxAmt, $RPPContrib, '0999999')
          add #BoxAmt to #SumRPPContrib

       when = '22'
          do Format-Number(#BoxAmt, $IncomeTax, '0999999999')
          add #BoxAmt to #SumIncomeTax

       when = '24'
          do Format-Number(#BoxAmt, $UIEarnings, '0999999')

          move 'Y' to $UIEarnFound

       when = '26'
          do Format-Number(#BoxAmt, $CPPEarnings, '099999999')
          add #BoxAmt to #SumCPPEarnings

       when = '44'
          do Format-Number(#BoxAmt, $UnionDues, '099999999')

       when = '46'
          do Format-Number(#BoxAmt, $Charity, '099999999')

       when = '52'
          let #BoxAmt = #BoxAmt / 100
          let #BoxAmt = trunc(#BoxAmt, 0)
          let #BoxAmt = #BoxAmt * 100
          do Format-Number(#BoxAmt, $PensionAdj, '0999999')
          add #BoxAmt to #SumPensionAdj

     end-evaluate
  end-if

end-procedure


begin-procedure Process-Other-Info-Box

  let $Box = RTRIM(&D.Box, ' ')

  let #BoxAmt = 100 * &D.CAN_YE_Box_Amt

  if #BoxAmt > 0 and $FoundNegative = 'N'
    evaluate $Box

       when = '30'
       when = '31'
       when = '32'
       when = '33'
       when = '34'
       when = '35'
       when = '36'
       when = '37'
       when = '38'
       when = '39'
       when = '40'
       when = '41'
       when = '42'
       when = '53'
       when = '70'
       when = '71'
       when = '72'
       when = '73'
       when = '74'
       when = '75'
       when = '76'
       when = '77'
       when = '97'
       when = '98'
       when = '99'

         do Process-Other-Info-Amt

       when-other
         break
    end-evaluate
  end-if

end-procedure


begin-procedure Process-Other-Info-Amt

  let $OtherInfoBxFnd    = 'Y'

  if #OtherInfoBoxCount  = 6
    let $MoreThan6Bx = 'Y'
  end-if

  evaluate #OtherInfoBoxCount
     when = 0
       move $Box to $OtherInfoCode1
       do Format-Number(#BoxAmt, $OtherInfoAmt1, '099999999')
     when = 1
       move $Box to $OtherInfoCode2
       do Format-Number(#BoxAmt, $OtherInfoAmt2, '099999999')
     when = 2
       move $Box to $OtherInfoCode3
       do Format-Number(#BoxAmt, $OtherInfoAmt3, '099999999')
     when = 3
       move $Box to $OtherInfoCode4
       do Format-Number(#BoxAmt, $OtherInfoAmt4, '099999999')
     when = 4
       move $Box to $OtherInfoCode5
       do Format-Number(#BoxAmt, $OtherInfoAmt5, '099999999')
     when = 5
       move $Box to $OtherInfoCode6
       do Format-Number(#BoxAmt, $OtherInfoAmt6, '099999999')
     when-other
       do Save-T4-OtherInfoBx
  end-evaluate

  add 1     to #OtherInfoBoxCount

end-procedure


begin-procedure Save-T4-OtherInfoBx

  put $Box #BoxAmt into OtherInfo(#OtherInfo_i)
      OtherInfo_Box_Num OtherInfo_Box_Amt

  add 1 to #OtherInfo_i

end-procedure


begin-procedure Process-Additional-T4

  let #j = 0

  let #OtherInfoCount = 0

  while #j < #OtherInfo_i
    get $OtherInfo_Box_Num #OtherInfo_Box_Amt from OtherInfo(#j)
        OtherInfo_Box_Num OtherInfo_Box_Amt

    evaluate #j
      when = 0
      when = 6
      when = 12
      when = 18
      when = 24
      when = 30
      when = 36
        move 0  to #NumOfOtherInfo
        move $OtherInfo_Box_Num to $OtherInfoCode1
        do Format-Number(#OtherInfo_Box_Amt, $OtherInfoAmt1, '099999999')
      when = 1
      when = 7
      when = 13
      when = 19
      when = 25
      when = 31
      when = 37
        move 1  to #NumOfOtherInfo
        move $OtherInfo_Box_Num to $OtherInfoCode2
        do Format-Number(#OtherInfo_Box_Amt, $OtherInfoAmt2, '099999999')
      when = 2
      when = 8
      when = 14
      when = 20
      when = 26
      when = 32
      when = 38
        move 2  to #NumOfOtherInfo
        move $OtherInfo_Box_Num to $OtherInfoCode3
        do Format-Number(#OtherInfo_Box_Amt, $OtherInfoAmt3, '099999999')
      when = 3
      when = 9
      when = 15
      when = 21
      when = 27
      when = 33
      when = 39
        move 3  to #NumOfOtherInfo
        move $OtherInfo_Box_Num to $OtherInfoCode4
        do Format-Number(#OtherInfo_Box_Amt, $OtherInfoAmt4, '099999999')
      when = 4
      when = 10
      when = 16
      when = 22
      when = 28
      when = 34
        move 4  to #NumOfOtherInfo
        move $OtherInfo_Box_Num to $OtherInfoCode5
        do Format-Number(#OtherInfo_Box_Amt, $OtherInfoAmt5, '099999999')
      when = 5
      when = 11
      when = 17
      when = 23
      when = 29
      when = 35
        move 5  to #NumOfOtherInfo
        move $OtherInfo_Box_Num to $OtherInfoCode6
        do Format-Number(#OtherInfo_Box_Amt, $OtherInfoAmt6, '099999999')
      when-other
        break

    end-evaluate

    add 1 to #OtherInfoCount

    if #NumOfOtherInfo = 5
      do Set-Employee-Info
      do Write-T4-Record
    end-if

    add 1 to #j

  end-while

  let #Count = mod(#OtherInfoCount,6)

  if #Count <> 0

    do Set-Employee-Info

    do Write-T4-Record

  end-if

  do Initialize-OtherInfo-Array

end-procedure


begin-procedure Set-Employee-Info

  let #BoxAmt = 100 * 0.01
  do Format-Number(#BoxAmt, $TotIncome, '0999999999')     !Box 14 for second T4

  move $Save_E_Surname    to $E_Surname
  move $Save_E_FirstName  to $E_FirstName
  move $Save_E_Initial    to $E_Initial
  move $Save_E_Street     to $E_Street
  move $Save_E_Street2    to $E_Street2
  move $Save_E_City       to $E_City
  move $Save_E_Province   to $E_Province
  move $Save_E_Country    to $E_Country
  move $Save_E_PostalCode to $E_PostalCode
  move $Save_WorkProvince to $WorkProvince
  move $Save_EmplID       to $EmplID
  move $Save_SIN          to $SIN
  move $Save_E_EmploymentCode to $E_EmploymentCode

end-procedure


begin-procedure Accumulate-ER-UI-Prem

begin-SELECT
ER.TAX_YTD

  add &ER.Tax_Ytd to #SumErUIPrem

FROM  PS_CAN_TAX_BALANCE ER
WHERE ER.EMPLID         = &E.EmplID
  AND ER.COMPANY        = &S.Company
  AND ER.BALANCE_ID     = $Calendar_Year_Id
  AND ER.BALANCE_YEAR   = &TX.Balance_Year
  AND ER.WAGE_LOSS_PLAN = &S.Wage_Loss_Plan
  AND ER.PROVINCE       = &S.Province
  AND ER.TAX_CLASS_CAN  = 'EIR'
  AND ER.BALANCE_PERIOD         =
      (SELECT MAX(ER1.BALANCE_PERIOD)
       FROM   PS_CAN_TAX_BALANCE ER1
       WHERE  ER1.EMPLID         = ER.EMPLID
         AND  ER1.COMPANY        = ER.COMPANY
         AND  ER1.BALANCE_ID     = ER.BALANCE_ID
         AND  ER1.BALANCE_YEAR   = ER.BALANCE_YEAR
         AND  ER1.WAGE_LOSS_PLAN = ER.WAGE_LOSS_PLAN
         AND  ER1.PROVINCE       = ER.PROVINCE
         AND  ER1.TAX_CLASS_CAN  = ER.TAX_CLASS_CAN)
end-SELECT

end-procedure


begin-Procedure Write-Transmitter-Record
  move &TX.Company       to $Company  !TX.Company is the Transmitter
  if RTRIM($Company,' ') = ''
    display '*** Company field blank on Tax Run Control Record ***'
    display '***************** Processing stopped ****************'
    stop
  end-if

  do Get-Company-Data                 !Transmitter identifying data
  move &TX.Transmitter_ID to $TransmitterID

  move &TX.Comm_Language     to $Language
  move &TX.Tech_Contact_Name to $ContactName
  uppercase $ContactName

  if &TX.Tech_Contact_Acode <> 0
     let $TechContactAc = &TX.Tech_Contact_Acode
  else
     move '000' to $TechContactAc
  end-if

  if &TX.Tech_Contact_Phone <> 0
     let $TechContactPhone = &TX.Tech_Contact_Phone
  else
     move '0000000' to $TechContactPhone
  end-if

  If $CO_FOUND = 'Y'
     move $CompanyName     to $TransmitterName
     move $CompnyAdd1      to $TransmitterStreet
     move $CompnyAdd2      to $TransmitterStreet2
     move $CompnyCity      to $TransmitterCity
     let $TransmitterProvince = rtrim(&CT.State, ' ')
     move &CT.Country      to $TransmitterCountry

     if &CT.Country = 'CAN'
        move &CT.Postal to $PostalCd
        do Check-Postal-Code
        move $PostalCd to $TransmitterPostalCode
     else
        move &CT.Postal to $TransmitterPostalCode
     end-if
  else
     move &TX.Descr        to  $TransmitterName
     move &TX.Address1     to  $TransmitterStreet
     move &TX.Address2     to  $TransmitterStreet2
     move &TX.City         to  $TransmitterCity

     let $TransmitterProvince = rtrim(&TX.Province, ' ')
     move &TX.Country      to $TransmitterCountry
     move &TX.Postal to $TransmitterPostalCode
  end-if

  move &TX.Transm_Type  to $TransmitterType
  move ' '              to $DataType
  do Count-ReportingID-Numbers
  do format-number(#SummaryCounter, $SummaryCounter, '099999')
  display ' '
  display 'Total number of summaries is ' noline
  display $SummaryCounter
  display ' '


  uppercase $TransmitterName
  uppercase $TransmitterStreet
  uppercase $TransmitterStreet2
  uppercase $TransmitterCity
  uppercase $TransmitterProvince
  uppercase $TransmitterCountry
  uppercase $TransmitterPostalCode

  add 1 to #RecordCount

  write 10 from    '904':3           !Pos   1 -   3
               $DataType:1           !Pos   4
          $TransmitterID:8           !Pos   5 -  12
        $TransmitterType:1           !Pos  13
         $SummaryCounter:6           !Pos  14 -  19
        $TransmitterName:30          !Pos  20 -  49
                     $Sp:30          !Pos  50 -  79
      $TransmitterStreet:30          !Pos  80 - 109
     $TransmitterStreet2:30          !Pos 110 - 139
        $TransmitterCity:28          !Pos 140 - 167
    $TransmitterProvince:2           !Pos 168 - 169
     $TransmitterCountry:3           !Pos 170 - 172
  $TransmitterPostalCode:10          !Pos 173 - 182
            $ContactName:22          !Pos 183 - 204
          $TechContactAc:3           !Pos 205 - 207
       $TechContactPhone:7           !Pos 208 - 214
               $Language:1           !Pos 215
                     $Sp:185         !Pos 216 - 400

  if $FileType = 'D'
  write 20 from    '904':3           !Pos   1 -   3
               $DataType:1           !Pos   4
          $TransmitterID:8           !Pos   5 -  12
        $TransmitterType:1           !Pos  13
         $SummaryCounter:6           !Pos  14 -  19
        $TransmitterName:30          !Pos  20 -  49
                     $Sp:30          !Pos  50 -  79
      $TransmitterStreet:30          !Pos  80 - 109
     $TransmitterStreet2:30          !Pos 110 - 139
        $TransmitterCity:28          !Pos 140 - 167
    $TransmitterProvince:2           !Pos 168 - 169
     $TransmitterCountry:3           !Pos 170 - 172
  $TransmitterPostalCode:10          !Pos 173 - 182
            $ContactName:22          !Pos 183 - 204
          $TechContactAc:3           !Pos 205 - 207
       $TechContactPhone:7           !Pos 208 - 214
               $Language:1           !Pos 215
                     $Sp:185         !Pos 216 - 400

   end-if

end-procedure

begin-procedure Write-T4-Record

  if $FileType = 'D'
     if #RecordCount >= #MaxRecordsPerDiskette
        do Open-File
     end-if
  end-if
  add 1 to #RecordCount

  write 10 from   '110':3          !Pos   1 -   3
             $E_Surname:20         !Pos   4 -  23
           $E_FirstName:12         !Pos  24 -  35
             $E_Initial:1          !Pos  36
              $E_Street:30         !Pos  37 -  66
             $E_Street2:30         !Pos  67 -  96
                $E_City:28         !Pos  97 - 124
            $E_Province:2          !Pos 125 - 126
             $E_Country:3          !Pos 127 - 129
          $E_PostalCode:10         !Pos 130 - 139
          $WorkProvince:2          !Pos 140 - 141
                   $SIN:9          !Pos 142 - 150
                $EmplID:20         !Pos 151 - 170
           $ReportingID:15         !Pos 171 - 185
             $TotIncome:10         !Pos 186 - 195
            $CPPContrib:6          !Pos 196 - 201
            $QPPContrib:6          !Pos 202 - 207
                $UIPrem:6          !Pos 208 - 213
            $RPPContrib:7          !Pos 214 - 220
             $IncomeTax:10         !Pos 221 - 230
            $UIEarnings:7          !Pos 231 - 237
           $CPPEarnings:9          !Pos 238 - 246
             $CPPExempt:1          !Pos 247
              $UIExempt:1          !Pos 248
             $UnionDues:9          !Pos 249 - 357
               $Charity:9          !Pos 258 - 266
         $PensionPlanID:7          !Pos 267 - 273
            $PensionAdj:7          !Pos 274 - 280
      $E_EmploymentCode:2          !Pos 281 - 282
        $OtherInfoCode1:2          !Pos 283 - 284
         $OtherInfoAmt1:9          !Pos 285 - 293
        $OtherInfoCode2:2          !Pos 294 - 295
         $OtherInfoAmt2:9          !Pos 296 - 304
        $OtherInfoCode3:2          !Pos 305 - 306
         $OtherInfoAmt3:9          !Pos 307 - 315
        $OtherInfoCode4:2          !Pos 316 - 317
         $OtherInfoAmt4:9          !Pos 318 - 326
        $OtherInfoCode5:2          !Pos 327 - 328
         $OtherInfoAmt5:9          !Pos 329 - 337
        $OtherInfoCode6:2          !Pos 338 - 339
         $OtherInfoAmt6:9          !Pos 340 - 348
                    $Sp:52         !Pos 349 - 400

  if $FileType = 'D'
  write 20 from   '110':3          !Pos   1 -   3
             $E_Surname:20         !Pos   4 -  23
           $E_FirstName:12         !Pos  24 -  35
             $E_Initial:1          !Pos  36
              $E_Street:30         !Pos  37 -  66
             $E_Street2:30         !Pos  67 -  96
                $E_City:28         !Pos  97 - 124
            $E_Province:2          !Pos 125 - 126
             $E_Country:3          !Pos 127 - 129
          $E_PostalCode:10         !Pos 130 - 139
          $WorkProvince:2          !Pos 140 - 141
                   $SIN:9          !Pos 142 - 150
                $EmplID:20         !Pos 151 - 170
           $ReportingID:15         !Pos 171 - 185
             $TotIncome:10         !Pos 186 - 195
            $CPPContrib:6          !Pos 196 - 201
            $QPPContrib:6          !Pos 202 - 207
                $UIPrem:6          !Pos 208 - 213
            $RPPContrib:7          !Pos 214 - 220
             $IncomeTax:10         !Pos 221 - 230
            $UIEarnings:7          !Pos 231 - 237
           $CPPEarnings:9          !Pos 238 - 246
             $CPPExempt:1          !Pos 247
              $UIExempt:1          !Pos 248
             $UnionDues:9          !Pos 249 - 357
               $Charity:9          !Pos 258 - 266
         $PensionPlanID:7          !Pos 267 - 273
            $PensionAdj:7          !Pos 274 - 280
      $E_EmploymentCode:2          !Pos 281 - 282
        $OtherInfoCode1:2          !Pos 283 - 284
         $OtherInfoAmt1:9          !Pos 285 - 293
        $OtherInfoCode2:2          !Pos 294 - 295
         $OtherInfoAmt2:9          !Pos 296 - 304
        $OtherInfoCode3:2          !Pos 305 - 306
         $OtherInfoAmt3:9          !Pos 307 - 315
        $OtherInfoCode4:2          !Pos 316 - 317
         $OtherInfoAmt4:9          !Pos 318 - 326
        $OtherInfoCode5:2          !Pos 327 - 328
         $OtherInfoAmt5:9          !Pos 329 - 337
        $OtherInfoCode6:2          !Pos 338 - 339
         $OtherInfoAmt6:9          !Pos 340 - 348
                    $Sp:52         !Pos 349 - 400

   end-if

  add 1 to #T4Count

  do Save-EE-Detail

  do Initialize-Detail

end-procedure


begin-procedure Save-EE-Detail

  move $E_Surname    to $Save_E_Surname
  move $E_FirstName  to $Save_E_FirstName
  move $E_Initial    to $Save_E_Initial
  move $E_Street     to $Save_E_Street
  move $E_Street2    to $Save_E_Street2
  move $E_City       to $Save_E_City
  move $E_Province   to $Save_E_Province
  move $E_Country    to $Save_E_Country
  move $E_PostalCode to $Save_E_PostalCode
  move $WorkProvince to $Save_WorkProvince
  move $EmplID       to $Save_EmplID
  move $SIN          to $Save_SIN
  move $E_EmploymentCode to $Save_E_EmploymentCode

end-procedure


begin-procedure Initialize-Detail

  move '0000000000' to $TotIncome
  move '000000' to $CPPContrib
  move '000000' to $QPPContrib
  move '000000' to $UIPrem
  move '0000000' to $RPPContrib
  move '0000000000' to $IncomeTax
  move '0000000' to $UIEarnings
  move '000000000' to $CPPEarnings
  move '000000000' to $UnionDues
  move '000000000' to $Charity
  move '0000000' to $PensionAdj
  move '000000000' to $SIN
  move '0' to $CPPExempt
  move '0' to $UIExempt
  move '0000000' to $PensionPlanID
  move '00'        to $OtherInfoCode1
  move '000000000' to $OtherInfoAmt1
  move '00'        to $OtherInfoCode2
  move '000000000' to $OtherInfoAmt2
  move '00'        to $OtherInfoCode3
  move '000000000' to $OtherInfoAmt3
  move '00'        to $OtherInfoCode4
  move '000000000' to $OtherInfoAmt4
  move '00'        to $OtherInfoCode5
  move '000000000' to $OtherInfoAmt5
  move '00'        to $OtherInfoCode6
  move '000000000' to $OtherInfoAmt6
  move '00'        to $E_EmploymentCode

  move ' ' to $E_Surname
  move ' ' to $E_FirstName
  move ' ' to $E_Initial
  move ' ' to $E_Street
  move ' ' to $E_Street2
  move ' ' to $E_City
  move ' ' to $E_Province
  move ' ' to $E_Country
  move ' ' to $E_PostalCode
  move ' ' to $WorkProvince
  move ' ' to $EmplID


end-procedure

begin-procedure Write-Summary-Record

  do Format-Number(#SumTotIncome, $SumTotIncome, '0999999999999')
  do Format-Number(#SumCPPContrib, $SumCPPContrib, '09999999999')
  do Format-Number(#SumErCPPContrib, $SumErCPPContrib, '09999999999')
  do Format-Number(#SumUIPrem, $SumUIPrem, '09999999999')
  do Format-Number(#SumRPPContrib, $SumRPPContrib, '09999999999')
  do Format-Number(#SumIncomeTax, $SumIncomeTax, '0999999999999')
  do Format-Number(#SumPensionAdj, $SumPensionAdj, '0999999999999')

  do Format-Number(#T4Count, $T4Count, '0999999')

  let #SumErUIPrem =  #SumErUIPrem * 100
  if #SumErUIPrem > 0
    do format-number(#SumErUIPrem, $SumErUIPrem, '09999999999')
  end-if

  move &CT.Descr to $CompanyName
  uppercase $CompanyName
  move $CompnyAdd1 to $C_Street
  move $CompnyAdd2 to $C_Street2
  move $CompnyCity to $C_City
  let $C_Province = rtrim(&CT.State, ' ')
  move &CT.Country to $C_Country


  move &CT.Postal to $PostalCd
  do Check-Postal-Code
  move $PostalCd to $C_PostalCode


  move &TX.Acct_Contact_Name to $AcctContactName

  if &TX.Acct_Contact_Acode <> 0
     let $AcctContactAc = &TX.Acct_Contact_Acode
  else
     move '000' to $AcctContactAc
  end-if

  if &TX.Acct_Contact_Phone <> 0
     let $AcctContactPhone = &TX.Acct_Contact_Phone
  else
     move '0000000' to $AcctContactPhone
  end-if

  if &TX.Acct_Contact_Ext <> 0
     let $AcctContactExt = &TX.Acct_Contact_Ext
  else
     move '0000' to $AcctContactExt
  end-if

  uppercase $C_Street
  uppercase $C_Street2
  uppercase $C_City
  uppercase $C_Province
  uppercase $C_Country
  uppercase $C_PostalCode
  uppercase $CompanyName
  uppercase $CoNameLineTwo
  uppercase $CoNameLineThree
  uppercase $ContactName
  uppercase $AcctContactName

  if &TX.Balance_Year > 2000
    move '0' to $YouthHireInd
  else
    do Get-Youth-Hire-Prg
  end-if

  add 1 to #RecordCount


  write 10 from                '331':3       !Pos   1 -   3
                        $ReportingID:15      !Pos   4 -  18
                        $CompanyName:30      !Pos  19 -  48
                      $CoNameLineTwo:30      !Pos  49 -  78
                    $CoNameLineThree:30      !Pos  79 - 108
                           $C_Street:30      !Pos 109 - 138
                          $C_Street2:30      !Pos 139 - 168
                             $C_City:28      !Pos 169 - 196
                         $C_Province:2       !Pos 197 - 198
                          $C_Country:3       !Pos 199 - 201
                       $C_PostalCode:10      !Pos 202 - 211
                    $AcctContactName:22      !Pos 212 - 233
                      $AcctContactAc:3       !Pos 234 - 236
                   $AcctContactPhone:7       !Pos 237 - 243
                     $AcctContactExt:4       !Pos 244 - 247
                            $CalYear:4       !Pos 248 - 251
                            $T4Count:7       !Pos 252 - 258
                       $SumTotIncome:13      !Pos 259 - 271
                      $SumCPPContrib:11      !Pos 272 - 282
                          $SumUIPrem:11      !Pos 283 - 293
                      $SumRPPContrib:11      !Pos 294 - 304
                       $SumIncomeTax:13      !Pos 305 - 317
                      $SumPensionAdj:13      !Pos 318 - 330
                                 $Sp:13      !Pos 331 - 343
                    $SumErCPPContrib:11      !Pos 344 - 354
                        $SumErUIPrem:11      !Pos 355 - 365
                         '000000000':9       !Pos 366 - 374
                         '000000000':9       !Pos 375 - 383
                                 $Sp:11      !Pos 384 - 394
                       $YouthHireInd:1       !Pos 395
                                 $Sp:5       !Pos 396 - 400


  if $FileType = 'D'
  write 20  from               '331':3       !Pos   1 -   3
                        $ReportingID:15      !Pos   4 -  18
                        $CompanyName:30      !Pos  19 -  48
                      $CoNameLineTwo:30      !Pos  49 -  78
                    $CoNameLineThree:30      !Pos  79 - 108
                           $C_Street:30      !Pos 109 - 138
                          $C_Street2:30      !Pos 139 - 168
                             $C_City:28      !Pos 169 - 196
                         $C_Province:2       !Pos 197 - 198
                          $C_Country:3       !Pos 199 - 201
                       $C_PostalCode:10      !Pos 202 - 211
                    $AcctContactName:22      !Pos 212 - 233
                      $AcctContactAc:3       !Pos 234 - 236
                   $AcctContactPhone:7       !Pos 237 - 243
                     $AcctContactExt:4       !Pos 244 - 247
                            $CalYear:4       !Pos 248 - 251
                            $T4Count:7       !Pos 252 - 258
                       $SumTotIncome:13      !Pos 259 - 271
                      $SumCPPContrib:11      !Pos 272 - 282
                          $SumUIPrem:11      !Pos 283 - 293
                      $SumRPPContrib:11      !Pos 294 - 304
                       $SumIncomeTax:13      !Pos 305 - 317
                      $SumPensionAdj:13      !Pos 318 - 330
                                 $Sp:13      !Pos 331 - 343
                    $SumErCPPContrib:11      !Pos 344 - 354
                        $SumErUIPrem:11      !Pos 355 - 365
                         '000000000':9       !Pos 366 - 374
                         '000000000':9       !Pos 375 - 383
                                 $Sp:11      !Pos 384 - 394
                       $YouthHireInd:1       !Pos 395
                                 $Sp:5       !Pos 396 - 400

   end-if

  add #T4Count to #TotalT4Count
  do Print-Summary-Data
  do Initialize-Summary
  let $Error-Report = 'N'

end-procedure


begin-procedure Initialize-Summary

   move 0 to #SumTotIncome
   move 0 to #SumCPPContrib
   move 0 to #SumErCPPContrib
   move 0 to #SumQPPContrib
   move 0 to #SumUIPrem
   move 0 to #SumErUIPrem
   move 0 to #SumRPPContrib
   move 0 to #SumIncomeTax
   move 0 to #SumCPPEarnings
   move 0 to #SumPensionAdj
   move 0 to #T4Count
   move '0' to $YouthHireInd

   move ' ' to $CompanyName
   move ' ' to $CoNameLineTwo
   move ' ' to $CoNameLineThree
   move ' ' to $C_Street
   move ' ' to $C_Street2
   move ' ' to $C_City
   move ' ' to $C_Province
   move ' ' to $C_Country
   move ' ' to $C_PostalCode

end-procedure


begin-procedure Get-Youth-Hire-Prg

begin-SELECT

TT.COMPANY
TT.YOUTH_HIRE_PGM_IND

  if &TT.YOUTH_HIRE_PGM_IND = 'Y'
    move '1' to $YouthHireInd
  end-if

FROM PS_T4_REPTNG_TBL TT
WHERE TT.COMPANY = $Company
  AND TT.EFFDT   =
      (SELECT MAX(TT1.EFFDT)
       FROM  PS_T4_REPTNG_TBL TT1
       WHERE TT1.COMPANY = TT.COMPANY
         AND TT1.EFFDT  <= $AsOfDate)
end-SELECT

end-procedure


begin-procedure Count-ReportingID-Numbers

  move 0     to #SummaryCounter
  move 'xxx' to $PriorID

begin-SELECT

SL.REPORTING_ID

  if &SL.Reporting_ID <> $PriorID
     add 1 to #SummaryCounter
     move &SL.Reporting_ID to $PriorID
  end-if

FROM PS_CAN_YE_SLIP SL
WHERE TAXFORM_ID = 'T'
AND   CALENDAR_YEAR = &TX.Balance_Year
AND   YE_SLIP_PROCESS = 'O'
ORDER BY REPORTING_ID ASC

end-SELECT

end-procedure

begin-procedure Prompts

  while $FileType = ''
    input $FileType 'Tape, cartridge or diskette file? (T, C, D or Q to quit)'
    uppercase $FileType
    if INSTR('TDCQ',$FileType,1) = 0
      display ' '
      display '***** Enter T, D, C or Q *****'
      display ' '
      move '' to $FileType
    end-if
  end-while
end-procedure

begin-procedure Convert-Parameters

  move $RC_CAN_YE.Reporting_Medium to $FileType

  if $RC_CAN_YE.Reporting_Medium = 'D'
       move $RC_CAN_YE.Diskette_Type    to $DisketteType
  end-if

end-procedure

begin-procedure Evaluate-File-Type

  evaluate $FileType
    when = 'Q'
      stop

    when = 'D'
      if $Prcs_Process_Instance = ''
         do Get-Diskette-Format
      end-if

  end-evaluate
end-procedure

begin-procedure Print-Summary-Data

  if $Error-Report = 'Y'
    new-page
  end-if

  move '331' to $TypeCode

  divide 100 into #SumTotIncome
  do Format-Number(#SumTotIncome, $SumTotIncome, '9999999999999.99')
  divide 100 into #SumCPPContrib
  do Format-Number(#SumCPPContrib, $SumCPPContrib, '9999999999999.99')
  divide 100 into #SumErCPPContrib
  do Format-Number(#SumErCPPContrib, $SumErCPPContrib, '9999999999999.99')
  divide 100 into #SumUIPrem
  do Format-Number(#SumUIPrem, $SumUIPrem, '9999999999999.99')
  divide 100 into #SumErUIPrem
  do Format-Number(#SumErUIPrem, $SumErUIPrem, '9999999999999.99')
  divide 100 into #SumRPPContrib
  do Format-Number(#SumRPPContrib, $SumRPPContrib, '9999999999999.99')
  divide 100 into #SumIncomeTax
  do Format-Number(#SumIncomeTax, $SumIncomeTax, '9999999999999.99')
  divide 100 into #SumPensionAdj
  do Format-Number(#SumPensionAdj, $SumPensionAdj, '9999999999999.99')

  do Format-Number(#T4Count, $T4Count, '999999')

     print    'T4 Summary Data '           (+1,1)
     print    'TypeCode '                  (+1,1)
     print    $TypeCode                    (0,60)
     print    'Business Number'            (+1,1)
     print    $ReportingID                 (0,60)
     print    'Total Slips'                (+1,1)
     print    $T4Count                     (0,60)
     print    'Total Income - Box 14'      (+1,1)
     print    $SumTotIncome                (0,60)
     print    'Total Ee CPP Contrib - Box 16'  (+1,1)
     print    $SumCPPContrib               (0,60)
     print    'Total Ee EI Prem - Box 18'   (+1,1)
     print    $SumUIPrem                   (0,60)
     print    'Total RegPP Contrib - Box 20' (+1,1)
     print    $SumRPPContrib               (0,60)
     print    'Total IncomeTax - Box 22'    (+1,1)
     print    $SumIncomeTax                (0,60)
     print    'Total Pension Adj - Box 52'  (+1,1)
     print    $SumPensionAdj               (0,60)
     print    'Total Er CPP Contrib'       (+1,1)
     print    $SumErCPPContrib             (0,60)
     print    'Total Er EI Prem'           (+1,1)
     print    $SumErUIPrem                 (0,60)
     print    'Federal Youth Hires Program Indicator' (+1, 1)
     print    $YouthHireInd                (0,60)

     new-page

end-procedure

begin-procedure Check-Postal-Code

  find ' ' in $PostalCd 0 #space_loc
  if #space_loc > 0 and #space_loc < 5
     let $Postal1 = substr($PostalCd, 1, #space_loc)
     let #start = #space_loc + 2
     let $Postal2 = substr($PostalCd, #start, 3)
     let $PostalCd = $Postal1 || $Postal2
  end-if

end-procedure

begin-procedure Error-Report

  let $EmployeeId = rtrim(&E.Emplid, ' ')
  print 'Negative value found for Emplid'      (+2,2)
  print $EmployeeId                            (0,+2)
  print '.  No T4 record created.'             (0,+1)

  let $Error-Report = 'Y'
end-procedure


#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getfrmat.sqc'  !Get-Diskette-Format procedure
#Include 'rotname1.sqc'  !Rotate-Name procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#ifdef PRCSSCHD
#Include 'ctxrctl1.sqc'  !Get-Canadian-Year-End Parameters
#Include 'stdapi.sqc'    !Update Process API
#Include 'txrnctl1.sqc'  !Process Scheduler Run Controls
#endif
