!***********************************************************************
!  HRLAY008:  Reinstatement Report                                     *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:13:32:59                                 *
!       $Release:  HR9                                                 *
!      $Revision:  101                                                 *
!***********************************************************************
! Description: This report provides a list of all employees who have   *
!             been laid off, but are being considered for reinstatement*
!***********************************************************************

#include 'setenv.sqc'   !Set environment


!***********************************************************************
!-----------------Setup Section----------------------------------------*
!Description: This section sets the Page Size and Font Size            *
!***********************************************************************
Begin-Setup
#include 'setupdb.sqc'
       page-size 88 131

       declare printer
       type          = HPLASERJET
       orientation   = portrait
       lines-inch    = 8
       chars-inch    = 18.6
       top-margin    = 0.30
       left-margin   = 0.25
       font          = 5
       point-size    = 7
       lines-inch    = 8
End-Setup



!***********************************************************************
!-----------------Program Section--------------------------------------*
!***********************************************************************
Begin-Program
 do STDAPI-INIT
 
 do Init-DateTime
 do Get-Current-DateTime
 do Find-Date-Format
 
  evaluate $DT_FMT
      when = 'M'
           do Format-DateTime($AsOfToday,$currentdate,{DEFMDY},'','')
           break
      when = 'D'
           do Format-DateTime($AsOfToday,$currentdate,{DEFDMY},'','')
           break
      when-Other
           do Format-DateTime($AsOfToday,$currentdate,{DEFYMD},'','')
           break
     end-evaluate
     
 !do Format-DateTime ($AsOfToday, $currentdate, {DEFDATE},'','')
  
 do Get-RP-Lbl
 
 do Print-Report-Labels
 do Select-Report-Data
 !Do Delete-TempTable
 do STDAPI-TERM
 End-Program


!**********************************************************************!
!Heading Section: This section Prints the Header of this Report        !
!**********************************************************************!
Begin-Heading 7
       let $mergereportname = $lbl_Reportname || ' ' || $lbl_reinlst
       print $mergereportname                      (1,1)
        print $lbl_Peoplesoft                      (,1) center
        print $lbl_Pageno                      (1,120)
        page-number ()
        print $lbl_Rundate                      (2,120)
        print $currentdate () !$current-date () edit 'dd/mm/yyyy'
        print $lbl_reinreport                      (2,48) 
        print $lbl_Runtime                     (3,120)
        print $current-date () edit 'HH:MI:SS'
        print $lbl_ProcessInstance (4,1)
        print #prcs_instance (,21) EDIT (8888888888)
        print $lbl_Roster (6,1) !11
        print $LBR_ROST_ID (6,21)
        print $lbl_Descr (7,1)   !50
        print $rost_descr (7,21)
        
End-Heading


!*************************************************************************!
! Procedure: Find-Date-Format                                             !
! Description: This procedure gets the date format as per user preference !
!*************************************************************************!
begin-procedure Find-Date-Format

let $REC_FOUND = 'N'
begin-SELECT
A.USER_OPTION_VALUE
  let $REC_FOUND = 'Y'
FROM PSUSERPRSNLOPTN A

WHERE A.OPRID = $prcs_oprid
  AND A.USEROPTN = 'DFRMT'
end-SELECT

IF $REC_FOUND = 'N'
  let $DT_FMT = 'M'
ELSE
  LET $DT_FMT = &A.USER_OPTION_VALUE
  LET $DT_FMT = RTRIM($DT_FMT,' ')
END-If

end-procedure !Find-Date-Format



!**************************************************************************!
! Procedure: Print-Report-Labels                                           !
! Description:This procedure prints report labels                          !
!**************************************************************************!
Begin-Procedure Print-Report-Labels

print $lbl_Emplid (+1,1) !11
print $lbl_EmplName (,14) !50
print $lbl_Empl (,66) !4
print $lbl_EffDate (,73) !10
print $lbl_JobCode (,84) !8
print $lbl_Action (,93) !6
print $lbl_ActionReason (,101) !30


print $lbl_Emplrec (+1,66) !4

End-Procedure !Print-Report-Labels




!**************************************************************************!
! Procedure: Select-Report-Data                                            !
! Description:This procedure selects report data from the Temp table       !
!**************************************************************************!
Begin-Procedure Select-Report-Data


begin-select
PROCESS_INSTANCE
 LET #prcs_instance = &PROCESS_INSTANCE
FROM PS_HR_RUN_CNTL_REI
WHERE OPRID = $prcs_oprid
AND RUN_CNTL_ID = $prcs_run_cntl_id
end-select

!begin-select
!PROCESS_INSTANCE
! LET #prcs_instance = &PROCESS_INSTANCE
!FROM PS_HR_ROSTEXEC_TMP
!end-select

BEGIN-SELECT
LBR_ROSTER_ID !(+1,1) On-Break before=Roster-Heading print=never level=1
EMPLID  
EMPL_RCD 
EFFSEQ
ACTION 
ACTION_REASON 
LBR_REINST_DT
 let $LBR_ROST_ID = &LBR_ROSTER_ID
 LET $ACTION = &ACTION
 LET $ACTION_REASON = &ACTION_REASON
 Do Select-Report-OtherData
 Do Print-Report-Data
FROM PS_HR_ROSTEXEC_TMP
WHERE PROCESS_INSTANCE = #prcs_instance
ORDER BY LBR_ROSTER_ID 
END-SELECT
End-Procedure !Select-Report-Data




!**************************************************************************!
! Procedure: Roster-Heading                                                !
! Description: Procedure which prints the Roster Id and descr alone.       !
!              This is written as a separate procedure to implement Control!
!              break processing on Roster ID field.                        !
!**************************************************************************!
!Begin-Procedure Roster-Heading
!print $lbl_Roster (+2,1) !11
!print &LBR_ROSTER_ID (6,21)

!BEGIN-SELECT
!DESCR50
!FROM PS_HR_LBR_ROSTDATA
!WHERE LBR_ROSTER_ID = &LBR_ROSTER_ID
!AND EFFDT = (SELECT MAX(EFFDT)
!             FROM PS_HR_LBR_ROSTDATA
!             WHERE LBR_ROSTER_ID = &LBR_ROSTER_ID
!             AND EFFDT <= $AsOfToday)
!END-SELECT

!print $lbl_Descr (+1,1)   !50
!print &DESCR50 (7,21)
!End-Procedure !Roster-Heading




!**************************************************************************!
! Procedure: Select-Report-OtherData                                       !
! Description: Procedure which selects Report data from other tables       !
!**************************************************************************!
Begin-Procedure Select-Report-OtherData

!----------Select the Roster Description-------------------!
!-------Description is 1st fetched from related language table. If the Login language = Base Language then
!-------the description would not be present in the Related Lang table, in which case it should be 
!-------fetched from the Base table
BEGIN-SELECT
HLRL.DESCR50
 let $rost_descr = &HLRL.DESCR50 
FROM PS_HR_LBR_ROST_LNG HLRL
WHERE LBR_ROSTER_ID = $LBR_ROST_ID
and LANGUAGE_CD = $curr_language_cd
AND EFFDT = (SELECT MAX(EFFDT)
             FROM PS_HR_LBR_ROST_LNG
             WHERE LBR_ROSTER_ID = $LBR_ROST_ID
             and LANGUAGE_CD = $curr_language_cd
             AND EFFDT <= $AsOfToday)
END-SELECT

IF $rost_descr =''
BEGIN-SELECT
HLR.DESCR50
  LET $rost_descr = &HLR.DESCR50
FROM PS_HR_LBR_ROSTDATA HLR
WHERE LBR_ROSTER_ID = $LBR_ROST_ID
AND EFFDT = (SELECT MAX(EFFDT)
             FROM PS_HR_LBR_ROSTDATA
             WHERE LBR_ROSTER_ID = $LBR_ROST_ID
             AND EFFDT <= $AsOfToday)
END-SELECT
END-IF



!------Select which fetches the Job Code of the employee-----!
BEGIN-SELECT
JB.JOBCODE
JB.EFFDT
JB.ACTION
JB.ACTION_REASON
!JB.EFFDT

 !---The Action and Action Reason need not be REC always. There may be a case where we try to
 !---Recall an employee who has not been laid off, by manually adding that employee in the Recall Roster.
 !---In this scenario there wouldn't be any Job data row with Rehired status as the employee is not Laid 
 !---off atall.In this case the Action and Action reason shld be blank
 LET $ACTION_JOB = &JB.ACTION
 LET $ACTION_REASON_JOB = &JB.ACTION_REASON
 
FROM PS_JOB JB
WHERE EMPLID = &EMPLID
AND EMPL_RCD = &EMPL_RCD
AND EFFDT = (SELECT MAX(EFFDT)
             FROM PS_JOB
             WHERE EMPLID = JB.EMPLID
             AND EMPL_RCD = JB.EMPL_RCD)
AND EFFSEQ = (SELECT MAX(EFFSEQ)
              FROM PS_JOB
              WHERE EMPLID = JB.EMPLID
              AND EMPL_RCD = JB.EMPL_RCD
              AND EFFDT = JB.EFFDT)
AND ACTION = $ACTION
AND ACTION_REASON = $ACTION_REASON
END-SELECT


!------Select which fetches the name of the employee---------!
BEGIN-SELECT
NAME
FROM PS_PERSON_NAME
WHERE EMPLID = &EMPLID
!AND EFFDT = (SELECT MAX(EFFDT)
!             FROM PS_NAMES_VW
!             WHERE EMPLID = &EMPLID
!             AND EFFDT <= $AsOfToday)
END-SELECT



!-----SELECT which fetches the Action Reason description for a Action-Action Reason--------!
!-------Description is 1st fetched from related language table. We make use of the rellang.sqc
!-------which has appropriate procedure to fetch the description from the Related Lang table...
!-------If the descr is not present in the Related Lang table then it should be fetched from the Base table
#define ACTN_REASON_VW
Begin-select
RSN.DESCR
   Let $rsn_descr = &RSN.DESCR
FROM PS_ACTN_REASON_VW RSN
WHERE ACTION = $ACTION_JOB
AND ACTION_REASON = $ACTION_REASON_JOB
AND EFF_STATUS = 'A'
End-select


Do Get_Related_ACTN_REASON_VW($ACTION_JOB,$ACTION_REASON_JOB)

if $ACTN_REASON_VW-DESCR <> ''
 let $rsn_descr = $ACTN_REASON_VW-DESCR
end-if

End-Procedure !Select-Report-OtherData



!**************************************************************************!
! Procedure: Print-Report-Data                                             !
! Description: Procedure which prints the Report data                      !
!**************************************************************************!
Begin-Procedure Print-Report-Data

LET #LINENO = #current-line
if #LINENO = 8
Do Print-Report-Labels
end-if

print &EMPLID (+1,1) 
print &NAME (,14) 
print &EMPL_RCD (,66)

 evaluate $DT_FMT
     when = 'M'
          do Format-DateTime(&JB.EFFDT,$EFFDT,{DEFMDY},'','')
          break
     when = 'D'
          do Format-DateTime(&JB.EFFDT,$EFFDT,{DEFDMY},'','')
          break
     when-Other
          do Format-DateTime(&JB.EFFDT,$EFFDT,{DEFYMD},'','')
          break
     end-evaluate

 !do Format-DateTime(&JB.EFFDT, $EFFDT, {DEFDATE}, '', '')
 
 
print $EFFDT (,73) 
print &JB.JOBCODE (,84)
print $ACTION_JOB (,93) 
print $rsn_descr (,101) 

End-Procedure !Print-Report-Data




!***************************************************************************************!
! Procedure: Delete-TempTable                                                           !
! Description: Procedure which deletes the Temp table data for the process instance id  !
!***************************************************************************************!
!Begin-Procedure Delete-TempTable
!BEGIN-SQL
!DELETE FROM PS_HR_ROSTEXEC_TMP
!WHERE PROCESS_INSTANCE = #prcs_instance
!END-SQL
!End-Procedure !Delete-TempTable




!***********************************************************************
!-----------------Procedure: Getting Report Labels---------------------*
!Description: This Procedure gets the Report labels from the Database. *
!***********************************************************************
Begin-Procedure Get-RP-Lbl

let $ReportID = 'HR_UHRLY'
do Init_Report_Translation($ReportID,$curr_language_cd) 
do Append_Report_Translation ($ReportID)


do Get_Field_Information ('HR_UHRLY','HR_REIN_LST',$lbl_reinlst,#DW1)
do Get_Field_Information ('HR_UHRLY','REPORTNAME',$lbl_Reportname,#DW1)
do Get_Field_Information ('HR_UHRLY','PEOPLESOFT',$lbl_Peoplesoft,#DW1)
do Get_Field_Information ('HR_UHRLY','HR_REIN_RPT',$lbl_reinreport,#DW1)
do Get_Field_Information ('HR_UHRLY','PAGE_NO',$lbl_Pageno,#DW1)
do Get_Field_Information ('HR_UHRLY','RUN DATE',$lbl_Rundate,#DW1)
do Get_Field_Information ('HR_UHRLY','RUN_TIME',$lbl_Runtime,#DW1)
do Get_Field_Information ('HR_UHRLY','PROCESS_INSTANCE',$lbl_ProcessInstance,#DW1)


do Get_Field_Information ('HR_UHRLY','ROSTER_ID',$lbl_Roster,#DW1)
!do Get_Field_Information ('HR_UHRLY','ID',$lbl_ID,#DW1)
do Get_Field_Information ('HR_UHRLY','ROSTERDESC',$lbl_Descr,#DW1)

do Get_Field_Information ('HR_UHRLY','EMPLOYEE_ID',$lbl_Emplid,#DW1)
do Get_Field_Information ('HR_UHRLY','EMPLOYEE',$lbl_EmplName,#DW1)
do Get_Field_Information ('HR_UHRLY','EMPL',$lbl_Empl,#DW1)
do Get_Field_Information ('HR_UHRLY','REC',$lbl_Emplrec,#DW1)
do Get_Field_Information ('HR_UHRLY','EFF_DATE',$lbl_EffDate,#DW1)


do Get_Field_Information ('HR_UHRLY','ACTION',$lbl_Action,#DW1)
do Get_Field_Information ('HR_UHRLY','ACTION_REASON',$lbl_ActionReason,#DW1)
do Get_Field_Information ('HR_UHRLY','JOBCODE1',$lbl_JobCode,#DW1)

End-Procedure !Get-RP-Lbl




       
!***********************************************************************!
!-----------------------------SQCs--------------------------------------!
!***********************************************************************!
#include 'stdapi.sqc'      !Routine to update run status
#include 'prcsapi.sqc'
#include 'prcsdef.sqc'
#include 'hrsecty.sqc'
#Include 'curdttim.sqc'    !Get-Current-DateTime procedure
#Include 'datetime.sqc'    !Routines for date and time formatting
#Include 'number.sqc'      !Routines to format numbers
#Include 'sqrtrans.sqc'

#include 'prcslng.sqc'   !Gives Language Code
#include 'rellang.sqc'   !Gives Description from Related Lang tables