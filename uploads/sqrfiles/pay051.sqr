!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:04:37:59                                 !
!       $Release:  HR9                                                 !
!      $Revision:  102                                                 !
!                                                                      *
!***********************************************************************
! -----------------------------------------------------------------------------
! Report ID:     PAY051.SQR
!
! Description:   Prints the Employee Tips Allocation information.
!
! Purpose:       For audit and/or control purposes.
!
! Created:       24-Sep-1997
!
! Run Frequency: On request.
!
! Input:         PeopleSoft database & user parameters.
!
! Output:
!   ¯  Report - Audit/Control Report (PAY051.LIS)
!
! NOTES:
! ------
!   (1)  Specifications based on Tips Project (summer 1997)
!
! ---------------------------------------------------------------------
!                      <<<  MAINTENANCE LOG  >>>
! ---------------------------------------------------------------------
! |   WHEN    |  WHO  |  Maintenance performed?
! ---------------------------------------------------------------------
! | dd-mmm-yy |  ???  |
! |           |       |
! ---------------------------------------------------------------------
! \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
! /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\

#Include 'setenv.sqc'                  ! Set environment

#Include 'setup32.sqc'                 ! Printer Controls

BEGIN-REPORT                           ! SQR BEGIN Statement

  DO INIT-REPORT                       ! Start the SQR
  DO STDAPI-TERM                       ! End the SQR

END-REPORT                             ! SQR END Statement

! *******************************************************************
! ** Section Begin:  DEFINES <Standard SQR>
! *******************************************************************

#DEFINE  COL01 001     ! Emplid
#DEFINE  COL02 018     ! Name
#DEFINE  COL03 064     ! Gross Tip Hours
#DEFINE  COL04 078     ! Gross Receipts
#DEFINE  COL05 092     ! Gross Tips
#DEFINE  COL06 106     ! Total Allocation
#DEFINE  COL07 120     ! Previous Allocation
#DEFINE  COL08 134     ! Current Allocation
! *******************************************************************
! ** Section End:  DEFINES <Standard SQR>
! *******************************************************************

! *******************************************************************
! ** Section Begin:  BEGIN-HEADING  <STANDARD SQR>
! *******************************************************************

BEGIN-HEADING   9                        ! Begin Headings

#INCLUDE 'stdhdg02.sqc'                  ! Standard Heading #02

  PRINT 'Post Dt '                       (+2,#RPTCOL,)
  PRINT $POST_DT                         (,+1,)

  PRINT 'Business Unit '                (+1,1,)
  PRINT $BU                              (,+1,)
  PRINT ' -'                             (,+1,)
  PRINT $BU_DESCR                        (,+1,)

  PRINT 'Tips Establishment '            (+1,1,)
  PRINT $ESTAB                           (,+1,)
  PRINT ' -'                             (,+1,)
  PRINT $ESTABDESCR                      (,+1,)
  PRINT 'EmplID   /  Rcd#'               (+2,{COL01},)
  PRINT 'Name        '                   (,{COL02},)
  PRINT ' Grs Tip Hrs'                   (,{COL03},)
  PRINT 'Grs Receipts'                   (,{COL04},)
  PRINT '  Gross Tips'                   (,{COL05},)
  PRINT ' Total Alloc'                   (,{COL06},)
  PRINT '  Prev Alloc'                   (,{COL07},)
  PRINT '   Cur Alloc'                   (,{COL08},)
  PRINT '----------------'               (+1,{COL01},)
  PRINT '------------------------------' (,{COL02},)
  PRINT '-------------'                  (,{COL03},)
  PRINT '------------'                   (,{COL04},)
  PRINT '------------'                   (,{COL05},)
  PRINT '------------'                   (,{COL06},)
  PRINT '------------'                   (,{COL07},)
  PRINT '------------'                   (,{COL08},)

END-HEADING     !  End Headings

! *******************************************************************
! ** Section End:  BEGIN-HEADING  <STANDARD SQR>
! *******************************************************************


! *******************************************************************
! ** Paragraph Begin:  INIT-REPORT
!    Called by the SQR-required section [BEGIN-REPORT]
! *******************************************************************

BEGIN-PROCEDURE INIT-REPORT            ! Main Procedure Section

  MOVE 'PAY051.SQR'                       TO $REPORTID
  MOVE 'Allocation by Employee Report'       TO $REPORTTITLE
  LET $COMPANY = 'CO-1'                ! W/S load for later logic.

  DO GET-CURRENT-DATETIME

  DISPLAY $REPORTID
  DISPLAY $REPORTTITLE

  DISPLAY ' '

  DISPLAY 'CURRENT DATE : ' NOLINE
  DISPLAY $ASOFTODAY

  DISPLAY 'CURRENT TIME : ' NOLINE
  DISPLAY $ASOFNOW

  DISPLAY ' '

  DO INIT-DATETIME                     ! Perform Date/Time Proc

  DO INIT-NUMBER                       ! Initialize Number

  DO STDAPI-INIT                       ! Standard Initialize

  DO SELECT-PARAMETERS                 ! Standard Select Parameters

  DISPLAY 'COMPANY      : ' NOLINE
  DISPLAY $RC_TIP.COMPANY
  DISPLAY $RC_TIP.POST_DT
  DO FORMAT-DATETIME($RC_TIP.POST_DT, $OUT, {DEFDATE}, '', '')
  LET $POST_DT = $OUT
  DISPLAY 'ALLOCATION DT: ' NOLINE
  DISPLAY $POST_DT
  DISPLAY ' '

  LET $COMPANY  = &RC_TIP.COMPANY  ! Load the lookup Company data
  LET $ASOFDATE = $RC_TIP.POST_DT  ! Load the lookup date
  DO GET-COMPANY-DATA              ! Logic to get Company name

  DO REPORT                            ! MAIN PARAGRAPH

END-PROCEDURE                          ! End the Init Procedure

! *******************************************************************
! ** Paragraph End:  INIT-REPORT
! *******************************************************************


! *******************************************************************
! ** Paragraph Begin:  REPORT
!    This is the main paragraph of the SQR.
! *******************************************************************

BEGIN-PROCEDURE REPORT


BEGIN-SELECT

TAE.POST_DT                          ! Input Date

TAE.COMPANY                          ! Company

TAE.BUSINESS_UNIT


TAE.TIPS_ESTAB

  IF $1   <> '1'                    ! First time?
    LET $1  = '1'                   ! Load the W/S
  ELSE

    IF ($BU <> &TAE.BUSINESS_UNIT OR $ESTAB <> &TAE.TIPS_ESTAB )
      DO TIPS-ESTAB-CHANGE            ! Perform the procedure
      IF $BU <> &TAE.BUSINESS_UNIT
        DO BUS-UNIT-CHANGE
      END-IF
      NEW-PAGE
    END-IF

  END-IF

  IF  $BU <> &TAE.BUSINESS_UNIT     ! Load the lookup value
    LET $BU =  &TAE.BUSINESS_UNIT   ! Load the lookup value
    DO Get-Business-Unit-Name       ! Perform the procedure
  END-IF

  IF  $ESTAB <> &TAE.TIPS_ESTAB     ! Load the lookup value
    LET $COMPANY  = &RC_TIP.COMPANY ! Load the lookup Company data
    LET $ASOFDATE = $RC_TIP.POST_DT ! Load the lookup date
    LET $ESTAB =  &TAE.TIPS_ESTAB   ! Load the lookup value
    DO Get-Establishment-Name       ! Perform the procedure
  END-IF

TAE.EMPLID                (+1,{COL01},)
TAE.EMPL_RCD             (,+1,)   EDIT 999
PD.NAME                   (,{COL02},)
TAE.GRS_TIP_HRS           (,{COL03},)  EDIT  $9,999,999.99
TAE.GRS_RCPTS             (,{COL04},)  EDIT  $9,999,999.99
TAE.GRS_TIPS              (,{COL05},)  EDIT  $9,999,999.99
TAE.TOT_ALLOCATION        (,{COL06},)  EDIT  $9,999,999.99
TAE.PREV_ALLOCATION       (,{COL07},)  EDIT  $9,999,999.99
TAE.CUR_ALLOCATION        (,{COL08},)  EDIT  $9,999,999.99

  LET #TE_GRS_TIP_HRS      = #TE_GRS_TIP_HRS       + &TAE.GRS_TIP_HRS
  LET #TE_GRS_RCPTS        = #TE_GRS_RCPTS         + &TAE.GRS_RCPTS
  LET #TE_GRS_TIPS         = #TE_GRS_TIPS          + &TAE.GRS_TIPS
  LET #TE_TOT_ALLOCATION   = #TE_TOT_ALLOCATION    + &TAE.TOT_ALLOCATION
  LET #TE_PREV_ALLOCATION  = #TE_PREV_ALLOCATION   + &TAE.PREV_ALLOCATION
  LET #TE_CUR_ALLOCATION   = #TE_CUR_ALLOCATION    + &TAE.CUR_ALLOCATION

FROM
      PS_TIPS_ALLOC_EMPL TAE,
      PS_NAMES           PD

WHERE
      TAE.POST_DT = $RC_TIP.POST_DT    ! Filter - Post Date
  AND TAE.COMPANY  =  $RC_TIP.COMPANY  ! Filter - Company
  AND TAE.EMPLID   =  PD.EMPLID
  AND PD.NAME_TYPE = 'PRI'
  AND PD.EFFDT =
      (SELECT MAX(PX.EFFDT)
       FROM   PS_NAMES PX
       WHERE  PX.EMPLID    = PD.EMPLID
         AND  PX.NAME_TYPE = PD.NAME_TYPE
         AND  PX.EFFDT    <= $ASOFDATE)

ORDER BY
      TAE.COMPANY,
      TAE.BUSINESS_UNIT,
      TAE.TIPS_ESTAB,
      TAE.POST_DT,
      PD.NAME,
      TAE.EMPLID,
      TAE.EMPL_RCD

END-SELECT

 IF $1   <> '1'                    ! First time?
  LET $COMPANY = $RC_TIP.COMPANY
  PRINT '***********  NO DATA FOR REPORT  ************' (+3,{COL01},)
  DISPLAY '***********  NO DATA FOR REPORT  ************'
 ELSE
  DO TIPS-ESTAB-CHANGE
  DO BUS-UNIT-CHANGE

  PRINT 'Grand Totals' (+3,{COL01},)
  PRINT '============' (+1,{COL01},)

!  PRINT #TT_GRS_TIP_HRS        (+1,{COL03},)  EDIT  $9,999,999.99
!  PRINT #TT_GRS_RCPTS            (,{COL04},)  EDIT  $9,999,999.99
  PRINT #TT_GRS_TIPS            (+1,{COL05},)  EDIT  $9,999,999.99
  PRINT #TT_TOT_ALLOCATION       (,{COL06},)  EDIT  $9,999,999.99
  PRINT #TT_PREV_ALLOCATION      (,{COL07},)  EDIT  $9,999,999.99
  PRINT #TT_CUR_ALLOCATION       (,{COL08},)  EDIT  $9,999,999.99
 END-IF

END-PROCEDURE   !  REPORT

! *******************************************************************
! ** Paragraph End:  REPORT
! *******************************************************************


! *******************************************************************
! ** Paragraph Begin:  BUS-UNIT-CHANGE
!    This is called whenever the Business Unit changes in the main
!    select in the REPORT paragraph via an on-break command.
! *******************************************************************

BEGIN-PROCEDURE BUS-UNIT-CHANGE

  PRINT 'Business Unit Totals' (+2,{COL01},)

!  PRINT #BU_GRS_TIP_HRS          (,{COL03},)  EDIT  $9,999,999.99
!  PRINT #BU_GRS_RCPTS            (,{COL04},)  EDIT  $9,999,999.99
  PRINT #BU_GRS_TIPS              (,{COL05},)  EDIT  $9,999,999.99
  PRINT #BU_TOT_ALLOCATION        (,{COL06},)  EDIT  $9,999,999.99
  PRINT #BU_PREV_ALLOCATION       (,{COL07},)  EDIT  $9,999,999.99
  PRINT #BU_CUR_ALLOCATION        (,{COL08},)  EDIT  $9,999,999.99

  LET #TT_GRS_TIP_HRS      = #TT_GRS_TIP_HRS       + #BU_GRS_TIP_HRS
  LET #TT_GRS_RCPTS        = #TT_GRS_RCPTS         + #BU_GRS_RCPTS
  LET #TT_GRS_TIPS         = #TT_GRS_TIPS          + #BU_GRS_TIPS
  LET #TT_TOT_ALLOCATION   = #TT_TOT_ALLOCATION    + #BU_TOT_ALLOCATION
  LET #TT_PREV_ALLOCATION  = #TT_PREV_ALLOCATION   + #BU_PREV_ALLOCATION
  LET #TT_CUR_ALLOCATION   = #TT_CUR_ALLOCATION    + #BU_CUR_ALLOCATION

  LET #BU_GRS_TIP_HRS     = 0          ! Reset W/S
  LET #BU_GRS_RCPTS       = 0          ! Reset W/S
  LET #BU_GRS_TIPS        = 0          ! Reset W/S
  LET #BU_TOT_ALLOCATION  = 0          ! Reset W/S
  LET #BU_PREV_ALLOCATION = 0          ! Reset W/S
  LET #BU_CUR_ALLOCATION  = 0          ! Reset W/S


END-PROCEDURE   !  BUS-UNIT-CHANGE

! *******************************************************************
! ** Paragraph End:  BUS-UNIT-CHANGE
! *******************************************************************


! *******************************************************************
! ** Paragraph Begin:  TIPS-ESTAB-CHANGE
!    This is called whenever the Tips Establishment changes in the main
!    select in the REPORT paragraph via an on-break command.
! *******************************************************************

BEGIN-PROCEDURE TIPS-ESTAB-CHANGE

  PRINT 'Establishment Totals' (+2,{COL01},)

  PRINT #TE_GRS_TIP_HRS          (,{COL03},)  EDIT  $9,999,999.99
  PRINT #TE_GRS_RCPTS            (,{COL04},)  EDIT  $9,999,999.99
  PRINT #TE_GRS_TIPS             (,{COL05},)  EDIT  $9,999,999.99
  PRINT #TE_TOT_ALLOCATION       (,{COL06},)  EDIT  $9,999,999.99
  PRINT #TE_PREV_ALLOCATION      (,{COL07},)  EDIT  $9,999,999.99
  PRINT #TE_CUR_ALLOCATION       (,{COL08},)  EDIT  $9,999,999.99

  LET #BU_GRS_TIP_HRS      = #BU_GRS_TIP_HRS       + #TE_GRS_TIP_HRS
  LET #BU_GRS_RCPTS        = #BU_GRS_RCPTS         + #TE_GRS_RCPTS
  LET #BU_GRS_TIPS         = #BU_GRS_TIPS          + #TE_GRS_TIPS
  LET #BU_TOT_ALLOCATION   = #BU_TOT_ALLOCATION    + #TE_TOT_ALLOCATION
  LET #BU_PREV_ALLOCATION  = #BU_PREV_ALLOCATION   + #TE_PREV_ALLOCATION
  LET #BU_CUR_ALLOCATION   = #BU_CUR_ALLOCATION    + #TE_CUR_ALLOCATION

  LET #TE_GRS_TIP_HRS     = 0          ! Reset W/S
  LET #TE_GRS_RCPTS       = 0          ! Reset W/S
  LET #TE_GRS_TIPS        = 0          ! Reset W/S
  LET #TE_TOT_ALLOCATION  = 0          ! Reset W/S
  LET #TE_PREV_ALLOCATION = 0          ! Reset W/S
  LET #TE_CUR_ALLOCATION  = 0          ! Reset W/S


END-PROCEDURE   !  TIPS-ESTAB-CHANGE

! *******************************************************************
! ** Paragraph End:  TIPS-ESTAB-CHANGE
! *******************************************************************


! *******************************************************************
! *  Include Section
! *******************************************************************
! *    This is where the SQC's are  included into the body of
! *    the program.
! *    NOTE:  All SQC's are called in lower-case.  For UNIX
! *           environment, make sure that the actual SQC files
! *           are stored in lower-case, or they will not be found.
! *******************************************************************

#Include 'stdapi.sqc'    ! Standard API Procedure
#Include 'tiprnctl.sqc'  ! Tip Run Control
#Include 'curdttim.sqc'  ! Get-Current-DateTime procedure
#Include 'datetime.sqc'  ! Routines for date and time formatting
#Include 'number.sqc'    ! Routines to format numbers
#Include 'readxlat.sqc'  ! Routine to read the Translate Table
#Include 'getcodta.sqc'  ! Routine to retrieve Company data
#Include 'getempnm.sqc'  ! Routine to retrieve Employee Name

#Include 'getbunam.sqc'  ! Routine to retrieve the Business Unit Name
#Include 'getestnm.sqc'  ! Routine to retrieve the Establishment Name

! *******************************************************************
!                   <<<   END OF FILE   >>>
! *******************************************************************
