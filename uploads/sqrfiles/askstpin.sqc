!***********************************************************************
! ASKSTPIN.SQC:  Input logic for user for Salary Step Increments       *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:11:11:51                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

begin-procedure Ask-Salary-Step-Increments

  let $blankStr = ' '

  display ' '
  display 'Please enter SetId'
  display ' '
  input $Set maxlen=5 type=char 'Please enter SetId'
  uppercase $Set
  display 'Please enter Salary Admin Plan to be processed'
  display ' '
  input $SalPlan maxlen=4 type=char 'Please enter Salary Admin Plan'
  uppercase $SalPlan

  do Get-Start-Date

  move 'N' to $DateOK
  display ' '
  do Get-End-Date

  move 'N' to $DateOK
  display ' '
  do Set-Date

  if $deptid = ''
    let $whereStr = ' > ''' || $blankStr || ''' '
  else
    let $whereStr = ' = ''' || $deptid || ''' '
  end-if
  display ' '

  do Get-Audit-Indicators

end-procedure

begin-procedure Get-Start-Date

  while $DateOK <> 'Y'
     do Get-S-Date
  end-while

end-procedure


begin-procedure Get-S-Date

  move 'Y' to $DateOK

  display ''
  input $StartDt 'Please Enter Start of Date Range for Date-Based Increments ({Prompt-Date})' type=char

  if $StartDt <> ''
     move {PDelimiter} to $DDelimiter
     do Format-Datetime($StartDt, $StartDt, {Prompt-Mask},'','native')
     do Validate-Native-Date($StartDt,$DateOK)
  else
    move 'N' to $DateOK
  end-if

begin-SQL on-error=Bad-Date
UPDATE PSASOFDATE SET ASOFDATE = $StartDt
end-SQL

end-procedure

begin-procedure Get-End-Date

  while $DateOK <> 'Y'
     do Get-E-Date
  end-while

end-procedure

begin-procedure Get-E-Date

  move 'Y' to $DateOK

  display ''
  input $EndDt 'Please Enter End of Date Range for Date-Based Increments ({Prompt-Date})' type=char

  if $StartDt <> ''
     move {PDelimiter} to $DDelimiter
     do Format-Datetime($EndDt, $EndDt, {Prompt-Mask},'','native')
     do Validate-Native-Date($EndDt,$DateOK)
  else
    move 'N' to $DateOK
  end-if

begin-SQL on-error=Bad-Date
UPDATE PSASOFDATE SET ASOFDATE = $EndDt
end-SQL

end-procedure

begin-procedure Set-Date

  while $DateOK <> 'Y'
     do S-Date
  end-while

end-procedure


begin-procedure S-Date

  move 'Y' to $DateOK

  display ''
  input $EffDt 'Please Enter Effective Date ({Prompt-Date})' type=char

  if $EffDt <> ''
     move {PDelimiter} to $DDelimiter
     do Format-Datetime($EffDt, $EffDt, {Prompt-Mask},'','native')
     do Validate-Native-Date($EffDt,$DateOK)
  else
    move 'N' to $DateOK
  end-if

begin-SQL on-error=Bad-Date
UPDATE PSASOFDATE SET ASOFDATE = $EffDt
end-SQL

end-procedure

begin-procedure Bad-Date

  move 'N' to $DateOK
  input $junk 'This is an invalid date, please press enter to repeat prompt.'

end-procedure


begin-procedure Get-Audit-Indicators

  do Set-Audit-Step
  do Set-Audit-Step-Entry-Dt
  do Set-Audit-Comprate
  do Set-Audit-HourlyRt
  do Set-Audit-MonthlyRt
  do Set-Audit-AnnualRt
  do Set-Audit-ChangeAmt
  do Set-Audit-ChangePct

end-procedure


begin-procedure Set-Audit-Step

  while $Audit-Step-OK <> 'Y'
    do S-Audit-Step
  end-while

end-procedure


begin-procedure S-Audit-Step

 move 'Y'    to $Audit-Step-OK

 display ''
 input $Audit-Step maxlen=1 'Please Enter Audit Indicator for Step (Y/N)'
 type=char
 uppercase $Audit-Step

 if $Audit-Step <> 'Y' and $Audit-Step <> 'N'
   move 'N'  to $Audit-Step-OK
 end-if

end-procedure


begin-procedure Set-Audit-Step-Entry-Dt

  while $Audit-Step-Entry-Dt-OK <> 'Y'
    do S-Audit-Step-Entry-Dt
  end-while

end-procedure


begin-procedure S-Audit-Step-Entry-Dt

 move 'Y'    to $Audit-Step-Entry-Dt-OK

 display ''
 input $Audit-Step-Entry-Dt maxlen=1 'Please Enter Audit Indicator for Step Entry Date (Y/N)'
 type=char
 uppercase $Audit-Step-Entry-Dt

 if $Audit-Step-Entry-Dt <> 'Y' and $Audit-Step-Entry-Dt <> 'N'
   move 'N'  to $Audit-Step-Entry-Dt-OK
 end-if

end-procedure


begin-procedure Set-Audit-Comprate

  while $Audit-Comprate-OK <> 'Y'
    do S-Audit-Comprate
  end-while

end-procedure


begin-procedure S-Audit-Comprate

 move 'Y'    to $Audit-Comprate-OK

 display ''
 input $Audit-Comprate maxlen=1 'Please Enter Audit Indicator for Comprate (Y/N)'
 type=char
 uppercase $Audit-Comprate

 if $Audit-Comprate <> 'Y' and $Audit-Comprate <> 'N'
   move 'N'  to $Audit-Comprate-OK
 end-if

end-procedure


begin-procedure Set-Audit-HourlyRt

  while $Audit-HourlyRt-OK <> 'Y'
    do S-Audit-HourlyRt
  end-while

end-procedure


begin-procedure S-Audit-HourlyRt

 move 'Y'    to $Audit-HourlyRt-OK

 display ''
 input $Audit-HourlyRt maxlen=1 'Please Enter Audit Indicator for Hourly Rate (Y/N)'
 type=char
 uppercase $Audit-HourlyRt

 if $Audit-HourlyRt <> 'Y' and $Audit-HourlyRt <> 'N'
   move 'N'  to $Audit-HourlyRt-OK
 end-if

end-procedure


begin-procedure Set-Audit-MonthlyRt

  while $Audit-MonthlyRt-OK <> 'Y'
    do S-Audit-MonthlyRt
  end-while

end-procedure


begin-procedure S-Audit-MonthlyRt

 move 'Y'    to $Audit-MonthlyRt-OK

 display ''
 input $Audit-MonthlyRt maxlen=1 'Please Enter Audit Indicator for Monthly Rate (Y/N)'
 type=char
 uppercase $Audit-MonthlyRt

 if $Audit-MonthlyRt <> 'Y' and $Audit-MonthlyRt <> 'N'
   move 'N'  to $Audit-MonthlyRt-OK
 end-if

end-procedure


begin-procedure Set-Audit-AnnualRt

  while $Audit-AnnualRt-OK <> 'Y'
    do S-Audit-AnnualRt
  end-while

end-procedure


begin-procedure S-Audit-AnnualRt

 move 'Y'    to $Audit-AnnualRt-OK

 display ''
 input $Audit-AnnualRt maxlen=1 'Please Enter Audit Indicator for Annual Rate (Y/N)'
 type=char
 uppercase $Audit-AnnualRt

 if $Audit-AnnualRt <> 'Y' and $Audit-AnnualRt <> 'N'
   move 'N'  to $Audit-AnnualRt-OK
 end-if

end-procedure


begin-procedure Set-Audit-ChangeAmt

  while $Audit-ChangeAmt-OK <> 'Y'
    do S-Audit-ChangeAmt
  end-while

end-procedure


begin-procedure S-Audit-ChangeAmt

 move 'Y'    to $Audit-ChangeAmt-OK

 display ''
 input $Audit-ChangeAmt maxlen=1 'Please Enter Audit Indicator for Change Amount (Y/N)'
 type=char
 uppercase $Audit-ChangeAmt

 if $Audit-ChangeAmt <> 'Y' and $Audit-ChangeAmt <> 'N'
   move 'N'  to $Audit-ChangeAmt-OK
 end-if

end-procedure


begin-procedure Set-Audit-ChangePct

  while $Audit-ChangePct-OK <> 'Y'
    do S-Audit-ChangePct
  end-while

end-procedure


begin-procedure S-Audit-ChangePct

 move 'Y'    to $Audit-ChangePct-OK

 display ''
 input $Audit-ChangePct maxlen=1 'Please Enter Audit Indicator for Change % (Y/N)'
 type=char
 uppercase $Audit-ChangePct

 if $Audit-ChangePct <> 'Y' and $Audit-ChangePct <> 'N'
   move 'N'  to $Audit-ChangePct-OK
 end-if

end-procedure

#include 'validdt.sqc'
