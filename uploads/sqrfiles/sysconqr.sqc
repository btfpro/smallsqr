! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!**********************************************************************!
! SYSCONQRS: Connected Query Audit                                     !
!**********************************************************************!
!                                                                      !
!                                                                      !
!**********************************************************************!
!                                                                      !
!                                                                      !
!                                                                      !
! $Header:: /peopletools/SQR/sysconqrs.sqc                             !
!                                                                      !
!**********************************************************************!
!----------------------------------------------------------------------!
! Procedure: SYSCONQRS-Main                                            !        
! Descr:     System table audit against Connected Query tables         !                                    !
!----------------------------------------------------------------------!
 
begin-procedure SYSCONQRS-Main
    let $ErrorFound = 'N'
    let $AuditTitle = 'Connected Query Audit'
    do SysConqrs-01
    do SysConqrs-02
    do SysConqrs-03
    do SysConqrs-04
    do SysConqrs-05
    do SysConqrs-06
    do SysConqrs-07
    do SysConqrs-08
    do SysConqrs-09
    do SysConqrs-10
    
    if $ErrorFound = 'N'
        do PrintSummaryRecord
    end-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SysConqrs-01                                              !
! Descr:     System table audit against PSCONQRSMAP table:             !
!            Check consistency PSCONQRSMAP and PSCONQRSDEFN            !
!----------------------------------------------------------------------!
begin-procedure SysConqrs-01

    let $AuditDescr = '(SysConqrs-01) Connected Query definitions being used in '
      || 'PSCONQRSMAP table that do not exist in PSCONQRSDEFN table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Opr ID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Connected Query'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'Seq. Number'
    let #Column3len = lengthp($Column3Name)

    do RetrieveColumnLength('PSCONQRSMAP','OPRID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSMAP','CONQRSNAME',#Field2Len,$FieldType)    

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if
    
    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Start2 + #Column2len + 4)

    let #numofhdr        = 3

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
   
begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID                 &Conqrs01_OprId
A.CONQRSNAME            &Conqrs01_ConqrsName
A.SEQNUM                &Conqrs01_SeqNum


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Conqrs01_OprId            (+1, #Start1)    on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Conqrs01_ConqrsName       ( 0, #Start2)
   print &Conqrs01_SeqNum           ( 0, #Start3)
   

FROM PSCONQRSMAP A 
WHERE NOT EXISTS (SELECT 'X' FROM PSCONQRSDEFN B 
    WHERE A.OPRID = B.OPRID 
    AND A.CONQRSNAME = B.CONQRSNAME) 
ORDER BY 1, 2 
 
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SysConqrs-02                                              !
! Descr:     System table audit against PSCONQRSDEFN table:            !
!            Check consistency PSCONQRSDEFN and  PSCONQRSMAP           !
!----------------------------------------------------------------------!
begin-procedure SysConqrs-02

    let $AuditDescr = '(SysConqrs-02) Connected Query definitions being used in '
      || 'PSCONQRSDEFN table that do not exist in PSCONQRSMAP table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Opr ID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Connected Query'
    let #Column2len = lengthp($Column2Name)
    
    do RetrieveColumnLength('PSCONQRSMAP','OPRID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSMAP','CONQRSNAME',#Field2Len,$FieldType)    

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if
    
    let #Start1          = 1
    let #Start2          = (#Column1len + 4)    

    let #numofhdr        = 2

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
     
begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID                 &Conqrs02_OprId
A.CONQRSNAME            &Conqrs02_ConqrsName

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Conqrs02_OprId            (+1, #Start1)    on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Conqrs02_ConqrsName       ( 0, #Start2)
  

FROM PSCONQRSDEFN A 
WHERE NOT EXISTS (SELECT 'X' FROM PSCONQRSMAP B 
    WHERE A.OPRID = B.OPRID 
    AND A.CONQRSNAME = B.CONQRSNAME) 
ORDER BY 1 
 
end-SELECT

    do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SysConqrs-03                                              !
! Descr:     System table audit against PSCONQRSFLDREL table:          !
!            Check consistency PSCONQRSFLDREL and PSCONQRSMAP          !
!----------------------------------------------------------------------!
begin-procedure SysConqrs-03

    let $AuditDescr = '(SysConqrs-03) Connected Query definitions being used in '
      || 'PSCONQRSFLDREL table that do not exist in PSCONQRSMAP table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Opr ID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Connected Query'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'Seq. Number'
    let #Column3len = lengthp($Column3Name)
    let $Column4Name = 'Sel. Count'
    let #Column4len = lengthp($Column4Name)

    do RetrieveColumnLength('PSCONQRSMAP','OPRID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSMAP','CONQRSNAME',#Field2Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSMAP','SEQNUM',#Field3Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSFLDREL','SELCOUNT',#Field4Len,$FieldType)    

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if
    
    if #Fie3d1len > #Column3len
        let #Column3len = #Field3len
    end-if

    if #Field4len > #Column4len
        let #Column4len = #Field4len
    end-if
    
    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Start2 + #Column2len + 4)
    let #Start4          = (#Start3 + #Column3len + 4)

    let #numofhdr        = 4

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
    put $Column4Name #Start4 #Column4len into printarray(3)
   
begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID                 &Conqrs03_OprId
A.CONQRSNAME            &Conqrs03_ConqrsName
A.SEQNUM                &Conqrs03_SeqNum
A.SELCOUNT              &Conqrs03_SelCount

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Conqrs03_OprId            (+1, #Start1)    on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Conqrs03_ConqrsName       ( 0, #Start2)
   print &Conqrs03_SeqNum           ( 0, #Start3)
   print &Conqrs03_SelCount         ( 0, #Start4)   

FROM PSCONQRSFLDREL A 
WHERE NOT EXISTS (SELECT 'X' FROM PSCONQRSMAP B 
    WHERE A.OPRID = B.OPRID 
    AND A.CONQRSNAME = B.CONQRSNAME
    AND A.SEQNUM = B.SEQNUM) 
ORDER BY 1, 2, 3 
 
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SysConqrs-04                                              !
! Descr:     System table audit against PSCONQRSRUNCNTR table:         !
!            Check consistency PSCONQRSRUNCNTR and PSCONQRSDEFN        !
!----------------------------------------------------------------------!
begin-procedure SysConqrs-04

    let $AuditDescr = '(SysConqrs-04) Connected Query definitions being used in '
      || 'PSCONQRSRUNCNTR table that do not exist in PSCONQRSDEFN table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Opr ID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Run Control Id'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'Connected Query'
    let #Column3len = lengthp($Column3Name)
    
    do RetrieveColumnLength('PSCONQRSMAP','OPRID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSRUNCNTR','RUN_CNTL_ID',#Field2Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSMAP','CONQRSNAME',#Field3Len,$FieldType)     

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if
    
    if #Field3len > #Column3len
        let #Column3len = #Field3len
    end-if
    
    let #Start1          = 1
    let #Start2          = (#Column1len + 4) 
    let #Start3          = (#Start2 + #Column2len + 4)   

    let #numofhdr        = 3

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
     
begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID                 &Conqrs04_OprId
A.RUN_CNTL_ID           &Conqrs04_RunCntlId
A.CONQRSNAME            &Conqrs04_ConqrsName

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Conqrs04_OprId            (+1, #Start1)    on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Conqrs04_RunCntlId        ( 0, #Start2)
   print &Conqrs04_ConqrsName       ( 0, #Start3)
  

FROM PSCONQRSRUNCNTR A 
WHERE NOT EXISTS (SELECT 'X' FROM PSCONQRSDEFN B 
    WHERE A.CONQRSNAME = B.CONQRSNAME) 
ORDER BY 1 
 
end-SELECT

    do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure
 
 
!----------------------------------------------------------------------!
! Procedure: SysConqrs-05                                              !
! Descr:     System table audit against PSCONQRSRUNPRM table:          !
!            Check consistency PSCONQRSRUNPRM and PSCONQRSRUNCNTR      !
!----------------------------------------------------------------------!
begin-procedure SysConqrs-05

    let $AuditDescr = '(SysConqrs-05) Connected Query definitions being used in '
      || 'PSCONQRSRUNPRM table that do not exist in PSCONQRSRUNCNTR table: '

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Opr ID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Run Control Id'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'Connected Query'
    let #Column3len = lengthp($Column3Name)

    do RetrieveColumnLength('PSCONQRSMAP','OPRID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSRUNCNTR','RUN_CNTL_ID',#Field2Len,$FieldType)  
    do RetrieveColumnLength('PSCONQRSMAP','CONQRSNAME',#Field3Len,$FieldType)
    
    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if
    
    if #Field3len > #Column3len
        let #Column3len = #Field3len
    end-if
    
    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Start2 + #Column2len + 4)

    let #numofhdr        = 3

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
   
begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID                 &Conqrs05_OprId
A.RUN_CNTL_ID           &Conqrs05_RunCntlId
A.CONQRSNAME            &Conqrs05_ConqrsName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Conqrs05_OprId            (+1, #Start1)    on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Conqrs05_RunCntlId        ( 0, #Start2)
   print &Conqrs05_ConqrsName       ( 0, #Start3)
   

FROM PSCONQRSRUNPRM A 
WHERE NOT EXISTS (SELECT 'X' FROM PSCONQRSRUNCNTR B 
    WHERE A.OPRID = B.OPRID 
    AND A.RUN_CNTL_ID = B.RUN_CNTL_ID
    AND A.CONQRSNAME = B.CONQRSNAME) 
ORDER BY 1, 2 
 
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SysConqrs-06                                              !
! Descr:     System table audit against PSCONQRSMAP table:             !
!            Verify if queries used in PSCONQRSMAP exist in PSQRYDEFN  !
!----------------------------------------------------------------------!
begin-procedure SysConqrs-06

    let $AuditDescr = '(SysConqrs-06) Verify of Query definitions usage according to the following rules: '  
      || '1. Query definitions being used in PSCONQRSMAP table should exist in PSQRYDEFN table. '
      || '2. Only public Query definitions should be used for public Connected Query definitions. ' 
      || '3. Private Query definitions could be used only for private Connected Query definitions '
      || 'if they have the same owner.'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Opr ID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Connected Query'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'Seq. Number'
    let #Column3len = lengthp($Column3Name)
    let $Column4Name = 'Child Query'
    let #Column4len = lengthp($Column4Name)
    

    do RetrieveColumnLength('PSCONQRSMAP','OPRID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSMAP','CONQRSNAME',#Field2Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSMAP','SEQNUM',#Field3Len,$FieldType)    
    do RetrieveColumnLength('PSCONQRSMAP','QRYNAMECHILD',#Field4Len,$FieldType)    

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if
    
    if #Field3len > #Column3len
        let #Column3len = #Field3len
    end-if
       
    if #Field4len > #Column4len
        let #Column4len = #Field4len
    end-if
    
    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Start2 + #Column2len + 4)
    let #Start4          = (#Start3 + #Column3len + 4)

    let #numofhdr        = 4

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
    put $Column4Name #Start4 #Column4len into printarray(3)
   
begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID                 &Conqrs06_OprId
A.CONQRSNAME            &Conqrs06_ConqrsName
A.SEQNUM                &Conqrs06_SeqNum
A.QRYNAMECHILD          &Conqrs06_QryNameChild


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Conqrs06_OprId            (+1, #Start1)    on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Conqrs06_ConqrsName       ( 0, #Start2)
   print &Conqrs06_SeqNum           ( 0, #Start3)
   print &Conqrs06_QryNameChild     ( 0, #Start4)
   

FROM PSCONQRSMAP A 
WHERE NOT EXISTS (SELECT 'X' FROM PSQRYDEFN B 
    WHERE (A.OPRID = B.OPRID OR B.OPRID= ' ' OR B.OPRID= '')
    AND A.QRYNAMECHILD = B.QRYNAME) 
ORDER BY 1, 2, 3
 
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

 
!----------------------------------------------------------------------!
! Procedure: SysConqrs-07                                              !
! Descr:     System table audit against PSCONQRSMAP table:             !
!            Check If duplicate parents found for any member child     ! 
!            query or if there are any duplicate combinations of parent! 
!            and child queries                                         !
!----------------------------------------------------------------------!
begin-procedure SysConqrs-07

    let $AuditDescr = '(SysConqrs-07) Verify Connected Query structure (PSCONQRSMAP table). '
      || '1. No duplicate parents should exist for each child query.  '
      || '2. No duplicate combinations of parent and child queries should exist for each Connected Query:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Opr ID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Connected Query'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'Seq. Number'
    let #Column3len = lengthp($Column3Name)
    let $Column4Name = 'Parent Query'
    let #Column4len = lengthp($Column4Name)
    let $Column5Name = 'Child Query'
    let #Column5len = lengthp($Column5Name)

    do RetrieveColumnLength('PSCONQRSMAP','OPRID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSMAP','CONQRSNAME',#Field2Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSMAP','SEQNUM',#Field3Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSMAP','QRYNAMEPARENT',#Field4Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSMAP','QRYNAMECHILD',#Field5Len,$FieldType)      

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if
    
     if #Field3len > #Column3len
        let #Column3len = #Field3len
    end-if
    
    if #Field4len > #Column4len
        let #Column4len = #Field4len
    end-if

    if #Field5len > #Column5len
        let #Column5len = #Field5len
    end-if
    
    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Start2 + #Column2len + 4)
    let #Start4          = (#Start3 + #Column3len + 4)
    let #Start5          = (#Start4 + #Column4len + 4)

    let #numofhdr        = 5

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
    put $Column4Name #Start4 #Column4len into printarray(3)
    put $Column5Name #Start5 #Column5len into printarray(4)
   
begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.OPRID                 &Conqrs07_OprId
A.CONQRSNAME            &Conqrs07_ConqrsName
A.SEQNUM                &Conqrs07_SeqNum
A.QRYNAMEPARENT         &Conqrs07_QryNameParent
A.QRYNAMECHILD          &Conqrs07_QryNameChild

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Conqrs07_OprId            (+1, #Start1)    on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Conqrs07_ConqrsName       ( 0, #Start2)
   print &Conqrs07_SeqNum           ( 0, #Start3)
   print &Conqrs07_QryNameParent    ( 0, #Start4)
   print &Conqrs07_QryNameChild     ( 0, #Start5)
   

FROM PSCONQRSMAP A, PSCONQRSMAP B 
WHERE A.OPRID = B.OPRID
 AND  A.CONQRSNAME = B.CONQRSNAME
 AND  A.QRYNAMECHILD= B.QRYNAMECHILD
 AND  A.QRYNAMEPARENT <> B.QRYNAMEPARENT 
ORDER BY 1, 2, 3, 4 
 
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

  
!----------------------------------------------------------------------!
! Procedure: SysConqrs-08                                              !
! Descr:     System table audit against PSCONQRSMAP table:             !
!            Check If Parent(Root) query exists for all objects        ! 
!----------------------------------------------------------------------!
begin-procedure SysConqrs-08

    let $AuditDescr = '(SysConqrs-08) Verify Connected Query structure (PSCONQRSMAP table). '
       || 'Parent(Root) query should be defined for all Connected Query objects: '      

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Opr ID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Connected Query'
    let #Column2len = lengthp($Column2Name)
     

    do RetrieveColumnLength('PSCONQRSMAP','OPRID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSMAP','CONQRSNAME',#Field2Len,$FieldType)
          

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if
    
    
    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
     
    let #numofhdr        = 2

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    
   
begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.OPRID                 &Conqrs08_OprId
A.CONQRSNAME            &Conqrs08_ConqrsName 

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Conqrs08_OprId            (+1, #Start1)    on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Conqrs08_ConqrsName       ( 0, #Start2)    

FROM PSCONQRSMAP A 
WHERE NOT EXISTS (SELECT 'X' FROM  PSCONQRSMAP B WHERE
 A.OPRID = B.OPRID
 AND A.CONQRSNAME = B.CONQRSNAME
 AND  B.QRYNAMEPARENT =' ' or B.QRYNAMEPARENT='')
ORDER BY 1 
 
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

 
!----------------------------------------------------------------------!
! Procedure: SysConqrs-09                                              !
! Descr:     System table audit against PSCONQRSMAP table:             !
!            Check if any parent query exists as a child query         ! 
!----------------------------------------------------------------------!
begin-procedure SysConqrs-09

    let $AuditDescr = '(SysConqrs-09) Verify Connected Query structure (PSCONQRSMAP table). '
      || 'Any parent query should exist as a child query. Parent query of the root should be empty: '

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Opr ID'
    let #Column1len = lengthp($Column1Name)
    let $Column2Name = 'Connected Query'
    let #Column2len = lengthp($Column2Name)
    let $Column3Name = 'Parent Query'
    let #Column3len = lengthp($Column3Name)
    

    do RetrieveColumnLength('PSCONQRSMAP','OPRID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSMAP','CONQRSNAME',#Field2Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSMAP','QRYNAMEPARENT',#Field4Len,$FieldType)
          

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if
    
    if #Field3len > #Column3len
        let #Column3len = #Field3len
    end-if

        
    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Start2 + #Column2len + 4)
     
    let #numofhdr        = 3

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
    
   
begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.OPRID                 &Conqrs09_OprId
A.CONQRSNAME            &Conqrs09_ConqrsName
A.QRYNAMEPARENT         &Conqrs09_QryNameParent

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Conqrs09_OprId            (+1, #Start1)    on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Conqrs09_ConqrsName       ( 0, #Start2)
   print &Conqrs09_QryNameParent    ( 0, #Start3)  
   

FROM  PSCONQRSMAP A  
WHERE (A.QRYNAMEPARENT <>' ' OR A.QRYNAMEPARENT <>'') 
  AND NOT EXISTS (SELECT 'X' FROM PSCONQRSMAP B 
  WHERE  A.OPRID = B.OPRID
  AND A.CONQRSNAME = B.CONQRSNAME
  AND A.QRYNAMEPARENT = B.QRYNAMECHILD) 
ORDER BY 1, 2 
 
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SysConqrs-10                                              !
! Descr:     System table audit against PSCONQRSMAP table:             !
!            Verify Connected Query structure (PSCONQRSMAP table).     ! 
!            Number of Child Queries should be more than 0 and equal to!
!            the value of SELNUM field                                 !
!----------------------------------------------------------------------!
begin-procedure SysConqrs-10

    let $AuditDescr = '(SysConqrs-10) Verify Connected Query structure (PSCONQRSMAP table). '
      || 'Number of Child Queries should be equal to the max value of SEQNUM field.'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

    let #rows            =  0
    let $DetailErrFound  = 'N'

    let $Column1Name = 'Opr ID'
    let #Column1len =  lengthp($Column1Name)
    let $Column2Name = 'Connected Query'
    let #Column2len =  lengthp($Column2Name)
    let $Column3Name = 'MAX(SEQNUM)'
    let #Column3len =  11
    let $Column4Name = 'COUNT(Child Queries)'
    let #Column4len =  22

    do RetrieveColumnLength('PSCONQRSMAP','OPRID',#Field1Len,$FieldType)
    do RetrieveColumnLength('PSCONQRSMAP','CONQRSNAME',#Field2Len,$FieldType)    

    if #Field1len > #Column1len
        let #Column1len = #Field1len
    end-if

    if #Field2len > #Column2len
        let #Column2len = #Field2len
    end-if
    
    let #Start1          = 1
    let #Start2          = (#Column1len + 4)
    let #Start3          = (#Start2 + #Column2len + 4)
    let #Start4          = (#Start3 + #Column3len + 4)

    let #numofhdr        = 4

    put $Column1Name #Start1 #Column1len into printarray(0)
    put $Column2Name #Start2 #Column2len into printarray(1)
    put $Column3Name #Start3 #Column3len into printarray(2)
    put $Column4Name #Start4 #Column4len into printarray(3)
   
begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID                 &Conqrs10_OprId
A.CONQRSNAME            &Conqrs10_ConqrsName
MAX(A.SEQNUM)           &Conqrs10_maxSeqNum
COUNT(A.SEQNUM)         &Conqrs10_countSeqNum

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Conqrs10_OprId            (+1, #Start1)    on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Conqrs10_ConqrsName       ( 0, #Start2)
   print &Conqrs10_maxSeqNum        ( 0, #Start3)
   print &Conqrs10_countSeqNum      ( 0, #Start4)
   

FROM PSCONQRSMAP A, PSCONQRSMAP B 
WHERE A.OPRID = B.OPRID
 AND A.CONQRSNAME = B.CONQRSNAME
 AND A.SEQNUM =B.SEQNUM
GROUP BY A.OPRID,A.CONQRSNAME
HAVING MAX(A.SEQNUM) <> COUNT(A.SEQNUM)
ORDER BY A.OPRID,A.CONQRSNAME
 
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

