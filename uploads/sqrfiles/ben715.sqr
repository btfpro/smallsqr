!***********************************************************************
!  BEN715: Vacation Buy/Sell
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:08:49:56                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#define FREQUENCY_TBL
#include 'setenv.sqc' !Set environment
#include 'rellang.sqc'  !Related Language File

Begin-Setup
  #Include 'ptpsp125.sqc'
End-Setup

#define col_sep4                 4   !Column Separator
#define col_sep2                 2   !Column Separator
#define col_plan_type            7   !Plan Type
#define col_ben_plan            13   !Benefits Plan
#define col_eff_date            11   !Effective Date
#define col_buy_sel              9   !Buy-Sell
#define col_earn_type            5   !Earn Type
#define col_pay_friq            10   !Pay Friquency
#define col_vacton_hours        24   !Vacation Hours
#define col_vacton_amt          24   !Vacation Amount

begin-program
  do Init-Report
  do Process-Main

  do Reset
  do StdAPI-Term
end-program

begin-procedure Init-Report
  do Init-DateTime
  do Init-Number

  do Get-Current-DateTime
  do StdAPI-Init

  let $ReportID = 'BEN715'
  do Get-Report-Language
  let $ReportTitle  = $BEN715-REPORTTITLE
  display ' '
  display $ReportTitle
  display ' '

end-procedure

!**********************************
! This procedure is used to read language-dependent text from the database.
!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from BEN715 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation('BEN1')

  do Get_Field_Information ('BEN715', 'REPORT_TITLE', $BEN715-REPORTTITLE, #CW)
  do Get_Field_Information ('BEN715', 'VACTN_HOURS',  $BEN715-VACTN-HOURS, #CW)
  do Get_Field_Information ('BEN715', 'VACTN_AMT',    $BEN715-VACTN-AMT,   #CW)
  do Get_Field_Information ('BEN715', 'EARN',         $BEN715-EARN,        #CW)
  do Get_Field_Information ('BEN715', 'BUY_SELL',     $BEN715-BUY-SELL,    #CW)
  do Get_Field_Information ('BEN715', 'INCR_MIN_MAX', $BEN715-INCR-MIN-MAX,#CW)
  do Get_Field_Information ('BEN715', 'SAL_MAX',      $BEN715-SAL-MAX,     #CW)

  do Get_Field_Information ('BEN1',   'EFFECTIVE',    $BEN1-EFFECTIVE,     #CW)
  do Get_Field_Information ('BEN1',   'PAY',          $BEN1-PAY,           #CW)
  do Get_Field_Information ('BEN1',   'PLAN',         $BEN1-PLAN,          #CW)
  do Get_Field_Information ('BEN1',   'DATE',         $BEN1-DATE,          #CW)
  do Get_Field_Information ('BEN1',   'TYPE',         $BEN1-TYPE,          #CW)
  do Get_Field_Information ('BEN1',   'BENEFIT',      $BEN1-BENEFIT,       #CW)
  do Get_Field_Information ('BEN1',   'FREQ_TYPE',    $BEN1-FREQUENCY,     #CW)

End-Procedure

!**************
begin-HEADING 9
!**************
  #Include 'stdhdgtr.sqc'

!Column Heading line 1
  print ''                    (+2,1,{col_plan_type})
  print ''                    (0,+{col_sep2},{col_ben_plan})
  print ''                    (0,+{col_sep2},{col_eff_date})
  print ''                    (0,+{col_sep2},{col_buy_sel})
  print ''                    (0,+{col_sep2},{col_earn_type})
  print ''                    (0,+{col_sep2},{col_pay_friq})
  print $BEN715-VACTN-HOURS   (0,+{col_sep2},{col_vacton_hours})
  print $BEN715-VACTN-AMT     (0,+{col_sep4},{col_vacton_amt})

!Column Heading line 2
  print $BEN1-PLAN            (+1,1,{col_plan_type})
  print $BEN1-BENEFIT         (0,+{col_sep2},{col_ben_plan})
  print $BEN1-EFFECTIVE       (0,+{col_sep2},{col_eff_date})
  print ''                    (0,+{col_sep2},{col_buy_sel})
  print $BEN715-EARN          (0,+{col_sep2},{col_earn_type})
  print $BEN1-PAY             (0,+{col_sep2},{col_pay_friq})
  print '-'                   (0,+{col_sep2},{col_vacton_hours})   FILL
  print '-'                   (0,+{col_sep4},{col_vacton_amt})     FILL

!Column Heading line 3
  print $BEN1-TYPE            (+1,1,{col_plan_type})
  print $BEN1-PLAN            (0,+{col_sep2},{col_ben_plan})
  print $BEN1-DATE            (0,+{col_sep2},{col_eff_date})
  print $BEN715-BUY-SELL      (0,+{col_sep2},{col_buy_sel})
  print $BEN1-TYPE            (0,+{col_sep2},{col_earn_type})
  print $BEN1-FREQUENCY       (0,+{col_sep2},{col_pay_friq})
  print $BEN715-INCR-MIN-MAX  (0,+{col_sep2},{col_vacton_hours})
  print $BEN715-SAL-MAX       (0,+{col_sep4},{col_vacton_amt})

!Column Heading line 4
  print '='                   (+1,1,{col_plan_type})                FILL
  print '='                   (0,+{col_sep2},{col_ben_plan})        FILL
  print '='                   (0,+{col_sep2},{col_eff_date})        FILL
  print '='                   (0,+{col_sep2},{col_buy_sel})         FILL
  print '='                   (0,+{col_sep2},{col_earn_type})       FILL
  print '='                   (0,+{col_sep2},{col_pay_friq})        FILL
  print '='                   (0,+{col_sep2},{col_vacton_hours})    FILL
  print '='                   (0,+{col_sep4},{col_vacton_amt})      FILL

end-HEADING

!***********************************************************************
!  PROC Process Main
!         Main Procedure
!***********************************************************************

BEGIN-PROCEDURE Process-Main
BEGIN-SELECT

A.BENEFIT_PLAN            (+1,1,6)   on-break level=1 skiplines=1
A.PLAN_TYPE
    move 'PLAN_TYPE'  to $FieldName
    move &A.Plan_Type to $FieldValue
    do Read-Translate-Table
    print $XlatLongName   (0,10,13)  on-break level=2
A.EFFDT
  do Format-DateTime(&A.EffDt, $out, {DEFDATE}, '', '')
  print $out              (0,25,10)
A.BUY_SELL
    move 'BUY_SELL'  to $FieldName
    move &A.Buy_Sell to $FieldValue
    do Read-Translate-Table
    print $XlatShortName  (0,38,9)
A.ERNCD                   (0,49,3)
F.EFFDT
F.FREQUENCY_ID
F.DESCRSHORT
   move &F.DESCRSHORT    to $FREQUENCY_TBL-DESCRSHORT
   do Get_Related_FREQUENCY_TBL(&F.EFFDT,&F.FREQUENCY_ID)
   print $FREQUENCY_TBL-DESCRSHORT   (0,56,10)
A.VACN_HOURS_INCR        (0,68,6)  EDIT 999.99
A.VACN_MIN_HOURS         (0,78,5)  EDIT 99.99
A.VACN_MAX_HOURS         (0,85,7)  EDIT 9999.99
A.VACN_PCT_OF_SALARY     (0,97,6)  EDIT 99.999
A.VACN_MAX_AMT           (0,105,15) EDIT 999999999999.99

FROM PS_VACATION_TBL A,
     PS_FREQUENCY_TBL F
WHERE A.PAY_FREQUENCY  = F.FREQUENCY_ID
  AND F.EFF_STATUS     = 'A'
  AND F.EFFDT          =
    (SELECT MAX(F1.EFFDT)
       FROM PS_FREQUENCY_TBL F1
      WHERE F1.FREQUENCY_ID   = F.FREQUENCY_ID
        AND F1.EFF_STATUS     = F.EFF_STATUS
        AND F1.EFFDT         <= A.EFFDT)

ORDER BY A.PLAN_TYPE,A.BENEFIT_PLAN,A.EFFDT

END-SELECT
END-PROCEDURE

!********************************************************************
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'readxlat.sqc'  !Routines for Translat Table

#Include 'stdapi.sqc'    !Update Process API

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
!************************ End Of Report *****************************
