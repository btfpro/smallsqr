!***********************************************************************
!  FGHR026: Incumbent Position History Report                          *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      
!          $Date:  2006/07/19:12:00:12                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'   !Set environment
#Include 'setup32.sqc'  !Printer and page-size initialization

begin-Report
   do Init-DateTime
   do Init-Number
   do Get-Current-DateTime
   do Init-Report
   do Process-Main
   do Reset
   do Stdapi-Term
end-report


Begin-Procedure Report-Translation

do Init_Report_Translation ($ReportID, $language_cd)
do Append_Report_Translation ('HR')
do Append_Report_Translation ('FGHR026')

do Get_Field_Information ('POS003',     'REPORT_TITLE', $REPORTTITLE,   #DW)
do Get_Field_Information ('POS003',     'EMPLID',       $EMPLID,        #DW)
do Get_Field_Information ('POS003',     'ENTRY_DT1',    $ENTRYDT1,      #DW)
do Get_Field_Information ('POS003',     'ENTRY_DT2',    $ENTRYDT2,      #DW)
do Get_Field_Information ('POS003',     'EXIT_DT1',     $EXITDT1,       #DW)
do Get_Field_Information ('POS003',     'EXIT_DT2',     $EXITDT2,       #DW)
do Get_Field_Information ('POS003',     'ENTRY_SAL1',   $ENTRYSAL1,     #DW)
do Get_Field_Information ('POS003',     'ENTRY_SAL2',   $ENTRYSAL2,     #DW)
do Get_Field_Information ('POS003',     'EXIT_SAL1',    $EXITSAL1,      #DW)
do Get_Field_Information ('POS003',     'EXIT_SAL2',    $EXITSAL2,      #DW)
do Get_Field_Information ('POS003',     'EXIT_RSN1',    $EXITRSN1,      #DW)
do Get_Field_Information ('POS003',     'EXIT_RSN2',    $EXITRSN2,      #DW)
do Get_Field_Information ('POS003',     'ENTRY_PGS1',   $ENTRYPGS1,     #DW)
do Get_Field_Information ('POS003',     'ENTRY_PGS2',   $ENTRYPGS2,     #DW)
do Get_Field_Information ('POS003',     'EXIT_PGS1',    $EXITPGS1,      #DW)
do Get_Field_Information ('POS003',     'EXIT_PGS2',    $EXITPGS2,      #DW)
do Get_Field_Information ('POS003',     'SALARY_PGS1',  $SALPGS1,       #DW)
do Get_Field_Information ('POS003',     'SALARY_PGS2',  $SALPGS2,       #DW)
do Get_Field_Information ('POS003',     'INCUMBENT',    $INCUMB,        #DW)
do Get_Field_Information ('POS003',     'INCUMBENT',    $INCUMB,        #DW)
do Get_Field_Information ('POS003',     'POSITION',     $POS,           #DW)
do Get_Field_Information ('HR',         'INCUMBENT',    $INCUMBENT,     #DW)
do Get_Field_Information ('HR',         'JOBCODE',      $JOBCODE,       #DW)
do Get_Field_Information ('HR',         'POSITION_TITLE',$POSTITLE,     #DW)
do Get_Field_Information ('HR',         'POSITION_STAT1',$POSSTAT1,     #DW)
do Get_Field_Information ('HR',         'POSITION_STAT2',$POSSTAT2,     #DW)
do Get_Field_Information ('HR',         'AGENCY',        $COMP,         #DW)
do Get_Field_Information ('HR',         'CURRENCY_CD1', $CUR1,          #DW)
do Get_Field_Information ('HR',         'CURRENCY_CD2', $CUR2,          #DW)
do Get_Field_Information ('HR',         'DEPARTMENT',   $DEPT,          #DW)
do Get_Field_Information ('POS003',     'POSITION_NBR1',$POSNO,         #DW)

do Get_Field_Information ('FGHR026',     'PLAN',        $FGHR026-PLAN,  #DW)

end-procedure

begin-heading 12
#Include 'stdhtr03.sqc'
! #Include 'stdhdg03.sqc'
   print $COMP               (+2,1)
   print $Company            (0,13)
   print $CompanyName        (0,24)

   print $DEPT               (+1,1)
   print $DeptId             (0,13)
   print $DeptName           (0,24)


   print $POS               (+1,17)
   print $INCUMB             (0,98)
   print '-'              (+1,1,45) fill
   print '-'             (0,48,126) fill

   let $POSNO_TITLE = $POSNO || '/'
   print $POSNO_TITLE           (+1,10)
   print $POSSTAT1              (0,25)
   print $SALPGS1               (0,34)
   print '|'                 (0,46)
   print $ENTRYDT1              (0,48)
   print $EXITDT1               (0,60)
   print $ENTRYSAL1             (0,116)
   print $EXITSAL1              (0,129)
   print $ENTRYPGS1             (0,138)
   print $EXITPGS1              (0,151)
   print $EXITRSN1              (0,164)

   print $JOBCODE               (+1,1)
   print $POSTITLE              (0,10)
   print $POSSTAT2              (0,25)
   print $FGHR026-PLAN        (0,34)
   print '|'                 (0,46)
   print $ENTRYDT2            (0,48)
   print $EXITDT2             (0,60)
   print $INCUMBENT           (0,72)
   print $EMPLID              (0,104)
   print $ENTRYSAL2           (0,115)
   print $ENTRYSAL2           (0,127)
   print $FGHR026-PLAN        (0,138)
   print $FGHR026-PLAN        (0,151)
   print $EXITRSN2            (0,164)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
   print '|' (+1,46)
end-heading

!********************************************
begin-procedure Init-Report

  do Stdapi-Init

  let $ReportID = 'POS003'
  do Get-Report-Language
  let $ReportTitle = $REPORTTITLE
  let $ReportID = 'FGHR026'
  display $ReportTitle

  if $prcs_process_instance = ''
    do Ask-As-Of-Date
  else
    do Select-Parameters
    do Get-As-Of-Date
  end-if

end-procedure


!********************************************
!     PROC Process-Main                     *
!          Main Procedure                   *
!********************************************
begin-procedure Process-Main
begin-SELECT

B.COMPANY              () on-break print=never level=1 procedure=Dept-Change
   move &B.Company to $Company
   do Get-Company-Data
B.DEPTID               () on-break print=never level=1 procedure=Dept-Change
   move &B.DeptId to $DeptId
   do Get-Department-Name
B.JOBCODE          (+1,1) on-break level=2 skiplines=1
B.POSITION_NBR     (0,10)
B.DESCR            (+1,10)
B.POSN_STATUS
   move 'POSN_STATUS' to  $FieldName
   move &B.POSN_STATUS to $FieldValue
   do Read-Translate-Table
   print $XlatShortName  (-1,25)
J.JOBCODE
J.GVT_PAY_PLAN      (0,34)
J.SAL_ADMIN_PLAN    (0,38)
J.GRADE             (0,42)
!J.Step
!   if &J.Step  = 00
!      move ' ' to $JStep
!      print $JStep  (0,44)
!   else
!      print &J.Step (0,44)
!   end-if

 do Get-Incumbent

 NEXT-LISTING NEED=3

FROM PS_POSITION_DATA B,
     PS_JOBCODE_TBL J
WHERE J.JOBCODE  = B.JOBCODE
  AND B.EFFDT    = (SELECT MAX(B1.EFFDT)
                    FROM  PS_POSITION_DATA B1
                    WHERE B1.POSITION_NBR = B.POSITION_NBR
                      AND B1.EFFDT <= $AsOfDate)
  and J.EFFDT    = (SELECT MAX(J1.EFFDT)
                    FROM PS_JOBCODE_TBL J1
                    WHERE J1.JOBCODE = J.JOBCODE
                      AND J1.EFFDT <= $AsOfDate)

Order by B.COMPANY,B.DEPTID,B.JOBCODE,B.POSITION_NBR

end-SELECT
end-procedure

!********************************************
!   Get-Incumbent                           *
!********************************************
begin-procedure Get-Incumbent
begin-SELECT

H.POSITION_ENTRY_DT
   do Format-DateTime(&H.Position_Entry_Dt, $out, {DEFDATE}, '', '')
   print $out       (0,48)
H.GVT_PAY_PLAN      (0,138)
H.SAL_ADMIN_PLAN    (0,142)
H.GRADE             (0,146)
!H.Step
!    if &H.Step  = 00
!      move ' ' to $HStep
!      print $HStep  (0,146)
!   else
!      print &H.Step (0,146)
!    end-if
!*************************************Begin Name Change Format**************
    !N.NAME
N.NAME_DISPLAY
    !move &N.Name to $Name
    move &N.NAME_DISPLAY to $Name
!*************************************End   Name Change Format**************
    print $Name     (0,72)
H.EMPLID            (0,104)
H.EMPL_RCD
H.COMPRATE          (0,112) EDIT BB999,999
H.COMP_FREQUENCY    (0,122)

 do Get-Exit-Date
 do Get-Exit-Salary
 print ' ' (+1,1)

FROM PS_POSN_HISTORY H,
     PS_PERSON_NAME N
WHERE H.POSITION_NBR = &B.Position_Nbr
  AND H.EMPLID       = N.EMPLID
!ORDER BY H.EMPLID
ORDER BY H.POSITION_ENTRY_DT DESC

end-SELECT
end-procedure

!********************************************
!   Get-Exit-Date Procedure                 *
!********************************************

begin-procedure Get-Exit-Date
begin-SELECT
H2.POSITION_NBR
H2.POSITION_ENTRY_DT
H2.EMPLID
H2.EMPL_RCD
H2.POSITION_END_DT
    do Format-DateTime(&H2.Position_End_Dt, $out, {DEFDATE}, '', '')
     print $out      (0,60)
H2.ACTION
   move 'ACTION' to  $FieldName
   move &H2.ACTION to $FieldValue
   do Read-Translate-Table
   print $XlatShortName  (0,164)

FROM PS_POSN_HISTORY2 H2
WHERE &H.Position_Entry_Dt = H2.POSITION_ENTRY_DT
  AND &B.Position_Nbr      = H2.POSITION_NBR
  AND &H.Emplid            = H2.EMPLID

end-SELECT
end-procedure

!********************************************
!   Get-Exit-Salary Procedure               *
!********************************************

begin-procedure Get-Exit-Salary
begin-SELECT

H3.GVT_PAY_PLAN     (0,151)
H3.SAL_ADMIN_PLAN   (0,155)
H3.GRADE            (0,159)
!H3.Step
!    if &H3.Step  = 00
!      move ' ' to $HStep
!      print $HStep   (0,159)
!   else
!      print &H3.Step (0,159)
!   end-if

H3.COMPRATE         (0,124) EDIT BB999,999
H3.COMP_FREQUENCY   (0,134)

FROM PS_POSN_HISTORY3 H3
WHERE &H.Position_Entry_Dt = H3.POSITION_ENTRY_DT
  AND &B.Position_Nbr      = H3.POSITION_NBR
  AND &H.Emplid            = H3.EMPLID

end-SELECT
end-procedure

begin-procedure Dept-Change
  new-page
end-procedure

!*****************************************************************

#include 'fgrunctl.sqc'  !Get run control parameter values
#include 'fggetval.sqc'  !Get values mask routines
#include 'askaod.sqc'    !Ask As Of Date input

#Include 'getcodta.sqc'  !Get Company Data procedure
#Include 'getdptnm.sqc'  !Get Department Name procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
