! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
! DDDINDEX: Audit Index                                                *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************

#define C_One          3
#define C_Two          24
#define C_Three        35
#define C_Four         39
#define C_Five         44
#define C_Six          51
#define C_Seven            63


#IFDEF ORACLE

!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Index-in-DD-and-not-in-DB
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(INDEX-1) Index defined in the Application '
      || 'Designer and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
TEMPTBLINSTANCES             &TempTblInstancesIdxO
TEMPINSTANCEBATCH            &TempTblBatchIdxO
FROM PSOPTIONS
end-SELECT

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &IndexO_RecName
A.INDEXID          &IndexO_IndexID
B.SQLTABLENAME     &IndexO_SqlTableName
B.RECTYPE          &IndexO_RecType
B.OBJECTOWNERID    &IndexO_ObjectOwnerid

  if rtrim(&IndexO_SqlTableName,' ') = ''
      let $IdxO_TableName = 'PS_' || rtrim(&IndexO_RecName,' ')
   else
      let $IdxO_TableName = rtrim(&IndexO_SqlTableName,' ')
   end-if

   let $IdxO_IndexID = &IndexO_IndexID
   let $IdxO_IndexName = 'PS'|| &IndexO_IndexID || rtrim(&IndexO_RecName,' ')
   let $IdxO_RecName = &IndexO_Recname

   do CheckOraIdx

   if #foundO = 1
    if &IndexO_RecType = 7
       move 0 to #kO


   let $RecName = &IndexO_RecName
      do GetBatchInstances

      if &Dedicated_Batch = 0
         let #sum = &TempTblBatchIdxO
      else
         let #sum = &TempTblInstancesIdxO + &Dedicated_Batch
      end-if

      if #sum > 99
        let #sum = 99
      end-if

      while (#kO <  #sum)
        if #batchonly = 1 and #kO = &TempTblBatchIdxO
            let #kO = &TempTblInstancesIdxO
        end-if
        add 1 to #kO
        let  $IdxO_TableName =  'PS_' || rtrim(&IndexO_RecName,' ') || to_char(#kO)
        let $IdxO_IndexName = 'PS'|| $IdxO_IndexID || rtrim($IdxO_RecName,' ') || to_char(#kO)
        do CheckOraIdx
        if #foundO = 0
          break
        end-if
      
      end-while
     end-if
   end-if

   if #foundO = 0
      do Index1-Page-Control
      print &IndexO_RecName      (+1,{C_One})
      print &IndexO_IndexID      (0,{C_Two})
          print &IndexO_ObjectOwnerid (0,{C_Three})
   end-if

FROM PSINDEXDEFN A, PSRECDEFN B
WHERE A.RECNAME = B.RECNAME
AND A.ACTIVEFLAG = 1
AND B.RECTYPE IN (0, 7)
AND A.PLATFORM_ORA = 1
ORDER BY A.RECNAME, A.INDEXID
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure CheckOraIdx ! Index in DD not in DB
!----------------------------------------------------------------------!
move 0 to #foundO
begin-SELECT on-Error=Rpt-SQL-Error
C.INDEX_NAME
   move 1 to #foundO
FROM USER_INDEXES C
WHERE C.TABLE_NAME = $IdxO_TableName
AND C.INDEX_NAME = $IdxO_IndexName
end-SELECT
end-procedure

begin-procedure Index1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'Index ID'                  (0,{C_Two})
          print 'Ownerid'                                       (0,{C_Three})
      print '---------------'           (+1,{C_One})
      print '--------'                  (0,{C_Two})
          print '-------'                                       (0,{C_Three})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Index-in-DB-and-not-in-DD
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(INDEX-2) Index defined in the Database '
      || 'and not found in the Application Designer:'

begin-SELECT on-Error=Rpt-SQL-Error
A.TABLE_NAME           &Index2_TblName
A.INDEX_NAME           &Index2_SQLIndex

   do Index2-Page-Control
   print &Index2_TblName       (+1,{C_One})
   print &Index2_SQLIndex      (0,{C_Two})

FROM USER_INDEXES A
WHERE (A.TABLE_NAME LIKE 'PS\_%' ESCAPE '\'
   AND NOT EXISTS
      (SELECT 'X'
      FROM PSINDEXDEFN B
      WHERE B.RECNAME = SUBSTR(A.TABLE_NAME,4)
      AND B.INDEXID = SUBSTR(A.INDEX_NAME, 3, 1)
      AND B.ACTIVEFLAG = 1)
OR (A.TABLE_NAME NOT LIKE 'PS\_%' ESCAPE '\'
   AND A.TABLE_NAME NOT LIKE 'SYS%'
   AND NOT EXISTS
      (SELECT 'X'
      FROM PSINDEXDEFN C, PSRECDEFN D
      WHERE C.RECNAME = D.RECNAME
      AND C.RECNAME = A.TABLE_NAME
      AND C.INDEXID = SUBSTR(A.INDEX_NAME, 3, 1)
      AND C.ACTIVEFLAG = 1)))
ORDER BY TABLE_NAME, INDEX_NAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Index2-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'SQL Table Name'             (+2,{C_One})
      print 'Index Name'                 (0,{C_Two})
      print '------------------'        (+1,{C_One})
      print '------------------'        (0,{C_Two})
   end-if
end-procedure


!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Unique-or-Keys-not-matching
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(INDEX-3) Uniqueness or the number of keys in the Index '
      || 'Definition do not match between the Application Designer and '
      || 'the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Index3_RecName
A.INDEXID          &Index3_IndexID
A.UNIQUEFLAG       &Index3_UniqueDD
B.UNIQUENESS       &Index3_UniqueDB
A.KEYCOUNT         &Index3_KeysDD

   LET $PSIdxName = 'PS' || &Index3_IndexID || &Index3_RecName
   LET #OraColCount = 0
   do Get-DBIndex-Info3

   do Index3-Page-Control
   print &Index3_RecName      (+1,{C_One})
   print &Index3_IndexID      (0,{C_Two})

   if &Index3_UniqueDD = 1
      let $Index3_UniqueDD = 'U'
   else
      let $Index3_UniqueDD = 'D'
   end-if

   if &Index3_UniqueDB = 'UNIQUE'
      let $Index3_UniqueDB = 'U'
   else
      let $Index3_UniqueDB = 'D'
   end-if

   if &Index3_KeysDD <> #OraColCount
      print $Index3_UniqueDD     (0,{C_Three})
      print $Index3_UniqueDB     (0,{C_Four})
      print &Index3_KeysDD       (0,{C_Five})
      print #OraColCount         (0,{C_Six}) edit 99
   end-if

FROM PSINDEXDEFN A, USER_INDEXES B
WHERE A.RECNAME > ' '
AND B.INDEX_NAME = 'PS'||A.INDEXID||A.RECNAME
AND A.ACTIVEFLAG = 1
AND ((A.UNIQUEFLAG = 1 AND B.UNIQUENESS <> 'UNIQUE')
    OR (A.UNIQUEFLAG = 0 AND B.UNIQUENESS <> 'NONUNIQUE'))
ORDER BY A.RECNAME, A.INDEXID
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Index3-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Unique'                    (+2,{C_Three})
      print 'Key Count'                 (0,{C_Five})
      print 'Record Name'               (+1,{C_One})
      print 'Index ID'                  (0,{C_Two})
      print 'DD  DB'                    (0,{C_Three})
      print 'DD     DB'                 (0,{C_Five})
      print '---------------'           (+1,{C_One})
      print '--------'                  (0,{C_Two})
      print '------'                    (0,{C_Three})
      print '---------'                 (0,{C_Five})
   end-if
end-procedure

begin-procedure Get-DBIndex-Info3
begin-SELECT
INDEX_NAME  &GetIdxInfo_IdxName
COUNT(*)    &GetIdxInfo_Count

     LET #OraColCount = &GetIdxInfo_Count

FROM USER_IND_COLUMNS
WHERE INDEX_NAME = $PSIdxName
GROUP BY INDEX_NAME
end-SELECT
end-procedure

#ENDIF


#IFDEF DB2UNIX

!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Index-in-DD-and-not-in-DB
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(INDEX-1) Index defined in the Application '
      || 'Designer and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
TEMPTBLINSTANCES             &TempTblInstances
TEMPINSTANCEBATCH            &TempTblBatch
FROM PSOPTIONS
end-SELECT

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &IndexDB2U_RecName
A.INDEXID          &IndexDB2U_IndexID
B.SQLTABLENAME    &IndexDB2U_SqlTableName
B.RECTYPE    &IndexDB2U_RecType
B.OBJECTOWNERID    &IndexDB2U_ObjectOwnerid

  if rtrim(&IndexDB2U_SqlTableName,' ') = ''
      let $IdxDB2U_TableName = 'PS_' || rtrim(&IndexDB2U_RecName,' ')
   else
      let $IdxDB2U_TableName = rtrim(&IndexDB2U_SqlTableName,' ')
   end-if

   let $IdxDB2U_IndexID = &IndexDB2U_IndexID
   let $IdxDB2U_IndexName = 'PS'|| &IndexDB2U_IndexID || rtrim(&IndexDB2U_RecName,' ')
   let $IdxDB2U_RecName = &IndexDB2U_Recname

   do CheckDB2UIdx

   if #foundDB2U = 1
    if &IndexDB2U_RecType = 7
       move 0 to #kDB2U

    let $RecName = &IndexDB2U_RecName
      do GetBatchInstances

      if &Dedicated_Batch = 0
         let #sum = &TempTblBatch
      else
         let #sum = &TempTblInstances + &Dedicated_Batch
      end-if

      if #sum > 99
        let #sum = 99
      end-if

      while (#kDB2U < #sum)
         if #batchonly = 1 and #kDB2U = &TempTblBatch
          let #kDB2U = &TempTblInstances
         end-if
         add 1 to #kDB2U
         let  $IdxDB2U_TableName =  'PS_' || rtrim(&IndexDB2U_RecName,' ') || to_char(#kDB2U)
         let $IdxDB2U_IndexName = 'PS'|| $IdxDB2U_IndexID || rtrim($IdxDB2U_RecName,' ') || to_char(#kDB2U)
         do CheckDB2UIdx
         if #foundDB2U = 0
          break
         end-if     
      end-while
     end-if
   end-if

   if #foundDB2U = 0
      do Index1-Page-Control
      print &IndexDB2U_RecName      (+1,{C_One})
      print &IndexDB2U_IndexID      (0,{C_Two})
      print &IndexDB2U_ObjectOwnerid (0,{C_Three})
   end-if

FROM PSINDEXDEFN A, PSRECDEFN B
WHERE A.RECNAME = B.RECNAME
AND A.ACTIVEFLAG = 1
AND B.RECTYPE IN (0, 7)
AND A.PLATFORM_DBX = 1
ORDER BY A.RECNAME, A.INDEXID
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure CheckDB2UIdx ! Index in DD not in DB
!----------------------------------------------------------------------!
move 0 to #foundDB2U
let $tabname = 'AND C.TABNAME = CHAR(''' || $IdxDB2U_TableName || ''')'
let $indname = 'AND C.INDNAME = CHAR(''' || $IdxDB2U_IndexName || ''')'
begin-SELECT on-Error=Rpt-SQL-Error
C.INDNAME
   move 1 to #foundDB2U
FROM SYSCAT.INDEXES C
WHERE C.INDSCHEMA = USER
[$tabname]
[$indname]
end-SELECT
end-procedure

begin-procedure Index1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'Index ID'                  (0,{C_Two})
          print 'Ownerid'                                       (0,{C_Three})
      print '---------------'           (+1,{C_One})
      print '--------'                  (0,{C_Two})
          print '-------'                                       (0,{C_Three})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Index-in-DB-and-not-in-DD
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(INDEX-2) Index defined in the Database '
      || 'and not found in the Application Designer:'

begin-SELECT on-Error=Rpt-SQL-Error
A.TABNAME           &Index2_TblName
A.INDNAME             &Index2_SQLIndex

   do Index2-Page-Control
   print &Index2_TblName       (+1,{C_One})
   print &Index2_SQLIndex      (0,{C_Two})

FROM SYSCAT.INDEXES A
WHERE A.INDSCHEMA = USER
AND (A.TABNAME LIKE 'PS\_%' ESCAPE '\'
   AND NOT EXISTS
      (SELECT 'X'
      FROM PSINDEXDEFN B
      WHERE B.RECNAME = SUBSTR(A.TABNAME,4)
      AND B.INDEXID = SUBSTR(A.INDNAME, 3, 1)
      AND B.ACTIVEFLAG = 1)
OR (A.TABNAME NOT LIKE 'PS\_%' ESCAPE '\'
   AND A.TABNAME NOT LIKE 'SYS%'
   AND NOT EXISTS
      (SELECT 'X'
      FROM PSINDEXDEFN C, PSRECDEFN D
      WHERE C.RECNAME = D.RECNAME
      AND C.RECNAME = A.TABNAME
      AND C.INDEXID = SUBSTR(A.INDNAME, 3, 1)
      AND C.ACTIVEFLAG = 1)))
ORDER BY TABNAME, INDNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Index2-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'SQL Table Name'             (+2,{C_One})
      print 'Index Name'                 (0,{C_Two})
      print '------------------'        (+1,{C_One})
      print '------------------'        (0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Unique-or-Keys-not-matching
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(INDEX-3) Uniqueness or the number of keys in the Index '
      || 'Definition do not match between the Application Designer and '
      || 'the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Index3_RecName
A.INDEXID          &Index3_IndexID
A.UNIQUEFLAG       &Index3_UniqueDD
B.UNIQUERULE       &Index3_UniqueDB
A.KEYCOUNT         &Index3_KeysDD
B.COLCOUNT         &Index3_KeysDB

   let $Index3_UniqueDD = &Index3_UniqueDD
   let $Index3_UniqueDB = &Index3_UniqueDB
   let #Index3_KeysDD = &Index3_KeysDD
   let #Index3_KeysDB = &Index3_KeysDB
   let $Index3_RecName = &Index3_RecName


       if &Index3_UniqueDD = 1
          let $Index3_UniqueDD = 'U'
          if $Index3_UniqueDB <> $Index3_UniqueDD
              do Index3-Page-Control
              print &Index3_RecName      (+1,{C_One})
              print &Index3_IndexID      (0,{C_Two})
              print $Index3_UniqueDD     (0,{C_Three})
              print $Index3_UniqueDB     (0,{C_Four})
          end-if
       else
          let $Index3_UniqueDD = 'D'
          if $Index3_UniqueDB <> $Index3_UniqueDD
              do Index3-Page-Control
              print &Index3_RecName      (+1,{C_One})
              print &Index3_IndexID      (0,{C_Two})
              print $Index3_UniqueDD     (0,{C_Three})
              print $Index3_UniqueDB     (0,{C_Four})
          end-if
       end-if

   if #Index3_KeysDB <> #Index3_KeysDD
      do Get-SubRecord-KeyCount
      add #Index3_SubKeysDD to #Index3_KeysDD
      if #Index3_KeysDB <> #Index3_KeysDD
         do Index3-Page-Control
         print &Index3_RecName      (+1,{C_One})
         print &Index3_IndexID      (0,{C_Two})
         print #Index3_KeysDD       (0,{C_Five}) edit 99
         print #Index3_KeysDB       (0,{C_Six})  edit 99
      end-if
   end-if

FROM PSINDEXDEFN A, SYSCAT.INDEXES B
WHERE B.INDSCHEMA = USER
AND A.RECNAME > ' '
AND B.INDNAME = 'PS'||A.INDEXID||A.RECNAME
AND A.ACTIVEFLAG = 1
AND ((A.KEYCOUNT <> B.COLCOUNT)
  OR (A.UNIQUEFLAG = 1 AND B.UNIQUERULE NOT IN ('U','P'))  ! Unique Key
  OR (A.UNIQUEFLAG = 0 AND B.UNIQUERULE <> 'D'))           ! Non-Unique Index
ORDER BY A.RECNAME, A.INDEXID
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Index3-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Unique'                    (+2,{C_Three})
      print 'Key Count'                 (0,{C_Five})
      print 'Record Name'               (+1,{C_One})
      print 'Index ID'                  (0,{C_Two})
      print 'DD  DB'                    (0,{C_Three})
      print 'DD     DB'                 (0,{C_Five})
      print '---------------'           (+1,{C_One})
      print '--------'                  (0,{C_Two})
      print '------'                    (0,{C_Three})
      print '---------'                 (0,{C_Five})
   end-if
end-procedure

#ENDIF


#IFDEF DB2

begin-procedure DDDINDEX-Index-in-DD-and-not-in-DB
do DB2INDEX-Index-in-DD-and-not-in-DB
end-procedure

begin-procedure DDDINDEX-Index-in-DB-and-not-in-DD
do DB2INDEX-Index-in-DB-and-not-in-DD
end-procedure

begin-procedure DDDINDEX-Unique-or-Keys-not-matching
do DB2INDEX-Unique-or-keys-not-matching
end-procedure

!----------------------------------------------------------------------!
begin-procedure DB2INDEX-Index-in-DD-and-not-in-DB
!----------------------------------------------------------------------!

   move 0 to #rows
   let $AuditDescr = '(INDEX-1) Index defined in the Application '
      || 'Designer and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
TEMPTBLINSTANCES             &TempTblInstances
TEMPINSTANCEBATCH            &TempTblBatch
FROM PSOPTIONS
end-SELECT


begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &IndexDB2_RecName
A.INDEXID          &IndexDB2_IndexID
B.SQLTABLENAME    &IndexDB2_SqlTableName
B.RECTYPE    &IndexDB2_RecType
B.OBJECTOWNERID   &IndexDB2_ObjectOwnerid


  if rtrim(&IndexDB2_SqlTableName,' ') = ''
      let $IdxDB2_TableName = 'PS_' || rtrim(&IndexDB2_RecName,' ')
   else
      let $IdxDB2_TableName = rtrim(&IndexDB2_SqlTableName,' ')
   end-if

   let $IdxDB2_IndexID = &IndexDB2_IndexID
   let $IdxDB2_IndexName = 'PS'|| &IndexDB2_IndexID || rtrim(&IndexDB2_RecName,' ')
   let $IdxDB2_RecName = &IndexDB2_Recname

   do CheckDB2Idx

   if #foundDB2 = 1
    if &IndexDB2_RecType = 7
       move 0 to #kDB2

    let $RecName = &IndexDB2_RecName
      do GetBatchInstances

      if &Dedicated_Batch = 0
         let #sum = &TempTblBatch
      else
         let #sum = &TempTblInstances + &Dedicated_Batch
      end-if

      if #sum > 99
        let #sum = 99
      end-if

      while (#kDB2 < #sum)
       if #batchonly = 1 and #kDB2 = &TempTblBatch
        let #kDB2 = &TempTblInstances
       end-if
       add 1 to #kDB2
       let  $IdxDB2_TableName =  'PS_' || rtrim(&IndexDB2_RecName,' ') || to_char(#kDB2)
       let $IdxDB2_IndexName = 'PS'|| $IdxDB2_IndexID || rtrim($IdxDB2_RecName,' ') || to_char(#kDB2)
       do CheckDB2Idx
       if #foundDB2 = 0
         break
       end-if
     end-while
     end-if
   end-if

   if #foundDB2 = 0
      do Index1-Page-Control
      print &IndexDB2_RecName      (+1,{C_One})
      print &IndexDB2_IndexID      (0,{C_Two})
      print &IndexDB2_ObjectOwnerid (0,{C_Three})

   end-if

FROM PSINDEXDEFN A, PSRECDEFN B
WHERE A.RECNAME = B.RECNAME
AND A.ACTIVEFLAG = 1
AND B.RECTYPE IN (0, 7)
AND A.PLATFORM_DB2 = 1
ORDER BY A.RECNAME, A.INDEXID
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure CheckDB2Idx ! Index in DD not in DB
!----------------------------------------------------------------------!
move 0 to #foundDB2
begin-SELECT on-Error=Rpt-SQL-Error
C.NAME
   move 1 to #foundDB2
FROM SYSIBM.SYSINDEXES C
WHERE C.CREATOR = CURRENT SQLID
AND C.TBNAME = $IdxDB2_TableName
AND C.NAME = $IdxDB2_IndexName
end-SELECT
end-procedure

begin-procedure Index1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'Index ID'                  (0,{C_Two})
          print 'Ownerid'                                       (0,{C_Three})
      print '---------------'           (+1,{C_One})
      print '--------'                  (0,{C_Two})
          print '-------'                                       (0,{C_Three})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DB2INDEX-Index-in-DB-and-not-in-DD
!----------------------------------------------------------------------!

   move 0 to #rows
   let $AuditDescr = '(INDEX-2) Index defined in the Database '
      || 'and not found in the Application Designer:'

begin-SELECT on-Error=Rpt-SQL-Error
A.TBNAME    &Index2_TblName
A.NAME     &Index2_SQLIndex

   let $tbname   = &Index2_TblName
   let $tbname415 = substr($tbname,4,15)
   let $indexid   = substr(&Index2_SQLIndex,3,1)
   let $exists = ''
   if substr($tbname,1,3) = 'PS_'
     do Get-Sysindexes-for-PS
   else
     do Get-Sysindexes-for-Rest
   end-if

   if $exists = ''
     do Index2-Page-Control
     print &Index2_TblName  (+1,{C_One})
     print &Index2_SQLIndex  (0,{C_Two})
   end-if

FROM SYSIBM.SYSINDEXES A
WHERE A.CREATOR = CURRENT SQLID
AND ((A.TBNAME LIKE 'PS\_%' ESCAPE '\')
OR  (A.TBNAME NOT LIKE 'PS\_%' ESCAPE '\'
     AND A.TBNAME NOT LIKE 'SYS%'))
ORDER BY TBNAME,NAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure Get-Sysindexes-for-PS
!----------------------------------------------------------------------!

begin-SELECT on-Error=Rpt-SQL-Error
'X'                &Index21_Exists
   let $Exists  = &Index21_Exists
FROM PSINDEXDEFN B
WHERE B.RECNAME = $tbname415
AND   B.INDEXID = $Indexid
AND   B.ACTIVEFLAG = 1
end-SELECT

end-procedure


!----------------------------------------------------------------------!
begin-procedure Get-Sysindexes-for-rest
!----------------------------------------------------------------------!

begin-SELECT on-Error=Rpt-SQL-Error
'X'                &Index3_Exists
   let $Exists  = &Index3_Exists
FROM PSINDEXDEFN C,PSRECDEFN D
WHERE C.RECNAME = D.RECNAME
AND   C.RECNAME = $Tbname
AND   C.INDEXID = $Indexid
AND   C.ACTIVEFLAG = 1
end-SELECT

end-procedure

begin-procedure Index2-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'SQL Table Name'             (+2,{C_One})
      print 'Index Name'                 (0,{C_Two})
      print '------------------'        (+1,{C_One})
      print '------------------'        (0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DB2INDEX-Unique-or-keys-not-matching
!----------------------------------------------------------------------!

   move 0 to #rows
   let $AuditDescr = '(INDEX-3) Uniqueness or the number of keys in the Index '
      || 'Definition do not match between the Application Designer and '
      || 'the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME    &Index3_RecName
A.INDEXID    &Index3_IndexID
A.UNIQUEFLAG &Index3_UniqueDD
A.KEYCOUNT   &Index3_KeysDD

   let $Index3_Name = 'PS'||&Index3_IndexID||&Index3_RecName
   let #Index3_KeysDD = &Index3_KeysDD
   let #Index31_UniqueDD = &Index3_UniqueDD
   let $Index3_RecName = &Index3_RecName
   do Get-SysIndexes-for-Unique
   do Get-SysIndexes-for-Keys

   if $Index3_UniqueDB <> ' '
       do Index3-Page-Control
       print &Index3_RecName (+1,{C_One})
       print &Index3_IndexID (0,{C_Two})

       if &Index3_UniqueDD = 1
        let $Index3_UniqueDD = 'U'
        print $Index3_UniqueDD (0,{C_Three})
        print $Index3_UniqueDB (0,{C_Four})
       else
        let $Index3_UniqueDD = 'D'
        print $Index3_UniqueDD (0,{C_Three})
        print $Index3_UniqueDB (0,{C_Four})
       end-if
   end-if

   if #Index3_KeysDB <> 0
        do Get-SubRecord-KeyCount
        add #Index3_SubKeysDD to #Index3_KeysDD
        if #Index3_KeysDD <> #Index3_KeysDB
          do Index3-Page-Control
          print &Index3_RecName (+1,{C_One})
          print &Index3_IndexID (0,{C_Two})
          print #Index3_KeysDD (0,{C_Five})edit 99
          print #Index3_KeysDB (0,{C_Six}) edit 99
         end-if
   end-if

FROM PSINDEXDEFN A
WHERE A.RECNAME > ' '
AND A.ACTIVEFLAG = 1
ORDER BY A.RECNAME, A.INDEXID
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure Get-SysIndexes-for-Unique
!----------------------------------------------------------------------!

let $Index3_UniqueDB = ' '

begin-SELECT on-Error=Rpt-SQL-Error
B.UNIQUERULE   &Index3_UniqueDB

     let $Index3_UniqueDB  = &Index3_UniqueDB

FROM SYSIBM.SYSINDEXES B
WHERE B.CREATOR = CURRENT SQLID
AND   B.NAME = $Index3_Name
AND ((#Index31_UniqueDD = 1 AND B.UNIQUERULE <> 'U')
 OR (#Index31_UniqueDD = 0 AND B.UNIQUERULE <> 'D'))
end-SELECT
end-procedure

!----------------------------------------------------------------------!
begin-procedure Get-SysIndexes-for-Keys
!----------------------------------------------------------------------!

let #Index3_KeysDB = 0

begin-SELECT on-Error=Rpt-SQL-Error
B.COLCOUNT     &Index3_KeysDB

     let #Index3_KeysDB    = &Index3_KeysDB

FROM SYSIBM.SYSINDEXES B
WHERE B.CREATOR = CURRENT SQLID
AND   B.NAME = $Index3_Name
AND B.COLCOUNT <> #Index3_KeysDD

end-SELECT
end-procedure

!----------------------------------------------------------------------!
begin-procedure Index3-Page-Control
!----------------------------------------------------------------------!
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Unique'                    (+2,{C_Three})
      print 'Key Count'                 (0,{C_Five})
      print 'Record Name'               (+1,{C_One})
      print 'Index ID'                  (0,{C_Two})
      print 'DD  DB'                    (0,{C_Three})
      print 'DD     DB'                 (0,{C_Five})
      print '---------------'           (+1,{C_One})
      print '--------'                  (0,{C_Two})
      print '------'                    (0,{C_Three})
      print '---------'                 (0,{C_Five})
   end-if
end-procedure

#ENDIF

#IFDEF DB2400

begin-procedure DDDINDEX-Index-in-DD-and-not-in-DB
do DB2INDEX-Index-in-DD-and-not-in-DB
end-procedure

begin-procedure DDDINDEX-Index-in-DB-and-not-in-DD
do DB2INDEX-Index-in-DB-and-not-in-DD
end-procedure

begin-procedure DDDINDEX-Unique-or-Keys-not-matching
do DB2INDEX-Unique-or-keys-not-matching
end-procedure

!----------------------------------------------------------------------!
begin-procedure DB2INDEX-Index-in-DD-and-not-in-DB
!----------------------------------------------------------------------!

   move 0 to #rows
   let $AuditDescr = '(INDEX-1) Index defined in the Application '
      || 'Designer and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME    &Index1_RecName
A.INDEXID    &Index1_IndexID
B.SQLTABLENAME    &B.Sqltablename
B.OBJECTOWNERID   &Index1_ObjectOwnerid

   if &Index1_IndexID = '_'
     let $Index1_IdxID = 'Z'
   else
     let $Index1_IdxID = &Index1_IndexID
   end-if

   if rtrim(&B.Sqltablename,' ')  = ''
     let $index1_tbname = 'PS_'||&Index1_RecName
   else
     let $index1_tbname = &B.Sqltablename
   end-if
   let $index1_name   = 'PS'||$Index1_IdxID||&Index1_RecName
   do  Get-SysIndexes
   if $exists  = ''
     do Index1-Page-Control
     print &Index1_RecName   (+1,{C_One})
     print &Index1_IndexID   (0,{C_Two})
         print &Index1_ObjectOwnerid (0,{C_Three})
   end-if

FROM PSINDEXDEFN A, PSRECDEFN B
WHERE A.RECNAME = B.RECNAME
AND A.ACTIVEFLAG = 1
AND B.RECTYPE = 0
AND A.PLATFORM_DB4 = 1
ORDER BY A.RECNAME, A.INDEXID
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

Begin-Procedure Get-Sysindexes

let $Exists = ''

begin-SELECT on-Error=Rpt-SQL-Error
'X'                 &Index1_Exists
  let $Exists   = &Index1_Exists
FROM SYSINDEXES C
WHERE C.CREATOR = user
AND   C.TBNAME = $index1_tbname
AND   C.NAME = $index1_name
end-SELECT

end-procedure

begin-procedure Index1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'Index ID'                  (0,{C_Two})
          print 'Ownerid'                                       (0,{C_Three})
      print '---------------'           (+1,{C_One})
      print '--------'                  (0,{C_Two})
          print '-------'                                       (0,{C_Three})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DB2INDEX-Index-in-DB-and-not-in-DD
!----------------------------------------------------------------------!

   move 0 to #rows
   let $AuditDescr = '(INDEX-2) Index defined in the Database '
      || 'and not found in the Application Designer:'

begin-SELECT on-Error=Rpt-SQL-Error
A.TBNAME    &Index2_TblName
A.NAME     &Index2_SQLIndex

   let $tbname   = &Index2_TblName
   let $tbname415 = substr($tbname,4,15)
   let $indexid   = substr(&Index2_SQLIndex,3,1)

   if $indexid = 'Z'
      let $indexid = '_'
   end-if

   let $exists = ''
   if substr($tbname,1,3) = 'PS_'
     do Get-Sysindexes-for-PS
   else
     do Get-Sysindexes-for-Rest
   end-if

   if $exists = ''
     do Index2-Page-Control
     print &Index2_TblName  (+1,{C_One})
     print &Index2_SQLIndex  (0,{C_Two})
   end-if

FROM SYSINDEXES A
WHERE A.CREATOR = USER
AND ((A.TBNAME LIKE 'PS\_%' ESCAPE '\')
OR  (A.TBNAME NOT LIKE 'PS\_%' ESCAPE '\'
     AND A.TBNAME NOT LIKE 'SYS%'))
ORDER BY TBNAME,NAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure Get-Sysindexes-for-PS
!----------------------------------------------------------------------!

begin-SELECT on-Error=Rpt-SQL-Error
'X'                &Index21_Exists
   let $Exists  = &Index21_Exists
FROM PSINDEXDEFN B
WHERE B.RECNAME = $tbname415
AND   B.INDEXID = $Indexid
AND   B.ACTIVEFLAG = 1
end-SELECT

end-procedure


!----------------------------------------------------------------------!
begin-procedure Get-Sysindexes-for-rest
!----------------------------------------------------------------------!

begin-SELECT on-Error=Rpt-SQL-Error
'X'                &Index3_Exists
   let $Exists  = &Index3_Exists
FROM PSINDEXDEFN C,PSRECDEFN D
WHERE C.RECNAME = D.RECNAME
AND   C.RECNAME = $Tbname
AND   C.INDEXID = $Indexid
AND   C.ACTIVEFLAG = 1
end-SELECT

end-procedure

begin-procedure Index2-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'SQL Table Name'             (+2,{C_One})
      print 'Index Name'                 (0,{C_Two})
      print '------------------'        (+1,{C_One})
      print '------------------'        (0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DB2INDEX-Unique-or-keys-not-matching
!----------------------------------------------------------------------!

   move 0 to #rows
   let $AuditDescr = '(INDEX-3) Uniqueness or the number of keys in the Index '
      || 'Definition do not match between the Application Designer and '
      || 'the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME    &Index3_RecName
B.RECTYPE    &Index3_RecType
A.INDEXID    &Index3_IndexID
A.UNIQUEFLAG &Index3_UniqueDD
A.KEYCOUNT   &Index3_KeysDD
B.OBJECTOWNERID &Index3_ObjectOwnerid

   if &Index3_IndexID = '_'
     let $Index3_IdxID = 'Z'
   else
     let $Index3_IdxID = &Index3_IndexID
   end-if

   let $Index3_name = 'PS'||$Index3_IdxID||&Index3_RecName
   let #Index3_KeysDD = &Index3_KeysDD
   let #Index31_UniqueDD = &Index3_UniqueDD
   let $Index3_RecName = &Index3_RecName
   do Get-SysIndexes-for-Unique
   do Get-SysIndexes-for-Keys


   if $Index3_UniqueDB <> ' ' or #Index3_KeysDB <> 0
       do Index3-Page-Control
       print &Index3_RecName (+1,{C_One})
       print &Index3_IndexID (0,{C_Two})
           print &Index3_ObjectOwnerid (0,{C_Seven})
   end-if

   if $Index3_UniqueDB <> ' '

       if &Index3_UniqueDD = 1
        let $Index3_UniqueDD = 'U'
        print $Index3_UniqueDD (0,{C_Three})
        print $Index3_UniqueDB (0,{C_Four})
       else
        let $Index3_UniqueDD = 'D'
        print $Index3_UniqueDD (0,{C_Three})
        print $Index3_UniqueDB (0,{C_Four})
       end-if
   end-if

   if #Index3_KeysDB <> 0
        do Get-SubRecord-KeyCount
        add #Index3_SubKeysDD to #Index3_KeysDD
        if #Index3_KeysDD <> #Index3_KeysDB
          print #Index3_KeysDD (0,{C_Five})edit 99
          print #Index3_KeysDB (0,{C_Six}) edit 99
        end-if
   end-if

FROM PSINDEXDEFN A, PSRECDEFN B
WHERE A.RECNAME = B.RECNAME
AND B.RECTYPE = 0
AND A.PLATFORM_DB4 = 1
AND A.ACTIVEFLAG = 1
ORDER BY A.RECNAME, A.INDEXID
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure


!----------------------------------------------------------------------!
begin-procedure Get-SysIndexes-for-Unique
!----------------------------------------------------------------------!

let $Index3_UniqueDB = ' '

begin-SELECT on-Error=Rpt-SQL-Error
B.UNIQUERULE   &Index3_UniqueDB

     let $Index3_UniqueDB  = &Index3_UniqueDB

FROM SYSINDEXES B
WHERE B.CREATOR = user
AND   B.NAME = $Index3_Name
AND ((#Index31_UniqueDD = 1 AND B.UNIQUERULE <> 'U')
 OR (#Index31_UniqueDD = 0 AND B.UNIQUERULE <> 'D'))
end-SELECT
end-procedure

!----------------------------------------------------------------------!
begin-procedure Get-SysIndexes-for-Keys
!----------------------------------------------------------------------!

let #Index3_KeysDB = 0

begin-SELECT on-Error=Rpt-SQL-Error
B.COLCOUNT     &Index3_KeysDB

     let #Index3_KeysDB    = &Index3_KeysDB

FROM SYSINDEXES B
WHERE B.CREATOR = user
AND   B.NAME = $Index3_Name
AND B.COLCOUNT <> #Index3_KeysDD
end-SELECT
end-procedure

!----------------------------------------------------------------------!
begin-procedure Index3-Page-Control
!----------------------------------------------------------------------!
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Unique'                    (+2,{C_Three})
      print 'Key Count'                 (0,{C_Five})
      print 'Record Name'               (+1,{C_One})
      print 'Index ID'                  (0,{C_Two})
      print 'DD  DB'                    (0,{C_Three})
      print 'DD     DB'                 (0,{C_Five})
          print 'Ownerid'                                       (0,{C_Seven})
      print '---------------'           (+1,{C_One})
      print '--------'                  (0,{C_Two})
      print '------'                    (0,{C_Three})
      print '---------'                 (0,{C_Five})
          print '-------'                                       (0,{C_Seven})
   end-if
end-procedure

#ENDIF

#IFDEF INFORMIX

!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Index-in-DD-and-not-in-DB
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(INDEX-1) Index defined in the Application '
      || 'Designer and not found in the Database:'
begin-SELECT on-Error=Rpt-SQL-Error
TEMPTBLINSTANCES   &TempTblInstancesI
TEMPINSTANCEBATCH  &TempTblBatchI
FROM PSOPTIONS
end-SELECT

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Index1_RecName
A.INDEXID          &Index1_IndexID
B.SQLTABLENAME     &Index1_SqlTableName
B.RECTYPE          &Index1_RecType
B.OBJECTOWNERID    &Index1_ObjectOwnerid

  if rtrim(&Index1_SqlTableName,' ') = ''
      let $Idx1_TableName = 'ps_' || rtrim(LOWER(&Index1_RecName),' ')
   else
      let $Idx1_TableName = rtrim(LOWER(&Index1_SqlTableName),' ')
   end-if

   let $Idx1_IndexID = &Index1_IndexID
   let $Idx1_IndexName = LOWER('ps' || translate(&Index1_IndexID,'#','n') || &Index1_RecName)
   let $Idx1_RecName = &Index1_Recname

   do CheckIdx


   if #found = 1
    if &Index1_RecType = 7
      let $inst = &TempTblInstancesI
      move 0 to #k

        let $RecName = &Index1_RecName
      do GetBatchInstances

      if &Dedicated_Batch = 0
         let #sum = &TempTblBatchI
      else
         let #sum = &TempTblInstancesI + &Dedicated_Batch
      end-if

      if #sum > 99
        let #sum = 99
      end-if

      while (#k < #sum)
       if #batchonly = 1 and #k = &TempTblBatchI
          let #k = &TempTblInstancesI
       end-if
       add 1 to #k
       let  $Idx1_TableName =  LOWER('ps_' || rtrim(&Index1_RecName,' ') || to_char(#k))
       let $Idx1_IndexName = LOWER('ps'|| translate($Idx1_IndexID,'#','n') || rtrim($Idx1_RecName,' ') || to_char(#k))
       do CheckIdx
         if #found = 0
            break
         end-if        
     end-while
     end-if
   end-if

   if #found = 0
      do Index1-Page-Control
      print &Index1_RecName      (+1,{C_One})
      print &Index1_IndexID      (0,{C_Two})
          print &Index1_ObjectOwnerid (0,{C_Three})
   end-if

FROM PSINDEXDEFN A, PSRECDEFN B
WHERE A.RECNAME = B.RECNAME
AND A.ACTIVEFLAG = 1
AND B.RECTYPE IN (0, 7)
AND A.PLATFORM_INF = 1
ORDER BY A.RECNAME, A.INDEXID
end-SELECT
   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure CheckIdx ! Index in DD not in DB
!----------------------------------------------------------------------!

move 0 to #found
begin-SELECT on-Error=Rpt-SQL-Error
D.TABNAME
   move 1 to #found
FROM 'informix'.SYSINDEXES C, 'informix'.SYSTABLES D
WHERE C.OWNER = USER
AND D.TABNAME = $Idx1_TableName
AND C.IDXNAME = $Idx1_IndexName
AND D.TABID = C.TABID
end-SELECT
end-procedure

begin-procedure Index1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'Index ID'                  (0,{C_Two})
          print 'Ownerid'                                       (0,{C_Three})
      print '---------------'           (+1,{C_One})
      print '--------'                  (0,{C_Two})
          print '-------'                                       (0,{C_Three})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Index-in-DB-and-not-in-DD
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(INDEX-2) Index defined in the Database '
      || 'and not found in the Application Designer:'

begin-SELECT on-Error=Rpt-SQL-Error
E.TABNAME          &Index2_TblName
A.IDXNAME          &Index2_SQLIndex

   move &Index2_TblName to $Index2_PSTabName
   LET $Index2_PSTabName = UPPER($Index2_PSTabName)

   move &Index2_SQLIndex to $Index2_PSIdxName
   LET $Index2_PSColName2 = translate(UPPER(SUBSTR($Index2_PSIdxName,  3, 1)),'N','#')

   LET $Index2_PSIdxName = UPPER(SUBSTR($Index2_PSIdxName, 3, 9999))

   LET $Index2_IsIdxPrsnt = 'N'

   LET $Index2_PSTabPrefix = SUBSTR($Index2_PSTabName, 1, 3)

   if $Index2_PSTabPrefix = 'PS_'
      LET $Index2_PSColName1 = SUBSTR($Index2_PSTabName, 4, 9999)
      do FindInfIdx2
      if $Index2_IsIdxPrsnt = 'N'
     do Index2-Page-Control
     print &Index2_TblName       (+1,{C_One})
     print &Index2_SQLIndex      (0,{C_Two})
      end-if
   else
       LET $Index2_PSColName1 = $Index2_PSTabName
       do FindInfIdx2
       if $Index2_IsIdxPrsnt = 'N'
     do Index2-Page-Control
     print &Index2_TblName       (+1,{C_One})
     print &Index2_SQLIndex      (0,{C_Two})
      end-if
   end-if



FROM 'informix'.SYSINDEXES A, 'informix'.SYSTABLES E
WHERE A.OWNER = USER
AND A.TABID = E.TABID
ORDER BY E.TABNAME, A.IDXNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction

end-procedure

begin-procedure FindInfIdx2
begin-SELECT
'Y' &Index2_SelRec
   LET $Index2_IsIdxPrsnt = &Index2_SelRec


FROM PSINDEXDEFN B
WHERE B.RECNAME = $Index2_PSColName1
AND B.INDEXID = $Index2_PSColName2
AND B.ACTIVEFLAG = 1
end-SELECT

end-procedure


begin-procedure Index2-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'SQL Table Name'             (+2,{C_One})
      print 'Index Name'                 (0,{C_Two})
      print '------------------'        (+1,{C_One})
      print '------------------'        (0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Unique-or-Keys-not-matching
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(INDEX-3) Uniqueness or the number of keys in the Index '
      || 'Definition do not match between the Application Designer and '
      || 'the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Index3_RecName
B.RECTYPE          &Index3_RecType
A.INDEXID          &Index3_IndexID
B.OBJECTOWNERID    &Index3_ObjectOwnerid

   let $Index3_RecName = &Index3_RecName
   let $Index3_IndexID = &Index3_IndexID
   let #PSUnqFlag = 0
   let #PSKCount  = 0
   do Get-PSINDEXDEFN-Info3

   let $DBIdxType = ' '
   let #InfColCount = 0
   do Get-DBIndex-Info3

   if #PSUnqFlag = 1
      let $sPSUnqFlag = 'U'
   else
      let $sPSUnqFlag = 'D'
   end-if

  if $DBIdxType <> ' '
   if $sPSUnqFlag <> $DBIdxType
      do Index3-Page-Control
      print &Index3_RecName      (+1,{C_One})
      print &Index3_IndexID      (0,{C_Two})
      print $sPSUnqFlag          (0,{C_Three})
      print $DBIdxType           (0,{C_Four})
          print &Index3_ObjectOwnerid  (0,{C_Seven})
   end-if
  end-if

  if #PSKCount <> 0
      do Get-SubRecord-KeyCount
      add #Index3_SubKeysDD to #PSKCount
      if #PSKCount <> #InfColCount
       do Index3-Page-Control
       print &Index3_RecName      (+1,{C_One})
       print &Index3_IndexID      (0,{C_Two})
       print #PSKCount            (0,{C_Five})  edit 99
       print #InfColCount         (0,{C_Six})   edit 99
           print &Index3_ObjectOwnerid  (0,{C_Seven})
      end-if
  end-if

FROM PSINDEXDEFN A, PSRECDEFN B
WHERE A.RECNAME = B.RECNAME
AND B.RECTYPE = 0
AND A.PLATFORM_INF = 1
AND A.ACTIVEFLAG = 1
ORDER BY A.RECNAME, A.INDEXID
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure Index3-Page-Control
!----------------------------------------------------------------------!
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Unique'                    (+2,{C_Three})
      print 'Key Count'                 (0,{C_Five})
      print 'Record Name'               (+1,{C_One})
      print 'Index ID'                  (0,{C_Two})
      print 'DD  DB'                    (0,{C_Three})
      print 'DD     DB'                 (0,{C_Five})
          print 'Ownerid'                                       (0,{C_Seven})
      print '---------------'           (+1,{C_One})
      print '--------'                  (0,{C_Two})
      print '------'                    (0,{C_Three})
      print '---------'                 (0,{C_Five})
          print '-------'                                       (0,{C_Seven})

   end-if
end-procedure


!----------------------------------------------------------------------!
begin-procedure Get-PSINDEXDEFN-Info3
!----------------------------------------------------------------------!
begin-SELECT
RECNAME          &Index3_RecName2
INDEXID          &Index3_IndexID2
UNIQUEFLAG       &Index3_UniqueDD
KEYCOUNT         &Index3_KeysDD

   LET #PSUnqFlag = &Index3_UniqueDD
   LET #PSKCount  = &Index3_KeysDD

   LET $PSIdxName = 'PS' || &Index3_IndexID2 || &Index3_RecName2
   LET $PSIdxName = LOWER($PSIdxName)
   LET $PSIdxName = translate($PSIdxName,'#','n')

FROM PSINDEXDEFN
WHERE RECNAME = $Index3_RecName
AND   INDEXID = $Index3_IndexID

end-SELECT
end-Procedure

!----------------------------------------------------------------------!
begin-procedure Get-DBIndex-Info3
!----------------------------------------------------------------------!
begin-SELECT
IDXTYPE        &Index3_UniqueDB
PART1          &Index3_Part1
PART2          &Index3_Part2
PART3          &Index3_Part3
PART4          &Index3_Part4
PART5          &Index3_Part5
PART6          &Index3_Part6
PART7          &Index3_Part7
PART8          &Index3_Part8
PART9          &Index3_Part9
PART10         &Index3_Part10
PART11         &Index3_Part11
PART12         &Index3_Part12
PART13         &Index3_Part13
PART14         &Index3_Part14
PART15         &Index3_Part15
PART16         &Index3_Part16


   let $DBIdxType = &Index3_UniqueDB

     if &Index3_Part1 <> 0
      add 1 to #InfColCount
   end-if
   if &Index3_Part2 <> 0
      add 1 to #InfColCount
   end-if
   if &Index3_Part3 <> 0
      add 1 to #InfColCount
   end-if
   if &Index3_Part4 <> 0
      add 1 to #InfColCount
   end-if
   if &Index3_Part5 <> 0
      add 1 to #InfColCount
   end-if
   if &Index3_Part6 <> 0
      add 1 to #InfColCount
   end-if
   if &Index3_Part7 <> 0
      add 1 to #InfColCount
   end-if
   if &Index3_Part8 <> 0
      add 1 to #InfColCount
   end-if
   if &Index3_Part9 <> 0
      add 1 to #InfColCount
   end-if
   if &Index3_Part10 <> 0
      add 1 to #InfColCount
   end-if
   if &Index3_Part11 <> 0
      add 1 to #InfColCount
   end-if
   if &Index3_Part12 <> 0
      add 1 to #InfColCount
   end-if
   if &Index3_Part13 <> 0
      add 1 to #InfColCount
   end-if
   if &Index3_Part14 <> 0
      add 1 to #InfColCount
   end-if
   if &Index3_Part15 <> 0
      add 1 to #InfColCount
   end-if
   if &Index3_Part16 <> 0
      add 1 to #InfColCount
   end-if

FROM 'informix'.SYSINDEXES
WHERE IDXNAME = $PSIdxName
AND OWNER = USER

end-SELECT
end-Procedure

#ENDIF

#IFDEF SYBASE

!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Index-in-DD-and-not-in-DB
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(INDEX-1) Index defined in the Application '
      || 'Designer and not found in the Database:'
begin-SELECT on-Error=Rpt-SQL-Error
TEMPTBLINSTANCES   &TempTblInstancesS
TEMPINSTANCEBATCH            &TempTblBatchS

FROM PSOPTIONS
end-SELECT

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Index1_RecName
A.INDEXID          &Index1_IndexID
B.SQLTABLENAME     &Index1_SqlTableName
B.RECTYPE          &Index1_RecType
B.OBJECTOWNERID    &Index1_ObjectOwnerid

  if rtrim(&Index1_SqlTableName,' ') = ''
      let $Idx1_TableName = 'PS_' || rtrim(&Index1_RecName,' ')
   else
      let $Idx1_TableName = rtrim(&Index1_SqlTableName,' ')
   end-if

   let $Idx1_IndexID = &Index1_IndexID
   let $Idx1_IndexName = 'PS'|| &Index1_IndexID || rtrim(&Index1_RecName,' ')
   let $Idx1_RecName = &Index1_Recname

   do CheckIdx


   if #found = 1
    if &Index1_RecType = 7
      let $inst = &TempTblInstancesS
      move 0 to #k

    let $RecName = &Index1_RecName
      do GetBatchInstances

      if &Dedicated_Batch = 0
         let #sum = &TempTblBatchS
      else
         let #sum = &TempTblInstancesS + &Dedicated_Batch
      end-if

      if #sum > 99
        let #sum = 99
      end-if

      while (#k < #sum)
         if #batchonly = 1 and #k = &TempTblBatchS
            let #k = &TempTblInstancesS
         end-if
         add 1 to #k
       let  $Idx1_TableName =  'PS_' || rtrim(&Index1_RecName,' ') || to_char(#k)
       let $Idx1_IndexName = 'PS'|| $Idx1_IndexID || rtrim($Idx1_RecName,' ') || to_char(#k)
       do CheckIdx
         if #found = 0
            break
         end-if
     end-while
     end-if
   end-if

   if #found = 0
      do Index1-Page-Control
      print &Index1_RecName      (+1,{C_One})
      print &Index1_IndexID      (0,{C_Two})
          print &Index1_ObjectOwnerid (0,{C_Three})
   end-if

FROM PSINDEXDEFN A, PSRECDEFN B
WHERE A.RECNAME = B.RECNAME
AND A.ACTIVEFLAG = 1
AND B.RECTYPE IN (0, 7)
AND A.PLATFORM_SYB = 1
ORDER BY A.RECNAME, A.INDEXID
end-SELECT
   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure CheckIdx ! Index in DD not in DB
!----------------------------------------------------------------------!
move 0 to #found
begin-SELECT on-Error=Rpt-SQL-Error
D.NAME
   move 1 to #found
FROM SYSINDEXES C, SYSOBJECTS D
WHERE C.INDID <> 0 AND C.INDID <> 255
AND D.NAME = $Idx1_TableName
AND C.NAME = $Idx1_IndexName
AND D.ID = C.ID
end-SELECT
end-procedure
begin-procedure Index1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'Index ID'                  (0,{C_Two})
          print 'Ownerid'                                       (0,{C_Three})
      print '---------------'           (+1,{C_One})
      print '--------'                  (0,{C_Two})
          print '-------'                                       (0,{C_Three})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Index-in-DB-and-not-in-DD
!----------------------------------------------------------------------!

 do DDDINDEX-Index-in-DB-and-not-in-DD-2A
 do DDDINDEX-Index-in-DB-and-not-in-DD-2B
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Index-in-DB-and-not-in-DD-2A
!----------------------------------------------------------------------!

   move 0 to #rows
   let $AuditDescr = '(INDEX-2A) Key or Duplicate Order Key Index '
      || 'defined in the Database and not found in Application Designer:'

begin-SELECT on-Error=Rpt-SQL-Error
convert(varchar(128),E.NAME)           &Index2A_TblName
convert(varchar(128),A.NAME)           &Index2A_SQLIndex

   do Index2A-Page-Control
   print &Index2A_TblName       (+1,{C_One})
   print &Index2A_SQLIndex      (0,{C_Two})

FROM SYSINDEXES A, SYSOBJECTS E
WHERE A.INDID <> 0 AND A.INDID <> 255
   AND (substring(E.NAME, 1, 3) = 'PS_'
   AND A.ID = E.ID
   AND E.TYPE = 'U'
   AND NOT EXISTS
      (SELECT 'X'
      FROM PSINDEXDEFN B
      WHERE B.RECNAME = substring(E.NAME, 4, 99)
      AND B.INDEXID = substring(A.NAME, 3, 1)
      AND B.ACTIVEFLAG = 1))
   ORDER BY E.NAME, A.NAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Index2A-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'SQL Table Name'             (+2,{C_One})
      print 'Index Name'                 (0,{C_Two})
      print '------------------'        (+1,{C_One})
      print '------------------'        (0,{C_Two})
   end-if
end-procedure


!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Index-in-DB-and-not-in-DD-2B
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(INDEX-2B) Alternate Search Key or List Box Index'
        || ' defined in the Database and not found in Application Designer:'

begin-SELECT on-Error=Rpt-SQL-Error
convert(varchar(128),E.NAME)           &Index2B_TblName
convert(varchar(128),A.NAME)           &Index2B_SQLIndex

   do Index2B-Page-Control
   print &Index2B_TblName       (+1,{C_One})
   print &Index2B_SQLIndex      (0,{C_Two})

FROM SYSINDEXES A, SYSOBJECTS E
WHERE A.INDID <> 0 AND A.INDID <> 255
   AND (substring(E.NAME, 1, 3) <> 'PS_'
   AND A.ID = E.ID
   AND E.TYPE = 'U'
   AND NOT EXISTS
      (SELECT 'X'
      FROM PSINDEXDEFN C, PSRECDEFN D
      WHERE C.RECNAME = D.RECNAME
      AND C.RECNAME = E.NAME
      AND C.INDEXID = substring(A.NAME, 3, 1)
      AND C.ACTIVEFLAG = 1))
   ORDER BY E.NAME, A.NAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Index2B-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'SQL Table Name'             (+2,{C_One})
      print 'Index Name'                 (0,{C_Two})
      print '------------------'        (+1,{C_One})
      print '------------------'        (0,{C_Two})
   end-if
end-procedure


!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Unique-or-Keys-not-matching
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(INDEX-3) Uniqueness or the number of keys in the Index '
      || 'Definition do not match between the Application Designer and '
      || 'the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Index3_RecName
A.INDEXID          &Index3_IndexID
A.UNIQUEFLAG       &Index3_UniqueDD
B.STATUS           &Index3_UniqueDB
A.KEYCOUNT         &Index3_KeysDD
B.INDID            &Index3_Indid
B.KEYCNT           &Index3_KeysDB


   let $DBIndexName = 'PS' || &Index3_IndexID || &Index3_RecName
   let #DBStatus = 0
   let #Index3_KeysDD = &Index3_KeysDD
   let $Index3_RecName = &Index3_RecName

   do Get-DBIndex-info

   if #DBStatus = 1
      let $Index3_UniqueDB1 = 'U'
   else
      let $Index3_UniqueDB1 = 'D'
   end-if

   if &Index3_UniqueDD = 1
      let $Index3_UniqueDD1 = 'U'
   else
      let $Index3_UniqueDD1 = 'D'
   end-if

   if &Index3_Indid <> 1
      let #Index3_KeysDB = &Index3_KeysDB
      subtract 1 from #Index3_KeysDB
   end-if

   if &Index3_Indid = 1
      let #Index3_KeysDB = &Index3_KeysDB
   end-if

   if $Index3_UniqueDD1 <> $Index3_UniqueDB1
    do Index3-Page-Control
    print &Index3_RecName      (+1,{C_One})
    print &Index3_IndexID      (0,{C_Two})
    print $Index3_UniqueDD1    (0,{C_Three})
    print $Index3_UniqueDB1    (0,{C_Four})
   end-if

   if #Index3_KeysDB <> #Index3_KeysDD
    do Get-SubRecord-KeyCount
    add #Index3_SubKeysDD to #Index3_KeysDD
    if #Index3_KeysDB <> #Index3_KeysDD
     do Index3-Page-Control
     print &Index3_RecName      (+1,{C_One})
     print &Index3_IndexID      (0,{C_Two})
     print #Index3_KeysDD       (0,{C_Five}) edit 99
     print #Index3_KeysDB       (0,{C_Six})  edit 99
    end-if
   end-if

FROM PSINDEXDEFN A, SYSINDEXES B, SYSOBJECTS C
WHERE B.INDID <> 0 AND B.INDID <> 255
AND A.RECNAME > ' '
AND B.ID = C.ID
AND B.NAME = 'PS'+ A.INDEXID + A.RECNAME
AND A.ACTIVEFLAG = 1
ORDER BY A.RECNAME, A.INDEXID
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Index3-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Unique'                    (+2,{C_Three})
      print 'Key Count'                 (0,{C_Five})
      print 'Record Name'               (+1,{C_One})
      print 'Index ID'                  (0,{C_Two})
      print 'DD  DB'                    (0,{C_Three})
      print 'DD     DB'                 (0,{C_Five})
      print '---------------'           (+1,{C_One})
      print '--------'                  (0,{C_Two})
      print '------'                    (0,{C_Three})
      print '---------'                 (0,{C_Five})
   end-if
end-procedure

begin-procedure Get-DBIndex-info
begin-SELECT
'X'

   ADD 1 to  #DBStatus


FROM SYSINDEXES
WHERE INDID <> 0 AND INDID <> 255
AND NAME = $DBIndexName
#ifndef MICROSOFT
AND (STATUS & 2) = 2
#endif

end-SELECT
end-procedure

#ENDIF

#IFDEF MICROSOFT

!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Index-in-DD-and-not-in-DB
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(INDEX-1) Index defined in the Application '
      || 'Designer and not found in the Database:'
begin-SELECT on-Error=Rpt-SQL-Error
TEMPTBLINSTANCES   &TempTblInstancesM
TEMPINSTANCEBATCH  &TempTblBatchM
FROM PSOPTIONS
end-SELECT

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Index1_RecName
A.INDEXID          &Index1_IndexID
B.SQLTABLENAME     &Index1_SqlTableName
B.RECTYPE          &Index1_RecType
B.OBJECTOWNERID    &Index1_ObjectOwnerid

  if rtrim(&Index1_SqlTableName,' ') = ''
      let $Idx1_TableName = 'PS_' || rtrim(&Index1_RecName,' ')
   else
      let $Idx1_TableName = rtrim(&Index1_SqlTableName,' ')
   end-if

   let $Idx1_IndexID = &Index1_IndexID
   let $Idx1_IndexName = 'PS'|| &Index1_IndexID || rtrim(&Index1_RecName,' ')
   let $Idx1_RecName = &Index1_Recname

   do CheckIdx


   if #found = 1
    if &Index1_RecType = 7
      let $inst = &TempTblInstancesM
      move 0 to #k

      let $RecName = &Index1_RecName
      do GetBatchInstances

      if &Dedicated_Batch = 0
         let #sum = &TempTblBatchM
      else
         let #sum = &TempTblInstancesM + &Dedicated_Batch
      end-if

      if #sum > 99
        let #sum = 99
      end-if


      while (#k < #sum)
         if #batchonly = 1 and #k = &TempTblBatchM
           let #k = &TempTblInstancesM
         end-if
         add 1 to #k
       let  $Idx1_TableName =  'PS_' || rtrim(&Index1_RecName,' ') || to_char(#k)
       let $Idx1_IndexName = 'PS'|| $Idx1_IndexID || rtrim($Idx1_RecName,' ') || to_char(#k)
       do CheckIdx
         if #found = 0
            break
         end-if         
     end-while
     end-if
   end-if

   if #found = 0
      do Index1-Page-Control
      print &Index1_RecName      (+1,{C_One})
      print &Index1_IndexID      (0,{C_Two})
          print &Index1_ObjectOwnerid (0,{C_Three})
   end-if

FROM PSINDEXDEFN A, PSRECDEFN B
WHERE A.RECNAME = B.RECNAME
AND A.ACTIVEFLAG = 1
AND B.RECTYPE IN (0, 7)
AND A.PLATFORM_MSS = 1
ORDER BY A.RECNAME, A.INDEXID
end-SELECT
   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure CheckIdx ! Index in DD not in DB
!----------------------------------------------------------------------!
move 0 to #found
begin-SELECT on-Error=Rpt-SQL-Error
D.NAME
   move 1 to #found
FROM SYSINDEXES C, SYSOBJECTS D
WHERE C.INDID <> 0 AND C.INDID <> 255
AND D.NAME = $Idx1_TableName
AND C.NAME = $Idx1_IndexName
AND D.ID = C.ID
end-SELECT
end-procedure
begin-procedure Index1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'Index ID'                  (0,{C_Two})
          print 'Ownerid'                                       (0,{C_Three})
      print '---------------'           (+1,{C_One})
      print '--------'                  (0,{C_Two})
          print '-------'                                       (0,{C_Three})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Index-in-DB-and-not-in-DD
!----------------------------------------------------------------------!

 do DDDINDEX-Index-in-DB-and-not-in-DD-2A
 do DDDINDEX-Index-in-DB-and-not-in-DD-2B
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Index-in-DB-and-not-in-DD-2A
!----------------------------------------------------------------------!

   move 0 to #rows
   let $AuditDescr = '(INDEX-2A) Key or Duplicate Order Key Index '
      || 'defined in the Database and not found in Application Designer:'

begin-SELECT on-Error=Rpt-SQL-Error
convert(varchar(128),E.NAME)           &Index2A_TblName
convert(varchar(128),A.NAME)           &Index2A_SQLIndex

   do Index2A-Page-Control
   print &Index2A_TblName       (+1,{C_One})
   print &Index2A_SQLIndex      (0,{C_Two})

FROM SYSINDEXES A, SYSOBJECTS E
WHERE A.INDID <> 0 AND A.INDID <> 255
   AND (substring(E.NAME, 1, 3) = 'PS_'
   AND A.ID = E.ID
   AND E.TYPE = 'U'
   AND NOT EXISTS
      (SELECT 'X'
      FROM PSINDEXDEFN B
      WHERE B.RECNAME = substring(E.NAME, 4, 99)
      AND B.INDEXID = substring(A.NAME, 3, 1)
      AND B.ACTIVEFLAG = 1))
   ORDER BY E.NAME, A.NAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Index2A-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'SQL Table Name'             (+2,{C_One})
      print 'Index Name'                 (0,{C_Two})
      print '------------------'        (+1,{C_One})
      print '------------------'        (0,{C_Two})
   end-if
end-procedure


!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Index-in-DB-and-not-in-DD-2B
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(INDEX-2B) Alternate Search Key or List Box Index'
        || ' defined in the Database and not found in Application Designer:'

begin-SELECT on-Error=Rpt-SQL-Error
convert(varchar(128),E.NAME)           &Index2B_TblName
convert(varchar(128),A.NAME)           &Index2B_SQLIndex

   do Index2B-Page-Control
   print &Index2B_TblName       (+1,{C_One})
   print &Index2B_SQLIndex      (0,{C_Two})

FROM SYSINDEXES A, SYSOBJECTS E
WHERE A.INDID <> 0 AND A.INDID <> 255
   AND (substring(E.NAME, 1, 3) <> 'PS_'
   AND A.ID = E.ID
   AND E.TYPE = 'U'
   AND NOT EXISTS
      (SELECT 'X'
      FROM PSINDEXDEFN C, PSRECDEFN D
      WHERE C.RECNAME = D.RECNAME
      AND C.RECNAME = E.NAME
      AND C.INDEXID = substring(A.NAME, 3, 1)
      AND C.ACTIVEFLAG = 1))
   ORDER BY E.NAME, A.NAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Index2B-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'SQL Table Name'             (+2,{C_One})
      print 'Index Name'                 (0,{C_Two})
      print '------------------'        (+1,{C_One})
      print '------------------'        (0,{C_Two})
   end-if
end-procedure

#ifndef MICROSOFT
!----------------------------------------------------------------------!
begin-procedure DDDINDEX-Unique-or-Keys-not-matching
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(INDEX-3) Uniqueness or the number of keys in the Index '
      || 'Definition do not match between the Application Designer and '
      || 'the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Index3_RecName
A.INDEXID          &Index3_IndexID
A.UNIQUEFLAG       &Index3_UniqueDD
B.STATUS           &Index3_UniqueDB
A.KEYCOUNT         &Index3_KeysDD
B.INDID            &Index3_Indid
B.KEYCNT           &Index3_KeysDB


   let $DBIndexName = 'PS' || &Index3_IndexID || &Index3_RecName
   let #DBStatus = 0
   let #Index3_KeysDD = &Index3_KeysDD
   let $Index3_RecName = &Index3_RecName

   do Get-DBIndex-info

   if #DBStatus = 1
      let $Index3_UniqueDB1 = 'U'
   else
      let $Index3_UniqueDB1 = 'D'
   end-if

   if &Index3_UniqueDD = 1
      let $Index3_UniqueDD1 = 'U'
   else
      let $Index3_UniqueDD1 = 'D'
   end-if

   if &Index3_Indid <> 1
      let #Index3_KeysDB = &Index3_KeysDB
      subtract 1 from #Index3_KeysDB
   end-if

   if &Index3_Indid = 1
      let #Index3_KeysDB = &Index3_KeysDB
   end-if

   if $Index3_UniqueDD1 <> $Index3_UniqueDB1
    do Index3-Page-Control
    print &Index3_RecName      (+1,{C_One})
    print &Index3_IndexID      (0,{C_Two})
    print $Index3_UniqueDD1    (0,{C_Three})
    print $Index3_UniqueDB1    (0,{C_Four})
   end-if

   if #Index3_KeysDB <> #Index3_KeysDD
    do Get-SubRecord-KeyCount
    add #Index3_SubKeysDD to #Index3_KeysDD
    if #Index3_KeysDB <> #Index3_KeysDD
     do Index3-Page-Control
     print &Index3_RecName      (+1,{C_One})
     print &Index3_IndexID      (0,{C_Two})
     print #Index3_KeysDD       (0,{C_Five}) edit 99
     print #Index3_KeysDB       (0,{C_Six})  edit 99
    end-if
   end-if

FROM PSINDEXDEFN A, SYSINDEXES B, SYSOBJECTS C
WHERE B.INDID <> 0 AND B.INDID <> 255
AND A.RECNAME > ' '
AND B.ID = C.ID
AND B.NAME = 'PS'+ A.INDEXID + A.RECNAME
AND A.ACTIVEFLAG = 1
ORDER BY A.RECNAME, A.INDEXID
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure
#ENDIF

begin-procedure Index3-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Unique'                    (+2,{C_Three})
      print 'Key Count'                 (0,{C_Five})
      print 'Record Name'               (+1,{C_One})
      print 'Index ID'                  (0,{C_Two})
      print 'DD  DB'                    (0,{C_Three})
      print 'DD     DB'                 (0,{C_Five})
      print '---------------'           (+1,{C_One})
      print '--------'                  (0,{C_Two})
      print '------'                    (0,{C_Three})
      print '---------'                 (0,{C_Five})
   end-if
end-procedure

begin-procedure Get-DBIndex-info
begin-SELECT
'X'

   ADD 1 to  #DBStatus


FROM SYSINDEXES
WHERE INDID <> 0 AND INDID <> 255
AND NAME = $DBIndexName
#ifndef MICROSOFT
AND (STATUS & 2) = 2
#endif

end-SELECT
end-procedure

#ENDIF

#ifndef MICROSOFT
!---------------------------------------------------------------------!
begin-procedure Get-SubRecord-KeyCount
!---------------------------------------------------------------------!

move 0 to #Index3_SubKeysDD

begin-SELECT on-Error=Rpt-SQL-Error
SUM(A.KEYCOUNT)    &Index3_SubKeysDD

   let #Index3_SubKeysDD = &Index3_SubKeysDD

FROM PSINDEXDEFN A
WHERE A.INDEXID = &Index3_IndexID
  AND A.ACTIVEFLAG = 1
  AND (A.RECNAME IN
       (SELECT B.FIELDNAME
          FROM PSRECFIELD B
         WHERE B.SUBRECORD = 'Y'
           AND B.RECNAME = &Index3_RecName)
       OR A.RECNAME IN
          (SELECT C.FIELDNAME
             FROM PSRECFIELD C
            WHERE C.SUBRECORD = 'Y'
              AND C.RECNAME IN
                  (SELECT D.FIELDNAME
                     FROM PSRECFIELD D
                    WHERE D.SUBRECORD = 'Y'
                      AND D.RECNAME = &Index3_RecName)))
end-SELECT
end-procedure
#ENDIF
