!***********************************************************************
!  FGOVRPCH: Translates number/sign into character                     *
!***********************************************************************
!***********************************************************************
!                                                                      *
!  Confidentiality Information:                                        *
!                                                                      *
!  This module contains confidential and proprietary information       *
!  of Oracle; it is not to be copied, reproduced, or transmitted       *
!  in any form, by any means, in whole or in part, nor is it to        *
!  be used for any purpose other than that for which it is             *
!  expressly provided under the applicable license agreement.          *
!                                                                      *
!  Copyright (C) 2006 Oracle. All Rights Reserved.                     *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:12:09:11                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

!***********
!  Overpunch
!***********
begin-procedure Overpunch($in-nbr, :$out-char)

  evaluate $in-nbr

    when = '0 '
      let $out-char = '{'
    when = '1 '
      let $out-char = 'A'
    when = '2 '
      let $out-char = 'B'
    when = '3 '
      let $out-char = 'C'
    when = '4 '
      let $out-char = 'D'
    when = '5 '
      let $out-char = 'E'
    when = '6 '
      let $out-char = 'F'
    when = '7 '
      let $out-char = 'G'
    when = '8 '
      let $out-char = 'H'
    when = '9 '
      let $out-char = 'I'
    when = '0-'
      let $out-char = '}'
    when = '1-'
      let $out-char = 'J'
    when = '2-'
      let $out-char = 'K'
    when = '3-'
      let $out-char = 'L'
    when = '4-'
      let $out-char = 'M'
    when = '5-'
      let $out-char = 'N'
    when = '6-'
      let $out-char = 'O'
    when = '7-'
      let $out-char = 'P'
    when = '8-'
      let $out-char = 'Q'
    when = '9-'
      let $out-char = 'R'

  end-evaluate

end-procedure
