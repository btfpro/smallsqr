!**************************************************************************
! PER076JP : Ido Employee Listing                                         *
!**************************************************************************
!                                                                         *
!               Confidentiality Information:                              *
!                                                                         *
!                                                                         *
! This module contains confidential and proprietary information           *
! of Oracle; it is not to be copied, reproduced, or transmitted           *
! in any form, by any means, in whole or in part, nor is it to            *
! be used for any purpose other than that for which it is                 *
! expressly provided under the applicable license agreement.              *
!                                                                         *
! Copyright (C) 2006 Oracle. All Rights Reserved.                         *
!                                                                         *
!**************************************************************************
!                                                                         *
!          $Date:  2006/07/19:15:00:26                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                         *
!**************************************************************************
!                                                                         *
!**************************************************************************
!This report displays the Assignment List in New Organization             *
!                                                                         *
!**************************************************************************
Begin-setup

#define  REPORTID  'PER076JP'
#include 'setenv.sqc'      !Set environment
#include 'ptset02.sqc'     !Init printer and page sizeLandscape

end-setup

begin-program
    do Init-DateTime
    do Init-Number
    do Get-Current-DateTime
    do Define-Prcs-Vars
    do Init-Report
    do Process-Main
    Close 1
    do Update-Prcs-Run-Status
end-program

!*************************************************************************!
! Init-Report
!*************************************************************************!
!***********************************************************************
! Translations procedures & Strings Table retrievals.                  *
!***********************************************************************

begin-procedure Init-Report
  move {REPORTID} to $ReportID
  let #Error_Total = 0
  do Get-Run-Control-Parms
  do Get-Run-Cntl-Acq
  do Get-Tree-Node
  do get-org-plan-date
  do get-setid
  
  do Init_Report_Translation ('PER076JP', $curr_language_cd)
  do Append_Report_Translation ('PER076JP')

  do Get_Field_Information ('PER076JP' ,'PER076JP_TITLE'    ,$PER076JP_Title          ,#DW)
  do Get_Field_Information ('PER076JP' ,'ORG_PLAN'          ,$org_plan_lbl            ,#DW)
  do Get_Field_Information ('PER076JP' ,'EFF_DATE'          ,$org_date_lbl            ,#DW)
  do Get_Field_Information ('PER076JP' ,'BUNIT'             ,$BUnit_lbl               ,#DW)
  do Get_Field_Information ('PER076JP' ,'TREE_NAME'         ,$TREE_NAME_lbl           ,#DW)
  do Get_Field_Information ('PER076JP' ,'NODE'              ,$NODE_lbl                ,#DW)
  do Get_Field_Information ('PER076JP' ,'OLD_DEPT'          ,$OLD_DEPT_lbl            ,#DW)
  do Get_Field_Information ('PER076JP' ,'PLAN_DEPT'         ,$PLAN_DEPT_lbl           ,#DW)
  do Get_Field_Information ('PER076JP' ,'PERIOD'            ,$PERIOD_lbl              ,#DW)
  do Get_Field_Information ('PER076JP' ,'PERIOD1'           ,$PERIOD1_lbl             ,#DW)
  do Get_Field_Information ('PER076JP' ,'SUPV_LVL'          ,$SUPV_LVL_lbl            ,#DW)
  do Get_Field_Information ('PER076JP' ,'SUPV_LVL_NEW'      ,$SUPV_LVL_NEW_lbl        ,#DW)
  do Get_Field_Information ('PER076JP' ,'APPT_TYPE'         ,$APPT_TYPE_lbl           ,#DW)
  do Get_Field_Information ('PER076JP' ,'EMPLID'            ,$EMPLID_lbl              ,#DW)
  do Get_Field_Information ('PER076JP' ,'NAME'              ,$NAME_lbl                ,#DW)
  do Get_Field_Information ('PER076JP' ,'RECNO'             ,$RECNO_lbl               ,#DW)
  do Get_Field_Information ('PER076JP' ,'TYPE'              ,$TYPE_lbl                ,#DW)
  do Get_Field_Information ('PER076JP' ,'TRANS_FROM'        ,$TRANS_FROM_lbl          ,#DW)
  do Get_Field_Information ('PER076JP' ,'TRANS_TO'          ,$TRANS_TO_lbl            ,#DW)
  
  !csv Header Info.
  do Get_Field_Information ('PER076JP' ,'NEW_BU'            ,$NEW_BU_lbl              ,#DW)
  do Get_Field_Information ('PER076JP' ,'NEW_DEPT'          ,$NEW_DEPT_lbl            ,#DW)
  do Get_Field_Information ('PER076JP' ,'DEPT_NAME'         ,$DEPT_NAME_lbl           ,#DW)
  do Get_Field_Information ('PER076JP' ,'NEW_SUPV_LVL'      ,$NEW_SUPV_LVL_lbl        ,#DW)
  do Get_Field_Information ('PER076JP' ,'SUPV_LVL_NAME'     ,$SUPV_LVL_NAME_lbl       ,#DW)
  do Get_Field_Information ('PER076JP' ,'RECNO1'            ,$RECNO1_lbl              ,#DW)
  do Get_Field_Information ('PER076JP' ,'ACTION'            ,$ACTION_lbl              ,#DW)
  do Get_Field_Information ('PER076JP' ,'ACT_REASON'        ,$ACT_REASON_lbl          ,#DW)
  do Get_Field_Information ('PER076JP' ,'CREATE_AA'         ,$CREATE_AA_lbl           ,#DW)
  do Get_Field_Information ('PER076JP' ,'START_DT'          ,$START_DT_lbl            ,#DW)
  do Get_Field_Information ('PER076JP' ,'EXP_END_DT'        ,$EXP_END_DT_lbl          ,#DW)
  do Get_Field_Information ('PER076JP' ,'END_DT'            ,$END_DT_lbl              ,#DW)
  do Get_Field_Information ('PER076JP' ,'COMPANY'           ,$COMPANY_lbl             ,#DW)
  do Get_Field_Information ('PER076JP' ,'LOC'               ,$LOC_lbl                 ,#DW)
  do Get_Field_Information ('PER076JP' ,'JOB_CD'            ,$JOB_CD_lbl              ,#DW)
  do Get_Field_Information ('PER076JP' ,'EFFDT'             ,$EFFDT_lbl               ,#DW)
  do Get_Field_Information ('PER076JP' ,'PREV_BU'           ,$PREV_BU_lbl             ,#DW)
  do Get_Field_Information ('PER076JP' ,'PREV_DEPT'         ,$PREV_DEPT_lbl           ,#DW)
  do Get_Field_Information ('PER076JP' ,'PREV_SUPV_LVL'     ,$PREV_SUPV_LVL_lbl       ,#DW)
  do Get_Field_Information ('PER076JP' ,'SAL_ADMN_PLAN'     ,$SAL_ADMN_PLAN_lbl       ,#DW)
  do Get_Field_Information ('PER076JP' ,'GRADE'             ,$GRADE_lbl               ,#DW)
  do Get_Field_Information ('PER076JP' ,'YRS_IN_SAME_DEPT'  ,$YRS_IN_SAME_DEPT_lbl    ,#DW)
  
  move $PER076JP_Title to $ReportTitle
  let $ReportDate            = $AsOfToday          ! Printed in header
  let $ReportTime            = $AsOfNow            ! Printed in header
  
  Let #FileCount = 1
  !Open record for writing
  do Get-prcsoutputdir
  if (rtrim($prcsoutputdir,' ') <> '')
   move $prcsoutputdir to $Filename
   concat 'per076jp.csv' with $Filename
  end-if
  open $Filename as 1 for-writing record=2000
  do Write-csv-heading
end-procedure Init-Report

!*************************************************************************!
! Get-Run-Cntl-Acq
!*************************************************************************!
begin-procedure Get-Run-Cntl-Acq
  let $org_plan_JPN  = ''
  let $org_date_JPN  = ''
  let $hc_type_JPN  = ''
  let $RC_Business_Unit  = ''
  let $TREE_NAME  = ''
  let $TREE_NODE  = ''
  let $EFFDT_JPN  = ''
  let $setid  = ''

begin-SELECT

RC.BUSINESS_UNIT
RC.ORG_PLAN_JPN
RC.TREE_NAME
RC.TREE_NODE
RC.EFFDT_JPN
RC.SETID

  let $org_plan_JPN  = &RC.ORG_PLAN_JPN
  let $RC_Business_Unit = &RC.BUSINESS_UNIT
  let $TREE_NAME     = &RC.TREE_NAME
  let $TREE_NODE     = &RC.TREE_NODE
  let $EFFDT_JPN     = &RC.EFFDT_JPN
  !let $setid         = &RC.SETID

FROM
PS_RC_IDO_JPN RC

WHERE
RC.OPRID = $prcs_oprid
AND RC.RUN_CNTL_ID = $prcs_run_cntl_id

end-SELECT
end-procedure !Get-Run-Cntl-Acq

!*************************************************************************!
! get-setid
!*************************************************************************!
!*************************************************************************!
! Get SETID
!*************************************************************************!
begin-procedure get-setid
begin-select
CR.SETID
 let $setid = &CR.SETID
FROM PS_SET_CNTRL_REC CR
WHERE CR.RECNAME = 'JOBCODE_TBL' AND CR.SETCNTRLVALUE = $RC_Business_Unit
end-select
end-procedure !get-setid

!*************************************************************************!
! Get-Tree-Node
!*************************************************************************!
begin-procedure Get-Tree-Node
  let #tree_node_num = ''
  let #tree_node_num_end = ''
 if rtrim($TREE_NODE,' ') = ''
  let #tree_node_num = 0
  let #tree_node_num_end = 9999999999
 else
  do get-tree-node-num
 end-if
end-procedure !Get-Tree-Node

begin-procedure get-tree-node-num
begin-SELECT
A.TREE_NODE_NUM
A.TREE_NODE_NUM_END
  let #tree_node_num = &A.TREE_NODE_NUM
  let #tree_node_num_end = &A.TREE_NODE_NUM_END
FROM PSTREENODE A
WHERE A.SETID = $setid
AND A.TREE_NAME = $TREE_NAME
AND A.TREE_NODE = $TREE_NODE
AND A.EFFDT = $EFFDT_JPN
end-SELECT
end-procedure !get-tree-node-num

!*************************************************************************!
! get-org-plan-date
!*************************************************************************!

begin-procedure get-org-plan-date
begin-select
A.HC_TYPE_JPN
A.ORG_DATE_JPN
 let $org_date_JPN_In  = &A.ORG_DATE_JPN
 do Convert-To-DTU-Date ($org_date_JPN_In, $org_date_JPN)
 let $AsOfDate = &A.ORG_DATE_JPN
 let $hc_type_JPN  = &A.HC_TYPE_JPN
 
FROM
PS_IDO_ORGPLAN_JPN A

WHERE
A.ORG_PLAN_JPN = $org_plan_JPN
end-select
end-procedure !get-org-plan-date

!*************************************************************************!
! Process-Main
!*************************************************************************!

begin-procedure Process-Main
  let $BU_check = ''
  if RTRIM($RC_Business_Unit,' ') <> ''
   concat 'AND B.BUSINESS_UNIT = ' with $BU_check
   concat   '''' with $BU_check
   concat  $RC_Business_Unit with $BU_check
   concat   '''' with $BU_check
  end-if
begin-select
B.BUSINESS_UNIT
B.EMPLID 
B.EMPL_RCD 
B.DEPTID 
B.SUPV_LVL_ID 
B.IDO_ACTION_JPN 
B.ACTION 
B.ACTION_REASON
B.START_DATE_JPN
B.EXP_END_DATE_JPN
B.END_DATE_JPN
B.COMPANY
B.LOCATION
B.JOBCODE
B.EFFDT

 IF &B.IDO_ACTION_JPN = '40'
  LET $CREATE_AA = 'Y'
 ELSE
  LET $CREATE_AA = 'N'
 END-IF

 ! Keys to be passed for Procedure Get-Employee-Name
 let $EmplID        = &B.EMPLID 
 do Get-Employee-Name
 
 ! Keys to be passed for Procedure Get-Department-Name
 let $BU       = &B.BUSINESS_UNIT
 let $Business_Unit = &B.BUSINESS_UNIT
 let $DeptID   = &B.DEPTID 
 do Get-Department-Name 
 let $New_DeptID = $DeptID
 let $New_Deptname = $DeptName
 
 ! Keys to be passed for Procedure Get-Supvlvl-Name
 let $SUPV_LVL_ID = &B.SUPV_LVL_ID
 do get-setid-supv 
 do Get-Supvlvl-Name 
 let $New_Supv_Lvl = $SUPV_LVL_ID
 let $New_Supv_Lvl_Name = $SupvlvlName

 ! Keys to be passed for Procedure Get-Action
 let $Action = &B.ACTION
 do Get-Action
 
 ! Keys to be passed for Procedure Get-Action-Reason
 let $Action_Reason = &B.ACTION_REASON
 do Get-Action-Reason
 
 do get-old-dept-detl
 
 do Print_Line
 do Write-Data-line
 
FROM PS_IDO_FUT_UPD_JPN B 
WHERE B.ORG_PLAN_JPN = $org_plan_JPN
 [$BU_check]
ORDER BY B.DEPTID, B.SUPV_LVL_ID, B.ACTION, B.ACTION_REASON, B.EMPLID, B.EMPL_RCD
end-select
end-procedure !Process-Main

!*************************************************************************!
! get-old-dept-detl
!*************************************************************************!
begin-procedure get-old-dept-detl
begin-select
PREV.BUSINESS_UNIT
PREV.APPT_TYPE 
PREV.DEPTID 
PREV.SUPV_LVL_ID 
PREV.EFFDT
PREV.SAL_ADMIN_PLAN
PREV.GRADE

 ! Keys to be passed for Procedure Get-Department-Name
 let $BU       = &PREV.BUSINESS_UNIT
 let $Business_Unit = &PREV.BUSINESS_UNIT
 let $DeptID   = &PREV.DEPTID 
 do Get-Department-Name 
 let $Old_DeptID = $DeptID
 let $Old_Deptname = $DeptName
 
 ! Keys to be passed for Procedure Get-Supvlvl-Name
 let $SUPV_LVL_ID = &PREV.SUPV_LVL_ID
 do get-setid-supv 
 do Get-Supvlvl-Name 
 let $Old_Supv_Lvl = $SUPV_LVL_ID
 let $Old_Supv_Lvl_Name = $SupvlvlName

 do get-prd-same-dept
 
 
 let $FieldName = 'APPT_TYPE'
 let $FieldValue = &PREV.APPT_TYPE
 do Read-Translate-Table
 let $APPT_TYPE_VALUE = $XlatShortName
 
FROM PS_JOB PREV

WHERE PREV.EMPLID = &B.EMPLID
AND PREV.EMPL_RCD = &B.EMPL_RCD
AND PREV.EFFDT = (SELECT MAX(EFFDT) 
 FROM PS_JOB A1 
 WHERE A1.EMPLID = PREV.EMPLID 
 AND A1.EMPL_RCD = PREV.EMPL_RCD 
 AND A1.EFFDT <= &A.ORG_DATE_JPN)
end-select
end-procedure !get-old-dept-detl

!*************************************************************************!
! get-prd-same-dept
!*************************************************************************!
begin-procedure get-prd-same-dept
begin-select
A2.EFFDT 
A2.EFFSEQ 
A2.ACTION 
 if &A2.ACTION = 'HIR' or &A2.ACTION = 'REH' 
  let #period_exp = datediff(&A.ORG_DATE_JPN, &A2.EFFDT, 'month')
  let #period_exp = #period_exp / 12
 else
  do Get-Begin-Date
 end-if
 
FROM PS_JOB A2
WHERE A2.EMPLID = &B.EMPLID
AND A2.EMPL_RCD = &B.EMPL_RCD
AND A2.EFFDT < &A.ORG_DATE_JPN
AND ((A2.DEPTID <> &PREV.DEPTID)
OR (A2.ACTION IN ('HIR','REH')))
ORDER BY A2.EFFDT, A2.EFFSEQ DESC
end-select
end-procedure !get-prd-same-dept

!*************************************************************************!
! Get-Begin-Date
!*************************************************************************!
begin-procedure Get-Begin-Date
begin-select
B2.EFFDT
  let #period_exp = datediff(&A.ORG_DATE_JPN, &B2.EFFDT, 'month')
  let #period_exp = #period_exp / 12
FROM PS_JOB B2
WHERE B2.EMPLID = &B.EMPLID
AND B2.EMPL_RCD = &B.EMPL_RCD
AND ((B2.EFFDT > &A2.EFFDT) OR (B2.EFFDT = &A2.EFFDT AND B2.EFFSEQ > &A2.EFFSEQ))
end-select
end-procedure !Get-Begin-Date

!*************************************************************************!
! get-setid-supv
!*************************************************************************!
begin-procedure get-setid-supv
begin-select
A5.SETID
 let $SETID_DEPT = &A5.SETID
FROM
PS_SET_CNTRL_REC A5
WHERE A5.RECNAME = 'SUPVSR_LVL_TBL'
AND A5.SETCNTRLVALUE = $Business_Unit
end-select
end-procedure !get-setid-supv

begin-heading 10
#include 'stdhdgtr.sqc'

   print $org_plan_lbl (+1,1,22)
   print $org_plan_JPN (0,25,4)
   print $org_date_lbl (+1,1,12)
   print $org_date_JPN (0,16,10)
   print $BUnit_lbl (+1,1,15)
   print $RC_Business_Unit (0,16,6)
   print $TREE_NAME_lbl (+1,1,15)
   print $TREE_NAME (0,16,15)
   print $NODE_lbl (+1,1,15)
   print $TREE_NODE (0,16,15)
   print $TRANS_FROM_lbl (+1,1,49)
   print $PERIOD_lbl (0,51,6)
   print $TRANS_TO_lbl  (0,59,100)
     
   print $OLD_DEPT_lbl (+1,1,20)
   print $SUPV_LVL_lbl (0,26,15)
   print $PERIOD1_lbl (0,51,6)
   print $EMPLID_lbl (0,59,8)
   print $RECNO_lbl (0,67,4)
   print $NAME_lbl (0,72,20)
   print $NEW_DEPT_lbl (0,89,25)
   print $SUPV_LVL_NEW_lbl (0,114,15)
   print $APPT_TYPE_lbl (0,139,6)
   PRINT $CREATE_AA_lbl (0,151,9)

end-heading

!*************************************************************************!
! Print_Line
!*************************************************************************!
begin-procedure Print_Line

  print $Old_DeptID (+1,1,6) 
  print $Old_Deptname (0,9,15) 
  print $Old_Supv_Lvl (0,26,6)
  print $Old_Supv_Lvl_Name (0,34,15) 
  print #period_exp (0,51,4) edit 99.9
  print &B.EMPLID  (0,59,6) 
  print &B.EMPL_RCD  (0,67,3) 
  print $Name  (0,72,15) 
  print $New_DeptID  (0,89,6) 
  print $New_Deptname  (0,97,15) 
  print $New_Supv_Lvl (0,114,6)
  print $New_Supv_Lvl_Name (0,123,15)
  print $APPT_TYPE_VALUE (0,139,10)
  PRINT $CREATE_AA (0,151,1)

end-procedure !Print_Line

!*************************************************************************!
! Write-Data-line
!*************************************************************************!
begin-procedure Write-Data-line
 Let $Write_Line = ''
 do Prepare-for-Write-JPN('CHAR',&B.BUSINESS_UNIT,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$New_DeptID,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$New_Deptname,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',&B.SUPV_LVL_ID,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$New_Supv_Lvl_Name,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',&B.EMPLID ,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('NUM',' ',&B.EMPL_RCD,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$Name ,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$Action_Descr,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$Action_Reason_Descr,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$CREATE_AA,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 let $Date_val  = edit(&B.START_DATE_JPN,'YYYY/MM/DD')
 do Prepare-for-Write-JPN('CHAR',$Date_val,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 let $Date_val  = edit(&B.EXP_END_DATE_JPN,'YYYY/MM/DD')
 do Prepare-for-Write-JPN('CHAR',$Date_val,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 let $Date_val  = edit(&B.END_DATE_JPN,'YYYY/MM/DD')
 do Prepare-for-Write-JPN('CHAR',$Date_val,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',&B.COMPANY,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',&B.LOCATION,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',&B.JOBCODE,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 let $Date_val  = edit(&B.EFFDT,'YYYY/MM/DD')
 do Prepare-for-Write-JPN('CHAR',$Date_val,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',&PREV.BUSINESS_UNIT,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$Old_DeptID,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$Old_Deptname,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$Old_Supv_Lvl,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',$Old_Supv_Lvl_Name,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',&PREV.SAL_ADMIN_PLAN,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('CHAR',&PREV.GRADE,0,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 do Prepare-for-Write-JPN('DEC',' ',#period_exp,$result)
 Let $Write_Line = $Write_Line || $result
 Let $Write_Line = $Write_Line || ','
 
 Write 1 from $Write_Line
end-procedure !Write-Data-line

!*************************************************************************!
! Write-csv-heading
!*************************************************************************!
begin-procedure Write-csv-heading
 Let $Write_Line = ''
 Let $Write_Line = $Write_Line || $NEW_BU_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $NEW_DEPT_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $DEPT_NAME_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $NEW_SUPV_LVL_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $SUPV_LVL_NAME_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $EMPLID_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $RECNO1_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $NAME_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $ACTION_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $ACT_REASON_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $CREATE_AA_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $START_DT_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $EXP_END_DT_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $END_DT_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $COMPANY_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $LOC_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $JOB_CD_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $EFFDT_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $PREV_BU_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $PREV_DEPT_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $DEPT_NAME_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $PREV_SUPV_LVL_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $SUPV_LVL_NAME_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $SAL_ADMN_PLAN_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $GRADE_lbl
 Let $Write_Line = $Write_Line || ','
 Let $Write_Line = $Write_Line || $YRS_IN_SAME_DEPT_lbl
 !Let $Write_Line = $Write_Line || ','
 Write 1 from $Write_Line
end-procedure !Write-csv-heading

!*************************************************************************************
!*This procedure performs the following:                                             *
!*1.  Places double quotes around string fields.  This is necessary to ensure that   *
!*    a field holding the value of "I have a comma, in the middle" is treated as a   *
!*    string and not 2 separate fields.                                              *
!*2.  Converts decimal to 12.6 format, removing any extra spaces.                    *
!*3.  Converts numbers to 12.0 format, removing any extra spaces.                    *
!*                                                                                   *
!*To use this procedure you need to specify the format of the field: CHAR for        *
!*character fields, NUM for numeric, and DEC for decimal. In addition, you need to   *
!*populate the $input parameter for character fields, and the #input parameter for   *
!*decimal and numeric fields.  Since you have to specify both $input and #input each *
!*time the procedure is called, use a space ' ' for the $input field when converting *
!*numbers/decimals, and use a 0 for the #input field when converting characters.     *
!*************************************************************************************

begin-procedure Prepare-for-Write-JPN ($type, $input, #input, :$result)

If $type = 'DEC'
  Let $result = ltrim(edit(#input,'999999999999.9'),' ')
Else
  If $type = 'NUM'
    Let $result = ltrim(edit(#input,'999999999999'),' ')
  Else !Type Char
    Let $result = '"'||$input||'"'
  End-If
End-If

end-procedure !Prepare-for-Write-JPN

!*************************************************************************!
! SQC Files for called procedures
!*************************************************************************!
#include 'prcsdef.sqc'       !Update Process Request variable declare
#include 'prcsapi.sqc'       !Update Process Request API
#include 'curdttim.sqc'      !Get-Current-DateTime procedure
#include 'datetime.sqc'      !Routines for date and time formatting
#include 'number.sqc'        !Routines to format numbers
#include 'sqrtrans.sqc'      !Translate SQR strings to given language
#include 'datemath.sqc'      !Date conversion procedures
#include 'getsupjp.sqc'     ! Get Supervisor Level Name
#Include 'getempnm.sqc'     ! Get Employee Name
#include 'getdptnm.sqc'     ! Get Department Name from the Department Table
#include 'getjobtl.sqc'     ! Get Job Title
#include 'getgrdjp.sqc'     ! Get Grade Name
#include 'readxlat.sqc'     ! XLAT Table Value
#include 'getlogou.sqc'     !get current logoutput directory
#include 'getactrs.sqc'     !get Action Reason
