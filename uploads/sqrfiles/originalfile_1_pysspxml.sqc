!***********************************************************************
!  PYSSPXML:  ePay PNA Self Service Paycheck XML Data                  *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      !
!          $Date:  2006/10/17:14:43:38                                 !
!       $Release:  HR9                                                 !
!      $Revision:  116                                                 !
!                                                                      !
!***********************************************************************
!----------------------------------------------------------------------!
! Procedure: Init-SSP-XML-Variables                                    !
! Descr:     Initialize XML Variables                                  !
!----------------------------------------------------------------------!
begin-procedure Init-SSP-XML-Variables

 #define XMLSSPFILECHECK    PAY003US.XML  ! US Checks
 #define XMLSSPFILECHEQUE   PAY003CN.XML  ! CAN Cheques
 #define XMLSSPFILEADVICE   DDP003US.XML  ! US Deposit Advice
 #define XMLSSPFILEADVICECN DDP003CN.XML  ! CAN Deposit Advice
 #define XMLSSPFILEDMANLCHK PAY03MUS.XML  ! Manual US Checks
 #define XMLSSPFILEDMANLCHQ PAY03MCN.XML  ! Manual CAN Cheques

   do Init-XML-Tags-Variables

   let $xmlssp_burst    = ''
   let $xmlssp_filenm   = ''
   let $xmlssp_filenm2  = ''
   let $xml_SSP_view_dt = ''
   let $SSP_sav_compny  = ''
   let $SSP_sav_paygrp  = ''

end-procedure

!----------------------------------------------------------------------!
! Procedure: Close-SSP-XML-Files                                        !
! Descr:     Close XML file                                             !
!----------------------------------------------------------------------!
begin-procedure Close-SSP-XML-Files

   close #outputfile

end-procedure

!----------------------------------------------------------------------!
! Procedure: Write-1st-SSP-XML-Data                                    !
! Descr:     Write XML data version & schema elements.                 !
!----------------------------------------------------------------------!
begin-Procedure Write-1st-SSP-XML-Data

 write #outputfile from '<?xml version="1.0" encoding="Windows-1252"?>'

end-procedure

!***************************
! Create Earnings XML Data *
!***************************
begin-procedure Create-Earnings-XML-Data

  move 0 to #xmllinecnt

  let $xmltag = 'EARNINGS'
  do Process-SSP-XML-Tag-Beg

  move 0 to #CurHrTotal
  move 0 to #YTDHrTotal

  move 0 to #idx
  while #idx <= #lncnt

   if #idx <> #lncnt                 !not totals lines

     move 0 to #idx2
     while #idx2 <= #lastRow
       get $Name $CmpRtCd #Cur #YTD from ETDarray(#idx2) Name(#idx) CmpRtCd(#idx) Cur(#idx) YTD(#idx)

       evaluate #idx2
         when = #RatesRow
        move $Name to $EarnName
        move $CmpRtCd to $CompCode
        move #Cur  to #EarnRate
         when = #HoursRow
        move #Cur  to #HourCur
        move #YTD  to #HourYTD
        add  #Cur  to #CurHrTotal
       add  #YTD  to #YTDHrTotal
         when = #EarnsRow
        move #Cur  to #EarnCur
        move #YTD  to #EarnYTD
       end-evaluate

       add 1 to #idx2
     end-while

     if rtrim($EarnName,' ') <> ''

       add 1 to #xmllinecnt
       do Format-Number(#xmllinecnt, $xln, '09')

       let $xmltag = 'hrs_earns'
       do Process-SSP-XML-Tag-Beg

       let $xmltag = 'he_descr'
       let $xmlcontent = rtrim($EarnName,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'cur_rt'
       let $xmlcontent = ''
       if #HourCur <> 0
          do format-number(#EarnRate, $amtout, '999.999999')
          let $xmlcontent = ltrim($amtout,' ')
       end-if
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'cur_hrs'
       let $xmlcontent = ''
       if #HourCur <> 0
          do format-number(#HourCur, $amtout, '9,999.99')
          let $xmlcontent = ltrim($amtout,' ')
       end-if
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'cur_ern'
       do format-number(#EarnCur, $amtout, '9,999,999.99')
       let $xmlcontent = ltrim($amtout,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'ytd_hrs'
       let $xmlcontent = ''
       if #HourYTD <> 0
          do format-number(#HourYTD, $amtout, '99,999.99')
          let $xmlcontent = ltrim($amtout,' ')
       end-if
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'ytd_ern'
       do format-number(#EarnYTD, $amtout, '999,999,999.99')
       let $xmlcontent = ltrim($amtout,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'hrs_earns'
       do Process-SSP-XML-Tag-End

     end-if
   end-if
   add 1 to #idx
  end-while

  let $xmltag = 'EARNINGS'
  do Process-SSP-XML-Tag-End

  move #CurHrTotal          to #HourCur
  move #YTDHrTotal          to #HourYTD
  move &B.Total_Gross       to #EarnCur
  move &Y.Total_Gross_YTD   to #EarnYTD

  let $xmltag = 'EARNINGS_TOTAL'
  do Process-SSP-XML-Tag-Beg

  let $xmltag = 'ttl_cur_hrs'
  do format-number(#HourCur, $amtout, '9,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'ttl_cur_ern'
  do format-number(#EarnCur, $amtout, '9,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'ttl_ytd_hrs'
  do format-number(#HourYTD, $amtout, '99,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'ttl_ytd_ern'
  do format-number(#EarnYTD, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'EARNINGS_TOTAL'
  do Process-SSP-XML-Tag-End

end-procedure

!***************************
! Create Taxes XML Data
!***************************
begin-procedure Create-Taxes-XML-Data

  move 0 to #xmllinecnt

  let $xmltag = 'TAXES'
  do Process-SSP-XML-Tag-Beg

  move 0 to #CurHrTotal
  move 0 to #YTDHrTotal

  move 0 to #idx
  while #idx <= #lncnt

   if #idx <> #lncnt                 !not totals lines

     move 0 to #idx2
     while #idx2 <= #lastRow
       get $Name $CmpRtCd #Cur #YTD from ETDarray(#idx2) Name(#idx) CmpRtCd(#idx) Cur(#idx) YTD(#idx)

      evaluate #idx2
         when = #TaxesRow
        move $Name to $EarnName
        move #Cur  to #EarnCur
        move #YTD  to #EarnYTD
       end-evaluate

       add 1 to #idx2
     end-while

     if rtrim($EarnName,' ') <> ''

       add 1 to #xmllinecnt
       do Format-Number(#xmllinecnt, $xln, '09')

       let $xmltag = 'taxes_paid'
       do Process-SSP-XML-Tag-Beg

       let $xmltag = 'tx_descr'
       let $xmlcontent = rtrim($EarnName,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'tx_cur'
       do format-number(#EarnCur, $amtout, '9,999,999.99')
       let $xmlcontent = ltrim($amtout,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'tx_ytd'
       do format-number(#EarnYTD, $amtout, '99,999,999.99')
       let $xmlcontent = ltrim($amtout,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'taxes_paid'
       do Process-SSP-XML-Tag-End

     end-if
   end-if
   add 1 to #idx
  end-while

  let $xmltag = 'TAXES'
  do Process-SSP-XML-Tag-End

  move &B.Total_Taxes       to #EarnCur
  move &Y.Total_Taxes_YTD   to #EarnYTD

  let $xmltag = 'TAXES_TOTAL'
  do Process-SSP-XML-Tag-Beg

  let $xmltag = 'tx_ttl_cur'
  do format-number(#EarnCur, $amtout, '99,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'tx_ttl_ytd'
  do format-number(#EarnYTD, $amtout, '99,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'TAXES_TOTAL'
  do Process-SSP-XML-Tag-End

end-procedure

!****************************************
! Create Before Tax Deduction XML Data
!****************************************
begin-procedure Create-Before-Tax-Deduction-XML-Data

  move 0 to #xmllinecnt

  let $xmltag = 'BEF_TAXES_DEDUCTIONS'
  do Process-SSP-XML-Tag-Beg

  move 0 to #CurHrTotal
  move 0 to #YTDHrTotal

  move 0 to #idx
  while #idx <= #lncnt

   if #idx <> #lncnt                 !not totals lines

     move 0 to #idx2
     while #idx2 <= #lastRow
       get $Name $CmpRtCd #Cur #YTD from ETDarray(#idx2) Name(#idx) CmpRtCd(#idx) Cur(#idx) YTD(#idx)

      evaluate #idx2
         when = #PreTaxDedsRow
        move $Name to $EarnName
        move #Cur  to #EarnCur
        move #YTD  to #EarnYTD
        add  #Cur  to #CurHrTotal
       add  #YTD  to #YTDHrTotal
       end-evaluate

       add 1 to #idx2
     end-while

     if rtrim($EarnName,' ') <> ''

       add 1 to #xmllinecnt
       do Format-Number(#xmllinecnt, $xln, '09')

       let $xmltag = 'bef_taxes_ded'
       do Process-SSP-XML-Tag-Beg

       let $xmltag = 'btxd_descr'
       let $xmlcontent = rtrim($EarnName,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'btxd_cur'
       do format-number(#EarnCur, $amtout, '9,999,999.99')
       let $xmlcontent = ltrim($amtout,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'btxd_ytd'
       do format-number(#EarnYTD, $amtout, '99,999,999.99')
       let $xmlcontent = ltrim($amtout,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'bef_taxes_ded'
       do Process-SSP-XML-Tag-End

     end-if
   end-if
   add 1 to #idx
  end-while

  let $xmltag = 'BEF_TAXES_DEDUCTIONS'
  do Process-SSP-XML-Tag-End

  move #CurHrTotal   to #EarnCur
  move #YTDHrTotal   to #EarnYTD

  let $xmltag = 'BEF_TAXES_TOTAL_DEDUCTIONS'
  do Process-SSP-XML-Tag-Beg

  let $xmltag = 'btxd_ttl_cur'
  do format-number(#EarnCur, $amtout, '99,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'btxd_ttl_ytd'
  do format-number(#EarnYTD, $amtout, '99,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'BEF_TAXES_TOTAL_DEDUCTIONS'
  do Process-SSP-XML-Tag-End

end-procedure

!**************************************
! Create After Tax Deduction XML Data *
!**************************************
begin-procedure Create-After-Tax-Deduction-XML-Data

  move 0 to #xmllinecnt

  let $xmltag = 'AFT_TAXES_DEDUCTIONS'
  do Process-SSP-XML-Tag-Beg

  move 0 to #CurHrTotal
  move 0 to #YTDHrTotal

  move 0 to #idx
  while #idx <= #lncnt

   if #idx <> #lncnt                 !not totals lines

     move 0 to #idx2
     while #idx2 <= #lastRow
       get $Name $CmpRtCd #Cur #YTD from ETDarray(#idx2) Name(#idx) CmpRtCd(#idx) Cur(#idx) YTD(#idx)

      evaluate #idx2
         when = #PostTaxDedsRow
        move $Name to $EarnName
        move #Cur  to #EarnCur
        move #YTD  to #EarnYTD
        add  #Cur  to #CurHrTotal
       add  #YTD  to #YTDHrTotal
       end-evaluate

       add 1 to #idx2
     end-while

     if rtrim($EarnName,' ') <> ''

       add 1 to #xmllinecnt
       do Format-Number(#xmllinecnt, $xln, '09')

       let $xmltag = 'aft_taxes_ded'
       do Process-SSP-XML-Tag-Beg

       let $xmltag = 'atxd_descr'
       let $xmlcontent = rtrim($EarnName,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'atxd_cur'
       do format-number(#EarnCur, $amtout, '9,999,999.99')
       let $xmlcontent = ltrim($amtout,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'atxd_ytd'
       do format-number(#EarnYTD, $amtout, '99,999,999.99')
       let $xmlcontent = ltrim($amtout,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'aft_taxes_ded'
       do Process-SSP-XML-Tag-End

     end-if
   end-if
   add 1 to #idx
  end-while

  let $xmltag = 'AFT_TAXES_DEDUCTIONS'
  do Process-SSP-XML-Tag-End

  move #CurHrTotal   to #EarnCur
  move #YTDHrTotal   to #EarnYTD

  let $xmltag = 'AFT_TAXES_TOTAL_DEDUCTIONS'
  do Process-SSP-XML-Tag-Beg

  let $xmltag = 'atxd_ttl_cur'
  do format-number(#EarnCur, $amtout, '99,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'atxd_ttl_ytd'
  do format-number(#EarnYTD, $amtout, '99,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'AFT_TAXES_TOTAL_DEDUCTIONS'
  do Process-SSP-XML-Tag-End

end-procedure

!*****************************************
! Create Employee Paid Benefits XML Data *
!*****************************************
begin-procedure Create-Employee-Paid-Benefits-XML-Data

  move 0 to #xmllinecnt

  let $xmltag = 'EMP_PAID_BENEFITS'
  do Process-SSP-XML-Tag-Beg

  move 0 to #CurHrTotal
  move 0 to #YTDHrTotal

  move 0 to #idx
  while #idx <= #lncnt

   if #idx <> #lncnt                 !not totals lines

     move 0 to #idx2
     while #idx2 <= #lastRow
       get $Name $CmpRtCd #Cur #YTD from ETDarray(#idx2) Name(#idx) CmpRtCd(#idx) Cur(#idx) YTD(#idx)

      evaluate #idx2
         when = #BenefitsRow
        move $Name to $EarnName
        move #Cur  to #EarnCur
        move #YTD  to #EarnYTD
       end-evaluate

       add 1 to #idx2
     end-while

     if rtrim($EarnName,' ') <> ''

       add 1 to #xmllinecnt
       do Format-Number(#xmllinecnt, $xln, '09')
       
       let $xmltag = 'emp_paid_ben'
       do Process-SSP-XML-Tag-Beg

       let $xmltag = 'epb_descr'
       let $xmlcontent = rtrim($EarnName,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'epb_cur'
       do format-number(#EarnCur, $amtout, '9,999,999.99')
       let $xmlcontent = ltrim($amtout,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'epd_ytd'
       do format-number(#EarnYTD, $amtout, '99,999,999.99')
       let $xmlcontent = ltrim($amtout,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'emp_paid_ben'
       do Process-SSP-XML-Tag-End

     end-if
   end-if
   add 1 to #idx
  end-while

  let $xmltag = 'EMP_PAID_BENEFITS'
  do Process-SSP-XML-Tag-End

end-procedure

!********************************************
! Create Current YearToDate Totals XML Data *
!********************************************
begin-procedure Current-YearToDate-Totals-XML-Data

  let $xmltag = 'CURRENT_TOTALS'
  do Process-SSP-XML-Tag-Beg

  let $xmltag = 'cur_ttl_grs'
  do format-number(&B.Total_Gross, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'cur_fed_txbl'
  do format-number(#FedTaxGrossCur, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'cur_ttl_tx'
  do format-number(&B.Total_Taxes, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'cur_ttl_ded'
  do format-number(&B.Total_Deductions, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'cur_ttl_net'
  do format-number(&B.Net_Pay, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'CURRENT_TOTALS'
  do Process-SSP-XML-Tag-End

  let $xmltag = 'YEARTODATE_TOTALS'
  do Process-SSP-XML-Tag-Beg

  let $xmltag = 'ytd_ttl_grs'
  do format-number(&Y.Total_Gross_YTD, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'ytd_fed_txbl'
  do format-number(#FedTaxGrossYTD, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'ytd_ttl_tx'
  do format-number(&Y.Total_Taxes_YTD, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'ytd_ttl_ded'
  do format-number(&Y.Total_Dedns_YTD, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'ytd_ttl_net'
  do format-number(&Y.Net_Pay_YTD, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'YEARTODATE_TOTALS'
  do Process-SSP-XML-Tag-End

end-procedure


!************************************************
! Create Current YearToDate Totals XML Data CAN *
!************************************************
begin-procedure Current-YearToDate-Totals-XML-Data-CAN

  let $xmltag = 'CURRENT_TOTALS'
  do Process-SSP-XML-Tag-Beg

  let $xmltag = 'cur_ttl_grs'
  do format-number(&B.Total_Gross, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'cur_fed_txbl'
  do format-number(#FedTaxGrossCur, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'cur_ttl_tx'
  do format-number(&B.Total_Taxes, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'cur_ttl_ded'
  do format-number(&B.Total_Deductions, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'cur_ttl_net'
  do format-number(&B.Net_Pay, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'CURRENT_TOTALS'
  do Process-SSP-XML-Tag-End


  let $xmltag = 'YEARTODATE_TOTALS'
  do Process-SSP-XML-Tag-Beg

  let $xmltag = 'ytd_ttl_grs'
  do format-number(#TotalGrossYTD, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'ytd_fed_txbl'
  do format-number(#FedTaxGrossYTD, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'ytd_ttl_tx'
  do format-number(#TotalTaxesYTD, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'ytd_ttl_ded'
  do format-number(#TotalDednsYTD, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'ytd_ttl_net'
  do format-number(#NetPayYTD, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'YEARTODATE_TOTALS'
  do Process-SSP-XML-Tag-End

end-procedure


!*********************************
! Create PTO Sick Hours XML Data *
!*********************************
begin-procedure PTO-Sick-Hours-XML-Data

  let $xmltag = 'PTO_SICK_HOURS'
  do Process-SSP-XML-Tag-Beg

  let $xmltag     = 'start_bal'
  let $xmlcontent = '0.0'
  if #VacStartBal <> 0
     do format-number(#VacStartBal, $amtout, '9,999.9')
     let $xmlcontent = $amtout
  end-if
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'earned'
  let $xmlcontent = '0.0'
  if #VacEarned <> 0
     do format-number(#VacEarned, $amtout, '9,999.9')
     let $xmlcontent = $amtout
  end-if
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'bought'
  let $xmlcontent = '0.0'
  if #VacBought <> 0
     do format-number(#VacBought, $amtout, '9,999.9')
     let $xmlcontent = $amtout
  end-if
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'taken'
  let $xmlcontent = '0.0'
  if #VacTaken <> 0
     do format-number(#VacTaken, $amtout, '9,999.9')
     let $xmlcontent = $amtout
  end-if
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'sold'
  let $xmlcontent = '0.0'
  if #VacSold <> 0
     do format-number(#VacSold, $amtout, '9,999.9')
     let $xmlcontent = $amtout
  end-if
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'adjustments'
  let $xmlcontent = '0.0'
  if #VacAdjust <> 0
     do format-number(#VacAdjust, $amtout, '9,999.9')
     let $xmlcontent = $amtout
  end-if
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'pto_bal'
  let $xmlcontent = '0.0'
  if #VacEndBal <> 0
     do format-number(#VacEndBal, $amtout, '9,999.9')
     let $xmlcontent = $amtout
  end-if
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'sick_begbal'
  let $xmlcontent = '0.0'
  if #sickStartBal <> 0
     do format-number(#sickStartBal, $amtout, '9,999.9')
     let $xmlcontent = $amtout
  end-if
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'sick_earned'
  let $xmlcontent = '0.0'
  if #SickEarned <> 0
     do format-number(#SickEarned, $amtout, '9,999.9')
     let $xmlcontent = $amtout
  end-if
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'sick_bought'
  let $xmlcontent = '0.0'
  if #SickBought <> 0
     do format-number(#SickBought, $amtout, '9,999.9')
     let $xmlcontent = $amtout
  end-if
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'sick_taken'
  let $xmlcontent = '0.0'
  if #SickTaken <> 0
     do format-number(#sickTaken, $amtout, '9,999.9')
     let $xmlcontent = $amtout
  end-if
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'sick_sold'
  let $xmlcontent = '0.0'
  if #SickSold <> 0
     do format-number(#SickSold, $amtout, '9,999.9')
     let $xmlcontent = $amtout
  end-if
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'sick_adjust'
  let $xmlcontent = '0.0'
  if #SickAdjust <> 0
     do format-number(#SickAdjust, $amtout, '9,999.9')
     let $xmlcontent = $amtout
  end-if
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'sick_bal'
  let $xmlcontent = '0.0'
  if #SickEndBal <> 0
     do format-number(#SickEndBal, $amtout, '9,999.9')
     let $xmlcontent = $amtout
  end-if
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'PTO_SICK_HOURS'
  do Process-SSP-XML-Tag-End

end-procedure

!***********************************
! Create Net Distribution XML Data *
!***********************************
begin-procedure Create-Net-Distribution-XML-Data

  let $xmltag = 'NET_PAY_DISTRIBUTIONS'
  do Process-SSP-XML-Tag-Beg

  if #CheckNetPay <> 0
     let $xmltag = 'net_distrib'
     do Process-SSP-XML-Tag-Beg

     let $xmltag     = 'py_type'
     do Format-Number(&B.PAYCHECK_NBR, $out, '099999999999999')
     let $xmlcontent = 'Check# ' || $out
     do  Process-SSP-XML-Tag-Content

     let $xmltag     = 'acct_type'
     let $xmlcontent = ''
     do  Process-SSP-XML-Tag-Content

     let $xmltag     = 'acct_num'
     let $xmlcontent = ''
     do  Process-SSP-XML-Tag-Content

     let $xmltag     = 'net_amt'
     do Format-Number(#CheckNetPay, $out, '99,999,999.99')
     let $xmlcontent = ltrim($out,' ')
     do  Process-SSP-XML-Tag-Content

     let $xmltag = 'net_distrib'
     do Process-SSP-XML-Tag-End
  end-if

  if #DepositNetPay <> 0
     let $xmltag = 'net_distrib'
     do Process-SSP-XML-Tag-Beg

     let $xmltag     = 'py_type'
     do Format-Number(#Advice#, $out, '099999999999999')
     let $xmlcontent = 'Advice# ' || $out
     do  Process-SSP-XML-Tag-Content

     let $xmltag     = 'acct_type'
     let $xmlcontent = $adv_acct_type
     do  Process-SSP-XML-Tag-Content

     let $xmltag     = 'acct_num'
     let $xmlcontent = $deposit_acct_nbr
     do  Process-SSP-XML-Tag-Content

     let $xmltag     = 'net_amt'
     do Format-Number(#DepositNetPay, $out, '99,999,999.99')
     let $xmlcontent = ltrim($out,' ')
     do  Process-SSP-XML-Tag-Content

     let $xmltag = 'net_distrib'
     do Process-SSP-XML-Tag-End
  end-if

  let $xmltag = 'NET_PAY_DISTRIBUTIONS'
  do Process-SSP-XML-Tag-End

  let $xmltag     = 'net_amt_total'
  do Format-Number(&B.Net_Pay, $out, '99,999,999.99')
  let $xmlcontent = ltrim($out,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'pay_slip_msg'
  let $xmlcontent = $CheckMessage
  do  Process-SSP-XML-Tag-Content

end-procedure

!********************
! Get SSP View Date *
!********************
Begin-Procedure GET-SSP-View-Date

  let $acheck_dt = &a.Check_Dt
  do Convert-To-DTU-Date($acheck_dt, $acheck_dt_Dtu)

  if #RC_PAYINIT.PY_SSP_BGNSSDFLT <> 0
     do dtu-add-days($acheck_dt_Dtu,#RC_PAYINIT.PY_SSP_BGNSSDFLT, $acheck_dt_Dtu)
  else
     if $SSP_sav_compny  <> $Company or $SSP_sav_paygrp  <> $PayGroup
        let $SSP_sav_compny = $Company
        let $SSP_sav_paygrp = $PayGroup
        let #override_view_days = 0
        do GET-override-view-days
     end-if
     do dtu-add-days($acheck_dt_Dtu,#override_view_days, $acheck_dt_Dtu)
  end-if

  let $acheck_dt = substr($acheck_dt_Dtu,1,4) || substr($acheck_dt_Dtu,6,2) || substr($acheck_dt_Dtu,9,2)
  do Format-DateTime($acheck_dt, $xml_SSP_view_dt,{DEFCMP},'','native')
End-Procedure

!*************************
! GET Override View Days *
!*************************
begin-procedure GET-override-view-days

   show ''
   show 'Get SSP Setup Option Details'
   show 'Setup Id: ' &SSPH.PY_SSP_SETUP_ID
   show 'Eff Date: ' &SSPH.EFFDT
   show ' Company: ' $Company
   show 'PayGroup: ' $PayGroup

begin-SELECT
SSPO.PY_SSP_BGNSSDFLT

     let #override_view_days = &SSPO.PY_SSP_BGNSSDFLT

FROM  PS_PY_SSP_OPTN_DTL SSPO
WHERE SSPO.PY_SSP_SETUP_ID  = &SSPH.PY_SSP_SETUP_ID
  AND SSPO.EFFDT = &SSPH.EFFDT
  AND SSPO.COMPANY  = $Company
  AND SSPO.PAYGROUP = $PayGroup
end-SELECT
end-procedure

!*************************
! Get Unique Burst Value *
!*************************
Begin-Procedure Get-Unique-Burst-Value

  let $xmlssp_burst       = ''
  let #py_pslp_ver_no     = 0
  let $py_ss_pslp_status  = 'ORIG'
  let $py_ss_pslp_prv_sta = 'ORIG'
  let $py_ss_pslp_prcactn = 'INS'

  do Get-SSP-Version-Number

  do Format-DateTime(&b.Check_Dt, $out, {DEFCMP}, '', '')
  let $xmlssp_burst   = rtrim(&B.EmplID,' ') || $out
  do Format-Number(&b.Paycheck_Nbr, $out, '999999999999999')
  let $out = ltrim($out,' ')
  let $xmlssp_burst   = $xmlssp_burst || $out
  do Format-Number(#py_pslp_ver_no, $out, '099')
  let $out = ltrim($out,' ')
  let $xmlssp_burst   = $xmlssp_burst || $out

end-procedure

!*************************
! Get SSP Version Number *
!*************************
Begin-Procedure Get-SSP-Version-Number

begin-SELECT
MVN.EMPLID
MVN.PYMT_DT
MVN.PAYCHECK_NBR
MVN.PY_PSLP_VER_NO
MVN.PY_SS_PSLP_STATUS
MVN.PY_SS_PSLP_PRV_STA

     let #py_pslp_ver_no = &MVN.PY_PSLP_VER_NO + 1

     if &MVN.PY_SS_PSLP_STATUS <> 'DNDS'
        do Update-SSP-Guide-Tbl
     end-if

FROM  PS_PY_SSP_MAXVN_VW MVN
WHERE MVN.EMPLID       = &b.EmplID
  AND MVN.PYMT_DT      = &b.Check_Dt
  AND MVN.PAYCHECK_NBR = &b.Paycheck_Nbr
end-SELECT

end-procedure


!******************************************
! Update SSP Guide Data Table *
!******************************************
begin-procedure Update-SSP-Guide-Tbl

  Let $sql-statement = 'Update-SSP-Guide-Tbl'

begin-SQL  on-error=SQL-Error
UPDATE PS_PY_SS_PSLP_GDE
   SET PY_SS_PSLP_STATUS = 'DNDS',
       PY_SS_PSLP_PRV_STA = 'CHNG'
 WHERE EMPLID = &MVN.EMPLID
   AND PYMT_DT = &MVN.PYMT_DT
   AND PAYCHECK_NBR = &MVN.PAYCHECK_NBR
   AND PY_PSLP_VER_NO = &MVN.PY_PSLP_VER_NO
end-SQL

end-procedure

!*****************************************
! Insert SSP Temporary Guide Data Header *
!*****************************************
Begin-Procedure Insert-SSP-Temporary-Guide-Hdr

   let $setup_option_exists = 'N'

begin-SELECT                     !Get XMLP Report Definitions
SSPH.PY_SSP_SETUP_ID
SSPH.EFFDT
SSPH.PY_SS_BURS_RPT_ID
SSPH.PY_SS_BURS_ADVF_ID
SSPH.PY_SS_PRTC_RPT_ID
SSPH.PY_SS_PRTA_RPT_ID
SSPH.PY_PSLP_FILEURLID

    let $setup_option_exists = 'Y'

FROM  PS_PY_SSP_OPTN_HDR SSPH
WHERE SSPH.PY_SSP_SETUP_ID = $ssp_setup_id
  AND SSPH.EFFDT = (SELECT MAX(EFFDT) FROM PS_PY_SSP_OPTN_HDR
                     WHERE PY_SSP_SETUP_ID = $ssp_setup_id
                       AND EFFDT <= &A.PAY_END_DT)
end-SELECT

  if $setup_option_exists = 'N'
     display 'NO Self Service Paycheck Setup Option was found'
     stop
  end-if


   let $file_url_id_exists = 'N'

begin-SELECT                     !Check if URL Id was entered
SSPURL.URL

    let $file_url_id_exists = 'Y'

FROM  PSURLDEFN SSPURL
WHERE SSPURL.URL_ID = &SSPH.PY_PSLP_FILEURLID
end-SELECT

  if $file_url_id_exists = 'N'
     display 'Invalid URL in Self Service Paycheck Setup Option'
     stop
  end-if

  let $PY_SSP_PRINTRPT_ID = ''
  let $PRINT_TEMPLATE_ID  = ''
  let $PY_SSP_BURSTRPT_ID = ''
  let $BURST_TEMPLATE_ID  = ''
  let $PY_PSLP_PROCNAME   = ''
  let $coylangcd          = 'ENG'

  evaluate $ReportID

    when = 'PAY003'
         if &B.PAYCHECK_OPTION <> 'M'

            let $xmlp_report_defn = &SSPH.PY_SS_PRTC_RPT_ID
            do Get-Report-Template

            let $PY_SSP_PRINTRPT_ID = $xmlp_report_defn
            let $PRINT_TEMPLATE_ID = $xmlp_template_id
            let $PY_PSLP_PROCNAME = 'USCHECKS'
         else
            let $PY_SSP_PRINTRPT_ID = 'N/A'
            let $PRINT_TEMPLATE_ID  = 'N/A'
            let $PY_PSLP_PROCNAME = 'USMANCHK'
         end-if

         let $xmlp_report_defn = &SSPH.PY_SS_BURS_RPT_ID
         do Get-Report-Template
         let $PY_SSP_BURSTRPT_ID = $xmlp_report_defn
         let $BURST_TEMPLATE_ID  = $xmlp_template_id

    when = 'PAY003CN'
         if &B.PAYCHECK_OPTION <> 'M'

            let $xmlp_report_defn = &SSPH.PY_SS_PRTC_RPT_ID
            do Get-Report-Template
            let $PY_SSP_PRINTRPT_ID = $xmlp_report_defn
            let $PRINT_TEMPLATE_ID = $xmlp_template_id
            let $PY_PSLP_PROCNAME = 'CNCHEQUE'

         else
            let $PY_SSP_PRINTRPT_ID = 'N/A'
            let $PRINT_TEMPLATE_ID  = 'N/A'
            let $PY_PSLP_PROCNAME = 'CNMANCHQ'
         end-if

         let $xmlp_report_defn = &SSPH.PY_SS_BURS_RPT_ID
         do Get-Report-Template
         let $PY_SSP_BURSTRPT_ID = $xmlp_report_defn
         let $BURST_TEMPLATE_ID  = $xmlp_template_id

         if $prcs_language_option <> 'R'
            let $coylangcd = $curr_language_cd
         end-if

    when = 'DDP003'
         let $PY_PSLP_PROCNAME = 'USADVICE'

         let $xmlp_report_defn = &SSPH.PY_SS_PRTA_RPT_ID
         do Get-Report-Template
         let $PY_SSP_PRINTRPT_ID = $xmlp_report_defn
         let $PRINT_TEMPLATE_ID = $xmlp_template_id

         let $xmlp_report_defn = &SSPH.PY_SS_BURS_ADVF_ID
         do Get-Report-Template
         let $PY_SSP_BURSTRPT_ID = $xmlp_report_defn
         let $BURST_TEMPLATE_ID  = $xmlp_template_id

    when = 'DDP003CN'
         let $PY_PSLP_PROCNAME = 'CNADVICE'

         let $xmlp_report_defn = &SSPH.PY_SS_PRTA_RPT_ID
         do Get-Report-Template
         let $PY_SSP_PRINTRPT_ID = $xmlp_report_defn
         let $PRINT_TEMPLATE_ID = $xmlp_template_id

         let $xmlp_report_defn = &SSPH.PY_SS_BURS_ADVF_ID
         do Get-Report-Template
         let $PY_SSP_BURSTRPT_ID = $xmlp_report_defn
         let $BURST_TEMPLATE_ID  = $xmlp_template_id

         if $prcs_language_option <> 'R'
            let $coylangcd = $curr_language_cd
         end-if

  end-evaluate

  Let $sql-statement = 'Insert-SSP-Temporary-Guide-Hdr'

Begin-SQL On-Error=SQL-Error
INSERT INTO PS_PY_SSP_TMP_HDR
         (OPRID, RUN_CNTL_ID, PY_PSLP_PROCNAME, PY_SSP_BURSTRPT_ID,
          BURST_TEMPLATE_ID, PY_SSP_PRINTRPT_ID, PRINT_TEMPLATE_ID, PRD_END_DT,
          LANGUAGE_CD, PY_PSLP_SOURCEFILE)
  VALUES ($Prcs_OprID, $Prcs_Run_Cntl_ID, $PY_PSLP_PROCNAME, $PY_SSP_BURSTRPT_ID,
          $BURST_TEMPLATE_ID, $PY_SSP_PRINTRPT_ID, $PRINT_TEMPLATE_ID, &a.Pay_End_Dt,
          $coylangcd, $xmlssp_filenm)
End-SQL
end-procedure

!******************************************
! Insert SSP Temporary Guide Data Details *
!******************************************
Begin-Procedure Insert-SSP-Temporary-Guide-Dtl

  Let $sql-statement = 'Insert-SSP-Temporary-Guide-Dtl'

Begin-SQL On-Error=SQL-Error
INSERT INTO PS_PY_SSP_TMP_DTL
         (OPRID, RUN_CNTL_ID, EMPLID, PYMT_DT, PAYCHECK_NBR,
          PY_PSLP_VER_NO, PY_PSLP_VIEW_DT, PY_SS_PSLP_STATUS, PY_SSP_BURST_VALUE,
          PRD_END_DT, PRD_BGN_DT, NET_PAY, LANGUAGE_CD, PAYCHECK_OPTION,
          PY_SS_PSLP_PRV_STA, PY_SSP_PROC_INSTNC, URL, PY_PSLP_FILEURLID,
          PY_SS_PSLP_PRCACTN, PY_SSP_BURSTRPT_ID, BURST_TEMPLATE_ID, PY_PSLP_SOURCEFILE,
          ATTACHSYSFILENAME, ATTACHUSERFILE)
  VALUES ($Prcs_OprID, $Prcs_Run_Cntl_ID, &b.EmplID, &b.Check_Dt, &b.Paycheck_Nbr,
          #py_pslp_ver_no, $xml_SSP_view_dt, $py_ss_pslp_status, $xmlssp_burst,
          &a.Pay_End_Dt, &a.Pay_Begin_Dt, &b.Net_Pay, $emplangcd, &b.Paycheck_Option,
          $py_ss_pslp_prv_sta, #prcs_process_instance, &SSPURL.URL, &SSPH.PY_PSLP_FILEURLID,
          $py_ss_pslp_prcactn, $PY_SSP_BURSTRPT_ID, $BURST_TEMPLATE_ID, $xmlssp_filenm2,
          $burstfilename, $burstfilename)
End-SQL
end-procedure

!*********************************
! Delete SSP Temporary Guide Data*
!*********************************
Begin-Procedure Delete-SSP-Temporary-Guide-Data


  let $Sql-Statement = 'DELETE PS_PY_SSP_TMP_DTL'
  Begin-SQL On-Error=SQL-Error
    DELETE FROM PS_PY_SSP_TMP_DTL
     WHERE OPRID        = $Prcs_OprID
       AND RUN_CNTL_ID  = $Prcs_Run_Cntl_ID 
  End-SQL

  let $Sql-Statement = 'DELETE PS_PY_SSP_TMP_HDR'
  Begin-SQL On-Error=SQL-Error
    DELETE FROM PS_PY_SSP_TMP_HDR
     WHERE OPRID        = $Prcs_OprID
       AND RUN_CNTL_ID  = $Prcs_Run_Cntl_ID
  End-SQL

End-Procedure

!**********************
! Get Report Template *
!**********************
Begin-Procedure Get-Report-Template

   Let $sql-statement = 'Get-report-Template'

   let $report_defn_is_active = 'N'

begin-SELECT                     !Report Definition is ACTIVE
RMD.REPORT_DEFN_ID
RMD.PT_REPORT_STATUS
RMD.PT_TEMPLATE_TYPE

   let $report_defn_is_active = 'Y'

FROM PSXPRPTDEFN RMD
WHERE RMD.REPORT_DEFN_ID = $xmlp_report_defn
 AND  RMD.PT_REPORT_STATUS = 'A'
end-SELECT

  if $report_defn_is_active = 'N'
     display 'Report Definition  ' noline
     display $xmlp_report_defn noline
     display ' is not active.'
     stop
  end-if

  let $xmlp_template_id = ''

begin-SELECT                     ! Get XMLP Template ID
CAD.TMPLDEFN_ID

  let $xmlp_template_id = &CAD.TMPLDEFN_ID

FROM PSXPRPTTMPL CAD, PSXPTMPLDEFN HV, PSXPTMPLFILEDEF UV
WHERE CAD.REPORT_DEFN_ID = &RMD.REPORT_DEFN_ID
  AND HV.TMPLDEFN_ID = CAD.TMPLDEFN_ID
  AND HV.PT_TEMPLATE_TYPE = &RMD.PT_TEMPLATE_TYPE
  AND UV.TMPLDEFN_ID = HV.TMPLDEFN_ID
  AND UV.TMPLFILE_STATUS = 'A'
  and UV.EFFDT = (SELECT MAX(EFFDT) FROM PSXPTMPLFILEDEF UV1
                     WHERE UV1.TMPLDEFN_ID = UV.TMPLDEFN_ID
                       AND UV1.TMPLFILE_STATUS = 'A')
end-SELECT

  if $xmlp_template_id = ''
      do Get-Default-Report-Template
  end-if

  if $xmlp_template_id = ''
     display 'No template was found for Report Definition  ' noline
     display $xmlp_report_defn noline
     stop
  end-if

end-procedure

!******************************
! Get Default Report Template *
!******************************
Begin-Procedure Get-Default-Report-Template

   Let $sql-statement = 'Get-Default-Report-Template'

begin-SELECT
TMPLDEFN_ID

        let $xmlp_template_id = &TMPLDEFN_ID

FROM PSXPRPTTMPL
WHERE REPORT_DEFN_ID = &RMD.REPORT_DEFN_ID
  AND IS_DEFAULT = 'Y'

end-SELECT

end-procedure

#include 'pyxmltag.sqc'   !XML data tags


!***********************************************************************
begin-procedure Get-ETDarray-Entry-Count
!***********************************************************************

  move 0 to #j
  move 0 to #bnl
  while #j <= #lastCol
    get $ecde from ETDarray(#i) Code(#j)
    if rtrim($ecde,' ') <> ''                   !if array entry is not null
       move #j to #bnl
    end-if
    add 1 to #j
  end-while
  let #ecnt = #bnl
end-procedure


!***********************************************************************
begin-procedure Check-ETDarray-Garn-Code
!***********************************************************************

  move 0 to #j
 
  let $Garn_Amt  = 'N'
  let $Garn_CFee = 'N'
  let $Garn_Pfee = 'N'
  let $Garn_Tot  = 'N'

  while #j <= #lastCol
    get $jCode from ETDarray(#i) Code(#j)

    if $Garn_Code_Amt = $jCode
       let $Garn_Amt = 'Y'
    else
       if $Garn_Code_CFee = $jCode
          let $Garn_CFee = 'Y'
       else
          if $Garn_Code_Pfee = $jCode
             let $Garn_Pfee = 'Y'
          else
             if $Garn_Code_Tot = $jCode
                let $Garn_Tot = 'Y'
             end-if
          end-if
       end-if
    end-if

    add 1 to #j
  end-while

end-procedure


!*******************************
! Open XML Data For Bulk Print *
!*******************************
Begin-Procedure Open-XML-Data-For-Bulk-Print

  if $RC_PAYINIT.Text15 = $Create_XML_DATA
 
     evaluate $ReportID
  
       when = 'PAY003'

         If $RC_PAYINIT.PY_SSP_MAN_CHK = 'M'
            open '{IMPORTPREFIX}{XMLSSPFILEDMANLCHK}{IMPORTSUFFIX}' as 10 for-writing record=150:vary
            let $xmlssp_filenm =  '{IMPORTPREFIX}{XMLSSPFILEDMANLCHK}{IMPORTSUFFIX}'
         else
            open '{IMPORTPREFIX}{XMLSSPFILECHECK}{IMPORTSUFFIX}' as 10 for-writing record=150:vary
            let $xmlssp_filenm =  '{IMPORTPREFIX}{XMLSSPFILECHECK}{IMPORTSUFFIX}'
         end-if

       when = 'PAY003CN'

         If $RC_PAYINIT.PY_SSP_MAN_CHK = 'M'
            open '{IMPORTPREFIX}{XMLSSPFILEDMANLCHQ}{IMPORTSUFFIX}' as 10 for-writing record=150:vary
            let $xmlssp_filenm =  '{IMPORTPREFIX}{XMLSSPFILEDMANLCHQ}{IMPORTSUFFIX}'
         else
            open '{IMPORTPREFIX}{XMLSSPFILECHEQUE}{IMPORTSUFFIX}' as 10 for-writing record=150:vary
            let $xmlssp_filenm =  '{IMPORTPREFIX}{XMLSSPFILECHEQUE}{IMPORTSUFFIX}'
         end-if

       when = 'DDP003'

         open '{IMPORTPREFIX}{XMLSSPFILEADVICE}{IMPORTSUFFIX}' as 10 for-writing record=150:vary
         let $xmlssp_filenm =  '{IMPORTPREFIX}{XMLSSPFILEADVICE}{IMPORTSUFFIX}'

       when = 'DDP003CN'

         open '{IMPORTPREFIX}{XMLSSPFILEADVICECN}{IMPORTSUFFIX}' as 10 for-writing record=150:vary
         let $xmlssp_filenm =  '{IMPORTPREFIX}{XMLSSPFILEADVICECN}{IMPORTSUFFIX}'

     end-evaluate

  end-if

end-procedure

!*******************************
! Close XML Data For Bulk Print *
!*******************************
Begin-Procedure Close-XML-Data-For-Bulk-Print

  if $RC_PAYINIT.Text15 = $Create_XML_DATA
     close #outputfile
  end-if

end-procedure
