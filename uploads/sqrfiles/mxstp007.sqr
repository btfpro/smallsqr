!***********************************************************************
! MXSTP007.SQR   STPS DC-4 Courses/Events Certificates List.           *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2007/06/19:17:31:21                                 *
!       $Release:  HR9                                                 *
!    $Resolution:  689716                                              *
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'   !Set environment

Begin-Setup
#include 'setupdb.sqc'
 Declare-Printer   THIS_REPORT
  Type=HPLASERJET
  Font=5
  Point-Size=0
  Pitch=0
  Symbol-Set=19U     ! ASCII symbol set
 End-Declare
 
 Declare-Layout THIS_REPORT
  Orientation=Portrait
  Top-Margin= .35
  Left-Margin=.2
  Max-Lines=95
  Max-Columns=180
  Char-Width=4  !4
  Line-Height=7.5     ! 72/printer_point-size
 End-Declare
 
 Declare-Report THIS_REPORT
  Printer-Type=HPLASERJET
  LayOut=THIS_REPORT
 End-Declare
End-Setup


begin-report
  move '1' to $ReportDateType
  move '1' to $Reportyear4
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  do Init-Report
  do Report
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do Stdapi-Term
!  do Reset
end-report


begin-procedure Init-Report
  date-time () hh:mi:ss &timeBegan
  show 'v0507-3'
  display 'Report Began: ' noline
  display &timeBegan
  move 'MXSTP007' to $ReportID
  let $ReportTitle = 'STPS DC-4 Lista de Constancias de Habilidades Laborales'
  display $ReportTitle
end-procedure Init-Report

begin-heading 1
  position  (1)
end-heading

begin-procedure Report
  move 0 to #Emp_Count
  move 0 to #totalEmpCount
  let #maxEmployees = 7
  do Select-Parameters
  do Get-Company-Data
  
  if $estabID <> ''
  
     do Count-Employees
     
     #debug show '#totalEmpl: '  #totalEmpl
     if #totalEmpl > 0
        do print-format
        do Get-Employee-Data
        #debug show '#page-count: ' #page-count
     end-if

     if #page-count = 1 and #totalEmpl > 0
        new-page     
        do Print-Format2
     end-if
   else
     do By-Establishment
   end-if
end-procedure Report

begin-procedure Select-Parameters
begin-select
RC.COMPANY
RC.ESTABID  
RC.BEGIN_DT
RC.END_DT
RC.REP_DATA_FLG_MEX

  let $Company   = &RC.COMPANY
  let $estabId = rtrim(&RC.ESTABID,' ')
  let $Begin_dt  = &RC.BEGIN_DT
  let $End_dt    = &RC.END_DT
  
  if $estabId <> ''
     do Get-Estabid-Data
  end-if
  
  let $RepData = rtrim(&RC.REP_DATA_FLG_MEX, ' ')
  
  do Convert-To-DTU-Date($End_dt,$End_dt1)
  Do convert-to-dtu-date($AsOfToday, $Today) 
  do dtu-add-years($Today, -65, $End_dt_65)
  do dtu-add-years($Today, -18, $End_dt_18) 
  do Convert-From-DTU-Date($End_dt_65,$End_dt_65)
  do Convert-From-DTU-Date($End_dt_18,$End_dt_18)

  
FROM PS_RUN_STPS_MEX RC
WHERE RC.OPRID       = $Prcs_OprID
  AND RC.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-select
end-procedure Select-Parameters

!**************************************
begin-procedure By-Establishment
#debug show 'By-Establishment'

let #estabCount = 0

begin-select  DISTINCT
L.ESTABID           
  
   let $estabId = &L.ESTABID
   
   let #maxEmployees = 7 
   move 0 to #totalEmp   
   move 0 to #Emp_Count
   move 0 to #totalEmpCount
   
   Do Get-Estabid-Data 
   do Count-Employees
   if #totalEmpl > 0
      if #estabCount > 1  
         let #page-count = 0         
         new-page 
      end-if 
      do print-format
      do Get-Employee-Data
      #debug show '* #page-count: ' #page-count
      
      if #page-count = 1  
         new-page     
         do Print-Format2
      end-if
    end-if
     
 
FROM PS_JOB JO 
    ,PS_TRAINING T
    ,PS_LOCATION_TBL L
WHERE JO.EMPLID = T.EMPLID
AND   JO.EMPL_RCD = T.EMPL_RCD
AND   JO.COMPANY = $Company
AND JO.EMPL_STATUS = 'A'
AND JO.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
        WHERE EMPLID = JO.EMPLID
         AND EMPL_RCD = JO.EMPL_RCD
         AND EFFDT <= $End_dt)
AND JO.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
         WHERE EMPLID = JO.EMPLID
         AND EMPL_RCD = JO.EMPL_RCD
         AND EFFDT = JO.EFFDT)
AND JO.LOCATION  = L.LOCATION
AND JO.SETID_LOCATION = L.SETID
AND L.EFFDT = (SELECT MAX(L1.EFFDT) 
               FROM PS_LOCATION_TBL  L1
               WHERE L1.LOCATION = L.LOCATION 
               AND L1.SETID = L.SETID 
               AND L1.EFF_STATUS = 'A' 
               AND L1.EFFDT <= $End_dt )        
AND T.ATTENDANCE = 'C'                     
AND T.COURSE_END_DT BETWEEN $Begin_dt AND $End_dt  
end-select
end-procedure By-Establishment

!**************************************
begin-procedure Get-Employee-Data
#debug show 'Get-Employee-Data'
begin-select  
JO.EMPLID
COUNT(T.COURSE)   &countCourse
 
   let $Emplid = &JO.EMPLID
   move &countCourse to $Completed 09999
   #debug show '$Emplid: ' $Emplid
 
   do Get-Name-Data
   do Print-Detail
   
FROM PS_JOB JO 
    ,PS_TRAINING T
WHERE JO.EMPLID = T.EMPLID
AND   JO.EMPL_RCD = T.EMPL_RCD
AND   JO.COMPANY = $Company
[$whereLocation2]
AND JO.EMPL_STATUS = 'A'
AND JO.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
        WHERE EMPLID = JO.EMPLID
         AND EMPL_RCD = JO.EMPL_RCD
         AND EFFDT <= $End_dt)
AND JO.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
         WHERE EMPLID = JO.EMPLID
         AND EMPL_RCD = JO.EMPL_RCD
         AND EFFDT = JO.EFFDT)
AND T.ATTENDANCE = 'C'                     
AND T.COURSE_END_DT BETWEEN $Begin_dt AND $End_dt  
GROUP BY JO.EMPLID
ORDER BY JO.EMPLID
end-select
end-procedure Get-Employee-Data



!**************************************
begin-procedure Get-Name-Data
begin-select 
P.NAME
P.LAST_NAME
P.LAST_NAME_SRCH
P.SECOND_LAST_NAME
P.SECOND_LAST_SRCH
P.FIRST_NAME
P.FIRST_NAME_SRCH  

  let $Emp_Name = rtrim(&P.LAST_NAME_SRCH,' ') || ' ' || rtrim(&P.SECOND_LAST_SRCH,' ') || ' ' || rtrim(&P.FIRST_NAME_SRCH,' ')
  
FROM PS_NAMES P
WHERE P.EMPLID = $emplid
and   P.NAME_TYPE = 'PRI'
and   P.EFFDT     = (SELECT MAX(EFFDT) FROM PS_NAMES
                     WHERE EMPLID = P.EMPLID
                     AND   NAME_TYPE = P.NAME_TYPE
                     AND   EFFDT <= $End_dt) 
end-select
end-procedure Get-Name-Data

begin-procedure Get-Company-Data
#debug show 'Get-Company-Data'
begin-select
C.DESCR
CM.RFC_ER_ID_MEX
CM.COMP_ACTIVITY_MEX
CM.REP_NAME_MEX
CM.REP_RFC_MEX
CM.REP_CURP_MEX

  let $Comp_Descr = &C.DESCR
  let $RFC_ER_ID = &CM.RFC_ER_ID_MEX
  let $RFC_ER_ID = rtrim($RFC_ER_ID,' ')
  let $activity   = &CM.COMP_ACTIVITY_MEX

  if $repData = 'N' 
  
     let $Rep_Name   = &CM.REP_NAME_MEX
     let $RFC_ER_S   = substr($RFC_ER_ID,1,12)
     let $RFC_ER_1   = substr($RFC_ER_S,1,1)
     let $RFC_ER_2   = substr($RFC_ER_S,2,1)
     let $RFC_ER_3   = substr($RFC_ER_S,3,1)
     let $RFC_ER_4   = ' '
     let $RFC_ER_5   = substr($RFC_ER_S,4,1)
     let $RFC_ER_6   = substr($RFC_ER_S,5,1)
     let $RFC_ER_7   = substr($RFC_ER_S,6,1)
     let $RFC_ER_8   = substr($RFC_ER_S,7,1)
     let $RFC_ER_9   = substr($RFC_ER_S,8,1)
     let $RFC_ER_10   = substr($RFC_ER_S,9,1)
     let $RFC_ER_11  = substr($RFC_ER_S,10,1)
     let $RFC_ER_12  = substr($RFC_ER_S,11,1)
     let $RFC_ER_13  = substr($RFC_ER_S,12,1)
     do Get-Comp-Descr-Lang
  else  
     let $Comp_Descr = &CM.REP_NAME_MEX
     let $Rep_Name   = &CM.REP_NAME_MEX
     let $repRFC  = &CM.REP_RFC_MEX
     let $repCURP = rtrim(&CM.REP_CURP_MEX, ' ')
     let $RFC_ER_1   = substr($repRFC,1,1)
     let $RFC_ER_2   = substr($repRFC,2,1)
     let $RFC_ER_3   = substr($repRFC,3,1)
     let $RFC_ER_4   = substr($repRFC,4,1)
     let $RFC_ER_5   = substr($repRFC,5,1)
     let $RFC_ER_6   = substr($repRFC,6,1)
     let $RFC_ER_7   = substr($repRFC,7,1)
     let $RFC_ER_8   = substr($repRFC,8,1)
     let $RFC_ER_9   = substr($repRFC,9,1)
     let $RFC_ER_10  = substr($repRFC,10,1)
     let $RFC_ER_11  = substr($repRFC,11,1)
     let $RFC_ER_12  = substr($repRFC,12,1)
     let $RFC_ER_13  = substr($repRFC,13,1)    
  end-if
 

FROM PS_COMPANY_TBL     C,
     PS_COMPANY_TBL_MEX CM

WHERE C.COMPANY = $Company
and C.COMPANY = CM.COMPANY
and C.EFFDT = (SELECT MAX(EFFDT) FROM PS_COMPANY_TBL
               WHERE COMPANY = C.COMPANY
               AND EFFDT <= $End_dt)
and CM.EFFDT = C.EFFDT
end-select
end-procedure Get-Company-Data

begin-procedure Get-Comp-Descr-Lang
begin-SELECT
CTL.DESCR
  if rtrim(&CTL.Descr,' ') <> ''
     let $Comp_Descr  = rtrim(&CTL.Descr,' ')
  end-if
FROM  PS_COMPNY_TBL_LANG CTL
WHERE CTL.COMPANY     = $Company
  AND CTL.LANGUAGE_CD = $curr_language_cd
  AND CTL.EFFDT       = (SELECT MAX(EFFDT) FROM   PS_COMPNY_TBL_LANG
                         WHERE  COMPANY   = CTL.COMPANY
                         AND    LANGUAGE_CD = CTL.LANGUAGE_CD
                         AND    EFFDT      <= $End_dt)
end-SELECT
end-procedure Get-Comp-Descr-Lang

begin-procedure Get-Estabid-Data
begin-select
IMS.CITY
IMS.STATE
IMS.ADDRESS1
IMS.ADDRESS3
IMS.ADDRESS4
IMS.POSTAL
IMS.COUNTY
IMS.IMS_ZONE_MEX
IMS.IMS_SECTOR_MEX

  let $IMS_ER_S  = substr($estabId,1,11)
  let $IMS_ER_1  = substr($IMS_ER_S,1,1)
  let $IMS_ER_2  = substr($IMS_ER_S,2,1)
  let $IMS_ER_3  = substr($IMS_ER_S,3,1)
  let $IMS_ER_4  = substr($IMS_ER_S,4,1)
  let $IMS_ER_5  = substr($IMS_ER_S,5,1)
  let $IMS_ER_6  = substr($IMS_ER_S,6,1)
  let $IMS_ER_7  = substr($IMS_ER_S,7,1)
  let $IMS_ER_8  = substr($IMS_ER_S,8,1)
  let $IMS_ER_9  = substr($IMS_ER_S,9,1)
  let $IMS_ER_10 = substr($IMS_ER_S,10,1)
  let $IMS_ER_11 = substr($IMS_ER_S,11,1)

  let $City     = rtrim(&IMS.CITY,' ')
  let $State    = &IMS.STATE
  do Get-State-Name
  
  let $Address1 = rtrim(&IMS.ADDRESS1, ' ')
  let $address3 = rtrim(&IMS.ADDRESS3, ' ')
  let $postal   = &IMS.POSTAL

  let $postal1  = substr($postal, 1,1)
  let $postal2  = substr($postal, 2,1)
  let $postal3  = substr($postal, 3,1)
  let $postal4  = substr($postal, 4,1)
  let $postal5  = substr($postal, 5,1)
  
  let $address4 = rtrim(&IMS.ADDRESS4, ' ')
  
  Do Select-Estab-Phone 
  
       
  let $whereLocation1 = 'AND J.LOCATION '
  let $whereLocation2 = 'AND JO.LOCATION '
  let $whereLocation  = ' IN (SELECT L.LOCATION FROM PS_LOCATION_TBL L WHERE L.ESTABID = '
  let $whereLocation  = $whereLocation  || '''' || $estabId || '''' || ' AND L.EFFDT = (SELECT MAX(EFFDT) FROM PS_LOCATION_TBL'
  let $whereLocation  = $whereLocation  || ' WHERE LOCATION = L.LOCATION AND SETID = L.SETID AND EFF_STATUS = ' || '''' || 'A' || ''''
  let $whereLocation  = $whereLocation  || ' AND EFFDT <= ' || '''' ||$End_dt|| '''' || '))'
  let $whereLocation1 = $whereLocation1 || $whereLocation
  let $whereLocation2 = $whereLocation2 || $whereLocation
         
  #debug show '$whereLocation1: ' $whereLocation1
  #debug show '$whereLocation2: ' $whereLocation2
  
  let #estabCount = #estabCount + 1
  
FROM  PS_ESTAB_TBL IMS
WHERE IMS.ESTABID = $estabId
AND   IMS.EFFDT = (SELECT MAX(EFFDT) 
                   FROM PS_ESTAB_TBL
                   WHERE ESTABID = IMS.ESTABID
                   AND EFF_STATUS = 'A'
                   AND EFFDT <= $End_dt)
end-select
end-procedure Get-Estabid-Data


begin-procedure Get-State-Name
begin-select
SN.DESCR
SN.NUMERIC_CD
  let $State_Desc = &SN.DESCR
  let $stateCode1  = substr(&SN.NUMERIC_CD, 1,1)
  let $stateCode2  = substr(&SN.NUMERIC_CD, 2,1)

FROM PS_STATE_NAMES_TBL SN
WHERE SN.COUNTRY = 'MEX'
  AND SN.STATE = $State
end-select
end-procedure Get-State-Name

!**************************************
begin-procedure print-format
Alter-Printer Point-size = 12  Font-Type = Proportional Font = 6

Let #c01 = 13
Let #c07 = 73
Let #c02 = 51
Let #c08 = 84
Let #c03 = 71
Let #c04 = 89
Let #comp = 119


Let #r = 4
Let #r01 = 22
Let #r02 = #r01 + #r
Let #r03 = #r02 + #r + 1
Let #r04 = #r03 + #r
Let #r05 = #r04 + #r
Let #r06 = #r05 + #r
Let #r07 = #r06 + (#r * 2) 
Let #r08 = #r07 + #r
Let #r09 = #r08 + #r
Let #r10 = #r09 + #r   
Let #r11 = #r10 + #r + 4
Let #r12 = #r11 + (#r * 2) 
Let #r13 = #r12 + (#r * 2) + 1

print $Comp_Descr           (#r01,#c01)
print $RFC_ER_1             (#r02,#c01)
print $RFC_ER_2             (  ,+3)
print $RFC_ER_3             ( ,+4)
print $RFC_ER_4             ( ,+3)
print $RFC_ER_5             ( ,+6)
print $RFC_ER_6             ( ,+3)
print $RFC_ER_7             ( ,+4)
print $RFC_ER_8             ( ,+3)
print $RFC_ER_9             ( ,+4)
print $RFC_ER_10            ( ,+3)
print $RFC_ER_11            ( ,+7)
print $RFC_ER_12            ( ,+3)
print $RFC_ER_13            ( ,+3)

print $IMS_ER_1             (,#c08)
print $IMS_ER_2             (,+3)
print $IMS_ER_3             (,+3)
print $IMS_ER_4             (,+3)
print $IMS_ER_5             (,+3)
print $IMS_ER_6             (,+3)
print $IMS_ER_7             (,+4)
print $IMS_ER_8             (,+3)
print $IMS_ER_9             (,+3)
print $IMS_ER_10            (,+3)
print $IMS_ER_11            (,+8)

print $Address1             (#r03,#c01)
print $address3             (,90,25)

print $City                 (#r04,#c01,22)
print $postal1              (,51)
print $postal2              (,+3)
print $postal3              (,+4)
print $postal4              (,+3)
print $postal5              (,+4)
print $address4             (,+4,40)

print $state                (#r05,#c01)
print $stateCode1           (,64)
print $stateCode2           (,68)
print $phone                (,#c07)
print $fax                  (,106)

if $repData = 'Y' 
   print $repCURP           (#r06,81) 
else
   print ' '                (#r06,81) 
end-if

print $activity             (+4,#c01)

print #totalEmpl            (#r07,#c02) edit 999
print #totalMale            (#r08,#c02) edit 999
print #totalFemale          (#r09,#c02)   edit 999

print #total18              (#r07,#c03) edit 999
print #total18Male          (#r08,#c03) edit 999
print #total18Female        (#r09,#c03) edit 999

print #totalDisabled        (#r07,#c04) edit 999
print #totalDisMale         (#r08,#c04) edit 999
print #totalDisFemale       (#r09,#c04) edit 999

print #total65              (#r07,106) edit 999
print #total65Male          (#r08,106) edit 999
print #total65Female        (#r09,106) edit 999

print #page-count            (#r10,18)  edit 99
last-page                    (,31)  
print ' '                    (#r11)  
end-procedure print-format

begin-procedure Print-Detail
   add 1 to #totalEmpCount      
   print $Emp_Name             (+2,#c01,35)
   print $Completed            ( ,#comp)  
   
  #debug show '#Emp_Count: ' #Emp_Count ' #maxEmployees: '  #maxEmployees
      
   if (#Emp_Count  = #maxEmployees) and 
      (#totalEmpCount < #totalEmpl)
      new-page
      do Print-Format2 
      print ' '   (15,1)
      let #Emp_Count = 0  
      Let #maxEmployees = 24  
      Let #comp = 125
   end-if
   
    
   add 1 to #Emp_Count   
end-procedure Print-Detail

begin-procedure print-format2
print $Rep_Name             (#r12,0,30) center
let $City_St = substr($City , 1, 25) || ', ' || $State
print $City_St              (#r13,36)
do Convert-To-DTU-Date($AsOfToday,$AsOfToday1)
let $Today_Y1 = substr($AsOfToday1,3,1)
let $Today_Y2 = substr($AsOfToday1,4,1)
let $Today_M1 = substr($AsOfToday1,6,1)
let $Today_M2 = substr($AsOfToday1,7,1)
let $Today_D1 = substr($AsOfToday1,9,1)
let $Today_D2 = substr($AsOfToday1,10,1)
print $Today_Y1             (#r13,86)
print $Today_Y2             (#r13,91)
print $Today_M1             (#r13,96)
print $Today_M2             (#r13,101)
print $Today_D1             (#r13,106)
print $Today_D2             (#r13,111)
end-procedure print-format2

!**************************************
begin-procedure Count-Employees
#debug show 'Count-Employees'

  Let #totalEmpl = 0

  do Count-Employees-male
  do Count-Employees-female
  
  let #totalEmpl = #totalMale + #totalFemale
  
  do Count-Employees-disability
  
  let #TotalDisabled = #TotalDisFemale + #TotalDisMale
  
  do Count-Employees-age65
  
  let #Total65 = #Total65Female + #Total65Male
  
  do Count-Employees-age18
  
  let #Total18 = #Total18Female + #Total18Male
  

end-procedure Count-Employees

!**************************************
begin-procedure Count-Employees-male
#debug show  'Count-Employees-male'
begin-select
COUNT(*) &totalEmplMale

  let #totalMale = &totalEmplMale
 
FROM PS_JOB J
    ,PS_PERS_DATA_EFFDT P
    ,PS_TRAINING T
WHERE J.EMPLID = P.EMPLID
AND J.EMPLID = T.EMPLID
AND J.EMPL_RCD = T.EMPL_RCD
AND J.COMPANY = $Company
AND J.EMPL_STATUS = 'A'
AND J.EFFDT  = (SELECT MAX(EFFDT) 
               FROM PS_JOB
               WHERE EMPLID = J.EMPLID
               AND EMPL_RCD = J.EMPL_RCD
               AND EFFDT   <= $End_dt)      
AND J.EFFSEQ = (SELECT MAX(EFFSEQ) 
               FROM PS_JOB
               WHERE EMPLID = J.EMPLID
               AND EMPL_RCD = J.EMPL_RCD
               AND EFFDT    = J.EFFDT)
AND P.EFFDT  = (SELECT MAX(EFFDT) 
               FROM PS_PERS_DATA_EFFDT
               WHERE EMPLID = P.EMPLID
               AND EFFDT   <= $End_dt)                 
AND P.SEX    = 'M' 
AND T.ATTENDANCE = 'C'                     
AND T.COURSE_END_DT BETWEEN $Begin_dt AND $End_dt  
[$whereLocation1]                                
end-select
end-procedure Count-Employees-male

!**************************************
begin-procedure Count-Employees-female
begin-select
COUNT(*) &totalEmplFemale
  let #TotalFemale = &totalEmplFemale
 
FROM PS_JOB J
    ,PS_PERS_DATA_EFFDT P
    ,PS_TRAINING T
WHERE J.EMPLID = P.EMPLID
AND J.EMPLID = T.EMPLID
AND J.EMPL_RCD = T.EMPL_RCD
AND J.COMPANY = $Company
AND J.EMPL_STATUS = 'A'
AND J.EFFDT  = (SELECT MAX(EFFDT) 
               FROM PS_JOB
               WHERE EMPLID = J.EMPLID
               AND EMPL_RCD = J.EMPL_RCD
               AND EFFDT   <= $End_dt)      
AND J.EFFSEQ = (SELECT MAX(EFFSEQ) 
               FROM PS_JOB
               WHERE EMPLID = J.EMPLID
               AND EMPL_RCD = J.EMPL_RCD
               AND EFFDT    = J.EFFDT)
AND P.EFFDT  = (SELECT MAX(EFFDT) 
               FROM PS_PERS_DATA_EFFDT
               WHERE EMPLID = P.EMPLID
               AND EFFDT   <= $End_dt)                 
AND P.SEX    = 'F' 
AND T.ATTENDANCE = 'C'                     
AND T.COURSE_END_DT BETWEEN $Begin_dt AND $End_dt  
[$whereLocation1]                                                         
end-select
end-procedure Count-Employees-female

!**************************************
begin-procedure Count-Employees-disability
begin-select
COUNT(DISTINCT J.EMPLID) &totalEmplDisFemale

  let #TotalDisFemale = &totalEmplDisFemale
  
FROM PS_JOB J
    ,PS_DISABILITY D
    ,PS_PERS_DATA_EFFDT P
    ,PS_TRAINING T
WHERE J.EMPLID = D.EMPLID
AND   J.EMPLID = P.EMPLID
AND   J.EMPLID = T.EMPLID
AND   J.EMPL_RCD = T.EMPL_RCD
AND  J.COMPANY = $Company
[$whereLocation1]
AND J.EMPL_STATUS = 'A'
AND J.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
               WHERE EMPLID = J.EMPLID
               AND EMPL_RCD = J.EMPL_RCD
               AND EFFDT   <= $End_dt)
AND J.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
               WHERE EMPLID = J.EMPLID
               AND EMPL_RCD = J.EMPL_RCD
               AND EFFDT = J.EFFDT)
AND P.EFFDT = (SELECT MAX(EFFDT) FROM PS_PERS_DATA_EFFDT
        WHERE EMPLID = P.EMPLID
        AND EFFDT <= $End_dt)                 
AND D.DISABLED = 'Y' 
AND P.SEX = 'F' 
AND T.ATTENDANCE = 'C'                     
AND T.COURSE_END_DT BETWEEN $Begin_dt AND $End_dt  
end-select
 
begin-select
COUNT(DISTINCT J.EMPLID) &totalEmplDisMale

  let #TotalDisMale = &totalEmplDisMale
  
FROM PS_JOB J
    ,PS_DISABILITY D
    ,PS_PERS_DATA_EFFDT P
    ,PS_TRAINING T
WHERE J.EMPLID = D.EMPLID
AND   J.EMPLID = P.EMPLID
AND   J.EMPLID = T.EMPLID
AND   J.EMPL_RCD = T.EMPL_RCD
AND  J.COMPANY = $Company
[$whereLocation1]
AND J.EMPL_STATUS = 'A'
AND J.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
               WHERE EMPLID = J.EMPLID
               AND EMPL_RCD = J.EMPL_RCD
               AND EFFDT   <= $End_dt)
AND J.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
               WHERE EMPLID = J.EMPLID
               AND EMPL_RCD = J.EMPL_RCD
               AND EFFDT = J.EFFDT)
AND P.EFFDT = (SELECT MAX(EFFDT) FROM PS_PERS_DATA_EFFDT
        WHERE EMPLID = P.EMPLID
        AND EFFDT <= $End_dt)                 
AND D.DISABLED = 'Y' 
AND P.SEX = 'M' 
AND T.ATTENDANCE = 'C'                     
AND T.COURSE_END_DT BETWEEN $Begin_dt AND $End_dt 
end-select
end-procedure Count-Employees-disability

!**************************************
begin-procedure Count-Employees-Age65
begin-select
COUNT(DISTINCT J.EMPLID) &total65Female

  let #Total65Female = &total65Female
  
FROM PS_JOB J
    ,PS_PERSON PE
    ,PS_PERS_DATA_EFFDT P
    ,PS_TRAINING T
WHERE J.EMPLID = PE.EMPLID
AND J.EMPLID = P.EMPLID
AND J.EMPLID = T.EMPLID
AND J.COMPANY = $Company
[$whereLocation1]
AND J.EMPL_STATUS = 'A'
AND J.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
               WHERE EMPLID = J.EMPLID
               AND EMPL_RCD = J.EMPL_RCD
               AND EFFDT   <= $End_dt)
AND J.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
               WHERE EMPLID = J.EMPLID
               AND EMPL_RCD = J.EMPL_RCD
               AND EFFDT = J.EFFDT)
AND PE.BIRTHDATE <= $End_dt_65  
AND P.EFFDT = (SELECT MAX(EFFDT) 
               FROM PS_PERS_DATA_EFFDT
              WHERE EMPLID = P.EMPLID
              AND EFFDT <= $End_dt)  
AND P.SEX = 'F'
AND T.ATTENDANCE = 'C'                     
AND T.COURSE_END_DT BETWEEN $Begin_dt AND $End_dt 
end-select

begin-select
COUNT(DISTINCT J.EMPLID) &total65Male

  let #Total65Male = &total65Male
  
FROM PS_JOB J
    ,PS_PERSON PE
    ,PS_PERS_DATA_EFFDT P
    ,PS_TRAINING T
WHERE J.EMPLID = PE.EMPLID
AND J.EMPLID = P.EMPLID
AND J.EMPLID = T.EMPLID
AND J.EMPL_RCD = T.EMPL_RCD
AND J.COMPANY = $Company
[$whereLocation1]
AND J.EMPL_STATUS = 'A'
AND J.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
               WHERE EMPLID = J.EMPLID
               AND EMPL_RCD = J.EMPL_RCD
               AND EFFDT   <= $End_dt)
AND J.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
               WHERE EMPLID = J.EMPLID
               AND EMPL_RCD = J.EMPL_RCD
               AND EFFDT = J.EFFDT)
AND PE.BIRTHDATE <= $End_dt_65  
AND P.EFFDT = (SELECT MAX(EFFDT) 
               FROM PS_PERS_DATA_EFFDT
              WHERE EMPLID = P.EMPLID
              AND EFFDT <= $End_dt)  
AND P.SEX = 'M'
AND T.ATTENDANCE = 'C'                     
AND T.COURSE_END_DT BETWEEN $Begin_dt AND $End_dt   
end-select
end-procedure Count-Employees-Age65

!**************************************
begin-procedure Count-Employees-Age18
begin-select
COUNT(DISTINCT J.EMPLID) &total18Female

  let #Total18Female = &total18Female

FROM PS_JOB J
    ,PS_PERSON PE
    ,PS_PERS_DATA_EFFDT P
    ,PS_TRAINING T
WHERE J.EMPLID = PE.EMPLID
AND J.EMPLID = P.EMPLID
AND J.EMPLID = T.EMPLID
AND J.EMPL_RCD = T.EMPL_RCD
AND J.COMPANY = $Company
[$whereLocation1]
AND J.EMPL_STATUS = 'A'
AND J.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
               WHERE EMPLID = J.EMPLID
               AND EMPL_RCD = J.EMPL_RCD
               AND EFFDT   <= $End_dt)
AND J.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
               WHERE EMPLID = J.EMPLID
               AND EMPL_RCD = J.EMPL_RCD
               AND EFFDT = J.EFFDT)
AND PE.BIRTHDATE > $End_dt_18   
AND P.EFFDT = (SELECT MAX(EFFDT) 
               FROM PS_PERS_DATA_EFFDT
              WHERE EMPLID = P.EMPLID
              AND EFFDT <= $End_dt)  
AND P.SEX = 'F'  
AND T.ATTENDANCE = 'C'                     
AND T.COURSE_END_DT BETWEEN $Begin_dt AND $End_dt  
end-select

begin-select
COUNT(DISTINCT J.EMPLID) &total18Male

  let #Total18Male = &total18Male
  
FROM PS_JOB J
    ,PS_PERSON PE
    ,PS_PERS_DATA_EFFDT P
    ,PS_TRAINING T
WHERE J.EMPLID = PE.EMPLID
AND J.EMPLID = P.EMPLID
AND J.EMPLID = T.EMPLID
AND J.EMPL_RCD = T.EMPL_RCD
AND J.COMPANY = $Company
[$whereLocation1]
AND J.EMPL_STATUS = 'A'
AND J.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
               WHERE EMPLID = J.EMPLID
               AND EMPL_RCD = J.EMPL_RCD
               AND EFFDT   <= $End_dt)
AND J.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
               WHERE EMPLID = J.EMPLID
               AND EMPL_RCD = J.EMPL_RCD
               AND EFFDT = J.EFFDT)
AND PE.BIRTHDATE > $End_dt_18   
AND P.EFFDT = (SELECT MAX(EFFDT) 
               FROM PS_PERS_DATA_EFFDT
              WHERE EMPLID = P.EMPLID
              AND EFFDT <= $End_dt)  
AND P.SEX = 'M'  
AND T.ATTENDANCE = 'C'                     
AND T.COURSE_END_DT BETWEEN $Begin_dt AND $End_dt  
end-select
end-procedure Count-Employees-Age18

!**************************************
begin-procedure Select-Estab-Phone
Let $Phone = ''
Let $fax   = ''

Begin-Select
A.PHONE_TYPE
A.PHONE
A.COUNTRY_CODE

  Let $PhoneType = Rtrim(&A.PHONE_TYPE,' ')
  
  Evaluate $PhoneType
  when = 'MAIN'
  when = 'BUSN'
    Let $Phone = Rtrim(&A.PHONE, ' ')
  when = 'FAX'
    Let $fax   = Rtrim(&A.PHONE, ' ')
  End-Evaluate
  
FROM  PS_ESTAB_PHONE A
WHERE A.ESTABID = $estabId
AND   A.EFFDT = (SELECT MAX(AA.EFFDT) 
                 FROM PS_ESTAB_PHONE AA
                 WHERE AA.ESTABID = A.ESTABID
                 AND AA.EFFDT <= $End_dt)
End-Select
End-Procedure Select-Estab-Phone



!****************************************************************
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#include 'datemath.sqc'  !Date math routines
!#include 'askcalyr.sqc'  !Ask-Calendar-Year
