!*********************************************************************!
!  gpusyt61:  Audit W-2cPR Batch- Puerto Rico                         !
!*********************************************************************!
!                                                                     !
!               Confidentiality Information:                          !
!                                                                     !
!                                                                     !
! This module contains confidential and proprietary information       !
! of Oracle; it is not to be copied, reproduced, or transmitted       !
! in any form, by any means, in whole or in part, nor is it to        !
! be used for any purpose other than that for which it is             !
! expressly provided under the applicable license agreement.          !
!                                                                     !
! Copyright (C) 2006 Oracle. All Rights Reserved.                     !
!                                                                     !
!*********************************************************************!
!                                                                     !
!          $Date:  2006/08/31:17:56:40                                 !
!       $Release:  HR9                                                 !
!      $Revision:  102                                                 !
!                                                                     !
!*********************************************************************!

#include 'setenv.sqc'   !Set environment
#include 'setup02.sqc'

!*********************************************************************
Begin-setup
 #Include 'setupdb.sqc'               ! Database specific setup
end-setup
!*********************************************************************
Begin-report
  do Init-Report
  do Stdapi-Term
End-Report
!*********************************************************************
Begin-Procedure Init-Report

  Display ''
  Display 'Printing W-2cPR Audit'

  let $t1 = DateToStr(DateNow(),'hh:mi:ss')  
  display $t1
  do Assign-Year-End-Variables
  move 'GPUSYT61' to $ReportID
  move 'W-2cPR Audit Report- Puerto Rico' to $ReportTitle

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Initialization
  do Assign-Year-End-Variables
  do Emp-Stream
  do Read-Employee-Data

  if $EmployeeFound = 'N'
    Display ' '
    Display '****** No Employee Records Selected ******'
    Display ' '
    print '********************************'  (+3,1)
    print '  No Employee Records Selected  '  (+1,1)
    print '********************************'  (+1,1)
  else
    Display ''
    Display 'Upon successful conclusion of this program, '
    Display 'one audit file will have been created that contains '
    Display 'detail information on each employee and summary information '
    Display 'for the W-3cPR totals report. '
    Display ''
    Display ''
  end-if

  let $t2 = DateToStr(DateNow(),'hh:mi:ss')  
  display $t2
End-Procedure
!*********************************************************************
Begin-heading 8
        #Include 'stdhdg01.sqc'

        print 'W2 Rpt Company '              (3,1)
        print $A.W2_Reporting_Co             (0,+2)
        print $A.Descr                       (0,+2)
        let $TaxYear = 'Tax Year ' || $CalYear
        print $TaxYear                       (3,)    center
        print 'Audit Report ' (5,1)
        print 'Batch Number:' (,+5)
        print $W2c_Batch_Nbr  (,+2) edit B99999

        print 'Emplid' (+2,1)
        print 'Form W-2 Box' (,36)
        print 'State' (,51)
        print 'Previous ' (,87)
        print 'Corrected ' (,119)
        print 'Increase/decrease ' (,146)
        print 'Name' (+1,1)
        print 'SSN' (+1,1)

end-heading
!*********************************************************************
Begin-Procedure Initialization
        do Get-Current-DateTime
        move '1' to $MMLZero
        move '1' to $Year4
        do Format-DateTime($AsOfToday, $910Date, {DEFYMD},'','')

        move $910Date to $AsOfYear xxxx   !extract the current year
        move $AsOfYear  to #AsOfYear
        move #AsOfYear  to #saveAsOfYear
        subtract 1    from #AsOfYear
        do Init-Values
        do Get-Tax-Reporting-Run-Controls
        move &TX.CALENDAR_YEAR  to $CalYear 9999
        do Get-W2C-Run-Controls
        let $AsOfDate = $CalYear || '1231'
        do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')

Begin-Select
TEMP_SSN_MASK
        FROM PS_INSTALLATION
End-Select

End-Procedure
!*********************************************************************
Begin-Procedure Read-Employee-Data

  move 'N' to $EmployeeFound


Begin-Select
E.GPUS_TAX_EIN          () ON-BREAK LEVEL=1 PRINT=NEVER BEFORE=BEFORE-COMPANY AFTER=AFTER-COMPANY
E.EMPLID                () ON-BREAK LEVEL=2 PRINT=NEVER BEFORE=BEFORE-EMPLID
E.SSN
E.GPUS_YE_FNAME
E.GPUS_YE_MNAME
E.GPUS_YE_LNAME
E.GPUS_YE_SUFFIX
E.GPUS_YEC_STATUS
E.ADDRESS1
E.ADDRESS2
E.CITY
E.STATE
E.POSTAL
E.COUNTRY
E.GPUS_PSSN
E.GPUS_YE_PFNAME
E.GPUS_YE_PMNAME
E.GPUS_YE_PLNAME
E.GPUS_YE_PSUFFIX
E.GPUS_PADDRESS1
E.GPUS_PADDRESS2
E.GPUS_PCITY
E.GPUS_PSTATE
E.GPUS_PCOUNTRY
E.GPUS_PPOSTAL
E.GPUS_YEC_BATCH_NBR
E.GPUS_CAL_YEAR
E.GPUS_TAXFORM_ID
E.DESCRLONG

        move 'Y' to $EmployeeFound
        if &E.GPUS_YEC_STATUS  <> '30'
                do Load-Amounts
                do Print-W2C
                add 1 to #W3c_Count
        else
                print  $E.EmplID  (+3,1)
                print  $E.W2_Name (+1,1)
                print '***** Voided W-2cPR ***** ' (,+9)
                print  $E.SSN (+1,1)
        end-if
        FROM  PS_GPUS_YEC_DAT_PR E
        WHERE E.GPUS_TAXFORM_ID       =    $Taxform_ID
        [$E.Batch_Nbr]
        [$fromtoE]
        ORDER BY E.GPUS_TAX_EIN, E.SSN
End-Select
End-Procedure

!*********************************************************************
Begin-Procedure Before-Company
Begin-Select
A.GPUS_YE_RPT_CO
A.DESCR
A.GPUS_TAX_EIN
A.ADDRESS1
A.ADDRESS2
A.CITY
A.STATE
A.POSTAL
A.COUNTRY

    move &A.GPUS_TAX_EIN     to       $Federal_EIN 099999999
    move $Federal_EIN        to       $A.Federal_EIN xx-xxxxxxx
    move &A.Descr            to       $A.Descr
    move &A.Address1         to       $A.Address1
    move &A.Address2         to       $A.Address2
    move &A.Country          to       $A.Country
    let  $A.City             =        RTRIM(&A.City,' ')
    let  $A.State            =        RTRIM(&A.State,' ')
    move &A.POSTAL           to       $A.Postal
    move &A.GPUS_YE_RPT_CO   to       $A.W2_Reporting_Co


    UPPERCASE $A.Descr
    UPPERCASE $A.Address1
    UPPERCASE $A.Address2
    UPPERCASE $A.Country
    UPPERCASE $A.City

    move $A.Federal_EIN  to     $W3c_EIN
    move $A.Descr        to     $W3c_Descr
    move $A.Address1     to     $W3c_Address1
    move $A.Address2     to     $W3c_Address2

        if $A.Country = 'USA'
                move $A.Postal        to $ZipExtsn ~~~~~~xxxx
                if instr($A.Postal,'-',6) = 0
                and $ZipExtsn <> '    '
                let $A.Postal = substr($A.Postal,1,5) || '-' || substr($A.Postal,6,4)
                end-if
                let $W3c_Address3 = $A.City || ', ' || $A.State || ' ' || $A.Postal
        else
                let $W3c_Address3 = $A.City || ', ' || $A.State || ' ' ||
                $A.Country || ' ' || $A.Postal
        end-if

        move 0 to #W3c_Count

        DO Get-Max-Effdate

        FROM  PS_GPUS_YE_CO_TBL A
        WHERE A.GPUS_TAX_EIN  = &E.GPUS_TAX_EIN
        AND A.GPUS_YE_RPT_CO <> ' '
End-Select
End-Procedure

!*********************************************************************

Begin-Procedure Get-Max-Effdate
Begin-Select
MAX(W.EFFDT) &DT
        FROM PS_GPUS_YE_CO_TBL W
        WHERE W.EFFDT  <= $AsOfDate
        AND W.GPUS_YE_RPT_CO = &A.GPUS_YE_RPT_CO
End-Select
End-Procedure

!*********************************************************************

Begin-Procedure After-Company
  do Print-W3c-Totals
  do Init-W3c-Totals
End-Procedure

!*********************************************************************
Begin-Procedure Before-EmplID

        move &E.EMPLID   to $E.EmplID

        move &E.SSN to $S123 xxx

        if $S123 = &Temp_SSN_Mask or RTRIM(&E.SSN, ' ') = ''
                 move 'Applied For' to $E.SSN
        else
                 move &E.SSN to $E.SSN xxx-xx-xxxx
        end-if

        move &E.GPUS_PSSN to $S123 xxx

        if $S123 = &Temp_SSN_Mask or RTRIM(&E.GPUS_PSSN, ' ') = ''
                move 'Applied For' to $E.Prv_SSN
        else
                move &E.GPUS_PSSN to $E.Prv_SSN xxx-xx-xxxx
        end-if

        let  $W2C_FNAME        =  RTRIM(&E.GPUS_YE_FNAME,' ')
        let  $W2C_MIDDLE_NAME  =  RTRIM(&E.GPUS_YE_MNAME ,' ')
        let  $W2C_LNAME        =  RTRIM(&E.GPUS_YE_LNAME ,' ')
        let  $W2C_SUFFIX       =  RTRIM(&E.GPUS_YE_SUFFIX ,' ')
        let  $W2_Name          = $W2C_FNAME || ' ' || $W2C_MIDDLE_NAME || ' ' ||
                               $W2C_LNAME || ' ' || $W2C_SUFFIX


        move &E.ADDRESS1     to $Address1
        move &E.ADDRESS2     to $Address2
        move &E.COUNTRY      to $Country
        let  $CITY           =  RTRIM(&E.City,' ')
        let  $STATE          =  RTRIM(&E.State,' ')
        move &E.POSTAL       to $Postal


        let  $PRV_YE_FNAME         =  RTRIM(&E.GPUS_YE_PFNAME,' ')
        let  $PRV_YE_MIDDLE_NAME   =  RTRIM(&E.GPUS_YE_PMNAME,' ')
        let  $PRV_YE_LNAME         =  RTRIM(&E.GPUS_YE_PLNAME ,' ')
        let  $PRV_YE_SUFFIX        =  RTRIM(&E.GPUS_YE_PSUFFIX ,' ')
        let  $Prv_W2_Name          =  $PRV_YE_FNAME || ' ' || $PRV_YE_MIDDLE_NAME || ' ' ||
                                     $PRV_YE_LNAME || ' ' || $PRV_YE_SUFFIX

        move &E.GPUS_PADDRESS1    to  $Prv_Address1
        move &E.GPUS_PADDRESS2    to  $Prv_Address2
        move &E.GPUS_PCOUNTRY     to  $Prv_Country
        let  $PRV_CITY            =   RTRIM(&E.GPUS_PCITY,' ')
        let  $PRV_STATE           =   RTRIM(&E.GPUS_PSTATE,' ')
        move &E.GPUS_PPOSTAL      to  $Prv_Postal

        uppercase $W2C_FNAME
        uppercase $W2C_MIDDLE_NAME
        uppercase $W2C_LNAME
        uppercase $W2C_SUFFIX
        uppercase $W2_Name

        uppercase $PRV_YE_FNAME
        uppercase $PRV_YE_MIDDLE_NAME
        uppercase $PRV_YE_LNAME
        uppercase $PRV_YE_SUFFIX
        uppercase $Prv_W2_Name

        uppercase $W2_Name
        uppercase $Address1
        uppercase $Address2
        uppercase $Country
        uppercase $City

        uppercase $Prv_W2_Name
        uppercase $Prv_Address1
        uppercase $Prv_Address2
        uppercase $Prv_Country
        uppercase $Prv_City

End-Procedure
!*********************************************************************

Begin-Procedure Print-W2C

        do Print-EE-Data
        do Print-Amounts
        print &E.DESCRLONG (+2,40) WRAP 132 12
        do Init-Values

End-Procedure
!*********************************************************************

Begin-Procedure Init-Values
    move 0 to #Cost_Pension_Annuity
    move 0 to #Wages
    move 0 to #Commissions
    move 0 to #Allowance
    move 0 to #Reimbursed_Expense
    move 0 to #Tax_Withheld
    move 0 to #Retire_Fund
    move 0 to #CODA_Plans
    move 0 to #SS_Wages
    move 0 to #SS_Tax
    move 0 to #Med_Wages
    move 0 to #Med_Tax

    move 0 to #Prv_CPA
    move 0 to #Prv_Wages
    move 0 to #Prv_Commissions
    move 0 to #Prv_Allowance
    move 0 to #Prv_Reimbursed_Expense
    move 0 to #Prv_Tax_Withheld
    move 0 to #Prv_Retire_Fund
    move 0 to #Prv_CODA_Plans
    move 0 to #Prv_SS_Wages
    move 0 to #Prv_SS_Tax
    move 0 to #Prv_Med_Wages
    move 0 to #Prv_Med_Tax

    let $Found_Wages       = 'N'
    let $Found_Commissions = 'N'
    let $Found_Allowance   = 'N'

End-Procedure
!*********************************************************************
Begin-Procedure Load-Amounts
Begin-Select
D.STATE                         &D.STATE
D.GPUS_TAXFORM_BOX              &D.GPUS_TAXFORM_BOX
D.GPUS_YE_AMOUNT
D.GPUS_YE_PAMOUNT

    move &D.GPUS_YE_AMOUNT to #Amount
    move &D.GPUS_YE_PAMOUNT to #Prv_Amount
    if #Amount <> #Prv_Amount
        let $GPUS_TAXFORM_BOX = &D.GPUS_TAXFORM_BOX
        let $STATE = &D.STATE
        let $GPUS_YE_AMOUNT = &D.GPUS_YE_AMOUNT
        let $GPUS_YE_PAMOUNT = &D.GPUS_YE_PAMOUNT
    let $GPUS_TAXFORM_BOX = RTRIM(&D.GPUS_TAXFORM_BOX,' ')
    evaluate $GPUS_TAXFORM_BOX
       when = $YE_Cost_Pension_Annuity
       let  #Cost_Pension_Annuity = #Amount
       let  #Prv_CPA = #Prv_Amount
       add  #Amount to #CPA_T
       add  #Prv_Amount to #Prv_CPA_T
       break
     when = $YE_Wages                                 !Wages
       let  #Wages = #Amount
       let  #Prv_Wages = #Prv_Amount
       add  #Amount to #Wages_T
       add  #Prv_Amount to #Prv_Wages_T
       let $Found_Wages = 'Y'
       break
     when = $YE_Commissions                           !Commissions
       let  #Commissions = #Amount
       let  #Prv_Commissions = #Prv_Amount
       add  #Amount to #Commissions_T
       add  #Prv_Amount to #Prv_Commissions_T
       let $Found_Commissions = 'Y'
       break
     when = $YE_Allowance                           !Allowance
       let  #Allowance = #Amount
       let  #Prv_Allowance = #Prv_Amount
       add  #Amount to #Allowance_T
       add  #Prv_Amount to #Prv_Allowance_T
       let $Found_Allowance = 'Y'
       break
     when = $YE_Reimbursed_Expense                    !Reimbursed_Expense
       let  #Reimbursed_Expense = #Amount
       let  #Prv_Reimbursed_Expense = #Prv_Amount
       add  #Amount to #Reimbursed_Expense_T
       add  #Prv_Amount to #Prv_Reimbursed_Expense_T
       break
     when = $YE_Tax_Withheld                          !Tax withheld
       let  #Tax_Withheld = #Amount
       let  #Prv_Tax_Withheld = #Prv_Amount
       add  #Amount to #Tax_Withheld_T
       add  #Prv_Amount to #Prv_Tax_Withheld_T
       break
     when = $YE_Retire_Fund                          !Retire funds
       let  #Retire_Fund = #Amount
       let  #Prv_Retire_Fund = #Prv_Amount
       add  #Amount to #Retire_Fund_T
       add  #Prv_Amount to #Prv_Retire_Fund_T
       break
     when = $YE_CODA_Plans                          !CODA Plans
       let  #CODA_Plans = #Amount
       let  #Prv_CODA_Plans = #Prv_Amount
       add  #Amount to #CODA_Plans_T
       add  #Prv_Amount to #Prv_CODA_Plans_T
       break
     when = $YE_SS_Wages                         !SS wages
       let  #SS_Wages = #Amount
       let  #Prv_SS_Wages = #Prv_Amount
       add  #Amount to #SS_Wages_T
       add  #Prv_Amount to #Prv_SS_Wages_T
       break
     when = $YE_SS_Tax                           !SS Tax
       let  #SS_Tax = #Amount
       let  #Prv_SS_Tax = #Prv_Amount
       add  #Amount to #SS_Tax_T
       add  #Prv_Amount to #Prv_SS_Tax_T
       break
    when = $YE_Med_Wages                         !Medicare wages
       let  #Med_Wages = #Amount
       let  #Prv_Med_Wages = #Prv_Amount
       add  #Amount to #Med_Wages_T
       add  #Prv_Amount to #Prv_Med_Wages_T
       break
     when = $YE_Med_Tax                          !Medicare tax
       let  #Med_Tax = #Amount
       let  #Prv_Med_Tax = #Prv_Amount
       add  #Amount to #Med_Tax_T
       add  #Prv_Amount to #Prv_Med_Tax_T
       break
     when-other
       move $D.GPUS_TAXFORM_BOX to $Box xx
         display 'UNKNOWN BOX IDENTIFIER:'
         display $GPUS_TAXFORM_BOX
         display 'Processing Stopped'
         STOP
    end-evaluate


    end-if

    FROM  PS_GPUS_YEC_AMT_PR  D
    WHERE D.GPUS_YEC_BATCH_NBR    = &E.GPUS_YEC_BATCH_NBR
    AND   D.GPUS_TAXFORM_ID       = $Taxform_ID  ! W-2cPR
    AND   D.GPUS_TAX_EIN          = &E.GPUS_TAX_EIN
    AND   D.EMPLID                = &E.EMPLID
    AND   D.GPUS_CAL_YEAR         = &E.GPUS_CAL_YEAR
    [$fromtoD]
    ORDER BY D.STATE, D.GPUS_TAXFORM_BOX
End-Select
End-Procedure

!*********************************************************************
Begin-Procedure Print-Amounts

  let $F_W2c = 'B99999999.99'
  if  #Cost_Pension_Annuity  <>  #Prv_CPA
    let #CPA_Diff =   #Cost_Pension_Annuity - #Prv_CPA
    let $PrintBox = 'Box ' ||  $YE_Cost_Pension_Annuity
    print $PrintBox (+2,40)

    do Format-W2c-Number(#Prv_CPA , $out, $F_W2c)
    print $out (,83)

    do Format-W2c-Number(#Cost_Pension_Annuity, $out, $F_W2c)
    print $out (,116)

    do Format-W2c-Number(#CPA_Diff, $out, $F_W2c)
    print $out (,147) edit 99999999.99ps
  end-if
  if #Wages <> #Prv_Wages
    let #Wages_Diff = #Wages - #Prv_Wages
    let $PrintBox = 'Box ' || $YE_Wages
    print $PrintBox (+2,40)

    do Format-W2c-Number(#Prv_Wages, $out, $F_W2c)         !Wages
    print $out (,83)

    do Format-W2c-Number(#Wages, $out, $F_W2c)
    print $out (,116)

    do Format-W2c-Number(#Wages_Diff, $out, $F_W2c)
    print $out (,147) edit 99999999.99ps
  end-if

  if #Commissions <> #Prv_Commissions
    let #Commissions_Diff = #Commissions - #Prv_Commissions
    let $PrintBox = 'Box ' || $YE_Commissions
    print $PrintBox (+2,40)

    do Format-W2c-Number(#Prv_Commissions, $out, $F_W2c)        !Commissions
    print $out (,83)

    do Format-W2c-Number(#Commissions, $out, $F_W2c)
    print $out (,116)

    do Format-W2c-Number(#Commissions_Diff, $out, $F_W2c)
    print $out (,147) edit 99999999.99ps
  end-if

  if #Allowance <> #Prv_Allowance
    let #Allowance_Diff = #Allowance - #Prv_Allowance
    let $PrintBox = 'Box ' || $YE_Allowance
    print $PrintBox (+2,40)

    do Format-W2c-Number(#Prv_Allowance, $out, $F_W2c)        !Allowance
    print $out (,83)

    do Format-W2c-Number(#Allowance, $out, $F_W2c)
    print $out (,116)

    do Format-W2c-Number(#Allowance_Diff, $out, $F_W2c)
    print $out (,147) edit 99999999.99ps
  end-if


  if $Found_Wages       = 'Y'
  or $Found_Commissions = 'Y'
  or $Found_Allowance   = 'Y'
     do Create-Total-Box
  end-if

  if #Reimbursed_Expense <> #Prv_Reimbursed_Expense
    let #Reimbursed_Expense_Diff = #Reimbursed_Expense - #Prv_Reimbursed_Expense
    let $PrintBox = 'Box ' || $YE_Reimbursed_Expense
    print $PrintBox (+2,40)

    do Format-W2c-Number(#Prv_Reimbursed_Expense, $out, $F_W2c)        !Reimbursed_Expense
    print $out (,83)

    do Format-W2c-Number(#Reimbursed_Expense, $out, $F_W2c)
    print $out (,116)

    do Format-W2c-Number(#Reimbursed_Expense_Diff, $out, $F_W2c)
    print $out (,147) edit 99999999.99ps
  end-if

  if #Tax_Withheld <> #Prv_Tax_Withheld
    let #Tax_Withheld_Diff = #Tax_Withheld - #Prv_Tax_Withheld
    let $PrintBox = 'Box ' || $YE_Tax_Withheld
    print $PrintBox (+2,40)

    do Format-W2c-Number(#Prv_Tax_Withheld, $out, $F_W2c)        !Tax withheld
    print $out (,83)

    do Format-W2c-Number(#Tax_Withheld, $out, $F_W2c)
    print $out (,116)

    do Format-W2c-Number(#Tax_Withheld_Diff, $out, $F_W2c)
    print $out (,147) edit 99999999.99ps

  end-if

  if #Retire_Fund <> #Prv_Retire_Fund
    let #Retire_Fund_Diff = #Retire_Fund - #Prv_Retire_Fund
    let $PrintBox = 'Box ' || $YE_Retire_Fund
    print $PrintBox (+2,40)

    do Format-W2c-Number(#Prv_Retire_Fund, $out, $F_W2c)        !Retire fund
    print $out (,83)

    do Format-W2c-Number(#Retire_Fund, $out, $F_W2c)
    print $out (,116)

    do Format-W2c-Number(#Retire_Fund_Diff, $out, $F_W2c)
    print $out (,147) edit 99999999.99ps

  end-if

  if #CODA_Plans <> #Prv_CODA_Plans
    let #CODA_Plans_Diff = #CODA_Plans - #Prv_CODA_Plans
    let $PrintBox = 'Box ' || $YE_CODA_Plans
    print $PrintBox (+2,40)

    do Format-W2c-Number(#Prv_CODA_Plans, $out, $F_W2c)        !CODA Plans
    print $out (,83)

    do Format-W2c-Number(#CODA_Plans, $out, $F_W2c)
    print $out (,116)

    do Format-W2c-Number(#CODA_Plans_Diff, $out, $F_W2c)
    print $out (,147) edit 99999999.99ps

  end-if

  if #SS_Wages <> #Prv_SS_Wages
    let #SS_Wages_Diff = #SS_Wages - #Prv_SS_Wages
    let $PrintBox = 'Box ' || $YE_SS_Wages
    print $PrintBox (+2,40)

    do Format-W2c-Number(#Prv_SS_Wages, $out, $F_W2c)
    print $out (,83)

    do Format-W2c-Number(#SS_Wages, $out, $F_W2c)              !SS wages
    print $out (,116)

    do Format-W2c-Number(#SS_Wages_Diff, $out, $F_W2c)
    print $out (,147) edit 99999999.99ps

  end-if

  if #SS_Tax <> #Prv_SS_Tax
    let #SS_Tax_Diff = #SS_Tax - #Prv_SS_Tax
    let $PrintBox = 'Box ' || $YE_SS_Tax
    print $PrintBox (+2,40)

    do Format-W2c-Number(#Prv_SS_Tax, $out, $F_W2c)
    print $out (,83)

    do Format-W2c-Number(#SS_Tax, $out, $F_W2c)              !SS Tax
    print $out (,116)

    do Format-W2c-Number(#SS_Tax_Diff, $out, $F_W2c)
    print $out (,147) edit 99999999.99ps

  end-if

  if #Med_Wages <> #Prv_Med_Wages
    let #Med_Wages_Diff = #Med_Wages - #Prv_Med_Wages
    let $PrintBox = 'Box ' || $YE_Med_Wages
    print $PrintBox (+2,40)

    do Format-W2c-Number(#Prv_Med_Wages, $out, $F_W2c)
    print $out (,83)

    do Format-W2c-Number(#Med_Wages, $out, $F_W2c)              !Medicare wages
    print $out (,116)

    do Format-W2c-Number(#Med_Wages_Diff, $out, $F_W2c)
    print $out (,147) edit 99999999.99ps

  end-if


  if #Med_Tax <> #Prv_Med_Tax
    let #Med_Tax_Diff = #Med_Tax - #Prv_Med_Tax
    let $PrintBox = 'Box ' || $YE_Med_Tax
    print $PrintBox (+2,40)

    do Format-W2c-Number(#Prv_Med_Tax, $out, $F_W2c)
    print $out (,83)

    do Format-W2c-Number(#Med_Tax, $out, $F_W2c)              !Medicare tax
    print $out (,116)

    do Format-W2c-Number(#Med_Tax_Diff, $out, $F_W2c)
    print $out (,147) edit 99999999.99ps

  end-if


End-Procedure
!*********************************************************************
Begin-Procedure Create-Total-Box         !Look for all components to totals box that sums up
                                                      !Wages,Commissions,Allowances and Tips, even if the
if $Found_Wages       <> 'Y'                 !amounts had not changed on this W-2CPR
   let $Search_Box = $YE_Wages
   do Find-Previous-W2CPR-Balance
end-if

if $Found_Commissions <> 'Y'
   let $Search_Box = $YE_Commissions
   do Find-Previous-W2CPR-Balance
end-if

if $Found_Allowance   <> 'Y'
   let $Search_Box = $YE_Allowance
   do Find-Previous-W2CPR-Balance
end-if


End-Procedure
!*********************************************************************

Begin-Procedure Find-Previous-W2CPR-Balance

let $Found-W2CPR-Amount = 'N'

Begin-Select
W2CP_AMTS.GPUS_YE_AMOUNT

   let $Found-W2CPR-Amount = 'Y'

    FROM PS_GPUS_YEC_AMT_PR W2CP_AMTS, PS_GPUS_YEC_DAT_PR W2CP_DATA
    WHERE W2CP_AMTS.GPUS_TAX_EIN  = &E.GPUS_TAX_EIN
    AND W2CP_AMTS.EMPLID   = &E.EMPLID
    AND W2CP_AMTS.GPUS_CAL_YEAR    = &E.GPUS_CAL_YEAR
    AND W2CP_AMTS.GPUS_TAXFORM_ID   = $Taxform_ID
    AND W2CP_AMTS.GPUS_TAXFORM_BOX  = $Search_Box
    AND W2CP_AMTS.GPUS_YEC_BATCH_NBR    =
    (SELECT MAX(GPUS_YEC_BATCH_NBR) FROM PS_GPUS_YEC_AMT_PR
    WHERE W2CP_AMTS.GPUS_TAX_EIN = GPUS_TAX_EIN
    AND W2CP_AMTS.EMPLID = &E.EMPLID
    AND W2CP_AMTS.GPUS_CAL_YEAR = GPUS_CAL_YEAR
    AND W2CP_AMTS.GPUS_TAXFORM_ID = GPUS_TAXFORM_ID
    AND W2CP_AMTS.GPUS_TAXFORM_BOX = GPUS_TAXFORM_BOX
    AND W2CP_AMTS.GPUS_YEC_BATCH_NBR < #W2c_Batch_Nbr)
    AND W2CP_DATA.GPUS_YEC_STATUS = '20'    ! Closed
    AND W2CP_AMTS.GPUS_TAX_EIN = W2CP_DATA.GPUS_TAX_EIN
    AND W2CP_AMTS.EMPLID = W2CP_DATA.EMPLID
    AND W2CP_AMTS.GPUS_CAL_YEAR = W2CP_DATA.GPUS_CAL_YEAR
    AND  W2CP_AMTS.GPUS_YEC_BATCH_NBR = W2CP_DATA.GPUS_YEC_BATCH_NBR

End-Select

    if $Found-W2CPR-Amount =  'N'
       do Find-Previous-W2PR-Balance
    end-if


End-Procedure
!*********************************************************************
Begin-Procedure Find-Previous-W2PR-Balance

let $Found-W2PR-Amount = 'N'

Begin-Select
SUM(W2PR.GPUS_YE_AMOUNT) &W2PR.SUM

   let $Found-W2PR-Amount = 'Y'

    FROM PS_GPUS_YE_AMOUNTS W2PR, PS_GPUS_YE_CO_TBL W2_CO
    WHERE W2PR.GPUS_TAX_EIN =W2_CO.GPUS_TAX_EIN
    AND W2_CO.EFFDT = &DT
    AND W2_CO.GPUS_YE_RPT_CO = &A.GPUS_YE_RPT_CO
    AND W2PR.EMPLID       = &E.EMPLID
    AND W2PR.GPUS_CAL_YEAR = &E.GPUS_CAL_YEAR
    AND W2PR.GPUS_TAXFORM_ID = $Taxform_ID
    AND W2PR.GPUS_TAXFORM_BOX = $Search_Box

End-Select

End-Procedure

!*********************************************************************
Begin-Procedure Print-EE-Data

       print  $E.EmplID  (+3,1)
       print  $W2_Name (+1,1)

  if ($W2C_FNAME <> $PRV_YE_FNAME)
        or ($W2C_MIDDLE_NAME <> $PRV_YE_MIDDLE_NAME)
        or ($W2C_LNAME <> $PRV_YE_LNAME)
        or ($W2C_SUFFIX <> $PRV_YE_SUFFIX)
    print  $Prv_W2_Name (,79)
    print  $W2_Name (,113)
  end-if
  print  $E.SSN (+1,1)
  if ($E.SSN <> $E.Prv_SSN)
    print  $E.Prv_SSN (,85)
    print  $E.SSN (,119
  end-if
End-Procedure

!*********************************************************************
Begin-Procedure Get-W2C-Run-Controls
    move &TX.CALENDAR_YEAR to #Rc_Cal_Year
        move &TX.GPUS_TAXFORM_ID to $Taxform_ID
        move &TX.STRM_NUM to #STRM_NUM

     MOVE &TX.GPUS_YEC_BATCH_NBR TO $TX.GPUS_YEC_BATCH_NBR
     IF $TX.GPUS_YEC_BATCH_NBR = '0'
            do Get-Most-Recent-Batch
     ELSE
            let $W2c_Batch_Nbr = $TX.GPUS_YEC_BATCH_NBR
     END-IF
  let $E.Batch_Nbr = 'AND E.GPUS_YEC_BATCH_NBR = ' || $W2c_Batch_Nbr
End-Procedure

!*********************************************************************
Begin-Procedure Get-Most-Recent-Batch
Begin-SELECT DISTINCT
CT.GPUS_YEC_BATCH_NBR
    FROM PS_GPUS_YEC_DAT_PR CT
    WHERE CT.GPUS_TAXFORM_ID = $Taxform_ID
    AND CT.GPUS_CAL_YEAR = &TX.CALENDAR_YEAR
    AND GPUS_YEC_BATCH_NBR = (SELECT MAX(D.GPUS_YEC_BATCH_NBR)
                              FROM PS_GPUS_YEC_BATCH D
                              WHERE CT.GPUS_TAXFORM_ID = D.GPUS_TAXFORM_ID
                              AND CT.GPUS_CAL_YEAR = D.GPUS_CAL_YEAR)
end-SELECT
    let $W2c_Batch_Nbr_X = &CT.GPUS_YEC_BATCH_NBR
    unstring $W2c_Batch_Nbr_X by '.' into $W2c_Batch_Nbr $zeros
End-Procedure

!*********************************************************************
Begin-Procedure Print-W3c-Totals
  new-page
  print 'W-3cPR Totals ' (+4,1)
  print $W3c_Descr (+2,1)
  print $W3c_Address1 (+1,1)
  if RTRIM($W3c_Address2 , ' ') <> ''
    print $W3c_Address2 (+1,1)
  end-if
   print $W3c_Address3 (+1,1)


  print 'Number of Forms W-2cPR ' (+2,1)
  print #W3c_Count (,+5)  edit B9999

  print 'Employer Federal EIN  ' (+2,1)
  print $W3c_EIN (,+5)


  let $F_T = 'B99999999.99'

  if #CPA_T <> #Prv_CPA_T
    let $PrintBox = 'Box ' || $YE_Cost_Pension_Annuity
    print $PrintBox (+2,40)
    let #CPA_Diff_T = #CPA_T - #Prv_CPA_T

    do Format-W2c-Number(#Prv_CPA_T  , $out, $F_T)
    print $out (,83)

    do Format-W2c-Number(#CPA_T , $out, $F_T)
    print $out (,116)

    do Format-W2c-Number(#CPA_Diff_T , $out, $F_T)
    print $out (,147) edit 9999999999.99ps
  end-if

  if #Wages_T <> #Prv_Wages_T
    let $PrintBox = 'Box ' || $YE_Wages
    print $PrintBox (+2,40)
    let #Wages_Diff_T = #Wages_T - #Prv_Wages_T

    do Format-W2c-Number(#Prv_Wages_T , $out, $F_T)         !Wages
    print $out (,83)

    do Format-W2c-Number(#Wages_T , $out, $F_T)
    print $out (,116)

    do Format-W2c-Number(#Wages_Diff_T , $out, $F_T)
    print $out (,147) edit 9999999999.99ps
  end-if

  if #Commissions_T <> #Prv_Commissions_T
    let $PrintBox = 'Box ' || $YE_Commissions
    print $PrintBox (+2,40)
    let #Commissions_Diff_T = #Commissions_T - #Prv_Commissions_T

    do Format-W2c-Number(#Prv_Commissions_T , $out, $F_T)         !Commissions
    print $out (,83)

    do Format-W2c-Number(#Commissions_T , $out, $F_T)
    print $out (,116)

    do Format-W2c-Number(#Commissions_Diff_T , $out, $F_T)
    print $out (,147) edit 9999999999.99ps
  end-if

  if #Allowance_T <> #Prv_Allowance_T
    let $PrintBox = 'Box ' || $YE_Allowance
    print $PrintBox (+2,40)
    let #Allowance_Diff_T = #Allowance_T - #Prv_Allowance_T

    do Format-W2c-Number(#Prv_Allowance_T , $out, $F_T)         !Allowance
    print $out (,83)

    do Format-W2c-Number(#Allowance_T , $out, $F_T)
    print $out (,116)

    do Format-W2c-Number(#Allowance_Diff_T , $out, $F_T)
    print $out (,147) edit 9999999999.99ps
  end-if

  if #Reimbursed_Expense_T <> #Prv_Reimbursed_Expense_T
    let $PrintBox = 'Box ' || $YE_Reimbursed_Expense
    print $PrintBox (+2,40)
    let #Reimbursed_Expense_Diff_T = #Reimbursed_Expense_T - #Prv_Reimbursed_Expense_T

    do Format-W2c-Number(#Prv_Reimbursed_Expense_T , $out, $F_T)         !Reimbursed_Expense
    print $out (,83)

    do Format-W2c-Number(#Reimbursed_Expense_T , $out, $F_T)
    print $out (,116)

    do Format-W2c-Number(#Reimbursed_Expense_Diff_T , $out, $F_T)
    print $out (,147) edit 9999999999.99ps
  end-if

  if #Tax_Withheld_T  <> #Prv_Tax_Withheld_T
    let $PrintBox = 'Box ' || $YE_Tax_Withheld
    print $PrintBox (+2,40)
    let #Tax_Withheld_Diff_T  = #Tax_Withheld_T  - #Prv_Tax_Withheld_T

    do Format-W2c-Number(#Prv_Tax_Withheld_T , $out, $F_T)        !Federal tax
    print $out (,83)

    do Format-W2c-Number(#Tax_Withheld_T , $out, $F_T)
    print $out (,116)

    do Format-W2c-Number(#Tax_Withheld_Diff_T , $out, $F_T)
    print $out (,147) edit 9999999999.99ps

  end-if

  if #Retire_Fund_T  <> #Prv_Retire_Fund_T
    let $PrintBox = 'Box ' || $YE_Retire_Fund
    print $PrintBox (+2,40)
    let #Retire_Fund_Diff_T  = #Retire_Fund_T  - #Prv_Retire_Fund_T

    do Format-W2c-Number(#Prv_Retire_Fund_T , $out, $F_T)        !Retire fund
    print $out (,83)

    do Format-W2c-Number(#Retire_Fund_T , $out, $F_T)
    print $out (,116)

    do Format-W2c-Number(#Retire_Fund_Diff_T , $out, $F_T)
    print $out (,147) edit 9999999999.99ps

  end-if

  if #CODA_Plans_T  <> #Prv_CODA_Plans_T
    let $PrintBox = 'Box ' || $YE_CODA_Plans
    print $PrintBox (+2,40)
    let #CODA_Plans_Diff_T  = #CODA_Plans_T  - #Prv_CODA_Plans_T

    do Format-W2c-Number(#Prv_CODA_Plans_T , $out, $F_T)        !CODA Plans
    print $out (,83)

    do Format-W2c-Number(#CODA_Plans_T , $out, $F_T)
    print $out (,116)

    do Format-W2c-Number(#CODA_Plans_Diff_T , $out, $F_T)
    print $out (,147) edit 9999999999.99ps

  end-if

  if #SS_Wages_T  <> #Prv_SS_Wages_T
    let $PrintBox = 'Box ' || $YE_SS_Wages
    print $PrintBox (+2,40)
    let #SS_Wages_Diff_T  = #SS_Wages_T  - #Prv_SS_Wages_T

    do Format-W2c-Number(#Prv_SS_Wages_T , $out, $F_T)
    print $out (,83)

    do Format-W2c-Number(#SS_Wages_T , $out, $F_T)              !SS wages
    print $out (,116)

    do Format-W2c-Number(#SS_Wages_Diff_T , $out, $F_T)
    print $out (,147) edit 9999999999.99ps

  end-if

  if #SS_Tax_T <> #Prv_SS_Tax_T
    let $PrintBox = 'Box ' || $YE_SS_Tax
    print $PrintBox (+2,40)
    let #SS_Tax_Diff_T  = #SS_Tax_T  - #Prv_SS_Tax_T

    do Format-W2c-Number(#Prv_SS_Tax_T , $out, $F_T)
    print $out (,83)

    do Format-W2c-Number(#SS_Tax_T , $out, $F_T)              !SS Tax
    print $out (,116)

    do Format-W2c-Number(#SS_Tax_Diff_T , $out, $F_T)
    print $out (,147) edit 9999999999.99ps

  end-if

  if #Med_Wages_T <> #Prv_Med_Wages_T
    let $PrintBox = 'Box ' || $YE_Med_Wages
    print $PrintBox (+2,40)
    let #Med_Wages_Diff_T = #Med_Wages_T - #Prv_Med_Wages_T

    do Format-W2c-Number(#Prv_Med_Wages_T, $out, $F_T)
    print $out (,83)

    do Format-W2c-Number(#Med_Wages_T, $out, $F_T)              !Medicare wages
    print $out (,116)

    do Format-W2c-Number(#Med_Wages_Diff_T, $out, $F_T)
    print $out (,147) edit 9999999999.99ps

  end-if


  if #Med_Tax_T <> #Prv_Med_Tax_T
    let $PrintBox = 'Box ' || $YE_Med_Tax
    print $PrintBox (+2,40)
    let #Med_Tax_Diff_T = #Med_Tax_T - #Prv_Med_Tax_T

    do Format-W2c-Number(#Prv_Med_Tax_T, $out, $F_T)
    print $out (,83)

    do Format-W2c-Number(#Med_Tax_T, $out, $F_T)              !Medicare tax
    print $out (,116)

    do Format-W2c-Number(#Med_Tax_Diff_T, $out, $F_T)
    print $out (,147) edit 9999999999.99ps

  end-if
 new-page

End-Procedure


!*********************************************************************

Begin-Procedure Init-W3c-Totals

  let #CPA_T = 0
  let #Prv_CPA_T = 0
  let #Wages_T =0
  let #Prv_Wages_T = 0
  let #Commissions_T =0
  let #Prv_Commissions_T = 0
  let #Allowance_T =0
  let #Prv_Allowance_T = 0
  let #Reimbursed_Expense_T =0
  let #Prv_Reimbursed_Expense_T = 0
  let #Tax_Withheld_T =0
  let #Prv_Tax_Withheld_T = 0
  let #Retire_Fund_T =0
  let #Prv_Retire_Fund_T = 0
  let #CODA_Plans_T =0
  let #Prv_CODA_Plans_T = 0
  let #SS_Wages_T =0
  let #Prv_SS_Wages_T = 0
  let #SS_Tax_T =0
  let #Prv_SS_Tax_T = 0
  let #Med_Wages_T =0
  let #Prv_Med_Wages_T = 0
  let #Med_Tax_T =0
  let #Prv_Med_Tax_T = 0

End-Procedure
!*********************************************************************


Begin-Procedure Format-W2c-Number(#in, :$out, $mask)

  if #in <> 0
    move #in to $out :$mask
    let $out = translate($out,',.',$_Delimiters)
  else
      let $out = '          0'
  end-if

End-Procedure

begin-procedure Emp-Stream

Begin-SELECT
EMPLID_FROM  &EFROM
EMPLID_TO   &ETO
  let  $EFRM = &EFROM
  let  $ET = &ETO
  let  $A = ''''
  let  $fromtoE = 'AND E.EMPLID BETWEEN '''||$EFRM||''' AND '''||$ET||$A
  let  $fromtoD  = 'AND D.EMPLID BETWEEN '''||$EFRM||''' AND '''||$ET||$A

    FROM PS_GP_STRM
    WHERE STRM_NUM = #STRM_NUM
end-SELECT
end-procedure
!*********************************************************************
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'gpusw2c.sqc'   !Common Box Descriptions
#Include 'stdapi.sqc'    !Update Process API
#Include 'gpusrntl.sqc'  !Retrieve data from Tax Reporting Run Control record
!*********************************************************************