!***********************************************************************
!  PER001CH Create Company Statistics for Switzerland Requirements     *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:23:11                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
begin-setup
#Include 'setup02c.sqc'   !Printer and page-size initialization
end-setup
!**********************************************************************!
begin-report
!**********************************************************************!
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
!**********************************************************************!
end-report
!**********************************************************************!

!**********************************************************************!
! Procedure: Init-Report                                               !
! Descr:     Report initialization procedure.  Set titles, parameters. !
!            This is called from the Begin-Report procedure.           !
!**********************************************************************!
begin-procedure Init-Report
!**********************************************************************!

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  if $Prcs_Process_Instance = ''
    do Ask-Parameters
  else
    do Select-Parameters
    move &RUN_CNTL_HR_CHE.COMPANY to $COMPANY
    move &RUN_CNTL_HR_CHE.BUSINESS_UNIT to $BUSINESSUNIT
    move &RUN_CNTL_HR_CHE.RUN_CNTL_ID  to $runcntlid
    move &RUN_CNTL_HR_CHE.OPRID to $oprid
    move &RUN_CNTL_HR_CHE.CONTACT_PERSON to $contactperson
    move &RUN_CNTL_HR_CHE.CONTACT_PHONE to $contactphone
    move &RUN_CNTL_HR_CHE.CONTACT_PHONE_EXT to #contactphoneext
!   move &RUN_CNTL_HR_CHE.ASOFDATE to $asofdate
  end-if
! do Format-DateTime($asofdate   , $rorg, {DEFMDY},'','')

!**********************************************************************!
end-procedure
!**********************************************************************!

!**********************************************************************!
begin-procedure Get-Values
end-procedure
!**********************************************************************!

!**********************************************************************!
begin-procedure Process-Main
!**********************************************************************!
  do Delete-Old-Records
  do Get-Company
  do Get-Company-Phone
  do Get-Std-Hours-Default
  do Get-Empl-Count
  do Get-Stat
  do Insert-Row
!**********************************************************************!
end-procedure Process-Main
!**********************************************************************!

!**********************************************************************!
begin-procedure Get-Company
!**********************************************************************!
move ' '        to $ADDRESS1
move ' '        to $ADDRESS2
move ' '        to $ADDRESS3
move ' '        to $ADDRESS4
move ' '        to $CITY
move ' '        to $STATE
move ' '        to $POSTAL
move ' '        to $COUNTRY

begin-SELECT
X.ADDRESS1
X.ADDRESS2
X.ADDRESS3
X.ADDRESS4
X.CITY
X.STATE
X.POSTAL
X.COUNTRY
 move &X.ADDRESS1               to $ADDRESS1
 move &X.ADDRESS2               to $ADDRESS2
 move &X.ADDRESS3               to $ADDRESS3
 move &X.ADDRESS4               to $ADDRESS4
 move &X.CITY           to $CITY
 move &X.STATE          to $STATE
 move &X.POSTAL         to $POSTAL
 move &X.COUNTRY                to $COUNTRY
FROM    PS_COMPANY_TBL X
WHERE   X.COMPANY = $COMPANY

end-SELECT
!**********************************************************************!
end-procedure Get-Company
!**********************************************************************!

!**********************************************************************!
begin-procedure Get-Company-Phone
!**********************************************************************!
move ' '        to $COUNTRY_CODE
move ' '        to $PHONE

begin-SELECT
Y.COUNTRY_CODE
Y.PHONE
 move &Y.COUNTRY_CODE   to $COUNTRY_CODE
 move &Y.PHONE          to $PHONE
FROM    PS_COMP_PHONE_TBL Y
WHERE   Y.COMPANY = $COMPANY
AND   Y.PHONE_TYPE = 'BUSN'
AND   Y.EFFDT = (SELECT MAX(YY.EFFDT) FROM PS_COMP_PHONE_TBL YY WHERE
                        YY.COMPANY = Y.COMPANY AND YY.PHONE_TYPE = Y.PHONE_TYPE)
end-SELECT
!**********************************************************************!
end-procedure
!**********************************************************************!

!**********************************************************************!
begin-procedure Get-Std-Hours-Default
!**********************************************************************!
move 0 to #STD_HRS_DEFAULT
begin-SELECT
HD.STD_HRS_DEFAULT
 move &HD.STD_HRS_DEFAULT to #STD_HRS_DEFAULT
FROM    PS_BUS_UNIT_OPT_HR HD,
      PS_BUS_UNIT_TBL_HR BS
WHERE BS.BUSINESS_UNIT = $BUSINESSUNIT
AND   BS.DEFAULT_SETID = HD.SETID
AND     HD.COMPANY = $COMPANY
AND   HD.COUNTRY = 'CHE'
end-SELECT
!**********************************************************************!
end-procedure
!**********************************************************************!

!**********************************************************************!
begin-procedure Get-Empl-Count
!**********************************************************************!
begin-SELECT
COUNT(DISTINCT U.EMPLID) &EMPLCOUNT
FROM PS_JOB U, PS_CITIZENSHIP V, PS_REG_REGION_TBL R7
WHERE U.EFFDT = (SELECT MAX(UU.EFFDT)
                FROM PS_JOB UU
                WHERE UU.EMPLID = U.EMPLID AND
                        UU.EMPL_RCD = U.EMPL_RCD)
AND U.EFFSEQ = (SELECT MAX(UUU.EFFSEQ)
                FROM PS_JOB UUU
                WHERE U.EMPLID = UUU.EMPLID AND
                        U.EMPL_RCD = UUU.EMPL_RCD AND
                        U.EFFDT = UUU.EFFDT)
AND U.COMPANY = $COMPANY
AND U.BUSINESS_UNIT = $BUSINESSUNIT
AND U.REG_REGION = R7.REG_REGION
AND R7.COUNTRY = 'CHE'
AND U.HR_STATUS = 'A'
AND V.EMPLID = U.EMPLID
AND V.DEPENDENT_ID = ' '
AND V.COUNTRY = 'CHE'
end-SELECT
!**********************************************************************!
end-procedure Get-Empl-Count
!**********************************************************************!
!**********************************************************************!
begin-procedure Get-Stat
!**********************************************************************!

move 'M' to $SEX
do Get-Citizen-Stat1
move &COUNTC1 to #FTE1-CM

move 'F' to $SEX
do Get-Citizen-Stat1
move &COUNTC1 to #FTE1-CF

move 'M' to $SEX
do Get-Citizen-Stat2
move &COUNTC2 to #FTE2-CM

move 'F' to $SEX
do Get-Citizen-Stat2
move &COUNTC2 to #FTE2-CF

move 'M' to $SEX
do Get-Citizen-Stat3
move &COUNTC3 to #FTE3-CM

move 'F' to $SEX
do Get-Citizen-Stat3
move &COUNTC3 to #FTE3-CF

move 'M' to $SEX
do Get-Foreign-Stat1
move &COUNTF1 to #FTE1-FM

move 'F' to $SEX
do Get-Foreign-Stat1
move &COUNTF1 to #FTE1-FF

move 'M' to $SEX
do Get-Foreign-Stat2
move &COUNTF2 to #FTE2-FM

move 'F' to $SEX
do Get-Foreign-Stat2
move &COUNTF2 to #FTE2-FF

move 'M' to $SEX
do Get-Foreign-Stat3
move &COUNTF3 to #FTE3-FM

move 'F' to $SEX
do Get-Foreign-Stat3
move &COUNTF3 to #FTE3-FF

!**********************************************************************!
end-procedure Get-Stat
!**********************************************************************!

!**********************************************************************!
begin-procedure Get-Citizen-Stat1
!**********************************************************************!
begin-SELECT
COUNT(DISTINCT A.EMPLID) &COUNTC1
FROM PS_JOB A, PS_CITIZENSHIP D, PS_PERSONAL_DT_FST E, PS_REG_REGION_TBL R1
WHERE A.EFFDT = (SELECT MAX(B.EFFDT)
                FROM PS_JOB B
                WHERE B.EMPLID = A.EMPLID and B.EMPL_RCD = A.EMPL_RCD)
AND A.EFFSEQ = (SELECT MAX(C.EFFSEQ)
                FROM PS_JOB C
                WHERE C.EMPLID = A.EMPLID and C.EMPL_RCD = A.EMPL_RCD AND C.EFFDT = A.EFFDT)
AND A.COMPANY = $COMPANY
AND A.BUSINESS_UNIT = $BUSINESSUNIT
AND A.REG_REGION = R1.REG_REGION
AND R1.COUNTRY = 'CHE'
AND A.HR_STATUS = 'A'
AND A.FTE >= .9
AND A.FTE <= 1
AND D.EMPLID = A.EMPLID
AND D.DEPENDENT_ID = ' '
AND D.COUNTRY = 'CHE'
AND D.CITIZENSHIP_STATUS IN ( '1', '2', '5')
AND E.EMPLID = A.EMPLID
AND E.SEX = $SEX
end-SELECT
!**********************************************************************!
end-procedure
!**********************************************************************!

!**********************************************************************!
begin-procedure Get-Citizen-Stat2
!**********************************************************************!
begin-SELECT
COUNT( DISTINCT F.EMPLID) &COUNTC2
FROM PS_JOB F, PS_CITIZENSHIP G, PS_PERSONAL_DT_FST H, PS_REG_REGION_TBL R2
WHERE F.EFFDT = (SELECT MAX(FF.EFFDT)
                FROM PS_JOB FF
                WHERE FF.EMPLID = F.EMPLID AND FF.EMPL_RCD = F.EMPL_RCD)
AND F.EFFSEQ = (SELECT MAX(FFF.EFFSEQ)
                FROM PS_JOB FFF
                WHERE FFF.EMPLID = F.EMPLID AND FFF.EMPL_RCD = F.EMPL_RCD AND FFF.EFFDT = F.EFFDT)
AND F.COMPANY = $COMPANY
AND F.BUSINESS_UNIT = $BUSINESSUNIT
AND F.REG_REGION = R2.REG_REGION
AND R2.COUNTRY = 'CHE'
AND F.HR_STATUS = 'A'
AND F.FTE >= .5
AND F.FTE < .9
AND G.EMPLID = F.EMPLID
AND G.DEPENDENT_ID = ' '
AND G.COUNTRY = 'CHE'
AND G.CITIZENSHIP_STATUS IN ( '1', '2', '5')
AND H.EMPLID = F.EMPLID
AND H.SEX = $SEX
end-SELECT
!**********************************************************************!
end-procedure
!**********************************************************************!

!**********************************************************************!
begin-procedure Get-Citizen-Stat3
!**********************************************************************!
begin-SELECT
COUNT( DISTINCT I.EMPLID) &COUNTC3
FROM PS_JOB I, PS_CITIZENSHIP J, PS_PERSONAL_DT_FST K, PS_REG_REGION_TBL R3
WHERE I.EFFDT = (SELECT MAX(II.EFFDT)
                FROM PS_JOB II
                WHERE II.EMPLID = I.EMPLID AND II.EMPL_RCD = I.EMPL_RCD)
AND I.EFFSEQ = (SELECT MAX(III.EFFSEQ)
                FROM PS_JOB III
                WHERE III.EMPLID = I.EMPLID AND III.EMPL_RCD = I.EMPL_RCD AND III.EFFDT = I.EFFDT)
AND I.COMPANY = $COMPANY
AND I.BUSINESS_UNIT = $BUSINESSUNIT
AND I.REG_REGION = R3.REG_REGION
AND R3.COUNTRY = 'CHE'
AND I.HR_STATUS = 'A'
AND I.STD_HOURS > 6
AND I.FTE < .5
AND J.EMPLID = I.EMPLID
AND J.DEPENDENT_ID = ' '
AND J.COUNTRY = 'CHE'
AND J.CITIZENSHIP_STATUS IN ( '1', '2', '5')
AND K.EMPLID = I.EMPLID
AND K.SEX = $SEX
end-SELECT
!**********************************************************************!
end-procedure
!**********************************************************************!

!**********************************************************************!
begin-procedure Get-Foreign-Stat1
!**********************************************************************!
begin-SELECT
COUNT( DISTINCT L.EMPLID) &COUNTF1
FROM PS_JOB L, PS_CITIZENSHIP M, PS_PERSONAL_DT_FST N, PS_REG_REGION_TBL R4
WHERE L.EFFDT = (SELECT MAX(LL.EFFDT)
                FROM PS_JOB LL
                WHERE LL.EMPLID = L.EMPLID AND LL.EMPL_RCD = L.EMPL_RCD)
AND L.EFFSEQ = (SELECT MAX(LLL.EFFSEQ)
                FROM PS_JOB LLL
                WHERE LLL.EMPLID = L.EMPLID AND LLL.EMPL_RCD = L.EMPL_RCD AND LLL.EFFDT = L.EFFDT)
AND L.COMPANY = $COMPANY
AND L.BUSINESS_UNIT = $BUSINESSUNIT
AND L.REG_REGION = R4.REG_REGION
AND R4.COUNTRY = 'CHE'
AND L.HR_STATUS = 'A'
AND L.FTE >= .9
AND L.FTE <= 1
AND M.EMPLID = L.EMPLID
AND M.DEPENDENT_ID = ' '
AND M.COUNTRY = 'CHE'
AND M.CITIZENSHIP_STATUS IN ( '3', '4', '6', '7', '8')
AND N.EMPLID = L.EMPLID
AND N.SEX = $SEX
end-SELECT
!**********************************************************************!
end-procedure
!**********************************************************************!

!**********************************************************************!
begin-procedure Get-Foreign-Stat2
!**********************************************************************!
begin-SELECT
COUNT(DISTINCT O.EMPLID) &COUNTF2
FROM PS_JOB O, PS_CITIZENSHIP P, PS_PERSONAL_DT_FST Q, PS_REG_REGION_TBL R5
WHERE O.EFFDT = (SELECT MAX(OO.EFFDT)
                FROM PS_JOB OO
                WHERE OO.EMPLID = O.EMPLID AND OO.EMPL_RCD = O.EMPL_RCD)
AND O.EFFSEQ = (SELECT MAX(OOO.EFFSEQ)
                FROM PS_JOB OOO
                WHERE OOO.EMPLID = O.EMPLID AND OOO.EMPL_RCD = O.EMPL_RCD AND OOO.EFFDT = O.EFFDT)
AND O.COMPANY = $COMPANY
AND O.BUSINESS_UNIT = $BUSINESSUNIT
AND O.REG_REGION = R5.REG_REGION
AND R5.COUNTRY = 'CHE'
AND O.HR_STATUS = 'A'
AND O.FTE >= .5
AND O.FTE < .9
AND P.EMPLID = O.EMPLID
AND P.DEPENDENT_ID = ' '
AND P.COUNTRY = 'CHE'
AND P.CITIZENSHIP_STATUS IN ( '3', '4', '6', '7', '8')
AND Q.EMPLID = O.EMPLID
AND Q.SEX = $SEX
end-SELECT
!**********************************************************************!
end-procedure
!**********************************************************************!

!**********************************************************************!
begin-procedure Get-Foreign-Stat3
!**********************************************************************!
begin-SELECT
COUNT( DISTINCT R.EMPLID) &COUNTF3
FROM PS_JOB R, PS_CITIZENSHIP S, PS_PERSONAL_DT_FST T, PS_REG_REGION_TBL R6
WHERE R.EFFDT = (SELECT MAX(RR.EFFDT)
                FROM PS_JOB RR
                WHERE RR.EMPLID = R.EMPLID AND RR.EMPL_RCD = R.EMPL_RCD)
AND R.EFFSEQ = (SELECT MAX(RRR.EFFSEQ)
                FROM PS_JOB RRR
                WHERE RRR.EMPLID = R.EMPLID AND RRR.EMPL_RCD = R.EMPL_RCD AND RRR.EFFDT = R.EFFDT)
AND R.COMPANY = $COMPANY
AND R.BUSINESS_UNIT = $BUSINESSUNIT
AND R.REG_REGION = R6.REG_REGION
AND R6.COUNTRY = 'CHE'
AND R.HR_STATUS = 'A'
AND R.STD_HOURS > 6
AND R.FTE < .5
AND S.EMPLID = R.EMPLID
AND S.DEPENDENT_ID = ' '
AND S.COUNTRY = 'CHE'
AND S.CITIZENSHIP_STATUS IN ( '3', '4', '6', '7', '8')
AND T.EMPLID = R.EMPLID
AND T.SEX = $SEX
end-SELECT
!**********************************************************************!
end-procedure
!**********************************************************************!

!**********************************************************************!
begin-procedure Insert-Row
!**********************************************************************!
show 'Begin Insert-Row'
begin-SQL
INSERT INTO PS_COMPANY_STATS (
COMPANY,
BUSINESS_UNIT,
ADDRESS1,
ADDRESS2,
ADDRESS3,
ADDRESS4,
CITY,
STATE,
POSTAL,
COUNTRY,
COUNTRY_CODE,
PHONE,
STD_HRS_DEFAULT,
EMPL_COUNT,
STAT_FTE1_CM,
STAT_FTE1_CF,
STAT_FTE1_FM,
STAT_FTE1_FF,
STAT_FTE2_CM,
STAT_FTE2_CF,
STAT_FTE2_FM,
STAT_FTE2_FF,
STAT_FTE3_CM,
STAT_FTE3_CF,
STAT_FTE3_FM,
STAT_FTE3_FF )
VALUES (
$COMPANY,
$BUSINESSUNIT,
$ADDRESS1,
$ADDRESS2,
$ADDRESS3,
$ADDRESS4,
$CITY,
$STATE,
$POSTAL,
$COUNTRY,
$COUNTRY_CODE,
$PHONE,
#STD_HRS_DEFAULT,
&EMPLCOUNT,
#FTE1-CM,
#FTE1-CF,
#FTE1-FM,
#FTE1-FF,
#FTE2-CM,
#FTE2-CF,
#FTE2-FM,
#FTE2-FF,
#FTE3-CM,
#FTE3-CF,
#FTE3-FM,
#FTE3-FF
)
end-SQL
show 'End Insert-Row'
!**********************************************************************!
end-procedure
!**********************************************************************!

!**********************************************************************!
begin-procedure Delete-Old-Records
!**********************************************************************!
begin-SQL
DELETE FROM PS_COMPANY_STATS
WHERE COMPANY = $COMPANY
AND BUSINESS_UNIT = $BUSINESSUNIT
end-SQL
!**********************************************************************!
end-procedure
!**********************************************************************!

!**********************************************************************!
! Procedure:    Ask-Parameters                                         !
! Description:  Loops until user enters a valid value                  !
!**********************************************************************!
begin-procedure Ask-Parameters
!**********************************************************************!

  do Get-Company-Name
  while ( $COMPANY = '' )
     do Get-Company-Name
  end-while

  do Get-Business-Unit
  while ( $BUSINESSUNIT = '' )
     do Get-Business-Unit
  end-while

!**********************************************************************!
end-procedure
!**********************************************************************!

!**********************************************************************!
! Procedure:     Get-Company-Name                                      !
! Description:   Controls prompting for user entered Company           !
!**********************************************************************!
begin-procedure Get-Company-Name
!**********************************************************************!

  display ''
  display 'Enter the Company'
  input $COMPANY
  display ''

!**********************************************************************!
end-procedure
!**********************************************************************!

!**********************************************************************!
! Procedure:     Get-Business-Unit                                     !
! Description:   Controls prompting for user entered Business Unit     !
!**********************************************************************!
begin-procedure Get-Business-Unit
!**********************************************************************!

  display ''
  display 'Enter the Business Unit'
  input $BUSINESSUNIT
  display ''

!**********************************************************************!
end-procedure
!**********************************************************************!

!**********************************************************************!
! Procedure:     Select-Parameters                                     !
! Description:   Controls prompting for user entered parameters        !
!**********************************************************************!
begin-procedure select-parameters

BEGIN-SELECT

RUN_CNTL_HR_CHE.OPRID
RUN_CNTL_HR_CHE.RUN_CNTL_ID
RUN_CNTL_HR_CHE.ASOFDATE
RUN_CNTL_HR_CHE.LANGUAGE_CD
RUN_CNTL_HR_CHE.COMPANY
RUN_CNTL_HR_CHE.BUSINESS_UNIT
RUN_CNTL_HR_CHE.CONTACT_PERSON
RUN_CNTL_HR_CHE.CONTACT_PHONE
RUN_CNTL_HR_CHE.CONTACT_PHONE_EXT

  do Get-Values

from PS_RUN_CNTL_HR_CHE RUN_CNTL_HR_CHE

where RUN_CNTL_HR_CHE.OPRID = $prcs_oprid
  and RUN_CNTL_HR_CHE.RUN_CNTL_ID = $prcs_run_cntl_id
end-select

end-procedure

!**********************************************************************!
! Called SQC Procedures                                                !
!**********************************************************************!
#include 'stdapi.sqc'    !Routines to update run status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#include 'validdt.sqc'
