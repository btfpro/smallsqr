!*****************************************
!  PAY008:  Deductions Not Taken Report  *
!*****************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:04:27:10                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup31.sqc'  !Printer and page-size initialization

begin-report
  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'PAY008' to $ReportID

  do Init-DateTime
  do Init-Number
  do Stdapi-Init

  do Get-Report-Language   ! Procedure that decides the report language
                           ! and then calls 'Report-Translation' procedure
                           ! that reads the language dep. text.
  move $Pay008_ReportTitle to $ReportTitle

  do Array-Initialization
  do Payroll-Report-Initialization
end-procedure

! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation
! Read from PAY008 and PAY1 program ids
   do Init_Report_Translation($ReportID,$Language_Cd)
   do Append_Report_Translation('PAY1')

   do Get_Field_Information ('PAY008', 'REPORT_TITLE', $Pay008_ReportTitle,   #dummy_width)
   do Get_Field_Information ('PAY008', 'PAYGRP1',      $Pay008_PayGrp1,       #dummy_width)
   do Get_Field_Information ('PAY008', 'DEDCD1',       $Pay008_DedCd1,        #dummy_width)
   do Get_Field_Information ('PAY008', 'AMT_NTKN1',    $Pay008_Amt_NTkn1,     #dummy_width)
   do Get_Field_Information ('PAY008', 'RSN_NTKN1',    $Pay008_Rsn_NTkn1,     #dummy_width)
   do Get_Field_Information ('PAY008', 'ADD_ARR1',     $Pay008_Add_Arr1,      #dummy_width)
   do Get_Field_Information ('PAY008', 'ARR_BAL1',     $Pay008_Arr_Bal1,      #dummy_width)
   do Get_Field_Information ('PAY008', 'CHKNO1',       $Pay008_ChkNo1,        #dummy_width)
   do Get_Field_Information ('PAY008', 'PAYGRP2',      $Pay008_PayGrp2,       #dummy_width)
   do Get_Field_Information ('PAY008', 'DEDCD2',       $Pay008_DedCd2,        #dummy_width)
   do Get_Field_Information ('PAY008', 'DEDN',         $Pay008_Dedn,          #dummy_width)
   do Get_Field_Information ('PAY008', 'AMT_NTKN2',    $Pay008_Amt_NTkn2,     #dummy_width)
   do Get_Field_Information ('PAY008', 'RSN_NTKN2',    $Pay008_Rsn_NTkn2,     #dummy_width)
   do Get_Field_Information ('PAY008', 'ADD_ARR2',     $Pay008_Add_Arr2,      #dummy_width)
   do Get_Field_Information ('PAY008', 'ARR_BAL2',     $Pay008_Arr_Bal2,      #dummy_width)
   do Get_Field_Information ('PAY008', 'CHKNO2',       $Pay008_ChkNo2,        #dummy_width)
   do Get_Field_Information ('PAY008', 'YES',          $Pay008_Yes,           #dummy_width)
   do Get_Field_Information ('PAY008', 'LEGEND',       $Pay008_Legend,        #dummy_width)
   do Get_Field_Information ('PAY008', 'BENEFIT',      $Pay008_Benefit,       #dummy_width)
   do Get_Field_Information ('PAY008', 'RECORD',       $Pay008_Record,        #dummy_width)

   do Get_Field_Information ('PAY1',   'GR_TOT',       $Pay1_Gr_Tot,          #dummy_width)
   do Get_Field_Information ('PAY1',   'CMP_TOT',      $Pay1_Cmp_Tot,         #dummy_width)
   do Get_Field_Information ('PAY1',   'PAYPER_TOT',   $Pay1_PayPer_Tot,      #dummy_width)
   do Get_Field_Information ('PAY1',   'EMP_ID',       $Pay1_Emp_Id,          #dummy_width)
   do Get_Field_Information ('PAY1',   'NAME',         $Pay1_Name,            #dummy_width)
end-procedure

begin-procedure Array-Initialization
  create-array name=Totals size=4 field=TotalName:char field=total:number:2

  put $Pay1_Gr_Tot     into Totals(1) TotalName
  put $Pay1_Cmp_Tot    into Totals(2) TotalName
  put $Pay1_PayPer_Tot into Totals(3) TotalName
end-procedure

begin-heading 7

  #Include 'stdhtrpi.sqc'
  #Include 'stdhtr04.sqc'

  print $Pay008_PayGrp1   (+2,42)
  print $Pay008_DedCd1    (0,48)
  print $Pay008_Benefit   (0,66)
  print $Pay008_Amt_NTkn1 (0,70)
  print $Pay008_Rsn_NTkn1 (0,80)
  print $Pay008_Add_Arr1  (0,92)
  print $Pay008_Arr_Bal1  (0,104) ! Changed from 108 to 107 to acc. Fr
  print $Pay008_ChkNo1    (0,114)


  print $Pay1_Emp_Id      (+1,1)
  print $Pay1_Name        (0,14)
  print $Pay008_PayGrp2   (0,42)
  print $Pay008_DedCd2    (0,48)
  print $Pay008_Dedn      (0,55)
  print $Pay008_Record    (0,66)
  print $Pay008_Amt_NTkn2 (0,70)
  print $Pay008_Rsn_NTkn2 (0,80)
  print $Pay008_Add_Arr2  (0,92)
  print $Pay008_Arr_Bal2  (0,104) ! Changed from 108 to 107 to acc. Fr
  print $Pay008_ChkNo2    (0,114)
end-heading


begin-procedure Report

begin-SELECT
A.COMPANY      () on-break print=never level=1 procedure=Company-Change
A.PAY_END_DT   () on-break print=never level=2 procedure=PayEndDate-Change
A.CHECK_DT
B.EMPL_RCD
B.EMPLID
B.NAME
B.PAYGROUP
B.FORM_ID
B.PAYCHECK_NBR
B.OFF_CYCLE
B.PAGE_NUM
B.LINE_NUM
B.SEPCHK
B.PAY_SHEET_SRC

  if &A.Company <> $Company
    move &A.Company to $Company
    do Get-Company-Data
  end-if

  move &A.Pay_End_Dt to $PayEndDate
  do Deductions_Not_Taken

FROM  PS_PAY_CALENDAR  A,
      PS_PAY_CHECK     B
WHERE [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = B.COMPANY
  AND B.PAYGROUP   = A.PAYGROUP
  AND B.PAY_END_DT = A.PAY_END_DT
ORDER BY A.COMPANY,
         A.PAY_END_DT,
         B.NAME,
         B.EMPLID
end-SELECT

  move 1 to #changeLevel
  move 'Y' to $End
  do Print-Totals
end-procedure


begin-procedure Deductions_Not_Taken

begin-SELECT
C.PLAN_TYPE
C.BENEFIT_RCD_NBR
C.DEDCD
C.DED_NOT_TAKEN
C.REASON_NOT_TAKEN

  print      &B.EmplID          (+1,1)
  print      &B.Name            (0,13,30)
  print      &B.PayGroup        (0,44)
  print      &C.DedCd           (0,48)
  do Format-Number(&C.BENEFIT_RCD_NBR, $out, '999')
  print $out (0,66,3)

  do Format-Number(&C.Ded_Not_Taken, $out, '999,999.99')
  print      $out               (0,69)

  move 'REASON_NOT_TAKEN' to $FieldName
  move &C.Reason_Not_Taken to $FieldValue
  do Read-Translate-Table
  let $Reason_Not_Taken = &C.Reason_Not_Taken || ' ' || $XlatShortName
  print $Reason_Not_Taken       (0,80)

  do Format-Number(&B.PAYCHECK_NBR, $out, '099999999999999')
  print $out                    (0,111)
  if &B.Pay_Sheet_Src = 'O' or &B.Pay_Sheet_Src = 'K' or &B.Pay_Sheet_Src = 'L'
     print &B.Pay_Sheet_Src     (0,126)
  end-if

  ARRAY-ADD &C.Ded_Not_Taken to TOTALS(3) TOTAL(0)

  move &C.Plan_Type to $PlanType
  move &C.DedCd     to $DedCd
  do Get-Deduction-Name
  print $DeductionAbbrv         (0,55)
  do Test-for-Arrears

  if &Ded_Arrears = 'Y'  !from the Deduction Class Table
    print $Pay008_Yes           (0,96)
    do Get-Arrears-Balance
    do Format-Number(&Arrears_Bal, $out, '999,999.99')
    print $out                  (0,100) ! Changing to 104 from 105 to acc. Fr
    ARRAY-ADD &Arrears_Bal to TOTALS(3) TOTAL(1)
  end-if

FROM  PS_PAY_DEDUCTION C
WHERE C.COMPANY    = &A.Company
  AND C.PAYGROUP   = &B.PayGroup
  AND C.PAY_END_DT = &A.Pay_End_Dt
  AND C.OFF_CYCLE  = &B.Off_Cycle
  AND C.PAGE_NUM      = &B.PAGE_NUM
  AND C.LINE_NUM      = &B.LINE_NUM
  AND C.SEPCHK     = &B.SepChk
  AND C.DED_CLASS <= 'K'
  AND C.DED_NOT_TAKEN > 0
end-SELECT

end-procedure


begin-procedure Test-for-Arrears

begin-SELECT
DED_ARREARS
FROM  PS_DEDUCTION_CLASS
WHERE PLAN_TYPE        = $PlanType
  AND DEDCD            = $DedCd
  AND EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_DEDUCTION_CLASS
       WHERE  PLAN_TYPE        = $PlanType
         AND  DEDCD            = $DedCd
         AND  EFFDT           <= $AsOfDate)
end-SELECT
end-procedure

begin-procedure Get-Arrears-Balance
begin-SELECT
ARREARS_BAL
FROM  PS_DED_ARREARS
WHERE EMPLID    = &B.EmplID
  AND COMPANY   = &A.Company
  AND PLAN_TYPE = &C.Plan_Type
  AND DEDCD     = &C.DedCd
  AND BENEFIT_RCD_NBR = &C.Benefit_rcd_nbr
end-SELECT
end-procedure

begin-procedure Company-Change
  move 2 to #changeLevel
  do Print-Totals
end-procedure

begin-procedure PayEndDate-Change
  move 3 to #changeLevel
  do Print-Totals
end-procedure

begin-procedure Print-Totals
  move 3 to #totalRow
  while #totalRow >= #changeLevel
    move #totalRow to #rollRow
    subtract 1 from #rollRow
    get $TotalName from Totals(#totalRow) TotalName
    print $TotalName (+2,52)
    move 67 to #startCol
    move 0 to #i
    while #i <= 1
      get #total from Totals(#totalRow) total(#i)
      do Format-Number(#total, $out, '9,999,999.99')
      print $out (0,#startCol)
      add 31 to #startCol ! Changing add to 31 from 32 so that arr, bal
                          ! starts getting printed at 102. This is in
                          ! in accordance with changes to the posn. of
                          ! arrears balance made earlier.
      array-add #total to Totals(#rollRow) total(#i)
      put 0 into Totals(#totalRow) total(#i)
      add 1 to #i
    end-while
    subtract 1 from #totalRow
  end-while
  if $End = 'Y'
    do Reset
  end-if
  new-page
end-procedure

!******************************************************
!  RESET: Reset printer, print 'End of Report'        *
!         Note: Uncomment ENCODE statement to force   *
!               a printer reset at end of report      *
!******************************************************

begin-procedure Reset
  move 'Y' to $End_of_Report
  if #MsgFlagW
     print $MsgTextW (+2,1)
  end-if
end-procedure

begin-footing 2
  print $Pay008_Legend (1,1)
  if $End_of_Report = 'Y'
    !*******************************************************************
    !  Use a globalized string if one was gotten from stdhdgtr         *
    !*******************************************************************
    if $stdhdg_end_rep = ''
      print 'End of Report' (+1,1) center
    else
      print $stdhdg_end_rep (+1,1) center
    end-if
 !  encode '<27>E' into $Reset
    print $Reset (+0,+1)
  end-if
end-footing


#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getdednm.sqc'  !Get-Deduction-Name procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'payinit.sqc'   !Report Initialization and Timing
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
