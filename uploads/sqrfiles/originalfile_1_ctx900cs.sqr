!*************************************
!  CTX900CS: Year End Consent Report *
!*************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!                $Date:  2006/03/13:14:22:16                           !
!             $Release:  HR9                                           !
!            $Revision:  102                                           !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization
#Include 'ctxrctl1.sqc'  !Select-Canadian-YrEnd-Parameters procedure

#define col_Name               1
#define col_ID                50
#define col_Date              65
#define col_SeqNum            85
#define col_Consent_Status    95


begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  do Stdapi-Init
  move 'CTX900CS' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  move $CTX900CS_Title to $ReportTitle
  display $ReportTitle

  do Init-DateTime
  do Init-Number

  do Get-Report-Parameters

end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from CTX900CS  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('CTX900CS', 'TITLE'              , $CTX900CS_Title , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'CONSENT_RECEIVED'   , $CTX900CS_Consent_Received , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'CONSENT_DATE'       , $CTX900CS_Consent_Date , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'RESET_BY_ER'        , $CTX900CS_Reset_By_ER , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'RESET_DATE'         , $CTX900CS_Reset_Date , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'WITHDRAWN_CONSENT'  , $CTX900CS_Withdrawm_Consent , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'WITHDRAWN_DATE'     , $CTX900CS_Withdrawn_Date , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'CONSENT_SUMMARY'    , $CTX900CS_Consent_Summary , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'EFFDT'              , $CTX900CS_Effdt , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'CONSENT_STATUS'     , $CTX900CS_Consent_Status , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'EMPLOYEE_NAME'      , $CTX900CS_Employee_Name , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'ID'                 , $CTX900CS_ID , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'SEQ'                , $CTX900CS_Seq , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'TOTAL_NUM_EMPLOYEE' , $CTX900CS_Total_Num_Employee , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'NO_CONSENT_EE'      , $CTX900CS_No_Consent_EE , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'NO_RESET_EE'        , $CTX900CS_No_Reset_EE , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'NO_WITHDRAWN_EE'    , $CTX900CS_No_Withdrawn_EE , #dummy_width)
   do Get_Field_Information ('CTX900CS', 'NO_EE_PROC'         , $CTX900CS_No_EE_Processed , #dummy_width)

end-procedure

begin-heading 8

  #Include 'stdhtr08.sqc'

  Evaluate $RC_CAN_YE.CONSENT_PROC_FLAG

  when = 'C'
    move $CTX900CS_Consent_Received  to $Report_Header
    print $Report_Header                   () Center
    print $CTX900CS_Employee_Name          (+3,{col_Name})
    print $CTX900CS_ID                     (0,{col_ID})
    print $CTX900CS_Consent_Date           (0,{col_Date})
    print $CTX900CS_Seq                    (0,{col_SeqNum})
    break
  when = 'R'
    move $CTX900CS_Reset_By_ER       to $Report_Header
    print $Report_Header                   () Center
    print $CTX900CS_Employee_Name          (+3,{col_Name})
    print $CTX900CS_ID                     (0,{col_ID})
    print $CTX900CS_Reset_Date             (0,{col_Date})
    print $CTX900CS_Seq                    (0,{col_SeqNum})
    break
  when = 'W'
    move $CTX900CS_Withdrawm_Consent to $Report_Header
    print $Report_Header                   () Center
    print $CTX900CS_Employee_Name          (+3,{col_Name})
    print $CTX900CS_ID                     (0,{col_ID})
    print $CTX900CS_Withdrawn_Date         (0,{col_Date})
    print $CTX900CS_Seq                    (0,{col_SeqNum})
    break
  when = 'A'
    move $CTX900CS_Consent_Summary   to $Report_Header
    print $Report_Header                   () Center
    print $CTX900CS_Employee_Name          (+3,{col_Name})
    print $CTX900CS_ID                     (0,{col_ID})
    print $CTX900CS_Effdt                  (0,{col_Date})
    print $CTX900CS_Seq                    (0,{col_SeqNum})
    print $CTX900CS_Consent_Status         (0,{col_Consent_Status})
    break
  when-other
    break
  end-evaluate

end-heading


begin-procedure Process-Main

  if $Proc_Summary = 'Y'
    do Process-Consent-Summary
  else
    do Process-Consent-Record
  end-if

  if #Employee_Count > 0
    print $CTX900CS_Total_Num_Employee     (+2,1)

    do Format-Number(#Employee_Count, $Employee_Count,  '999,999,999,999')
    print $Employee_Count                  (0, 23)

  else
    evaluate $RC_CAN_YE.CONSENT_PROC_FLAG
    when = 'C'
      print $CTX900CS_No_Consent_EE        (+2,5)
      break
    when = 'R'
      print $CTX900CS_No_Reset_EE          (+2,5)
      break
    when = 'W'
      print $CTX900CS_No_Withdrawn_EE      (+2,5)
      break
    when = 'A'
      print $CTX900CS_No_EE_Processed      (+2,5)
      break
    when-other
      break
    end-evaluate
  end-if

end-procedure


begin-procedure Process-Consent-Record

  let #Employee_Count = 0

begin-select

B.EMPLID
C.NAME_PSFORMAT
B.EFFDT
B.EFFSEQ
B.YE_CONSENT_CURRENT

  let $EE_Name =  rtrim(&C.NAME_PSFORMAT, ' ')
  print $EE_Name                           (+1,{col_Name}) on-break level=1 skiplines=1

  let $EE_ID   =  rtrim(&B.EMPLID, ' ')
  print $EE_ID                             (0,{col_ID})    on-break level=1

  do Format-DateTime(&B.EFFDT, $out, {DEFDATE}, '', '')
  print $out                               (0,{col_Date})

  do Format-Number(&B.EFFSEQ, $out, '999')
  print $out                               (0,{col_SeqNum})

  if $RC_CAN_YE.CONSENT_PROC_FLAG  = 'A'
    move &B.YE_CONSENT_CURRENT   to $FieldValue
    move 'YE_CONSENT_CURRENT'    to $FieldName
    do Read-Translate-Table
    move $XlatShortName to $ConsentStatus
    print $ConsentStatus                   (0,{col_Consent_Status})
  end-if

  if $EE_ID <> $Prior_EE_ID
    add 1 to #Employee_Count
  end-if

  move $EE_ID to $Prior_EE_ID


FROM PS_PY_FORMSTAT_CAN B,
     PS_PERSON_NAME C
WHERE B.YE_CONSENT_CURRENT = $RC_CAN_YE.CONSENT_PROC_FLAG
 AND  B.EFFDT =
   (SELECT MAX(B1.EFFDT)
      FROM PS_PY_FORMSTAT_CAN B1
      WHERE B1.EMPLID = B.EMPLID
        AND B1.EFFDT  >= $RC_CAN_YE.FROMDATE
        AND B1.EFFDT  <= $RC_CAN_YE.THRUDATE
        AND B1.YE_CONSENT_CURRENT = B.YE_CONSENT_CURRENT)
 AND  B.EFFSEQ =
   (SELECT MAX(B2.EFFSEQ)
      FROM PS_PY_FORMSTAT_CAN B2
      WHERE B2.EMPLID = B.EMPLID
        AND B2.EFFDT  = B.EFFDT)
 AND  B.EMPLID = C.EMPLID
ORDER BY C.NAME_PSFORMAT ASC, B.EMPLID ASC
end-select
end-procedure


begin-procedure Process-Consent-Summary

  let #Employee_Count = 0

begin-select

S.EMPLID
N.NAME_PSFORMAT
S.EFFDT
S.EFFSEQ
S.YE_CONSENT_CURRENT

  let $EE_Name =  rtrim(&N.NAME_PSFORMAT, ' ')
  print $EE_Name                           (+1,{col_Name}) on-break level=1 skiplines=1

  let $EE_ID   =  rtrim(&S.EMPLID, ' ')
  print $EE_ID                             (0,{col_ID})    on-break level=1

  do Format-DateTime(&S.EFFDT, $out, {DEFDATE}, '', '')
  print $out                               (0,{col_Date})

  do Format-Number(&S.EFFSEQ, $out, '999')
  print $out                               (0,{col_SeqNum})

  if $RC_CAN_YE.CONSENT_PROC_FLAG  = 'A'
    move &S.YE_CONSENT_CURRENT   to $FieldValue
    move 'YE_CONSENT_CURRENT'    to $FieldName
    do Read-Translate-Table
    move $XlatShortName to $ConsentStatus
    print $ConsentStatus                   (0,{col_Consent_Status})
  end-if

  if $EE_ID <> $Prior_EE_ID
    add 1 to #Employee_Count
  end-if

  move $EE_ID to $Prior_EE_ID


FROM PS_PY_FORMSTAT_CAN S,
     PS_PERSON_NAME N
WHERE S.EMPLID   =  N.EMPLID
 AND  S.EFFDT   >= $RC_CAN_YE.FROMDATE
 AND  S.EFFDT   <= $RC_CAN_YE.THRUDATE
 AND  (S.YE_CONSENT_CURRENT = $Consent OR
       S.YE_CONSENT_CURRENT = $ResetConsent OR
       S.YE_CONSENT_CURRENT = $Withdrawn)
ORDER BY N.NAME_PSFORMAT ASC, S.EMPLID ASC, S.EFFDT DESC, S.EFFSEQ DESC
end-select
end-procedure

begin-procedure Get-Report-Parameters

  do Select-Canadian-YrEnd-Parameters

  let $FromDate          = $RC_CAN_YE.FROMDATE
  let $ThruDate          = $RC_CAN_YE.THRUDATE

  if $RC_CAN_YE.CONSENT_PROC_FLAG = 'A'
    let $Consent      = 'C'
    let $ResetConsent = 'R'
    let $Withdrawn    = 'W'
    let $Proc_Summary = 'Y'
  end-if

end-procedure

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getftdts.sqc'  !Get-From-Thru-Dates procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
