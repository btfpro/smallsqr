!******************************************************
! IDPdat: This prints the data in the IDP report      *
!******************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2007 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!          $Date:  2007/03/26:22:37:24                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689716                                              !
!                                                                      *
!***********************************************************************

BEGIN-PROCEDURE PRINT-IDP-DATA-PAGE-1

GRAPHIC () FONT 4 10
BEGIN-SELECT
PERS_A.NAME  ( 43,  3, 50)
      FROM PS_PERSON_NAME PERS_A
WHERE PERS_A.EMPLID = $EMPLID
END-SELECT

! GET JOB DATA
BEGIN-SELECT
JOB_A.REG_TEMP
          MOVE 'REG_TEMP' TO $FIELDNAME
          MOVE &JOB_A.REG_TEMP TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
          PRINT $XLATLONGNAME (71,3)
          PRINT '/' (,+4)
JOB_A.GVT_WORK_SCHED
          MOVE 'GVT_WORK_SCHED' TO $FIELDNAME
          MOVE &JOB_A.GVT_WORK_SCHED TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
          PRINT $XLATLONGNAME (,+2)
JOB_A.GRADE_ENTRY_DT   (59,175,10)     EDIT 'MM-DD-YYYY'
JOB_A.JOBCODE
          MOVE &JOB_A.JOBCODE TO $REQD_JOBCODE
          DO GET-JOBCODE-DATA          
          PRINT $REQD_JOBCODE (43,88,8)  !Begin Resolution 573912
          PRINT '-' ( ,+4)               !End Resolution 573912
          PRINT $REQD_ERN_PROGRAM ( , +1, 2)
          PRINT '-' (,+3)
          PRINT $REQD_OCC_SERIES ( , +1, 4)
          PRINT '-' (,+3)
          PRINT $REQD_GRADE ( , +1, 2)
          PRINT $REQD_DESCR ( , +2,30)       
          PRINT $REQD_TRG_PRG (83,173,30)
JOB_A.POSITION_NBR
          MOVE &JOB_A.POSITION_NBR TO $REQD_POSITION
          DO GET-POSITION-DATA
          PRINT $REQD_POSITION (47,88,10) !Begin Resolution 573912
          PRINT '-' ( ,+6)                !End Resolution 573912
          PRINT $REQD_ERN_PROGRAM ( , +1, 2)
          PRINT '-' (,+3)
          PRINT $REQD_OCC_SERIES   (,+1, 4)
          PRINT '-' (,+3)
          PRINT $REQD_GRADE (,+1, 2)
          PRINT $REQD_DESCR (,+2,30)          
          PRINT $REQD_TARGET_GRADE ( 59,231,2)
          PRINT $REQD_LEVEL (47,173)
JOB_A.SETID_DEPT
JOB_A.SETID_LOCATION
JOB_A.SETID_JOBCODE
JOB_A.DEPTID  (59,3,10)
          MOVE &JOB_A.DEPTID TO $REQD_DEPTID
          DO GET-DEPARTMENT-DATA
          PRINT $REQD_DESCR (59,+2,30)
JOB_A.LOCATION
          DO GET-LOCATION-DATA

     FROM PS_GVT_JOB JOB_A
     WHERE JOB_A.EMPLID = $EMPLID
     AND JOB_A.EMPL_RCD = 0
     AND JOB_A.EFFDT = (SELECT MAX(EFFDT) FROM PS_GVT_JOB JOB_B
                    WHERE JOB_B.EMPLID = $EMPLID
                    AND JOB_B.EMPL_RCD = 0
                    AND JOB_B.EFFDT <= $IDPDATE)

END-SELECT

! GET EMPLOYMENT DATA

BEGIN-SELECT

EMPL_A.GVT_SPEP
          MOVE 'GVT_SPEP' TO $FIELDNAME
          MOVE &EMPL_A.GVT_SPEP TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
          PRINT $XLATLONGNAME ( 71, 88)
EMPL_A.POSITION_PHONE (47,3,14) EDIT '(XXX)BXXX-XXXX'
  FROM PS_EMPLOYMENT_USF EMPL_A
  WHERE EMPL_A.EMPLID    = $EMPLID
  AND   EMPL_A.EMPL_RCD = 0

END-SELECT

! GET CAREER PLAN DATA

BEGIN-SELECT

PLAN_A.GVT_CARPLAN_RSN
          MOVE 'GVT_CARPLAN_RSN' TO $FIELDNAME
          MOVE &PLAN_A.GVT_CARPLAN_RSN TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
          PRINT $XLATLONGNAME (71,173)
PLAN_A.EFFDT               (43,217,10) EDIT 'MM-DD-YYYY'
PLAN_A.NEXT_CAREERPLAN_DT  (47,217,10) EDIT 'MM-DD-YYYY'
PLAN_A.RELOCATE
       IF &PLAN_A.RELOCATE = 'Y'
           PRINT 'Yes' (163,42)
       ELSE
           PRINT 'No ' (163,42)
       END-IF
PLAN_A.INTERNATIONAL
       IF &PLAN_A.INTERNATIONAL = 'Y'
           PRINT 'Yes' (163,70)
       ELSE
           PRINT 'No ' (163,70)
       END-IF
PLAN_A.TRAVELLING
       IF &PLAN_A.TRAVELLING = 'Y'
           PRINT 'Yes' (163,90)
       ELSE
           PRINT 'No ' (163,90)
       END-IF
PLAN_A.DESIRED_LOCATN1
       MOVE &PLAN_A.DESIRED_LOCATN1 TO $TEMP_LOC
       DO GET-LOC-DESCR
       PRINT $FINAL_LOC (163,130,30)
PLAN_A.DESIRED_LOCATN2
       MOVE &PLAN_A.DESIRED_LOCATN2 TO $TEMP_LOC
       MOVE ' ' TO $FINAL_LOC
       DO GET-LOC-DESCR
       PRINT $FINAL_LOC (163,175,30)

           FROM PS_CAREERPLAN PLAN_A
           WHERE PLAN_A.EMPLID = $EMPLID
           AND   PLAN_A.EFFDT  = $IDPDATE

END-SELECT

! GET CAREER DEVELOPMENT ELIGIBILITY DATA

LET #MAX_ROWS      = 3
LET #CURRENT_ROW   = 1
PRINT ' ' (79,1)
BEGIN-SELECT

GVT_CAR_DEV_ELIG
      IF #CURRENT_ROW <= #MAX_ROWS
          MOVE 'GVT_CAR_DEV_ELIG' TO $FIELDNAME
          MOVE &GVT_CAR_DEV_ELIG TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
          PRINT $XLATLONGNAME (+4,3)
      END-IF
GVT_CAR_DEV_PART
       IF #CURRENT_ROW <= #MAX_ROWS
          PRINT 'Participating : ' (,47)
          IF &GVT_CAR_DEV_PART = 'Y'
              PRINT 'Yes' (,68)
          ELSE
              PRINT 'No' (,68)
          END-IF
       END-IF
       ADD 1 TO #CURRENT_ROW

       FROM PS_GVT_CAR_DEV_ELG
            WHERE EMPLID = $EMPLID
            AND   EFFDT  = $IDPDATE

END-SELECT

! GET GEOGRAPHIC PREFERENCES DATA

LET #MAX_ROWS      = 3
LET #CURRENT_ROW   = 1
PRINT ' ' (99,1)
BEGIN-SELECT

PREF_US.GEOG_PREFERENCE
      IF #CURRENT_ROW <= #MAX_ROWS
          MOVE 'GEOG_PREFERENCE' TO $FIELDNAME
          MOVE &PREF_US.GEOG_PREFERENCE TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
          PRINT $XLATLONGNAME (+4,3)
      END-IF
      ADD 1 TO #CURRENT_ROW

       FROM PS_GEOG_PREF_US PREF_US
            WHERE EMPLID = $EMPLID
            AND   EFFDT  = $IDPDATE

END-SELECT

! GET INTERNATIONAL PREFERENCES DATA

LET #MAX_ROWS      = 3
LET #CURRENT_ROW   = 1
PRINT ' ' (99,78)
BEGIN-SELECT

PREF_INTL.COUNTRY
      IF #CURRENT_ROW <= #MAX_ROWS
          DO GET-COUNTRY
      END-IF
      ADD 1 TO #CURRENT_ROW

       FROM PS_GEOG_PREF_INTL PREF_INTL
            WHERE EMPLID = $EMPLID
            AND   EFFDT  = $IDPDATE

END-SELECT

! GET OBSTACLES TO MOBILITY DATA

LET #MAX_ROWS      = 3
LET #CURRENT_ROW   = 1
PRINT ' ' (99,152)
BEGIN-SELECT

OBSTACLES.OBSTACLES_MOBILITY
      IF #CURRENT_ROW <= #MAX_ROWS
          MOVE 'OBSTACLES_MOBILITY' TO $FIELDNAME
          MOVE &OBSTACLES.OBSTACLES_MOBILITY TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
          PRINT $XLATLONGNAME (+4,173)
      END-IF
      ADD 1 TO #CURRENT_ROW

       FROM PS_OBSTACLES_MOBIL OBSTACLES
            WHERE EMPLID = $EMPLID
            AND   EFFDT  = $IDPDATE

END-SELECT

! GET SHORT-TERM GOALS

LET #MAX_ROWS      = 9
LET #CURRENT_ROW   = 1
PRINT ' ' (119,2)

BEGIN-SELECT

SHORT_GOALS.CAREER_GOAL
SHORT_GOALS.EST_COMPLETION_DT
SHORT_GOALS.ACT_COMPLETION_DT
            IF #CURRENT_ROW <= #MAX_ROWS
                PRINT &SHORT_GOALS.CAREER_GOAL       (+4,3)
                PRINT &SHORT_GOALS.EST_COMPLETION_DT (,77)   EDIT 'MM-DD-YYYY'
                PRINT '/' (,95)
                PRINT &SHORT_GOALS.ACT_COMPLETION_DT (,97)   EDIT 'MM-DD-YYYY'
            END-IF
            ADD 1 TO #CURRENT_ROW

            FROM PS_SHRT_TERM_GOALS SHORT_GOALS
            WHERE EMPLID = $EMPLID
            AND   EFFDT  = $IDPDATE

END-SELECT

! GET LONG-TERM GOALS

LET #MAX_ROWS      = 9
LET #CURRENT_ROW   = 1
PRINT ' ' (119,126)

BEGIN-SELECT

LONG_GOALS.CAREER_GOAL
LONG_GOALS.EST_COMPLETION_DT
LONG_GOALS.ACT_COMPLETION_DT
            IF #CURRENT_ROW <= #MAX_ROWS
                PRINT &LONG_GOALS.CAREER_GOAL       (+4,127)
                PRINT &LONG_GOALS.EST_COMPLETION_DT (,201)    EDIT 'MM-DD-YYYY'
                PRINT '/' (,219)
                PRINT &LONG_GOALS.ACT_COMPLETION_DT (,221)  EDIT 'MM-DD-YYYY'
            END-IF
            ADD 1 TO #CURRENT_ROW

            FROM PS_LONG_TERM_GOALS LONG_GOALS
            WHERE EMPLID = $EMPLID
            AND   EFFDT  = $IDPDATE

END-SELECT

! GET EMPLOYEE REVIEW DATA

PRINT ' ' (79,77)

!******************
! Get All Reviews *
!******************
let $ERN = ''
let $ReviewType = ''
let $BeginDt = ''
let $EndDt = ''
let #MaxReviews = 0
do Get-All-Reviews($Emplid, $ERN, $ReviewType, $BeginDt, $EndDt, #MaxReviews, #ReviewEntries)

!***************************
! Loop through the Reviews *
!***************************
let #CNT = 1
let #MaxReviewsPrinted = 3
let #ReviewsPrinted = 0

While (#CNT <= #ReviewEntries) and (#ReviewsPrinted < #MaxReviewsPrinted)

  !*********************************
  ! Get the relevant Review values *
  !*********************************
  Get $PeriodEndDt_YMD     from Reviews(#CNT) PeriodEndDt_YMD
  Get $ReviewTypeDescr     from Reviews(#CNT) ReviewTypeDescr
  Get $GvtOPMRatingDescr   from Reviews(#CNT) GvtOPMRatingDescr
  Get $OfficialSW          from Reviews(#CNT) OfficialSW
  Get $ReviewStatus        from Reviews(#CNT) ReviewStatus

  !******************************************************************
  ! Print only if the Review is 'official' and Status is 'complete' *
  !******************************************************************
  If (Rtrim($OfficialSW,' ') = 'Y' and Rtrim($ReviewStatus,' ') = 'CO')

    PRINT $ReviewTypeDescr (+4,88)
    let $PeriodEndDt = substr($PeriodEndDt_YMD, 5, 2) || '/' || substr($PeriodEndDt_YMD, 7, 2) || '/' || substr($PeriodEndDt_YMD, 1, 4)
    PRINT $PeriodEndDt (,110)
    PRINT $GvtOPMRatingDescr (, 130)
    ADD 1 TO #ReviewsPrinted
  end-if

  add 1 to #CNT

end-while

END-PROCEDURE


BEGIN-PROCEDURE GET-COUNTRY

BEGIN-SELECT

COUNTRY.DESCR  (+4,88)

        FROM PS_COUNTRY_TBL COUNTRY
        WHERE COUNTRY.COUNTRY = &PREF_INTL.COUNTRY

END-SELECT

END-PROCEDURE

BEGIN-PROCEDURE GET-LOC-DESCR

BEGIN-SELECT

LOC_C.DESCR
      MOVE &LOC_C.DESCR TO $FINAL_LOC

      FROM PS_LOCATION_TBL LOC_C
      WHERE LOC_C.LOCATION = &JOB_A.SETID_LOCATION
      AND   LOC_C.LOCATION = $TEMP_LOC
      AND   LOC_C.EFFDT = (SELECT MAX(EFFDT) FROM PS_LOCATION_TBL LOC_D
                            WHERE  LOC_D.SETID = LOC_C.SETID
                            AND    LOC_D.EFFDT <= $IDPDATE
                            AND    LOC_D.EFF_STATUS = 'A'
                            AND    LOC_D.LOCATION = LOC_C.LOCATION)

END-SELECT

END-PROCEDURE

BEGIN-PROCEDURE GET-LOCATION-DATA

BEGIN-SELECT

LOC_A.LOCATION
      DO GET-GEO-LOC-DATA
LOC_A.GVT_GEOLOC_CD
       FROM  PS_LOCATION_TBL LOC_A
       WHERE LOC_A.LOCATION = &JOB_A.LOCATION
       AND   LOC_A.EFFDT = (SELECT MAX(EFFDT) FROM PS_LOCATION_TBL LOC_B
                            WHERE  LOC_B.EFFDT <= $IDPDATE
                            AND    LOC_B.EFF_STATUS = 'A'
                            AND    LOC_B.LOCATION = LOC_A.LOCATION)

END-SELECT

END-PROCEDURE

BEGIN-PROCEDURE GET-GEO-LOC-DATA

BEGIN-SELECT

GEOLOC_A.CITY  (59,88,30)
               PRINT ',' (,+3)
GEOLOC_A.STATE
               LET $STATENAME = SUBSTR(&GEOLOC_A.STATE,1,2)
               PRINT $STATENAME (,+2,2)
GEOLOC_A.COUNTRY  (,+3,3)
GEOLOC_A.GVT_GEOLOC_CD
       FROM  PS_GVT_GEOLOC_TBL GEOLOC_A
       WHERE GEOLOC_A.GVT_GEOLOC_CD = &LOC_A.GVT_GEOLOC_CD
       AND   GEOLOC_A.EFFDT = (SELECT MAX(EFFDT) FROM PS_GVT_GEOLOC_TBL GEOLOC_B
                               WHERE  GEOLOC_B.EFFDT <= $IDPDATE
                               AND    GEOLOC_B.EFF_STATUS = 'A'
                               AND    GEOLOC_B.GVT_GEOLOC_CD = GEOLOC_A.GVT_GEOLOC_CD)
END-SELECT

END-PROCEDURE

BEGIN-PROCEDURE GET-POSITION-DATA

BEGIN-SELECT

PD_A.GVT_PAY_PLAN
              MOVE &PD_A.GVT_PAY_PLAN TO $REQD_ERN_PROGRAM
PD_A.GVT_OCC_SERIES
              MOVE &PD_A.GVT_OCC_SERIES TO $REQD_OCC_SERIES
PD_A.GRADE
              MOVE &PD_A.GRADE TO $REQD_GRADE
PD_A.DESCR
              MOVE &PD_A.DESCR TO $REQD_DESCR
PD_A.GVT_TARGET_GRADE
              MOVE &PD_A.GVT_TARGET_GRADE TO $REQD_TARGET_GRADE
PD_A.POSITION_NBR
PD_A.MANAGER_LEVEL
          MOVE 'MANAGER_LEVEL' TO $FIELDNAME
          MOVE &PD_A.MANAGER_LEVEL TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
          MOVE $XLATLONGNAME TO $REQD_LEVEL

        FROM PS_POSITION_DATA PD_A
        WHERE  PD_A.POSITION_NBR = $REQD_POSITION
        AND    PD_A.EFFDT = (SELECT MAX(EFFDT) FROM PS_POSITION_DATA PD_B
                         WHERE PD_B.EFFDT <= $IDPDATE
                         AND PD_B.EFF_STATUS = 'A'
                         AND PD_B.POSITION_NBR = PD_A.POSITION_NBR)

END-SELECT

END-PROCEDURE

BEGIN-PROCEDURE GET-JOBCODE-DATA

BEGIN-SELECT

JC_A.GVT_PAY_PLAN
             MOVE &JC_A.GVT_PAY_PLAN TO $REQD_ERN_PROGRAM
JC_A.GVT_OCC_SERIES
             MOVE &JC_A.GVT_OCC_SERIES TO $REQD_OCC_SERIES
JC_A.GRADE
             MOVE &JC_A.GRADE TO $REQD_GRADE
JC_A.DESCR
             MOVE &JC_A.DESCR TO $REQD_DESCR
JC_A.JOBCODE
JC_A.TRN_PROGRAM
        DO GET-TRN-PGRM
     FROM PS_JOBCODE_TBL JC_A
     WHERE JC_A.SETID = &JOB_A.SETID_JOBCODE
     AND   JC_A.JOBCODE = $REQD_JOBCODE
     AND   JC_A.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOBCODE_TBL JC_B
                    WHERE JC_B.SETID = JC_A.SETID
                    AND JC_B.EFFDT <= $IDPDATE
                    AND JC_B.EFF_STATUS = 'A'
                    AND JC_B.JOBCODE = JC_A.JOBCODE)

END-SELECT

END-PROCEDURE

BEGIN-PROCEDURE GET-TRN-PGRM

BEGIN-SELECT

TRG_PRG.DESCR
         MOVE &TRG_PRG.DESCR TO $REQD_TRG_PRG

         FROM PS_TRN_PROGRM_TBL TRG_PRG
         WHERE TRG_PRG.TRN_PROGRAM = &JC_A.TRN_PROGRAM

END-SELECT

END-PROCEDURE

BEGIN-PROCEDURE GET-DEPARTMENT-DATA

BEGIN-SELECT

DEPT_A.DESCR
       MOVE &DEPT_A.DESCR TO $REQD_DESCR
DEPT_A.DEPTID
       FROM PS_DEPT_TBL DEPT_A

       WHERE   DEPT_A.SETID  = &JOB_A.SETID_DEPT
       AND     DEPT_A.DEPTID = $REQD_DEPTID
       AND     DEPT_A.EFFDT  = (SELECT MAX(EFFDT) FROM PS_DEPT_TBL DEPT_B
                                 WHERE DEPT_B.SETID  = DEPT_A.SETID
                                 AND   DEPT_B.DEPTID = DEPT_A.DEPTID
                                 AND   DEPT_B.EFFDT <= $IDPDATE
                                 AND   DEPT_B.EFF_STATUS = 'A')

END-SELECT

END-PROCEDURE


#INCLUDE 'eputils.sqc'   !Get-All-Reviews procedure


