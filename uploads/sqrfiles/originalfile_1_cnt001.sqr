!***********************************************************************
! CNT001: Contract Data Report                                         *
!                                                                      *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!                $Date:  2006/01/31:04:56:39                           !
!             $Release:  HR9                                           !
!            $Revision:  101                                           !
!                                                                      *
!***********************************************************************
!
!  Creation    :   10/01/99
!  Modification:
!
!***********************************************************************
!Procedures ending with "Scrty" and Record alias ending with "SC" are  *
!using SQR Security.                                                   *
!***********************************************************************

#include 'setenv.sqc'    !Set environment

Begin-setup
#include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

!**************************
begin-report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do PROCESS-MAIN
  do Reset
  do Stdapi-Term

end-report

!**************************
begin-heading 5

do Get_Field_Information ('CONTRACT',     'REPORT_TITLE', $ReportTitle,   #DW)
if $ReportTitle = ''
let $ReportTitle = 'Contract Data'
end-if

#Include 'stdhdgtr.sqc'

end-heading

!**************************
begin-procedure Init-Report

  move 'CNT001' to $ReportID
  display $ReportTitle

! Process Scheduler setup
  do Stdapi-Init

  do Security-Param

  if $prcs_process_instance = ''
   !NO prompt
  else
     do Select-Parameters
  end-if

 do Init_Printer
 do Init_Report_Translation ($ReportID, $Language_cd)
 do Append_Report_Translation ('HR')

! Setup for sorting input data/select
  if $language_cd = 'JPN'
          let $qualifier = 'NAME_AC'
   else
          let $qualifier = 'NAME'
   end-if

do Get-Titles

end-procedure Init-Report

!**************************
begin-procedure Get-Values

let $language_cd = $PRCS_LANGUAGE_CD

let $Emplid = RTRIM(&RUN_CNTL_HR.Emplid, ' ')

do Get-From-Thru-Date

end-procedure  Get-Values

!---------- Main Process -------------!
begin-procedure PROCESS-MAIN

do Format-$Where
do Get-Contract

end-procedure PROCESS-MAIN

!---------- Format the main Where Clause -------------!
begin-procedure Format-$Where

let $Where-Emplid = ''

if $Emplid <> ''
   let $Where-Emplid = ' and A.EMPLID = ''' || $Emplid || ''''
end-if

end-procedure Format-$Where

!---------- Get CONTRACT_DATA -------------!
begin-procedure Get-Contract

let $sql-statement = 'CNT001.SQR,Get-Contract,Select,CONTRACT_DATA A'
begin-select On-Error=SQL-Error

A.EMPLID
A.CONTRACT_NUM
A.CONTRACT_BEGIN_DT
A.CONTRACT_END_DT
A.SIGNATURE_DT
A.CONTRACT_STATUS
A.ADD_CONTRACT
A.CNT_MIN_HRS
A.CNT_MAX_HRS
A.RESPONSIBLE_ID
A.YEAR_SW
A.COMMENTSHORT
A.CNT_TEMPLATE_ID
A.BEGIN_WEEKDAY
A.END_WEEKDAY
A.HIRE_CTR_CD_ESP
A.COMP_RATE_DESCR
A.PROBATION_PERIOD
A.DURATION_TYPE
A.VACATION_PERIOD
A.VACN_PERIOD_UNIT
A.CONTRCT_EXP_END_DT
A.REG_REGION
A.COMMENTS

!**************Begin SQR NAME DISPLAY Change******************
!AZ.NAME
AZ.NAME_DISPLAY
!**************End SQR NAME DISPLAY Change******************
AZ.NAME_AC

    do Print-Detail1

    do Get-Probation-Date
    do Get-Contract-Type
        do Get-Task-Order
        do Get-Job
    do Get-Local-Stuff

from PS_CONTRACT_DATA A,
     PS_PERSON_NAME AZ
    ,PS_FAST_SQR_SEC_VW SCRTY

where A.CONTRACT_BEGIN_DT >= $Fromdate
and   A.CONTRACT_BEGIN_DT <= $Thrudate
and   A.EMPLID = AZ.EMPLID
[$Where-Emplid]
   [$SecurityClause]
   AND A.EMPLID = SCRTY.EMPLID
   AND SCRTY.EMPL_RCD = (SELECT MAX(SCRTY1.EMPL_RCD)
                           FROM PS_FAST_SQR_SEC_VW SCRTY1
                          WHERE SCRTY1.EMPLID = SCRTY.EMPLID
                            AND SCRTY1.OPRID = SCRTY.OPRID
                            AND SCRTY1.ROWSECCLASS = SCRTY.ROWSECCLASS)
order by A.EMPLID, A.CONTRACT_NUM

end-select

end-procedure Get-Contract

!---------- Get Probation Date -------------!
begin-procedure Get-Probation-Date

let $Det2 = 'Y'

let $sql-statement = 'CNT001.SQR,Get-Probation-Date,Select,CNT_PROBATION B'
begin-select On-Error=SQL-Error

B.PROBATION_DT
B.PROBATN_REASON

    do Print-Detail2

from PS_CNT_PROBATION B

where B.EMPLID = &A.EMPLID
and   B.CONTRACT_NUM = &A.CONTRACT_NUM

end-select

end-procedure Get-Probation-Date


!---------- Get Task Order -------------!
begin-procedure Get-Task-Order

let $Det6 = 'Y'

let $sql-statement = 'CNT001.SQR,Get-Task-Order,Select,HR_EE_TASK_ORD H'
begin-select On-Error=SQL-Error

H.CNT_TASK_ORDER_NUM
CNT.DESCR50
CNT.BEGIN_DT
CNT.END_DT
CNT.DESCRLONG

    do Print-Detail6

from PS_HR_EE_TASK_ORD H,
     PS_CNT_TASK_ORDER CNT


where   H.EMPLID = &A.EMPLID
and     H. CONTRACT_NUM = &A.CONTRACT_NUM
and     H.CNT_TASK_ORDER_NUM = CNT.CNT_TASK_ORDER_NUM

end-select
end-procedure Get-Task-Order


!---------- Get Contract Type -------------!
begin-procedure Get-Contract-Type

let $Det3 = 'Y'

let $sql-statement = 'CNT001.SQR,Get-Contract-Type,Select,WKF_CNT_TYPE C'
begin-select On-Error=SQL-Error

C.EFFDT
C.CONTRACT_TYPE
C.EXTEND_CONTRACT_SW
C.RSN_DET_CONTRACT
C.EMPLID_REPLACED
C.PROJECT_NAME
CJ.DESCR

    do Print-Detail3
    do Get-Contract-Clause

from PS_WKF_CNT_TYPE C,
     PS_PERS_CNTRCT_TYP CJ

where   C.EMPLID = &A.EMPLID
and     C.CONTRACT_NUM = &A.CONTRACT_NUM
and     CJ.SETID = &A.REG_REGION
and     CJ.CONTRACT_TYPE = C.CONTRACT_TYPE
and     CJ.EFF_STATUS = 'A'
and     CJ.EFFDT >=
        (select  MAX(CJ2.EFFDT)
               from    PS_PERS_CNTRCT_TYP CJ2
               where   CJ2.SETID        =  CJ.SETID
               and     CJ2.CONTRACT_TYPE  = CJ.CONTRACT_TYPE
               and     CJ2.EFFDT        <=  C.EFFDT)
end-select
end-procedure Get-Contract_Type

!---------- Get Contract Clauses -------------!
begin-procedure Get-Contract-Clause

let $Det4 = 'Y'

let $sql-statement = 'CNT001.SQR,Get-Contract-Type,Select,WKF_CNT_CLAUSE D'
begin-select On-Error=SQL-Error

D.CONTRACT_SEQ
D.CONTRACT_CLAUSE
D.CLAUSE_STATUS
D.DESCR254
D.COMMENTS

    do Print-Detail4

from PS_WKF_CNT_CLAUSE D

where   D.EMPLID = &A.EMPLID
and     D. CONTRACT_NUM = &A.CONTRACT_NUM
and     D.EFFDT = &C.EFFDT

end-select
end-procedure Get-Contract-Clause


!---------- Get related Job  -------------!
begin-procedure Get-JOB

let $Det5 = 'Y'

let $sql-statement = 'CNT001.SQR,Get-Job,Select,JOB E'
begin-select On-Error=SQL-Error

E.EFFDT
E.ACTION
E.ACTION_REASON
EB.DESCR

    do Print-Detail5

from PS_JOB E,
     PS_ACTN_REASON_TBL EB

where   E.EMPLID = &A.EMPLID
and     E.CONTRACT_NUM = &A.CONTRACT_NUM
and     EB.ACTION_REASON = E.ACTION_REASON
and     EB.EFF_STATUS = 'A'
and     EB.EFFDT >=
        (select  MAX(EB2.EFFDT)
               from    PS_ACTN_REASON_TBL EB2
               where   EB2.ACTION_REASON = EB.ACTION_REASON
               and     EB2.EFFDT        <=  E.EFFDT)

end-select
end-procedure Get-Job

!---------- Get RespID-Name  -------------!
begin-procedure Get-RespID-Name

let $sql-statement = 'CNT001.SQR,Get-RespID-Name,Select,PERSON_NAME AY'
begin-select On-Error=SQL-Error

!**************Begin SQR NAME DISPLAY Change******************
!AY.NAME
AY.NAME_DISPLAY
!**************End SQR NAME DISPLAY Change******************


from  PS_PERSON_NAME AY

where &A.RESPONSIBLE_ID = AY.EMPLID

end-select
end-procedure Get-RespID-Name

!---------- Get Local Stuff  -------------!
begin-procedure Get-Local-Stuff

let $sql-statement = 'CNT001.SQR,Get-Local-Stuff,Select,XXXXXX X'

end-procedure Get-Local-Stuff

!*******************************  PRINTING ZONE ***************************
!---------- Printing Contract - Detail Contract Data -------------!
begin-procedure Print-Detail1

if $Prev-Emplid <> &A.EMPLID  and $Prev-Emplid <> ''
 NEW-PAGE 1
end-if


!**************Begin SQR NAME DISPLAY Change******************
  !let $Name=substr(&AZ.NAME,1,35)
   let $Name=substr(&AZ.NAME_DISPLAY,1,35)
!**************End SQR NAME DISPLAY Change******************

let $Contract = Substr(&A.CONTRACT_NUM,1,10)

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&A.CONTRACT_BEGIN_DT,$BeginDt,{DEFDMY},'','')

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&A.CONTRCT_EXP_END_DT,$ExpEndDt,{DEFDMY},'','')

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&A.CONTRACT_END_DT,$EndDt,{DEFDMY},'','')

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&A.SIGNATURE_DT,$SignDt,{DEFDMY},'','')

!-- Line 0
if $Prev-Emplid <> &A.EMPLID
    print $T_Emplid                 (+1,1)  Bold Shade
    print &A.EMPLID                 (,+2)   Shade
    Print $Name                     (,+1)   Shade
end-if

!-- Line Title
if #current-line > 70
 NEW-PAGE 1
end-if
    print $T_Detail1                (+2,1)  Bold Box
    print '_'                       (,,101)   Fill

!-- Line
print $T_Contract               (+1,1,18) Bold
print $Contract                 (,20)  Shade
if &A.ADD_CONTRACT = 'Y'
print $AddlCtr                  (,+2)
    end-if
    if &A.YEAR_SW = 'Y'
print $More1Year                (,+2)
    end-if
 Let $Fieldname = 'CONTRACT_STATUS'
 Let $Fieldvalue = &A.CONTRACT_STATUS
 do Read-Translate-Table()
print $XlatShortName             (,106) Shade

print $T_BeginDt                (+1,1,18)  Bold
print $BeginDt                  (,20,39)
print $T_MinHrs                 (,60)   Bold
print &A.CNT_MIN_HRS            (,+2)   Edit 999.99

print $T_ExpEndDt               (+1,1,18)  Bold
print $ExpEndDt                 (,20,39)
print $T_MaxHrs                 (,60)   Bold
print &A.CNT_MAX_HRS            (,+2)   Edit 999.99

print $T_EndDt                  (+1,1,18)  Bold
print $Enddt                    (,20)

print $T_Signature              (+1,1,18)  Bold
print $SignDt                   (,20,39)
print $T_ComShort               (,60)   Bold
print &A.COMMENTSHORT           (,+2)

print $T_Responsible            (+1,1,18)  Bold
print &A.RESPONSIBLE_ID         (,20)

!**************Begin SQR NAME DISPLAY Change******************
!print &AY.NAME                  (,+2)
print &AY.NAME_DISPLAY                  (,+2)
!**************End SQR NAME DISPLAY Change******************


print $T_Comment                (+1,1,18)  Bold
print &A.COMMENTS               (,20)   Wrap 105 2

print ' '                       (+1,1)


if $Prev-Emplid <> &A.EMPLID  or $Prev-Emplid = ''
 let $Prev-Emplid = &A.EMPLID
end-if

end-procedure Print-Detail1

!---------- Printing Contract - Detail Probation dates -------------!
begin-procedure Print-Detail2

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&B.PROBATION_DT,$ProbDt,{DEFDMY},'','')

!-- Line Title
if $Det2 = 'Y'
    print $T_Detail2            (+1,1)  Bold Box
    let $Det2 = 'N'
end-if

!-- Line
print $ProbDt                   (+1,1,18)
    Let $Fieldname = 'PROBATN_REASON'
    Let $Fieldvalue = &B.PROBATN_REASON
    do Read-Translate-Table()
print $XlatShortName            (,20)

print ' '                       (+1,1)

end-procedure Print-Detail2


!---------- Printing Contract - Detail Task Order  -------------!
begin-procedure Print-Detail6

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&CNT.BEGIN_DT,$TaskBeginDt,{DEFDMY},'','')

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&CNT.END_DT,$TaskEndDt,{DEFDMY},'','')

!-- Line Title
if $Det6 = 'Y'
    print $T_Detail6            (+1,1)  Bold Box
    let $Det6 = 'N'
end-if

!-- Line

print $T_Task                   (+1,1,18) Bold
print &H.CNT_TASK_ORDER_NUM     (,20,25)
print $T_BeginDt                (+1,1,18)  Bold
print $TaskBeginDt                 (,20,10)
print $T_EndDt                  (+1,1,18)  Bold
print $TaskEndDt                   (,20,10)
print $T_Desc                   (+1,1,18) Bold
print &CNT.DESCR50              (,20,50)
print $T_Comments               (+1,1,18) Bold
print &CNT.DESCRLONG            (,20,50)


print ' '                       (+1,1)

end-procedure Print-Detail6



!---------- Printing Contract - Detail Contract Type  -------------!
begin-procedure Print-Detail3

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&C.EFFDT,$TypeDt,{DEFDMY},'','')

!-- Line Title
if $Det3 = 'Y'
    print $T_Detail3            (+1,1)  Bold Box
    let $Det3 = 'N'
end-if

!-- Line
print $TypeDt                   (+1,1,18)
print &C.CONTRACT_TYPE          (,20,4)
print &CJ.DESCR                 (,25,34)
    if &C.EXTEND_CONTRACT_SW = 'Y'
           print $ExtCtr        (,40)
    end-if

print ' '                       (+1,1)

end-procedure Print-Detail3

!---------- Printing Contract - Detail Contract Clause  -------------!
begin-procedure Print-Detail4

!-- Line Title
if $Det4 = 'Y'
    print $T_Detail4            (+1,1)  Bold Box
    let $Det4 = 'N'
end-if

!-- Line
print &D.CONTRACT_CLAUSE        (+1,1)
    Let $Fieldname = 'CLAUSE_STATUS'
    Let $Fieldvalue = &D.CLAUSE_STATUS
    do Read-Translate-Table()
print $XlatShortName            (,+2)
print $ClauseStatus             (,+2)
print &D.DESCR254               (,20) wrap 105 3

!*****print &D.COMMENTS         (,+2)

print ' '                       (+1,1)

end-procedure Print-Detail4

!---------- Printing Contract - Detail related Job -------------!
begin-procedure Print-Detail5

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&E.EFFDT,$JobEffdt,{DEFDMY},'','')

!-- Line Title
if $Det5 = 'Y'
    print $T_Detail5            (+1,1)  Bold Box

    print $T_Effdt              (+1,1,18)  Bold
    print $T_Action             (,20)   Bold

    let $Det5 = 'N'
end-if

!-- Line
print $JobEffdt                 (+1,2,17)
print &E.ACTION                 (,20)
    Let $Fieldname = 'ACTION'
    Let $Fieldvalue = &E.ACTION
    do Read-Translate-Table()
print $XlatShortName            (,+1)
print ' / '                     (,+1)  Bold
print &E.ACTION_REASON          (,+1)
print &EB.DESCR                 (,+1)

!print ' '                       (+1,1)

end-procedure Print-Detail5


!---------- Printing Contract - Get Titles  ---!
begin-procedure Get-Titles

!---- Main Block Titles

do Get_Field_Information ('CONTRACT',   'T_CONTRACT_DATA', $T_Detail1,    #DW)
if $T_Detail1 = ''
let $T_Detail1 = 'Contract Data '
end-if

do Get_Field_Information ('CONTRACT',   'T_PROBATION', $T_Detail2,    #DW)
if $T_Detail2 = ''
let $T_Detail2 = 'Probation Date'
end-if

do Get_Field_Information ('CONTRACT',   'T_CONTRACT_TYPE', $T_Detail3,    #DW)
if $T_Detail3 = ''
let $T_Detail3 = 'Contract Type '
end-if

do Get_Field_Information ('CONTRACT',   'T_CONTRACT_CLAUSE', $T_Detail4,    #DW)
if $T_Detail4 = ''
let $T_Detail4 = 'Contract Clauses '
end-if

do Get_Field_Information ('CONTRACT',   'T_JOB', $T_Detail5,    #DW)
if $T_Detail5 = ''
let $T_Detail5 = 'Linked JOB '
end-if

do Get_Field_Information ('CONTRACT',   'T_TASK_ORDER', $T_Detail6,    #DW)
if $T_Detail6 = ''
let $T_Detail6 = 'Task Order'
end-if

!---- Other Titles

do Get_Field_Information ('HR',   'EMPLID', $T_Emplid,  #DW)
if $T_Emplid <> ''
let $T_Emplid = 'Person ID'
end-if


do Get_Field_Information ('HR',   'EFFDT', $T_Effdt,  #DW)
if $T_Effdt = ''
let $T_Effdt = 'Effective Date'
end-if

do Get_Field_Information ('HR',   'ACTION', $T_Action,  #DW)
if $T_Action = ''
let $T_Action = 'Action'
end-if

do Get_Field_Information ('CONTRACT',   'COMMENTSHORT', $T_ComShort,  #DW)
if $T_ComShort = ''
let $T_ComShort = 'Comment'
end-if

do Get_Field_Information ('CONTRACT',   'CONTRACTCONTENT', $T_Content,  #DW)
if $T_Content = ''
let $T_Content = 'Contract Content'
end-if

do Get_Field_Information ('CONTRACT',   'ADD_CONTRACT', $AddlCtr,       #DW)
if $AddlCtr = ''
let $AddlCtr = 'Additional Contract'
end-if

do Get_Field_Information ('CONTRACT',   'YEAR_SW',      $More1Year,     #DW)
if $More1Year = ''
let $More1Year = 'More than one year expected'
end-if

do Get_Field_Information ('CONTRACT',   'EXTEND_CONTRACT_SW', $ExtCtr,  #DW)
if $ExtCtr = ''
let $ExtCtr = 'Extend Contract'
end-if

do Get_Field_Information ('CONTRACT',   'CONTRACT_NUM', $T_Contract,  #DW)
if $T_Contract = ''
let $T_Contract = 'Contract Number'
end-if

do Get_Field_Information ('CONTRACT',   'CONTRACT_BEGIN_DT', $T_BeginDt,  #DW)
if $T_BeginDt = ''
let $T_BeginDt = 'Begin Date'
end-if

do Get_Field_Information ('CONTRACT',   'CONTRACT_END_DT', $T_EndDt,  #DW)
if $T_EndDt = ''
let $T_EndDt = 'End Date'
end-if

do Get_Field_Information ('CONTRACT',   'CONTRCT_EXP_END_DT', $T_ExpEndDt,  #DW)
if $T_ExpEndDt = ''
let $T_ExpEndDt = 'Expected End Date'
end-if

do Get_Field_Information ('CONTRACT',   'CNT_MIN_HRS1', $T_MinHrs,  #DW)
if $T_MinHrs = ''
let $T_MinHrs = 'Minimum Hours'
end-if

do Get_Field_Information ('CONTRACT',   'CNT_MAX_HRS1', $T_MaxHrs,  #DW)
if $T_MaxHrs = ''
let $T_MaxHrs = 'Maximum Hours'
end-if

do Get_Field_Information ('CONTRACT',   'SIGNATURE_DT', $T_Signature,  #DW)
if $T_Signature = ''
let $T_Signature = 'Signature Date'
end-if

do Get_Field_Information ('CONTRACT',   'RESPONSIBLE_ID', $T_Responsible,  #DW)
if $T_Responsible = ''
let $T_Responsible = 'Responsible ID'
end-if

do Get_Field_Information ('CONTRACT',   'CNT_TASK_ORDER_NUM', $T_Task,  #DW)
if $T_Task = ''
let $T_Task = 'Task Order #'
end-if

do Get_Field_Information ('CONTRACT',   'DESCR50', $T_Desc,  #DW)
if $T_Desc = ''
let $T_Desc = 'Description'
end-if

do Get_Field_Information ('CONTRACT',   'DESCRLONG', $T_Comments,  #DW)
if $T_Comments = ''
let $T_Comments = 'Comments'
end-if

end-procedure Get-Titles


!***************************************************************************
#include 'stdapi.sqc'    !Routine to update run status
#include 'hrrnctl1.sqc'  !Get run control parameter values(select parameter)
#include 'hrgetval.sqc'  !Get values mask routines
#include 'hrsecty.sqc'   !Get SQR Security parameters

#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'sqrtrans.sqc'  !Routines for multilangages translation
#Include 'useprntr.sqc'  !Init Printer
#Include 'readxlat.sqc'  !Routine to get Xlatable values in the related language
