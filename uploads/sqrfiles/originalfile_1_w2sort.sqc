!***********************************************************************
!  W2Sort:  Control W2 Sort                                            *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:07:40:47                                 !
!       $Release:  HR9                                                 !
!      $Revision:  102                                                 !
!                                                                      *
!***********************************************************************

#Include 'usarpt.sqc'      !Get USA variables

begin-procedure Prompt-for-Sort
  while $SortCode1 = ''
    display ''
    display 'Sort by:'
    display ' (1) None'
    display ' (2) State'
    display ' (3) Paygroup'
    display ' (4) Department'
    display ' (5) Zip Code'
    display ' (6) Mail Drop'
    #ifdef TAX910PR
      display ' (7) State/Locality'
      input $SortCode1 'Enter 1, 2, 3, 4, 5, 6, or 7'
      if INSTR('1234567',$SortCode1,1) = 0
        display 'Enter 1, 2, 3, 4, 5, 6, or 7'
        move '' to $SortCode1
      end-if
    #else
        input $SortCode1 'Enter 1, 2, 3, 4, 5, or 6'
        if INSTR('123456',$SortCode1,1) = 0
          display 'Enter 1, 2, 3, 4, 5, or 6'
          move '' to $SortCode1
        end-if
    #end-if
    display ''
  end-while

  if $SortCode1 <> '1'
    display ' '
    display 'Select the As-Of Date for retrieving the sorted data.'
    do Get-As-Of-Date

    while $SortCode3 = ''
      display ''
      display 'Within previous sort, order by:'
      display ' (1) Employee ID'
      display ' (2) Employee SSN'
      display ' (3) Employee Last Name'
      display ''
      input $SortCode3 'Enter 1, 2, or 3'
      if INSTR('123',$SortCode3,1) = 0
        display 'Enter 1, 2, or 3'
        move '' to $SortCode3
      end-if
    end-while

    evaluate $SortCode3
      when = '1'               !ID
        evaluate $SortCode1
          when = '2'
            move 'ORDER BY E.COMPANY, E.W2_STATE, E.EMPLID' to $Sort2
          when = '3'
            move 'ORDER BY J.COMPANY, J.PAYGROUP, S.EMPLID' to $Sort1
          when = '4'
            move 'ORDER BY J.COMPANY, J.DEPTID, S.EMPLID' to $Sort1
          when = '5'
   !         move 'ORDER BY E.COMPANY, E.POSTAL, E.EMPLID' to $Sort2
          when = '6'
            move 'ORDER BY J.COMPANY, K.MAIL_DROP, S.EMPLID' to $Sort1
          when = '7'
            move 'ORDER BY E.COMPANY, E.W2_STATE, E.EMPLID' to $Sort2
        end-evaluate

      when = '2'               !SSN
        evaluate $SortCode1
          when = '2'
            move 'ORDER BY E.COMPANY, E.W2_STATE, E.SSN' to $Sort2
          when = '3'
            move 'ORDER BY J.COMPANY, J.PAYGROUP, S1.NATIONAL_ID' to $Sort1
          when = '4'
            move 'ORDER BY J.COMPANY, J.DEPTID, S1.NATIONAL_ID' to $Sort1
          when = '5'
            move 'ORDER BY E.COMPANY, E.POSTAL, E.SSN' to $Sort2
          when = '6'
            move 'ORDER BY J.COMPANY, K.MAIL_DROP, S1.NATIONAL_ID' to $Sort1
          when = '7'
            move 'ORDER BY E.COMPANY, E.W2_STATE, E.SSN' to $Sort2
        end-evaluate

      when = '3'               !Name
        evaluate $SortCode1
          when = '2'
            move 'ORDER BY E.COMPANY, E.W2_STATE, P.NAME, E.SSN' to $Sort2
          when = '3'
            move 'ORDER BY J.COMPANY, J.PAYGROUP, S.NAME, S1.NATIONAL_ID' to $Sort1
          when = '4'
            move 'ORDER BY J.COMPANY, J.DEPTID, S.NAME, S1.NATIONAL_ID' to $Sort1
          when = '5'
    !        move 'ORDER BY E.COMPANY, E.POSTAL, P.NAME, E.SSN' to $Sort2
          when = '6'
            move 'ORDER BY J.COMPANY, K.MAIL_DROP, S.NAME, S1.NATIONAL_ID' to $Sort1
          when = '7'
            move 'ORDER BY E.COMPANY, E.W2_STATE, P.NAME, E.SSN' to $Sort2
        end-evaluate
    end-evaluate
  else
    while $SortCode2 = ''
      display ''
      display 'Sort by:'
      display ' (1) Employee ID'
      display ' (2) Employee SSN'
      display ' (3) Employee Last Name'
      display ''
      input $SortCode2 'Enter 1, 2, or 3'
      if INSTR('123',$SortCode2,1) = 0
        display 'Enter 1, 2, or 3'
        move '' to $SortCode2
      end-if
    end-while

    evaluate $SortCode2
      when = '1'
        move 'ORDER BY E.EMPLID, E.SEQUENCE_NUMBER, E.COMPANY' to $Sort2
      when = '2'
        move 'ORDER BY E.SSN, E.SEQUENCE_NUMBER, E.COMPANY'    to $Sort2
      when = '3'
        move 'ORDER BY P.NAME, E.SSN, E.SEQUENCE_NUMBER, E.COMPANY' to $Sort2
    end-evaluate
  end-if
end-procedure

begin-procedure W2-Sort

  evaluate $SortCode1
    when = '3'
      move 'PayGroup: '     to $SortField
    when = '4'
      move 'Dept ID:  '     to $SortField
    when = '6'
      move 'Mail Drop:'     to $SortField
  end-evaluate
  move '' to $priorSortValue
begin-SELECT

J.COMPANY
J.PAYGROUP
J.DEPTID
S.EMPLID
S.NAME
S1.NATIONAL_ID
!S.POSTAL
K.MAIL_DROP
K.PRIM_PAYGROUP

  if &K.MAIL_DROP <> ' '
     move &K.Mail_Drop to $Mail_Drop_Hold
  else
     do GET-POSITION-NBR-FROM-JOB
  end-if

  move &S.Emplid to $Emplid

  evaluate $SortCode1
    when = '3'
      move &J.PayGroup      to $SortValue
    when = '4'
      move &J.DeptID        to $SortValue
    when = '6'
      move $Mail_Drop_Hold  to $SortValue
  end-evaluate
  if $SortValue <> $priorSortValue
    if $priorSortValue <> '' and $SortEmployeeFound = 'Y'
      NEW-PAGE
      move 'N' to $SortEmployeeFound
    end-if
    move $SortValue to $priorSortValue
  end-if

  let $E.SelectedEEs = 'AND E.EMPLID = ''' || &S.EMPLID || ''''

  do Read-Employee-Data

FROM  PS_NAMES S, PS_PERS_NID S1,
      PS_PAYROLL_DATA  K,
      PS_JOB           J
WHERE J.EMPLID            = S.EMPLID
  AND J.EFFDT =
      (SELECT MAX(JJ.EFFDT)
       FROM   PS_JOB        JJ,
              PS_W2_COMPANY W
       WHERE  JJ.EMPLID           = J.EMPLID
         AND  W.W2_REPORTING_CO   = &A.W2_REPORTING_CO
         AND  W.CALENDAR_YEAR     = &TX.BALANCE_YEAR
         AND  JJ.COMPANY          = W.COMPANY
         AND  JJ.EFFDT           <= $ASOFDATE)
  AND J.EMPL_RCD =
      (SELECT MAX(JJ1.EMPL_RCD)
       FROM   PS_JOB JJ1,
              PS_W2_COMPANY W1
       WHERE  JJ1.EMPLID          = J.EMPLID
         AND  W1.W2_REPORTING_CO  = &A.W2_REPORTING_CO
         AND  W1.CALENDAR_YEAR    = &TX.BALANCE_YEAR
         AND  JJ1.COMPANY         = W1.COMPANY
         AND  JJ1.EFFDT           = J.EFFDT)
  AND J.EFFSEQ =
      (SELECT MAX(JJJ.EFFSEQ)
       FROM   PS_JOB JJJ,
              PS_W2_COMPANY WW
       WHERE  JJJ.EMPLID          = J.EMPLID
         AND  JJJ.EMPL_RCD        = J.EMPL_RCD
         AND  WW.W2_REPORTING_CO  = &A.W2_REPORTING_CO
         AND  WW.CALENDAR_YEAR    = &TX.BALANCE_YEAR
         AND  JJJ.COMPANY         = WW.COMPANY
         AND  JJJ.EFFDT           = J.EFFDT)
  AND K.EMPLID                    = J.EMPLID
  AND K.COMPANY                   = J.COMPANY
  AND S.EMPLID                    = S1.EMPLID
  AND S.NAME_TYPE = 'PRI'
  AND S.EFFDT =
      (SELECT MAX(SX.EFFDT)
       FROM   PS_NAMES SX
       WHERE  SX.EMPLID    = S.EMPLID
         AND  SX.NAME_TYPE = S.NAME_TYPE
         AND  SX.EFFDT    <= $ASOFDATE)
  AND S1.COUNTRY                  = {NID_COUNTRY}
  AND S1.NATIONAL_ID_TYPE         = $Payroll_nid_type
[$S.SelectedEEs]
#ifdef TAX960US
  [$SelectedPrint2]
#end-if
[$Sort1]
end-select
end-procedure

begin-procedure GET-POSITION-NBR-FROM-JOB
begin-select
J1.POSITION_NBR

  if &J1.POSITION_NBR <> ' '
     do GET-MAIL-DROP-FROM-POSITION-DATA
  end-if

FROM PS_JOB J1
WHERE J1.EMPLID = $EMPLID
AND J1.PAYGROUP = &K.PRIM_PAYGROUP
AND J1.EFFDT =
      (SELECT MAX(JJOB.EFFDT)
       FROM   PS_JOB        JJOB
       WHERE  JJOB.EMPLID           = J1.EMPLID
         AND  JJOB.PAYGROUP         = J1.PAYGROUP)
  AND J1.EMPL_RCD =
      (SELECT MAX(JJOB1.EMPL_RCD)
       FROM   PS_JOB JJOB1
       WHERE  JJOB1.EMPLID          = J1.EMPLID
         AND  JJOB1.PAYGROUP        = J1.PAYGROUP
         AND  JJOB1.EFFDT           = J1.EFFDT)
  AND J1.EFFSEQ =
      (SELECT MAX(JJJOB.EFFSEQ)
       FROM   PS_JOB JJJOB
       WHERE  JJJOB.EMPLID          = J1.EMPLID
         AND  JJJOB.PAYGROUP        = J1.PAYGROUP
         AND  JJJOB.EMPL_RCD        = J1.EMPL_RCD
         AND  JJJOB.EFFDT           = J1.EFFDT)
end-select
end-procedure

begin-procedure GET-MAIL-DROP-FROM-POSITION-DATA
begin-SELECT
POSD.MAIL_DROP

   move &POSD.MAIL_DROP to $Mail_Drop_Hold

FROM PS_POSITION_DATA POSD
WHERE POSD.POSITION_NBR = &J1.POSITION_NBR
AND POSD.EFFDT = (SELECT MAX(POSD1.EFFDT)
                  FROM PS_POSITION_DATA POSD1
                  WHERE POSD1.POSITION_NBR = POSD.POSITION_NBR)
end-select
end-procedure
#include 'getasodt.sqc'     !Get-As-Of-Date procedure
