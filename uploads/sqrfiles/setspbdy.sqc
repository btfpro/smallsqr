! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
! SETSPBDY.SQC - The body of SETSPACE.SQR                              *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************

!----------------------------------------------------------------------
! Procedure: Get-Input
! Desc:      Get Input Parameters.
!            Get default tablespace
!----------------------------------------------------------------------

begin-procedure Get-Input
add 1 to #level

#IFDEF DebugF
  print 'FLOW:Get-Input'             (+1,#level)
#ENDIF

! Prompt for Input Variables.

!input $def_space 'Please enter a Default Tablespace \PTTBL\'
let    $def_space = upper($def_space)

!if isblank($def_space)
   let $def_space = 'PTTBL'
!end-if

!input $replacets 'Replace tablespace with default tablespace if table not found in database catalogs Y/(N)?'

!if $replacets = 'Y' or $replacets = 'y'
   let $replacets = 'N'
!end-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: Initialize                                                !
! Descr:     Perform initialization procedure.                         !
!----------------------------------------------------------------------!
begin-procedure Initialize

   do Init-DateTime
   do Init-Number
   do Get-Current-DateTime
   move {REPORTID} to $ReportID
#IFNDEF DB2
   move 'Set Table Space Name in PSRECTBLSPC' to $ReportTitle
#ELSE
   move 'Set Database and Table Space Names in PSRECTBLSPC' to $ReportTitle
#ENDIF

   move '' to $AuditDescr
   let #UpdCount = 0
   let #InsCount = 0
   let $RecName = ' '
   display $ReportTitle
   #include 'pthdg01.sqc'
#IFNDEF DB2
   Show ' '
   Show ' Table PSRECTBLSPC column DDLSPACENAME have been updated'
   Show ' with the tablespace found in the system catalog table.'
   Show ' Detailed below are those tables that were not updated because they have'
   Show ' not yet been created in the database.'
   Show ' The total number of records updated appears at the bottom of this report.'
   Show ' '
   Show 'Recname             Tablespace'
   Show '---------------     ----------------'
   Print ' Table PSRECTBLSPC column DDLSPACENAME have been updated' (+2,1)
   Print ' with the tablespace found in the system catalog table.'  (+1,1)
   Print ' Detailed below are those tables that were not updated because'  (+1,1)
   Print ' they have' (+0,64)
   Print ' not yet been created in the database.' (+1,1)
   Print ' The total number of records updated appears at the bottom' (+2,1)
   Print ' of this report.' (+0,60)
   Print 'Recname             Tablespace'  (+2,5)
   Print '---------------     ----------------' (+1,5)
#ELSE

   Show ' '
   Show ' Table PSRECTBLSPC columns DBNAME and DDLSPACENAME have been updated'
   Show ' with the tablespace and database name found in the system catalog table.'
   Show ' Detailed below are those tables that were not updated because they have'
   Show ' not yet been created in the database.'
   Show ' '
   Show ' The total number of records updated appears at the bottom of this report.'
   Show ' '
   Show 'Recname             DBName    TSName'
   Show '---------------     -------   ------'
   Print ' Table PSRECTBLSPC columns DBNAME and DDLSPACENAME have been updated' (+2,1)
   Print ' with the tablespace and database name found in the system' (+1,1)
   Print ' catalog table.' (+0,59)
   Print ' Detailed below are those tables that were not updated because'  (+1,1)
   Print ' they have' (+0,64)
   Print ' not yet been created in the database.' (+1,1)
   Print ' The total number of records updated appears at the bottom'  (+2,1)
   Print ' of this report.' (+0,59)
   Print 'Recname             DBName    TSName' (+2,5)
   Print '---------------     -------   ------' (+1,5)
#ENDIF



#IFDEF INFORMIX
   let $DBName= lower($USERNAME)
#ENDIF

end-procedure


!----------------------------------------------------------------------!
! Procedure: Report                                                    !
! Descr:     Perform main report procedure.                            !
!----------------------------------------------------------------------!
begin-procedure Report

! Used for version control and to allow re-cache only for records that
! have been updated

  !find out if db is unicode or not
  Do Get_Database_Type

begin-SQL on-error=SQL-Error
  UPDATE PSLOCK
 SET VERSION= VERSION+1
 WHERE OBJECTTYPENAME = 'RDM'
end-SQL

begin-SELECT on-error=SQL-Error
V.version &V.Version
   let #NewVersionrdm = &V.Version
FROM PSLOCK V
WHERE OBJECTTYPENAME = 'RDM'
end-SELECT

! Select Recnames from psrecdefn to query PSRECTBLSPC to obtain tablespace
! and database information to compare to database catalog.
! If either is different then update tablepace and database name in PSRECTBLSPC
! (rectype = 0 for tables and rectype = 7 for temp tables).


begin-SELECT on-error=SQL-Error
P.RecName       &P.RecName
P.SQLTableName  &P.SQLTableName

#IFDEF DB2
    if substr(&P.SQLTableName,1,1) > ' '
       let $RecName  = &P.SQLTableName
     else
       let $RecName  = 'PS_'|| substr(&P.RecName,1,15)
    end-if
   let $RecNameTrim = rtrim($RecName,' ')
#ELSE
#IFDEF DB2UNIX
    if substr(&P.SQLTableName,1,1) > ' '
       let $RecName  = &P.SQLTableName
     else
       let $Recname  = 'PS_'|| substr(&P.RecName,1,15)
    end-if
#ELSE
    if substr(&P.SQLTableName,1,1) > ' '
       let $RecName  = &P.SQLTableName
     else
       let $RecName  = 'PS_'|| substr(&P.RecName,1,15)
    end-if
#ENDIF
#ENDIF
       let $PSRecName = rtrim(&P.RecName,' ')
       let $RowinRectblspc = 'N'
       Do Select-PSRECTBLSPC

   if $RowinRectblspc = 'Y'
       let $RowinCatalog = 'N'
       Do  Read-Sys-Catalog
   else
       let $DisplayPSRecName = rpad($PSRecName,15,' ')
       show ' '
       show '**Warning**  Table ' $DisplayPSRecName ' not found in PSRECTBLSPC.'
       Print '**Warning**  Table ' (+2,5)
       Print $DisplayPSRecName (+0,25)
       Print ' not found in PSRECTBLSPC.' (+0,40)
   end-if
FROM PSRECDEFN   P
WHERE RECTYPE = 0 OR RECTYPE = 7
ORDER BY RECNAME

end-SELECT

begin-SQL on-error=SQL-Error
 UPDATE PSVERSION
 SET VERSION= VERSION+1
 WHERE OBJECTTYPENAME IN ('RDM','SYS')
end-SQL

end-procedure




!----------------------------------------------------------------------!
! Procedure: Select-PSRECTBLSPC                                        !
! Descr:     Get the tablespace name out of the PSRECTBLSPC table      !
!----------------------------------------------------------------------!
begin-procedure Select-PSRECTBLSPC

begin-SELECT on-error=SQL-Error
A.DDLSPACENAME  &A.DDlSpaceName
A.DBNAME       &A.DBName
A.DBTYPE       &A.DBType

#IFDEF DB2
    let $RecDDLSpaceName = &A.DDlSpaceName
    let $RecDBName  = &A.DBName
    let $RecDDLSpaceNameTrim = rtrim(&A.DDlSpaceName,' ')
    let $RecDBNameTrim  = rtrim(&A.DBName,' ')

#ELSE
    let $RecDDLSpaceName = &A.DDlSpaceName
    let $RecDDLSpaceNameTrim = rtrim(&A.DDlSpaceName,' ')
    let $RecDBName  = &A.DBName
    let $RecDBType     = &A.DBType
#ENDIF
    let $RowinRectblspc = 'Y'
    if substr(&A.DBType,1,1) > ' '
      let $RecDBType     = &A.DBType
    else
      let $RecDBType     = ' '
    end-if

FROM PSRECTBLSPC A
WHERE A.RecName = $PSRecName AND
A.DBTYPE = (SELECT Max(A1.DBTYPE) FROM PSRECTBLSPC A1
            WHERE A.RECNAME = A1.RECNAME AND
#IFDEF DB2
A1.DBType IN (' ','1'))
#ELSE
#IFDEF DB2UNIX
A1.DBType IN (' ','4'))
#ELSE
#IFDEF ORACLE
A1.DBType IN (' ','2'))
#ELSE
#IFDEF INFORMIX
A1.DBType IN (' ','3'))
#ENDIF
#ENDIF
#ENDIF
#ENDIF

end-SELECT

end-procedure

!----------------------------------------------------------------------!
! Procedure: Read-Sys-Catalog                                          !
! Descr:     Get the tablespace name out of the catalog.               !
!----------------------------------------------------------------------!
begin-procedure Read-Sys-Catalog

let $TSName =$def_space
#IFDEF DB2
begin-SELECT on-error=SQL-Error
C.TSNAME    &C.TSName
C.DBNAME    &C.DBName

    let $SysTSName = rtrim(&C.TSName,' ')
    let $SysDBName = rtrim(&C.DBName,' ')
    let $RowinCatalog = 'Y'

FROM SYSIBM.SYSTABLES C
WHERE NAME    =  $RecNameTrim
AND   CREATOR =  CURRENT SQLID
end-SELECT
    Do  Update-PSRECTBLSPC-FORDB2

#ENDIF

#IFDEF DB2UNIX

begin-SELECT on-error=SQL-Error
C.TBSPACE    &C.TSName

    let $TSName = &C.TSName
    let $RowinCatalog = 'Y'

FROM SYSIBM.SYSTABLES C
WHERE NAME = $RecName
AND   CREATOR =  CURRENT SQLID

end-SELECT

    Do  Update-PSRECTBLSPC

#ENDIF

#IFDEF ORACLE
begin-SELECT on-error=SQL-Error
O.Tablespace_Name   &O.TSName

    let $TSName = &O.TSName
    let $RowinCatalog = 'Y'

FROM USER_TABLES O
WHERE TABLE_NAME = $RecName
end-SELECT
    Do  Update-PSRECTBLSPC

#ENDIF

#IFDEF INFORMIX
let $RecName = lower($RecName)
begin-SELECT on-error=SQL-Error
T2.NAME             &T2.NAME

    let $TSName = &T2.NAME
    let $RowinCatalog = 'Y'

FROM 'informix'.SYSTABLES T1,
     SYSMASTER:'informix'.SYSDBSPACES T2
WHERE TRUNC((HEX(T1.PARTNUM)/1048576)) = T2.DBSNUM
AND T1.TABNAME = $RecName
! AND T1.DBSNAME=$DBName
AND T1.TABTYPE='T'
end-SELECT
    Do  Update-PSRECTBLSPC

#ENDIF

end-procedure


!----------------------------------------------------------------------!
! Procedure: Update-PSRECTBLSPC-FORDB2                                 !
! Descr:     Get the tablespace name out of the catalog.               !
!----------------------------------------------------------------------!
begin-procedure Update-PSRECTBLSPC-FORDB2


#IFDEF DebugX
 display 'ddlspacename in PSRECTBLSPC: ' noline
 display $RecDDLSpaceName
 display 'database name in PSRECTBLSPC: ' noline
 display $RecDBName
 display 'ddlspace name in SYSIBM.SYSTABLES: ' noline
 display $SysTSName
 display 'database name in SYSIBM.SYSTABLES: ' noline
 display $SysDBName
#ENDIF

if (($RowinCatalog = 'Y') and
      (($RecDDLSpaceNameTrim <> $SysTSName) OR ($RecDBNameTrim <> $SysDBName)) )

begin-SQL on-error=SQL-Error

  UPDATE PSRECTBLSPC   SET DDLSPACENAME = $SysTSName
                          ,DBNAME = $SysDBName
      WHERE RECNAME = $PSRecName
      AND DBTYPE = $RecDBType

end-SQL
    let $DisPlayRecName = rpad($RecName,15,' ')
    let $DisPlayDBName  = rpad($SysDBName,8,' ')
    let $DisPlayTSName  = rpad($SysTSName,8,' ')
    show $DisPlayRecname '  ' $DisPlayDBName '  ' $DisPlayTSName '  Row Updated'
    Print $DisPlayRecname (+1,5)
    Print $DisPlayDBName (+0,25)
    Print $DisPlayTSName (+0,35)
    Print '  Row Updated' (+0,43)
    add +1 to #UpdCount
else
if ($RowinCatalog = 'N')
    let $RowinCatalogTableSpace = 'N'
        Do Read-Sys-Catalog-TableSpace

        let $DisPlayRecName = rpad($RecName,15,' ')
        let $DisPlayDBName  = rpad($RecDBNameTrim,8,' ')
        let $DisPlayTsName  = rpad($RecDDLSpaceNameTrim,8,' ')

   if ($RowinCatalogTableSpace = 'N')
        show ' '
        show $DisPlayRecname '  '$DisPlayDBName '  ' $DisPlayTSName '  Table Undefined - DB/TS Invalid!!'
        Print $DisPlayRecname (+2,5)
        Print $DisPlayDBName (+0,25)
        Print $DisPlayTSName (+0,35)
        Print '  Table Undefined - DB/TS Invalid!!' (+0,43)
    else
        show $DisPlayRecname '  '$DisPlayDBName '  ' $DisPlayTSName '  Table Undefined - DB/TS OK.'
        Print $DisPlayRecname (+2,5)
        Print $DisPlayDBName (+0,25)
        Print $DisPlayTSName (+0,35)
        Print '  Table Undefined - DB/TS OK.' (+0,43)
    end-if
end-if
end-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: Read-Sys-Catalog-Tablespace                               !
! Descr:     Get the tablespace name out of the catalog.               !
!----------------------------------------------------------------------!
begin-procedure Read-Sys-Catalog-TableSpace

#IFDEF DB2
begin-SELECT on-error=SQL-Error
'XDB2'
    let $RowinCatalogTableSpace = 'Y'

FROM SYSIBM.SYSTABLESPACE B
WHERE B.NAME    =  $RecDDLSpaceNameTrim
AND   B.DBNAME = $RecDBNameTrim
end-SELECT
#ENDIF

#IFDEF DB2UNIX

begin-SELECT on-error=SQL-Error
'XDBX'
    let $RowinCatalogTableSpace = 'Y'

FROM SYSIBM.SYSTABLESPACES B
WHERE B.TBSPACE = $RecDDLSpaceNameTrim
end-SELECT
#ENDIF

#IFDEF ORACLE
begin-SELECT on-error=SQL-Error
'XORA'
    let $RowinCatalogTableSpace = 'Y'

FROM USER_TABLESPACES B
WHERE B.TABLESPACE_NAME =  $RecDDLSpaceName
end-SELECT
#ENDIF

#IFDEF INFORMIX
let $RecDDLSpaceName = lower($RecDDLSpaceName)
begin-SELECT on-error=SQL-Error
'XINF'
    let $RowinCatalogTableSpace = 'Y'

FROM sysmaster:'informix'.SYSDBSPACES B
WHERE B.NAME =  $RecDDLSpaceName
end-SELECT
#ENDIF

end-procedure



!----------------------------------------------------------------------!
! Procedure: Update-PSRECTBLSPC                                        !
! Descr:     Get the tablespace name out of the catalog.               !
!----------------------------------------------------------------------!
begin-procedure Update-PSRECTBLSPC

    if $TSName = ''
        let $TSName =$def_space
    end-if
#IFDEF INFORMIX
        let $ddlspacename = lower(rtrim($RecDDLSpaceName,' '))
#ELSE
        let $ddlspacename = rtrim($RecDDLSpaceName,' ')
#ENDIF
        let $TSNameTrim = rtrim($TSName,' ')


#IFDEF DebugX
 display 'ddlspacename in psrecdefn: ' noline
 display $ddlspacename
 display 'ddlspace name in system catalog: ' noline
 display $TSName
#ENDIF

if (($ddlspacename <> $TSNameTrim) and ($RowinCatalog = 'Y'))

begin-SQL on-error=SQL-Error


 UPDATE PSRECTBLSPC   SET DDLSPACENAME = $TSName, DBNAME = ' '
      WHERE RECNAME = $PSRecName AND DBTYPE = $RecDBType

 end-SQL
    let $DisPlayRecName = rpad(&P.Recname,15,' ')
    let $DisPlayTsName  = rpad($TSName,16,' ')
    let $DisPlayDDL     = $ddlspacename
    show $DisPlayRecname '     ' $DisPlayTSName '  Row Updated'
    Print  $DisPlayRecname (+1,5)
    Print  $DisPlayTSName  (+0,25)
    Print  'Row Updated'   (+0,45)
    add +1 to #UpdCount
else
if ($RowinCatalog = 'N')
    let $RowinCatalogTableSpace = 'N'
        Do Read-Sys-Catalog-Tablespace

        let $DisPlayRecName = rpad(&P.Recname,15,' ')
        let $DisPlayDDL     = $ddlspacename

   if ($RowinCatalogTableSpace = 'N')
        show ' '
        show $DisPlayRecname '     '$DisPlayDDL '  **Table Undefined - ' noline
        show 'Tablespace Invalid!!'
        Print $DisPlayRecname (+1,5)
        Print $DisPlayDDL (+0,25)
        Print 'Table Undefined - Tablespace Invalid!!' (+0,45)
    else
        show $DisplayRecname '     '$DisPlayDDL '  Table Undefined - ' noline
        show 'Tablespace OK.'
        Print $DisPlayRecname (+1,5)
        Print $DisplayDDL     (+0,25)
        Print 'Table Undefined - Tablespace OK.' (+0,45)
    end-if
end-if
end-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: Update-PStblspccat                                     !
! Descr:     Perform Insert/Update on Table PSTBLSPCCAT to keep values !
!            in synch with PSRECTBLSPC and System Catalog              !
!            This procedure will only be invoked for DB2/OS390         !
!----------------------------------------------------------------------!
begin-procedure Update-PStblspccat

#IFDEF DB2
   Show ' '
   Show ' '
   Show ' This phase of SETSPACE will sync up the PSRECTBLSPC and'
   Show ' PSTBLSPCCAT tables with valid DB/TS combinations from the'
   Show ' SYSIBM.SYSTABLESPACE table.'
   Show ' '
   Show 'DatabaseName     TablespaceName'
   Show '------------     --------------'
   Print ' This phase of SETSPACE will sync up the PSRECTBLSPC and' (+4,1)
   Print ' PSTBLSPCCAT tables with valid DB/TS combinations from the' (+1,1)
   Print ' SYSIBM.SYSTABLESPACE table.' (+1,1)
   Print 'DatabaseName     TablespaceName' (+2,5)
   Print '------------     --------------' (+1,5)
#ELSE
   Show ' '
   Show ' '
   Show ' This phase of SETSPACE will sync up the PSRECTBLSPC and'
   Show ' PSTBLSPCCAT tables with valid Tablespace combinations'
   Show ' from the database system catalog table.'
   Show ' '
   Show 'Tablespace'
   Show '----------------'
   Print ' This phase of SETSPACE will sync up the PSRECTBLSPC and' (+4,1)
   Print ' PSTBLSPCCAT tables with valid Tablespace combinations' (+1,1)
   Print ' from the database system catalog table.' (+1,1)
   Print 'Tablespace' (+2,5)
   Print '----------------' (+1,5)
#ENDIF

#IFDEF DB2
begin-SELECT DISTINCT on-error=SQL-Error
R1.DDLSPACENAME        &R1.DDLSPACENAME
R1.DBNAME              &R1.DBNAME

    let $P2DDLSpaceName     = &R1.DDLSPACENAME
    let $P2DDLSpaceNameTrim = rtrim(&R1.DDLSPACENAME,' ')
    let $P2DBName           = &R1.DBNAME
    let $P2DBNameTrim       = rtrim(&R1.DBNAME,' ')
    let $RowInSystablespace = 'N'
    do Find-Row-In-Systablespace
    if $RowInSystablespace = 'Y'
      let $RowInPSTBLSPCCAT = 'N'
      do Find-Row-In-PSTBLSPCCAT
    if $RowInPSTBLSPCCAT ='N'
      do Insert-Row-In-PSTBLSPCCAT
    end-if
    end-if

    do Report-Phase2-Results

FROM PSRECTBLSPC R1
WHERE R1.TEMPTBLINST = 'N'
AND   R1.DBTYPE = (Select Max(R11.DBTYPE) FROM PSRECTBLSPC R11
                   WHERE R1.RECNAME = R11.RECNAME AND R11.DBTYPE IN (' ','1'))
ORDER BY R1.DDLSPACENAME,R1.DBNAME

end-SELECT
#ELSE

begin-SELECT DISTINCT on-error=SQL-Error
R2.DDLSPACENAME        &R2.DDLSPACENAME

    let $P2DDLSpaceName     = &R2.DDLSPACENAME
    let $P2DDLSpaceNameTrim = rtrim(&R2.DDLSPACENAME,' ')
    let $RowInSystablespace = 'N'
    do Find-Row-In-Systablespace
    if $RowInSystablespace = 'Y'
      let $RowInPSTBLSPCCAT = 'N'
      do Find-Row-In-PSTBLSPCCAT
    if $RowInPSTBLSPCCAT ='N'
      do Insert-Row-In-PSTBLSPCCAT
    end-if
    end-if

    do Report-Phase2-Results

FROM PSRECTBLSPC R2
WHERE R2.TEMPTBLINST = 'N'
AND   R2.DBTYPE = (Select Max(R21.DBTYPE) FROM PSRECTBLSPC R21
                   WHERE R2.RECNAME = R21.RECNAME AND
#IFDEF DB2
R21.DBTYPE IN (' ','1'))
#ELSE
#IFDEF DB2UNIX
R21.DBTYPE IN (' ','4'))
#ELSE
#IFDEF ORACLE
R21.DBTYPE IN (' ','2'))
#ELSE
#IFDEF INFORMIX
R21.DBTYPE IN (' ','3'))
#ENDIF
#ENDIF
#ENDIF
#ENDIF

ORDER BY R2.DDLSPACENAME

end-SELECT

#ENDIF

end-procedure


!----------------------------------------------------------------------!
! Procedure: Find-Row-In-Systablespace                                 !
! Descr:     Look for matching row in RDBMS tablespace system catalog  !
!----------------------------------------------------------------------!
begin-procedure Find-Row-In-Systablespace

#IFDEF DB2
begin-SELECT on-error=SQL-Error
'X2DB2'
    let $RowInSystablespace = 'Y'

FROM SYSIBM.SYSTABLESPACE R2
WHERE R2.NAME = $P2DDLSpaceNameTrim
AND   R2.DBNAME = $P2DBNameTrim

end-SELECT
#ENDIF

#IFDEF DB2UNIX

begin-SELECT on-error=SQL-Error
'X2DBX'
    let $RowInSystablespace = 'Y'

FROM SYSIBM.SYSTABLESPACES R2
WHERE R2.TBSPACE = $P2DDLSpaceNameTrim

end-SELECT
#ENDIF

#IFDEF ORACLE
begin-SELECT on-error=SQL-Error
'X2ORA'
    let $RowInSystablespace = 'Y'

FROM USER_TABLESPACES R2
WHERE R2.TABLESPACE_NAME = $P2DDLSpaceName

end-SELECT
#ENDIF

#IFDEF INFORMIX
let $P2DDLSpaceName = lower($P2DDLSpaceName)
begin-SELECT on-error=SQL-Error
'X2INF'
    let $RowInSystablespace = 'Y'

FROM sysmaster:'informix'.SYSDBSPACES R2
WHERE R2.NAME = $P2DDLSpaceName

end-SELECT
#ENDIF

end-procedure


!----------------------------------------------------------------------!
! Procedure: Find-Row-In-PSTBLSPCCAT                                   !
! Descr:     Look for matching row in PSTBLSPCCAT                      !
!----------------------------------------------------------------------!
begin-procedure Find-Row-In-PSTBLSPCCAT

#IFDEF DB2
begin-SELECT on-error=SQL-Error
'X3DB2'
     let $RowInPSTBLSPCCAT = 'Y'

FROM PSTBLSPCCAT R3
WHERE R3.DDLSPACENAME = $P2DDLSpaceNameTrim
AND   R3.DBNAME = $P2DBNameTrim

end-SELECT
#ELSE
begin-SELECT DISTINCT on-error=SQL-Error
'X3OTH'
     let $RowInPSTBLSPCCAT = 'Y'

FROM PSTBLSPCCAT R3
WHERE R3.DDLSPACENAME = $P2DDLSpaceNameTrim

end-SELECT

#ENDIF

end-procedure

!----------------------------------------------------------------------!
! Procedure: Insert-Row-In-PSTBLSPCCAT                                 !
! Descr:     Insert New Row into PSTBLSPCCAT                           !
!----------------------------------------------------------------------!
begin-procedure Insert-Row-In-PSTBLSPCCAT

#IFDEF DB2
begin-SQL on-error=SQL-Error
INSERT INTO PSTBLSPCCAT (DDLSPACENAME
                         ,DBNAME
                         ,TSTYPE
                         ,DBXTSTYPE
                         ,COMMENTS)
VALUES ($P2DDLSpaceNameTrim
       ,$P2DBNameTrim
       ,'R'
       ,'DMS'
       ,NULL)

end-SQL
#ELSE
begin-SQL on-error=SQL-Error
INSERT INTO PSTBLSPCCAT (DDLSPACENAME
                         ,DBNAME
                         ,TSTYPE
                         ,DBXTSTYPE
                         ,COMMENTS)
VALUES ($P2DDLSpaceNameTrim
       ,' '
       ,'R'
       ,'DMS'
       ,NULL)

end-SQL
#ENDIF

add +1 to #InsCount

end-procedure

!----------------------------------------------------------------------!
! Procedure: Report-Phase2-Results                                     !
! Descr:     Report DB/TS combinations not found in SYSTABLESPACES     !
!            and rows inserted into PSTBLSPCCAT                        !
!----------------------------------------------------------------------!
begin-procedure Report-Phase2-Results

#IFDEF DB2
let $DisplayP2DBName = rpad($P2DBNameTrim,8,' ')
let $DisplayP2TSName = rpad($P2DDLSpaceNameTrim,8,' ')

if $RowInSystablespace = 'N'
 show ' '
 show '**Warning** ' $DisplayP2DBName '.' $DisplayP2TSName 'is ' noline
 show    'not defined in SYSTABLESPACE.'
 Print '**Warning** ' (+2,2)
 Print $DisplayP2DBName (+0,15)
 Print '.'  (+0,23)
 Print $DisplayP2TSName (+0,24)
 Print 'is not defined in SYSTABLESPACE.' (+0,34)
else
  if $RowInPSTBLSPCCAT = 'N'
 show $DisplayP2DBname '         ' $DisplayP2TSName ' DB/TS combination' noline
 show ' inserted into PSTBLSPCCAT.'
 Print $DisplayP2DBname  (+1,5)
 Print $DisplayP2TSName (+0,22)
 Print 'DB/TS combination inserted into PSTBLSPCCAT.' (+0,33)
  end-if
end-if
#ELSE
let $DisplayP2TSName = rpad($P2DDLSpaceNameTrim,16,' ')

if $RowInSystablespace = 'N'
 show ' '
 show '**Warning** ' $DisplayP2TSName 'is ' noline
 show    'not defined in the system catalog.'
 Print '**Warning** ' (+2,2)
 Print $DisplayP2TSName (+0,15)
 Print 'is not defined in the system catalog.' (+0,32)
else
  if $RowInPSTBLSPCCAT = 'N'
 show $DisplayP2TSname '   Tablespace' noline
 show ' inserted into PSTBLSPCCAT.'
 Print $DisplayP2TSName  (+1,5)
 Print 'Tablespace inserted into PSTBLSPCCAT.' (+0,24)
  end-if
end-if
#ENDIF

end-procedure

!----------------------------------------------------------------------!
! Procedure: Terminate                                                 !
! Descr:     Perform termination procedure.                            !
!----------------------------------------------------------------------!
begin-procedure Terminate

   Show ' '
   Show 'PSRECTBLSPC Records Updated: '  #UpdCount edit 99999
   Show ' '
   Show 'PSTBLSPCCAT Records Inserted: ' #InsCount edit 99999
   Show ' '
   Show ' '
   Print 'PSRECTBLSPC Records Updated: ' (+3,5)
   Print #UpdCount (+0,37) edit 99999
   Print 'PSTBLSPCCAT Records Inserted: ' (+2,5)
   Print #InsCount (+0,37) edit 99999

   Show 'Ending SQR.'
   Print 'End of Report.' (+3,5)

   do Commit-Transaction

end-procedure
