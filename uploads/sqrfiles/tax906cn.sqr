!***********************************************************************
!  TAX906CN:  Nunavut Payroll Tax Annual Report                        *
!                                                                      *
!             Annual report to the Nunavut provincial government.      *
!                                                                      *
!             Total remuneration is set to True T4 Total Gross YTD.    *
!                                                                      *
!             Employees whose Canadian tax data record effective as    *
!             of the end of the report year has the PAYROLL_TAX_EXEMPT *
!             field set to 'Y' will not be included, even if their     *
!             tax balance records show a non-zero PAYROLL_TAX_YTD      *
!             or PAYROLL_TXGRS_YTD.                                    *
!                                                                      *
!             The report prompts for the payroll tax registration      *
!             number for each company as it is processed.              *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2010, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2010/11/02:12:50:34                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  813289                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'  !Set environment
#include 'setup31.sqc' !Printer and page-size initialization
#include 'canrpt.sqc'  !Get Canadian-specific variables

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  do Stdapi-Init
  move 'TAX906CN' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  move $Tax906cn_Title_Annual_tax to $ReportTitle
  display $ReportTitle

  do Init-DateTime
  do Init-Number
  do Get-Calendar-Year-Id
  do Initialize

end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from TAX906CN  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('TAX906CN', 'TITLE_ANNUAL_TAX'   , $Tax906cn_Title_Annual_tax , #dummy_width)
   do Get_Field_Information ('TAX906CN', 'REG_NUMBER'         , $Tax906cn_Reg_number       , #dummy_width)
   do Get_Field_Information ('TAX906CN', 'EMPLOYEE'           , $Tax906cn_Employee         , #dummy_width)
   do Get_Field_Information ('TAX906CN', 'TOTAL'              , $Tax906cn_Total            , #dummy_width)
   do Get_Field_Information ('TAX906CN', 'TAXABLE'            , $Tax906cn_Taxable          , #dummy_width)
   do Get_Field_Information ('TAX906CN', 'TAX'                , $Tax906cn_Tax              , #dummy_width)
   do Get_Field_Information ('TAX906CN', 'NAME'               , $Tax906cn_Name             , #dummy_width)
   do Get_Field_Information ('TAX906CN', 'SIN'                , $Tax906cn_Sin              , #dummy_width)
   do Get_Field_Information ('TAX906CN', 'REMUNERATION'       , $Tax906cn_Remuneration     , #dummy_width)
   do Get_Field_Information ('TAX906CN', 'WITHHELD'           , $Tax906cn_Withheld         , #dummy_width)
   do Get_Field_Information ('TAX906CN', 'COMP_TOTAL'         , $Tax906cn_Comp_total       , #dummy_width)


end-procedure


begin-heading 7
  #Include 'stdhtr02.sqc'
  print $Calendar_Year        () center
  print $Tax906cn_Reg_number  (+1,1)
  print $RegistrationNumber   ()
  print $Tax906cn_Employee    (+2,1,30)
  print '              '      (0,+3,11)
  print $Tax906cn_Total       (0,+3,14)
  print $Tax906cn_Taxable     (0,+3,14)
  print $Tax906cn_Tax         (0,+3,14)

  print $Tax906cn_Name        (+1,1,30)
  print $Tax906cn_Sin         (0,+3,11)
  print $Tax906cn_Remuneration  (0,+3,14)
  print $Tax906cn_Remuneration  (0,+3,14)
  print $Tax906cn_Withheld    (0,+3,14)
end-heading

begin-procedure Initialize
  move 'N' to $Employees_Found


  if $PRCS_Process_Instance = ''
     input $Calendar_Year 'Enter Year, e.g. 1990'
  else
     do Select-Canadian-YrEnd-Parameters
     do Convert-Parameters
  end-if



  move  $Calendar_Year to #Calendar_Year
  move $Calendar_Year to $FromDate
  concat '-01-01' with   $FromDate
  move '-' to $DDelimiter
  move '1' to $DDLZero
  move '0' to $MMLZero
  move '1' to $Year4
  do Format-DateTime($FromDate, $FromDate, {DEFYMD}, '', 'NATIVE')
  move $Calendar_Year to $AsOfDate
  concat '-12-31' with   $AsOfDate
  move '-' to $DDelimiter
  move '1' to $DDLZero
  move '0' to $MMLZero
  move '1' to $Year4
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFYMD}, '', 'NATIVE')
  do Get-Current-DateTime
end-procedure

begin-procedure Process-Main


begin-SELECT
B.COMPANY                () on-break level=1 print=never before=Before-Company
                                     PRINT=NEVER AFTER=AFTER-COMPANY
P.NAME
P1.NATIONAL_ID           () on-break level=2 print=never before=Before-SIN
                                     PRINT=NEVER AFTER=AFTER-SIN
B.EMPLID
B.PROVINCE
B.TXGRS_YTD
B.TAX_YTD
B.BALANCE_YEAR
B.BALANCE_PERIOD
B.WAGE_LOSS_PLAN
B.BALANCE_ID
B.TAX_CLASS_CAN

  if ((rtrim(&B.Province, ' ') = 'NN') or
      (rtrim(&B.Province, ' ') = 'NU')) and
     rtrim(&B.TAX_CLASS_CAN, ' ') = 'PYT'
     add &B.TxGrs_YTD to #Payroll_TxGrs_YTD
     add &B.Tax_YTD   to #Payroll_Tax_YTD
  end-if

  do Get-TT4

FROM  PS_CAN_TAX_BALANCE B, PS_CAN_TAX_DATA C, PS_NAMES P, PS_PERS_NID P1
WHERE B.BALANCE_YEAR      = #Calendar_Year
  AND B.BALANCE_ID        = $Calendar_Year_Id
  AND B.TAX_CLASS_CAN     IN ('PYT', 'TT4')
  AND P.EMPLID            = P1.EMPLID
  AND P.NAME_TYPE = 'PRI'
  AND P.EFFDT =
      (SELECT MAX(PX.EFFDT)
       FROM   PS_NAMES PX
       WHERE  PX.EMPLID    = P.EMPLID
         AND  PX.NAME_TYPE = P.NAME_TYPE
         AND  PX.EFFDT    <= $AsOfDate)
  AND P1.COUNTRY          = {NID_COUNTRY}
  AND P1.NATIONAL_ID_TYPE = $PAYROLL_NID_TYPE
  AND B.BALANCE_PERIOD    =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_CAN_TAX_BALANCE
       WHERE  EMPLID        = B.EMPLID
         AND  COMPANY       = B.COMPANY
         AND  BALANCE_YEAR  = B.BALANCE_YEAR
         AND  BALANCE_ID    = B.BALANCE_ID
         AND  WAGE_LOSS_PLAN = B.WAGE_LOSS_PLAN
         AND  PROVINCE = B.PROVINCE
         AND  TAX_CLASS_CAN = B.TAX_CLASS_CAN)
  AND EXISTS
      (SELECT 'X'
       FROM   PS_CAN_TAX_BALANCE
       WHERE  EMPLID        = B.EMPLID
         AND  COMPANY       = B.COMPANY
         AND  BALANCE_YEAR  = B.BALANCE_YEAR
         AND  BALANCE_ID    = B.BALANCE_ID
         AND  TAX_CLASS_CAN = B.TAX_CLASS_CAN
         AND  PROVINCE      IN ('NN','NU'))
  AND C.COMPANY             = B.COMPANY
  AND C.EMPLID              = B.EMPLID
  AND C.PAYROLL_TAX_EXEMPT  = 'N'
  AND C.EFFDT               =
    (SELECT MAX(EFFDT)
    FROM PS_CAN_TAX_DATA
    WHERE COMPANY    = C.COMPANY
      AND EMPLID     = C.EMPLID
      AND EFFDT     <= $AsOfDate)
  AND C.EMPLID       = P.EMPLID
ORDER BY B.COMPANY, P.NAME, P1.NATIONAL_ID
end-SELECT
end-procedure

begin-procedure Get-TT4
begin-SELECT
B1.TXGRS_YTD

  add &B1.TxGrs_YTD to #True_T4_TxGrs_YTD

FROM PS_CAN_TAX_BALANCE B1
WHERE B1.EMPLID            = &B.EMPLID
  AND B1.COMPANY           = &B.COMPANY
  AND B1.BALANCE_ID        = &B.BALANCE_ID
  AND B1.BALANCE_YEAR      = &B.BALANCE_YEAR
  AND B1.BALANCE_PERIOD    = &B.BALANCE_PERIOD
  AND B1.PROVINCE          = &B.PROVINCE
  AND B1.WAGE_LOSS_PLAN    = &B.WAGE_LOSS_PLAN
  AND B1.TAX_CLASS_CAN     = &B.TAX_CLASS_CAN
  AND B1.TAX_CLASS_CAN     = 'TT4'
end-SELECT
end-procedure

begin-procedure Before-SIN
  move &P.Name          to $P.Name
  move &P1.NATIONAL_ID  to $P.SIN
end-procedure

begin-procedure After-SIN
  add #True_T4_TxGrs_YTD to #Co_True_T4_TxGrs_YTD
  add #Payroll_TxGrs_YTD to #Co_Payroll_TxGrs_YTD
  add #Payroll_Tax_YTD   to #Co_Payroll_Tax_YTD

  print $P.Name               (+1,1,30)
  print $P.SIN                (0,+3,11) edit xxx-xxx-xxx
  do Format-Number(#True_T4_TxGrs_YTD, $out, '999,999,999.99')
  print $out                  (0,+3,14)
  do Format-Number(#Payroll_TxGrs_YTD, $out, '999,999,999.99')
  print $out                  (0,+3,14)
  do Format-Number(#Payroll_Tax_YTD, $out, '999,999,999.999')
  print $out                  (0,+3,14)

  move 0 to #True_T4_TxGrs_YTD
  move 0 to #Payroll_TxGrs_YTD
  move 0 to #Payroll_Tax_YTD
end-procedure

begin-procedure Before-Company
  move &B.Company to $Company


  if $PRCS_Process_Instance = ''
     do Prompt
  else
     do Company-Run-Control
  end-if

end-procedure

begin-procedure After-Company
  print $Tax906cn_Comp_total      (+2,1,30)
  print ' '                       (0,+3,11)
  do Format-Number(#Co_True_T4_TxGrs_YTD, $out, '999,999,999.99')
  print $out                      (0,+3,+14)
  do Format-Number(#Co_Payroll_TxGrs_YTD, $out, '999,999,999.99')
  print $out                      (0,+3,14)
  do Format-Number(#Co_Payroll_Tax_YTD,  $out, '999,999,999.99')
  print $out                      (0,+3,14)

  move 0 to #Co_True_T4_TxGrs_YTD
  move 0 to #Co_Payroll_TxGrs_YTD
  move 0 to #Co_Payroll_Tax_YTD

  new-page
end-procedure

begin-procedure Prompt
  display ' '
  display 'Processing company ' noline
  display $Company
  input $RegistrationNumber 'Enter Payroll Tax Registration Number'
end-procedure



begin-procedure Convert-Parameters

  move #RC_CAN_YE.Calendar_Year    to $Calendar_Year 9999

end-procedure


begin-procedure Company-Run-Control
begin-select
CN.PR_TAX_REGIST_NBR
FROM PS_RC_TAX905CN CN
WHERE CN.OPRID = $Prcs_OprID
  AND CN.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
  AND CN.COMPANY = $Company
end-SELECT

  move &CN.PR_Tax_Regist_Nbr to  $RegistrationNumber

end-procedure


#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'ctxrctl1.sqc'  !Canadian Year End Process Scheduler Run Controls
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
