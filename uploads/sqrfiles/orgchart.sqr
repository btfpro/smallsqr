!***********************************************************************
!  ORGCHART:  Creates Output File for Org Chart Software               *
!***********************************************************************

!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2006/07/19:14:19:13                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
#include 'orgsetup.sqc'  !Set up ORG parameters
#include 'setup07.sqc'   !Setup database environment

!************************
! REPORT SECTION ********
!************************
begin-REPORT

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
!  do Run-Orgchart
  do Reset
  do Stdapi-Term

end-REPORT

!************************
! INIT-REPORT SECTION ***
!************************
begin-procedure Init-Report

move 'ORGCHART' to $ReportID
move 'Create OrgChart Output file' to $ReportTitle
display $ReportTitle
do Stdapi-Init

!Values from Online Screen (TREE_NAME, TREE_NODE, LEVELS, ORG_RPT_TYPE, DEPTID):

Begin-Select
FORMAT_DEFAULT,
TREE_NAME,
TREE_NODE,
LEVELS,
ORG_RPT_TYPE,
DEPTID,
SETID
FROM PS_RUN_CNTL_ORGCH
WHERE RUN_CNTL_ID = $prcs_run_cntl_id AND
      OPRID = $prcs_oprid
End-select

  Let $si = RTRIM(&SETID, ' ')
  Let $format_default = rtrim(&FORMAT_DEFAULT,' ')
  Let $tree_name = rtrim(&TREE_NAME,' ')
  Let $tree_node = rtrim(&TREE_NODE,' ')
  Let #levels = &LEVELS
  Let $org_rpt_type = rtrim(&ORG_RPT_TYPE,' ')
  Let $deptid = rtrim(&DEPTID,' ')

  if $si = ''
    Let $si=' '
  end-if

end-procedure Init-Report

!************************
! PROCESS-MAIN SECTION **
!************************
begin-procedure Process-Main

! org_rpt_type is either 'T'ree or 'D'epartment
  Evaluate $org_rpt_type
    when = 'T'
      do Get-Tree-Info
      do Open-OrgChart-file
      do Write-Tree-First-Row
      do Write-Tree-Remaining-Rows
      do Close-OrgChart-file
     break
    when = 'D'
      do Open-OrgChart-file
      do Write-Dept-First-Row ($deptid)
      do Write-Dept-Remaining-Rows ($deptid)
      do Close-OrgChart-file
      break
    when-other
      display 'Invalid ORG_RPT_TYPE in parameters'
      break
  end-Evaluate

end-procedure Process-Main

!**************************
! GET-TREE-INFO SECTION ***
!**************************
begin-procedure Get-Tree-Info

!  Get Tree TREE_STRCT_ID, TREE_RECNAME, TREE_FIELDNAME, TREE_LEVEL_NUM
!           TREE_NODE_NUM and TREE_NODE_NUM_END

Begin-Select
A1.TREE_LEVEL_NUM,
A1.TREE_NODE_NUM,
A1.TREE_NODE_NUM_END,
B1.TREE_NAME,
B1.TREE_STRCT_ID,
C1.NODE_RECNAME,
C1.NODE_FIELDNAME
 FROM PSTREENODE A1,
      PSTREEDEFN B1,
      PSTREESTRCT C1
 WHERE A1.SETID = $si AND
       A1.TREE_NAME = $tree_name AND
       A1.TREE_NODE = $tree_node AND
       A1.EFFDT     = (SELECT MAX(D1.EFFDT)
                     FROM PSTREENODE D1
                     WHERE D1.SETID = $si AND
                            D1.TREE_NAME = $tree_name AND
                            D1.TREE_NODE = $tree_node AND
                            D1.EFFDT <= $AsOfToday) AND
       B1.TREE_NAME = $tree_name
       AND B1.SETID = $si AND
       B1.EFFDT = (SELECT MAX(E1.EFFDT)
                  FROM PSTREEDEFN E1
                  WHERE E1.TREE_NAME = $tree_name
                        AND E1.SETID = $si AND
                        E1.EFFDT <= $AsOfToday) AND
      C1.TREE_STRCT_ID = B1.TREE_STRCT_ID
End-select

Let #tree_level_num = &A1.TREE_LEVEL_NUM
Let #tree_min = #tree_level_num + 1
Let #tree_max = #tree_level_num + #levels - 1
Let $node_recname = rtrim(&C1.NODE_RECNAME,' ')
Let $node_fieldname = rtrim(&C1.NODE_FIELDNAME,' ')
Let $tree_strct_id = rtrim(&B1.TREE_STRCT_ID,' ')
Let #tree_node_num = &A1.TREE_NODE_NUM
Let #tree_node_num_end = &A1.TREE_NODE_NUM_END

end-procedure Get-Tree-Info

!****************************
! OPEN-OrgChart-FILE SECTION ***
!****************************
begin-procedure Open-OrgChart-file

! display ' '
! display 'Orgchart version: ' noline
! display '{ORGVERSION}'
! display 'Orgchart root: ' noline
! display '{ORGROOT}'
! display 'Location of wizard: ' noline
! display '{ORGWIZARD}'
! display 'Wizard command line parameters: ' noline
! display '{ORGWIZARDFLAGS}'
! display 'Output file location: ' noline
! display '{FILEPREFIX}{FILEOUT}{FILESUFFIX}'
! display 'Output columns in file: ' noline
! display '{ORGCOLUMNS}'

! move '{ORGROOT}{ORGWIZARD}' to $fileVerify


! let #check = exists($fileVerify)
! if #check <> 0
!   display ' '
!   display 'There is an error in the OrgSetup.sqc, verify settings'
!   display ' '
!   display 'The ORGCHART.SQC requires configuration for this environment to launch'
!   display 'the Organizational Charting software.  Please edit the ORGCHART.SQC'
!   display 'located in the SQR directory.  You will need to establish the version'
!   display 'and location of the installation.'
!   display ' '
!  stop
! end-if


 open '{FILEPREFIX}{FILEOUT}{FILESUFFIX}' as 10 for-writing record=120:fixed

 move '{ORGCOLUMNS}' to $outline0
 write 10 from $outline0:120

end-procedure Open-OrgChart-file

!*********************************
! WRITE-TREE-FIRST-ROW SECTION ***
!*********************************
begin-procedure Write-Tree-First-Row

Evaluate $node_recname
    when = 'DEPT_TBL'
      do Write-Dept-First-Row ($tree_node)
      break
    when = 'POSITION_DATA'
      do Write-Pos-First ($tree_node)
      break
    when-other
      break
end-Evaluate

end-procedure Write-Tree-First-Row

!****************************
! WRITE-POS-FIRST SECTION ***
!****************************
begin-procedure Write-Pos-First ($position_nbr)

 do Get-Pos-Data ($position_nbr, $posn_descr, $posn_name, $posn_dept, $phone)

 string $position_nbr $posn_name '' $posn_descr $posn_dept $phone by ',' into $outline1

 write 10 from $outline1:120

end-procedure Write-Pos-First

!*************************
! GET-POS-DATA SECTION ***
!*************************
begin-procedure Get-Pos-Data ($position_nbr, :$posn_descr, :$posn_name, :$posn_dept, :$phone)

Begin-Select
X1.POSITION_NBR,
X1.DESCR,
Y1.EMPLID,
Y1.POSITION_NBR
Z1.EMPLID
Y1.DEPTID
Y1.SETID_DEPT

 FROM PS_POSITION_DATA X1,
      PS_JOB Y1,
      PS_PERSON Z1
 WHERE X1.POSITION_NBR = $position_nbr AND
       X1.EFFDT = (SELECT MAX(AA.EFFDT)
                   FROM PS_POSITION_DATA AA
                   WHERE AA.POSITION_NBR = $position_nbr AND
                         AA.EFFDT <= $_AsOfToday) AND
       Y1.POSITION_NBR = $position_nbr AND
       Y1.EMPL_STATUS IN ('A','P','L','W') AND
       Y1.EFFDT = (SELECT MAX(BB.EFFDT)
                   FROM PS_JOB BB
                   WHERE BB.POSITION_NBR = $position_nbr AND
                         BB.EFFDT <= $_AsOfToday
                         
                         !******Begin Resolution 624858******
                         
                         AND BB.EMPLID = Y1.EMPLID
                         
                         !******End Resolution 624858  ******
                         
                         ) AND
       Z1.EMPLID = Y1.EMPLID
End-select


    If rtrim(&X1.DESCR,' ') <> ''
                 Let $Posn_Descr = rtrim(&X1.DESCR,' ')
                 Let $_Setid = &Y1.SETID_DEPT
                 Let $_DeptID = rtrim(&Y1.DEPTID,' ')
                 do Get-Department-Name-with-SetID
                 Let $posn_dept = $_DeptName
    else
                 do GetPosnDataNoIncum($position_nbr, $posn_dept, $posn_descr)
    end-if

 do Get-Name-Title(&Z1.EMPLID,$posn_name)
 do Get-Business-Phone(&Z1.EMPLID,$phone)

end-procedure Get-Pos-Data

!**********************************************
! FETCH POSITION DATA WHEN NO INCUMBENTS ROW  *
!**********************************************
begin-procedure GetPosnDataNoIncum($position_nbr, :$posn_dept, :$posn_descr)

Begin-Select
X1.DEPTID
X1.DESCR
X1.BUSINESS_UNIT

 FROM PS_POSITION_DATA X1

 WHERE X1.POSITION_NBR = $position_nbr AND
          X1.EFFDT = (SELECT MAX(AA.EFFDT)
          FROM PS_POSITION_DATA AA
          WHERE AA.POSITION_NBR = $position_nbr AND
                AA.EFFDT <= $_AsOfToday)
 End-select


    If rtrim(&X1.DESCR,' ') <> ''
            Let $Posn_Descr = rtrim(&X1.DESCR,' ')
            Let $_BU = rtrim(&X1.BUSINESS_UNIT,' ')
            Let $_DeptID = rtrim(&X1.DEPTID,' ')
            do Get-Business-Unit-Name
            Let $_Setid = $_BU_SETID

            do Get-Department-Name-with-SetID

            if rtrim($_DeptName,' ') = ''
              do Get-Setid($_BU,'BUS_UNIT_OPT_HR',$_Setid)
              do Get-Department-Name-with-SetID
            end-if

            Let $posn_dept = $_DeptName
    else
            Let $posn_descr = 'Unknown Position'
            Let $posn_dept = ' '
    end-if

end-Procedure Get-PosnDescr-Dept

!**************************************
! WRITE-TREE-REMAINING-ROWS SECTION ***
!**************************************
begin-procedure Write-Tree-Remaining-Rows

Begin-Select
A3.TREE_NODE,
B3.TREE_NODE

 Evaluate $node_recname

    when = 'DEPT_TBL'

      Let $A3.TREE_NODE = rtrim(&A3.TREE_NODE,' ')
      Let $B3.TREE_NODE = rtrim(&B3.TREE_NODE,' ')

      do Get-Dept-Data ($A3.TREE_NODE, $dept_descrA, $dept_nameA, $posn_nameA, $phone)

      Let $a3.tree_node = rtrim(&A3.TREE_NODE,' ')
      Let $b3.tree_node = rtrim(&B3.TREE_NODE,' ')

      string $a3.tree_node $dept_nameA $b3.tree_node $posn_nameA $dept_descrA $phone by ',' into $outline4

      break

    when = 'POSITION_DATA'

      Let $A3.TREE_NODE = rtrim(&A3.TREE_NODE,' ')
      Let $B3.TREE_NODE = rtrim(&B3.TREE_NODE,' ')

      do Get-Pos-Data ($A3.TREE_NODE, $posn_descrA, $posn_nameA, $posn_dept, $phone)

      Let $atree_node = rtrim(&A3.TREE_NODE,' ')
      Let $btree_node = rtrim(&B3.TREE_NODE,' ')

      string $atree_node $posn_nameA $btree_node $posn_descrA $posn_dept $phone by ',' into $outline4

      break

    when-other
      display 'Invalid Node_recname, is not DEPT_TBL or POSITION_DATA'
      break

 end-Evaluate

    write 10 from $outline4:120

 FROM   PSTREENODE A3,
        PSTREENODE B3
 WHERE  A3.SETID = $si AND
        A3.SETID = B3.SETID AND
        A3.TREE_NAME = $tree_name AND
        A3.TREE_LEVEL_NUM >= #tree_min AND
        A3.TREE_LEVEL_NUM <= #tree_max AND
        A3.TREE_NODE_NUM  >= #tree_node_num AND
        A3.TREE_NODE_NUM  <= #tree_node_num_end AND
        A3.TREE_NAME = B3.TREE_NAME AND
        A3.PARENT_NODE_NUM = B3.TREE_NODE_NUM and
        A3.EFFDT = (SELECT MAX(E3.EFFDT)
                    FROM PSTREENODE E3
                    WHERE E3.SETID = $si AND
                          E3.TREE_NAME = $tree_name and
                          E3.TREE_LEVEL_NUM >= #tree_min AND
                          E3.TREE_LEVEL_NUM <= #tree_max AND
                          E3.TREE_NODE_NUM  >= #tree_node_num AND
                          E3.TREE_NODE_NUM  <= #tree_node_num_end AND
                          E3.EFFDT <= $AsOfToday) AND
        B3.EFFDT = (SELECT MAX(F3.EFFDT)
                    FROM PSTREENODE F3
                    WHERE F3.SETID = $si AND
                          F3.TREE_NAME = $tree_name AND
                          F3.EFFDT <= $AsOfToday)

End-Select

end-procedure Write-Tree-Remaining-Rows

!***************************
! GET-NAME-TITLE SECTION ***
!***************************
Begin-procedure Get-Name-Title ($emplid, :$name)

Begin-Select
NAME &VIS_NAME
 FROM PS_PERSON_NAME
 WHERE EMPLID = $emplid
end-select

 unstring &VIS_NAME by ',' into $lastname $firstname
 Let $firstname = rtrim($firstname,' ')
 Let $lastname = rtrim($lastname,' ')
 string $firstname $lastname by ' ' into $name

 Let $name = rtrim($name,' ')
 If $name = ''
   !******Begin Resolution 624858******
   
   !Let $name='Unknown'
   Let $name='Vacant'
   
   !******Begin Resolution 624858******
 end-if

end-procedure Get-Name-Title

!********************************
! GET-POSITION-EMPLID SECTION ***
!********************************
Begin-procedure Get-Position-Emplid ($position_nbr, :$emplid)

Begin-select
A4.EMPLID,
 FROM PS_JOB A4
 WHERE A4.POSITION_NBR = $position_nbr AND
       A4.EMPL_STATUS IN ('A','P','L','W') AND
       A4.EFFDT = (SELECT MAX(B4.EFFDT)
                   FROM PS_JOB B4
                   WHERE B4.POSITION_NBR = $position_nbr AND
                         B4.EFFDT <= $_AsOfToday)
end-select

 Let $emplid = rtrim(&A4.EMPLID,' ')

end-procedure Get-Position-Emplid

!************************************
!**** START DEPARTMENT DATA HERE ****
!************************************

!*********************************
! WRITE-DEPT-FIRST-ROW SECTION ***
!*********************************
begin-procedure Write-Dept-First-Row ($dept_deptid)

 do Get-Dept-Data ($dept_deptid, $dept_descr, $dept_mgr_name, $dept_posn_descr, $phone)

 string $dept_deptid $dept_mgr_name '' $dept_posn_descr $dept_descr $phone by ',' into $outline3
 write 10 from $outline3:120

end-procedure Write-Dept-First-Row

!**************************
! GET-DEPT-DATA SECTION ***
!**************************
begin-procedure Get-Dept-Data ($deptid, :$dept_descr, :$dept_mgr_name, :$dept_posn_descr, :$phone)

Begin-Select
A5.MANAGER_ID,
A5.MANAGER_POSN,
A5.DESCR
 FROM  PS_DEPT_TBL A5
 WHERE A5.DEPTID = $deptid AND
       A5.SETID = $_SI AND
       A5.EFFDT = (SELECT MAX(B5.EFFDT)
                   FROM PS_DEPT_TBL B5
                   WHERE B5.DEPTID = $deptid AND
                          B5.SETID = A5.SETID AND
                         B5.EFFDT <= $_AsOfToday)
End-select

!Being Resolution 618868
   Let $mgr_id = rtrim(ltrim(&A5.MANAGER_ID,' '),' ')
   Let $mgr_posn = rtrim(ltrim(&A5.MANAGER_POSN,' '),' ')

   If $mgr_id = ''
     Let $mgr_id = ' '
   End-if
   If $mgr_posn = ''
     Let $mgr_posn = ' '
   End-if
!End Resolution 618868

 #ifdef DB2ALL
   Let $mgr_id = rtrim($mgr_id,' ')
   Let $mgr_posn = rtrim($mgr_posn,' ')
   if $mgr_id = ''
     Let $mgr_id = ' '
   end-if
   if $mgr_posn = ''
     Let $mgr_posn = ' '
   end-if
 #endif

 If $mgr_id <> ' '
   do Get-Name-title (&A5.MANAGER_ID, $dept_mgr_name)
   do Get-Business-Phone(&A5.MANAGER_ID,$phone)
 else
   if $mgr_posn <> ' '
     do Get-Position-Emplid (&A5.MANAGER_POSN, $mgr_emplid)
     do Get-Name-title ($mgr_emplid, $dept_mgr_name)
     do Get-Business-Phone($mgr_emplid,$phone)
   else
     Let $dept_mgr_name = 'Unknown'
     Let $phone='No Business Phone'
   end-if
 end-if

 do Get-Position-descr(&A5.MANAGER_POSN, $dept_posn_descr)
 Let $dept_descr = rtrim(&A5.DESCR,' ')
 Let $_emplid = rtrim(&A5.MANAGER_ID,' ')


end-procedure Get-Dept-Data

!**************************************
! WRITE-DEPT-REMAINING-ROWS SECTION ***
!**************************************
begin-procedure Write-Dept-Remaining-Rows ($deptid)
Begin-Select DISTINCT
A6.EMPLID
A6.DEPTID
A6.POSITION_NBR
D6.MANAGER_ID
D6.MANAGER_POSN
D6.DESCR

 if &D6.MANAGER_ID <> ' '
   Let $manager_id = rtrim(&D6.MANAGER_ID,' ')
   do Get-Name-title ($manager_id, $mgr_name)
 else
   if &D6.MANAGER_POSN <> ' '
     do Get-Position-Emplid (&D6.MANAGER_POSN, $mgr_emplid)
     do Get-Name-title ($mgr_emplid, $mgr_name)
   else
     Let $mgr_name = 'Unknown'
   end-if
 end-if

 if &A6.POSITION_NBR <> ' '
    do Get-Position-descr (&A6.POSITION_NBR, $posn_descr)
 else
    Let $posn_descr = 'Unknown'
 end-if
 let $d_emplid = rtrim(&A6.EMPLID,' ')
 let $d_descr = rtrim(&D6.DESCR,' ')

 do Get-Name-title (&A6.EMPLID,$namep)
 do Get-Business-Phone(&A6.EMPLID,$phone)

 string $d_emplid $namep $deptid $posn_descr $d_descr $phone by ',' into $outline4
 write 10 from $outline4:120


 FROM   PS_JOB A6,
        PS_DEPT_TBL D6
 WHERE  A6.DEPTID = $deptid AND
        A6.SETID_DEPT = $_si  AND
        A6.EMPL_STATUS IN ('A','P','L','W') AND
        D6.DEPTID = $deptid AND
        D6.SETID = $_SI AND
        A6.EMPLID <> $_emplid AND
        A6.EFFDT = (SELECT MAX(E6.EFFDT)
                    FROM PS_JOB E6
                    WHERE E6.EMPLID = A6.EMPLID AND
                          E6.EFFDT <= $_AsOfToday) AND
        D6.EFFDT = (SELECT MAX(E7.EFFDT)
                   FROM PS_DEPT_TBL E7
                   WHERE E7.DEPTID = $deptid AND
                         E7.SETID = D6.SETID AND
                         E7.EFFDT <= $_AsOfToday)

End-select

end-procedure Write-Dept-Remaining-Rows

!*******************************
! GET-POSITION-DESCR SECTION ***
!*******************************
Begin-procedure Get-Position-descr ($position_nbr, :$posn_descr)

Begin-Select
A7.DESCR
 FROM PS_POSITION_DATA A7
 WHERE A7.POSITION_NBR = $position_nbr
end-select
 Let $posn_descr = rtrim(&A7.DESCR,' ')

 If $posn_descr = ''
   Let $posn_descr='Unknown'
 End-if

end-procedure Get-Position-descr

!***************************
! GET-PHONE-TITLE SECTION ***
!***************************
Begin-procedure Get-Business-Phone($emplid, :$phone)

Begin-Select
PHONE &PHONE_NUMBER
 FROM PS_PERSONAL_PHONE
 WHERE EMPLID = $emplid AND
       PHONE_TYPE = 'BUSN'
end-select

 Let $phone = rtrim(&PHONE_NUMBER,' ')
 If $phone = ''
   Let $phone='No work phone'
 end-if

end-procedure Get-Business-Phone

!****************************
! CLOSE-OrgChart-FILE SECTION ***
!****************************
begin-procedure Close-OrgChart-file

 close 10

end-procedure Close-OrgChart-file

!*****************************
! Run Orgchart Application ***
!*****************************
begin-procedure Run-Orgchart

move '{ORGROOT}{ORGWIZARD} {ORGWIZARDFLAGS}' to $OrgExecutable
display 'Orgchart executable with arguments: 'noline
display $OrgExecutable
call system using $OrgExecutable #retcd

if #retcd <> 0
   display 'There is an error in the OrgSetup.sqc, verify settings'
end-if
end-procedure Run-Orgchart

#include 'prcsdef.sqc'   !Process Scheduler variables
#include 'prcsapi.sqc'   !Get run control parameters
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'getdptnm.sqc'  !Get Department Name
#Include 'getbunam.sqc'  !Get Position BU Setid
#Include 'getsetid.sqc'  !Get Set Id
