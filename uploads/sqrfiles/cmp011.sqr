!***********************************************
!  CMP011:  Salary History by Employee         *
!***********************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:11:34:33                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!Procedures ending with "Scrty" and Record alias ending with "SC" are  *
!using SQR Security.                                                   *
!***********************************************************************
#include 'setenv.sqc'     !Set environment
begin-setup
  #Include 'ptset02.sqc'   !Printer and page-size initialization

#define col1 1
#define col2 10
#define col3 25
#define col4 35
#define col5 42
#define col5_1 47
#define col6 67
#define col7 76
#define col8 87
#define col9 95
#define col9_1 100
#define col10 122
#define col10_1 125
#define col11 143
#define col12 152
#define col13 163
#define col14 169

end-setup


begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  if $prcs_oprid=''
    goto last2
  end-if
  
  do Process-Main
 
  do Reset
  do Stdapi-Term
LAST2:
end-report

begin-heading 7
do Get_Field_Information ('CMP011',     'REPORT_TITLE',  $REPORTTITLE,    #DW)

  #Include 'stdhtr08.sqc'

do Get_Field_Information ('CMP011',     'EMPLID',    $EMPL_LBL,   #DW)
do Get_Field_Information ('HR',      'BUS_UNIT1X',    $BUS_LBL,        #DW)
do Get_Field_Information ('HR',      'BUS_UNIT2',    $UNIT_LBL,        #DW)
do Get_Field_Information ('CMP011',     'DEPTID',    $DEPTID_LBL,        #DW)
do Get_Field_Information ('HR',      'EFFDT1',    $EFFDT1_LBL,        #DW)
do Get_Field_Information ('HR',      'EFFDT2',    $EFFDT2_LBL,        #DW)
do Get_Field_Information ('HR',         'JOBCODE1',    $JOBCODE_LBL,        #DW)
do Get_Field_Information ('HR',      'ANNUAL',    $ANNUAL_LBL,        #DW)
do Get_Field_Information ('HR',      'COMP_RATE2',    $RATE_LBL,       #DW)
do Get_Field_Information ('HR',      'ACTION',    $ACTION_LBL,        #DW)
do Get_Field_Information ('HR',      'ACTION_REASON2',   $ACTN_REAS_LBL,        #DW)
do Get_Field_Information ('CMP011',     'CHANGE',    $CHANGE_LBL,        #DW)
do Get_Field_Information ('HR',      'PERCENT_TYPE1',   $PERCENT_LBL,        #DW)
do Get_Field_Information ('HR',      'AMOUNT',    $AMOUNT_LBL,        #DW)
do Get_Field_Information ('CMP011',     'COMPRATE',    $COMPRATE_LBL,        #DW)
do Get_Field_Information ('CMP011',     'CURRENCY_CD',   $CUR_LBL,        #DW)
do Get_Field_Information ('HR',      'COMP2',    $CODE_LBL,        #DW)
do Get_Field_Information ('CMP011',     'FREQUENCY_ID',   $FREQ_LBL,        #DW)
do Get_Field_Information ('CMP011',     'PLAN',    $PLAN_LBL,        #DW)
do Get_Field_Information ('HR',      'GRADE2',    $GRADE_LBL,        #DW)

 LET $A = RTRIM($EmplID, ' ')
 STRING $EMPL_LBL $A $Name BY '  ' INTO $EMPL_NAME
PRINT   $EMPL_NAME  (+2,{col1})

print   $BUS_LBL        (+2,{col1})
print   $EFFDT1_LBL            (,{col2})
print   $DEPTID_LBL            (,{col3})
print   $JOBCODE_LBL           (,{col4})
print   $ANNUAL_LBL            (,{col5_1})
print   $ACTION_LBL            (,{col7})
print   $CHANGE_LBL            (,{col8})
print   $CHANGE_LBL            (,{col9_1})
print   $CUR_LBL               (,{col11})

print   $UNIT_LBL  (+1,{col1})
print   $EFFDT2_LBL             (,{col2})
print   $CODE_LBL               (,{col4})
print   $RATE_LBL               (,{col5_1})
print   $ACTION_LBL             (,{col6})
print   $ACTN_REAS_LBL          (,{col7})
print   $PERCENT_LBL            (,{col8})
print   $AMOUNT_LBL             (,{col9_1})
print   $COMPRATE_LBL           (,{col10_1})
print   $CODE_LBL               (,{col11})
print   $FREQ_LBL               (,{col12})
print   $PLAN_LBL               (,{col13})
print   $GRADE_LBL              (,{col14})

end-heading


begin-procedure Init-Report

  move 'CMP011' to $ReportID
  do Stdapi-Init
  if $prcs_oprid=''
    display ''
    display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
    display ''
    goto last1
  end-if

  if $prcs_process_instance = ''
    do Ask-From-Thru-Date
  else
    do Select-Parameters
  end-if
  do Init_Printer
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')
  LAST1:
end-procedure

begin-procedure Get-Values
   let $language_cd = $prcs_language_cd
   do Get-As-Of-Date
   do Get-From-Thru-Date
   let $EmplID = &RUN_CNTL_HR.EMPLID
   let $print_comp = &RUN_CNTL_HR.MULT_COMP_FLAG
   DO Get-Employee-Name
end-procedure

begin-procedure Process-Main
print   ' ' (+1,{col1})
begin-SELECT
A.BUSINESS_UNIT
  print &A.BUSINESS_UNIT                    (+2,{col1})
A.EMPL_RCD
A.EFFDT
  do Format-DateTime(&A.EffDt, $out, {DEFDATE}, '', '')
  print $out                      (,{col2})
A.DEPTID
  print &A.DEPTID                      (,{col3})
A.EFFSEQ
A.JOBCODE
  print &A.JOBCODE                      (,{col4})
A.ANNUAL_RT
  do Format-Number(&A.ANNUAL_RT, $out, '999999999999999.999')
  print $out                      (,{col5})
A.ACTION
  print &A.ACTION                      (,{col6})
A.ACTION_REASON
  print &A.ACTION_REASON                      (,{col7})
A.CHANGE_PCT
  do Format-Number(&A.CHANGE_PCT, $out, '999.99mi')
  print $out                      (,{col8})
A.CHANGE_AMT
  do Format-Number(&A.CHANGE_AMT, $out, '999999999999.99999mi')
  print $out                      (,{col9})
A.COMPRATE
  do Format-Number(&A.CompRate, $out, '999999999999.999999')
  print $out                      (,{col10})
A.CURRENCY_CD
  print &A.CURRENCY_CD                      (,{col11})
A.COMP_FREQUENCY
  print &A.COMP_FREQUENCY                      (,{col12})
A.SAL_ADMIN_PLAN
  print &A.SAL_ADMIN_PLAN                      (,{col13})
A.GRADE
  print &A.SAL_ADMIN_PLAN                      (,{col14})

 if $print_comp = 'Y'
    do Get-Compensation-Components
 end-if

 FROM PS_COMPSUMMRPT_VW A
  WHERE A.EMPLID = $EmplID
end-SELECT
end-procedure

begin-procedure Get-Compensation-Components
begin-SELECT
D.COMP_EFFSEQ
  do Format-Number(&D.COMP_EFFSEQ, $out, '999')
D.COMP_RATECD
 STRING &D.COMP_RATECD $out BY ' ' INTO $RATECD
  print $RATECD                      (+1,{col9})
D.COMPRATE
  do Format-Number(&D.CompRate, $out, '999999999999.999999')
  print $out                      (,{col10})
D.CURRENCY_CD                     (,{col11})
D.COMP_FREQUENCY                  (,{col12})
FROM  PS_COMPENSATION D
WHERE D.EMPLID    = $EmplID
  AND D.EMPL_RCD =  &A.EMPL_RCD
  AND D.EFFDT     = &A.Effdt
  AND D.EFFSEQ    = &A.Effseq
ORDER BY D.COMP_RATECD, D.COMP_EFFSEQ
end-SELECT
end-procedure

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askftd.sqc'    !From Thru Date input

#Include 'getempnm.sqc'  !Get-Employee-Name procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines to format datetimes
#Include 'number.sqc'    !Routine to format numbers
#include 'stdapi.sqc'    !Routine to update run status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
