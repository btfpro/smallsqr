!***********************************************************************
!  VC006:  Variable Compensation - Funding Allocations Report          *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:52:56                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
!
!***********************************************************************
!                                                                      *
! HP99999       Release 8                                              *
!***********************************************************************

#include 'setenv.sqc'    !Set environment

#define GB_GROUP_TBL
#define VC_PLAN_TBL

#Include 'rellang.sqc'

Begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup


!***********************************************************************
begin-report
!***********************************************************************

show 'Begin-Report'
show ' '

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report

  if $start-error <> 'Y'
    do Report
  end-if
  do Stdapi-Term
  do Reset

show 'End-Report'
show ' '

end-report


!**************************************************************************
!    Procedure Init-Report
!**************************************************************************
begin-procedure Init-Report

show 'begin-procedure Init-Report'
show ' '

  move 'VCREPS' to $ReportID
  move 'Funding Allocations Report' to $ReportTitle
  display $ReportTitle
  display ' '
  do Stdapi-init
  do Get-Report-Language   ! Procedure that decides the report language
                           ! and then calls 'Report-Translation' procedure
                           ! that reads the language dep. text.

  display $reportid
  display 'lang - '
  display $language_cd

  if $prcs_process_instance = ''
     display 'This process cannot be run outside the Process scheduler'
     let $start_error = 'Y'
  else
     let $start_error = 'N'
     do Security-Param
     do Select-Parameters
  end-if

show 'End-procedure Init-Report'
show ' '

end-procedure



!**************************************************************************
!    Procedure Select_Parameters
!**************************************************************************
begin-procedure select-parameters

show 'Begin-procedure select-parameters'
show ' '

BEGIN-SELECT
A.OPRID
A.RUN_CNTL_ID
A.PNLGRPNAME
A.VC_PLAN_ID
B.DESCR50
A.VC_PAYOUT_PRD_ID
A.PRD_END_DT
A.TREE_NAME
A.VC_TREE_DT
A.VC_REPORT_TYPE
B.VC_GOAL_TYPE
B.VC_PLAN_MEM_CRIT

  move &A.PRD_END_DT to $prd_end_dt
  do Format-DateTime($prd_end_dt, $prd_end_dt, {DEFYMD}, '', '')

FROM  PS_RC_VC_REPORTS A
    , PS_VC_PLAN_TBL   B
WHERE A.OPRID       = $prcs_oprid        AND
      A.RUN_CNTL_ID = $prcs_run_cntl_id  AND
      A.VC_PLAN_ID  = B.VC_PLAN_ID
end-select

show 'oprid = ' &A.OPRID
show 'RUN_CNTL_ID = ' &A.RUN_CNTL_ID
show 'PNLGRPNAME = ' &A.PNLGRPNAME
show 'VC_PLAN_ID = ' &A.VC_PLAN_ID
show 'DESCR50 = ' &B.DESCR50
show 'VC_PAYOUT_PRD_ID = ' &A.VC_PAYOUT_PRD_ID
show 'PRD_END_DT = ' &A.PRD_END_DT
show 'TREE_NAME = ' &A.TREE_NAME
show 'VC_TREE_DT = ' &A.VC_TREE_DT
show 'VC_REPORT_TYPE = ' &A.VC_REPORT_TYPE
show 'VC_GOAL_TYPE = ' &B.VC_GOAL_TYPE
show 'VC_PLAN_MEM_CRIT = ' &B.VC_PLAN_MEM_CRIT
show ' '
show 'End-procedure select-parameters'
show ' '

end-procedure


!**************************************************************************
!    Report procedure
!**************************************************************************
begin-procedure Report

show 'Begin-procedure Report'
show ' '

 Position (1,1)
 Move 0 To #total_target
 Move 0 To #total_fund
 Move 0 To #total_balance

 if rtrim(&B.VC_PLAN_MEM_CRIT, ' ') = 'G' or rtrim(&B.VC_PLAN_MEM_CRIT, ' ') = 'T'
  do SubReport
 end-if

position (+2,)
Print $grand_total (,1)
if rtrim(&B.VC_GOAL_TYPE,' ') = 'G' or rtrim(&B.VC_GOAL_TYPE,' ') = 'M'
  Print #total_target (,92) edit 999999999999.999999
end-if
Print #total_fund (,114) edit 999999999999.999999
let #total_variance =  #total_fund - #total_target
Print #total_variance (,135) edit 999999999999.999999
Print #total_balance (,158) edit 999999999999.999999

show 'End-procedure Report'
show ' '

end-procedure



!**************************************************************************
!    Procedure SubReport
!**************************************************************************
Begin-Procedure SubReport

show 'Begin-procedure SubReport'
show ' '

Begin-Select
GA.VC_PLAN_ID
GA.VC_PAYOUT_PRD_ID
GT.DESCR
GA.GB_GROUP_ID
GW.VC_SCORE
GW.VC_MATRIX_VALUE
GW.VC_GRP_PERF_FACTOR
GW.VC_TARGET_VALUE
GA.VC_ORIGINAL_ALLOC
GA.VC_BALANCE_ALLOC
GA.CURRENCY_CD
PD.VC_ORG_PERF_FACTOR

  do getrellang

  Print &GA.GB_GROUP_ID (,1)
  Print $GT_DESCR (,18)

  if rtrim(&B.VC_GOAL_TYPE,' ') = 'G'
     Print &GW.VC_GRP_PERF_FACTOR (,72) edit 999999999999999.999
     Print &GW.VC_TARGET_VALUE (,92) edit 999999999999.999999
     let #total_target = #total_target + &GW.VC_TARGET_VALUE
  end-if

  if rtrim(&B.VC_GOAL_TYPE,' ') = 'M'
     do Get_Payformula (&GA.vc_plan_id, &GA.vc_payout_prd_id, &GA.gb_group_id, &GW.vc_score)
     Print $vc_payformula_id (,72)
     Print &GW.VC_SCORE (,86) edit 9999.99
     Print &GW.VC_MATRIX_VALUE (,92) edit 999999999999.999999
     let #total_target = #total_target + &GW.VC_MATRIX_VALUE
  end-if

  Print &GA.VC_ORIGINAL_ALLOC (,114) edit 999999999999.999999
  let #group_variance = &GA.VC_ORIGINAL_ALLOC - &GW.VC_TARGET_VALUE
  Print #group_variance (,135) edit 999999999999.999999
  Print &GA.VC_BALANCE_ALLOC (,158) edit 999999999999.999999

  position (+1,)


  let #total_fund = #total_fund + &GA.VC_ORIGINAL_ALLOC
  let #total_balance = #total_balance + &GA.VC_BALANCE_ALLOC

From
 PS_VC_GRP_ALLOC GA
,PS_GB_GROUP_TBL GT
,PS_VC_PAYPRD_TBL PD
,PS_VC_GRP_AWARD GW

Where   GA.VC_PLAN_ID = &A.VC_PLAN_ID
AND     GA.VC_PAYOUT_PRD_ID = &A.VC_PAYOUT_PRD_ID
AND     GA.VC_PLAN_ID = PD.VC_PLAN_ID
AND     GA.VC_PAYOUT_PRD_ID = PD.VC_PAYOUT_PRD_ID
AND     GA.GB_GROUP_ID = GT.GB_GROUP_ID
AND     GT.EFFDT = (SELECT MAX(EFFDT) FROM PS_GB_GROUP_TBL G2
                    Where G2.GB_GROUP_ID = GA.GB_GROUP_ID AND
                          G2.EFFDT <= $prd_end_dt)
AND GW.VC_PLAN_ID = GA.VC_PLAN_ID
AND GW.VC_PAYOUT_PRD_ID = GA.VC_PAYOUT_PRD_ID
AND GW.GB_GROUP_ID = GA.GB_GROUP_ID
Order By GA.GB_GROUP_ID
End-Select


show 'End-procedure SubReport'
show ' '

End-Procedure

!*************************************************************************
Begin-procedure getrellang

begin-select
MAX(G2B.EFFDT)  &G2B_EFFDT=char
FROM PS_GB_GROUP_TBL G2B
WHERE G2B.GB_GROUP_ID = &GA.GB_GROUP_ID
AND   G2B.EFFDT <= $prd_end_dt
end-select

! Get Related Language info for PS_GB_GROUP_TBL
  move &GT.DESCR to $GB_GROUP_TBL-DESCR
  do Get_Related_GB_GROUP_TBL(&G2B_EFFDT,&GA.GB_GROUP_ID)
  move $GB_GROUP_TBL-DESCR to $GT_DESCR

! Get Related Language info for PS_VC_PLAN_TBL
  move &B.DESCR50 to $VC_PLAN_TBL-DESCR50
  do Get_Related_VC_PLAN_TBL(&A.VC_PLAN_ID)
  move  $VC_PLAN_TBL-DESCR50 to $DESCR50

end-procedure

!**************************************************************************
!    Procedure Get_Payformula
!**************************************************************************
Begin-Procedure Get_Payformula ($vc_plan_id, $vc_payout_prd_id, $gb_group_id, #vc_score)

show 'Begin-procedure Get_Payformula'
show ' '
show $vc_plan_id ' ' $vc_payout_prd_id ' ' $gb_group_id ' ' #vc_score

let $_vc_payformula_id = ' '

Begin-Select
PS.VC_PAYFORMULA_ID

   let $_vc_payformula_id = &PS.VC_PAYFORMULA_ID

FROM PS_VC_PAYOUT_SCHED PS
WHERE
    PS.VC_PLAN_ID = $vc_plan_id
AND PS.VC_PAYOUT_PRD_ID = $vc_payout_prd_id
AND PS.GB_GROUP_ID = $gb_group_id
AND PS.FROM_QTY =
(
SELECT MAX(FROM_QTY)
FROM PS_VC_PAYOUT_SCHED PS1
WHERE
    PS1.VC_PLAN_ID = PS.VC_PLAN_ID
AND PS1.VC_PAYOUT_PRD_ID = PS.VC_PAYOUT_PRD_ID
AND PS1.GB_GROUP_ID = PS.GB_GROUP_ID
AND PS1.FROM_QTY <= #vc_score
)
End-Select
show 'vc_payformula_id = ' $_vc_payformula_id

show 'End-procedure Get_Payformula'
show ' '

End-Procedure


!**************************************************************************
!    Heading
!**************************************************************************
Begin-Heading 11

show 'Begin-Heading'
show ' '

 Print $current-date (2,1) edit 'MM/DD/YYYY'
 Page-Number (1,150)

 do Print_Plan_Data

 Print $reportname (8,70)

 do Print_Column_Headers

show 'End-Heading'
show ' '

End-Heading

!**************************************************************************
!    Procedure Print_Plan_Data
!**************************************************************************
Begin-Procedure Print_Plan_Data

show 'Begin-Procedure Print_Plan_Data'
show ' '

 Print $plan_id (3,120)
 Print &A.VC_PLAN_ID (3,142)
 Print $DESCR50 (4,142)

 Print $payout_prd_id (5,120)
 Print &A.VC_PAYOUT_PRD_ID (5,142)

 Print $curr_cd (6,120)
 Print &GA.Currency_CD (6,142)

if &B.VC_GOAL_TYPE = 'G '
  Print $vc_org_perf_factor (7,120)
  Print &PD.VC_ORG_PERF_FACTOR (7,142)
end-if

show 'End-Procedure Print_Plan_Data'
show ' '

End-Procedure

!**************************************************************************
!    Procedure Print_Column_Headers
!**************************************************************************
Begin-Procedure Print_Column_Headers

show 'Begin-Procedure Print_Column_Headers'
show ' '

! print '123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 ' (9,1)
! print '         10        20        30        40        50        60        70        80        90        100       110       120       130       140       150        ' (10,1)

 let #line = 11

 let #pos = 1
 Print $group (#line,#pos)

If &B.VC_GOAL_TYPE = 'M '
   show 'vc_score = ' $vc_score
   show 'vc_matrix_value = ' $vc_matrix_value

   let #pos = 63+(16 - (length($payformula_id)))
   Print $payformula_id (#line,#pos)
   let #pos = 86+(7 - (length($vc_score)))
   Print $vc_score (#line,#pos)
   let #pos = 93+(19 - (length($vc_matrix_value)))
   Print $vc_matrix_value (#line,#pos)
 End-if

If &B.VC_GOAL_TYPE = 'G '
   let #pos = 72+(19 - (length($vc_grp_perf_factor)))
   Print $vc_grp_perf_factor (#line,#pos)
   let #pos = 93+(19 - (length($target_value)))
   Print $target_value (#line,#pos)
End-if

   let #pos = 115+(19 - (length($actual_funding)))
   Print $actual_funding (#line,#pos)
   let #pos = 136+(19 - (length($variance)))
   Print $variance (#line,#pos)
   let #pos = 158+(19 - (length($unallocated_balance)))
   Print $unallocated_balance (#line,#pos)

show 'End-Procedure Print_Column_Headers'
show ' '

End-Procedure

!**************************************************************************
!    Procedure Report-Translation
!**************************************************************************
begin-procedure report-translation

show 'Begin-Procedure report-translation'
show ' '

do Init_Report_Translation($ReportID,$Language_Cd)

do Get_Field_Information ('VCREPS','ACTUAL_AWARD',$actual_award,#DW)
do Get_Field_Information ('VCREPS','ACTUAL_FUNDING',$actual_funding,#DW)
do Get_Field_Information ('VCREPS','ANNUAL_RATE',$annual_rate,#DW)
do Get_Field_Information ('VCREPS','ATTAINED',$attained,#DW)
do Get_Field_Information ('VCREPS','VC_CARRYOVER_BAL',$carryover_balance,#DW)
do Get_Field_Information ('VCREPS','EMPLID',$emplid,#dw)
do Get_Field_Information ('VCREPS','EMPL_RCD',$empl_rcd,#DW)
do Get_Field_Information ('VCREPS','GROUP',$group,#DW)
do Get_Field_Information ('VCREPS','GRAND_TOTAL',$grand_total,#DW)
do Get_Field_Information ('VCREPS','GROUP_GOALS',$group_goals,#DW)
do Get_Field_Information ('VCREPS','GUARANTEE',$guarantee,#DW)
do Get_Field_Information ('VCREPS','HIRE_DATE',$hire_date,#DW)
do Get_Field_Information ('VCREPS','JOB_CODE',$job_code,#DW)
do Get_Field_Information ('VCREPS','MAX_AWARD',$max_award,#DW)
do Get_Field_Information ('VCREPS','MIN/MAX',$minmax,#DW)
do Get_Field_Information ('VCREPS','MIN_AWARD',$min_award,#DW)
do Get_Field_Information ('VCREPS','NAME',$name,#DW)
do Get_Field_Information ('VCREPS','OVERALL_PERF_FACT',$overall_perf_factor,#DW)
do Get_Field_Information ('VCREPS','VC_PAYOUT_PRD_ID',$payout_prd_id,#DW)
do Get_Field_Information ('VCREPS','PERFORMACE_FACTOR',$perf_factor,#DW)
do Get_Field_Information ('VCREPS','PLAN ID',$plan_id,#DW)
do Get_Field_Information ('VCREPS','PROJECTED_PAYOUT',$projected_payout,#DW)
do Get_Field_Information ('VCREPS','VC_TARGET_AWARD',$target_award,#DW)
do Get_Field_Information ('VCREPS','VC_TARGET_VALUE',$target_value,#DW)
do Get_Field_Information ('VCREPS','TOTAL_PLAN',$total_plan,#DW)
do Get_Field_Information ('VCREPS','TOTAL_GROUP',$total_group,#DW)
do Get_Field_Information ('VCREPS','UNALLOCATED_BAL',$unallocated_balance,#DW)
do Get_Field_Information ('VCREPS','VALUATION',$valuation,#DW)
do Get_Field_Information ('VCREPS','VARIANCE',$variance,#DW)
do Get_Field_Information ('VCREPS','WEIGHTING',$weighting,#DW)
do Get_Field_Information ('VCREPS','DETAIL',$detail,#DW)
do Get_Field_Information ('VCREPS','SUMMARY',$summary,#DW)
do Get_Field_Information ('VCREPS','CURR_CD',$curr_cd,#DW)
do Get_Field_Information ('VCREPS','VC_AWARD_VALUE',$award_value,#DW)
do Get_Field_Information ('VCREPS','VC_GRP_PERF_FACTOR',$vc_grp_perf_factor,#DW)
do Get_Field_Information ('VCREPS','VC_MATRIX_VALUE',$vc_matrix_value,#DW)
do Get_Field_Information ('VCREPS','VC_ORG_PERF_FACTOR',$vc_org_perf_factor,#DW)
do Get_Field_Information ('VCREPS','VC_SCORE',$vc_score,#DW)
do Get_Field_Information ('VCREPS','VC_PAYFORMULA_ID',$payformula_id,#DW)

do Get_Field_Information ('VCREPS','VC006',$reportname,#DW)

show 'Begin-Procedure report-translation'
show ' '

end-procedure

!*****************************************************************
#include 'stdapi.sqc'    !Routine to update run Status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'
#include 'sqrtrans.sqc'
#Include 'getrplng.sqc'  !Get the report language
#include 'hrsecty.sqc'   !Get SQR Security parameters
