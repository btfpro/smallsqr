!**************************************************************
!  OHS003GR:  Wegeunfall-Auskunft für Berufsenossenschaft      *
!**************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:09:24                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup
#define LANGUAGE_REPORT 'GER'

begin-REPORT
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Layout
  do Init-Report
  do Process-Main
  do Stdapi-Term
end-REPORT

!************************************************
begin-procedure Init-Report

  move 'OHS003GR' to $ReportID
  move 'Wegeunfall-Auskunft für Berufsgenossenschaft' to $ReportTitle
  display $ReportTitle
  display ' '

  do Stdapi-Init

  if $prcs_process_instance <> ''
     do Select-Parameters
  end-if

end-procedure

!************************************************
begin-procedure Get-Values
   let $Incident_Nbr = &RUN_CNTL_OHS.INCIDENT_NBR
end-procedure

!************************************************
begin-procedure Init-Layout

#define col1 1
#define col2 5
#define col3 60
#define col2b 10
end-procedure

!************************************************
begin-heading 6
#include 'stdhdg01.sqc'

print 'Vorfallnummer: ' (+1,{col1})
print $Incident_Nbr     (0,0)

end-heading

!**************************************************
begin-procedure Process-Main

begin-SELECT

ID.START_DATE
ID.START_TIME
ID.DESTINATION
ID.ROUTE_LENGTH_KM
ID.DIRECT_ROUTE
ID.DIRECT_ROUTE_SW
ID.ROUTE_REASON
ID.USUAL_ROUTE
ID.ACTUAL_ROUTE
ID.BREAK_TAKEN_SW
ID.BREAK_REASON
ID.BREAK_DURATION_HRS
ID.BREAK_INSTANT_CD
ID.ROUTE_DETAILS
ID.ARRIVAL_DATE
ID.ARRIVAL_TIME
ID.TRANSPORT_MODE
 let $TransportMode = &ID.TRANSPORT_MODE
ID.ALCOHOL_DRUNK_GER
ID.ENDORSER_GER

FROM PS_INC_TRAVEL_DATA ID

WHERE ID.INCIDENT_NBR = $Incident_Nbr
end-SELECT

begin-SELECT
DESCR50
 let $TransportDescr = &DESCR50
FROM PS_TRANSPORT_TBL
WHERE TRANSPORT_MODE = $TransportMode
end-SELECT

begin-SELECT
IP.DRUG_INFLUENCE_SW
IP.COMMENTS
  let $DrugInfluence = &IP.DRUG_INFLUENCE_SW
  let $Comment = &IP.COMMENTS
FROM PS_INCIDENT_PEOPLE IP, PS_INJURY_ILL_VW IW
WHERE IP.INCIDENT_NBR = $Incident_Nbr
AND   IP.INCIDENT_NBR = IW.INCIDENT_NBR
AND   IP.EMPLID = IW.EMPLID
end-SELECT



!***********************************************************************
print '_'               (+1,{col1},120)FILL
print '1. '             (+1,{col1},3)

let #abs-line = #Current-Line

print 'Wann (Datum, Uhrzeit) und von welcher Stelle aus (Ort,Straße, Hausnummer) hat der/die Verletzte den Weg angetreten?'       (0,{col2}) WRAP 50 3

let #rel-line = #abs-line - #Current-Line
let #abs-line = #Current-Line

do Format-DateTime(&ID.START_DATE, $out, {DEFDATE}, '', '')
print $out      (+#rel-line,{col3})
print ' '               (0,0)
print &ID.START_TIME    (0,0) edit 99.99
print ' Uhr'            (0,0)


if #abs-line > #Current-Line
   let #rel-line = #abs-line - #Current-line
   position (+#rel-line,0)
end-if


print 'Ziel des Weges (Ort, Straße, Hausnummer)? '      (+2,{col2},54)

print &ID.DESTINATION                                   (0,{col3}) WRAP 50 3

print 'Wie weit ist der Weg? '                          (+2,{col2},54)
print 'ca. '                                            (0,{col3})
print &ID.ROUTE_LENGTH_KM                               (0,0) edit 9999.99
print ' km'                                             (0,0)

!***********************************************************************
print '_'                                               (+1,1,120)FILL
print '2. '                                             (+1,{col1},3)

let #abs-line = #current-line
print 'Welches ist der direkte Weg zwischen Ausgansort und Ziel (genau Straßenbezeichnung evtl. Skizze)?' (0,{col2}) WRAP 50 3

let #rel-line = #abs-line - #Current-Line
let #abs-line = #Current-Line
print &ID.DIRECT_ROUTE                                  (+#rel-line,{col3}) WRAP 50 3

if #abs-line > #Current-Line
   let #rel-line = #abs-line - #Current-line
   position (+#rel-line,0)
end-if

if &ID.DIRECT_ROUTE_SW = 'Y'
   print 'Ja'   (+2,{col3})
else
   print 'Nein' (+2,{col3})
end-if

print 'Hat der/die Verletzte am Unfalltag diesen Weg benutzt? ' (0,{col2}) WRAP 50 3

!**************************************************************************
print '_'       (+1,1,120)FILL
print '3.'      (+1,{col1},3)
print 'Bei Abweichung vom direkten Weg: '       (0,{col2})

let #abs-line = #Current-Line+2

print 'Welchen Weg schlägt der/die Verletzte gewöhnlich ein? '  (+2,{col2}) WRAP 50 3

let #rel-line = #abs-line - #Current-Line
let #abs-line = #Current-Line

print &ID.USUAL_ROUTE                           (+#rel-line,{col3}) WRAP 50 3

if #abs-line > #Current-Line
   let #rel-line = #abs-line - #Current-line
   position (+#rel-line,0)
end-if

let #abs-line = #Current-Line + 2

print 'Welchen Weg wollte der/die Verletzte am Unfalltag nehmen? ' (+2,{col2}) WRAP 50 3

let #rel-line = #abs-line - #Current-Line
let #abs-line = #Current-Line

print &ID.ACTUAL_ROUTE  (+#rel-line,{col3}) WRAP 50 3

if #abs-line > #Current-Line
   let #rel-line = #abs-line - #Current-line
   position (+#rel-line,0)
end-if

print 'Grund für die Abweichung? '      (+2,{col2},54)
print &ID.ROUTE_REASON                  (0,{col3}) WRAP 50 2

!*****************************************************************
print '_'                               (+1,1,120)FILL

let #abs-line = #Current-Line + 1

print '4.'                              (+1,{col1},3)
print 'Welche Stecke hat der/die Verletzte bis zur Unfallstelle bereits zurückgelegt (genaue Straßenbezeichnung evtl. Skizze)'  (0,{col2}) WRAP 50 3

let #rel-line = #abs-line - #Current-Line
let #abs-line = #Current-Line

print &ID.ROUTE_DETAILS               (+#rel-line,{col3}) WRAP 50 3

if #abs-line > #Current-Line
   let #rel-line = #abs-line - #Current-line
   position (+#rel-line,0)
end-if

do Format-DateTime(&ID.ARRIVAL_DATE, $out, {DEFDATE},'','')
print $out             (+2,{col3})
print ' '              (0,0)
print &ID.ARRIVAL_TIME  (0,0) edit 99.99
print 'Wann (Datum, Uhrzeit) erreichte der/die Verletzte die Unfallstelle? '    (0,{col2}) WRAP 50 3


let $TransportDescr = ' '
begin-SELECT
TRP.DESCR50
 let $TransportDescr = &TRP.DESCR50
FROM PS_TRANSPORT_TBL TRP
WHERE TRP.TRANSPORT_MODE = $TransportMode
end-SELECT
print $TransportDescr (+2,{col3})
print 'Wie hat der/die Verletzte den Weg zurückgelegt (Verkehrsmittel) '        (0,{col2}) WRAP 50 3

!*******************************************************************
print '_'       (+1,1,120)FILL
print '5.'      (+1,{col1})

if &ID.BREAK_TAKEN_SW = 'Y'
   print 'Ja'   (0,{col3})
   print &ID.BREAK_REASON (+1,{col3})
   position (-1,0)
else
   print 'Nein' (0,{col3})
end-if

print 'Hat der/die Verletzte unterwegs Gaststätten, Geschäfte, Verwandte oder Bekannte besucht Oder sonstige private Besorgungen gemacht oder machen wollen?' (0,{col2}) WRAP 50 4
print &ID.BREAK_DURATION_HRS  (+2,{col3}) edit 99.99
print ' Stunden'        (0,0)
print 'Wie lange dauerte der Besuch bzw. die Besorgung?'        (0,{col2})

evaluate &ID.BREAK_INSTANT_CD
when = 'A'
   print 'Nach ' (+2,{col3})
   print 'dem Besuch bzw. der Besorgung' (0,0)
   break
when = 'B'
   print 'Vor ' (+2,{col3})
   print 'dem Besuch bzw. der Besorgung' (0,0)
   break
when = 'D'
   print 'Während ' (+2,{col3})
   print 'dem Besuch bzw. der Besorgung' (0,0)
   break
when-other
   print ' '        (+2,{col3})
end-evaluate

print 'Ist dem/der Verletzten der Unfall während des Besuchs oder der Besorgung bzw. vorher oder nachher zugestoßen?'   (0,{col2}) WRAP 50 3

if $DrugInfluence  = 'Y'
  print 'Ja' (+2,{col3})
else
  print 'Nein' (+2,{col3})
end-if
print 'Stand der Versicherte unter Alkoholeinwirkung?'  (0,{col2})

print &ID.ALCOHOL_DRUNK_GER (+2,{col3})
print 'In welchen Mengen wurde Alkohol getrunken?'      (0,{col2})

print &ID.ENDORSER_GER (+2,{col3})
print 'Wer kann hierüber Näheres sagen?' (0,{col2})

!*********************************************************************
new-page
print '_'       (+1,1,120)FILL
print '6.'      (+1,{col1})

let #abs-line = #Current-line
print 'Waren an dem Unfall andere Personen beteiligt (ggf. Namen und Anschriften angeben)?'     (0,{col2}) WRAP 50 3
print 'Bei Verkehrsunfall:'                             (+2,{col2})
print 'Name und Anschrift des beteiligten Fahrers?'     (+2,{col2b})
print 'Name und Anschrift des Halters?'                 (+2,{col2b})
print 'Bei Unfall infolge schlechter Straßen- oder Wegeverhältnisse (z.B. Glatteis, offner Kellerschacht):'     (+2,{col2}) WRAP 50 3
print 'Name und Anschrift des Grundstückseigetümers oder des Wegeunterhaltspflichtigen?'        (+2,{col2b}) WRAP 45 3
print 'Bei Unfällen durch Tiere:'                       (+2,{col2})
print 'Name und Anschrift des Tierhalters?'             (+2,{col2b})

let #rel-line = #abs-line - #Current-line
let #abs-line = #Current-Line
position (+#rel-line,0)

begin-SELECT

NPD.NAME
IVED.INCIDENT_ROLE
IVED.ADDRESS1
IVED.CITY
IVED.POSTAL

  let $FieldValue = &IVED.INCIDENT_ROLE
  let $FieldName = 'INCIDENT_ROLE'
  do Read-Translate-Table
  print &NPD.NAME (0,{col3})
  print $XlatLongName (0,+2)
  print &IVED.ADDRESS1 (+1,{col3})
  print &IVED.POSTAL   (+1,{col3})
  print &IVED.CITY     (0,+2)
  POSITION (+2,0)

FROM PS_NE_PERSONAL_DTA NPD
    ,PS_INCIDENT_PEOPLE IVED

WHERE IVED.INCIDENT_NBR = $Incident_Nbr
AND   NPD.NON_EMPLOYEE_ID = IVED.NON_EMPLOYEE_ID
ORDER BY IVED.INCIDENT_ROLE

end-SELECT

begin-SELECT

PD.NAME
IVED2.INCIDENT_ROLE
IVED2.ADDRESS1
IVED2.CITY
IVED2.POSTAL

  let $FieldValue = &IVED2.INCIDENT_ROLE
  let $FieldName = 'INCIDENT_ROLE'
  do Read-Translate-Table
  print &PD.NAME (0,{col3})
  print $XlatLongName (0,+2)
  print &IVED2.ADDRESS1 (+1,{col3})
  print &IVED2.POSTAL   (+1,{col3})
  print &IVED2.CITY     (0,+2)
  POSITION (+2,0)

FROM PS_PERSON_NAME PD
    ,PS_INCIDENT_PEOPLE IVED2

WHERE IVED2.INCIDENT_NBR = $Incident_Nbr
AND   PD.EMPLID = IVED2.EMPLID
AND   IVED2.INCIDENT_ROLE <>'EW'
ORDER BY IVED2.INCIDENT_ROLE

end-SELECT

if #abs-line > #Current-line
   let #rel-line = #abs-line - #Current-line
   position (+#rel-line,0)
end-if

let #abs-line = #Current-Line

print 'Sind durch die Polizei oder sonstige Stellen (z.B. Eisen- oder Straßenbahnverwaltung) Feststellungen getroffen worden (ggf. genaue Anschrift der Stelle und Angabe des Aktenzeichens)?' (+2,{col2}) WRAP 50 4

let #rel-line = #abs-line - #Current-Line
let #abs-line = #Current-Line

position (+#rel-line,0)


!--------------------------------------
begin-SELECT

IAD.ACCDT_RPT_TYPE_GER
IAD.POLICE_CASE_GER
IAD.ADDRESS1
IAD.POSTAL
IAD.CITY

  let $FieldValue = &IAD.ACCDT_RPT_TYPE_GER
  let $FieldName = 'ACCDT_RPT_TYPE_GER'
  do Read-Translate-Table

  print $XlatLongName           (+2,{col3})
  print &IAD.POLICE_CASE_GER    (+1,{col3})
  print &IAD.ADDRESS1           (+1,{col3})
  print &IAD.POSTAL             (+1,{col3})
  print ' '                     (0,0)
  print &IAD.CITY               (0,0)

FROM PS_INC_TRAVRPT_GER IAD

WHERE IAD.INCIDENT_NBR = $Incident_Nbr

end-SELECT

!-------------------------------------------------------------
if #abs-line > #Current-line
   let #rel-line = #abs-line - #Current-line
   position (+#rel-line,0)
end-if

let #abs-line = #Current-Line

print 'Bei welcher Versicherunsgesellschaft ist/sind der/die Schädiger versichert?' (+2,{col2}) WRAP 50 3

let #rel-line = #abs-line - #Current-Line
let #abs-line = #Current-Line

position (+#rel-line,0)

begin-SELECT

NPD2.NAME        (+2,{COL3})
IVED3.INSURANCE_GER  (+1,{COL3})
IVED3.INCIDENT_ROLE

FROM PS_NE_PERSONAL_DTA NPD2
    ,PS_INCIDENT_PEOPLE IVED3
WHERE IVED3.INCIDENT_NBR = $Incident_Nbr
AND   NPD2.NON_EMPLOYEE_ID = IVED3.NON_EMPLOYEE_ID
AND   IVED3.RESPONSIBLE_SW = 'Y'
ORDER BY IVED3.INCIDENT_ROLE

end-SELECT

begin-SELECT

PD2.NAME         (+2,{COL3})
IVED4.INSURANCE_GER (+1,{COL3})
IVED4.INCIDENT_ROLE

FROM PS_PERSON_NAME PD2
    ,PS_INCIDENT_PEOPLE IVED4

WHERE IVED4.INCIDENT_NBR = $Incident_Nbr
AND   PD2.EMPLID = IVED4.EMPLID
AND   IVED4.RESPONSIBLE_SW = 'Y'
ORDER BY IVED4.INCIDENT_ROLE

end-SELECT


if #abs-line > #Current-line
   let #rel-line = #abs-line - #Current-line
   position (+#rel-line,0)
end-if

!*************************************************************************
print '_' (+1,1,120)FILL
print '7.'      (+1,{col1})
print 'Auf wessen Angaben beruhen die Auskünfte?'       (0,{col2})

position (-2,0)

begin-SELECT

NPD4.NAME        (+2,{COL3})

FROM PS_NE_PERSONAL_DTA NPD4
    ,PS_INCIDENT_PEOPLE IVED5

WHERE IVED5.INCIDENT_NBR = $Incident_Nbr
AND   NPD4.NON_EMPLOYEE_ID = IVED5.NON_EMPLOYEE_ID
AND   IVED5.INCIDENT_ROLE = 'EW'


end-SELECT

begin-SELECT

PD5.NAME         (+2,{COL3})

FROM PS_PERSON_NAME PD5
    ,PS_INCIDENT_PEOPLE IVED6

WHERE IVED6.INCIDENT_NBR = $Incident_Nbr
AND   PD5.EMPLID = IVED6.EMPLID
AND   IVED6.INCIDENT_ROLE = 'EW'
end-SELECT

!******************************************************************
print '_'(+1,1,120)FILL

let #abs-line = #Current-line + 1

print '8.'                                               (+1,{col1})
print $Comment                                           (0,{col3}) WRAP 50 3

let #rel-line = #abs-line - #Current-line
let #abs-line = #Current-line

print 'Besondere Bemerkungen (z.B. über die Glaubwürdigkeit, etwaige Trunkenheit des/der Verletzten, Zeugen des Unfalls usw.).' (+#rel-line,{col2}) WRAP 50 3

if #abs-line > #Current-line
   let #rel-line = #abs-line - #Current-line
   position (+#rel-line,0)
end-if

!************************************************************************
print '_'       (+1,1,120)FILL

print 'Urschriftlich der Berufsgenossenschaft zurückgereicht.'  (+1,{col1})

let $Wieder_Aufgenommen = ''

begin-SELECT

II.RETURN_DT

  do Format-DateTime(&II.RETURN_DT,$Wieder_Aufgenommen,{DEFDATE},'','')

FROM PS_INJURY_ILL II

WHERE II.INCIDENT_NBR = $Incident_Nbr

end-SELECT


if $Wieder_Aufgenommen = ''
   print 'Der/Die Verletzte hat die Arbeit noch nicht aufgenommen.' (+2,{col1})
else
   print 'Der/Die Verletzte hat seit dem  '      (+2,{col1})
   print $Wieder_Aufgenommen                    (0,0)
   print ' die Arbeit wieder aufgenommen.'      (0,0)
end-if

do Format-DateTime($AsOfToday,$out,{DEFDATE},'','')

print 'München, den '   (+5,{col1})
print  $out       (0,0)
print '________________________________________'       (0,{col3})
print 'Stempel und Unterschrift des Unternehmers oder dessen Vertreters' (+1,{col3}) WRAP 40 2


end-procedure
!*************************************************
#include 'ohsrnctl.sqc'  !Get run control parameter values
#include 'ohsget.sqc'    !Get values mask routines

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#include 'stdapi.sqc'    !Routines to update run status
