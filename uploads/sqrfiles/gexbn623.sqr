!***********************************************************************
! GEXBN623: FSA Enrollment Interface file                              *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXHR621 :           Interface - file for hcapstrategies.com         *
!                                                                      *
! Capture the FSA Enrollment/Election information for the Health and   *
! Dependent Care accounts.                                             *
!                                                                      *
! Enrollment information is stored on the FSA_BENEFIT tables           *
!                                                                      *
!                                                                      *
! SQL Tables:           PS_PERSONAL_DATA			       *
!                       PS_JOB                                         *
!                       PS_FSA_BENEFIT				       *
!                       PS_EMPLOYMENT				       *
!			PS_BEN_PROG_PARTIC			       *
!                                                                      *
! Debug Used:           #debug9 #debuga                                *
!                                                                      *
! Written by:           Tony Labra                                     *
!                                                                      *
! Normally Run:         Weekly                                         *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!			  As Of Date                                   *
!                         Benefit Program                              *
!                         Plan Type                                    *
!                         Employee Status                              *
!                         Coverage Elect                               *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE          DESCRIPTION OF THE CHANGE                    *
!***********************************************************************
! Sudhakar changal						       *       
!								       *       
! AXL       11/25/2005   New program.                                  *
!                                                                      *
! GEX-MXT   03/24/2008   Fixed for REHIRE DT issue in 9.0              *
! ISDVASS   04/09/2008   Used $AsOfDate instead of sysdate to get the  *
!                        rehire_dt from the custom sqc                 *
!ISDVDZK    09/18/2008   corrected the logic as it was picking wrong date*
! VENDAXG   10/29/2012    Fixed date of Birth and Last run of the year.*
!***********************************************************************


#include 'setenv.sqc'	!Set environment
#Include 'setup02.sqc'  !Printer and Page-Size Initialization (Landscape)  

#define #col_EMPLID		  2	!A.EMPLID
#define #col_Plan_ID             12	!Plan ID    
#define #col_INFRDATE		 17	!EFFDT from date  
#define #col_INTODATE		 27	!EFFDT to date
#define #col_NAME   		 37	!NAME                                                           
#define #col_ADDRESS1      	 67	!ADDRESS1                                                              
#define #col_ADDRESS2		 82	!ADDRESS2                                                              
#define #col_CITY          	 97	!CITY                                                                  
#define #col_STATE         	112	!STATE                                                                 
#define #col_POSTAL	   	115     !POSTAL								
#define #col_INPYDATE		122     !CHECK DT                          
#define #col_INPLGAMT	   	132	!Employee Pledge Amount             
#define #col_INFILL1		144	!Pay Period       
#define #col_INCONTR		152     !Employee Contrib Amount    
#define #col_INHDATE		162	!HIRE_DT

                                   
!********************************************
Begin-Heading 7
!********************************************
#debug9 Show 'Begin-Heading'
  
  #Include 'stdhdg01.sqc'
  Print $ReportTitle2      (3,) Center

  Print 'PLN'		(+3,{#col_Plan_ID})
  Print 'FROM'		(0,{#col_INFRDATE})
  Print 'TO'		(0,{#col_INTODATE})
  Print 'PLG'		(0,{#col_INPLGAMT})	   	          
  Print 'PAY'		(0,{#col_INFILL1})
  Print 'CNTR'		(0,{#col_INCONTR}) 
  Print 'HIRE'          (0,{#col_INHDATE})

  Print 'EMPLID'        (+1,{#col_EMPLID})
  Print 'ID'		(0,{#col_Plan_ID})
  Print 'EFFDT'		(0,{#col_INFRDATE})
  Print 'EFFDT'		(0,{#col_INTODATE})
  Print 'NAME'		(0,{#col_NAME})
  Print 'ADDRESS'	(0,{#col_ADDRESS1})
  Print 'CITY'		(0,{#col_CITY})
  Print 'ST'		(0,{#col_STATE})
  Print 'ZIP'		(0,{#col_POSTAL})
  Print 'CHECK DT'	(0,{#col_INPYDATE})
  Print 'AMT'		(0,{#col_INPLGAMT})	   	          
  Print 'Period'	(0,{#col_INFILL1})
  Print 'AMT'		(0,{#col_INCONTR}) 
  Print 'DATE'          (0,{#col_INHDATE})

End-Heading

!***********************************************************************************
Begin-Report
!***********************************************************************************
#debug9 Show 'Begin-Report'
  Do Initialization
  Do Main-Process
  Do Finalization
End-Report

!***********************************************************************************
Begin-Procedure Initialization
!***********************************************************************************
#debug9 Show 'Initialization'

  Let $year4 = '1'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      =   'GEXBN623'
  Let $ReportTitle   =   'ENROLLMENT FILE FOR FSA PARTNER'
  
  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show '$ReportDate  = ' $ReportDate
  Show '$ReportTime  = ' $ReportTime
    
  Let $GEXXX903_Emp_Stat_Alias 	      = 'A.empl_status'
  Let $GEXXX912_Plan_Type_Alias       = 'D.PLAN_TYPE'
  Let $GEXXX911_Benefit_Program_Alias = 'C.BENEFIT_PROGRAM'
  Let $GEXXX940_Coverage_Elect_Alias  = 'D.COVERAGE_ELECT'

  If $prcs_process_instance = ''
     Do SQRW-Run-Controls
  Else
     Do Process-Scheduler-Run-Controls
  End-if

  If $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '1=1'
     Display 'At least one benefit program parameter must be specified'
     Stop
  End-If

  If $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
     Display 'At least one plan type parameter must be specified'
     Stop
  End-If

  Do Get-Pay-Balance-Year
  let #yyyy		= &YR.BALANCE_YEAR
  Let #YYYYPlus_One	= &YR.BALANCE_YEAR + 1

  LET $YYYY = EDIT(#yyyy,'9999')
  LET $YYYYPlus_One = EDIT(#YYYYPlus_One,'9999')
 
  Let $pay_end_dt = &YR.pay_end_dt

   show '$pay_end_dt'  $pay_end_dt
   
  Do  Get-Curr-Pay-Period
  Let $year_begin_dt = '01-JAN-' || $YYYY
  let $year_begin_dt_cmp = $YYYY || '0101'
  !Let $year_begin_dt = '01-JAN-' || $YYYYPlus_One
  Let $INFILL1 = edit(#pay_period,'09')
  Let $Next_year_begin_dt = '01-JAN-' || $YYYYPlus_One	!GEXBN_848_PRJE118801 VENDAXG 2012-11-05
  Show 'Next_year_begin_dt :'$Next_year_begin_dt
  Show '$GEXXX903_Include_Emp_Stat_Display_Criteria         = ' $GEXXX903_Include_Emp_Stat_Display_Criteria
  Show '$GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA  = ' $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA
  Show '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA     = ' $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA
  Show '$GEXXX940_INCLUDE_COVERAGE_ELECT_DISPLAY_CRITERIA   = ' $GEXXX940_COVERAGE_ELECT_DISPLAY_CRITERIA
  Show '$AsOfDate                                           = ' $AsOfDate

  Let $ORDER_BY = 'ORDER BY A.EMPLID'  

  Do Print-Cover-Page
  Do Open-File

End-Procedure

!*********************************************************************
Begin-Procedure Get-Pay-Balance-Year
!*********************************************************************

begin-select loops = 1

YR.BALANCE_YEAR
YR.PAY_END_DT

FROM PS_PAY_CAL_BAL_ID YR
  WHERE  YR.COMPANY    = 'GEI'
     AND YR.PAYGROUP   = 'RET'
     AND YR.BALANCE_ID = 'CY'
     AND YR.PAY_END_DT = (Select Max(PAY_END_DT)
         From PS_PAY_CAL_BAL_ID
	 Where COMPANY     = YR.COMPANY
	 And   PAYGROUP    = YR.PAYGROUP
	 And   BALANCE_ID  = YR.BALANCE_ID
	 And   PAY_END_DT <= $AsOfDate)

end-select

end-procedure

!***********************************************************************************
Begin-Procedure Get-Curr-Pay-Period
!***********************************************************************************
#debug9 Show 'Get-Curr-Pay-Period'

Begin-Select 

count(B.check_dt) &pay_period

  let #pay_period = &pay_period

  Show 'pay period  ' #pay_period
  
FROM PS_PAY_CAL_BAL_ID A, PS_PAY_CALENDAR B
 WHERE   A.BALANCE_YEAR		= #yyyy
     AND A.COMPANY		= 'GEI'
     AND A.PAYGROUP		= 'RET'
     AND B.PAY_OFF_CYCLE_CAL    = 'N'
     AND A.COMPANY		= B.COMPANY
     AND A.PAYGROUP		= B.PAYGROUP
     AND A.PAY_END_DT		= B.PAY_END_DT
     AND A.PAY_END_DT	       <= $pay_end_dt

End-Select
End-Procedure

!***********************************************************************
Begin-Procedure SQRW-Run-Controls 
!***********************************************************************
#debug9 show 'SQRW-Run-Controls'
  
  Do Ask-As-Of-Date
   
  !---------------------------------------------------------------------    
  !       EMPLOYEE STATUS
  !---------------------------------------------------------------------    
  Let $EmplStatusString = ''''
  Display 'Enter Employee Status or leave blank to exit.'
  While 1=1
    Input $In-EmplStatus Maxlen=1 'Employee Status'
    Uppercase $In-EmplStatus
    If Rtrim($In-EmplStatus, ' ') = ''
      Concat '''' With $EmplStatusString
      Break
    End-If
    If $EmplStatusString <> ''''
      Concat ''',''' With $EmplStatusString
    End-If
      Concat $In-EmplStatus With $EmplStatusString
  End-While
	
  If $EmplStatusString = ''''''
     Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA = '1=1'
     Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA = 'ALL'
  Else
     Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA = $GEXXX903_Emp_Stat_Alias || ' In (' || $EmplStatusString || ')'
     Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA = $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
  End-If
  !---------------------------------------------------------------------    
  !       BENEFIT PROGRAM, PLAN_TYPE 
  !---------------------------------------------------------------------    
  Let $BenefitProgramString = ''''
  Let $PlanTypeString       = ''''
  !Let $BenefitPlanString    = ''''
  !~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
  !Benefit Program
  !~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
  Let $BenefitProgramString = ''''
  Display 'Enter Benefit Program or leave blank to exit.'
  While 1=1
    Input $In-Benefit-Program Maxlen=3 'Benefit Program'
    Uppercase $In-Benefit-Program
    If Rtrim($In-Benefit-Program, ' ') = ''
       Concat '''' With $BenefitProgramString
       Break
    End-If
    If $BenefitProgramString <> ''''
       Concat ''',''' With $BenefitProgramString
    End-If
       Concat $In-Benefit-Program With $BenefitProgramString
  End-While

  If $BenefitProgramString = ''''''
     Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '1=1'
     Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = 'ALL'
  Else
     Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = $GEXXX911_Benefit_Program_Alias || ' In (' || $BenefitProgramString || ')'
     Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA
  End-If
  !~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
  !Plan Type  
  !~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  Move '''' to $PlanTypeString
  Display 'Enter Plan Type or leave blank to exit.'
  While 1=1
    Input $PlanType Maxlen=2 'Plan Type'
    Uppercase $PlanType
    if RTRIM($PlanType, ' ') = ''
       concat '''' with $PlanTypeString
       break
    end-if
    if $PlanTypeString <> ''''
       concat ''',''' with $PlanTypeString
    end-if
    concat $PlanType with $PlanTypeString
  End-While

  if $PlanTypeString = ''''''
     let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
     let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = 'ALL'
  else
     let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_Plan_Type_Alias || ' In (' || $PlanTypeString || ')'
     let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
  end-if

  !---------------------------------------------------------------------    
  !       COVERAGE ELECT
  !---------------------------------------------------------------------    
  Let $CvrgElectString = ''''
  Display 'Enter Coverage Elect or leave blank to exit.'
  While 1=1
    Input $In-CvrgElect Maxlen=1 'Coverage Elect'
    Uppercase $In-CvrgElect
    If Rtrim($In-CvrgElect, ' ') = ''
      Concat '''' With $CvrgElectString
      Break
    End-If
    If $CvrgElectString <> ''''
      Concat ''',''' With $CvrgElectString
    End-If
      Concat $In-CvrgElect With $CvrgElectString
  End-While
	
  If $CvrgElectString = ''''''
     Let $GEXXX940_INCLUDE_COVERAGE_ELECT_CRITERIA = '1=1'
     Let $GEXXX940_INCLUDE_COVERAGE_ELECT_DISPLAY_CRITERIA = 'ALL'
  Else
     Let $GEXXX940_INCLUDE_COVERAGE_ELECT_CRITERIA = $GEXXX940_Coverage_Elect_Alias || ' In (' || $CvrgElectString || ')'
     Let $GEXXX940_INCLUDE_COVERAGE_ELECT_DISPLAY_CRITERIA = $GEXXX940_INCLUDE_COVERAGE_ELECT_CRITERIA
  End-If
    
End-Procedure SQRW-Run-Controls 

!***********************************************************************
Begin-Procedure Process-Scheduler-Run-Controls
!***********************************************************************
#debug9 Show 'Process-Scheduler-Run-Controls'
  Show 'Process-Scheduler-Run-Controls'
  
  Do GEXRCBN1-SELECT-PARAMETERS
  Let $AsOfDate = &GEX_RC_BEN.AsOfDate
  SHOW '&GEX_RC_BEN.AsOfDate::' &GEX_RC_BEN.AsOfDate
  If Rtrim (&GEX_RC_BEN.AsOfDate, ' ') = ''
     Let $AsOfDate = $AsOfToday
     SHOW '$AsOfDate>' $AsOfToday  
  End-If  
   
  Do GEXXX911-Select-Benefit-Program-Parameters
  Do GEXXX912-Select-Benefit-Plan-Parameters
  Do GEXXX903-Select-Emp-Stat-Parameters
  Do GEXXX940-Select-Coverage-Elect-Parameters 
    
End-Procedure

!***********************************************************************
Begin-Procedure Print-Cover-Page
!***********************************************************************
#debug9 Show 'Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+2,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'Report As Of Date : '                                    (+2,5)
  Print $Rpt_AsOfDate                                             (0,+2)

  Print '$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA          = '  (+1,5)
  print $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA                (0,+2)
 
  print '$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA             = '  (+1,5)
  print  $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA 		  (0,+2)

  Print '$GEXXX903_Include_Emp_Stat_Display_Criteria         = '  (+1,5)
  Print $GEXXX903_Include_Emp_Stat_Display_Criteria               (0,+2)

  Print '$GEXXX940_INCLUDE_COVERAGE_ELECT_DISPLAY_CRITERIA   = '  (+1,5)
  Print $GEXXX940_INCLUDE_COVERAGE_ELECT_DISPLAY_CRITERIA         (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN: '                        (+2,2)
  Print $ORDER_BY                                                 (0,+2)
  Let #PAGE-COUNT = 0
  NEW-PAGE
End-Procedure

!***********************************************************************************
begin-procedure Open-File
!***********************************************************************************
#debug9 Show 'Open-File'

! !-----------------open file1 -----------------------------
   Let $file1 = '{OUTFILE}' || Lower($ReportID) || '.dat'
   !Let $file1 = 'c:\temp\gexbn623.dat'
   
  Open $file1
       As 1
       For-Writing
       Record=298:fixed
       Status=#filestat

  If #filestat != 0
     Show 'Error opening output file.  Program terminating.'
     Stop
  End-If
End-Procedure
 
!***********************************************************************************
Begin-Procedure Main-Process
!***********************************************************************************
#debug9 Show 'Main-Process'
                         
Begin-Select 
A.EMPLID
A.EMPL_RCD
A.COMPANY
A.PAYGROUP
B.NAME
B.LAST_NAME
B.FIRST_NAME
B.MIDDLE_NAME
B.ADDRESS1
B.ADDRESS2
B.CITY
B.STATE
B.POSTAL
B.SEX
E.HIRE_DT
E.TERMINATION_DT
!E.REHIRE_DT 			!GEX-MXT ADDED FOR REHIRE DATE LOGIC ON 03/24/2008
D.PLAN_TYPE
D.COVERAGE_BEGIN_DT
D.EMPL_CONTRBUTN_AMT
D.ANNUAL_PLEDGE
D.EFFDT
D.COVERAGE_ELECT
D.COVERAGE_ELECT_DT
D.COVERAGE_END_DT
SYSDATE        			&GEXJOB_REH_ASOFDATE 	!GEX-MXT ADDED FOR REHIRE DATE LOGIC IN 9.0
B.BIRTHDATE	!GEXBN_848_PRJE118801 VENDAXG 2012-11-05
  Add 1 to #main-process
  let $Data-Found-Flag = 'Y'
					
  Let $PLAN_TYPE           = &D.PLAN_TYPE
  Let $COVERAGE_BEGIN_DT   = edit(&D.COVERAGE_BEGIN_DT,'yyyymmdd')	                  
  Let $INLAST              = upper(&B.LAST_NAME)
  Let $INFIRST		   = upper(&B.FIRST_NAME)
  Let $INMI		   = upper(substr(&B.MIDDLE_NAME, 1,1))
  Let $INADDR		   = upper(&B.ADDRESS1)
  Let $INADDR2		   = upper(&B.ADDRESS2)
  Let $INCITY		   = upper(&B.CITY)
  Let $INSTATE		   = upper(&B.STATE)
  Let $INZIP		   = &B.POSTAL	    
  Let $INSEX               = &B.SEX                                                               
  Let $INDOB	           =  edit(&B.BIRTHDATE,'yyyymmdd')          !GEXBN_848_PRJE118801 VENDAXG 2012-11-05
  ! GEX-MXT 03/24/2008 Fixed for REHIRE DT
   let $GEXJOB_REH_EMPLID = &A.EMPLID
   let #GEXJOB_REH_EMPLRCD = &A.EMPL_RCD
!   let $GEXJOB_REH_ASOFDATE = &GEXJOB_REH_ASOFDATE						! ISDVASS used $AsOfDate instead of sysdate
   let $GEXJOB_REH_ASOFDATE = $AsOfDate							          !  ISDVASS used $AsOfDate instead of sysdate
   do Get-Job-Rehire-Dt
   if $GEXJOB_REH_REHIRE_DT <> ''
     let $GEXJOB_REH_REHIRE_DT = strtodate($GEXJOB_REH_REHIRE_DT,'DD-MON-YYYY')
   end-if
  ! GEX-MXT 03/24/2008 Fixed for REHIRE DT   
  
  Let $HIRE_DT     = edit(&E.HIRE_DT,'yyyymmdd')
  !Let $REHIRE_DT   = edit($REHIRE_DT,'yyyymmdd')	!GEX-MXT COMMENTED FOR REHIRE DATE LOGIC
  Let $REHIRE_DT   = edit($GEXJOB_REH_REHIRE_DT,'yyyymmdd')	!GEX-MXT ADDED FOR REHIRE DATE LOGIC
  Let $INFRDATE    = edit(&D.COVERAGE_BEGIN_DT,'yyyymmdd')

  !show 'Emplid : ' $GEXJOB_REH_EMPLID ',$REHIRE_DT' $REHIRE_DT  ',$HIRE_DT' $HIRE_DT
  IF $REHIRE_DT = ''
     LET $INHDATE = $HIRE_DT
  ELSE
     LET $INHDATE = $REHIRE_DT	     
  END-IF      

  Do Get-Check-Date
  Let $INPYDATE		   = edit(&CD.CHECK_DT,'yyyymmdd')
  IF $INPYDATE	 = ''
     LET $INPYDATE = '19000101'
  END-IF      
!-------------------------------------------------------------------------------
       !Determine the TERMINATION DT
       !And here Term date is not empl termintion, this is empl fsa termination dt
!--------------------------------------------------------------------------------
  Let $process_ee = 'Y'
  Evaluate &D.COVERAGE_ELECT 
     When = 'T'
     When = 'W'
       Do Get-Prior-Covrg-Elect
       if $prior_elect = 'E'
          #debuga show 'w or t cbd tdt '  &a.emplid ' ' &D.COVERAGE_ELECT ' ' &D.COVERAGE_BEGIN_DT ' ' $TERMINATION_DT
          Let $TERMINATION_DT  = dateadd(&D.COVERAGE_BEGIN_DT, 'DAY', - 1)   
          Let $INTODATE = edit($TERMINATION_DT,'yyyymmdd')
          Let $INFRDATE    = edit(&P.COVERAGE_BEGIN_DT,'yyyymmdd')
	  if  $INFRDATE < $year_begin_dt_cmp
	      #debuga show '$INFRDATE < $year_begin_dt_cmp ee '  &a.emplid ' ' $INFRDATE ' ' $year_begin_dt_cmp
              Let $process_ee = 'N'
	  end-if
       else
          !prior row not a E, so skip this person
	  #debuga show 'prior row not e '  &a.emplid ' $prior_elect ' $prior_elect
          Let $process_ee = 'N'
       end-if
       break
     When-Other     
       Let $INTODATE  = $YYYY || '1231'
  End-Evaluate 
  
  if $process_ee = 'Y'
     Add 1 to #main-process
     Do Evaluate-Plan-Type
     Do Get-Deduct-Amt
     Do Write-Detail-Record
     Do Print-rpt-line
  end-if
     
FROM PS_JOB A, 
     PS_PERSONAL_DATA B, 
     PS_BEN_PROG_PARTIC C, 
     PS_FSA_BENEFIT D, 
     PS_EMPLOYMENT E
WHERE A.EFFDT =
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE A.EMPLID = A_ED.EMPLID
          AND A.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= $AsOfDate)  
  AND A.EFFSEQ =
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE A.EMPLID = A_ES.EMPLID
          AND A.EMPL_RCD = A_ES.EMPL_RCD
          AND A.EFFDT = A_ES.EFFDT)
  AND A.EMPLID = B.EMPLID 
  AND A.EMPLID = C.EMPLID
  AND A.EMPL_RCD = C.EMPL_RCD
  AND C.EFFDT =
        (SELECT MAX(C_ED.EFFDT) FROM PS_BEN_PROG_PARTIC C_ED
        WHERE C.EMPLID = C_ED.EMPLID
          AND C.EMPL_RCD = C_ED.EMPL_RCD
          AND C.COBRA_EVENT_ID = C_ED.COBRA_EVENT_ID
          AND C_ED.EFFDT <= A.EFFDT)
  AND C.EMPLID = D.EMPLID
  AND C.EMPL_RCD = D.EMPL_RCD
  AND C.COBRA_EVENT_ID = D.COBRA_EVENT_ID
  AND D.EFFDT =
        (SELECT MAX(D_ED.EFFDT) FROM PS_FSA_BENEFIT D_ED
        WHERE D.EMPLID = D_ED.EMPLID
          AND D.EMPL_RCD = D_ED.EMPL_RCD
          AND D.COBRA_EVENT_ID = D_ED.COBRA_EVENT_ID
          AND D.PLAN_TYPE = D_ED.PLAN_TYPE
          AND D.BENEFIT_NBR = D_ED.BENEFIT_NBR
          AND D_ED.EFFDT <= $AsOfDate 
          AND D_ED.COVERAGE_BEGIN_DT < $Next_year_begin_dt)	!GEXBN_848_PRJE118801 VENDAXG 2012-11-05
  AND D.EMPLID = E.EMPLID
  AND D.EMPL_RCD = E.EMPL_RCD
  and D.COVERAGE_BEGIN_DT >= $year_begin_dt
  
  AND   [$GEXXX903_Include_Emp_Stat_Criteria]
  AND   [$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA]
  AND   [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA]   
  AND   [$GEXXX940_INCLUDE_COVERAGE_ELECT_CRITERIA]    

 [$ORDER_BY]

End-Select
End-Procedure

!***********************************************************************************
Begin-Procedure Get-Prior-Covrg-Elect
!***********************************************************************************
#debug9 Show 'Get-Prior-Covrg-Elect'

  let $prior_elect = ' '

Begin-SELECT

P.COVERAGE_ELECT 
P.COVERAGE_BEGIN_DT

  let $prior_elect = &P.COVERAGE_ELECT

FROM PS_FSA_BENEFIT P
  WHERE P.EMPLID = &A.EMPLID
    AND P.EMPL_RCD = &A.EMPL_RCD
    AND P.PLAN_TYPE = &D.PLAN_TYPE 
    AND P.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_FSA_BENEFIT
        WHERE P.EMPLID = EMPLID
          AND P.EMPL_RCD = EMPL_RCD
          AND P.COBRA_EVENT_ID = COBRA_EVENT_ID
          AND P.PLAN_TYPE = PLAN_TYPE
          AND P.BENEFIT_NBR = BENEFIT_NBR
          AND EFFDT < &D.EFFDT) 
    
End-Select
End-Procedure

!***********************************************************************************
Begin-procedure  Evaluate-Plan-Type
!***********************************************************************************

  !SHOW '$PLAN_TYPE:>' $PLAN_TYPE
  
  Evaluate $PLAN_TYPE
   when ='60'
    Let $INCOV = 'URM'
   break
  when ='61'
   Let $INCOV  = 'DEP'
  End-Evaluate      
  
End-Procedure

!***********************************************************************************
Begin-procedure  Get-Deduct-Amt
!***********************************************************************************      
Begin-Select 

sum(FSA.DED_CUR)	&FSA_DED_CUR

   let $fsa_Data_Found_Flag = 'Y'
  
   Let #DEDUCTION_AMT  = &FSA_DED_CUR	

   Let $DEDUCTION_AMT = edit(#DEDUCTION_AMT,'99999.99') 
   
   #ifdef debuga
      show 'emplid pln typ COVERAGE_ELECT $DEDUCTION_AMT ' &A.EMPLID ' ' &D.PLAN_TYPE ' ' &D.COVERAGE_ELECT ' ' $DEDUCTION_AMT
   #endif
   
FROM PS_PAY_CHECK PC, PS_PAY_DEDUCTION FSA
WHERE PC.COMPANY = FSA.COMPANY
     AND PC.PAYGROUP = FSA.PAYGROUP
     AND PC.PAY_END_DT = FSA.PAY_END_DT
     AND PC.OFF_CYCLE = FSA.OFF_CYCLE
     AND PC.PAGE_NUM = FSA.PAGE_NUM
     AND PC.LINE_NUM = FSA.LINE_NUM
     AND PC.SEPCHK = FSA.SEPCHK
     AND FSA.DEDCD IN ('HCARE','DEPCAR')
     AND FSA.PAY_END_DT = (SELECT MAX(B1.PAY_END_DT) FROM PS_PAY_DEDUCTION B1
                                WHERE B1.COMPANY =FSA.COMPANY AND
	 	 	              B1.PAYGROUP =FSA.PAYGROUP AND 
	 	 	              B1.PAY_END_DT <= $AsOfDate)
     AND FSA.PLAN_TYPE = &D.PLAN_TYPE
     AND PC.EMPLID    = &A.EMPLID
     AND PC.EMPL_RCD  = &A.EMPL_RCD
end-select

End-Procedure

!***********************************************************************************
Begin-Procedure Write-Detail-Record
!***********************************************************************************
 !show 'entered into  Write-Detail-Record'
 ! Extract Layout

  !INSSN	CHAR	9	1-9		$emplid
  !INDIV	CHAR	4	10-13
  !INCOV	CHAR	3	14-16
  !INFRDATE	CHAR	8	17-24		$COVERAGE_BEGIN_DT
  !INTODATE	CHAR	8	25-32		$EFFDT
  !INLAST	CHAR	15	33-47		$LAST_NAME		
  !INFIRST	CHAR	15	48-62		$FIRST_NAME
  !INMI		CHAR	1	63-63		$MIDDLE_NAME
  !INADDR	CHAR	30	64-93		$ADDRESS1
  !INCITY	CHAR	20	94-113
  !INSTATE	CHAR	2	114-115
  !INZIP	CHAR	9	116-124
  !INPYDATE	CHAR	8	125-132
  !INPLGAMT	NUM	6.2	133-141
  !INFILL1	NUM	2	142-143
  !INCONTR	NUM	6.2	144-152
  !INHDATE	CHAR	8	153-160
  !INDOB	CHAR	8	161-168
  !INSEX	CHAR	1	169-169
  !INADDR2	CHAR	25	170-194
  !INEMPCON	NUM	6.2	195-203
  !INEMPPLG	NUM	6.2	204-212
  !INFORM3	NUM	6.2	213-221
  !INFORM4	NUM	6.2	222-230
  !INFORM5	NUM	6.2	231-239
  !INFORM6	NUM	6.2	240-248
  !INUPDATE	CHAR	1	249-249
  !INFILL	CHAR	49	250-298

  Let $Indiv    = '0001'  
  Let $INEMPCON = '000000.00'  
  Let $INEMPPLG = '000000.00'
  Let $INFORM3  = '000000.00'  
  Let $INFORM4  = '000000.00'
  Let $INFORM5  = '000000.00'
  Let $INFORM6  = '000000.00'
  Let $INUPDATE = 'Y'
  let $INFILL   = rpad($FILLER,49,' ')  
  LET $INPLGAMT = EDIT(&D.ANNUAL_PLEDGE,'099999.99')
  LET $INCONTR  = EDIT(#DEDUCTION_AMT,'099999.99')
  !Let $INDOB    = '19000101'	!GEXBN_848_PRJE118801 VENDAXG 2012-11-05
  Let $INFILL1  = EDIT(#pay_period,'09')
  
  write 1 from  &A.EMPLID:9  
                $Indiv:4
		$Incov:3
		$INFRDATE:8
		$INTODATE:8
  	 	$INLAST:15
		$INFIRST:15
  		$INMI:1
		$INADDR:30       
		$INCITY:20         
		$INSTATE:2 	
		$INZIP:9
		$INPYDATE:8
		$INPLGAMT:9
		$INFILL1:2
		$INCONTR:9 
		$INHDATE:8 
		$INDOB:8 
		$INSEX:1
		$INADDR2:25
  		$INEMPCON:9 	
  		$INEMPPLG:9        
  		$INFORM3:9
		$INFORM4:9
		$INFORM5:9
		$INFORM6:9
		$INUPDATE:1
		$INFILL:49
		                                                                   	      
	Add 1 to #recs-written   

  If #filestat <> 0
     Show 'Error writing output file1.  Program terminating.'
     Stop
  End-If
  	       

End-Procedure

!***********************************************************************************
Begin-procedure Get-Check-Date
!***********************************************************************************
#debug9 Show 'Get-Check-Date'
   
Begin-SELECT

CD.CHECK_DT

FROM PS_PAY_CHECK CD
WHERE CD.EMPLID   = &A.EMPLID
  AND CD.EMPL_RCD = &A.EMPL_RCD
  AND CD.COMPANY  = &A.COMPANY
  AND CD.PAYGROUP = &A.PAYGROUP
  AND CD.CHECK_DT = 
       (SELECT MAX(check_dt) FROM PS_PAY_CHECK
            WHERE CD.COMPANY  = COMPANY
              AND CD.PAYGROUP = PAYGROUP
	      AND emplid      = &A.EMPLID
              AND EMPL_RCD    = &A.EMPL_RCD
              and off_cycle   ='N'            ! ISDVDZK     Added on 18-sept-2008 as it was picking wrong date
	      AND CHECK_DT   <= $ASOFDATE)

end-select

End-Procedure


!!***********************************************************************************
Begin-procedure Print-rpt-line
!***********************************************************************************
! SHOW ' Entered into -print-rpt-line'
#debug9 Show 'print-rpt-line'
 
 let $INPLGAMT_PRNT = ltrim(edit(&D.ANNUAL_PLEDGE,'99,999.99'), ' ')
 let $INCONTR_PRNT = ltrim(edit(#DEDUCTION_AMT,'9,999.99'), ' ')

 Print &A.EMPLID	(+1,{#col_EMPLID}) 
 Print &D.PLAN_TYPE	(,{#col_Plan_ID})
 Print $INFRDATE	(,{#col_INFRDATE})	
 Print $INTODATE	(,{#col_INTODATE})	
 Print &B.NAME          (,{#col_NAME})              
 Print $INADDR		(,{#col_ADDRESS1})                  
 Print $INADDR2         (,{#col_ADDRESS2})                  
 Print $INCITY          (,{#col_CITY})                  
 Print $INSTATE 	(,{#col_STATE})                  
 Print $INZIP  		(,{#col_POSTAL})	
 Print $INPYDATE 	(,{#col_INPYDATE})    
 Print $INPLGAMT_PRNT	(,{#col_INPLGAMT})	
 Print $INFILL1		(,{#col_INFILL1})	
 Print $INCONTR_PRNT	(,{#col_INCONTR})
 Print $INHDATE		(,{#col_INHDATE})    
 
End-procedure

!***********************************************************************************
Begin-Procedure Finalization
!***********************************************************************************
 #debug9 Show 'Finalization'

  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (5) center
  End-If

  Do Format-Number(#recs-written,$recs-written,'888,888,888')
  Do Format-Number(#main-process,$main-process,'888,888,888')
  
   	  Show ''
	  Show $recs-written  ' records written to ' $file1
	  show $main-process  ' records read from main process'
	  Show ''
  Do Close-File
  
  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc
  
   !-------------------------------------------------
   !If the user runs this job using HRBATCH Id 
   !and forgets to remove the ASOFDATE on the page
   !this code will remove the ASOFDATE from the Run Control page
   
    Let $As_Of_Date = &GEX_RC_BEN.AsOfDate
    #debuga SHOW '&GEX_RC_BEN.AsOfDate > ' &GEX_RC_BEN.AsOfDate
    
    If Rtrim (&GEX_RC_BEN.AsOfDate, ' ') <> ''
       Do Update-AsOfDate
    End-If
   !-------------------------------------------------
       
  Show 'Successful end of report'
End-Procedure

!***********************************************************************************
Begin-Procedure Update-AsOfDate
  show 'Entered into update-asofdate '
  SHOW '$Prcs_OprID       :' $Prcs_OprID
  SHOW '$Prcs_Run_Cntl_ID :' $Prcs_Run_Cntl_ID
begin-sql
update ps_gex_rc_ben 
set asofdate = '' 
where oprid     = $Prcs_OprID
and run_cntl_id = $Prcs_Run_Cntl_ID
end-sql

 
End-Procedure


!***********************************************************************************
Begin-Procedure Close-File
!***********************************************************************************
#debug9 Show 'Close-File'
  Close 1
  If #filestat != 0
     Show 'Error closing output file.  Program terminating.'
     Stop
  End-If
End-Procedure



#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx911.sqc'  !
#include 'gexxx912.sqc'  !
#include 'gexxx920.sqc'  !Get ben single row run control
#include 'gexxx940.sqc'  !Get Coverage Elect multiple row table
#include 'gexxx951.sqc'
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#include 'gexrehdt.sqc'	 !GEX-MXT 03/24/2008 Fixed for REHIRE DT