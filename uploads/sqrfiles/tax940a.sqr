!****************************************************
!  TAX940A: FUTA Taxable Wages by UI State Report   *
!****************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2012, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2012/09/17:14:17:26                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  872690                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Stdapi-Term
end-report

begin-procedure Init-Report
  do Stdapi-Init
  move 'TAX940A' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  move $Tax940A_Title to $ReportTitle
  display $ReportTitle

  do Init-DateTime
  do Init-Number


  if $Prcs_Process_Instance = ''
    do Get-From-Thru-Dates
    move $AsOfDate to $ThruDate
  else
    do Get-Report-Parameters

  end-if


  do Format-DateTime($FromDate, $FmtFromDate, {DEFCMP}, '', '')
  do Format-DateTime($ThruDate, $FmtThruDate, {DEFCMP}, '', '')

  do Format-DateTime($ThruDate, $out, {DEFCMP}, '', '')
  let $temp1 = substr($out, 1, 4)
  let $FromDateWork  = $temp1 || '0101'
  do Format-DateTime($FromDateWork, $FromYtdDate, {DEFCMP}, '', 'native')

  do Get-Current-DateTime

end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from PAY102CN  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('TAX940A', 'TITLE_WORK_COMP'   , $Tax940A_Title           , #dummy_width)
   do Get_Field_Information ('TAX940A', 'UISTATE'           , $Tax940A_UIState         , #dummy_width)
   do Get_Field_Information ('TAX940A', 'EMPLID'            , $Tax940A_EMPLID          , #dummy_width)
   do Get_Field_Information ('TAX940A', 'EMPNAME'           , $Tax940A_EmpName         , #dummy_width)
   do Get_Field_Information ('TAX940A', 'CHECK'             , $Tax940A_Check           , #dummy_width)
   do Get_Field_Information ('TAX940A', 'PAYDATE'           , $Tax940A_PayDate         , #dummy_width)
   do Get_Field_Information ('TAX940A', 'WAGE'              , $Tax940A_Wage            , #dummy_width)
   do Get_Field_Information ('TAX940A', 'FOR_PERIOD_HDG'    , $Tax940A_for_period_hdg  , #dummy_width)
   do Get_Field_Information ('TAX940A', 'THROUGH_HDG'       , $Tax940A_through_hdg     , #dummy_width)
   do Get_Field_Information ('TAX940A', 'ALL'               , $Tax940A_All             , #dummy_width)
   do Get_Field_Information ('TAX940A', 'NO_UI_STATE'       , $Tax940A_NO_UI_STATE     , #dummy_width)
   do Get_Field_Information ('TAX940A', 'EIN'               , $Tax940A_EIN             , #dummy_width)

end-procedure

begin-heading 8

  move $Company   to $Hold-Company
  move $Prev_Comp to $Company
  #Include 'stdhtr02.sqc'
  print $Tax940A_EIN                      (+1,01)
  move &CT.Federal_EIN to $StoredEIN     099999999
  print $StoredEIN                        (0,+01)

  print $tax940a_for_period_hdg           (+1,01)
  do Format-DateTime($FromDate, $out, {DEFDATE}, '', '')
  print $out                               (0,+1)
  print $tax940a_through_hdg              (0,+1)
  do Format-DateTime($ThruDate, $out, {DEFDATE}, '', '')
  print $out                               (0,+1)

!-----------------column headings line1

  print $Tax940A_UIState                   (+002, 002)
  print $Tax940A_EMPLID                    ( 000, 027)
  print $Tax940A_EmpName                   ( 000, 040)
  print $Tax940A_Check                     ( 000, 082)
  print $Tax940A_PayDate                   ( 000, 110)
  print $Tax940A_Wage                      ( 000, 156)
  move $Hold-Company to $Company

end-heading

begin-procedure Process-Main

!  if report parameters show to just report summary the call summary
!  otherwise do the employee detail

!  comments can be removed when employee leve detail options are required

! if &RC_TAX940A.PY_TAX940A_OPTIONS = 'S'
    do Get-Company-Summary
! else
!   if &RC_TAX940A.PY_TAX940A_OPTIONS = 'D'
!     do Get-Payment-Date-Detail
!   else
!     do Get-Employee-Detail
!   end-if
! end-if


end-procedure


begin-procedure Get-Company-Summary

  let $First-Row = 'Y'

begin-select

PC.COMPANY
SN.DESCR

#ifdef DB2ALL
DECIMAL(SUM(PT1.TXGRS_CUR),15,3)   &PT1.TxGrs_Cur
#else
SUM(PT1.TXGRS_CUR)                 &PT1.TxGrs_Cur
#endif

  move &PC.COMPANY            to  $Company

  if $First-Row = 'Y'
    move $Company   to $Prev_Comp
    let $First-Row = 'N'
  end-if

  if $Company <> $Prev_Comp
    do Company-Change
  end-if

  print &SN.Descr                   (+001, 002)
  print $Tax940A_All                ( 000, 027)
  print $Tax940A_All                ( 000, 090)
  print $Tax940A_All                ( 000, 110)
  do Format-Number(&PT1.TxGrs_Cur,$Out,'999,999,999,999,999.00')
  print $Out                        ( 000, 152)

  move $Company   to $Prev_Comp

FROM  PS_PAY_CHECK PC,
      PS_PAY_TAX   PT1,
      PS_PAY_TAX   PT2,
      PS_STATE_NAMES_TBL SN
WHERE PC.CHECK_DT >=  &RC_TAX940A.FromDate
AND   PC.CHECK_DT <=  &RC_TAX940A.ThruDate
AND   PC.COMPANY    = PT1.COMPANY
AND   PC.PAYGROUP   = PT1.PAYGROUP
AND   PC.PAY_END_DT = PT1.PAY_END_DT
AND   PC.OFF_CYCLE  = PT1.OFF_CYCLE
AND   PC.PAGE_NUM   = PT1.PAGE_NUM
AND   PC.LINE_NUM   = PT1.LINE_NUM
AND   PC.SEPCHK     = PT1.SEPCHK
AND   PC.PAYCHECK_STATUS IN ('A','F','R')
AND   PT1.STATE = '$U'
AND   PT1.TAX_CLASS = 'U'
AND   PT2.COMPANY    = PC.COMPANY
AND   PT2.PAYGROUP   = PC.PAYGROUP
AND   PT2.PAY_END_DT = PC.PAY_END_DT
AND   PT2.OFF_CYCLE  = PC.OFF_CYCLE
AND   PT2.PAGE_NUM   = PC.PAGE_NUM
AND   PT2.LINE_NUM   = PC.LINE_NUM
AND   PT2.SEPCHK     = PC.SEPCHK
AND   PT2.STATE BETWEEN 'AA' AND 'ZZ'
AND   PT2.TAX_CLASS = 'U'
AND   SN.COUNTRY     = 'USA'
AND   SN.STATE       = PT2.STATE

GROUP BY PC.COMPANY, SN.DESCR
ORDER BY PC.COMPANY, SN.DESCR


end-select

end-procedure


begin-procedure Company-Change

begin-select

PC3.COMPANY

#ifdef DB2ALL
DECIMAL(SUM(PT3.TXGRS_CUR),15,3)   &PT3.TxGrs_Cur
#else
SUM(PT3.TXGRS_CUR)                 &PT3.TxGrs_Cur
#endif

  print $Tax940A_NO_UI_STATE        (+001, 002)
  print $Tax940A_All                ( 000, 027)
  print $Tax940A_All                ( 000, 090)
  print $Tax940A_All                ( 000, 110)
  do Format-Number(&PT3.TxGrs_Cur,$Out,'999,999,999,999,999.00')
  print $Out                        ( 000, 152)

FROM  PS_PAY_CHECK PC3,
      PS_PAY_TAX   PT3
WHERE PC3.COMPANY    = $Prev_Comp
AND   PC3.CHECK_DT >=  &RC_TAX940A.FromDate
AND   PC3.CHECK_DT <=  &RC_TAX940A.ThruDate
AND   PC3.COMPANY    = PT3.COMPANY
AND   PC3.PAYGROUP   = PT3.PAYGROUP
AND   PC3.PAY_END_DT = PT3.PAY_END_DT
AND   PC3.OFF_CYCLE  = PT3.OFF_CYCLE
AND   PC3.PAGE_NUM   = PT3.PAGE_NUM
AND   PC3.LINE_NUM   = PT3.LINE_NUM
AND   PC3.SEPCHK     = PT3.SEPCHK
AND   PC3.PAYCHECK_STATUS IN ('A','F','R')
AND   PT3.STATE = '$U'
AND   PT3.TAX_CLASS = 'U'
AND   NOT EXISTS (SELECT 'X'
                  FROM PS_PAY_TAX   PT4
WHERE PT4.COMPANY    = PC3.COMPANY
AND   PT4.PAYGROUP   = PC3.PAYGROUP
AND   PT4.PAY_END_DT = PC3.PAY_END_DT
AND   PT4.OFF_CYCLE  = PC3.OFF_CYCLE
AND   PT4.PAGE_NUM   = PC3.PAGE_NUM
AND   PT4.LINE_NUM   = PC3.LINE_NUM
AND   PT4.SEPCHK     = PC3.SEPCHK
AND   PT4.STATE BETWEEN 'AA' AND 'ZZ'
AND   PT4.TAX_CLASS = 'U' )

GROUP BY PC3.COMPANY
ORDER BY PC3.COMPANY

end-select

  do Get-Employee-Detail-NoState

  new-page
end-procedure


begin-procedure Company-Change-E

begin-select

EPC3.COMPANY
EPC3.EMPLID
EPC3.PAYCHECK_NBR
EPC3.CHECK_DT
EPN3.NAME

#ifdef DB2ALL
DECIMAL(SUM(EPT3.TXGRS_CUR),15,3)   &EPT3.TxGrs_Cur
#else
SUM(EPT3.TXGRS_CUR)                 &EPT3.TxGrs_Cur
#endif


  print $Tax940A_NO_UI_STATE         (+001, 002)
  print &EPC3.emplid                 ( 000, 027)
  print &EPN3.Name                   ( 000, 040)
  print &EPC3.PAYCHECK_NBR           ( 000, 090)
  print &EPC3.CHECK_DT               ( 000, 110)
  do Format-Number(&EPT3.TxGrs_Cur,$Out,'999,999,999,999,999.00')
  print $Out                        ( 000, 152)

FROM  PS_PAY_CHECK EPC3,
      PS_PAY_TAX   EPT3,
      PS_PY_TAX940A_EMPL EEMP3,
      PS_PERSON_NAME EPN3
WHERE EPC3.COMPANY    = $Prev_Comp
AND   EPC3.CHECK_DT >=  &RC_TAX940A.FromDate
AND   EPC3.CHECK_DT <=  &RC_TAX940A.ThruDate
AND   EPC3.COMPANY    = EPT3.COMPANY
AND   EPC3.PAYGROUP   = EPT3.PAYGROUP
AND   EPC3.PAY_END_DT = EPT3.PAY_END_DT
AND   EPC3.OFF_CYCLE  = EPT3.OFF_CYCLE
AND   EPC3.PAGE_NUM   = EPT3.PAGE_NUM
AND   EPC3.LINE_NUM   = EPT3.LINE_NUM
AND   EPC3.SEPCHK     = EPT3.SEPCHK
AND   EPC3.PAYCHECK_STATUS IN ('A','F','R')
AND   EPT3.STATE = '$U'
AND   EPT3.TAX_CLASS = 'U'
AND   EPT3.TXGRS_CUR <> 0
AND   NOT EXISTS (SELECT 'X'
                  FROM  PS_PAY_TAX   EPT4
                  WHERE EPT4.COMPANY    = EPC3.COMPANY
                  AND   EPT4.PAYGROUP   = EPC3.PAYGROUP
                  AND   EPT4.PAY_END_DT = EPC3.PAY_END_DT
                  AND   EPT4.OFF_CYCLE  = EPC3.OFF_CYCLE
                  AND   EPT4.PAGE_NUM   = EPC3.PAGE_NUM
                  AND   EPT4.LINE_NUM   = EPC3.LINE_NUM
                  AND   EPT4.SEPCHK     = EPC3.SEPCHK
                  AND   EPT4.STATE BETWEEN 'AA' AND 'ZZ'
                  AND   EPT4.TAX_CLASS = 'U')
AND   EEMP3.OPRID          = $Prcs_OprID
AND   EEMP3.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
AND   EEMP3.EMPLID     = EPC3.EMPLID
AND   EPN3.EMPLID      = EPC3.EMPLID

GROUP BY EPC3.COMPANY, EPC3.EMPLID, EPC3.PAYCHECK_NBR, EPC3.CHECK_DT, EPN3.NAME
ORDER BY EPC3.COMPANY, EPC3.EMPLID, EPC3.PAYCHECK_NBR, EPC3.CHECK_DT, EPN3.NAME

end-select
  new-page
end-procedure


begin-procedure Company-Change-D
  new-page
end-procedure


begin-procedure Get-Employee-Detail

  let $First-Row = 'Y'

begin-select

EPC.COMPANY
ESN.DESCR
EPC.EMPLID
EPC.PAYCHECK_NBR
EPC.CHECK_DT
EPN.NAME

#ifdef DB2ALL
DECIMAL(SUM(EPT1.TXGRS_CUR),15,3)   &EPT1.TxGrs_Cur
#else
SUM(EPT1.TXGRS_CUR)                 &EPT1.TxGrs_Cur
#endif

  move &EPC.COMPANY            to  $Company

  if $First-Row = 'Y'
    move $Company   to $Prev_Comp
    let $First-Row = 'N'
  end-if

  if $Company <> $Prev_Comp
    do Company-Change-E
  end-if

  print &ESN.Descr                   (+001, 002)
  print &EPC.emplid                  ( 000, 027)
  print &EPN.Name                    ( 000, 040)
  print &EPC.PAYCHECK_NBR            ( 000, 090)
  print &EPC.CHECK_DT                ( 000, 110)
  do Format-Number(&EPT1.TxGrs_Cur,$Out,'999,999,999,999,999.00')
  print $Out                        ( 000, 152)

  move $Company   to $Prev_Comp

FROM  PS_PAY_CHECK EPC,
      PS_PAY_TAX   EPT1,
      PS_PAY_TAX   EPT2,
      PS_STATE_NAMES_TBL ESN,
      PS_PY_TAX940A_EMPL EEMP,
      PS_PERSON_NAME EPN
WHERE EPC.CHECK_DT >=  &RC_TAX940A.FromDate
AND   EPC.CHECK_DT <=  &RC_TAX940A.ThruDate
AND   EPC.COMPANY    = EPT1.COMPANY
AND   EPC.PAYGROUP   = EPT1.PAYGROUP
AND   EPC.PAY_END_DT = EPT1.PAY_END_DT
AND   EPC.OFF_CYCLE  = EPT1.OFF_CYCLE
AND   EPC.PAGE_NUM   = EPT1.PAGE_NUM
AND   EPC.LINE_NUM   = EPT1.LINE_NUM
AND   EPC.SEPCHK     = EPT1.SEPCHK
AND   EPC.PAYCHECK_STATUS IN ('A','F','R')
AND   EPT1.STATE = '$U'
AND   EPT1.TAX_CLASS = 'U'
AND   EPT1.TXGRS_CUR <> 0
AND   EPT2.COMPANY    = EPC.COMPANY
AND   EPT2.PAYGROUP   = EPC.PAYGROUP
AND   EPT2.PAY_END_DT = EPC.PAY_END_DT
AND   EPT2.OFF_CYCLE  = EPC.OFF_CYCLE
AND   EPT2.PAGE_NUM   = EPC.PAGE_NUM
AND   EPT2.LINE_NUM   = EPC.LINE_NUM
AND   EPT2.SEPCHK     = EPC.SEPCHK
AND   EPT2.STATE BETWEEN 'AA' AND 'ZZ'
AND   EPT2.TAX_CLASS = 'U'
AND   ESN.COUNTRY     = 'USA'
AND   ESN.STATE       = EPT2.STATE
AND   EEMP.OPRID          = $Prcs_OprID
AND   EEMP.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
AND   EEMP.EMPLID     = EPC.EMPLID
AND   EPN.EMPLID      = EPC.EMPLID

GROUP BY EPC.COMPANY, ESN.DESCR, EPC.EMPLID, EPC.PAYCHECK_NBR, EPC.CHECK_DT, EPN.NAME
ORDER BY EPC.COMPANY, ESN.DESCR, EPC.EMPLID, EPC.PAYCHECK_NBR, EPC.CHECK_DT, EPN.NAME

end-select

end-procedure

begin-procedure Get-Employee-Detail-NoState

  print ''                 (+01,01)

begin-select

EMA.EMPLID
EMA.PAYCHECK_NBR
EMA.CHECK_DT
EMC.NAME

#ifdef DB2ALL
DECIMAL(SUM(EMB.TXGRS_CUR),15,3)   &EMB.TxGrs_Cur
#else
SUM(EMB.TXGRS_CUR)                 &EMB.TxGrs_Cur
#endif

  print &EMA.emplid                  (+001, 027)
  print &EMC.Name                    ( 000, 040)
  print &EMA.PAYCHECK_NBR            ( 000, 082)
  print &EMA.CHECK_DT                ( 000, 110)
  do Format-Number(&EMB.TxGrs_Cur,$Out,'999,999,999,999,999.00')
  print $Out                        ( 000, 152)

FROM  PS_PAY_CHECK EMA,
      PS_PAY_TAX   EMB,
      PS_PERSON_NAME EMC
WHERE EMA.COMPANY    = $Prev_Comp
AND   EMA.CHECK_DT >=  &RC_TAX940A.FromDate
AND   EMA.CHECK_DT <=  &RC_TAX940A.ThruDate
AND   EMA.COMPANY    = EMB.COMPANY
AND   EMA.PAYGROUP   = EMB.PAYGROUP
AND   EMA.PAY_END_DT = EMB.PAY_END_DT
AND   EMA.OFF_CYCLE  = EMB.OFF_CYCLE
AND   EMA.PAGE_NUM   = EMB.PAGE_NUM
AND   EMA.LINE_NUM   = EMB.LINE_NUM
AND   EMA.SEPCHK     = EMB.SEPCHK
AND   EMA.PAYCHECK_STATUS IN ('A','F','R')
AND   EMB.STATE = '$U'
AND   EMB.TAX_CLASS = 'U'
AND   EMB.TXGRS_CUR <> 0
AND   NOT EXISTS (SELECT 'X'
                  FROM PS_PAY_TAX   EMB2
WHERE   EMB2.COMPANY    = EMA.COMPANY
AND   EMB2.PAYGROUP   = EMA.PAYGROUP
AND   EMB2.PAY_END_DT = EMA.PAY_END_DT
AND   EMB2.OFF_CYCLE  = EMA.OFF_CYCLE
AND   EMB2.PAGE_NUM   = EMA.PAGE_NUM
AND   EMB2.LINE_NUM   = EMA.LINE_NUM
AND   EMB2.SEPCHK     = EMA.SEPCHK
AND   EMB2.STATE BETWEEN 'AA' AND 'ZZ'
AND   EMB2.TAX_CLASS = 'U' )
AND   EMC.EMPLID      = EMA.EMPLID


GROUP BY EMA.EMPLID, EMA.CHECK_DT, EMA.PAYCHECK_NBR, EMC.NAME
ORDER BY EMA.EMPLID, EMA.CHECK_DT, EMA.PAYCHECK_NBR, EMC.NAME

end-select

end-procedure

begin-procedure Get-Payment-Date-Detail

  let $First-Row = 'Y'

begin-select

DPC.COMPANY
DSN.DESCR
DPC.CHECK_DT
DPC.PAYCHECK_NBR
DPC.EMPLID
DPN.NAME

#ifdef DB2ALL
DECIMAL(SUM(DPT1.TXGRS_CUR),15,3)   &DPT1.TxGrs_Cur
#else
SUM(DPT1.TXGRS_CUR)                 &DPT1.TxGrs_Cur
#endif

  move &DPC.COMPANY            to  $Company

  if $First-Row = 'Y'
    move $Company   to $Prev_Comp
    let $First-Row = 'N'
  end-if

  if $Company <> $Prev_Comp
    do Company-Change-D
  end-if

  print &DSN.Descr                   (+001, 002)
  print &DPC.emplid                  ( 000, 027)
  print &DPN.Name                    ( 000, 040)
  print &DPC.PAYCHECK_NBR            ( 000, 090)
  print &DPC.CHECK_DT                ( 000, 110)
  do Format-Number(&DPT1.TxGrs_Cur,$Out,'999,999,999,999,999.00')
  print $Out                        ( 000, 152)

  move $Company   to $Prev_Comp

FROM  PS_PAY_CHECK DPC,
      PS_PAY_TAX   DPT1,
      PS_PAY_TAX   DPT2,
      PS_STATE_NAMES_TBL DSN,
      PS_PY_TAX940A_EMPL DEMP,
      PS_PERSON_NAME DPN
WHERE DPC.CHECK_DT >=  &RC_TAX940A.FromDate
AND   DPC.CHECK_DT <=  &RC_TAX940A.ThruDate
AND   DPC.COMPANY    = DPT1.COMPANY
AND   DPC.PAYGROUP   = DPT1.PAYGROUP
AND   DPC.PAY_END_DT = DPT1.PAY_END_DT
AND   DPC.OFF_CYCLE  = DPT1.OFF_CYCLE
AND   DPC.PAGE_NUM   = DPT1.PAGE_NUM
AND   DPC.LINE_NUM   = DPT1.LINE_NUM
AND   DPC.SEPCHK     = DPT1.SEPCHK
AND   DPC.PAYCHECK_STATUS IN ('A','F','R')
AND   DPT1.STATE = '$U'
AND   DPT1.TAX_CLASS = 'U'
AND   DPT1.TXGRS_CUR <> 0
AND   DPT2.COMPANY    = DPC.COMPANY
AND   DPT2.PAYGROUP   = DPC.PAYGROUP
AND   DPT2.PAY_END_DT = DPC.PAY_END_DT
AND   DPT2.OFF_CYCLE  = DPC.OFF_CYCLE
AND   DPT2.PAGE_NUM   = DPC.PAGE_NUM
AND   DPT2.LINE_NUM   = DPC.LINE_NUM
AND   DPT2.SEPCHK     = DPC.SEPCHK
AND   DPT2.STATE BETWEEN 'AA' AND 'ZZ'
AND   DPT2.TAX_CLASS = 'U'
AND   DSN.COUNTRY     = 'USA'
AND   DSN.STATE       = DPT2.STATE
AND   DEMP.OPRID          = $Prcs_OprID
AND   DEMP.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID
AND   DEMP.EMPLID     = DPC.EMPLID
AND   DPN.EMPLID      = DPC.EMPLID

GROUP BY DPC.COMPANY, DSN.DESCR, DPC.CHECK_DT, DPC.PAYCHECK_NBR, DPC.EMPLID, DPN.NAME
ORDER BY DPC.COMPANY, DSN.DESCR, DPC.CHECK_DT, DPC.PAYCHECK_NBR, DPC.EMPLID, DPN.NAME

end-select



end-procedure


begin-procedure Get-Report-Parameters

begin-select

RC_TAX940A.FROMDATE
RC_TAX940A.THRUDATE
RC_TAX940A.PY_TAX940A_OPTIONS

  let  $FromDate      = &RC_TAX940A.FromDate
  let  $ThruDate      = &RC_TAX940A.ThruDate
  let  $AsOfDate      = &RC_TAX940A.ThruDate

FROM  PS_PY_RC_TAX940A RC_TAX940A
WHERE RC_TAX940A.OPRID          = $Prcs_OprID
AND   RC_TAX940A.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID

end-select

end-procedure


begin-procedure Get-Rel-Lang-State

begin-SELECT
STL.DESCR

    if rtrim(&STL.Descr, ' ') <> ''
       let $StateName = RTRIM(&STL.Descr, ' ')
    end-if

FROM  PS_STATE_NAMES_LNG STL
WHERE STL.COUNTRY     = 'USA'
  AND STL.LANGUAGE_CD = $Curr_language_cd
  AND STL.STATE       = $State

end-SELECT

end-procedure


#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getftdts.sqc'  !Get-From-Thru-Dates procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
! #Include 'payrctl2.sqc'  !Get-Run-Control procedure
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
