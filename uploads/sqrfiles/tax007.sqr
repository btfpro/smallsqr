!************************************************************
!  TAX007:  Quarterly Federal Tax Report - Employee Detail *
!************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2012, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2012/11/08:11:50:48                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  872695                                              !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
! HP00001       Add $PublicSector indicator                            *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !printer and page-size initialization
#Include 'usarpt.sqc' !USA-specific variables


begin-report
  do Init-Report
  do Test-For-Territories
  do Process-Main
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'TAX007' to $ReportID
  move 'Quarterly Federal Tax Report - Employee Detail' to $ReportTitle
  display $ReportTitle

  do Init-DateTime
  do Init-Number
  do Get-EandG                                                          !HP00001
  do Get-Tax-Reporting-Run-Controls
  do Stdapi-Init

  do Get-Calendar-Year-Id
  move $PeriodEndDate to $AsOfDate  !for included procedures

end-procedure

begin-heading 14
#Include 'stdhdg01.sqc'  !standard heading 1
  if $Company <> $priorCompany
    do Get-Company-Data
    move $Company to $priorCompany
  end-if

  print $jurisdictiont     (4,2)
  do Format-DateTime($PeriodEndDate, $out, {DEFDATE}, '', '')
  print $out               (0,51)

  print $RptQtrYr          (0, 80)
  print $CompanyName       (+2,12)
  print $CompnyAdd1        (+1,12)
  let $field = RTRIM($CompnyCity, ' ')
  print $field             (+1,12)                    !City
  print &CT.State          ()      edit ,bxx

  move &CT.Postal      to $Zip
  move $Zip            to $ZipExtsn ~~~~~~xxxx

  if instr($Zip,'-',6) = 0 and $ZipExtsn <> '    '
    let $Zip = substr($Zip,1,5) || '-' || substr($Zip,6,4)
  end-if

  move $Zip         to $ZipExtsn ~~~~~xxxxx

  print $Zip               (0,+2)
  print 'Employer ID'      (+2,12)
  print &CT.Federal_EIN    (0,+2) edit 099999999
  print ' '                                    (+2,2)
  print ' '                                    (0,15)
  print '       ------  Withholding  -----'    (0,35)
  print '       ------ Unemployment ------'    (0,70)
  print '       ------ FICA - OASDI ------'    (0,105)
  print '       ----- FICA - Medicare ----'    (0,140)

  print 'SSN'                                  (+1,2)
  print 'Name'                                 (0,15)
  print '       TxGrs QTD          Tax QTD'    (0,35)
  print '       TxGrs QTD          Tax QTD'    (0,70)
  print '       TxGrs QTD          Tax QTD'    (0,105)
  print '       TxGrs QTD          Tax QTD'    (0,140)
end-heading

begin-footing 16
  print 'Page Total'  (+1,10)
  do Format-Number(#PgTotTxGrsFWT, $out, '9,999,999,999.99mi')
  print $out       (0,35)
  do Format-Number(#PgTotTaxFWT, $out, '9,999,999,999.99mi')
  print $out       (0,52)
  do Format-Number(#PgTotTxGrsFUT, $out, '9,999,999,999.99mi')
  print $out       (0,70)
  do Format-Number(#PgTotTaxFUT, $out, '9,999,999,999.99mi')
  print $out       (0,87)
  do Format-Number(#PgTotTxGrsOASDI, $out, '9,999,999,999.99mi')
  print $out       (0,105)
  do Format-Number(#PgTotTaxOASDI, $out, '9,999,999,999.99mi')
  print $out       (0,122)
  do Format-Number(#PgTotTxGrsMEDI, $out, '9,999,999,999.99mi')
  print $out       (0,140)
  do Format-Number(#PgTotTaxMEDI, $out, '9,999,999,999.99mi')
  print $out       (0,157)
  print 'ADDL MED EE: ' (+1,94)
  do Format-Number(#PgTotTxGrsAddlMEDI, $out, '9,999,999,999.99mi')
  print $out       (0,140)
  do Format-Number(#PgTotTaxAddlMEDI, $out, '9,999,999,999.99mi')
  print $out       (0,157)

  print 'EMPLOYER:'  (+1,94)
  do Format-Number(#PgTotTxGrsOASDIR, $out, '9,999,999,999.99mi')
  print $out       (0,105)
  do Format-Number(#PgTotTaxOASDIR, $out, '9,999,999,999.99mi')
  print $out       (0,122)
  do Format-Number(#PgTotTxGrsMEDIR, $out, '9,999,999,999.99mi')
  print $out       (0,140)
  do Format-Number(#PgTotTaxMEDIR, $out, '9,999,999,999.99mi')
  print $out       (0,157)

  move 0 to #PgTotTxGrsFWT
  move 0 to #PgTotTaxFWT
  move 0 to #PgTotTxGrsFUT
  move 0 to #PgTotTaxFUT
  move 0 to #PgTotTxGrsOASDI
  move 0 to #PgTotTaxOASDI
  move 0 to #PgTotTxGrsMEDI
  move 0 to #PgTotTaxMEDI
  move 0 to #PgTotTxGrsOASDIR
  move 0 to #PgTotTaxOASDIR
  move 0 to #PgTotTxGrsMEDIR
  move 0 to #PgTotTaxMEDIR
  move 0 to #PgTotTxGrsAddlMEDI
  move 0 to #PgTotTaxAddlMEDI

  if $Print_Ju_Totals = 'Y'

    print $jurisdictiont (+1,10)
    print ' Total'       (0,+0)
    do Format-Number(#JuTotTxGrsFWT, $out, '9,999,999,999.99mi')
    print $out     (0,35)
    do Format-Number(#JuTotTaxFWT, $out, '9,999,999,999.99mi')
    print $out     (0,52)
    do Format-Number(#JuTotTxGrsFUT, $out, '9,999,999,999.99mi')
    print $out     (0,70)
    do Format-Number(#JuTotTaxFUT, $out, '9,999,999,999.99mi')
    print $out     (0,87)
    do Format-Number(#JuTotTxGrsOASDI, $out, '9,999,999,999.99mi')
    print $out     (0,105)
    do Format-Number(#JuTotTaxOASDI, $out, '9,999,999,999.99mi')
    print $out     (0,122)
    do Format-Number(#JuTotTxGrsMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#JuTotTaxMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,157)
    print 'ADDL MED EE: ' (+1,94)
    do Format-Number(#JuTotTxGrsAddlMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#JuTotTaxAddlMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,157)

    print 'EMPLOYER:'  (+1,94)
    do Format-Number(#JuTotTxGrsOASDIR, $out, '9,999,999,999.99mi')
    print $out     (0,105)
    do Format-Number(#JuTotTaxOASDIR, $out, '9,999,999,999.99mi')
    print $out     (0,122)
    do Format-Number(#JuTotTxGrsMEDIR, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#JuTotTaxMEDIR, $out, '9,999,999,999.99mi')
    print $out     (0,157)

    move 0 to #JuTotTxGrsFWT
    move 0 to #JuTotTaxFWT
    move 0 to #JuTotTxGrsFUT
    move 0 to #JuTotTaxFUT
    move 0 to #JuTotTxGrsOASDI
    move 0 to #JuTotTaxOASDI
    move 0 to #JuTotTxGrsMEDI
    move 0 to #JuTotTaxMEDI
    move 0 to #JuTotTxGrsOASDIR
    move 0 to #JuTotTaxOASDIR
    move 0 to #JuTotTxGrsMEDIR
    move 0 to #JuTotTaxMEDIR
    move 0 to #JuTotTxGrsAddlMEDI
    move 0 to #JuTotTaxAddlMEDI
    let $Print_Ju_Totals = 'N'
  end-if

  if $Print_SS_Totals = 'Y'

    print 'Form 941-SS Total'  (+1,10)
    do Format-Number(#SSTotTxGrsFWT, $out, '9,999,999,999.99mi')
    print $out     (0,35)
    do Format-Number(#SSTotTaxFWT, $out, '9,999,999,999.99mi')
    print $out     (0,52)
    do Format-Number(#SSTotTxGrsFUT, $out, '9,999,999,999.99mi')
    print $out     (0,70)
    do Format-Number(#SSTotTaxFUT, $out, '9,999,999,999.99mi')
    print $out     (0,87)
    do Format-Number(#SSTotTxGrsOASDI, $out, '9,999,999,999.99mi')
    print $out     (0,105)
    do Format-Number(#SSTotTaxOASDI, $out, '9,999,999,999.99mi')
    print $out     (0,122)
    do Format-Number(#SSTotTxGrsMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#SSTotTaxMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,157)
    print 'ADDL MED EE: ' (+1,94)
    do Format-Number(#SSTotTxGrsAddlMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#SSTotTaxAddlMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,157)

    print 'EMPLOYER:'  (+1,94)
    do Format-Number(#SSTotTxGrsOASDIR, $out, '9,999,999,999.99mi')
    print $out     (0,105)
    do Format-Number(#SSTotTaxOASDIR, $out, '9,999,999,999.99mi')
    print $out     (0,122)
    do Format-Number(#SSTotTxGrsMEDIR, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#SSTotTaxMEDIR, $out, '9,999,999,999.99mi')
    print $out     (0,157)

    move 0 to #SSTotTxGrsFWT
    move 0 to #SSTotTaxFWT
    move 0 to #SSTotTxGrsFUT
    move 0 to #SSTotTaxFUT
    move 0 to #SSTotTxGrsOASDI
    move 0 to #SSTotTaxOASDI
    move 0 to #SSTotTxGrsMEDI
    move 0 to #SSTotTaxMEDI
    move 0 to #SSTotTxGrsOASDIR
    move 0 to #SSTotTaxOASDIR
    move 0 to #SSTotTxGrsMEDIR
    move 0 to #SSTotTaxMEDIR
    move 0 to #SSTotTxGrsAddlMEDI
    move 0 to #SSTotTaxAddlMEDI
    let $Print_SS_Totals = 'N'
  end-if

  if $Print_Co_Totals = 'Y'

    ! ICE 517831000 Due to fact it is difficult to determine the Company Name length and that it may overwrite the
    ! total and that the company name is on top of every page just print the words Company total on the footing
    ! print $CompanyName     (+1,10)
    ! print ' Total'         (0,+0)

    print 'Company Total'  (+1,10)
    do Format-Number(#CoTotTxGrsFWT, $out, '9,999,999,999.99mi')
    print $out     (0,35)
    do Format-Number(#CoTotTaxFWT, $out, '9,999,999,999.99mi')
    print $out     (0,52)
    do Format-Number(#CoTotTxGrsFUT, $out, '9,999,999,999.99mi')
    print $out     (0,70)
    do Format-Number(#CoTotTaxFUT, $out, '9,999,999,999.99mi')
    print $out     (0,87)
    do Format-Number(#CoTotTxGrsOASDI, $out, '9,999,999,999.99mi')
    print $out     (0,105)
    do Format-Number(#CoTotTaxOASDI, $out, '9,999,999,999.99mi')
    print $out     (0,122)
    do Format-Number(#CoTotTxGrsMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#CoTotTaxMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,157)
    print 'ADDL MED EE: ' (+1,94)
    do Format-Number(#CoTotTxGrsAddlMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#CoTotTaxAddlMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,157)

    print 'EMPLOYER:'  (+1,94)
    do Format-Number(#CoTotTxGrsOASDIR, $out, '9,999,999,999.99mi')
    print $out     (0,105)
    do Format-Number(#CoTotTaxOASDIR, $out, '9,999,999,999.99mi')
    print $out     (0,122)
    do Format-Number(#CoTotTxGrsMEDIR, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#CoTotTaxMEDIR, $out, '9,999,999,999.99mi')
    print $out     (0,157)

    move 0 to #CoTotTxGrsFWT
    move 0 to #CoTotTaxFWT
    move 0 to #CoTotTxGrsFUT
    move 0 to #CoTotTaxFUT
    move 0 to #CoTotTxGrsOASDI
    move 0 to #CoTotTaxOASDI
    move 0 to #CoTotTxGrsMEDI
    move 0 to #CoTotTaxMEDI
    move 0 to #CoTotTxGrsOASDIR
    move 0 to #CoTotTaxOASDIR
    move 0 to #CoTotTxGrsMEDIR
    move 0 to #CoTotTaxMEDIR
    move 0 to #CoTotTxGrsAddlMEDI
    move 0 to #CoTotTaxAddlMEDI
    let $Print_Co_Totals = 'N'
  end-if

  if $Print_Gr_Totals = 'Y'

    print 'Grand Total'  (+1,10)
    do Format-Number(#GrTotTxGrsFWT, $out, '9,999,999,999.99mi')
    print $out     (0,35)
    do Format-Number(#GrTotTaxFWT, $out, '9,999,999,999.99mi')
    print $out     (0,52)
    do Format-Number(#GrTotTxGrsFUT, $out, '9,999,999,999.99mi')
    print $out     (0,70)
    do Format-Number(#GrTotTaxFUT, $out, '9,999,999,999.99mi')
    print $out     (0,87)
    do Format-Number(#GrTotTxGrsOASDI, $out, '9,999,999,999.99mi')
    print $out     (0,105)
    do Format-Number(#GrTotTaxOASDI, $out, '9,999,999,999.99mi')
    print $out     (0,122)
    do Format-Number(#GrTotTxGrsMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#GrTotTaxMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,157)
    print 'ADDL MED EE: ' (+1,94)
    do Format-Number(#GrTotTxGrsAddlMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#GrTotTaxAddlMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,157)

    print 'EMPLOYER:'  (+1,94)
    do Format-Number(#GrTotTxGrsOASDIR, $out, '9,999,999,999.99mi')
    print $out     (0,105)
    do Format-Number(#GrTotTaxOASDIR, $out, '9,999,999,999.99mi')
    print $out     (0,122)
    do Format-Number(#GrTotTxGrsMEDIR, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#GrTotTaxMEDIR, $out, '9,999,999,999.99mi')
    print $out     (0,157)

  end-if

end-footing

begin-procedure Test-For-Territories
  move 'N' to $terr-exist

begin-SELECT
COUNT(*)       &terr-count
FROM  PS_TAX_BALANCE A
WHERE A.STATE         IN ('$UAS','$UGU','$UPR','$UVI')
  AND A.LOCALITY      = ' '
  AND A.TAX_CLASS     IN ('H','U','D','F','G','T','E','J','Q','Z','A','7','8','9')
  AND A.BALANCE_ID    = $Calendar_Year_Id
  AND A.BALANCE_YEAR  = &TX.Balance_Year
  AND A.BALANCE_QTR   = &TX.Balance_Qtr
  AND A.BALANCE_PERIOD  =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE
       WHERE  EMPLID        = A.EMPLID
         AND  COMPANY       = A.COMPANY
         AND  BALANCE_ID    = A.BALANCE_ID
         AND  BALANCE_YEAR  = A.BALANCE_YEAR
         AND  BALANCE_QTR   = A.BALANCE_QTR
         AND  STATE         = A.STATE
         AND  LOCALITY      = A.LOCALITY
         AND  TAX_CLASS     = A.TAX_CLASS)
end-SELECT

  if &terr-count > 0
    move 'Y' to $terr-exist
  end-if

end-procedure

begin-procedure Process-Main
begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

  let $Print_Ju_Totals = 'N'
  let $Print_SS_Totals = 'N'
  let $Print_Co_Totals = 'N'
  let $Print_Gr_Totals = 'N'

begin-SELECT DISTINCT
B.COMPANY

  let $jurisdiction = 'Federal'
  let $SS-flag = 'N'
  let $ju_tot = 'N'
  do Process-Federal
  if $ju_tot = 'Y'
    let $Print_Ju_Totals = 'Y'
  end-if

  if $terr-exist = 'Y'

    let $jurisdiction = 'Puerto Rico'
    let $territory = '$UPR'
    let $SS-flag = 'N'
    let $ju_tot = 'N'
    do Process-Territory
    if $ju_tot = 'Y'
      let $Print_Ju_Totals = 'Y'
    end-if

    let $jurisdiction = 'American Samoa'
    let $territory = '$UAS'
    let $SS-flag = 'Y'
    let $ju_tot = 'N'
    let $ss_tot = 'N'
    do Process-Territory
    if $ju_tot = 'Y'
      let $Print_Ju_Totals = 'Y'
    end-if

    let $jurisdiction = 'Guam'
    let $territory = '$UGU'
    let $SS-flag = 'Y'
    let $ju_tot = 'N'
    do Process-Territory
    if $ju_tot = 'Y'
      let $Print_Ju_Totals = 'Y'
    end-if

    let $jurisdiction = 'U.S. Virgin Islands'
    let $territory = '$UVI'
    let $SS-flag = 'Y'
    let $ju_tot = 'N'
    do Process-Territory
    if $ju_tot = 'Y'
      let $Print_Ju_Totals = 'Y'
    end-if
    if $ss_tot = 'Y'
      let $Print_SS_Totals = 'Y'
    end-if

  end-if

  let $Print_Co_Totals = 'Y'

FROM  PS_TAX_BALANCE B
WHERE B.BALANCE_ID    = $Calendar_Year_Id
  AND B.BALANCE_YEAR  = &TX.Balance_Year
  AND B.BALANCE_QTR   = &TX.Balance_Qtr
ORDER BY B.COMPANY

end-SELECT

  let $Print_Gr_Totals = 'Y'
  new-page

end-procedure

begin-procedure Process-Federal

begin-SELECT
D1.NATIONAL_ID () on-break print=never level=1 after=Emp-Total
D.NAME         () on-break print=never level=1 after=Emp-Total            !HP00001
C.TAX_CLASS
C.TXGRS_QTD
C.TAX_QTD
C.STATE

  if $Print_Ju_Totals = 'Y'
    new-page
  end-if

  move &B.Company to $Company  !for Heading

  move &D1.NATIONAL_ID to $NATIONAL_ID
  move &D.NAME         to $NAME
  move &C.TAX_CLASS    to $TAX_CLASS
  move &C.TXGRS_QTD    to #TxGrs_QTD
  move &C.TAX_QTD      to #Tax_QTD
  let $STATE           = RTRIM(&C.STATE, ' ')

  if $STATE <> '$U'
    let #TxGrs_QTD = #TxGrs_QTD * -1
    let #Tax_QTD   = #Tax_QTD * -1
  end-if

  do Process-Tax-Balance

FROM  PS_TAX_BALANCE C, PS_PERSON_NAME D, PS_PERS_NID D1
WHERE C.COMPANY       = &B.COMPANY
  AND D.EMPLID        = C.EMPLID
  AND D1.EMPLID       = D.EMPLID
  AND D1.COUNTRY      = {NID_Country}
  AND D1.NATIONAL_ID_TYPE = $PAYROLL_NID_TYPE
  AND C.STATE         IN ('$U','$UAS','$UGU','$UPR','$UVI')
  AND C.LOCALITY      = ' '
  AND C.TAX_CLASS     IN ('H','U','D','F','G','T','E','J','Q','Z','A','7','8','9')    !HP99999
  AND C.BALANCE_ID    = $Calendar_Year_Id
  AND C.BALANCE_YEAR  = &TX.Balance_Year
  AND C.BALANCE_QTR   = &TX.Balance_Qtr
  AND C.BALANCE_PERIOD  =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE
       WHERE  EMPLID        = C.EMPLID
         AND  COMPANY       = C.COMPANY
         AND  BALANCE_ID    = C.BALANCE_ID
         AND  BALANCE_YEAR  = C.BALANCE_YEAR
         AND  BALANCE_QTR   = C.BALANCE_QTR
         AND  STATE         = C.STATE
         AND  LOCALITY      = C.LOCALITY
         AND  TAX_CLASS     = C.TAX_CLASS)
ORDER BY D1.NATIONAL_ID, D.NAME, C.TAX_CLASS

end-SELECT

end-procedure

begin-procedure Process-Territory

begin-SELECT
F1.NATIONAL_ID () on-break print=never level=1 after=Emp-Total
F.NAME         () on-break print=never level=1 after=Emp-Total            !HP00001
E.TAX_CLASS
E.TXGRS_QTD
E.TAX_QTD
E.STATE

  if $Print_Ju_Totals = 'Y'
    new-page
  end-if

  move &B.Company to $Company  !for Heading

  move &F1.NATIONAL_ID to $NATIONAL_ID
  move &F.NAME         to $NAME
  move &E.TAX_CLASS    to $TAX_CLASS
  move &E.TXGRS_QTD    to #TxGrs_QTD
  move &E.TAX_QTD      to #Tax_QTD
  move &E.STATE        to $STATE

  do Process-Tax-Balance

FROM  PS_TAX_BALANCE E, PS_PERSON_NAME F, PS_PERS_NID F1
WHERE E.COMPANY       = &B.COMPANY
  AND F.EMPLID        = E.EMPLID
  AND F1.EMPLID       = F.EMPLID
  AND F1.COUNTRY      = {NID_Country}
  AND F1.NATIONAL_ID_TYPE = $PAYROLL_NID_TYPE
  AND E.STATE         = $territory
  AND E.LOCALITY      = ' '
  AND E.TAX_CLASS     IN ('H','U','D','F','G','T','E','J','Q','Z','A','7','8','9')    !HP99999
  AND E.BALANCE_ID    = $Calendar_Year_Id
  AND E.BALANCE_YEAR  = &TX.Balance_Year
  AND E.BALANCE_QTR   = &TX.Balance_Qtr
  AND E.BALANCE_PERIOD  =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE
       WHERE  EMPLID        = E.EMPLID
         AND  COMPANY       = E.COMPANY
         AND  BALANCE_ID    = E.BALANCE_ID
         AND  BALANCE_YEAR  = E.BALANCE_YEAR
         AND  BALANCE_QTR   = E.BALANCE_QTR
         AND  STATE         = E.STATE
         AND  LOCALITY      = E.LOCALITY
         AND  TAX_CLASS     = E.TAX_CLASS)
ORDER BY F1.NATIONAL_ID, F.NAME, E.TAX_CLASS

end-SELECT

end-procedure

begin-procedure Emp-Total

  if #EmpTxGrsFWT <> 0
    or #EmpTaxFWT <> 0
    or #EmpTxGrsFUT <> 0
    or #EmpTaxFUT <> 0
    or #EmpTxGrsOASDI <> 0
    or #EmpTaxOASDI <> 0
    or #EmpTxGrsMEDI <> 0
    or #EmpTaxMEDI <> 0
    or #EmpTxGrsOASDIR <> 0
    or #EmpTaxOASDIR <> 0
    or #EmpTxGrsMEDIR <> 0
    or #EmpTaxMEDIR <> 0
    or #EmpTxGrsAddlMEDI <> 0
    or #EmpTaxAddlMEDI <> 0

      let $ju_tot = 'Y'
      if $SS-flag = 'Y'
        let $ss_tot = 'Y'
      end-if
      let $jurisdictiont = $jurisdiction
      do Emp-Line

  end-if

end-procedure

begin-procedure Emp-Line

  if $Name <> $priorName or $National_ID <> $priorSSN
    move $NATIONAL_ID  to $S123 xxx       !isolate first 3 digits
    if $S123 = &Temp_SSN_Mask or RTRIM($NATIONAL_ID, ' ') = ''
      print 'Applied For' (+1,2)
    else
      print $NATIONAL_ID        (+1,2)  edit xxxbxxbxxxx
    end-if
    print $Name         (0,15,20)
    move $Name to $priorName
    move $National_ID  to $priorSSN
  end-if

      do Format-Number(#EmpTxGrsFWT, $out, '9,999,999,999.99mi')
      print $out            (0,35)
      do Format-Number(#EmpTaxFWT, $out, '9,999,999,999.99mi')
      print $out            (0,52)
      do Format-Number(#EmpTxGrsFUT, $out, '9,999,999,999.99mi')
      print $out            (0,70)
      do Format-Number(#EmpTaxFUT, $out, '9,999,999,999.99mi')
      print $out            (0,87)
      do Format-Number(#EmpTxGrsOASDI, $out, '9,999,999,999.99mi')
      print $out            (0,105)
      do Format-Number(#EmpTaxOASDI, $out, '9,999,999,999.99mi')
      print $out            (0,122)
      do Format-Number(#EmpTxGrsMEDI, $out, '9,999,999,999.99mi')
      print $out            (0,140)
      do Format-Number(#EmpTaxMEDI, $out, '9,999,999,999.99mi')
      print $out            (0,157)
      if #EmpTxGrsAddlMEDI <> 0
       or #EmpTaxAddlMEDI <> 0
         print 'ADDL MED EE:'  (+1,94)
         do Format-Number(#EmpTxGrsAddlMEDI, $out, '9,999,999,999.99mi')
         print $out            (0,140)
         do Format-Number(#EmpTaxAddlMEDI, $out, '9,999,999,999.99mi')
         print $out            (0,157)
      end-if
      if #EmpTxGrsOASDI <> #EmpTxGrsOASDIR
       or #EmpTaxOASDI  <> #EmpTaxOASDIR
       or #EmpTxGrsMEDI <> #EmpTxGrsMEDIR
       or #EmpTaxMEDI   <> #EmpTaxMEDIR
         print 'EMPLOYER:'  (+1,94)
         do Format-Number(#EmpTxGrsOASDIR, $out, '9,999,999,999.99mi')
         print $out            (0,105)
         do Format-Number(#EmpTaxOASDIR, $out, '9,999,999,999.99mi')
         print $out            (0,122)
         do Format-Number(#EmpTxGrsMEDIR, $out, '9,999,999,999.99mi')
         print $out            (0,140)
         do Format-Number(#EmpTaxMEDIR, $out, '9,999,999,999.99mi')
         print $out            (0,157)
      end-if

    add #EmpTxGrsFWT      to #JuTotTxGrsFWT
    add #EmpTxGrsFWT      to #CoTotTxGrsFWT
    add #EmpTxGrsFWT      to #GrTotTxGrsFWT
    add #EmpTaxFWT        to #JuTotTaxFWT
    add #EmpTaxFWT        to #CoTotTaxFWT
    add #EmpTaxFWT        to #GrTotTaxFWT
    add #EmpTxGrsFUT      to #JuTotTxGrsFUT
    add #EmpTxGrsFUT      to #CoTotTxGrsFUT
    add #EmpTxGrsFUT      to #GrTotTxGrsFUT
    add #EmpTaxFUT        to #JuTotTaxFUT
    add #EmpTaxFUT        to #CoTotTaxFUT
    add #EmpTaxFUT        to #GrTotTaxFUT
    add #EmpTxGrsOASDI    to #JuTotTxGrsOASDI
    add #EmpTxGrsOASDI    to #CoTotTxGrsOASDI
    add #EmpTxGrsOASDI    to #GrTotTxGrsOASDI
    add #EmpTaxOASDI      to #JuTotTaxOASDI
    add #EmpTaxOASDI      to #CoTotTaxOASDI
    add #EmpTaxOASDI      to #GrTotTaxOASDI
    add #EmpTxGrsMEDI     to #JuTotTxGrsMEDI
    add #EmpTxGrsMEDI     to #CoTotTxGrsMEDI
    add #EmpTxGrsMEDI     to #GrTotTxGrsMEDI
    add #EmpTaxMEDI       to #JuTotTaxMEDI
    add #EmpTaxMEDI       to #CoTotTaxMEDI
    add #EmpTaxMEDI       to #GrTotTaxMEDI
    add #EmpTxGrsOASDIR   to #JuTotTxGrsOASDIR
    add #EmpTxGrsOASDIR   to #CoTotTxGrsOASDIR
    add #EmpTxGrsOASDIR   to #GrTotTxGrsOASDIR
    add #EmpTaxOASDIR     to #JuTotTaxOASDIR
    add #EmpTaxOASDIR     to #CoTotTaxOASDIR
    add #EmpTaxOASDIR     to #GrTotTaxOASDIR
    add #EmpTxGrsMEDIR    to #JuTotTxGrsMEDIR
    add #EmpTxGrsMEDIR    to #CoTotTxGrsMEDIR
    add #EmpTxGrsMEDIR    to #GrTotTxGrsMEDIR
    add #EmpTaxMEDIR      to #JuTotTaxMEDIR
    add #EmpTaxMEDIR      to #CoTotTaxMEDIR
    add #EmpTaxMEDIR      to #GrTotTaxMEDIR
    add #EmpTxGrsAddlMEDI to #JuTotTxGrsAddlMEDI
    add #EmpTxGrsAddlMEDI to #CoTotTxGrsAddlMEDI
    add #EmpTxGrsAddlMEDI to #GrTotTxGrsAddlMEDI
    add #EmpTaxAddlMEDI   to #JuTotTaxAddlMEDI
    add #EmpTaxAddlMEDI   to #CoTotTaxAddlMEDI
    add #EmpTaxAddlMEDI   to #GrTotTaxAddlMEDI

    add #EmpTxGrsFWT      to #PgTotTxGrsFWT
    add #EmpTaxFWT        to #PgTotTaxFWT
    add #EmpTxGrsFUT      to #PgTotTxGrsFUT
    add #EmpTaxFUT        to #PgTotTaxFUT
    add #EmpTxGrsOASDI    to #PgTotTxGrsOASDI
    add #EmpTaxOASDI      to #PgTotTaxOASDI
    add #EmpTxGrsMEDI     to #PgTotTxGrsMEDI
    add #EmpTaxMEDI       to #PgTotTaxMEDI
    add #EmpTxGrsOASDIR   to #PgTotTxGrsOASDIR
    add #EmpTaxOASDIR     to #PgTotTaxOASDIR
    add #EmpTxGrsMEDIR    to #PgTotTxGrsMEDIR
    add #EmpTaxMEDIR      to #PgTotTaxMEDIR
    add #EmpTxGrsAddlMEDI to #PgTotTxGrsAddlMEDI
    add #EmpTaxAddlMEDI   to #PgTotTaxAddlMEDI


    if $SS-flag = 'Y'
      add #EmpTxGrsFWT      to #SSTotTxGrsFWT
      add #EmpTaxFWT        to #SSTotTaxFWT
      add #EmpTxGrsFUT      to #SSTotTxGrsFUT
      add #EmpTaxFUT        to #SSTotTaxFUT
      add #EmpTxGrsOASDI    to #SSTotTxGrsOASDI
      add #EmpTaxOASDI      to #SSTotTaxOASDI
      add #EmpTxGrsMEDI     to #SSTotTxGrsMEDI
      add #EmpTaxMEDI       to #SSTotTaxMEDI
      add #EmpTxGrsOASDIR   to #SSTotTxGrsOASDIR
      add #EmpTaxOASDIR     to #SSTotTaxOASDIR
      add #EmpTxGrsMEDIR    to #SSTotTxGrsMEDIR
      add #EmpTaxMEDIR      to #SSTotTaxMEDIR
      add #EmpTxGrsAddlMEDI to #SSTotTxGrsAddlMEDI
      add #EmpTaxAddlMEDI   to #SSTotTaxAddlMEDI
    end-if

    move 0 to #EmpTxGrsFWT
    move 0 to #EmpTaxFWT
    move 0 to #EmpTxGrsFUT
    move 0 to #EmpTaxFUT
    move 0 to #EmpTxGrsOASDI
    move 0 to #EmpTaxOASDI
    move 0 to #EmpTxGrsMEDI
    move 0 to #EmpTaxMEDI
    move 0 to #EmpTxGrsOASDIR
    move 0 to #EmpTaxOASDIR
    move 0 to #EmpTxGrsMEDIR
    move 0 to #EmpTaxMEDIR
    move 0 to #EmpTxGrsAddlMEDI
    move 0 to #EmpTaxAddlMEDI
end-procedure

begin-procedure Process-Tax-Balance
  evaluate $Tax_Class

    when = 'A'                                         !NR Alien               !HP99999
      if $PublicSector = 'Y'                                                   !HP00001
        add #TxGrs_QTD    to #EmpTxGrsFWT                                      !HP99999
        add #Tax_QTD      to #EmpTaxFWT                                        !HP99999
      end-if                                                                   !HP00001

    when = 'H'                                         !Withholding

      add #TxGrs_QTD  to #EmpTxGrsFWT
      add #Tax_QTD    to #EmpTaxFWT

    when = 'U'                                         !Unemployment

      add #TxGrs_QTD  to #EmpTxGrsFUT
      add #Tax_QTD    to #EmpTaxFUT

    when = 'D'                                         !OASDI EE
    when = 'G'                                         !OASDI Tips EE
      add #TxGrs_QTD  to #EmpTxGrsOASDI
      add #Tax_QTD    to #EmpTaxOASDI

    when = 'F'                                         !Medicare EE
    when = 'T'                                         !Med Tips EE
      add #TxGrs_QTD  to #EmpTxGrsMEDI
      add #Tax_QTD    to #EmpTaxMEDI

    when = '7'                                         !Additional Medicare EE
      add #TxGrs_QTD  to #EmpTxGrsAddlMEDI
      add #Tax_QTD    to #EmpTaxAddlMEDI

    when = 'E'                                         !OASDI ER
    when = 'J'                                         !OASDI Tips ER
    when = '8'                                         !OASDI ER Exempt
    when = '9'                                         !OASDI Tips ER Exempt
      add #TxGrs_QTD  to #EmpTxGrsOASDIR
      add #Tax_QTD    to #EmpTaxOASDIR

    when = 'Q'                                         !Medicare ER
    when = 'Z'                                         !Med Tips ER
      add #TxGrs_QTD  to #EmpTxGrsMEDIR
      add #Tax_QTD    to #EmpTaxMEDIR

  end-evaluate
end-procedure

#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'geteandg.sqc'  !Get-EandG procedure                           !HP00001
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id

