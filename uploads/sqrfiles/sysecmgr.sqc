! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
! SYSECMGR: PS EDI Map report                                          *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************

#define C_ECMapID      3
#define C_ECFileRowID  16
#define C_RecName      26

!----------------------------------------------------------------------!
! Procedure: SYSECMGR-Main                                             !
!----------------------------------------------------------------------!
begin-procedure SYSECMGR-Main

        let $ErrorFound = 'N'
        let $AuditTitle = 'Electronic Commerce Audit'
        do SYSECMGR-InMapFile-RecDefn-Exist
        do SYSECMGR-InMapFile-MapDefn-Exist
        do SYSECMGR-InMapField-InMapFile-Exist
        do SYSECMGR-InMapField-RecField-Exist
        do SYSECMGR-InMapRec-RecDefn-Exist
        do SYSECMGR-InMapRec-MapDefn-Exist
        do SYSECMGR-InMapRecField-MapRec-Exist
        do SYSECMGR-InMapRecField-RecField-Exist
        do SYSECMGR-InMapRecField-RelRecName-Exist
        do SYSECMGR-InMapRecField-RelRecName-Valid
        do SYSECMGR-InMapRecField-RelFieldName-Exist
        do SYSECMGR-OutMapRec-RecDefn-Exist
        do SYSECMGR-OutMapRec-MapDefn-Exist
        do SYSECMGR-OutMapRec-RecDefn-RecParent-Exist
        do SYSECMGR-OutMapRec-RecDefn-RecFile-Exist
        do SYSECMGR-OutMapField-OutMapRec-Exist
        do SYSECMGR-OutMapField-RecField-Exist
        do SYSECMGR-ECMFIELD-DOESNOT-EXSIST-DBFIELD
       !  do SYSECMGR-InMapRecField-FieldType-Correct         ! Moved to PKGAUDIT
       !  do SYSECMGR-InMapField-Attributes-Correct           ! Moved to PKGAUDIT
       !  do SYSECMGR-OutMapField-Attributes-Correct          ! Moved to PKGAUDIT
        if $ErrorFound = 'N'
            do PrintSummaryRecord
        end-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSECMGR-InMapFile-RecDefn-Exist                          !
!                                                                      !
! Descr:     System table audit against PS_ECINMAPFILE table:          !
!                                                                      !
!            ECINMPFL-1: Verify each inbound flat file (work record)   !
!                        exists in PSRECDEFN.                          !
!----------------------------------------------------------------------!
begin-procedure SYSECMGR-InMapFile-RecDefn-Exist
   move 0 to #rows
   let $AuditDescr = '(ECINMPFL-1) Inbound work records not found '
        || 'in the PSRECDEFN table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = #Start1 + 13
   let #Start3          = #Start2 + 18
   let #numofhdr        =  3

   put 'EC Map ID'        #Start1 10 into printarray(0)
   put 'EC File Row ID'   #Start2 15 into printarray(1)
   put 'Record Name'      #Start3 21 into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &EcInMapFile1_ECMapID
A.ECFILEROWID      &EcInMapFile1_ECFileRowID
A.RECNAME          &EcInMapFile1_RecName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcInMapFile1_ECMapID      (+1,#Start1)
   print &EcInMapFile1_ECFileRowID  (0,#Start2)
   print &EcInMapFile1_RecName      (0,#Start3)

FROM PS_ECINMAPFILE A
WHERE NOT EXISTS
  (SELECT 'X'
  FROM PSRECDEFN B
  WHERE B.RECNAME = A.RECNAME)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSECMGR-InMapFile-ECInMapDefn-Exist                      !
!                                                                      !
! Descr:     System table audit against PS_ECINMAPFILE table:          !
!                                                                      !
!            ECINMPFL-2: Verify that each EC Map ID from the inbound   !
!            flat file (work record) exists in PS_ECMAPDEFN.           !
!----------------------------------------------------------------------!
begin-procedure SYSECMGR-InMapFile-MapDefn-Exist
   move 0 to #rows
   let $AuditDescr = '(ECINMPFL-2) Inbound work record EC Map ID '
        || 'not found in the PS_ECMAPDEFN table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #numofhdr        =  1

   put 'EC Map ID'        #Start1 10 into printarray(0)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &EcInMapFile2_ECMapID


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcInMapFile2_ECMapID      (+1,#Start1)

FROM PS_ECINMAPFILE A
WHERE NOT EXISTS
  (SELECT 'X'
  FROM PS_ECMAPDEFN B
  WHERE B.ECMAPID = A.ECMAPID)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSECMGR-InMapField-InMapFile-Exist                       !
!                                                                      !
! Descr:     System table audit against PS_ECINMAPFLD table:           !
!                                                                      !
!            ECINMPFD-1: Verify each inbound work record field from    !
!                        PS_ECINMAPFLD has a valid EC Map ID and       !
!                        EC File Row ID from the PS_ECINMAPFILE table. !
!----------------------------------------------------------------------!

#define C_FieldName    26

begin-procedure SYSECMGR-InMapField-InMapFile-Exist
   move 0 to #rows
   let $AuditDescr = '(ECINMPFD-1) Inbound work record fields '
        || 'not found with valid EC Map ID and EC File Row ID '
        || 'combination  from the PS_ECINMAPFILE table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = #Start1 + 13
   let #Start3          = #Start2 + 18
   let #numofhdr        =  3

   put 'EC Map ID'        #Start1 10 into printarray(0)
   put 'EC File Row ID'   #Start2 15 into printarray(1)
   put 'Field Name'       #Start3 31 into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &EcInMapField1_ECMapID
A.ECFILEROWID      &EcInMapField1_ECFileRowID
A.FIELDNAME        &EcInMapField1_FieldName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcInMapField1_ECMapID      (+1,#Start1)
   print &EcInMapField1_ECFileRowID  (0,#Start2)
   print &EcInMapField1_FieldName    (0,#Start3)

FROM PS_ECINMAPFLD A
WHERE NOT EXISTS
  (SELECT 'X'
  FROM PS_ECINMAPFILE B
  WHERE B.ECMAPID = A.ECMAPID
    AND B.ECFILEROWID = A.ECFILEROWID)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSECMGR-InMapField-RecField-Exist                        !
!                                                                      !
! Descr:     System table audit against PS_ECINMAPFLD table:           !
!                                                                      !
!            ECINMPFD-2: Verify each inbound work record field from    !
!                        PS_ECINMAPFLD exists in PSRECFIELD for valid  !
!                        EC Map ID and EC File Row ID combinations.    !
!----------------------------------------------------------------------!

#define C_RecName      26
#define C_FieldName    44

begin-procedure SYSECMGR-InMapField-RecField-Exist
   move 0 to #rows
   let $AuditDescr = '(ECINMPFD-2) Inbound work record fields '
        || 'from PS_ECINMAPFLD not found in PSRECFIELD:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = #Start1 + 13
   let #Start3          = #Start2 + 18
   let #Start4          = #Start3 + 24
   let #numofhdr        =  4

   put 'EC Map ID'        #Start1 10 into printarray(0)
   put 'EC File Row ID'   #Start2 15 into printarray(1)
   put 'Record Name'      #Start3 21 into printarray(2)
   put 'Field Name'       #Start4 31 into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &EcInMapField2_ECMapID
A.ECFILEROWID      &EcInMapField2_ECFileRowID
B.RECNAME          &EcInMapField2_RecName
A.FIELDNAME        &EcInMapField2_FieldName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcInMapField2_ECMapID      (+1, #Start1)
   print &EcInMapField2_ECFileRowID  ( 0, #Start2)
   print &EcInMapField2_RecName      ( 0, #Start3)
   print &EcInMapField2_FieldName    ( 0, #Start4)


FROM PS_ECINMAPFLD A, PS_ECINMAPFILE B
WHERE A.ECMAPID = B.ECMAPID
AND A.ECFILEROWID = B.ECFILEROWID
AND NOT EXISTS
 (SELECT 'X'
  FROM PSRECFIELD C
  WHERE C.RECNAME = B.RECNAME
  AND C.FIELDNAME = A.FIELDNAME)
AND NOT EXISTS
  (SELECT 'X'
   FROM PSRECFIELD D
   WHERE D.FIELDNAME = A.FIELDNAME
   AND D.RECNAME IN
    (SELECT E.FIELDNAME
     FROM PSRECFIELD E
     WHERE E.RECNAME = B.RECNAME
     AND E.SUBRECORD = 'Y'))
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure



!----------------------------------------------------------------------!
! Procedure: SYSECMGR-InMapRec-RecDefn-Exist                           !
!                                                                      !
! Descr:     System table audit against PS_ECINMAPREC table:           !
!                                                                      !
!            ECINMPRC-1: Verify each target inbound record exists in   !
!                        PSRECDEFN.                                    !
!----------------------------------------------------------------------!
begin-procedure SYSECMGR-InMapRec-RecDefn-Exist
   move 0 to #rows
   let $AuditDescr = '(ECINMPRC-1) Target inbound records not '
        || 'found in the PSRECDEFN table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = #Start1 + 13
   let #Start3          = #Start2 + 18
   let #numofhdr        =  3

   put 'EC Map ID'        #Start1 10 into printarray(0)
   put 'EC File Row ID'   #Start2 15 into printarray(1)
   put 'Record Name'      #Start3 21 into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &EcInMapRec1_ECMapID
A.ECFILEROWID      &EcInMapRec1_ECFileRowID
A.RECNAME          &EcInMapRec1_RecName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcInMapRec1_ECMapID       (+1,#Start1)
   print &EcInMapRec1_ECFileRowID   (0,#Start2)
   print &EcInMapRec1_RecName       (0,#Start3)

FROM PS_ECINMAPREC A
WHERE NOT EXISTS
  (SELECT 'X'
  FROM PSRECDEFN B
  WHERE B.RECNAME = A.RECNAME)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSECMGR-InMapRec-MapDefn-Exist                           !
!                                                                      !
! Descr:     System table audit against PS_ECINMAPREC table:           !
!                                                                      !
!            ECINMPRC-2: Verify each EC Map ID exists in PS_ECMAPDEFN. !                                !
!----------------------------------------------------------------------!
begin-procedure SYSECMGR-InMapRec-MapDefn-Exist
   move 0 to #rows
   let $AuditDescr = '(ECINMPRC-2) Target inbound EC Map ID '
        || 'not found the PS_ECMAPDEFN table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #numofhdr        =  1

   put 'EC Map ID'        #Start1 10 into printarray(0)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &EcInMapRec2_ECMapID


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcInMapRec2_ECMapID       (+1,#Start1)

FROM PS_ECINMAPREC A
WHERE NOT EXISTS
  (SELECT 'X'
  FROM PS_ECMAPDEFN B
  WHERE B.ECMAPID = A.ECMAPID)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure



!----------------------------------------------------------------------!
! Procedure: SYSECMGR-InMapRecField-MapRec-Exist                       !
!                                                                      !
! Descr:     System table audit against PS_ECINMAPRECFLD table:        !
!                                                                      !
!            ECINMPRF-1: Verify each target inbound record field from  !
!                        PS_ECINMAPRECFLD has a valid EC Map ID,       !
!                        EC File Row ID, Record Name combination from  !
!                        PS_ECINMAPREC.                                !
!----------------------------------------------------------------------!

#define C_RecName      26
#define C_FieldName    44

begin-procedure SYSECMGR-InMapRecField-MapRec-Exist
   move 0 to #rows
   let $AuditDescr = '(ECINMPRF-1) EC Map ID/EC File Row ID '
        || 'combination not found in PS_ECINMAPREC for the '
        || 'target inbound record field in PS_ECINMAPRECFLD:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = #Start1 + 13
   let #Start3          = #Start2 + 18
   let #Start4          = #Start3 + 24
   let #numofhdr        =  4

   put 'EC Map ID'        #Start1 10 into printarray(0)
   put 'EC File Row ID'   #Start2 15 into printarray(1)
   put 'Record Name'      #Start3 21 into printarray(2)
   put 'Field Name'       #Start4 31 into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &EcInMapRecField1_ECMapID
A.ECFILEROWID      &EcInMapRecField1_ECFileRowID
A.RECNAME          &EcInMapRecField1_RecName
A.FIELDNAME        &EcInMapRecField1_FieldName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcInMapRecField1_ECMapID      (+1,#Start1)
   print &EcInMapRecField1_ECFileRowID  (0,#Start2)
   print &EcInMapRecField1_RecName      (0,#Start3)
   print &EcInMapRecField1_FieldName    (0,#Start4)

FROM PS_ECINMAPRECFLD A
WHERE NOT EXISTS
  (SELECT 'X'
  FROM PS_ECINMAPREC B
  WHERE B.ECMAPID = A.ECMAPID
    AND B.ECFILEROWID = A.ECFILEROWID
    AND B.RECNAME = A.RECNAME)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSECMGR-InMapRecField-RecField-Exist                     !
!                                                                      !
! Descr:     System table audit against PS_ECINMAPRECFLD table:        !
!                                                                      !
!            ECINMPRF-2:  Verifies that the fields on PS_ECINMAPRECFLD !
!                         for a ECMAPID/ECFILEROWID/RECNAME combination!
!                         exist in PSRECFIELD for the target inbound   !
!                         database table specified in PS_ECINMAPREC.   !
!----------------------------------------------------------------------!

#define C_RecName      26
#define C_FieldName    44

begin-procedure SYSECMGR-InMapRecField-RecField-Exist
   move 0 to #rows
   let $AuditDescr = '(ECINMPRF-2) A Field for a Record in '
        || 'PS_ECINMAPRECFLD was not found in PSRECFIELD:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = #Start1 + 13
   let #Start3          = #Start2 + 18
   let #Start4          = #Start3 + 24
   let #numofhdr        =  4

   put 'EC Map ID'        #Start1 10 into printarray(0)
   put 'EC File Row ID'   #Start2 15 into printarray(1)
   put 'Record Name'      #Start3 21 into printarray(2)
   put 'Field Name'       #Start4 21 into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &EcInMapRecField2_ECMapID
A.ECFILEROWID      &EcInMapRecField2_ECFileRowID
A.RECNAME          &EcInMapRecField2_RecName
A.FIELDNAME        &EcInMapRecField2_FieldName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcInMapRecField2_ECMapID      (+1,#Start1)
   print &EcInMapRecField2_ECFileRowID  (0, #Start2)
   print &EcInMapRecField2_RecName      (0, #Start3)
   print &EcInMapRecField2_FieldName    (0, #Start4)

FROM PS_ECINMAPRECFLD A, PS_ECINMAPREC B
WHERE A.ECMAPID = B.ECMAPID
AND A.ECFILEROWID = B.ECFILEROWID
AND A.RECNAME = B.RECNAME
AND NOT EXISTS
  (SELECT 'X'
  FROM PSRECFIELD C
  WHERE C.RECNAME = A.RECNAME
    AND C.FIELDNAME = A.FIELDNAME)
AND NOT EXISTS
  (SELECT 'X'
   FROM PSRECFIELD D
   WHERE D.FIELDNAME = A.FIELDNAME
   AND D.RECNAME IN
    (SELECT E.FIELDNAME
     FROM PSRECFIELD E
     WHERE E.RECNAME = A.RECNAME
     AND E.SUBRECORD = 'Y'))
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSECMGR-InMapRecField-RelRecName-Exist                   !
!                                                                      !
! Descr:     System table audit against PS_ECINMAPRECFLD table:        !
!                                                                      !
!            ECINMPRF-4:  Verifies that each related record in         !
!                         PS_ECINMAPRECFLD exists in PSRECDEFN.        !
!----------------------------------------------------------------------!

#define C_RecName      26
#define C_ECRelRowID   44
#define C_ECRelRecName 57

begin-procedure SYSECMGR-InMapRecField-RelRecName-Exist
   move 0 to #rows
   let $AuditDescr = '(ECINMPRF-4) A related record in '
        || 'PS_ECINMAPRECFLD was not found in PSRECDEFN:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = #Start1 + 13
   let #Start3          = #Start2 + 18
   let #Start4          = #Start3 + 24
   let #Start5          = #Start4 + 20
   let #numofhdr        =  5

   put 'EC Map ID'                  #Start1 10 into printarray(0)
   put 'EC File Row ID'             #Start2 15 into printarray(1)
   put 'Record Name'                #Start3 21 into printarray(2)
   put 'EC Related Row Id'          #Start4 17 into printarray(3)
   put 'EC Related Record Name'     #Start5 23 into printarray(4)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &EcInMapRecField4_ECMapID
A.ECFILEROWID      &EcInMapRecField4_ECFileRowID
A.RECNAME          &EcInMapRecField4_RecName
A.ECRELATEDROWID   &EcInMapRecField4_ECRelRowID
A.ECRELATEDRECNAME &EcInMapRecField4_ECRelRecName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcInMapRecField4_ECMapID      (+1, #Start1)
   print &EcInMapRecField4_ECFileRowID  ( 0, #Start2)
   print &EcInMapRecField4_RecName      ( 0, #Start3)
   print &EcInMapRecField4_ECRelRowID   ( 0, #Start4)
   print &EcInMapRecField4_ECRelRecName ( 0, #Start5)


FROM PS_ECINMAPRECFLD A
WHERE A.ECRELATEDRECNAME <> ' '
AND NOT EXISTS
  (SELECT 'X'
  FROM PSRECDEFN B
  WHERE B.RECNAME = A.ECRELATEDRECNAME)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSECMGR-InMapRecField-RelRecName-Valid                   !
!                                                                      !
! Descr:     System table audit against PS_ECINMAPRECFLD table:        !
!                                                                      !
!            ECINMPRF-5:  Verifies that each related record in         !
!                         PS_ECINMAPRECFLD has a valid EC Related Row  !
!                         ID/EC Related Record combination from        !
!                         PS_ECINMAPREC.                               !
!----------------------------------------------------------------------!

#define C_RecName      26
#define C_ECRelRecName 44
#define C_ECRelRowID   62

begin-procedure SYSECMGR-InMapRecField-RelRecName-Valid
   move 0 to #rows
   let $AuditDescr = '(ECINMPRF-5) An EC Related Record in '
        || 'PS_ECINMAPRECFLD does not have a valid EC Related '
        || 'Row ID from PS_ECINMAPREC:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = #Start1 + 13
   let #Start3          = #Start2 + 18
   let #Start4          = #Start3 + 24
   let #Start5          = #Start4 + 24
   let #numofhdr        =  5

   put 'EC Map ID'                  #Start1 10 into printarray(0)
   put 'EC File Row ID'             #Start2 15 into printarray(1)
   put 'Record Name'                #Start3 21 into printarray(2)
   put 'EC Related Record Name'     #Start4 21 into printarray(3)
   put 'EC Related Row Id'          #Start5 23 into printarray(4)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &EcInMapRecField5_ECMapID
A.ECFILEROWID      &EcInMapRecField5_ECFileRowID
A.RECNAME          &EcInMapRecField5_RecName
A.ECRELATEDRECNAME &EcInMapRecField5_ECRelRecName
A.ECRELATEDROWID   &EcInMapRecField5_ECRelRowID


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcInMapRecField5_ECMapID      (+1, #Start1)
   print &EcInMapRecField5_ECFileRowID  ( 0, #Start2)
   print &EcInMapRecField5_RecName      ( 0, #Start3)
   print &EcInMapRecField5_ECRelRecName ( 0, #Start4)
   print &EcInMapRecField5_ECRelRowID   ( 0, #Start5)

FROM PS_ECINMAPRECFLD A
WHERE A.ECRELATEDROWID <> ' '
AND A.ECRELATEDRECNAME <> ' '
AND NOT EXISTS
  (SELECT 'X'
  FROM PS_ECINMAPREC B
  WHERE B.ECFILEROWID = A.ECRELATEDROWID
  AND B.RECNAME = A.ECRELATEDRECNAME)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSECMGR-InMapRecField-RelFieldName-Exist                 !
!                                                                      !
! Descr:     System table audit against PS_ECINMAPRECFLD table:        !
!                                                                      !
!            ECINMPRF-6:  Verifies that each EC Related Field in       !
!                         PS_ECINMAPRECFLD for a EC Related Row ID/EC  !
!                         Related Record Name combination exists in    !
!                         PSRECFIELD.                                  !
!----------------------------------------------------------------------!

#define C_RecName        26
#define C_ECRelRowID     44
#define C_ECRelRecName   57
#define C_ECRelFieldName 75

begin-procedure SYSECMGR-InMapRecField-RelFieldName-Exist
   move 0 to #rows
   let $AuditDescr = '(ECINMPRF-6) A related field in '
        || 'PS_ECINMAPRECFLD was not found in PSRECFIELD:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = #Start1 + 12
   let #Start3          = #Start2 + 16
   let #Start4          = #Start3 + 23
   let #Start5          = #Start4 + 15
   let #Start6          = #Start5 + 25
   let #numofhdr        =  6

   put 'EC Map ID'                #Start1 10 into printarray(0)
   put 'EC File Row ID '          #Start2 14 into printarray(1)
   put 'Record Name'              #Start3 21 into printarray(2)
   put 'EC Rel Row ID'            #Start4 13 into printarray(3)
   put 'EC Rel Record Name'       #Start5 23 into printarray(4)
   put 'EC Related Field Name'    #Start6 31 into printarray(5)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID            &EcInMapRecField6_ECMapID
A.ECFILEROWID        &EcInMapRecField6_ECFileRowID
A.RECNAME            &EcInMapRecField6_RecName
A.ECRELATEDROWID     &EcInMapRecField6_ECRelRowID
A.ECRELATEDRECNAME   &EcInMapRecField6_ECRelRecName
A.ECRELATEDFIELDNAME &EcInMapRecField6_ECRelFieldName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcInMapRecField6_ECMapID        (+1, #Start1)
   print &EcInMapRecField6_ECFileRowID    ( 0, #Start2)
   print &EcInMapRecField6_RecName        ( 0, #Start3)
   print &EcInMapRecField6_ECRelRowID     ( 0, #Start4)
   print &EcInMapRecField6_ECRelRecName   ( 0, #Start5)
   print &EcInMapRecField6_ECRelFieldName ( 0, #Start6)

FROM PS_ECINMAPRECFLD A, PS_ECINMAPREC B
WHERE A.ECRELATEDROWID = B.ECFILEROWID
AND A.ECRELATEDRECNAME = B.RECNAME
AND A.ECRELATEDFIELDNAME <> ' '
AND NOT EXISTS
  (SELECT 'X'
  FROM PSRECFIELD C
  WHERE C.RECNAME = A.ECRELATEDRECNAME
    AND C.FIELDNAME = A.ECRELATEDFIELDNAME)
AND NOT EXISTS
  (SELECT 'X'
   FROM PSRECFIELD C
   WHERE C.FIELDNAME = A.ECRELATEDFIELDNAME
   AND C.RECNAME IN
    (SELECT D.FIELDNAME
     FROM PSRECFIELD D
     WHERE D.RECNAME = A.ECRELATEDRECNAME
     AND D.SUBRECORD = 'Y'))
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSECMGR-OutMapRec-RecDefn-Exist                          !
!                                                                      !
! Descr:     System table audit against PS_ECOUTMAPREC table:          !
!                                                                      !
!            ECOTMPRC-1: Verify each target outbound record exists in  !
!                        PSRECDEFN.                                    !
!----------------------------------------------------------------------!
begin-procedure SYSECMGR-OutMapRec-RecDefn-Exist
   move 0 to #rows
   let $AuditDescr = '(ECOTMPRC-1) Target outbound records not '
        || 'found in the PSRECDEFN table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = #Start1 + 13
   let #Start3          = #Start2 + 18
   let #numofhdr        =  3

   put 'EC Map ID'        #Start1 10 into printarray(0)
   put 'EC File Row ID'   #Start2 15 into printarray(1)
   put 'Record Name'      #Start3 21 into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &EcOutMapRec1_ECMapID
A.ECFILEROWID      &EcOutMapRec1_ECFileRowID
A.RECNAME          &EcOutMapRec1_RecName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcOutMapRec1_ECMapID       (+1,#Start1)
   print &EcOutMapRec1_ECFileRowID   (0,#Start2)
   print &EcOutMapRec1_RecName       (0,#Start3)

FROM PS_ECOUTMAPREC A
WHERE NOT EXISTS
  (SELECT 'X'
  FROM PSRECDEFN B
  WHERE B.RECNAME = A.RECNAME)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSECMGR-OutMapRec-MapDefn-Exist                          !
!                                                                      !
! Descr:     System table audit against PS_ECOUTMAPREC table:          !
!                                                                      !
!            ECOTMPRC-2: Verify each EC Map ID in PS_ECOUTMAPREC       !
!                         exists in PS_ECMAPDEFN.                      !
!----------------------------------------------------------------------!
begin-procedure SYSECMGR-OutMapRec-MapDefn-Exist
   move 0 to #rows
   let $AuditDescr = '(ECOTMPRC-2) Outbound work record EC Map ID '
        || 'was not found in the PS_ECMAPDEFN table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #numofhdr        =  1

   put 'EC Map ID'        #Start1 10 into printarray(0)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &EcOutMapRec2_ECMapID


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcOutMapRec2_ECMapID       (+1,#Start1)

FROM PS_ECOUTMAPREC A
WHERE NOT EXISTS
  (SELECT 'X'
  FROM PS_ECMAPDEFN B
  WHERE B.ECMAPID = A.ECMAPID)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSECMGR-OutMapRec-RecDefn-RecParent-Exist                !
!                                                                      !
! Descr:     System table audit against PS_ECOUTMAPREC table:          !
!                                                                      !
!            ECOTMPRC-3: Verify each parent record in PS_ECOUTMAPREC   !
!                        exists in PSRECDEFN.                          !
!----------------------------------------------------------------------!

#define C_RecName        26
#define C_RecName_Parent 44

begin-procedure SYSECMGR-OutMapRec-RecDefn-RecParent-Exist
   move 0 to #rows
   let $AuditDescr = '(ECOTMPRC-3) Parent records from the outbound '
        || 'work record not found in the PSRECDEFN table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = #Start1 + 13
   let #Start3          = #Start2 + 18
   let #Start4          = #Start3 + 24
   let #numofhdr        =  4

   put 'EC Map ID'               #Start1 10 into printarray(0)
   put 'EC File Row ID'          #Start2 15 into printarray(1)
   put 'Record Name'             #Start3 21 into printarray(2)
   put 'Parent Record Name'      #Start4 21 into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &EcOutMapRec3_ECMapID
A.ECFILEROWID      &EcOutMapRec3_ECFileRowID
A.RECNAME          &EcOutMapRec3_RecName
A.RECNAME_PARENT   &EcOutMapRec3_RecName_Parent


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcOutMapRec3_ECMapID        (+1, #Start1)
   print &EcOutMapRec3_ECFileRowID    ( 0, #Start2)
   print &EcOutMapRec3_RecName        ( 0, #Start3)
   print &EcOutMapRec3_RecName_Parent ( 0, #Start4)

FROM PS_ECOUTMAPREC A
WHERE A.RECNAME_PARENT <> ' '
AND NOT EXISTS
  (SELECT 'X'
  FROM PSRECDEFN B
  WHERE B.RECNAME = A.RECNAME_PARENT)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSECMGR-OutMapRec-RecDefn-RecFile-Exist                  !
!                                                                      !
! Descr:     System table audit against PS_ECOUTMAPREC table:          !
!                                                                      !
!            ECOTMPRC-4: Verify each file record in PS_ECOUTMAPREC     !
!                        exists in PSRECDEFN.                          !
!----------------------------------------------------------------------!

#define C_RecName       26
#define C_RecName_File  44

begin-procedure SYSECMGR-OutMapRec-RecDefn-RecFile-Exist
   move 0 to #rows
   let $AuditDescr = '(ECOTMPRC-4) File records from the outbound '
        || 'work record not found in the PSRECDEFN table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = #Start1 + 13
   let #Start3          = #Start2 + 18
   let #Start4          = #Start2 + 24
   let #numofhdr        =  4

   put 'EC Map ID'             #Start1 10 into printarray(0)
   put 'EC File Row ID'        #Start2 15 into printarray(1)
   put 'Record Name'           #Start3 21 into printarray(2)
   put 'File Record Name'      #Start4 21 into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &EcOutMapRec4_ECMapID
A.ECFILEROWID      &EcOutMapRec4_ECFileRowID
A.RECNAME          &EcOutMapRec4_RecName
A.RECNAME_FILE     &EcOutMapRec4_RecName_File


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcOutMapRec4_ECMapID        (+1, #Start1)
   print &EcOutMapRec4_ECFileRowID    ( 0, #Start2)
   print &EcOutMapRec4_RecName        ( 0, #Start3)
   print &EcOutMapRec4_RecName_File   ( 0, #Start4)

FROM PS_ECOUTMAPREC A
WHERE NOT EXISTS
  (SELECT 'X'
  FROM PSRECDEFN B
  WHERE B.RECNAME = A.RECNAME_FILE)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSECMGR-OutMapField-OutMapRec-Exist                      !
!                                                                      !
! Descr:     System table audit against PS_ECOUTMAPFLD table:          !
!                                                                      !
!            ECOTMPFD-1: Verify each outbound work record field from   !
!                        PS_ECOUTMAPFLD has a valid EC Map ID and      !
!                        EC File Row ID from the PS_ECOUTMAPREC table. !
!----------------------------------------------------------------------!

#define C_FieldName    26

begin-procedure SYSECMGR-OutMapField-OutMapRec-Exist
   move 0 to #rows
   let $AuditDescr = '(ECOTMPFD-1) Outbound work record fields '
        || 'not found with valid EC Map ID and EC File Row ID '
        || 'combination from the PS_ECOUTMAPREC table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = #Start1 + 13
   let #Start3          = #Start2 + 18
   let #numofhdr        =  3

   put 'EC Map ID'        #Start1 10 into printarray(0)
   put 'EC File Row ID'   #Start2 15 into printarray(1)
   put 'Field Name'       #Start3 31 into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &EcOutMapField1_ECMapID
A.ECFILEROWID      &EcOutMapField1_ECFileRowID
A.FIELDNAME        &EcOutMapField1_FieldName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcOutMapField1_ECMapID      (+1, #Start1)
   print &EcOutMapField1_ECFileRowID  ( 0, #Start2)
   print &EcOutMapField1_FieldName    ( 0, #Start3)

FROM PS_ECOUTMAPFLD A
WHERE NOT EXISTS
  (SELECT 'X'
  FROM PS_ECOUTMAPREC B
  WHERE B.ECMAPID = A.ECMAPID
    AND B.ECFILEROWID = A.ECFILEROWID)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSECMGR-OutMapField-RecField-Exist                       !
!                                                                      !
! Descr:     System table audit against PS_ECOUTMAPFLD table:          !
!                                                                      !
!            ECOTMPFD-2: Verify each outbound work record field from   !
!                        PS_ECOUTMAPFLD exists in PSRECFIELD for valid !
!                        EC Map ID and EC File Row ID combinations.    !
!----------------------------------------------------------------------!

#define C_RecName      26
#define C_FieldName    44

begin-procedure SYSECMGR-OutMapField-RecField-Exist
   move 0 to #rows
   let $AuditDescr = '(ECOTMPFD-2) Outbound work record fields '
        || 'from PS_ECOUTMAPFLD not found in PSRECFIELD:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = #Start1 + 13
   let #Start3          = #Start2 + 18
   let #Start4          = #Start3 + 24
   let #numofhdr        =  4

   put 'EC Map ID'        #Start1 10 into printarray(0)
   put 'EC File Row ID'   #Start2 15 into printarray(1)
   put 'Record Name'      #Start3 21 into printarray(2)
   put 'Field Name'       #Start4 31 into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &EcOutMapField2_ECMapID
A.ECFILEROWID      &EcOutMapField2_ECFileRowID
B.RECNAME          &EcOutMapField2_RecName
A.FIELDNAME        &EcOutMapField2_FieldName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &EcOutMapField2_ECMapID      (+1, #Start1)
   print &EcOutMapField2_ECFileRowID  ( 0, #Start2)
   print &EcOutMapField2_RecName      ( 0, #Start3)
   print &EcOutMapField2_FieldName    ( 0, #Start4)

FROM PS_ECOUTMAPFLD A, PS_ECOUTMAPREC B
WHERE A.ECMAPID = B.ECMAPID
AND A.ECFILEROWID = B.ECFILEROWID
AND A.ECFIELDVALUECD IN ('R', 'T', 'V')
AND NOT EXISTS
  (SELECT 'X'
  FROM PSRECFIELD C
  WHERE C.RECNAME = B.RECNAME
    AND C.FIELDNAME = A.FIELDNAME)
AND NOT EXISTS
  (SELECT 'X'
   FROM PSRECFIELD D
   WHERE D.FIELDNAME = A.FIELDNAME
   AND D.RECNAME IN
    (SELECT E.FIELDNAME
     FROM PSRECFIELD E
     WHERE E.RECNAME = B.RECNAME
     AND E.SUBRECORD = 'Y'))
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSECMGR-ECMFIELD-DOESNOT-EXSIST-DBFIELD                  !
!                                                                      !
! Descr:     System table audit against PS_ECINMAPFLD table:           !
!                                                                      !
!            SYSECMGR-1: Verify the the inbound work record field(s)   !
!                        exist in the field definitions in PSDBFIELD.  !
!----------------------------------------------------------------------!

#define C_FieldName    26
#define C_FieldType    47

begin-procedure SYSECMGR-ECMFIELD-DOESNOT-EXSIST-DBFIELD
   move 0 to #rows
   let $AuditDescr = '(SYSECMGR-1) Inbound work record field '
        || 'does not exist in type definitions in PSDBFIELD. '



#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = #Start1 + 13
   let #Start3          = #Start2 + 18
   let #Start4          = #Start3 + 34

   let #numofhdr        =  4

   put 'EC Map ID'        #Start1 10 into printarray(0)
   put 'EC File Row ID'   #Start2 15 into printarray(1)
   put 'Field Name'       #Start3 31 into printarray(2)
   put 'Field Type'       #Start4 11 into printarray(3)
   put 'DB Field Type'    #Start5 14 into printarray(4)

begin-SELECT on-Error=Rpt-SQL-Error
A.ECMAPID          &SYSECMGR1_ECMapID
A.ECFILEROWID      &SYSECMGR1_ECFileRowID
A.FIELDNAME        &SYSECMGR1_FieldName
A.FIELDTYPE        &SYSECMGR1_FieldType

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &SYSECMGR1_ECMapID      (+1, #Start1)
   print &SYSECMGR1_ECFileRowID  ( 0, #Start2)
   print &SYSECMGR1_FieldName    ( 0, #Start3)
   print &SYSECMGR1_FieldType    ( 0, #Start4)


FROM PS_ECINMAPFLD A
WHERE A.FIELDNAME  not in
(SELECT B.FIELDNAME
 FROM PSDBFIELD B)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


